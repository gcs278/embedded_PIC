

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Tue Feb 04 16:33:25 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    68  0000                     _INTCONbits	set	4082
    69  0000                     _IPR1bits	set	3999
    70  0000                     _LATB	set	3978
    71  0000                     _LATBbits	set	3978
    72  0000                     _OSCCON	set	4051
    73  0000                     _OSCCONbits	set	4051
    74  0000                     _OSCTUNEbits	set	3995
    75  0000                     _PIE1bits	set	3997
    76  0000                     _PIR1bits	set	3998
    77  0000                     _RCONbits	set	4048
    78  0000                     _RCREG	set	4014
    79  0000                     _RCSTA	set	4011
    80  0000                     _RCSTAbits	set	4011
    81  0000                     _SPBRG	set	4015
    82  0000                     _SPBRGH	set	4016
    83  0000                     _SSPADD	set	4040
    84  0000                     _SSPBUF	set	4041
    85  0000                     _SSPCON1	set	4038
    86  0000                     _SSPCON1bits	set	4038
    87  0000                     _SSPCON2	set	4037
    88  0000                     _SSPCON2bits	set	4037
    89  0000                     _SSPSTAT	set	4039
    90  0000                     _SSPSTATbits	set	4039
    91  0000                     _T1CON	set	4045
    92  0000                     _T1CONbits	set	4045
    93  0000                     _TMR0H	set	4055
    94  0000                     _TMR0L	set	4054
    95  0000                     _TMR1H	set	4047
    96  0000                     _TMR1L	set	4046
    97  0000                     _TRISB	set	3987
    98  0000                     _TRISCbits	set	3988
    99  0000                     _TXSTA	set	4012
   100  0000                     _TXSTAbits	set	4012
   101                           
   102                           	psect	nvCOMRAM
   103  00004D                     __pnvCOMRAM:
   104                           	opt stack 0
   105  00004D                     _uc_ptr:
   106                           	opt stack 0
   107  00004D                     	ds	2
   108                           
   109                           	psect	nvBANK0
   110  0000E7                     __pnvBANK0:
   111                           	opt stack 0
   112  0000E7                     _ic_ptr:
   113                           	opt stack 0
   114  0000E7                     	ds	2
   115                           
   116                           ; #config settings
   117  0000                     
   118                           	psect	cinit
   119  0018AC                     __pcinit:
   120                           	opt stack 0
   121  0018AC                     start_initialization:
   122                           	opt stack 0
   123  0018AC                     __initialization:
   124                           	opt stack 0
   125                           
   126                           ; Clear objects allocated to BANK1 (162 bytes)
   127  0018AC  EE01  F000         	lfsr	0,__pbssBANK1
   128  0018B0  0EA2               	movlw	162
   129  0018B2                     clear_0:
   130  0018B2  6AEE               	clrf	postinc0,c
   131  0018B4  06E8               	decf	wreg,f,c
   132  0018B6  E1FD               	bnz	clear_0
   133                           
   134                           ; Clear objects allocated to BANK0 (54 bytes)
   135  0018B8  EE00  F080         	lfsr	0,__pbssBANK0
   136  0018BC  0E36               	movlw	54
   137  0018BE                     clear_1:
   138  0018BE  6AEE               	clrf	postinc0,c
   139  0018C0  06E8               	decf	wreg,f,c
   140  0018C2  E1FD               	bnz	clear_1
   141                           
   142                           ; Clear objects allocated to COMRAM (2 bytes)
   143  0018C4  6A50               	clrf	(__pbssCOMRAM+1)& (0+255),c
   144  0018C6  6A4F               	clrf	__pbssCOMRAM& (0+255),c
   145  0018C8                     end_of_initialization:
   146                           	opt stack 0
   147  0018C8                     __end_of__initialization:
   148                           	opt stack 0
   149  0018C8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   150  0018CA  6EF8               	movwf	tblptru,c
   151  0018CC  0100               	movlb	0
   152  0018CE  EF4C  F003         	goto	_main	;jump to C main() function
   153                           tblptru	equ	0xFF8
   154                           postinc0	equ	0xFEE
   155                           wreg	equ	0xFE8
   156                           
   157                           	psect	bssCOMRAM
   158  00004F                     __pbssCOMRAM:
   159                           	opt stack 0
   160  00004F                     _MQ_Main_Willing_to_block:
   161                           	opt stack 0
   162  00004F                     	ds	1
   163  000050                     _USART_Status:
   164                           	opt stack 0
   165  000050                     	ds	1
   166                           tblptru	equ	0xFF8
   167                           postinc0	equ	0xFEE
   168                           wreg	equ	0xFE8
   169                           
   170                           	psect	bssBANK0
   171  000080                     __pbssBANK0:
   172                           	opt stack 0
   173  000080                     _ToMainLow_MQ:
   174                           	opt stack 0
   175  000080                     	ds	54
   176                           tblptru	equ	0xFF8
   177                           postinc0	equ	0xFEE
   178                           wreg	equ	0xFE8
   179                           
   180                           	psect	bssBANK1
   181  000100                     __pbssBANK1:
   182                           	opt stack 0
   183  000100                     _FromMainHigh_MQ:
   184                           	opt stack 0
   185  000100                     	ds	54
   186  000136                     _FromMainLow_MQ:
   187                           	opt stack 0
   188  000136                     	ds	54
   189  00016C                     _ToMainHigh_MQ:
   190                           	opt stack 0
   191  00016C                     	ds	54
   192                           tblptru	equ	0xFF8
   193                           postinc0	equ	0xFEE
   194                           wreg	equ	0xFE8
   195                           
   196                           	psect	cstackBANK1
   197  0001A2                     __pcstackBANK1:
   198                           	opt stack 0
   199  0001A2                     ToMainLow_recvmsg@msgtype:
   200                           	opt stack 0
   201  0001A2                     ToMainHigh_recvmsg@msgtype:
   202                           	opt stack 0
   203  0001A2                     timer1_lthread@tptr:
   204                           	opt stack 0
   205                           
   206                           ; 2 bytes @ 0x0
   207  0001A2                     	ds	2
   208  0001A4                     ToMainLow_recvmsg@data:
   209                           	opt stack 0
   210  0001A4                     ToMainHigh_recvmsg@data:
   211                           	opt stack 0
   212  0001A4                     timer1_lthread@msgtype:
   213                           	opt stack 0
   214                           
   215                           ; 2 bytes @ 0x2
   216  0001A4                     	ds	2
   217  0001A6                     timer1_lthread@length:
   218                           	opt stack 0
   219                           
   220                           ; 2 bytes @ 0x4
   221  0001A6                     	ds	2
   222  0001A8                     timer1_lthread@msgbuffer:
   223                           	opt stack 0
   224                           
   225                           ; 2 bytes @ 0x6
   226  0001A8                     	ds	2
   227  0001AA                     ??_timer1_lthread:
   228                           
   229                           ; 0 bytes @ 0x8
   230  0001AA                     	ds	1
   231  0001AB                     timer1_lthread@retval:
   232                           	opt stack 0
   233                           
   234                           ; 1 bytes @ 0x9
   235  0001AB                     	ds	1
   236  0001AC                     ??_main:
   237                           
   238                           ; 0 bytes @ 0xA
   239  0001AC                     	ds	1
   240  0001AD                     main@msgbuffer:
   241                           	opt stack 0
   242                           
   243                           ; 11 bytes @ 0xB
   244  0001AD                     	ds	11
   245  0001B8                     main@uthread_data:
   246                           	opt stack 0
   247                           
   248                           ; 2 bytes @ 0x16
   249  0001B8                     	ds	2
   250  0001BA                     main@t0thread_data:
   251                           	opt stack 0
   252                           
   253                           ; 2 bytes @ 0x18
   254  0001BA                     	ds	2
   255  0001BC                     main@last_reg_recvd:
   256                           	opt stack 0
   257                           
   258                           ; 1 bytes @ 0x1A
   259  0001BC                     	ds	1
   260  0001BD                     main@uc:
   261                           	opt stack 0
   262                           
   263                           ; 5 bytes @ 0x1B
   264  0001BD                     	ds	5
   265  0001C2                     main@t1thread_data:
   266                           	opt stack 0
   267                           
   268                           ; 2 bytes @ 0x20
   269  0001C2                     	ds	2
   270  0001C4                     main@msgtype:
   271                           	opt stack 0
   272                           
   273                           ; 1 bytes @ 0x22
   274  0001C4                     	ds	1
   275  0001C5                     main@length:
   276                           	opt stack 0
   277                           
   278                           ; 1 bytes @ 0x23
   279  0001C5                     	ds	1
   280  0001C6                     main@ic:
   281                           	opt stack 0
   282                           
   283                           ; 28 bytes @ 0x24
   284  0001C6                     	ds	28
   285                           tblptru	equ	0xFF8
   286                           postinc0	equ	0xFEE
   287                           wreg	equ	0xFE8
   288                           
   289                           	psect	cstackBANK0
   290  0000B6                     __pcstackBANK0:
   291                           	opt stack 0
   292  0000B6                     timer0_int_handler@length:
   293                           	opt stack 0
   294  0000B6                     i2c_int_handler@error_buf:
   295                           	opt stack 0
   296                           
   297                           ; 3 bytes @ 0x0
   298  0000B6                     	ds	2
   299  0000B8                     timer0_int_handler@msgtype:
   300                           	opt stack 0
   301                           
   302                           ; 2 bytes @ 0x2
   303  0000B8                     	ds	1
   304  0000B9                     i2c_int_handler@data_written:
   305                           	opt stack 0
   306                           
   307                           ; 1 bytes @ 0x3
   308  0000B9                     	ds	1
   309  0000BA                     i2c_int_handler@overrun_error:
   310                           	opt stack 0
   311  0000BA                     timer0_int_handler@val:
   312                           	opt stack 0
   313                           
   314                           ; 2 bytes @ 0x4
   315  0000BA                     	ds	1
   316  0000BB                     i2c_int_handler@i2c_data:
   317                           	opt stack 0
   318                           
   319                           ; 1 bytes @ 0x5
   320  0000BB                     	ds	1
   321  0000BC                     i2c_int_handler@msg_to_send:
   322                           	opt stack 0
   323                           
   324                           ; 1 bytes @ 0x6
   325  0000BC                     	ds	1
   326  0000BD                     i2c_int_handler@msg_ready:
   327                           	opt stack 0
   328                           
   329                           ; 1 bytes @ 0x7
   330  0000BD                     	ds	1
   331  0000BE                     i2c_int_handler@data_read:
   332                           	opt stack 0
   333                           
   334                           ; 1 bytes @ 0x8
   335  0000BE                     	ds	1
   336  0000BF                     ??_InterruptHandlerHigh:
   337                           
   338                           ; 0 bytes @ 0x9
   339  0000BF                     	ds	14
   340  0000CD                     ?_in_high_int:
   341                           	opt stack 0
   342  0000CD                     ?___lwmod:
   343                           	opt stack 0
   344  0000CD                     i2c_configure_slave@addr:
   345                           	opt stack 0
   346  0000CD                     OpenTimer1@config:
   347                           	opt stack 0
   348  0000CD                     Delay1KTCYx@unit:
   349                           	opt stack 0
   350  0000CD                     init_queue@qptr:
   351                           	opt stack 0
   352  0000CD                     check_msg@qptr:
   353                           	opt stack 0
   354  0000CD                     start_i2c_slave_reply@msg:
   355                           	opt stack 0
   356  0000CD                     init_i2c@ic:
   357                           	opt stack 0
   358  0000CD                     init_uart_recv@uc:
   359                           	opt stack 0
   360  0000CD                     timer0_lthread@tptr:
   361                           	opt stack 0
   362  0000CD                     init_timer1_lthread@tptr:
   363                           	opt stack 0
   364  0000CD                     uart_lthread@uptr:
   365                           	opt stack 0
   366  0000CD                     OpenUSART@spbrg:
   367                           	opt stack 0
   368  0000CD                     ___lwmod@dividend:
   369                           	opt stack 0
   370  0000CD                     memcpy@d1:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x17
   374  0000CD                     	ds	2
   375  0000CF                     ??_OpenUSART:
   376  0000CF                     ??_start_i2c_slave_reply:
   377  0000CF                     ??_init_queue:
   378  0000CF                     ??_check_msg:
   379  0000CF                     ?_in_low_int:
   380                           	opt stack 0
   381  0000CF                     timer0_lthread@msgtype:
   382                           	opt stack 0
   383  0000CF                     uart_lthread@msgtype:
   384                           	opt stack 0
   385  0000CF                     ___lwmod@divisor:
   386                           	opt stack 0
   387  0000CF                     memcpy@s1:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0x19
   391  0000CF                     	ds	1
   392  0000D0                     init_queue@i:
   393                           	opt stack 0
   394                           
   395                           ; 1 bytes @ 0x1A
   396  0000D0                     	ds	1
   397  0000D1                     ??_init_queues:
   398  0000D1                     ??___lwmod:
   399  0000D1                     ?_in_main:
   400                           	opt stack 0
   401  0000D1                     start_i2c_slave_reply@length:
   402                           	opt stack 0
   403  0000D1                     timer0_lthread@length:
   404                           	opt stack 0
   405  0000D1                     uart_lthread@length:
   406                           	opt stack 0
   407  0000D1                     memcpy@n:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x1B
   411  0000D1                     	ds	1
   412  0000D2                     OpenUSART@config:
   413                           	opt stack 0
   414  0000D2                     ___lwmod@counter:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x1C
   418  0000D2                     	ds	1
   419  0000D3                     ??_block_on_To_msgqueues:
   420  0000D3                     timer0_lthread@msgbuffer:
   421                           	opt stack 0
   422  0000D3                     uart_lthread@msgbuffer:
   423                           	opt stack 0
   424  0000D3                     memcpy@d:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x1D
   428  0000D3                     	ds	2
   429  0000D5                     timer0_lthread@msgval:
   430                           	opt stack 0
   431  0000D5                     memcpy@s:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x1F
   435  0000D5                     	ds	2
   436  0000D7                     send_msg@qptr:
   437                           	opt stack 0
   438  0000D7                     recv_msg@qptr:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0x21
   442  0000D7                     	ds	2
   443  0000D9                     send_msg@length:
   444                           	opt stack 0
   445  0000D9                     recv_msg@maxlength:
   446                           	opt stack 0
   447                           
   448                           ; 1 bytes @ 0x23
   449  0000D9                     	ds	1
   450  0000DA                     send_msg@msgtype:
   451                           	opt stack 0
   452  0000DA                     recv_msg@msgtype:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0x24
   456  0000DA                     	ds	1
   457  0000DB                     send_msg@data:
   458                           	opt stack 0
   459                           
   460                           ; 2 bytes @ 0x25
   461  0000DB                     	ds	1
   462  0000DC                     recv_msg@data:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x26
   466  0000DC                     	ds	1
   467  0000DD                     ??_send_msg:
   468                           
   469                           ; 0 bytes @ 0x27
   470  0000DD                     	ds	1
   471  0000DE                     ??_recv_msg:
   472  0000DE                     send_msg@tlength:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x28
   476  0000DE                     	ds	2
   477  0000E0                     send_msg@slot:
   478                           	opt stack 0
   479  0000E0                     recv_msg@slot:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0x2A
   483  0000E0                     	ds	1
   484  0000E1                     send_msg@qmsg:
   485                           	opt stack 0
   486  0000E1                     recv_msg@tlength:
   487                           	opt stack 0
   488                           
   489                           ; 2 bytes @ 0x2B
   490  0000E1                     	ds	2
   491  0000E3                     FromMainHigh_sendmsg@msgtype:
   492                           	opt stack 0
   493  0000E3                     recv_msg@qmsg:
   494                           	opt stack 0
   495                           
   496                           ; 2 bytes @ 0x2D
   497  0000E3                     	ds	1
   498  0000E4                     FromMainHigh_sendmsg@data:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x2E
   502  0000E4                     	ds	1
   503  0000E5                     ToMainLow_recvmsg@maxlength:
   504                           	opt stack 0
   505  0000E5                     ToMainHigh_recvmsg@maxlength:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0x2F
   509  0000E5                     	ds	1
   510  0000E6                     FromMainHigh_sendmsg@length:
   511                           	opt stack 0
   512                           
   513                           ; 1 bytes @ 0x30
   514  0000E6                     	ds	1
   515                           tblptru	equ	0xFF8
   516                           postinc0	equ	0xFEE
   517                           wreg	equ	0xFE8
   518                           
   519                           	psect	cstackCOMRAM
   520  000001                     __pcstackCOMRAM:
   521                           	opt stack 0
   522  000001                     ?_ReadTimer1:
   523                           	opt stack 0
   524  000001                     ReadUSART@data:
   525                           	opt stack 0
   526  000001                     WriteTimer1@timer1:
   527                           	opt stack 0
   528  000001                     i1memcpy@d1:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x0
   532  000001                     	ds	2
   533  000003                     ReadTimer1@timer:
   534                           	opt stack 0
   535  000003                     WriteTimer1@timer:
   536                           	opt stack 0
   537  000003                     i1memcpy@s1:
   538                           	opt stack 0
   539                           
   540                           ; 2 bytes @ 0x2
   541  000003                     	ds	2
   542  000005                     i1memcpy@n:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0x4
   546  000005                     	ds	2
   547  000007                     i1memcpy@d:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x6
   551  000007                     	ds	2
   552  000009                     i1memcpy@s:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0x8
   556  000009                     	ds	2
   557  00000B                     i1send_msg@qptr:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0xA
   561  00000B                     	ds	2
   562  00000D                     i1send_msg@length:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0xC
   566  00000D                     	ds	1
   567  00000E                     i1send_msg@msgtype:
   568                           	opt stack 0
   569                           
   570                           ; 1 bytes @ 0xD
   571  00000E                     	ds	1
   572  00000F                     i1send_msg@data:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0xE
   576  00000F                     	ds	2
   577  000011                     ??i1_send_msg:
   578                           
   579                           ; 0 bytes @ 0x10
   580  000011                     	ds	1
   581  000012                     i1send_msg@tlength:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0x11
   585  000012                     	ds	2
   586  000014                     i1send_msg@slot:
   587                           	opt stack 0
   588                           
   589                           ; 1 bytes @ 0x13
   590  000014                     	ds	1
   591  000015                     i1send_msg@qmsg:
   592                           	opt stack 0
   593                           
   594                           ; 2 bytes @ 0x14
   595  000015                     	ds	2
   596  000017                     ToMainLow_sendmsg@msgtype:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0x16
   600  000017                     	ds	1
   601  000018                     ToMainLow_sendmsg@data:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x17
   605  000018                     	ds	2
   606  00001A                     ToMainLow_sendmsg@length:
   607                           	opt stack 0
   608                           
   609                           ; 1 bytes @ 0x19
   610  00001A                     	ds	1
   611  00001B                     ??_timer1_int_handler:
   612  00001B                     ??_uart_recv_int_handler:
   613                           
   614                           ; 0 bytes @ 0x1A
   615  00001B                     	ds	1
   616  00001C                     timer1_int_handler@result:
   617                           	opt stack 0
   618                           
   619                           ; 2 bytes @ 0x1B
   620  00001C                     	ds	2
   621  00001E                     ??_InterruptHandlerLow:
   622                           
   623                           ; 0 bytes @ 0x1D
   624  00001E                     	ds	17
   625  00002F                     ?i2_in_high_int:
   626                           	opt stack 0
   627  00002F                     handle_start@data_read:
   628                           	opt stack 0
   629  00002F                     WriteTimer0@timer0:
   630                           	opt stack 0
   631  00002F                     i2check_msg@qptr:
   632                           	opt stack 0
   633  00002F                     i2memcpy@d1:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0x2E
   637  00002F                     	ds	2
   638  000031                     ??i2_check_msg:
   639  000031                     ?i2_in_low_int:
   640                           	opt stack 0
   641  000031                     WriteTimer0@timer:
   642                           	opt stack 0
   643  000031                     i2memcpy@s1:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x30
   647  000031                     	ds	2
   648  000033                     i2memcpy@n:
   649                           	opt stack 0
   650                           
   651                           ; 2 bytes @ 0x32
   652  000033                     	ds	2
   653  000035                     i2memcpy@d:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x34
   657  000035                     	ds	2
   658  000037                     i2memcpy@s:
   659                           	opt stack 0
   660                           
   661                           ; 2 bytes @ 0x36
   662  000037                     	ds	2
   663  000039                     i2send_msg@qptr:
   664                           	opt stack 0
   665  000039                     i2recv_msg@qptr:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x38
   669  000039                     	ds	2
   670  00003B                     i2send_msg@length:
   671                           	opt stack 0
   672  00003B                     i2recv_msg@maxlength:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x3A
   676  00003B                     	ds	1
   677  00003C                     i2send_msg@msgtype:
   678                           	opt stack 0
   679  00003C                     i2recv_msg@msgtype:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0x3B
   683  00003C                     	ds	1
   684  00003D                     i2send_msg@data:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0x3C
   688  00003D                     	ds	1
   689  00003E                     i2recv_msg@data:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x3D
   693  00003E                     	ds	1
   694  00003F                     ??i2_send_msg:
   695                           
   696                           ; 0 bytes @ 0x3E
   697  00003F                     	ds	1
   698  000040                     ??i2_recv_msg:
   699  000040                     i2send_msg@tlength:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x3F
   703  000040                     	ds	2
   704  000042                     i2send_msg@slot:
   705                           	opt stack 0
   706  000042                     i2recv_msg@slot:
   707                           	opt stack 0
   708                           
   709                           ; 1 bytes @ 0x41
   710  000042                     	ds	1
   711  000043                     i2send_msg@qmsg:
   712                           	opt stack 0
   713  000043                     i2recv_msg@tlength:
   714                           	opt stack 0
   715                           
   716                           ; 2 bytes @ 0x42
   717  000043                     	ds	2
   718  000045                     ToMainHigh_sendmsg@msgtype:
   719                           	opt stack 0
   720  000045                     i2recv_msg@qmsg:
   721                           	opt stack 0
   722                           
   723                           ; 2 bytes @ 0x44
   724  000045                     	ds	1
   725  000046                     ToMainHigh_sendmsg@data:
   726                           	opt stack 0
   727                           
   728                           ; 2 bytes @ 0x45
   729  000046                     	ds	1
   730  000047                     FromMainHigh_recvmsg@msgtype:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0x46
   734  000047                     	ds	1
   735  000048                     ToMainHigh_sendmsg@length:
   736                           	opt stack 0
   737                           
   738                           ; 1 bytes @ 0x47
   739  000048                     	ds	1
   740  000049                     ??_i2c_int_handler:
   741  000049                     FromMainHigh_recvmsg@data:
   742                           	opt stack 0
   743                           
   744                           ; 2 bytes @ 0x48
   745  000049                     	ds	2
   746  00004B                     FromMainHigh_recvmsg@maxlength:
   747                           	opt stack 0
   748                           
   749                           ; 1 bytes @ 0x4A
   750  00004B                     	ds	1
   751  00004C                     ??_timer0_int_handler:
   752                           
   753                           ; 0 bytes @ 0x4B
   754  00004C                     	ds	1
   755                           tblptru	equ	0xFF8
   756                           postinc0	equ	0xFEE
   757                           wreg	equ	0xFE8
   758                           
   759 ;;
   760 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   761 ;;
   762 ;; *************** function _main *****************
   763 ;; Defined at:
   764 ;;		line 79 in file "../src/main.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;		None
   767 ;; Auto vars:     Size  Location     Type
   768 ;;  ic             28   36[BANK1 ] struct __i2c_comm
   769 ;;  msgbuffer      11   11[BANK1 ] unsigned char [11]
   770 ;;  uc              5   27[BANK1 ] struct __uart_comm
   771 ;;  t1thread_dat    2   32[BANK1 ] struct __timer1_thread_s
   772 ;;  t0thread_dat    2   24[BANK1 ] struct __timer0_thread_s
   773 ;;  uthread_data    2   22[BANK1 ] struct __uart_thread_str
   774 ;;  length          1   35[BANK1 ] char 
   775 ;;  msgtype         1   34[BANK1 ] unsigned char 
   776 ;;  last_reg_rec    1   26[BANK1 ] unsigned char 
   777 ;;  i               1    0        unsigned char 
   778 ;;  c               1    0        unsigned char 
   779 ;; Return value:  Size  Location     Type
   780 ;;		None               void
   781 ;; Registers used:
   782 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   788 ;;      Params:         0       0       0       0       0
   789 ;;      Locals:         0       0      53       0       0
   790 ;;      Temps:          0       0       1       0       0
   791 ;;      Totals:         0       0      54       0       0
   792 ;;Total ram usage:       54 bytes
   793 ;; Hardware stack levels required when called:   14
   794 ;; This function calls:
   795 ;;		_OpenTimer1
   796 ;;		_OpenUSART
   797 ;;		_ToMainHigh_recvmsg
   798 ;;		_ToMainLow_recvmsg
   799 ;;		_block_on_To_msgqueues
   800 ;;		_enable_interrupts
   801 ;;		_i2c_configure_slave
   802 ;;		_init_i2c
   803 ;;		_init_queues
   804 ;;		_init_timer1_lthread
   805 ;;		_init_uart_recv
   806 ;;		_start_i2c_slave_reply
   807 ;;		_timer0_lthread
   808 ;;		_timer1_lthread
   809 ;;		_uart_lthread
   810 ;; This function is called by:
   811 ;;		Startup code after reset
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           	psect	text0
   816  000698                     __ptext0:
   817                           	opt stack 0
   818  000698                     _main:
   819                           	opt stack 16
   820                           
   821                           ;main.c: 80: char c;
   822                           ;main.c: 81: signed char length;
   823                           ;main.c: 82: unsigned char msgtype;
   824                           ;main.c: 83: unsigned char last_reg_recvd;
   825                           ;main.c: 84: uart_comm uc;
   826                           ;main.c: 85: i2c_comm ic;
   827                           ;main.c: 86: unsigned char msgbuffer[10 + 1];
   828                           ;main.c: 87: unsigned char i;
   829                           ;main.c: 88: uart_thread_struct uthread_data;
   830                           ;main.c: 89: timer1_thread_struct t1thread_data;
   831                           ;main.c: 90: timer0_thread_struct t0thread_data;
   832                           ;main.c: 97: OSCCON = 0x82;
   833                           
   834                           ;incstack = 0
   835  000698  0E82               	movlw	130
   836  00069A  6ED3               	movwf	4051,c	;volatile
   837                           
   838                           ;main.c: 98: OSCTUNEbits.PLLEN = 0;
   839  00069C  9C9B               	bcf	3995,6,c	;volatile
   840                           
   841                           ;main.c: 102: init_uart_recv(&uc);
   842  00069E  0101               	movlb	1	; () banked
   843  0006A0  0E01               	movlw	high main@uc
   844  0006A2  0100               	movlb	0	; () banked
   845  0006A4  0100               	movlb	0	; () banked
   846  0006A6  6FCE               	movwf	(init_uart_recv@uc+1)& (0+255),b
   847  0006A8  0101               	movlb	1	; () banked
   848  0006AA  0EBD               	movlw	low main@uc
   849  0006AC  0100               	movlb	0	; () banked
   850  0006AE  0100               	movlb	0	; () banked
   851  0006B0  6FCD               	movwf	init_uart_recv@uc& (0+255),b
   852  0006B2  ECA1  F00C         	call	_init_uart_recv	;wreg free
   853                           
   854                           ;main.c: 105: init_i2c(&ic);
   855  0006B6  0101               	movlb	1	; () banked
   856  0006B8  0E01               	movlw	high main@ic
   857  0006BA  0100               	movlb	0	; () banked
   858  0006BC  0100               	movlb	0	; () banked
   859  0006BE  6FCE               	movwf	(init_i2c@ic+1)& (0+255),b
   860  0006C0  0101               	movlb	1	; () banked
   861  0006C2  0EC6               	movlw	low main@ic
   862  0006C4  0100               	movlb	0	; () banked
   863  0006C6  0100               	movlb	0	; () banked
   864  0006C8  6FCD               	movwf	init_i2c@ic& (0+255),b
   865  0006CA  EC2F  F00A         	call	_init_i2c	;wreg free
   866                           
   867                           ;main.c: 108: init_timer1_lthread(&t1thread_data);
   868  0006CE  0101               	movlb	1	; () banked
   869  0006D0  0E01               	movlw	high main@t1thread_data
   870  0006D2  0100               	movlb	0	; () banked
   871  0006D4  0100               	movlb	0	; () banked
   872  0006D6  6FCE               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   873  0006D8  0101               	movlb	1	; () banked
   874  0006DA  0EC2               	movlw	low main@t1thread_data
   875  0006DC  0100               	movlb	0	; () banked
   876  0006DE  0100               	movlb	0	; () banked
   877  0006E0  6FCD               	movwf	init_timer1_lthread@tptr& (0+255),b
   878  0006E2  ECD3  F00C         	call	_init_timer1_lthread	;wreg free
   879                           
   880                           ;main.c: 111: init_queues();
   881  0006E6  ECF8  F009         	call	_init_queues	;wreg free
   882                           
   883                           ;main.c: 114: TRISB = 0x0;
   884  0006EA  0E00               	movlw	0
   885  0006EC  6E93               	movwf	3987,c	;volatile
   886                           
   887                           ;main.c: 115: LATB = 0x0;
   888  0006EE  0E00               	movlw	0
   889  0006F0  6E8A               	movwf	3978,c	;volatile
   890                           
   891                           ;main.c: 128: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
   892  0006F2  0EF5               	movlw	245
   893  0006F4  ECC4  F00B         	call	_OpenTimer1
   894                           
   895                           ;main.c: 132: enable_interrupts();
   896  0006F8  EC06  F00D         	call	_enable_interrupts	;wreg free
   897                           
   898                           ;main.c: 137: IPR1bits.TMR1IP = 0;
   899  0006FC  909F               	bcf	3999,0,c	;volatile
   900                           
   901                           ;main.c: 139: IPR1bits.RCIP = 0;
   902  0006FE  9A9F               	bcf	3999,5,c	;volatile
   903                           
   904                           ;main.c: 141: IPR1bits.SSPIP = 1;
   905  000700  869F               	bsf	3999,3,c	;volatile
   906                           
   907                           ;main.c: 150: i2c_configure_slave(0x9E);
   908  000702  0E9E               	movlw	158
   909  000704  EC42  F00C         	call	_i2c_configure_slave
   910                           
   911                           ;main.c: 163: PIE1bits.SSPIE = 1;
   912  000708  869D               	bsf	3997,3,c	;volatile
   913                           
   914                           ;main.c: 166: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
   915                           ;main.c: 167: 0b11111111 & 0b11101111, 0x19);
   916  00070A  0E00               	movlw	0
   917  00070C  0100               	movlb	0	; () banked
   918  00070E  0100               	movlb	0	; () banked
   919  000710  6FCE               	movwf	(OpenUSART@spbrg+1)& (0+255),b
   920  000712  0E19               	movlw	25
   921  000714  0100               	movlb	0	; () banked
   922  000716  6FCD               	movwf	OpenUSART@spbrg& (0+255),b
   923  000718  0E6C               	movlw	108
   924  00071A  EC76  F008         	call	_OpenUSART
   925  00071E                     l2844:
   926                           
   927                           ;main.c: 191: block_on_To_msgqueues();
   928  00071E  ECD5  F007         	call	_block_on_To_msgqueues	;wreg free
   929                           
   930                           ;main.c: 198: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
   931  000722  0101               	movlb	1	; () banked
   932  000724  0E01               	movlw	high main@msgtype
   933  000726  0101               	movlb	1	; () banked
   934  000728  0101               	movlb	1	; () banked
   935  00072A  6FA3               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
   936  00072C  0101               	movlb	1	; () banked
   937  00072E  0EC4               	movlw	low main@msgtype
   938  000730  0101               	movlb	1	; () banked
   939  000732  0101               	movlb	1	; () banked
   940  000734  6FA2               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
   941  000736  0101               	movlb	1	; () banked
   942  000738  0E01               	movlw	high main@msgbuffer
   943  00073A  0101               	movlb	1	; () banked
   944  00073C  0101               	movlb	1	; () banked
   945  00073E  6FA5               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
   946  000740  0101               	movlb	1	; () banked
   947  000742  0EAD               	movlw	low main@msgbuffer
   948  000744  0101               	movlb	1	; () banked
   949  000746  0101               	movlb	1	; () banked
   950  000748  6FA4               	movwf	ToMainHigh_recvmsg@data& (0+255),b
   951  00074A  0E0A               	movlw	10
   952  00074C  EC44  F00B         	call	_ToMainHigh_recvmsg
   953  000750  0101               	movlb	1	; () banked
   954  000752  0101               	movlb	1	; () banked
   955  000754  6FC5               	movwf	main@length& (0+255),b
   956                           
   957                           ; BSR set to: 1
   958                           ;main.c: 199: if (length < 0) {
   959  000756  0101               	movlb	1	; () banked
   960  000758  0101               	movlb	1	; () banked
   961  00075A  BFC5               	btfsc	main@length& (0+255),7,b
   962  00075C  D08D               	goto	l2870
   963  00075E  D07D               	goto	l2868
   964  000760                     l2852:
   965                           
   966                           ; BSR set to: 1
   967                           ;main.c: 207: {
   968                           ;main.c: 208: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
   969  000760  0101               	movlb	1	; () banked
   970  000762  0E01               	movlw	high main@t0thread_data
   971  000764  0100               	movlb	0	; () banked
   972  000766  0100               	movlb	0	; () banked
   973  000768  6FCE               	movwf	(timer0_lthread@tptr+1)& (0+255),b
   974  00076A  0101               	movlb	1	; () banked
   975  00076C  0EBA               	movlw	low main@t0thread_data
   976  00076E  0100               	movlb	0	; () banked
   977  000770  0100               	movlb	0	; () banked
   978  000772  6FCD               	movwf	timer0_lthread@tptr& (0+255),b
   979  000774  0101               	movlb	1	; () banked
   980  000776  0100               	movlb	0	; () banked
   981  000778  C1C4  F0CF         	movff	main@msgtype,timer0_lthread@msgtype
   982  00077C  0100               	movlb	0	; () banked
   983  00077E  0100               	movlb	0	; () banked
   984  000780  6BD0               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
   985  000782  0101               	movlb	1	; () banked
   986  000784  0101               	movlb	1	; () banked
   987  000786  51C5               	movf	main@length& (0+255),w,b
   988  000788  0100               	movlb	0	; () banked
   989  00078A  0100               	movlb	0	; () banked
   990  00078C  6FD1               	movwf	timer0_lthread@length& (0+255),b
   991  00078E  0100               	movlb	0	; () banked
   992  000790  6BD2               	clrf	(timer0_lthread@length+1)& (0+255),b
   993  000792  0100               	movlb	0	; () banked
   994  000794  BFD1               	btfsc	timer0_lthread@length& (0+255),7,b
   995  000796  07D2               	decf	(timer0_lthread@length+1)& (0+255),f,b
   996  000798  0101               	movlb	1	; () banked
   997  00079A  0E01               	movlw	high main@msgbuffer
   998  00079C  0100               	movlb	0	; () banked
   999  00079E  0100               	movlb	0	; () banked
  1000  0007A0  6FD4               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1001  0007A2  0101               	movlb	1	; () banked
  1002  0007A4  0EAD               	movlw	low main@msgbuffer
  1003  0007A6  0100               	movlb	0	; () banked
  1004  0007A8  0100               	movlb	0	; () banked
  1005  0007AA  6FD3               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1006  0007AC  ECCA  F00C         	call	_timer0_lthread	;wreg free
  1007                           
  1008                           ;main.c: 209: break;
  1009  0007B0  D063               	goto	l2870
  1010  0007B2                     l100:
  1011                           
  1012                           ;main.c: 212: case 41:
  1013                           ;main.c: 213: {
  1014                           ;main.c: 216: last_reg_recvd = msgbuffer[0];
  1015  0007B2  C1AD  F1BC         	movff	main@msgbuffer,main@last_reg_recvd
  1016                           
  1017                           ;main.c: 217: break;
  1018  0007B6  D060               	goto	l2870
  1019  0007B8                     l2854:
  1020                           
  1021                           ;main.c: 230: {
  1022                           ;main.c: 231: length = 2;
  1023  0007B8  0101               	movlb	1	; () banked
  1024  0007BA  6FAC               	movwf	??_main& (0+255),b
  1025  0007BC  0E02               	movlw	2
  1026  0007BE  0101               	movlb	1	; () banked
  1027  0007C0  0101               	movlb	1	; () banked
  1028  0007C2  6FC5               	movwf	main@length& (0+255),b
  1029  0007C4  0101               	movlb	1	; () banked
  1030  0007C6  51AC               	movf	??_main& (0+255),w,b
  1031                           
  1032                           ;main.c: 232: msgbuffer[0] = 0x55;
  1033  0007C8  0101               	movlb	1	; () banked
  1034  0007CA  6FAC               	movwf	??_main& (0+255),b
  1035  0007CC  0E55               	movlw	85
  1036  0007CE  0101               	movlb	1	; () banked
  1037  0007D0  0101               	movlb	1	; () banked
  1038  0007D2  6FAD               	movwf	main@msgbuffer& (0+255),b
  1039  0007D4  0101               	movlb	1	; () banked
  1040  0007D6  51AC               	movf	??_main& (0+255),w,b
  1041                           
  1042                           ;main.c: 233: msgbuffer[1] = 0xAA;
  1043  0007D8  0101               	movlb	1	; () banked
  1044  0007DA  6FAC               	movwf	??_main& (0+255),b
  1045  0007DC  0EAA               	movlw	170
  1046  0007DE  0101               	movlb	1	; () banked
  1047  0007E0  0101               	movlb	1	; () banked
  1048  0007E2  6FAE               	movwf	(main@msgbuffer+1)& (0+255),b
  1049  0007E4  D00C               	goto	L1
  1050  0007E6                     l2856:
  1051                           
  1052                           ; BSR set to: 1
  1053                           ;main.c: 237: {
  1054                           ;main.c: 238: length = 1;
  1055  0007E6  0101               	movlb	1	; () banked
  1056  0007E8  6FAC               	movwf	??_main& (0+255),b
  1057  0007EA  0E01               	movlw	1
  1058  0007EC  0101               	movlb	1	; () banked
  1059  0007EE  0101               	movlb	1	; () banked
  1060  0007F0  6FC5               	movwf	main@length& (0+255),b
  1061  0007F2  0101               	movlb	1	; () banked
  1062  0007F4  51AC               	movf	??_main& (0+255),w,b
  1063                           
  1064                           ;main.c: 239: msgbuffer[0] = 0x3A;
  1065  0007F6  0101               	movlb	1	; () banked
  1066  0007F8  6FAC               	movwf	??_main& (0+255),b
  1067  0007FA  0E3A               	movlw	58
  1068  0007FC  D00E               	goto	L2
  1069  0007FE                     L1:
  1070  0007FE  0101               	movlb	1	; () banked
  1071  000800  51AC               	movf	??_main& (0+255),w,b
  1072                           
  1073                           ;main.c: 240: break;
  1074  000802  D01B               	goto	l2864
  1075  000804                     l2858:
  1076                           
  1077                           ; BSR set to: 1
  1078                           ;main.c: 243: {
  1079                           ;main.c: 244: length = 1;
  1080  000804  0101               	movlb	1	; () banked
  1081  000806  6FAC               	movwf	??_main& (0+255),b
  1082  000808  0E01               	movlw	1
  1083  00080A  0101               	movlb	1	; () banked
  1084  00080C  0101               	movlb	1	; () banked
  1085  00080E  6FC5               	movwf	main@length& (0+255),b
  1086  000810  0101               	movlb	1	; () banked
  1087  000812  51AC               	movf	??_main& (0+255),w,b
  1088                           
  1089                           ;main.c: 245: msgbuffer[0] = 0xA3;
  1090  000814  0101               	movlb	1	; () banked
  1091  000816  6FAC               	movwf	??_main& (0+255),b
  1092  000818  0EA3               	movlw	163
  1093  00081A                     L2:
  1094  00081A  0101               	movlb	1	; () banked
  1095  00081C  0101               	movlb	1	; () banked
  1096  00081E  6FAD               	movwf	main@msgbuffer& (0+255),b
  1097  000820  D7EE               	goto	L1
  1098  000822                     l2862:
  1099  000822  0101               	movlb	1	; () banked
  1100  000824  0101               	movlb	1	; () banked
  1101  000826  51BC               	movf	main@last_reg_recvd& (0+255),w,b
  1102                           
  1103                           ; Switch size 1, requested type "space"
  1104                           ; Number of cases is 3, Range of values is 168 to 170
  1105                           ; switch strategies available:
  1106                           ; Name         Instructions Cycles
  1107                           ; simple_byte           10     6 (average)
  1108                           ;	Chosen strategy is simple_byte
  1109  000828  0AA8               	xorlw	168	; case 168
  1110  00082A  B4D8               	btfsc	status,2,c
  1111  00082C  D7DC               	goto	l2856
  1112  00082E  0A01               	xorlw	1	; case 169
  1113  000830  B4D8               	btfsc	status,2,c
  1114  000832  D7E8               	goto	l2858
  1115  000834  0A03               	xorlw	3	; case 170
  1116  000836  B4D8               	btfsc	status,2,c
  1117  000838  D7BF               	goto	l2854
  1118  00083A                     l2864:
  1119                           
  1120                           ; BSR set to: 1
  1121                           ;main.c: 249: start_i2c_slave_reply(length, msgbuffer);
  1122  00083A  0101               	movlb	1	; () banked
  1123  00083C  0E01               	movlw	high main@msgbuffer
  1124  00083E  0100               	movlb	0	; () banked
  1125  000840  0100               	movlb	0	; () banked
  1126  000842  6FCE               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1127  000844  0101               	movlb	1	; () banked
  1128  000846  0EAD               	movlw	low main@msgbuffer
  1129  000848  0100               	movlb	0	; () banked
  1130  00084A  0100               	movlb	0	; () banked
  1131  00084C  6FCD               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1132  00084E  0101               	movlb	1	; () banked
  1133  000850  0101               	movlb	1	; () banked
  1134  000852  51C5               	movf	main@length& (0+255),w,b
  1135  000854  EC55  F005         	call	_start_i2c_slave_reply
  1136                           
  1137                           ;main.c: 250: break;
  1138  000858  D00F               	goto	l2870
  1139  00085A                     l2868:
  1140  00085A  0101               	movlb	1	; () banked
  1141  00085C  0101               	movlb	1	; () banked
  1142  00085E  51C4               	movf	main@msgtype& (0+255),w,b
  1143                           
  1144                           ; Switch size 1, requested type "space"
  1145                           ; Number of cases is 4, Range of values is 10 to 42
  1146                           ; switch strategies available:
  1147                           ; Name         Instructions Cycles
  1148                           ; simple_byte           13     7 (average)
  1149                           ;	Chosen strategy is simple_byte
  1150  000860  0A0A               	xorlw	10	; case 10
  1151  000862  B4D8               	btfsc	status,2,c
  1152  000864  D77D               	goto	l2852
  1153  000866  0A22               	xorlw	34	; case 40
  1154  000868  B4D8               	btfsc	status,2,c
  1155  00086A  D7A3               	goto	l100
  1156  00086C  0A01               	xorlw	1	; case 41
  1157  00086E  B4D8               	btfsc	status,2,c
  1158  000870  D7A0               	goto	l100
  1159  000872  0A03               	xorlw	3	; case 42
  1160  000874  B4D8               	btfsc	status,2,c
  1161  000876  D7D5               	goto	l2862
  1162  000878                     l2870:
  1163                           
  1164                           ;main.c: 258: }
  1165                           ;main.c: 261: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1166  000878  0101               	movlb	1	; () banked
  1167  00087A  0E01               	movlw	high main@msgtype
  1168  00087C  0101               	movlb	1	; () banked
  1169  00087E  0101               	movlb	1	; () banked
  1170  000880  6FA3               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1171  000882  0101               	movlb	1	; () banked
  1172  000884  0EC4               	movlw	low main@msgtype
  1173  000886  0101               	movlb	1	; () banked
  1174  000888  0101               	movlb	1	; () banked
  1175  00088A  6FA2               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1176  00088C  0101               	movlb	1	; () banked
  1177  00088E  0E01               	movlw	high main@msgbuffer
  1178  000890  0101               	movlb	1	; () banked
  1179  000892  0101               	movlb	1	; () banked
  1180  000894  6FA5               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1181  000896  0101               	movlb	1	; () banked
  1182  000898  0EAD               	movlw	low main@msgbuffer
  1183  00089A  0101               	movlb	1	; () banked
  1184  00089C  0101               	movlb	1	; () banked
  1185  00089E  6FA4               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1186  0008A0  0E0A               	movlw	10
  1187  0008A2  EC23  F00B         	call	_ToMainLow_recvmsg
  1188  0008A6  0101               	movlb	1	; () banked
  1189  0008A8  0101               	movlb	1	; () banked
  1190  0008AA  6FC5               	movwf	main@length& (0+255),b
  1191                           
  1192                           ; BSR set to: 1
  1193                           ;main.c: 262: if (length < 0) {
  1194  0008AC  0101               	movlb	1	; () banked
  1195  0008AE  0101               	movlb	1	; () banked
  1196  0008B0  BFC5               	btfsc	main@length& (0+255),7,b
  1197  0008B2  D735               	goto	l2844
  1198  0008B4  D052               	goto	l2882
  1199  0008B6                     l2876:
  1200                           
  1201                           ; BSR set to: 1
  1202                           ;main.c: 270: {
  1203                           ;main.c: 271: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1204  0008B6  0101               	movlb	1	; () banked
  1205  0008B8  0E01               	movlw	high main@t1thread_data
  1206  0008BA  0101               	movlb	1	; () banked
  1207  0008BC  0101               	movlb	1	; () banked
  1208  0008BE  6FA3               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1209  0008C0  0101               	movlb	1	; () banked
  1210  0008C2  0EC2               	movlw	low main@t1thread_data
  1211  0008C4  0101               	movlb	1	; () banked
  1212  0008C6  0101               	movlb	1	; () banked
  1213  0008C8  6FA2               	movwf	timer1_lthread@tptr& (0+255),b
  1214  0008CA  0101               	movlb	1	; () banked
  1215  0008CC  0101               	movlb	1	; () banked
  1216  0008CE  C1C4  F1A4         	movff	main@msgtype,timer1_lthread@msgtype
  1217  0008D2  0101               	movlb	1	; () banked
  1218  0008D4  0101               	movlb	1	; () banked
  1219  0008D6  6BA5               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1220  0008D8  0101               	movlb	1	; () banked
  1221  0008DA  0101               	movlb	1	; () banked
  1222  0008DC  51C5               	movf	main@length& (0+255),w,b
  1223  0008DE  0101               	movlb	1	; () banked
  1224  0008E0  0101               	movlb	1	; () banked
  1225  0008E2  6FA6               	movwf	timer1_lthread@length& (0+255),b
  1226  0008E4  0101               	movlb	1	; () banked
  1227  0008E6  6BA7               	clrf	(timer1_lthread@length+1)& (0+255),b
  1228  0008E8  0101               	movlb	1	; () banked
  1229  0008EA  BFA6               	btfsc	timer1_lthread@length& (0+255),7,b
  1230  0008EC  07A7               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1231  0008EE  0101               	movlb	1	; () banked
  1232  0008F0  0E01               	movlw	high main@msgbuffer
  1233  0008F2  0101               	movlb	1	; () banked
  1234  0008F4  0101               	movlb	1	; () banked
  1235  0008F6  6FA9               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1236  0008F8  0101               	movlb	1	; () banked
  1237  0008FA  0EAD               	movlw	low main@msgbuffer
  1238  0008FC  0101               	movlb	1	; () banked
  1239  0008FE  0101               	movlb	1	; () banked
  1240  000900  6FA8               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1241  000902  ECBF  F009         	call	_timer1_lthread	;wreg free
  1242                           
  1243                           ;main.c: 272: break;
  1244  000906  D70B               	goto	l2844
  1245  000908                     l2878:
  1246                           
  1247                           ;main.c: 275: case 31:
  1248                           ;main.c: 276: {
  1249                           ;main.c: 277: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1250  000908  0101               	movlb	1	; () banked
  1251  00090A  0E01               	movlw	high main@uthread_data
  1252  00090C  0100               	movlb	0	; () banked
  1253  00090E  0100               	movlb	0	; () banked
  1254  000910  6FCE               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1255  000912  0101               	movlb	1	; () banked
  1256  000914  0EB8               	movlw	low main@uthread_data
  1257  000916  0100               	movlb	0	; () banked
  1258  000918  0100               	movlb	0	; () banked
  1259  00091A  6FCD               	movwf	uart_lthread@uptr& (0+255),b
  1260  00091C  0101               	movlb	1	; () banked
  1261  00091E  0100               	movlb	0	; () banked
  1262  000920  C1C4  F0CF         	movff	main@msgtype,uart_lthread@msgtype
  1263  000924  0100               	movlb	0	; () banked
  1264  000926  0100               	movlb	0	; () banked
  1265  000928  6BD0               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1266  00092A  0101               	movlb	1	; () banked
  1267  00092C  0101               	movlb	1	; () banked
  1268  00092E  51C5               	movf	main@length& (0+255),w,b
  1269  000930  0100               	movlb	0	; () banked
  1270  000932  0100               	movlb	0	; () banked
  1271  000934  6FD1               	movwf	uart_lthread@length& (0+255),b
  1272  000936  0100               	movlb	0	; () banked
  1273  000938  6BD2               	clrf	(uart_lthread@length+1)& (0+255),b
  1274  00093A  0100               	movlb	0	; () banked
  1275  00093C  BFD1               	btfsc	uart_lthread@length& (0+255),7,b
  1276  00093E  07D2               	decf	(uart_lthread@length+1)& (0+255),f,b
  1277  000940  0101               	movlb	1	; () banked
  1278  000942  0E01               	movlw	high main@msgbuffer
  1279  000944  0100               	movlb	0	; () banked
  1280  000946  0100               	movlb	0	; () banked
  1281  000948  6FD4               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1282  00094A  0101               	movlb	1	; () banked
  1283  00094C  0EAD               	movlw	low main@msgbuffer
  1284  00094E  0100               	movlb	0	; () banked
  1285  000950  0100               	movlb	0	; () banked
  1286  000952  6FD3               	movwf	uart_lthread@msgbuffer& (0+255),b
  1287  000954  ECA5  F00B         	call	_uart_lthread	;wreg free
  1288                           
  1289                           ;main.c: 278: break;
  1290  000958  D6E2               	goto	l2844
  1291  00095A                     l2882:
  1292  00095A  0101               	movlb	1	; () banked
  1293  00095C  0101               	movlb	1	; () banked
  1294  00095E  51C4               	movf	main@msgtype& (0+255),w,b
  1295                           
  1296                           ; Switch size 1, requested type "space"
  1297                           ; Number of cases is 3, Range of values is 11 to 31
  1298                           ; switch strategies available:
  1299                           ; Name         Instructions Cycles
  1300                           ; simple_byte           10     6 (average)
  1301                           ;	Chosen strategy is simple_byte
  1302  000960  0A0B               	xorlw	11	; case 11
  1303  000962  B4D8               	btfsc	status,2,c
  1304  000964  D7A8               	goto	l2876
  1305  000966  0A15               	xorlw	21	; case 30
  1306  000968  B4D8               	btfsc	status,2,c
  1307  00096A  D7CE               	goto	l2878
  1308  00096C  0A01               	xorlw	1	; case 31
  1309  00096E  B4D8               	btfsc	status,2,c
  1310  000970  D7CB               	goto	l2878
  1311  000972  D6D5               	goto	l2844
  1312  000974                     __end_of_main:
  1313                           	opt stack 0
  1314                           tblptru	equ	0xFF8
  1315                           postinc0	equ	0xFEE
  1316                           wreg	equ	0xFE8
  1317                           status	equ	0xFD8
  1318                           
  1319 ;; *************** function _uart_lthread *****************
  1320 ;; Defined at:
  1321 ;;		line 9 in file "../src/uart_thread.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  uptr            2   23[BANK0 ] PTR struct __uart_thread
  1324 ;;		 -> main@uthread_data(2), 
  1325 ;;  msgtype         2   25[BANK0 ] int 
  1326 ;;  length          2   27[BANK0 ] int 
  1327 ;;  msgbuffer       2   29[BANK0 ] PTR unsigned char 
  1328 ;;		 -> main@msgbuffer(11), 
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;		None
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  2   23[BANK0 ] int 
  1333 ;; Registers used:
  1334 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1340 ;;      Params:         0       8       0       0       0
  1341 ;;      Locals:         0       0       0       0       0
  1342 ;;      Temps:          0       0       0       0       0
  1343 ;;      Totals:         0       8       0       0       0
  1344 ;;Total ram usage:        8 bytes
  1345 ;; Hardware stack levels used:    1
  1346 ;; Hardware stack levels required when called:   10
  1347 ;; This function calls:
  1348 ;;		Nothing
  1349 ;; This function is called by:
  1350 ;;		_main
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           	psect	text1
  1355  00174A                     __ptext1:
  1356                           	opt stack 0
  1357  00174A                     _uart_lthread:
  1358                           	opt stack 19
  1359                           
  1360                           ;uart_thread.c: 10: if (msgtype == 30) {
  1361                           
  1362                           ; BSR set to: 1
  1363                           ;incstack = 0
  1364  00174A  0100               	movlb	0	; () banked
  1365  00174C  0100               	movlb	0	; () banked
  1366  00174E  51CF               	movf	uart_lthread@msgtype& (0+255),w,b
  1367  001750  0A1E               	xorlw	30
  1368  001752  11D0               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1369  001754  B4D8               	btfsc	status,2,c
  1370  001756  0012               	return	
  1371                           
  1372                           ; BSR set to: 0
  1373                           
  1374                           ; BSR set to: 0
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;uart_thread.c: 11: } else if (msgtype == 31) {
  1378  001758  0100               	movlb	0	; () banked
  1379  00175A  0100               	movlb	0	; () banked
  1380  00175C  51CF               	movf	uart_lthread@msgtype& (0+255),w,b
  1381  00175E  0A1F               	xorlw	31
  1382  001760  11D0               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1383  001762  A4D8               	btfss	status,2,c
  1384  001764  0012               	return	
  1385                           
  1386                           ; BSR set to: 0
  1387                           ;uart_thread.c: 14: msgbuffer[length] = '\0';
  1388  001766  0100               	movlb	0	; () banked
  1389  001768  0100               	movlb	0	; () banked
  1390  00176A  51D1               	movf	uart_lthread@length& (0+255),w,b
  1391  00176C  0100               	movlb	0	; () banked
  1392  00176E  0100               	movlb	0	; () banked
  1393  001770  25D3               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1394  001772  6ED9               	movwf	fsr2l,c
  1395  001774  0100               	movlb	0	; () banked
  1396  001776  0100               	movlb	0	; () banked
  1397  001778  51D2               	movf	(uart_lthread@length+1)& (0+255),w,b
  1398  00177A  0100               	movlb	0	; () banked
  1399  00177C  0100               	movlb	0	; () banked
  1400  00177E  21D4               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1401  001780  6EDA               	movwf	fsr2h,c
  1402  001782  0E00               	movlw	0
  1403  001784  6EDF               	movwf	indf2,c
  1404  001786  0012               	return	
  1405  001788                     __end_of_uart_lthread:
  1406                           	opt stack 0
  1407                           tblptru	equ	0xFF8
  1408                           postinc0	equ	0xFEE
  1409                           wreg	equ	0xFE8
  1410                           indf2	equ	0xFDF
  1411                           fsr2h	equ	0xFDA
  1412                           fsr2l	equ	0xFD9
  1413                           status	equ	0xFD8
  1414                           
  1415 ;; *************** function _timer1_lthread *****************
  1416 ;; Defined at:
  1417 ;;		line 14 in file "../src/timer1_thread.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  1420 ;;		 -> main@t1thread_data(2), 
  1421 ;;  msgtype         2    2[BANK1 ] int 
  1422 ;;  length          2    4[BANK1 ] int 
  1423 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  1424 ;;		 -> main@msgbuffer(11), 
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;  retval          1    9[BANK1 ] char 
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  2    0[BANK1 ] int 
  1429 ;; Registers used:
  1430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1436 ;;      Params:         0       0       8       0       0
  1437 ;;      Locals:         0       0       1       0       0
  1438 ;;      Temps:          0       0       1       0       0
  1439 ;;      Totals:         0       0      10       0       0
  1440 ;;Total ram usage:       10 bytes
  1441 ;; Hardware stack levels used:    1
  1442 ;; Hardware stack levels required when called:   13
  1443 ;; This function calls:
  1444 ;;		_FromMainHigh_sendmsg
  1445 ;;		___lwmod
  1446 ;; This function is called by:
  1447 ;;		_main
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           	psect	text2
  1452  00137E                     __ptext2:
  1453                           	opt stack 0
  1454  00137E                     _timer1_lthread:
  1455                           	opt stack 16
  1456                           
  1457                           ;timer1_thread.c: 15: signed char retval;
  1458                           ;timer1_thread.c: 17: tptr->msgcount++;
  1459                           
  1460                           ; BSR set to: 0
  1461                           ;incstack = 0
  1462  00137E  C1A2  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1463  001382  C1A3  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1464  001386  2ADE               	incf	postinc2,f,c
  1465  001388  0E00               	movlw	0
  1466  00138A  22DD               	addwfc	postdec2,f,c
  1467                           
  1468                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1469  00138C  C1A2  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1470  001390  C1A3  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1471  001394  0100               	movlb	0	; () banked
  1472  001396  CFDE F0CD          	movff	postinc2,___lwmod@dividend
  1473  00139A  0100               	movlb	0	; () banked
  1474  00139C  CFDD F0CE          	movff	postdec2,___lwmod@dividend+1
  1475  0013A0  0E00               	movlw	0
  1476  0013A2  0100               	movlb	0	; () banked
  1477  0013A4  0100               	movlb	0	; () banked
  1478  0013A6  6FD0               	movwf	(___lwmod@divisor+1)& (0+255),b
  1479  0013A8  0E0A               	movlw	10
  1480  0013AA  0100               	movlb	0	; () banked
  1481  0013AC  6FCF               	movwf	___lwmod@divisor& (0+255),b
  1482  0013AE  ECBF  F008         	call	___lwmod	;wreg free
  1483  0013B2  0100               	movlb	0	; () banked
  1484  0013B4  0100               	movlb	0	; () banked
  1485  0013B6  51CD               	movf	?___lwmod& (0+255),w,b
  1486  0013B8  0A09               	xorlw	9
  1487  0013BA  0100               	movlb	0	; () banked
  1488  0013BC  11CE               	iorwf	(?___lwmod+1)& (0+255),w,b
  1489  0013BE  A4D8               	btfss	status,2,c
  1490  0013C0  0012               	return	
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1494  0013C2  0101               	movlb	1	; () banked
  1495  0013C4  6FAA               	movwf	??_timer1_lthread& (0+255),b
  1496  0013C6  0E14               	movlw	20
  1497  0013C8  0100               	movlb	0	; () banked
  1498  0013CA  0100               	movlb	0	; () banked
  1499  0013CC  6FE3               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1500  0013CE  0101               	movlb	1	; () banked
  1501  0013D0  51AA               	movf	??_timer1_lthread& (0+255),w,b
  1502  0013D2  0101               	movlb	1	; () banked
  1503  0013D4  0100               	movlb	0	; () banked
  1504  0013D6  C1A3  F0E5         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1505  0013DA  0101               	movlb	1	; () banked
  1506  0013DC  0100               	movlb	0	; () banked
  1507  0013DE  C1A2  F0E4         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1508  0013E2  0E02               	movlw	2
  1509  0013E4  ECE0  F00B         	call	_FromMainHigh_sendmsg
  1510  0013E8  0101               	movlb	1	; () banked
  1511  0013EA  0101               	movlb	1	; () banked
  1512  0013EC  6FAB               	movwf	timer1_lthread@retval& (0+255),b
  1513  0013EE  0012               	return	
  1514  0013F0                     __end_of_timer1_lthread:
  1515                           	opt stack 0
  1516                           tblptru	equ	0xFF8
  1517                           postinc0	equ	0xFEE
  1518                           wreg	equ	0xFE8
  1519                           indf2	equ	0xFDF
  1520                           postinc2	equ	0xFDE
  1521                           postdec2	equ	0xFDD
  1522                           fsr2h	equ	0xFDA
  1523                           fsr2l	equ	0xFD9
  1524                           status	equ	0xFD8
  1525                           
  1526 ;; *************** function ___lwmod *****************
  1527 ;; Defined at:
  1528 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;  dividend        2   23[BANK0 ] unsigned int 
  1531 ;;  divisor         2   25[BANK0 ] unsigned int 
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;  counter         1   28[BANK0 ] unsigned char 
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  2   23[BANK0 ] unsigned int 
  1536 ;; Registers used:
  1537 ;;		wreg, status,2, status,0
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1543 ;;      Params:         0       4       0       0       0
  1544 ;;      Locals:         0       1       0       0       0
  1545 ;;      Temps:          0       1       0       0       0
  1546 ;;      Totals:         0       6       0       0       0
  1547 ;;Total ram usage:        6 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:   10
  1550 ;; This function calls:
  1551 ;;		Nothing
  1552 ;; This function is called by:
  1553 ;;		_timer1_lthread
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text3
  1558  00117E                     __ptext3:
  1559                           	opt stack 0
  1560  00117E                     ___lwmod:
  1561                           	opt stack 18
  1562                           
  1563                           ;incstack = 0
  1564  00117E  0100               	movlb	0	; () banked
  1565  001180  0100               	movlb	0	; () banked
  1566  001182  51D0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1567  001184  11CF               	iorwf	___lwmod@divisor& (0+255),w,b
  1568  001186  B4D8               	btfsc	status,2,c
  1569  001188  D03A               	goto	l978
  1570                           
  1571                           ; BSR set to: 0
  1572  00118A  0100               	movlb	0	; () banked
  1573  00118C  6FD1               	movwf	??___lwmod& (0+255),b
  1574  00118E  0E01               	movlw	1
  1575  001190  0100               	movlb	0	; () banked
  1576  001192  0100               	movlb	0	; () banked
  1577  001194  6FD2               	movwf	___lwmod@counter& (0+255),b
  1578  001196  0100               	movlb	0	; () banked
  1579  001198  51D1               	movf	??___lwmod& (0+255),w,b
  1580  00119A  D009               	goto	l2984
  1581  00119C                     l2982:
  1582                           
  1583                           ; BSR set to: 0
  1584  00119C  0100               	movlb	0	; () banked
  1585  00119E  0100               	movlb	0	; () banked
  1586  0011A0  0100               	movlb	0	; () banked
  1587  0011A2  90D8               	bcf	status,0,c
  1588  0011A4  37CF               	rlcf	___lwmod@divisor& (0+255),f,b
  1589  0011A6  37D0               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1590  0011A8  0100               	movlb	0	; () banked
  1591  0011AA  0100               	movlb	0	; () banked
  1592  0011AC  2BD2               	incf	___lwmod@counter& (0+255),f,b
  1593  0011AE                     l2984:
  1594                           
  1595                           ; BSR set to: 0
  1596  0011AE  0100               	movlb	0	; () banked
  1597  0011B0  0100               	movlb	0	; () banked
  1598  0011B2  AFD0               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1599  0011B4  D7F3               	goto	l2982
  1600  0011B6                     l2986:
  1601                           
  1602                           ; BSR set to: 0
  1603  0011B6  0100               	movlb	0	; () banked
  1604  0011B8  0100               	movlb	0	; () banked
  1605  0011BA  51CF               	movf	___lwmod@divisor& (0+255),w,b
  1606  0011BC  0100               	movlb	0	; () banked
  1607  0011BE  0100               	movlb	0	; () banked
  1608  0011C0  5DCD               	subwf	___lwmod@dividend& (0+255),w,b
  1609  0011C2  0100               	movlb	0	; () banked
  1610  0011C4  0100               	movlb	0	; () banked
  1611  0011C6  51D0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1612  0011C8  0100               	movlb	0	; () banked
  1613  0011CA  0100               	movlb	0	; () banked
  1614  0011CC  59CE               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1615  0011CE  A0D8               	btfss	status,0,c
  1616  0011D0  D00C               	goto	l2990
  1617                           
  1618                           ; BSR set to: 0
  1619  0011D2  0100               	movlb	0	; () banked
  1620  0011D4  0100               	movlb	0	; () banked
  1621  0011D6  51CF               	movf	___lwmod@divisor& (0+255),w,b
  1622  0011D8  0100               	movlb	0	; () banked
  1623  0011DA  0100               	movlb	0	; () banked
  1624  0011DC  5FCD               	subwf	___lwmod@dividend& (0+255),f,b
  1625  0011DE  0100               	movlb	0	; () banked
  1626  0011E0  0100               	movlb	0	; () banked
  1627  0011E2  51D0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1628  0011E4  0100               	movlb	0	; () banked
  1629  0011E6  0100               	movlb	0	; () banked
  1630  0011E8  5BCE               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1631  0011EA                     l2990:
  1632                           
  1633                           ; BSR set to: 0
  1634  0011EA  0100               	movlb	0	; () banked
  1635  0011EC  0100               	movlb	0	; () banked
  1636  0011EE  0100               	movlb	0	; () banked
  1637  0011F0  90D8               	bcf	status,0,c
  1638  0011F2  33D0               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1639  0011F4  33CF               	rrcf	___lwmod@divisor& (0+255),f,b
  1640                           
  1641                           ; BSR set to: 0
  1642  0011F6  0100               	movlb	0	; () banked
  1643  0011F8  0100               	movlb	0	; () banked
  1644  0011FA  2FD2               	decfsz	___lwmod@counter& (0+255),f,b
  1645  0011FC  D7DC               	goto	l2986
  1646  0011FE                     l978:
  1647                           
  1648                           ; BSR set to: 0
  1649  0011FE  C0CD  F0CD         	movff	___lwmod@dividend,?___lwmod
  1650  001202  C0CE  F0CE         	movff	___lwmod@dividend+1,?___lwmod+1
  1651                           
  1652                           ; BSR set to: 0
  1653  001206  0012               	return	
  1654  001208                     __end_of___lwmod:
  1655                           	opt stack 0
  1656                           tblptru	equ	0xFF8
  1657                           postinc0	equ	0xFEE
  1658                           wreg	equ	0xFE8
  1659                           indf2	equ	0xFDF
  1660                           postinc2	equ	0xFDE
  1661                           postdec2	equ	0xFDD
  1662                           fsr2h	equ	0xFDA
  1663                           fsr2l	equ	0xFD9
  1664                           status	equ	0xFD8
  1665                           
  1666 ;; *************** function _FromMainHigh_sendmsg *****************
  1667 ;; Defined at:
  1668 ;;		line 174 in file "../src/messages.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;  length          1    wreg     unsigned char 
  1671 ;;  msgtype         1   45[BANK0 ] unsigned char 
  1672 ;;  data            2   46[BANK0 ] PTR void 
  1673 ;;		 -> main@t1thread_data(2), 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  length          1   48[BANK0 ] unsigned char 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      char 
  1678 ;; Registers used:
  1679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1685 ;;      Params:         0       3       0       0       0
  1686 ;;      Locals:         0       1       0       0       0
  1687 ;;      Temps:          0       0       0       0       0
  1688 ;;      Totals:         0       4       0       0       0
  1689 ;;Total ram usage:        4 bytes
  1690 ;; Hardware stack levels used:    1
  1691 ;; Hardware stack levels required when called:   12
  1692 ;; This function calls:
  1693 ;;		_send_msg
  1694 ;; This function is called by:
  1695 ;;		_timer1_lthread
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           	psect	text4
  1700  0017C0                     __ptext4:
  1701                           	opt stack 0
  1702  0017C0                     _FromMainHigh_sendmsg:
  1703                           	opt stack 16
  1704                           
  1705                           ; BSR set to: 0
  1706                           ;incstack = 0
  1707                           ;FromMainHigh_sendmsg@length stored from wreg
  1708  0017C0  CFE8 F0E6          	movff	wreg,FromMainHigh_sendmsg@length
  1709                           
  1710                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1711  0017C4  0101               	movlb	1	; () banked
  1712  0017C6  0E01               	movlw	high _FromMainHigh_MQ
  1713  0017C8  0100               	movlb	0	; () banked
  1714  0017CA  0100               	movlb	0	; () banked
  1715  0017CC  6FD8               	movwf	(send_msg@qptr+1)& (0+255),b
  1716  0017CE  0101               	movlb	1	; () banked
  1717  0017D0  0E00               	movlw	low _FromMainHigh_MQ
  1718  0017D2  0100               	movlb	0	; () banked
  1719  0017D4  0100               	movlb	0	; () banked
  1720  0017D6  6FD7               	movwf	send_msg@qptr& (0+255),b
  1721  0017D8  C0E6  F0D9         	movff	FromMainHigh_sendmsg@length,send_msg@length
  1722  0017DC  C0E3  F0DA         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  1723  0017E0  0100               	movlb	0	; () banked
  1724  0017E2  0100               	movlb	0	; () banked
  1725  0017E4  C0E5  F0DC         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  1726  0017E8  0100               	movlb	0	; () banked
  1727  0017EA  0100               	movlb	0	; () banked
  1728  0017EC  C0E4  F0DB         	movff	FromMainHigh_sendmsg@data,send_msg@data
  1729  0017F0  ECDC  F005         	call	_send_msg	;wreg free
  1730  0017F4  0012               	return	
  1731  0017F6                     __end_of_FromMainHigh_sendmsg:
  1732                           	opt stack 0
  1733                           tblptru	equ	0xFF8
  1734                           postinc0	equ	0xFEE
  1735                           wreg	equ	0xFE8
  1736                           indf2	equ	0xFDF
  1737                           postinc2	equ	0xFDE
  1738                           postdec2	equ	0xFDD
  1739                           fsr2h	equ	0xFDA
  1740                           fsr2l	equ	0xFD9
  1741                           status	equ	0xFD8
  1742                           
  1743 ;; *************** function _send_msg *****************
  1744 ;; Defined at:
  1745 ;;		line 24 in file "../src/messages.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;  qptr            2   33[BANK0 ] PTR struct __msg_queue
  1748 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1749 ;;  length          1   35[BANK0 ] unsigned char 
  1750 ;;  msgtype         1   36[BANK0 ] unsigned char 
  1751 ;;  data            2   37[BANK0 ] PTR void 
  1752 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), 
  1753 ;;		 -> main@ic(28), main@uc(5), 
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;  qmsg            2   43[BANK0 ] PTR struct __msg
  1756 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  1757 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1758 ;;  tlength         2   40[BANK0 ] unsigned int 
  1759 ;;  slot            1   42[BANK0 ] unsigned char 
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      char 
  1762 ;; Registers used:
  1763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1769 ;;      Params:         0       6       0       0       0
  1770 ;;      Locals:         0       5       0       0       0
  1771 ;;      Temps:          0       1       0       0       0
  1772 ;;      Totals:         0      12       0       0       0
  1773 ;;Total ram usage:       12 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; Hardware stack levels required when called:   11
  1776 ;; This function calls:
  1777 ;;		_memcpy
  1778 ;; This function is called by:
  1779 ;;		_FromMainHigh_sendmsg
  1780 ;;		_FromMainLow_sendmsg
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text5
  1785  000BB8                     __ptext5:
  1786                           	opt stack 0
  1787  000BB8                     _send_msg:
  1788                           	opt stack 16
  1789                           
  1790                           ;messages.c: 25: unsigned char slot;
  1791                           ;messages.c: 27: msg *qmsg;
  1792                           ;messages.c: 28: size_t tlength = length;
  1793                           
  1794                           ;incstack = 0
  1795  000BB8  0100               	movlb	0	; () banked
  1796  000BBA  0100               	movlb	0	; () banked
  1797  000BBC  C0D9  F0DE         	movff	send_msg@length,send_msg@tlength
  1798  000BC0  0100               	movlb	0	; () banked
  1799  000BC2  0100               	movlb	0	; () banked
  1800  000BC4  6BDF               	clrf	(send_msg@tlength+1)& (0+255),b
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;messages.c: 38: slot = qptr->cur_write_ind;
  1804  000BC6  0100               	movlb	0	; () banked
  1805  000BC8  EE20 F034          	lfsr	2,52
  1806  000BCC  0100               	movlb	0	; () banked
  1807  000BCE  51D7               	movf	send_msg@qptr& (0+255),w,b
  1808  000BD0  26D9               	addwf	fsr2l,f,c
  1809  000BD2  0100               	movlb	0	; () banked
  1810  000BD4  51D8               	movf	(send_msg@qptr+1)& (0+255),w,b
  1811  000BD6  22DA               	addwfc	fsr2h,f,c
  1812  000BD8  50DF               	movf	indf2,w,c
  1813  000BDA  0100               	movlb	0	; () banked
  1814  000BDC  0100               	movlb	0	; () banked
  1815  000BDE  6FE0               	movwf	send_msg@slot& (0+255),b
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  1819  000BE0  0100               	movlb	0	; () banked
  1820  000BE2  0100               	movlb	0	; () banked
  1821  000BE4  51E0               	movf	send_msg@slot& (0+255),w,b
  1822  000BE6  0D0D               	mullw	13
  1823  000BE8  50F3               	movf	prodl,w,c
  1824  000BEA  0100               	movlb	0	; () banked
  1825  000BEC  0100               	movlb	0	; () banked
  1826  000BEE  25D7               	addwf	send_msg@qptr& (0+255),w,b
  1827  000BF0  0100               	movlb	0	; () banked
  1828  000BF2  0100               	movlb	0	; () banked
  1829  000BF4  6FE1               	movwf	send_msg@qmsg& (0+255),b
  1830  000BF6  50F4               	movf	prodh,w,c
  1831  000BF8  0100               	movlb	0	; () banked
  1832  000BFA  0100               	movlb	0	; () banked
  1833  000BFC  21D8               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  1834  000BFE  0100               	movlb	0	; () banked
  1835  000C00  6FE2               	movwf	(send_msg@qmsg+1)& (0+255),b
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;messages.c: 41: if (qmsg->full != 0) {
  1839  000C02  C0E1  FFD9         	movff	send_msg@qmsg,fsr2l
  1840  000C06  C0E2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1841  000C0A  50DF               	movf	indf2,w,c
  1842  000C0C  B4D8               	btfsc	status,2,c
  1843  000C0E  D002               	goto	l2912
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;messages.c: 42: return (-1);
  1847  000C10  0EFF               	movlw	255
  1848  000C12  0012               	return	
  1849  000C14                     l2912:
  1850                           
  1851                           ; BSR set to: 0
  1852                           ;messages.c: 43: }
  1853                           ;messages.c: 46: qmsg->length = length;
  1854  000C14  0100               	movlb	0	; () banked
  1855  000C16  EE20 F001          	lfsr	2,1
  1856  000C1A  0100               	movlb	0	; () banked
  1857  000C1C  51E1               	movf	send_msg@qmsg& (0+255),w,b
  1858  000C1E  26D9               	addwf	fsr2l,f,c
  1859  000C20  0100               	movlb	0	; () banked
  1860  000C22  51E2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1861  000C24  22DA               	addwfc	fsr2h,f,c
  1862  000C26  0100               	movlb	0	; () banked
  1863  000C28  C0D9  FFDF         	movff	send_msg@length,indf2
  1864                           
  1865                           ;messages.c: 47: qmsg->msgtype = msgtype;
  1866  000C2C  0100               	movlb	0	; () banked
  1867  000C2E  EE20 F002          	lfsr	2,2
  1868  000C32  0100               	movlb	0	; () banked
  1869  000C34  51E1               	movf	send_msg@qmsg& (0+255),w,b
  1870  000C36  26D9               	addwf	fsr2l,f,c
  1871  000C38  0100               	movlb	0	; () banked
  1872  000C3A  51E2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1873  000C3C  22DA               	addwfc	fsr2h,f,c
  1874  000C3E  0100               	movlb	0	; () banked
  1875  000C40  C0DA  FFDF         	movff	send_msg@msgtype,indf2
  1876                           
  1877                           ; BSR set to: 0
  1878                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  1879  000C44  0E03               	movlw	3
  1880  000C46  0100               	movlb	0	; () banked
  1881  000C48  0100               	movlb	0	; () banked
  1882  000C4A  25E1               	addwf	send_msg@qmsg& (0+255),w,b
  1883  000C4C  0100               	movlb	0	; () banked
  1884  000C4E  0100               	movlb	0	; () banked
  1885  000C50  6FCD               	movwf	memcpy@d1& (0+255),b
  1886  000C52  0E00               	movlw	0
  1887  000C54  0100               	movlb	0	; () banked
  1888  000C56  0100               	movlb	0	; () banked
  1889  000C58  21E2               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  1890  000C5A  0100               	movlb	0	; () banked
  1891  000C5C  6FCE               	movwf	(memcpy@d1+1)& (0+255),b
  1892  000C5E  0100               	movlb	0	; () banked
  1893  000C60  0100               	movlb	0	; () banked
  1894  000C62  C0DC  F0D0         	movff	send_msg@data+1,memcpy@s1+1
  1895  000C66  0100               	movlb	0	; () banked
  1896  000C68  0100               	movlb	0	; () banked
  1897  000C6A  C0DB  F0CF         	movff	send_msg@data,memcpy@s1
  1898  000C6E  C0DE  F0D1         	movff	send_msg@tlength,memcpy@n
  1899  000C72  C0DF  F0D2         	movff	send_msg@tlength+1,memcpy@n+1
  1900  000C76  EC64  F00A         	call	_memcpy	;wreg free
  1901                           
  1902                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  1903  000C7A  0100               	movlb	0	; () banked
  1904  000C7C  EE20 F034          	lfsr	2,52
  1905  000C80  0100               	movlb	0	; () banked
  1906  000C82  51D7               	movf	send_msg@qptr& (0+255),w,b
  1907  000C84  26D9               	addwf	fsr2l,f,c
  1908  000C86  0100               	movlb	0	; () banked
  1909  000C88  51D8               	movf	(send_msg@qptr+1)& (0+255),w,b
  1910  000C8A  22DA               	addwfc	fsr2h,f,c
  1911  000C8C  0100               	movlb	0	; () banked
  1912  000C8E  EE10 F034          	lfsr	1,52
  1913  000C92  0100               	movlb	0	; () banked
  1914  000C94  51D7               	movf	send_msg@qptr& (0+255),w,b
  1915  000C96  26E1               	addwf	fsr1l,f,c
  1916  000C98  0100               	movlb	0	; () banked
  1917  000C9A  51D8               	movf	(send_msg@qptr+1)& (0+255),w,b
  1918  000C9C  22E2               	addwfc	fsr1h,f,c
  1919  000C9E  50E7               	movf	indf1,w,c
  1920  000CA0  0100               	movlb	0	; () banked
  1921  000CA2  6FDD               	movwf	??_send_msg& (0+255),b
  1922  000CA4  0100               	movlb	0	; () banked
  1923  000CA6  29DD               	incf	??_send_msg& (0+255),w,b
  1924  000CA8  0B03               	andlw	3
  1925  000CAA  6EDF               	movwf	indf2,c
  1926                           
  1927                           ; BSR set to: 0
  1928                           ;messages.c: 59: qmsg->full = 1;
  1929  000CAC  C0E1  FFD9         	movff	send_msg@qmsg,fsr2l
  1930  000CB0  C0E2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1931  000CB4  0E01               	movlw	1
  1932  000CB6  6EDF               	movwf	indf2,c
  1933                           
  1934                           ; BSR set to: 0
  1935                           ;messages.c: 60: return (1);
  1936  000CB8  0E01               	movlw	1
  1937  000CBA  0012               	return	
  1938  000CBC                     __end_of_send_msg:
  1939                           	opt stack 0
  1940                           tblptru	equ	0xFF8
  1941                           prodh	equ	0xFF4
  1942                           prodl	equ	0xFF3
  1943                           postinc0	equ	0xFEE
  1944                           wreg	equ	0xFE8
  1945                           indf1	equ	0xFE7
  1946                           fsr1h	equ	0xFE2
  1947                           fsr1l	equ	0xFE1
  1948                           indf2	equ	0xFDF
  1949                           postinc2	equ	0xFDE
  1950                           postdec2	equ	0xFDD
  1951                           fsr2h	equ	0xFDA
  1952                           fsr2l	equ	0xFD9
  1953                           status	equ	0xFD8
  1954                           
  1955 ;; *************** function _timer0_lthread *****************
  1956 ;; Defined at:
  1957 ;;		line 9 in file "../src/timer0_thread.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  tptr            2   23[BANK0 ] PTR struct __timer0_thre
  1960 ;;		 -> main@t0thread_data(2), 
  1961 ;;  msgtype         2   25[BANK0 ] int 
  1962 ;;  length          2   27[BANK0 ] int 
  1963 ;;  msgbuffer       2   29[BANK0 ] PTR unsigned char 
  1964 ;;		 -> main@msgbuffer(11), 
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;  msgval          2   31[BANK0 ] PTR unsigned int 
  1967 ;;		 -> main@msgbuffer(11), 
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  2   23[BANK0 ] int 
  1970 ;; Registers used:
  1971 ;;		wreg, status,2, status,0
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1977 ;;      Params:         0       8       0       0       0
  1978 ;;      Locals:         0       2       0       0       0
  1979 ;;      Temps:          0       0       0       0       0
  1980 ;;      Totals:         0      10       0       0       0
  1981 ;;Total ram usage:       10 bytes
  1982 ;; Hardware stack levels used:    1
  1983 ;; Hardware stack levels required when called:   10
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_main
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           	psect	text6
  1992  001994                     __ptext6:
  1993                           	opt stack 0
  1994  001994                     _timer0_lthread:
  1995                           	opt stack 19
  1996                           
  1997                           ;timer0_thread.c: 10: unsigned int *msgval;
  1998                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;incstack = 0
  2002  001994  0100               	movlb	0	; () banked
  2003  001996  0100               	movlb	0	; () banked
  2004  001998  C0D4  F0D6         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2005  00199C  0100               	movlb	0	; () banked
  2006  00199E  0100               	movlb	0	; () banked
  2007  0019A0  C0D3  F0D5         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2008                           
  2009                           ; BSR set to: 0
  2010  0019A4  0012               	return	
  2011  0019A6                     __end_of_timer0_lthread:
  2012                           	opt stack 0
  2013                           tblptru	equ	0xFF8
  2014                           prodh	equ	0xFF4
  2015                           prodl	equ	0xFF3
  2016                           postinc0	equ	0xFEE
  2017                           wreg	equ	0xFE8
  2018                           indf1	equ	0xFE7
  2019                           fsr1h	equ	0xFE2
  2020                           fsr1l	equ	0xFE1
  2021                           indf2	equ	0xFDF
  2022                           postinc2	equ	0xFDE
  2023                           postdec2	equ	0xFDD
  2024                           fsr2h	equ	0xFDA
  2025                           fsr2l	equ	0xFD9
  2026                           status	equ	0xFD8
  2027                           
  2028 ;; *************** function _start_i2c_slave_reply *****************
  2029 ;; Defined at:
  2030 ;;		line 53 in file "../src/my_i2c.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;  length          1    wreg     unsigned char 
  2033 ;;  msg             2   23[BANK0 ] PTR unsigned char 
  2034 ;;		 -> main@msgbuffer(11), 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  length          1   27[BANK0 ] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;		None               void
  2039 ;; Registers used:
  2040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2046 ;;      Params:         0       2       0       0       0
  2047 ;;      Locals:         0       1       0       0       0
  2048 ;;      Temps:          0       2       0       0       0
  2049 ;;      Totals:         0       5       0       0       0
  2050 ;;Total ram usage:        5 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:   10
  2053 ;; This function calls:
  2054 ;;		Nothing
  2055 ;; This function is called by:
  2056 ;;		_main
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text7
  2061  000AAA                     __ptext7:
  2062                           	opt stack 0
  2063  000AAA                     _start_i2c_slave_reply:
  2064                           	opt stack 19
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;incstack = 0
  2068                           ;start_i2c_slave_reply@length stored from wreg
  2069  000AAA  CFE8 F0D1          	movff	wreg,start_i2c_slave_reply@length
  2070                           
  2071                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2072  000AAE  0100               	movlb	0	; () banked
  2073  000AB0  EE20 F019          	lfsr	2,25
  2074  000AB4  0100               	movlb	0	; () banked
  2075  000AB6  51E7               	movf	_ic_ptr& (0+255),w,b
  2076  000AB8  26D9               	addwf	fsr2l,f,c
  2077  000ABA  0100               	movlb	0	; () banked
  2078  000ABC  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  2079  000ABE  22DA               	addwfc	fsr2h,f,c
  2080  000AC0  0E00               	movlw	0
  2081  000AC2  6EDF               	movwf	indf2,c
  2082  000AC4  D042               	goto	l2456
  2083  000AC6                     l2452:
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2087  000AC6  0100               	movlb	0	; () banked
  2088  000AC8  EE20 F019          	lfsr	2,25
  2089  000ACC  0100               	movlb	0	; () banked
  2090  000ACE  51E7               	movf	_ic_ptr& (0+255),w,b
  2091  000AD0  26D9               	addwf	fsr2l,f,c
  2092  000AD2  0100               	movlb	0	; () banked
  2093  000AD4  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  2094  000AD6  22DA               	addwfc	fsr2h,f,c
  2095  000AD8  50DF               	movf	indf2,w,c
  2096  000ADA  0100               	movlb	0	; () banked
  2097  000ADC  6FCF               	movwf	??_start_i2c_slave_reply& (0+255),b
  2098  000ADE  0100               	movlb	0	; () banked
  2099  000AE0  51CF               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2100  000AE2  0D01               	mullw	1
  2101  000AE4  50F3               	movf	prodl,w,c
  2102  000AE6  0100               	movlb	0	; () banked
  2103  000AE8  0100               	movlb	0	; () banked
  2104  000AEA  25CD               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2105  000AEC  6ED9               	movwf	fsr2l,c
  2106  000AEE  50F4               	movf	prodh,w,c
  2107  000AF0  0100               	movlb	0	; () banked
  2108  000AF2  0100               	movlb	0	; () banked
  2109  000AF4  21CE               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2110  000AF6  6EDA               	movwf	fsr2h,c
  2111  000AF8  0100               	movlb	0	; () banked
  2112  000AFA  EE10 F019          	lfsr	1,25
  2113  000AFE  0100               	movlb	0	; () banked
  2114  000B00  51E7               	movf	_ic_ptr& (0+255),w,b
  2115  000B02  26E1               	addwf	fsr1l,f,c
  2116  000B04  0100               	movlb	0	; () banked
  2117  000B06  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  2118  000B08  22E2               	addwfc	fsr1h,f,c
  2119  000B0A  50E7               	movf	indf1,w,c
  2120  000B0C  0100               	movlb	0	; () banked
  2121  000B0E  6FD0               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2122  000B10  0100               	movlb	0	; () banked
  2123  000B12  51D0               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2124  000B14  0D01               	mullw	1
  2125  000B16  0E0F               	movlw	15
  2126  000B18  26F3               	addwf	prodl,f,c
  2127  000B1A  0E00               	movlw	0
  2128  000B1C  22F4               	addwfc	prodh,f,c
  2129  000B1E  50F3               	movf	prodl,w,c
  2130  000B20  0100               	movlb	0	; () banked
  2131  000B22  0100               	movlb	0	; () banked
  2132  000B24  25E7               	addwf	_ic_ptr& (0+255),w,b
  2133  000B26  6EE1               	movwf	fsr1l,c
  2134  000B28  50F4               	movf	prodh,w,c
  2135  000B2A  0100               	movlb	0	; () banked
  2136  000B2C  0100               	movlb	0	; () banked
  2137  000B2E  21E8               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2138  000B30  6EE2               	movwf	fsr1h,c
  2139  000B32  CFDF FFE7          	movff	indf2,indf1
  2140                           
  2141                           ; BSR set to: 0
  2142  000B36  0100               	movlb	0	; () banked
  2143  000B38  EE20 F019          	lfsr	2,25
  2144  000B3C  0100               	movlb	0	; () banked
  2145  000B3E  51E7               	movf	_ic_ptr& (0+255),w,b
  2146  000B40  26D9               	addwf	fsr2l,f,c
  2147  000B42  0100               	movlb	0	; () banked
  2148  000B44  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  2149  000B46  22DA               	addwfc	fsr2h,f,c
  2150  000B48  2ADF               	incf	indf2,f,c
  2151  000B4A                     l2456:
  2152                           
  2153                           ; BSR set to: 0
  2154  000B4A  0100               	movlb	0	; () banked
  2155  000B4C  EE20 F019          	lfsr	2,25
  2156  000B50  0100               	movlb	0	; () banked
  2157  000B52  51E7               	movf	_ic_ptr& (0+255),w,b
  2158  000B54  26D9               	addwf	fsr2l,f,c
  2159  000B56  0100               	movlb	0	; () banked
  2160  000B58  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  2161  000B5A  22DA               	addwfc	fsr2h,f,c
  2162  000B5C  50DF               	movf	indf2,w,c
  2163  000B5E  0100               	movlb	0	; () banked
  2164  000B60  6FCF               	movwf	??_start_i2c_slave_reply& (0+255),b
  2165  000B62  0100               	movlb	0	; () banked
  2166  000B64  0100               	movlb	0	; () banked
  2167  000B66  51D1               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2168  000B68  0100               	movlb	0	; () banked
  2169  000B6A  5DCF               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2170  000B6C  A0D8               	btfss	status,0,c
  2171  000B6E  D7AB               	goto	l2452
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;my_i2c.c: 57: }
  2175                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2176                           
  2177                           ; BSR set to: 0
  2178  000B70  0100               	movlb	0	; () banked
  2179  000B72  EE20 F019          	lfsr	2,25
  2180  000B76  0100               	movlb	0	; () banked
  2181  000B78  51E7               	movf	_ic_ptr& (0+255),w,b
  2182  000B7A  26D9               	addwf	fsr2l,f,c
  2183  000B7C  0100               	movlb	0	; () banked
  2184  000B7E  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  2185  000B80  22DA               	addwfc	fsr2h,f,c
  2186  000B82  0100               	movlb	0	; () banked
  2187  000B84  C0D1  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2188                           
  2189                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2190  000B88  0100               	movlb	0	; () banked
  2191  000B8A  EE20 F01A          	lfsr	2,26
  2192  000B8E  0100               	movlb	0	; () banked
  2193  000B90  51E7               	movf	_ic_ptr& (0+255),w,b
  2194  000B92  26D9               	addwf	fsr2l,f,c
  2195  000B94  0100               	movlb	0	; () banked
  2196  000B96  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  2197  000B98  22DA               	addwfc	fsr2h,f,c
  2198  000B9A  0E01               	movlw	1
  2199  000B9C  6EDF               	movwf	indf2,c
  2200                           
  2201                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2202  000B9E  0100               	movlb	0	; () banked
  2203  000BA0  EE20 F00F          	lfsr	2,15
  2204  000BA4  0100               	movlb	0	; () banked
  2205  000BA6  51E7               	movf	_ic_ptr& (0+255),w,b
  2206  000BA8  26D9               	addwf	fsr2l,f,c
  2207  000BAA  0100               	movlb	0	; () banked
  2208  000BAC  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  2209  000BAE  22DA               	addwfc	fsr2h,f,c
  2210  000BB0  50DF               	movf	indf2,w,c
  2211  000BB2  6EC9               	movwf	4041,c	;volatile
  2212                           
  2213                           ; BSR set to: 0
  2214                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2215  000BB4  88C6               	bsf	4038,4,c	;volatile
  2216                           
  2217                           ; BSR set to: 0
  2218  000BB6  0012               	return	
  2219  000BB8                     __end_of_start_i2c_slave_reply:
  2220                           	opt stack 0
  2221                           tblptru	equ	0xFF8
  2222                           prodh	equ	0xFF4
  2223                           prodl	equ	0xFF3
  2224                           postinc0	equ	0xFEE
  2225                           wreg	equ	0xFE8
  2226                           indf1	equ	0xFE7
  2227                           fsr1h	equ	0xFE2
  2228                           fsr1l	equ	0xFE1
  2229                           indf2	equ	0xFDF
  2230                           postinc2	equ	0xFDE
  2231                           postdec2	equ	0xFDD
  2232                           fsr2h	equ	0xFDA
  2233                           fsr2l	equ	0xFD9
  2234                           status	equ	0xFD8
  2235                           
  2236 ;; *************** function _init_uart_recv *****************
  2237 ;; Defined at:
  2238 ;;		line 30 in file "../src/my_uart.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  uc              2   23[BANK0 ] PTR struct __uart_comm
  2241 ;;		 -> main@uc(5), 
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;		None
  2244 ;; Return value:  Size  Location     Type
  2245 ;;		None               void
  2246 ;; Registers used:
  2247 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2253 ;;      Params:         0       2       0       0       0
  2254 ;;      Locals:         0       0       0       0       0
  2255 ;;      Temps:          0       0       0       0       0
  2256 ;;      Totals:         0       2       0       0       0
  2257 ;;Total ram usage:        2 bytes
  2258 ;; Hardware stack levels used:    1
  2259 ;; Hardware stack levels required when called:   10
  2260 ;; This function calls:
  2261 ;;		Nothing
  2262 ;; This function is called by:
  2263 ;;		_main
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           	psect	text8
  2268  001942                     __ptext8:
  2269                           	opt stack 0
  2270  001942                     _init_uart_recv:
  2271                           	opt stack 19
  2272                           
  2273                           ;my_uart.c: 31: uc_ptr = uc;
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;incstack = 0
  2277  001942  0100               	movlb	0	; () banked
  2278  001944  C0CE  F04E         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2279  001948  0100               	movlb	0	; () banked
  2280  00194A  C0CD  F04D         	movff	init_uart_recv@uc,_uc_ptr
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;my_uart.c: 32: uc_ptr->buflen = 0;
  2284  00194E  EE20 F004          	lfsr	2,4
  2285  001952  504D               	movf	_uc_ptr,w,c
  2286  001954  26D9               	addwf	fsr2l,f,c
  2287  001956  504E               	movf	_uc_ptr+1,w,c
  2288  001958  22DA               	addwfc	fsr2h,f,c
  2289  00195A  0E00               	movlw	0
  2290  00195C  6EDF               	movwf	indf2,c
  2291                           
  2292                           ; BSR set to: 0
  2293  00195E  0012               	return	
  2294  001960                     __end_of_init_uart_recv:
  2295                           	opt stack 0
  2296                           tblptru	equ	0xFF8
  2297                           prodh	equ	0xFF4
  2298                           prodl	equ	0xFF3
  2299                           postinc0	equ	0xFEE
  2300                           wreg	equ	0xFE8
  2301                           indf1	equ	0xFE7
  2302                           fsr1h	equ	0xFE2
  2303                           fsr1l	equ	0xFE1
  2304                           indf2	equ	0xFDF
  2305                           postinc2	equ	0xFDE
  2306                           postdec2	equ	0xFDD
  2307                           fsr2h	equ	0xFDA
  2308                           fsr2l	equ	0xFD9
  2309                           status	equ	0xFD8
  2310                           
  2311 ;; *************** function _init_timer1_lthread *****************
  2312 ;; Defined at:
  2313 ;;		line 6 in file "../src/timer1_thread.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  tptr            2   23[BANK0 ] PTR struct __timer1_thre
  2316 ;;		 -> main@t1thread_data(2), 
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;		None
  2319 ;; Return value:  Size  Location     Type
  2320 ;;		None               void
  2321 ;; Registers used:
  2322 ;;		wreg, fsr2l, fsr2h
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2328 ;;      Params:         0       2       0       0       0
  2329 ;;      Locals:         0       0       0       0       0
  2330 ;;      Temps:          0       0       0       0       0
  2331 ;;      Totals:         0       2       0       0       0
  2332 ;;Total ram usage:        2 bytes
  2333 ;; Hardware stack levels used:    1
  2334 ;; Hardware stack levels required when called:   10
  2335 ;; This function calls:
  2336 ;;		Nothing
  2337 ;; This function is called by:
  2338 ;;		_main
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           	psect	text9
  2343  0019A6                     __ptext9:
  2344                           	opt stack 0
  2345  0019A6                     _init_timer1_lthread:
  2346                           	opt stack 19
  2347                           
  2348                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;incstack = 0
  2352  0019A6  C0CD  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2353  0019AA  C0CE  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2354  0019AE  0E00               	movlw	0
  2355  0019B0  6EDE               	movwf	postinc2,c
  2356  0019B2  0E00               	movlw	0
  2357  0019B4  6EDD               	movwf	postdec2,c
  2358  0019B6  0012               	return	
  2359  0019B8                     __end_of_init_timer1_lthread:
  2360                           	opt stack 0
  2361                           tblptru	equ	0xFF8
  2362                           prodh	equ	0xFF4
  2363                           prodl	equ	0xFF3
  2364                           postinc0	equ	0xFEE
  2365                           wreg	equ	0xFE8
  2366                           indf1	equ	0xFE7
  2367                           fsr1h	equ	0xFE2
  2368                           fsr1l	equ	0xFE1
  2369                           indf2	equ	0xFDF
  2370                           postinc2	equ	0xFDE
  2371                           postdec2	equ	0xFDD
  2372                           fsr2h	equ	0xFDA
  2373                           fsr2l	equ	0xFD9
  2374                           status	equ	0xFD8
  2375                           
  2376 ;; *************** function _init_queues *****************
  2377 ;; Defined at:
  2378 ;;		line 194 in file "../src/messages.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;		None
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;		None
  2383 ;; Return value:  Size  Location     Type
  2384 ;;		None               void
  2385 ;; Registers used:
  2386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2392 ;;      Params:         0       0       0       0       0
  2393 ;;      Locals:         0       0       0       0       0
  2394 ;;      Temps:          0       1       0       0       0
  2395 ;;      Totals:         0       1       0       0       0
  2396 ;;Total ram usage:        1 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; Hardware stack levels required when called:   11
  2399 ;; This function calls:
  2400 ;;		_init_queue
  2401 ;; This function is called by:
  2402 ;;		_main
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           	psect	text10
  2407  0013F0                     __ptext10:
  2408                           	opt stack 0
  2409  0013F0                     _init_queues:
  2410                           	opt stack 18
  2411                           
  2412                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2413                           
  2414                           ;incstack = 0
  2415  0013F0  0100               	movlb	0	; () banked
  2416  0013F2  6FD1               	movwf	??_init_queues& (0+255),b
  2417  0013F4  0E00               	movlw	0
  2418  0013F6  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  2419  0013F8  0100               	movlb	0	; () banked
  2420  0013FA  51D1               	movf	??_init_queues& (0+255),w,b
  2421                           
  2422                           ; BSR set to: 0
  2423                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2424  0013FC  0100               	movlb	0	; () banked
  2425  0013FE  0E00               	movlw	high _ToMainLow_MQ
  2426  001400  0100               	movlb	0	; () banked
  2427  001402  0100               	movlb	0	; () banked
  2428  001404  6FCE               	movwf	(init_queue@qptr+1)& (0+255),b
  2429  001406  0100               	movlb	0	; () banked
  2430  001408  0E80               	movlw	low _ToMainLow_MQ
  2431  00140A  0100               	movlb	0	; () banked
  2432  00140C  0100               	movlb	0	; () banked
  2433  00140E  6FCD               	movwf	init_queue@qptr& (0+255),b
  2434  001410  EC45  F009         	call	_init_queue	;wreg free
  2435                           
  2436                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2437  001414  0101               	movlb	1	; () banked
  2438  001416  0E01               	movlw	high _ToMainHigh_MQ
  2439  001418  0100               	movlb	0	; () banked
  2440  00141A  0100               	movlb	0	; () banked
  2441  00141C  6FCE               	movwf	(init_queue@qptr+1)& (0+255),b
  2442  00141E  0101               	movlb	1	; () banked
  2443  001420  0E6C               	movlw	low _ToMainHigh_MQ
  2444  001422  0100               	movlb	0	; () banked
  2445  001424  0100               	movlb	0	; () banked
  2446  001426  6FCD               	movwf	init_queue@qptr& (0+255),b
  2447  001428  EC45  F009         	call	_init_queue	;wreg free
  2448                           
  2449                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2450  00142C  0101               	movlb	1	; () banked
  2451  00142E  0E01               	movlw	high _FromMainLow_MQ
  2452  001430  0100               	movlb	0	; () banked
  2453  001432  0100               	movlb	0	; () banked
  2454  001434  6FCE               	movwf	(init_queue@qptr+1)& (0+255),b
  2455  001436  0101               	movlb	1	; () banked
  2456  001438  0E36               	movlw	low _FromMainLow_MQ
  2457  00143A  0100               	movlb	0	; () banked
  2458  00143C  0100               	movlb	0	; () banked
  2459  00143E  6FCD               	movwf	init_queue@qptr& (0+255),b
  2460  001440  EC45  F009         	call	_init_queue	;wreg free
  2461                           
  2462                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2463  001444  0101               	movlb	1	; () banked
  2464  001446  0E01               	movlw	high _FromMainHigh_MQ
  2465  001448  0100               	movlb	0	; () banked
  2466  00144A  0100               	movlb	0	; () banked
  2467  00144C  6FCE               	movwf	(init_queue@qptr+1)& (0+255),b
  2468  00144E  0101               	movlb	1	; () banked
  2469  001450  0E00               	movlw	low _FromMainHigh_MQ
  2470  001452  0100               	movlb	0	; () banked
  2471  001454  0100               	movlb	0	; () banked
  2472  001456  6FCD               	movwf	init_queue@qptr& (0+255),b
  2473  001458  EC45  F009         	call	_init_queue	;wreg free
  2474  00145C  0012               	return	
  2475  00145E                     __end_of_init_queues:
  2476                           	opt stack 0
  2477                           tblptru	equ	0xFF8
  2478                           prodh	equ	0xFF4
  2479                           prodl	equ	0xFF3
  2480                           postinc0	equ	0xFEE
  2481                           wreg	equ	0xFE8
  2482                           indf1	equ	0xFE7
  2483                           fsr1h	equ	0xFE2
  2484                           fsr1l	equ	0xFE1
  2485                           indf2	equ	0xFDF
  2486                           postinc2	equ	0xFDE
  2487                           postdec2	equ	0xFDD
  2488                           fsr2h	equ	0xFDA
  2489                           fsr2l	equ	0xFD9
  2490                           status	equ	0xFD8
  2491                           
  2492 ;; *************** function _init_queue *****************
  2493 ;; Defined at:
  2494 ;;		line 14 in file "../src/messages.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;  qptr            2   23[BANK0 ] PTR struct __msg_queue
  2497 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;  i               1   26[BANK0 ] unsigned char 
  2500 ;; Return value:  Size  Location     Type
  2501 ;;		None               void
  2502 ;; Registers used:
  2503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2509 ;;      Params:         0       2       0       0       0
  2510 ;;      Locals:         0       1       0       0       0
  2511 ;;      Temps:          0       1       0       0       0
  2512 ;;      Totals:         0       4       0       0       0
  2513 ;;Total ram usage:        4 bytes
  2514 ;; Hardware stack levels used:    1
  2515 ;; Hardware stack levels required when called:   10
  2516 ;; This function calls:
  2517 ;;		Nothing
  2518 ;; This function is called by:
  2519 ;;		_init_queues
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text11
  2524  00128A                     __ptext11:
  2525                           	opt stack 0
  2526  00128A                     _init_queue:
  2527                           	opt stack 18
  2528                           
  2529                           ;messages.c: 15: unsigned char i;
  2530                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2531                           
  2532                           ;incstack = 0
  2533  00128A  0100               	movlb	0	; () banked
  2534  00128C  EE20 F034          	lfsr	2,52
  2535  001290  0100               	movlb	0	; () banked
  2536  001292  51CD               	movf	init_queue@qptr& (0+255),w,b
  2537  001294  26D9               	addwf	fsr2l,f,c
  2538  001296  0100               	movlb	0	; () banked
  2539  001298  51CE               	movf	(init_queue@qptr+1)& (0+255),w,b
  2540  00129A  22DA               	addwfc	fsr2h,f,c
  2541  00129C  0E00               	movlw	0
  2542  00129E  6EDF               	movwf	indf2,c
  2543                           
  2544                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2545  0012A0  0100               	movlb	0	; () banked
  2546  0012A2  EE20 F035          	lfsr	2,53
  2547  0012A6  0100               	movlb	0	; () banked
  2548  0012A8  51CD               	movf	init_queue@qptr& (0+255),w,b
  2549  0012AA  26D9               	addwf	fsr2l,f,c
  2550  0012AC  0100               	movlb	0	; () banked
  2551  0012AE  51CE               	movf	(init_queue@qptr+1)& (0+255),w,b
  2552  0012B0  22DA               	addwfc	fsr2h,f,c
  2553  0012B2  0E00               	movlw	0
  2554  0012B4  6EDF               	movwf	indf2,c
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2558  0012B6  0100               	movlb	0	; () banked
  2559  0012B8  6FCF               	movwf	??_init_queue& (0+255),b
  2560  0012BA  0E00               	movlw	0
  2561  0012BC  0100               	movlb	0	; () banked
  2562  0012BE  0100               	movlb	0	; () banked
  2563  0012C0  6FD0               	movwf	init_queue@i& (0+255),b
  2564  0012C2  0100               	movlb	0	; () banked
  2565  0012C4  51CF               	movf	??_init_queue& (0+255),w,b
  2566                           
  2567                           ; BSR set to: 0
  2568  0012C6  0E03               	movlw	3
  2569  0012C8  0100               	movlb	0	; () banked
  2570  0012CA  0100               	movlb	0	; () banked
  2571  0012CC  65D0               	cpfsgt	init_queue@i& (0+255),b
  2572  0012CE  D001               	goto	l2490
  2573  0012D0  0012               	return	
  2574  0012D2                     l2490:
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;messages.c: 20: qptr->queue[i].full = 0;
  2578  0012D2  0100               	movlb	0	; () banked
  2579  0012D4  0100               	movlb	0	; () banked
  2580  0012D6  51D0               	movf	init_queue@i& (0+255),w,b
  2581  0012D8  0D0D               	mullw	13
  2582  0012DA  50F3               	movf	prodl,w,c
  2583  0012DC  0100               	movlb	0	; () banked
  2584  0012DE  0100               	movlb	0	; () banked
  2585  0012E0  25CD               	addwf	init_queue@qptr& (0+255),w,b
  2586  0012E2  6ED9               	movwf	fsr2l,c
  2587  0012E4  50F4               	movf	prodh,w,c
  2588  0012E6  0100               	movlb	0	; () banked
  2589  0012E8  0100               	movlb	0	; () banked
  2590  0012EA  21CE               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2591  0012EC  6EDA               	movwf	fsr2h,c
  2592  0012EE  0E00               	movlw	0
  2593  0012F0  6EDF               	movwf	indf2,c
  2594                           
  2595                           ; BSR set to: 0
  2596  0012F2  0100               	movlb	0	; () banked
  2597  0012F4  0100               	movlb	0	; () banked
  2598  0012F6  2BD0               	incf	init_queue@i& (0+255),f,b
  2599                           
  2600                           ; BSR set to: 0
  2601  0012F8  0E03               	movlw	3
  2602  0012FA  0100               	movlb	0	; () banked
  2603  0012FC  0100               	movlb	0	; () banked
  2604  0012FE  65D0               	cpfsgt	init_queue@i& (0+255),b
  2605  001300  D7E8               	goto	l2490
  2606  001302  0012               	return	
  2607  001304                     __end_of_init_queue:
  2608                           	opt stack 0
  2609                           tblptru	equ	0xFF8
  2610                           prodh	equ	0xFF4
  2611                           prodl	equ	0xFF3
  2612                           postinc0	equ	0xFEE
  2613                           wreg	equ	0xFE8
  2614                           indf1	equ	0xFE7
  2615                           fsr1h	equ	0xFE2
  2616                           fsr1l	equ	0xFE1
  2617                           indf2	equ	0xFDF
  2618                           postinc2	equ	0xFDE
  2619                           postdec2	equ	0xFDD
  2620                           fsr2h	equ	0xFDA
  2621                           fsr2l	equ	0xFD9
  2622                           status	equ	0xFD8
  2623                           
  2624 ;; *************** function _init_i2c *****************
  2625 ;; Defined at:
  2626 ;;		line 271 in file "../src/my_i2c.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  ic              2   23[BANK0 ] PTR struct __i2c_comm
  2629 ;;		 -> main@ic(28), 
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;		None
  2632 ;; Return value:  Size  Location     Type
  2633 ;;		None               void
  2634 ;; Registers used:
  2635 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2641 ;;      Params:         0       2       0       0       0
  2642 ;;      Locals:         0       0       0       0       0
  2643 ;;      Temps:          0       0       0       0       0
  2644 ;;      Totals:         0       2       0       0       0
  2645 ;;Total ram usage:        2 bytes
  2646 ;; Hardware stack levels used:    1
  2647 ;; Hardware stack levels required when called:   10
  2648 ;; This function calls:
  2649 ;;		Nothing
  2650 ;; This function is called by:
  2651 ;;		_main
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           	psect	text12
  2656  00145E                     __ptext12:
  2657                           	opt stack 0
  2658  00145E                     _init_i2c:
  2659                           	opt stack 19
  2660                           
  2661                           ;my_i2c.c: 272: ic_ptr = ic;
  2662                           
  2663                           ; BSR set to: 0
  2664                           ;incstack = 0
  2665  00145E  0100               	movlb	0	; () banked
  2666  001460  0100               	movlb	0	; () banked
  2667  001462  C0CE  F0E8         	movff	init_i2c@ic+1,_ic_ptr+1
  2668  001466  0100               	movlb	0	; () banked
  2669  001468  0100               	movlb	0	; () banked
  2670  00146A  C0CD  F0E7         	movff	init_i2c@ic,_ic_ptr
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;my_i2c.c: 273: ic_ptr->buflen = 0;
  2674  00146E  0100               	movlb	0	; () banked
  2675  001470  EE20 F00A          	lfsr	2,10
  2676  001474  0100               	movlb	0	; () banked
  2677  001476  51E7               	movf	_ic_ptr& (0+255),w,b
  2678  001478  26D9               	addwf	fsr2l,f,c
  2679  00147A  0100               	movlb	0	; () banked
  2680  00147C  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  2681  00147E  22DA               	addwfc	fsr2h,f,c
  2682  001480  0E00               	movlw	0
  2683  001482  6EDF               	movwf	indf2,c
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;my_i2c.c: 274: ic_ptr->event_count = 0;
  2687  001484  0100               	movlb	0	; () banked
  2688  001486  EE20 F00B          	lfsr	2,11
  2689  00148A  0100               	movlb	0	; () banked
  2690  00148C  51E7               	movf	_ic_ptr& (0+255),w,b
  2691  00148E  26D9               	addwf	fsr2l,f,c
  2692  001490  0100               	movlb	0	; () banked
  2693  001492  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  2694  001494  22DA               	addwfc	fsr2h,f,c
  2695  001496  0E00               	movlw	0
  2696  001498  6EDF               	movwf	indf2,c
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;my_i2c.c: 275: ic_ptr->status = 0x5;
  2700  00149A  0100               	movlb	0	; () banked
  2701  00149C  EE20 F00C          	lfsr	2,12
  2702  0014A0  0100               	movlb	0	; () banked
  2703  0014A2  51E7               	movf	_ic_ptr& (0+255),w,b
  2704  0014A4  26D9               	addwf	fsr2l,f,c
  2705  0014A6  0100               	movlb	0	; () banked
  2706  0014A8  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  2707  0014AA  22DA               	addwfc	fsr2h,f,c
  2708  0014AC  0E05               	movlw	5
  2709  0014AE  6EDF               	movwf	indf2,c
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;my_i2c.c: 276: ic_ptr->error_count = 0;
  2713  0014B0  0100               	movlb	0	; () banked
  2714  0014B2  EE20 F00E          	lfsr	2,14
  2715  0014B6  0100               	movlb	0	; () banked
  2716  0014B8  51E7               	movf	_ic_ptr& (0+255),w,b
  2717  0014BA  26D9               	addwf	fsr2l,f,c
  2718  0014BC  0100               	movlb	0	; () banked
  2719  0014BE  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  2720  0014C0  22DA               	addwfc	fsr2h,f,c
  2721  0014C2  0E00               	movlw	0
  2722  0014C4  6EDF               	movwf	indf2,c
  2723                           
  2724                           ; BSR set to: 0
  2725  0014C6  0012               	return	
  2726  0014C8                     __end_of_init_i2c:
  2727                           	opt stack 0
  2728                           tblptru	equ	0xFF8
  2729                           prodh	equ	0xFF4
  2730                           prodl	equ	0xFF3
  2731                           postinc0	equ	0xFEE
  2732                           wreg	equ	0xFE8
  2733                           indf1	equ	0xFE7
  2734                           fsr1h	equ	0xFE2
  2735                           fsr1l	equ	0xFE1
  2736                           indf2	equ	0xFDF
  2737                           postinc2	equ	0xFDE
  2738                           postdec2	equ	0xFDD
  2739                           fsr2h	equ	0xFDA
  2740                           fsr2l	equ	0xFD9
  2741                           status	equ	0xFD8
  2742                           
  2743 ;; *************** function _i2c_configure_slave *****************
  2744 ;; Defined at:
  2745 ;;		line 282 in file "../src/my_i2c.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;  addr            1    wreg     unsigned char 
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;  addr            1   23[BANK0 ] unsigned char 
  2750 ;; Return value:  Size  Location     Type
  2751 ;;		None               void
  2752 ;; Registers used:
  2753 ;;		wreg, status,2, status,0
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2759 ;;      Params:         0       0       0       0       0
  2760 ;;      Locals:         0       1       0       0       0
  2761 ;;      Temps:          0       0       0       0       0
  2762 ;;      Totals:         0       1       0       0       0
  2763 ;;Total ram usage:        1 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; Hardware stack levels required when called:   10
  2766 ;; This function calls:
  2767 ;;		Nothing
  2768 ;; This function is called by:
  2769 ;;		_main
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	text13
  2774  001884                     __ptext13:
  2775                           	opt stack 0
  2776  001884                     _i2c_configure_slave:
  2777                           	opt stack 19
  2778                           
  2779                           ; BSR set to: 0
  2780                           ;incstack = 0
  2781                           ;i2c_configure_slave@addr stored from wreg
  2782  001884  CFE8 F0CD          	movff	wreg,i2c_configure_slave@addr
  2783                           
  2784                           ;my_i2c.c: 285: TRISCbits.TRISC3 = 1;
  2785  001888  8694               	bsf	3988,3,c	;volatile
  2786                           
  2787                           ;my_i2c.c: 286: TRISCbits.TRISC4 = 1;
  2788  00188A  8894               	bsf	3988,4,c	;volatile
  2789                           
  2790                           ;my_i2c.c: 288: SSPADD = addr;
  2791  00188C  C0CD  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  2792                           
  2793                           ;my_i2c.c: 290: SSPSTAT = 0x0;
  2794  001890  0E00               	movlw	0
  2795  001892  6EC7               	movwf	4039,c	;volatile
  2796                           
  2797                           ;my_i2c.c: 291: SSPCON1 = 0x0;
  2798  001894  0E00               	movlw	0
  2799  001896  6EC6               	movwf	4038,c	;volatile
  2800                           
  2801                           ;my_i2c.c: 292: SSPCON2 = 0x0;
  2802  001898  0E00               	movlw	0
  2803  00189A  6EC5               	movwf	4037,c	;volatile
  2804                           
  2805                           ;my_i2c.c: 293: SSPCON1 |= 0x0E;
  2806  00189C  0E0E               	movlw	14
  2807  00189E  12C6               	iorwf	4038,f,c	;volatile
  2808                           
  2809                           ;my_i2c.c: 294: SSPSTAT |= 0b10000000;
  2810  0018A0  8EC7               	bsf	4039,7,c	;volatile
  2811                           
  2812                           ;my_i2c.c: 296: TRISCbits.TRISC3 = 1;
  2813  0018A2  8694               	bsf	3988,3,c	;volatile
  2814                           
  2815                           ;my_i2c.c: 297: TRISCbits.TRISC4 = 1;
  2816  0018A4  8894               	bsf	3988,4,c	;volatile
  2817                           
  2818                           ;my_i2c.c: 307: SSPCON2bits.SEN = 1;
  2819  0018A6  80C5               	bsf	4037,0,c	;volatile
  2820                           
  2821                           ;my_i2c.c: 308: SSPCON1 |= 0b00100000;
  2822  0018A8  8AC6               	bsf	4038,5,c	;volatile
  2823  0018AA  0012               	return	
  2824  0018AC                     __end_of_i2c_configure_slave:
  2825                           	opt stack 0
  2826                           tblptru	equ	0xFF8
  2827                           prodh	equ	0xFF4
  2828                           prodl	equ	0xFF3
  2829                           postinc0	equ	0xFEE
  2830                           wreg	equ	0xFE8
  2831                           indf1	equ	0xFE7
  2832                           fsr1h	equ	0xFE2
  2833                           fsr1l	equ	0xFE1
  2834                           indf2	equ	0xFDF
  2835                           postinc2	equ	0xFDE
  2836                           postdec2	equ	0xFDD
  2837                           fsr2h	equ	0xFDA
  2838                           fsr2l	equ	0xFD9
  2839                           status	equ	0xFD8
  2840                           
  2841 ;; *************** function _enable_interrupts *****************
  2842 ;; Defined at:
  2843 ;;		line 14 in file "../src/interrupts.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;		None
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;		None
  2848 ;; Return value:  Size  Location     Type
  2849 ;;		None               void
  2850 ;; Registers used:
  2851 ;;		None
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2857 ;;      Params:         0       0       0       0       0
  2858 ;;      Locals:         0       0       0       0       0
  2859 ;;      Temps:          0       0       0       0       0
  2860 ;;      Totals:         0       0       0       0       0
  2861 ;;Total ram usage:        0 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:   10
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		_main
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           	psect	text14
  2872  001A0C                     __ptext14:
  2873                           	opt stack 0
  2874  001A0C                     _enable_interrupts:
  2875                           	opt stack 19
  2876                           
  2877                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  2878                           
  2879                           ;incstack = 0
  2880  001A0C  8ED0               	bsf	4048,7,c	;volatile
  2881                           
  2882                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  2883  001A0E  8EF2               	bsf	intcon,7,c	;volatile
  2884                           
  2885                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  2886  001A10  8CF2               	bsf	intcon,6,c	;volatile
  2887  001A12  0012               	return	
  2888  001A14                     __end_of_enable_interrupts:
  2889                           	opt stack 0
  2890                           tblptru	equ	0xFF8
  2891                           prodh	equ	0xFF4
  2892                           prodl	equ	0xFF3
  2893                           intcon	equ	0xFF2
  2894                           postinc0	equ	0xFEE
  2895                           wreg	equ	0xFE8
  2896                           indf1	equ	0xFE7
  2897                           fsr1h	equ	0xFE2
  2898                           fsr1l	equ	0xFE1
  2899                           indf2	equ	0xFDF
  2900                           postinc2	equ	0xFDE
  2901                           postdec2	equ	0xFDD
  2902                           fsr2h	equ	0xFDA
  2903                           fsr2l	equ	0xFD9
  2904                           status	equ	0xFD8
  2905                           
  2906 ;; *************** function _block_on_To_msgqueues *****************
  2907 ;; Defined at:
  2908 ;;		line 258 in file "../src/messages.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;		None
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;		None
  2913 ;; Return value:  Size  Location     Type
  2914 ;;		None               void
  2915 ;; Registers used:
  2916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2922 ;;      Params:         0       0       0       0       0
  2923 ;;      Locals:         0       0       0       0       0
  2924 ;;      Temps:          0       1       0       0       0
  2925 ;;      Totals:         0       1       0       0       0
  2926 ;;Total ram usage:        1 bytes
  2927 ;; Hardware stack levels used:    1
  2928 ;; Hardware stack levels required when called:   13
  2929 ;; This function calls:
  2930 ;;		_Delay1KTCYx
  2931 ;;		_check_msg
  2932 ;;		_in_main
  2933 ;; This function is called by:
  2934 ;;		_main
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text15
  2939  000FAA                     __ptext15:
  2940                           	opt stack 0
  2941  000FAA                     _block_on_To_msgqueues:
  2942                           	opt stack 16
  2943                           
  2944                           ;messages.c: 259: if (!in_main()) {
  2945                           
  2946                           ;incstack = 0
  2947  000FAA  EC01  F00B         	call	_in_main	;wreg free
  2948  000FAE  0100               	movlb	0	; () banked
  2949  000FB0  0100               	movlb	0	; () banked
  2950  000FB2  51D2               	movf	(?_in_main+1)& (0+255),w,b
  2951  000FB4  0100               	movlb	0	; () banked
  2952  000FB6  11D1               	iorwf	?_in_main& (0+255),w,b
  2953  000FB8  B4D8               	btfsc	status,2,c
  2954  000FBA  0012               	return	
  2955                           
  2956                           ; BSR set to: 0
  2957                           ;messages.c: 261: }
  2958                           ;messages.c: 262: LATBbits.LATB3 = 1;
  2959                           
  2960                           ; BSR set to: 0
  2961                           ;messages.c: 260: return;
  2962  000FBC  868A               	bsf	3978,3,c	;volatile
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  2966  000FBE  0100               	movlb	0	; () banked
  2967  000FC0  6FD3               	movwf	??_block_on_To_msgqueues& (0+255),b
  2968  000FC2  0E01               	movlw	1
  2969  000FC4  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  2970  000FC6  0100               	movlb	0	; () banked
  2971  000FC8  51D3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2972  000FCA                     l2424:
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  2976  000FCA  0101               	movlb	1	; () banked
  2977  000FCC  0E01               	movlw	high _ToMainHigh_MQ
  2978  000FCE  0100               	movlb	0	; () banked
  2979  000FD0  0100               	movlb	0	; () banked
  2980  000FD2  6FCE               	movwf	(check_msg@qptr+1)& (0+255),b
  2981  000FD4  0101               	movlb	1	; () banked
  2982  000FD6  0E6C               	movlw	low _ToMainHigh_MQ
  2983  000FD8  0100               	movlb	0	; () banked
  2984  000FDA  0100               	movlb	0	; () banked
  2985  000FDC  6FCD               	movwf	check_msg@qptr& (0+255),b
  2986  000FDE  ECFB  F00B         	call	_check_msg	;wreg free
  2987  000FE2  0900               	iorlw	0
  2988  000FE4  B4D8               	btfsc	status,2,c
  2989  000FE6  D008               	goto	l2432
  2990                           
  2991                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  2992  000FE8  0100               	movlb	0	; () banked
  2993  000FEA  6FD3               	movwf	??_block_on_To_msgqueues& (0+255),b
  2994  000FEC  0E00               	movlw	0
  2995  000FEE  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  2996  000FF0  0100               	movlb	0	; () banked
  2997  000FF2  51D3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;messages.c: 267: LATBbits.LATB3 = 0;
  3001  000FF4  968A               	bcf	3978,3,c	;volatile
  3002  000FF6  0012               	return	
  3003  000FF8                     l2432:
  3004                           
  3005                           ;messages.c: 269: }
  3006                           ;messages.c: 270: if (check_msg(&ToMainLow_MQ)) {
  3007  000FF8  0100               	movlb	0	; () banked
  3008  000FFA  0E00               	movlw	high _ToMainLow_MQ
  3009  000FFC  0100               	movlb	0	; () banked
  3010  000FFE  0100               	movlb	0	; () banked
  3011  001000  6FCE               	movwf	(check_msg@qptr+1)& (0+255),b
  3012  001002  0100               	movlb	0	; () banked
  3013  001004  0E80               	movlw	low _ToMainLow_MQ
  3014  001006  0100               	movlb	0	; () banked
  3015  001008  0100               	movlb	0	; () banked
  3016  00100A  6FCD               	movwf	check_msg@qptr& (0+255),b
  3017  00100C  ECFB  F00B         	call	_check_msg	;wreg free
  3018  001010  0900               	iorlw	0
  3019  001012  B4D8               	btfsc	status,2,c
  3020  001014  D008               	goto	l2440
  3021                           
  3022                           ;messages.c: 271: MQ_Main_Willing_to_block = 0;
  3023  001016  0100               	movlb	0	; () banked
  3024  001018  6FD3               	movwf	??_block_on_To_msgqueues& (0+255),b
  3025  00101A  0E00               	movlw	0
  3026  00101C  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  3027  00101E  0100               	movlb	0	; () banked
  3028  001020  51D3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;messages.c: 272: LATBbits.LATB3 = 0;
  3032  001022  968A               	bcf	3978,3,c	;volatile
  3033  001024  0012               	return	
  3034  001026                     l2440:
  3035                           
  3036                           ;messages.c: 274: }
  3037                           ;messages.c: 275: Delay1KTCYx(10);
  3038  001026  0E0A               	movlw	10
  3039  001028  ECBF  F00C         	call	_Delay1KTCYx
  3040                           
  3041                           ;messages.c: 276: LATBbits.LATB3 = !LATBbits.LATB3;
  3042  00102C  B68A               	btfsc	3978,3,c	;volatile
  3043  00102E  D002               	goto	u1560
  3044  001030  0E01               	movlw	1
  3045  001032  D001               	goto	u1566
  3046  001034                     u1560:
  3047  001034  0E00               	movlw	0
  3048  001036                     u1566:
  3049  001036  0100               	movlb	0	; () banked
  3050  001038  6FD3               	movwf	??_block_on_To_msgqueues& (0+255),b
  3051  00103A  0100               	movlb	0	; () banked
  3052  00103C  47D3               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3053  00103E  47D3               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3054  001040  47D3               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3055  001042  508A               	movf	3978,w,c	;volatile
  3056  001044  0100               	movlb	0	; () banked
  3057  001046  19D3               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  3058  001048  0BF7               	andlw	-9
  3059  00104A  19D3               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  3060  00104C  6E8A               	movwf	3978,c	;volatile
  3061  00104E  D7BD               	goto	l2424
  3062  001050                     __end_of_block_on_To_msgqueues:
  3063                           	opt stack 0
  3064                           tblptru	equ	0xFF8
  3065                           prodh	equ	0xFF4
  3066                           prodl	equ	0xFF3
  3067                           intcon	equ	0xFF2
  3068                           postinc0	equ	0xFEE
  3069                           wreg	equ	0xFE8
  3070                           indf1	equ	0xFE7
  3071                           fsr1h	equ	0xFE2
  3072                           fsr1l	equ	0xFE1
  3073                           indf2	equ	0xFDF
  3074                           postinc2	equ	0xFDE
  3075                           postdec2	equ	0xFDD
  3076                           fsr2h	equ	0xFDA
  3077                           fsr2l	equ	0xFD9
  3078                           status	equ	0xFD8
  3079                           
  3080 ;; *************** function _in_main *****************
  3081 ;; Defined at:
  3082 ;;		line 40 in file "../src/interrupts.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;		None
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;		None
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  2   27[BANK0 ] int 
  3089 ;; Registers used:
  3090 ;;		wreg, status,2, status,0, cstack
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3096 ;;      Params:         0       2       0       0       0
  3097 ;;      Locals:         0       0       0       0       0
  3098 ;;      Temps:          0       0       0       0       0
  3099 ;;      Totals:         0       2       0       0       0
  3100 ;;Total ram usage:        2 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:   12
  3103 ;; This function calls:
  3104 ;;		_in_high_int
  3105 ;;		_in_low_int
  3106 ;; This function is called by:
  3107 ;;		_block_on_To_msgqueues
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           	psect	text16
  3112  001602                     __ptext16:
  3113                           	opt stack 0
  3114  001602                     _in_main:
  3115                           	opt stack 16
  3116                           
  3117                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;incstack = 0
  3121  001602  ECDE  F00A         	call	_in_low_int	;wreg free
  3122  001606  0100               	movlb	0	; () banked
  3123  001608  0100               	movlb	0	; () banked
  3124  00160A  51D0               	movf	(?_in_low_int+1)& (0+255),w,b
  3125  00160C  0100               	movlb	0	; () banked
  3126  00160E  11CF               	iorwf	?_in_low_int& (0+255),w,b
  3127  001610  A4D8               	btfss	status,2,c
  3128  001612  D011               	goto	l2044
  3129                           
  3130                           ; BSR set to: 0
  3131  001614  ECDC  F00C         	call	_in_high_int	;wreg free
  3132  001618  0100               	movlb	0	; () banked
  3133  00161A  0100               	movlb	0	; () banked
  3134  00161C  51CE               	movf	(?_in_high_int+1)& (0+255),w,b
  3135  00161E  0100               	movlb	0	; () banked
  3136  001620  11CD               	iorwf	?_in_high_int& (0+255),w,b
  3137  001622  A4D8               	btfss	status,2,c
  3138  001624  D008               	goto	l2044
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;interrupts.c: 42: return (1);
  3142  001626  0E00               	movlw	0
  3143  001628  0100               	movlb	0	; () banked
  3144  00162A  0100               	movlb	0	; () banked
  3145  00162C  6FD2               	movwf	(?_in_main+1)& (0+255),b
  3146  00162E  0E01               	movlw	1
  3147  001630  0100               	movlb	0	; () banked
  3148  001632  6FD1               	movwf	?_in_main& (0+255),b
  3149  001634  0012               	return	
  3150  001636                     l2044:
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;interrupts.c: 44: return (0);
  3154  001636  0E00               	movlw	0
  3155  001638  0100               	movlb	0	; () banked
  3156  00163A  0100               	movlb	0	; () banked
  3157  00163C  6FD2               	movwf	(?_in_main+1)& (0+255),b
  3158  00163E  0E00               	movlw	0
  3159  001640  0100               	movlb	0	; () banked
  3160  001642  6FD1               	movwf	?_in_main& (0+255),b
  3161  001644  0012               	return	
  3162  001646                     __end_of_in_main:
  3163                           	opt stack 0
  3164                           tblptru	equ	0xFF8
  3165                           prodh	equ	0xFF4
  3166                           prodl	equ	0xFF3
  3167                           intcon	equ	0xFF2
  3168                           postinc0	equ	0xFEE
  3169                           wreg	equ	0xFE8
  3170                           indf1	equ	0xFE7
  3171                           fsr1h	equ	0xFE2
  3172                           fsr1l	equ	0xFE1
  3173                           indf2	equ	0xFDF
  3174                           postinc2	equ	0xFDE
  3175                           postdec2	equ	0xFDD
  3176                           fsr2h	equ	0xFDA
  3177                           fsr2l	equ	0xFD9
  3178                           status	equ	0xFD8
  3179                           
  3180 ;; *************** function _in_low_int *****************
  3181 ;; Defined at:
  3182 ;;		line 30 in file "../src/interrupts.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;		None
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;		None
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  2   25[BANK0 ] int 
  3189 ;; Registers used:
  3190 ;;		wreg, status,2, status,0, cstack
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3196 ;;      Params:         0       2       0       0       0
  3197 ;;      Locals:         0       0       0       0       0
  3198 ;;      Temps:          0       0       0       0       0
  3199 ;;      Totals:         0       2       0       0       0
  3200 ;;Total ram usage:        2 bytes
  3201 ;; Hardware stack levels used:    1
  3202 ;; Hardware stack levels required when called:   11
  3203 ;; This function calls:
  3204 ;;		_in_high_int
  3205 ;; This function is called by:
  3206 ;;		_in_main
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           	psect	text17
  3211  0015BC                     __ptext17:
  3212                           	opt stack 0
  3213  0015BC                     _in_low_int:
  3214                           	opt stack 16
  3215                           
  3216                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;incstack = 0
  3220  0015BC  ACF2               	btfss	intcon,6,c	;volatile
  3221  0015BE  D008               	goto	l2022
  3222                           
  3223                           ;interrupts.c: 32: return (0);
  3224  0015C0  0E00               	movlw	0
  3225  0015C2  0100               	movlb	0	; () banked
  3226  0015C4  0100               	movlb	0	; () banked
  3227  0015C6  6FD0               	movwf	(?_in_low_int+1)& (0+255),b
  3228  0015C8  0E00               	movlw	0
  3229  0015CA  0100               	movlb	0	; () banked
  3230  0015CC  6FCF               	movwf	?_in_low_int& (0+255),b
  3231  0015CE  0012               	return	
  3232  0015D0                     l2022:
  3233  0015D0  ECDC  F00C         	call	_in_high_int	;wreg free
  3234  0015D4  0100               	movlb	0	; () banked
  3235  0015D6  0100               	movlb	0	; () banked
  3236  0015D8  51CE               	movf	(?_in_high_int+1)& (0+255),w,b
  3237  0015DA  0100               	movlb	0	; () banked
  3238  0015DC  11CD               	iorwf	?_in_high_int& (0+255),w,b
  3239  0015DE  B4D8               	btfsc	status,2,c
  3240  0015E0  D008               	goto	l2030
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;interrupts.c: 34: return (0);
  3244  0015E2  0E00               	movlw	0
  3245  0015E4  0100               	movlb	0	; () banked
  3246  0015E6  0100               	movlb	0	; () banked
  3247  0015E8  6FD0               	movwf	(?_in_low_int+1)& (0+255),b
  3248  0015EA  0E00               	movlw	0
  3249  0015EC  0100               	movlb	0	; () banked
  3250  0015EE  6FCF               	movwf	?_in_low_int& (0+255),b
  3251  0015F0  0012               	return	
  3252  0015F2                     l2030:
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;interrupts.c: 36: return (1);
  3256  0015F2  0E00               	movlw	0
  3257  0015F4  0100               	movlb	0	; () banked
  3258  0015F6  0100               	movlb	0	; () banked
  3259  0015F8  6FD0               	movwf	(?_in_low_int+1)& (0+255),b
  3260  0015FA  0E01               	movlw	1
  3261  0015FC  0100               	movlb	0	; () banked
  3262  0015FE  6FCF               	movwf	?_in_low_int& (0+255),b
  3263  001600  0012               	return	
  3264  001602                     __end_of_in_low_int:
  3265                           	opt stack 0
  3266                           tblptru	equ	0xFF8
  3267                           prodh	equ	0xFF4
  3268                           prodl	equ	0xFF3
  3269                           intcon	equ	0xFF2
  3270                           postinc0	equ	0xFEE
  3271                           wreg	equ	0xFE8
  3272                           indf1	equ	0xFE7
  3273                           fsr1h	equ	0xFE2
  3274                           fsr1l	equ	0xFE1
  3275                           indf2	equ	0xFDF
  3276                           postinc2	equ	0xFDE
  3277                           postdec2	equ	0xFDD
  3278                           fsr2h	equ	0xFDA
  3279                           fsr2l	equ	0xFD9
  3280                           status	equ	0xFD8
  3281                           
  3282 ;; *************** function _in_high_int *****************
  3283 ;; Defined at:
  3284 ;;		line 22 in file "../src/interrupts.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;		None
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;		None
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  2   23[BANK0 ] int 
  3291 ;; Registers used:
  3292 ;;		wreg, status,2
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3298 ;;      Params:         0       2       0       0       0
  3299 ;;      Locals:         0       0       0       0       0
  3300 ;;      Temps:          0       0       0       0       0
  3301 ;;      Totals:         0       2       0       0       0
  3302 ;;Total ram usage:        2 bytes
  3303 ;; Hardware stack levels used:    1
  3304 ;; Hardware stack levels required when called:   10
  3305 ;; This function calls:
  3306 ;;		Nothing
  3307 ;; This function is called by:
  3308 ;;		_in_low_int
  3309 ;;		_in_main
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           	psect	text18
  3314  0019B8                     __ptext18:
  3315                           	opt stack 0
  3316  0019B8                     _in_high_int:
  3317                           	opt stack 16
  3318                           
  3319                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;incstack = 0
  3323  0019B8  0E00               	movlw	0
  3324  0019BA  AEF2               	btfss	intcon,7,c	;volatile
  3325  0019BC  0E01               	movlw	1
  3326  0019BE  0100               	movlb	0	; () banked
  3327  0019C0  0100               	movlb	0	; () banked
  3328  0019C2  6FCD               	movwf	?_in_high_int& (0+255),b
  3329  0019C4  0100               	movlb	0	; () banked
  3330  0019C6  6BCE               	clrf	(?_in_high_int+1)& (0+255),b
  3331  0019C8  0012               	return	
  3332  0019CA                     __end_of_in_high_int:
  3333                           	opt stack 0
  3334                           tblptru	equ	0xFF8
  3335                           prodh	equ	0xFF4
  3336                           prodl	equ	0xFF3
  3337                           intcon	equ	0xFF2
  3338                           postinc0	equ	0xFEE
  3339                           wreg	equ	0xFE8
  3340                           indf1	equ	0xFE7
  3341                           fsr1h	equ	0xFE2
  3342                           fsr1l	equ	0xFE1
  3343                           indf2	equ	0xFDF
  3344                           postinc2	equ	0xFDE
  3345                           postdec2	equ	0xFDD
  3346                           fsr2h	equ	0xFDA
  3347                           fsr2l	equ	0xFD9
  3348                           status	equ	0xFD8
  3349                           
  3350 ;; *************** function _check_msg *****************
  3351 ;; Defined at:
  3352 ;;		line 222 in file "../src/messages.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;  qptr            2   23[BANK0 ] PTR struct __msg_queue
  3355 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;		None
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  1    wreg      unsigned char 
  3360 ;; Registers used:
  3361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3367 ;;      Params:         0       2       0       0       0
  3368 ;;      Locals:         0       0       0       0       0
  3369 ;;      Temps:          0       1       0       0       0
  3370 ;;      Totals:         0       3       0       0       0
  3371 ;;Total ram usage:        3 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:   10
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		_block_on_To_msgqueues
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text19
  3382  0017F6                     __ptext19:
  3383                           	opt stack 0
  3384  0017F6                     _check_msg:
  3385                           	opt stack 18
  3386                           
  3387                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;incstack = 0
  3391  0017F6  0100               	movlb	0	; () banked
  3392  0017F8  EE20 F035          	lfsr	2,53
  3393  0017FC  0100               	movlb	0	; () banked
  3394  0017FE  51CD               	movf	check_msg@qptr& (0+255),w,b
  3395  001800  26D9               	addwf	fsr2l,f,c
  3396  001802  0100               	movlb	0	; () banked
  3397  001804  51CE               	movf	(check_msg@qptr+1)& (0+255),w,b
  3398  001806  22DA               	addwfc	fsr2h,f,c
  3399  001808  50DF               	movf	indf2,w,c
  3400  00180A  0100               	movlb	0	; () banked
  3401  00180C  6FCF               	movwf	??_check_msg& (0+255),b
  3402  00180E  0100               	movlb	0	; () banked
  3403  001810  51CF               	movf	??_check_msg& (0+255),w,b
  3404  001812  0D0D               	mullw	13
  3405  001814  50F3               	movf	prodl,w,c
  3406  001816  0100               	movlb	0	; () banked
  3407  001818  0100               	movlb	0	; () banked
  3408  00181A  25CD               	addwf	check_msg@qptr& (0+255),w,b
  3409  00181C  6ED9               	movwf	fsr2l,c
  3410  00181E  50F4               	movf	prodh,w,c
  3411  001820  0100               	movlb	0	; () banked
  3412  001822  0100               	movlb	0	; () banked
  3413  001824  21CE               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3414  001826  6EDA               	movwf	fsr2h,c
  3415  001828  50DF               	movf	indf2,w,c
  3416  00182A  0012               	return	
  3417  00182C                     __end_of_check_msg:
  3418                           	opt stack 0
  3419                           tblptru	equ	0xFF8
  3420                           prodh	equ	0xFF4
  3421                           prodl	equ	0xFF3
  3422                           intcon	equ	0xFF2
  3423                           postinc0	equ	0xFEE
  3424                           wreg	equ	0xFE8
  3425                           indf1	equ	0xFE7
  3426                           fsr1h	equ	0xFE2
  3427                           fsr1l	equ	0xFE1
  3428                           indf2	equ	0xFDF
  3429                           postinc2	equ	0xFDE
  3430                           postdec2	equ	0xFDD
  3431                           fsr2h	equ	0xFDA
  3432                           fsr2l	equ	0xFD9
  3433                           status	equ	0xFD8
  3434                           
  3435 ;; *************** function _Delay1KTCYx *****************
  3436 ;; Defined at:
  3437 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;  unit            1    wreg     unsigned char 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  unit            1   23[BANK0 ] unsigned char 
  3442 ;; Return value:  Size  Location     Type
  3443 ;;		None               void
  3444 ;; Registers used:
  3445 ;;		wreg
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3451 ;;      Params:         0       0       0       0       0
  3452 ;;      Locals:         0       1       0       0       0
  3453 ;;      Temps:          0       0       0       0       0
  3454 ;;      Totals:         0       1       0       0       0
  3455 ;;Total ram usage:        1 bytes
  3456 ;; Hardware stack levels used:    1
  3457 ;; Hardware stack levels required when called:   10
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_block_on_To_msgqueues
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           	psect	text20
  3466  00197E                     __ptext20:
  3467                           	opt stack 0
  3468  00197E                     _Delay1KTCYx:
  3469                           	opt stack 18
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;incstack = 0
  3473                           ;Delay1KTCYx@unit stored from wreg
  3474  00197E  CFE8 F0CD          	movff	wreg,Delay1KTCYx@unit
  3475  001982                     l666:
  3476  001982  0EFA               	movlw	250
  3477  001984                     u2017:
  3478  001984  F000               	nop	
  3479  001986  2EE8               	decfsz	wreg,f,c
  3480  001988  D7FD               	goto	u2017
  3481  00198A  0100               	movlb	0	; () banked
  3482  00198C  0100               	movlb	0	; () banked
  3483  00198E  2FCD               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3484  001990  D7F8               	goto	l666
  3485  001992  0012               	return	
  3486  001994                     __end_of_Delay1KTCYx:
  3487                           	opt stack 0
  3488                           tblptru	equ	0xFF8
  3489                           prodh	equ	0xFF4
  3490                           prodl	equ	0xFF3
  3491                           intcon	equ	0xFF2
  3492                           postinc0	equ	0xFEE
  3493                           wreg	equ	0xFE8
  3494                           indf1	equ	0xFE7
  3495                           fsr1h	equ	0xFE2
  3496                           fsr1l	equ	0xFE1
  3497                           indf2	equ	0xFDF
  3498                           postinc2	equ	0xFDE
  3499                           postdec2	equ	0xFDD
  3500                           fsr2h	equ	0xFDA
  3501                           fsr2l	equ	0xFD9
  3502                           status	equ	0xFD8
  3503                           
  3504 ;; *************** function _ToMainLow_recvmsg *****************
  3505 ;; Defined at:
  3506 ;;		line 112 in file "../src/messages.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;  maxlength       1    wreg     unsigned char 
  3509 ;;  msgtype         2    0[BANK1 ] PTR unsigned char 
  3510 ;;		 -> main@msgtype(1), 
  3511 ;;  data            2    2[BANK1 ] PTR void 
  3512 ;;		 -> main@msgbuffer(11), 
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;  maxlength       1   47[BANK0 ] unsigned char 
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  1    wreg      char 
  3517 ;; Registers used:
  3518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3524 ;;      Params:         0       0       4       0       0
  3525 ;;      Locals:         0       1       0       0       0
  3526 ;;      Temps:          0       0       0       0       0
  3527 ;;      Totals:         0       1       4       0       0
  3528 ;;Total ram usage:        5 bytes
  3529 ;; Hardware stack levels used:    1
  3530 ;; Hardware stack levels required when called:   12
  3531 ;; This function calls:
  3532 ;;		_recv_msg
  3533 ;; This function is called by:
  3534 ;;		_main
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538                           	psect	text21
  3539  001646                     __ptext21:
  3540                           	opt stack 0
  3541  001646                     _ToMainLow_recvmsg:
  3542                           	opt stack 17
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;incstack = 0
  3546                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3547  001646  CFE8 F0E5          	movff	wreg,ToMainLow_recvmsg@maxlength
  3548                           
  3549                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3550  00164A  0100               	movlb	0	; () banked
  3551  00164C  0E00               	movlw	high _ToMainLow_MQ
  3552  00164E  0100               	movlb	0	; () banked
  3553  001650  0100               	movlb	0	; () banked
  3554  001652  6FD8               	movwf	(recv_msg@qptr+1)& (0+255),b
  3555  001654  0100               	movlb	0	; () banked
  3556  001656  0E80               	movlw	low _ToMainLow_MQ
  3557  001658  0100               	movlb	0	; () banked
  3558  00165A  0100               	movlb	0	; () banked
  3559  00165C  6FD7               	movwf	recv_msg@qptr& (0+255),b
  3560  00165E  C0E5  F0D9         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3561  001662  0101               	movlb	1	; () banked
  3562  001664  0100               	movlb	0	; () banked
  3563  001666  C1A3  F0DB         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3564  00166A  0101               	movlb	1	; () banked
  3565  00166C  0100               	movlb	0	; () banked
  3566  00166E  C1A2  F0DA         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3567  001672  0101               	movlb	1	; () banked
  3568  001674  0100               	movlb	0	; () banked
  3569  001676  C1A5  F0DD         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3570  00167A  0101               	movlb	1	; () banked
  3571  00167C  0100               	movlb	0	; () banked
  3572  00167E  C1A4  F0DC         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3573  001682  ECBA  F004         	call	_recv_msg	;wreg free
  3574  001686  0012               	return	
  3575  001688                     __end_of_ToMainLow_recvmsg:
  3576                           	opt stack 0
  3577                           tblptru	equ	0xFF8
  3578                           prodh	equ	0xFF4
  3579                           prodl	equ	0xFF3
  3580                           intcon	equ	0xFF2
  3581                           postinc0	equ	0xFEE
  3582                           wreg	equ	0xFE8
  3583                           indf1	equ	0xFE7
  3584                           fsr1h	equ	0xFE2
  3585                           fsr1l	equ	0xFE1
  3586                           indf2	equ	0xFDF
  3587                           postinc2	equ	0xFDE
  3588                           postdec2	equ	0xFDD
  3589                           fsr2h	equ	0xFDA
  3590                           fsr2l	equ	0xFD9
  3591                           status	equ	0xFD8
  3592                           
  3593 ;; *************** function _ToMainHigh_recvmsg *****************
  3594 ;; Defined at:
  3595 ;;		line 135 in file "../src/messages.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  maxlength       1    wreg     unsigned char 
  3598 ;;  msgtype         2    0[BANK1 ] PTR unsigned char 
  3599 ;;		 -> main@msgtype(1), 
  3600 ;;  data            2    2[BANK1 ] PTR void 
  3601 ;;		 -> main@msgbuffer(11), 
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;  maxlength       1   47[BANK0 ] unsigned char 
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  1    wreg      char 
  3606 ;; Registers used:
  3607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3613 ;;      Params:         0       0       4       0       0
  3614 ;;      Locals:         0       1       0       0       0
  3615 ;;      Temps:          0       0       0       0       0
  3616 ;;      Totals:         0       1       4       0       0
  3617 ;;Total ram usage:        5 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; Hardware stack levels required when called:   12
  3620 ;; This function calls:
  3621 ;;		_recv_msg
  3622 ;; This function is called by:
  3623 ;;		_main
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627                           	psect	text22
  3628  001688                     __ptext22:
  3629                           	opt stack 0
  3630  001688                     _ToMainHigh_recvmsg:
  3631                           	opt stack 17
  3632                           
  3633                           ;incstack = 0
  3634                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3635  001688  CFE8 F0E5          	movff	wreg,ToMainHigh_recvmsg@maxlength
  3636                           
  3637                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3638  00168C  0101               	movlb	1	; () banked
  3639  00168E  0E01               	movlw	high _ToMainHigh_MQ
  3640  001690  0100               	movlb	0	; () banked
  3641  001692  0100               	movlb	0	; () banked
  3642  001694  6FD8               	movwf	(recv_msg@qptr+1)& (0+255),b
  3643  001696  0101               	movlb	1	; () banked
  3644  001698  0E6C               	movlw	low _ToMainHigh_MQ
  3645  00169A  0100               	movlb	0	; () banked
  3646  00169C  0100               	movlb	0	; () banked
  3647  00169E  6FD7               	movwf	recv_msg@qptr& (0+255),b
  3648  0016A0  C0E5  F0D9         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3649  0016A4  0101               	movlb	1	; () banked
  3650  0016A6  0100               	movlb	0	; () banked
  3651  0016A8  C1A3  F0DB         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3652  0016AC  0101               	movlb	1	; () banked
  3653  0016AE  0100               	movlb	0	; () banked
  3654  0016B0  C1A2  F0DA         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3655  0016B4  0101               	movlb	1	; () banked
  3656  0016B6  0100               	movlb	0	; () banked
  3657  0016B8  C1A5  F0DD         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3658  0016BC  0101               	movlb	1	; () banked
  3659  0016BE  0100               	movlb	0	; () banked
  3660  0016C0  C1A4  F0DC         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3661  0016C4  ECBA  F004         	call	_recv_msg	;wreg free
  3662  0016C8  0012               	return	
  3663  0016CA                     __end_of_ToMainHigh_recvmsg:
  3664                           	opt stack 0
  3665                           tblptru	equ	0xFF8
  3666                           prodh	equ	0xFF4
  3667                           prodl	equ	0xFF3
  3668                           intcon	equ	0xFF2
  3669                           postinc0	equ	0xFEE
  3670                           wreg	equ	0xFE8
  3671                           indf1	equ	0xFE7
  3672                           fsr1h	equ	0xFE2
  3673                           fsr1l	equ	0xFE1
  3674                           indf2	equ	0xFDF
  3675                           postinc2	equ	0xFDE
  3676                           postdec2	equ	0xFDD
  3677                           fsr2h	equ	0xFDA
  3678                           fsr2l	equ	0xFD9
  3679                           status	equ	0xFD8
  3680                           
  3681 ;; *************** function _recv_msg *****************
  3682 ;; Defined at:
  3683 ;;		line 63 in file "../src/messages.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;  qptr            2   33[BANK0 ] PTR struct __msg_queue
  3686 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3687 ;;  maxlength       1   35[BANK0 ] unsigned char 
  3688 ;;  msgtype         2   36[BANK0 ] PTR unsigned char 
  3689 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  3690 ;;  data            2   38[BANK0 ] PTR void 
  3691 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;  qmsg            2   45[BANK0 ] PTR struct __msg
  3694 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3695 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3696 ;;  tlength         2   43[BANK0 ] unsigned int 
  3697 ;;  slot            1   42[BANK0 ] unsigned char 
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  1    wreg      char 
  3700 ;; Registers used:
  3701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3707 ;;      Params:         0       7       0       0       0
  3708 ;;      Locals:         0       5       0       0       0
  3709 ;;      Temps:          0       2       0       0       0
  3710 ;;      Totals:         0      14       0       0       0
  3711 ;;Total ram usage:       14 bytes
  3712 ;; Hardware stack levels used:    1
  3713 ;; Hardware stack levels required when called:   11
  3714 ;; This function calls:
  3715 ;;		_memcpy
  3716 ;; This function is called by:
  3717 ;;		_ToMainLow_recvmsg
  3718 ;;		_ToMainHigh_recvmsg
  3719 ;;		_FromMainLow_recvmsg
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           	psect	text23
  3724  000974                     __ptext23:
  3725                           	opt stack 0
  3726  000974                     _recv_msg:
  3727                           	opt stack 17
  3728                           
  3729                           ;messages.c: 64: unsigned char slot;
  3730                           ;messages.c: 68: msg *qmsg;
  3731                           ;messages.c: 69: size_t tlength;
  3732                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3733                           
  3734                           ;incstack = 0
  3735  000974  0100               	movlb	0	; () banked
  3736  000976  EE20 F035          	lfsr	2,53
  3737  00097A  0100               	movlb	0	; () banked
  3738  00097C  51D7               	movf	recv_msg@qptr& (0+255),w,b
  3739  00097E  26D9               	addwf	fsr2l,f,c
  3740  000980  0100               	movlb	0	; () banked
  3741  000982  51D8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3742  000984  22DA               	addwfc	fsr2h,f,c
  3743  000986  50DF               	movf	indf2,w,c
  3744  000988  0100               	movlb	0	; () banked
  3745  00098A  0100               	movlb	0	; () banked
  3746  00098C  6FE0               	movwf	recv_msg@slot& (0+255),b
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3750  00098E  0100               	movlb	0	; () banked
  3751  000990  0100               	movlb	0	; () banked
  3752  000992  51E0               	movf	recv_msg@slot& (0+255),w,b
  3753  000994  0D0D               	mullw	13
  3754  000996  50F3               	movf	prodl,w,c
  3755  000998  0100               	movlb	0	; () banked
  3756  00099A  0100               	movlb	0	; () banked
  3757  00099C  25D7               	addwf	recv_msg@qptr& (0+255),w,b
  3758  00099E  0100               	movlb	0	; () banked
  3759  0009A0  0100               	movlb	0	; () banked
  3760  0009A2  6FE3               	movwf	recv_msg@qmsg& (0+255),b
  3761  0009A4  50F4               	movf	prodh,w,c
  3762  0009A6  0100               	movlb	0	; () banked
  3763  0009A8  0100               	movlb	0	; () banked
  3764  0009AA  21D8               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3765  0009AC  0100               	movlb	0	; () banked
  3766  0009AE  6FE4               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;messages.c: 74: if (qmsg->full == 1) {
  3770  0009B0  0E01               	movlw	1
  3771  0009B2  C0E3  FFD9         	movff	recv_msg@qmsg,fsr2l
  3772  0009B6  C0E4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3773  0009BA  62DF               	cpfseq	indf2,c
  3774  0009BC  D074               	goto	l2962
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3778  0009BE  0100               	movlb	0	; () banked
  3779  0009C0  EE20 F001          	lfsr	2,1
  3780  0009C4  0100               	movlb	0	; () banked
  3781  0009C6  51E3               	movf	recv_msg@qmsg& (0+255),w,b
  3782  0009C8  26D9               	addwf	fsr2l,f,c
  3783  0009CA  0100               	movlb	0	; () banked
  3784  0009CC  51E4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3785  0009CE  22DA               	addwfc	fsr2h,f,c
  3786  0009D0  50DF               	movf	indf2,w,c
  3787  0009D2  0100               	movlb	0	; () banked
  3788  0009D4  0100               	movlb	0	; () banked
  3789  0009D6  5DD9               	subwf	recv_msg@maxlength& (0+255),w,b
  3790  0009D8  B0D8               	btfsc	status,0,c
  3791  0009DA  D002               	goto	l2946
  3792                           
  3793                           ; BSR set to: 0
  3794                           ;messages.c: 77: return (-3);
  3795  0009DC  0EFD               	movlw	253
  3796  0009DE  0012               	return	
  3797  0009E0                     l2946:
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;messages.c: 78: }
  3801                           ;messages.c: 80: tlength = qmsg->length;
  3802  0009E0  0100               	movlb	0	; () banked
  3803  0009E2  EE20 F001          	lfsr	2,1
  3804  0009E6  0100               	movlb	0	; () banked
  3805  0009E8  51E3               	movf	recv_msg@qmsg& (0+255),w,b
  3806  0009EA  26D9               	addwf	fsr2l,f,c
  3807  0009EC  0100               	movlb	0	; () banked
  3808  0009EE  51E4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3809  0009F0  22DA               	addwfc	fsr2h,f,c
  3810  0009F2  50DF               	movf	indf2,w,c
  3811  0009F4  0100               	movlb	0	; () banked
  3812  0009F6  6FDE               	movwf	??_recv_msg& (0+255),b
  3813  0009F8  0100               	movlb	0	; () banked
  3814  0009FA  51DE               	movf	??_recv_msg& (0+255),w,b
  3815  0009FC  0100               	movlb	0	; () banked
  3816  0009FE  0100               	movlb	0	; () banked
  3817  000A00  6FE1               	movwf	recv_msg@tlength& (0+255),b
  3818  000A02  0100               	movlb	0	; () banked
  3819  000A04  6BE2               	clrf	(recv_msg@tlength+1)& (0+255),b
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3823  000A06  0100               	movlb	0	; () banked
  3824  000A08  0100               	movlb	0	; () banked
  3825  000A0A  C0DD  F0CE         	movff	recv_msg@data+1,memcpy@d1+1
  3826  000A0E  0100               	movlb	0	; () banked
  3827  000A10  0100               	movlb	0	; () banked
  3828  000A12  C0DC  F0CD         	movff	recv_msg@data,memcpy@d1
  3829  000A16  0E03               	movlw	3
  3830  000A18  0100               	movlb	0	; () banked
  3831  000A1A  0100               	movlb	0	; () banked
  3832  000A1C  25E3               	addwf	recv_msg@qmsg& (0+255),w,b
  3833  000A1E  0100               	movlb	0	; () banked
  3834  000A20  6FDE               	movwf	??_recv_msg& (0+255),b
  3835  000A22  0E00               	movlw	0
  3836  000A24  0100               	movlb	0	; () banked
  3837  000A26  0100               	movlb	0	; () banked
  3838  000A28  21E4               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3839  000A2A  0100               	movlb	0	; () banked
  3840  000A2C  6FDF               	movwf	(??_recv_msg+1)& (0+255),b
  3841  000A2E  C0DE  F0CF         	movff	??_recv_msg,memcpy@s1
  3842  000A32  C0DF  F0D0         	movff	??_recv_msg+1,memcpy@s1+1
  3843  000A36  C0E1  F0D1         	movff	recv_msg@tlength,memcpy@n
  3844  000A3A  C0E2  F0D2         	movff	recv_msg@tlength+1,memcpy@n+1
  3845  000A3E  EC64  F00A         	call	_memcpy	;wreg free
  3846                           
  3847                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  3848  000A42  0100               	movlb	0	; () banked
  3849  000A44  EE20 F035          	lfsr	2,53
  3850  000A48  0100               	movlb	0	; () banked
  3851  000A4A  51D7               	movf	recv_msg@qptr& (0+255),w,b
  3852  000A4C  26D9               	addwf	fsr2l,f,c
  3853  000A4E  0100               	movlb	0	; () banked
  3854  000A50  51D8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3855  000A52  22DA               	addwfc	fsr2h,f,c
  3856  000A54  0100               	movlb	0	; () banked
  3857  000A56  EE10 F035          	lfsr	1,53
  3858  000A5A  0100               	movlb	0	; () banked
  3859  000A5C  51D7               	movf	recv_msg@qptr& (0+255),w,b
  3860  000A5E  26E1               	addwf	fsr1l,f,c
  3861  000A60  0100               	movlb	0	; () banked
  3862  000A62  51D8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3863  000A64  22E2               	addwfc	fsr1h,f,c
  3864  000A66  50E7               	movf	indf1,w,c
  3865  000A68  0100               	movlb	0	; () banked
  3866  000A6A  6FDE               	movwf	??_recv_msg& (0+255),b
  3867  000A6C  0100               	movlb	0	; () banked
  3868  000A6E  29DE               	incf	??_recv_msg& (0+255),w,b
  3869  000A70  0B03               	andlw	3
  3870  000A72  6EDF               	movwf	indf2,c
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  3874  000A74  0100               	movlb	0	; () banked
  3875  000A76  EE20 F002          	lfsr	2,2
  3876  000A7A  0100               	movlb	0	; () banked
  3877  000A7C  51E3               	movf	recv_msg@qmsg& (0+255),w,b
  3878  000A7E  26D9               	addwf	fsr2l,f,c
  3879  000A80  0100               	movlb	0	; () banked
  3880  000A82  51E4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3881  000A84  22DA               	addwfc	fsr2h,f,c
  3882  000A86  C0DA  FFE1         	movff	recv_msg@msgtype,fsr1l
  3883  000A8A  C0DB  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3884  000A8E  CFDF FFE7          	movff	indf2,indf1
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;messages.c: 91: qmsg->full = 0;
  3888  000A92  C0E3  FFD9         	movff	recv_msg@qmsg,fsr2l
  3889  000A96  C0E4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3890  000A9A  0E00               	movlw	0
  3891  000A9C  6EDF               	movwf	indf2,c
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;messages.c: 92: return (tlength);
  3895  000A9E  0100               	movlb	0	; () banked
  3896  000AA0  0100               	movlb	0	; () banked
  3897  000AA2  51E1               	movf	recv_msg@tlength& (0+255),w,b
  3898  000AA4  0012               	return	
  3899  000AA6                     l2962:
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;messages.c: 94: return (-4);
  3903  000AA6  0EFC               	movlw	252
  3904  000AA8  0012               	return	
  3905  000AAA                     __end_of_recv_msg:
  3906                           	opt stack 0
  3907                           tblptru	equ	0xFF8
  3908                           prodh	equ	0xFF4
  3909                           prodl	equ	0xFF3
  3910                           intcon	equ	0xFF2
  3911                           postinc0	equ	0xFEE
  3912                           wreg	equ	0xFE8
  3913                           indf1	equ	0xFE7
  3914                           fsr1h	equ	0xFE2
  3915                           fsr1l	equ	0xFE1
  3916                           indf2	equ	0xFDF
  3917                           postinc2	equ	0xFDE
  3918                           postdec2	equ	0xFDD
  3919                           fsr2h	equ	0xFDA
  3920                           fsr2l	equ	0xFD9
  3921                           status	equ	0xFD8
  3922                           
  3923 ;; *************** function _memcpy *****************
  3924 ;; Defined at:
  3925 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;  d1              2   23[BANK0 ] PTR void 
  3928 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3929 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  3930 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  3931 ;;  s1              2   25[BANK0 ] PTR const void 
  3932 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3933 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3934 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  3935 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  3936 ;;		 -> main@ic(28), main@uc(5), 
  3937 ;;  n               2   27[BANK0 ] unsigned int 
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;  s               2   31[BANK0 ] PTR const unsigned char 
  3940 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3941 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3942 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  3943 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  3944 ;;		 -> main@ic(28), main@uc(5), 
  3945 ;;  d               2   29[BANK0 ] PTR unsigned char 
  3946 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3947 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  3948 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  2   23[BANK0 ] PTR void 
  3951 ;; Registers used:
  3952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3958 ;;      Params:         0       6       0       0       0
  3959 ;;      Locals:         0       4       0       0       0
  3960 ;;      Temps:          0       0       0       0       0
  3961 ;;      Totals:         0      10       0       0       0
  3962 ;;Total ram usage:       10 bytes
  3963 ;; Hardware stack levels used:    1
  3964 ;; Hardware stack levels required when called:   10
  3965 ;; This function calls:
  3966 ;;		Nothing
  3967 ;; This function is called by:
  3968 ;;		_send_msg
  3969 ;;		_recv_msg
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973                           	psect	text24
  3974  0014C8                     __ptext24:
  3975                           	opt stack 0
  3976  0014C8                     _memcpy:
  3977                           	opt stack 16
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;incstack = 0
  3981  0014C8  0100               	movlb	0	; () banked
  3982  0014CA  0100               	movlb	0	; () banked
  3983  0014CC  C0D0  F0D6         	movff	memcpy@s1+1,memcpy@s+1
  3984  0014D0  0100               	movlb	0	; () banked
  3985  0014D2  0100               	movlb	0	; () banked
  3986  0014D4  C0CF  F0D5         	movff	memcpy@s1,memcpy@s
  3987  0014D8  0100               	movlb	0	; () banked
  3988  0014DA  0100               	movlb	0	; () banked
  3989  0014DC  C0CE  F0D4         	movff	memcpy@d1+1,memcpy@d+1
  3990  0014E0  0100               	movlb	0	; () banked
  3991  0014E2  0100               	movlb	0	; () banked
  3992  0014E4  C0CD  F0D3         	movff	memcpy@d1,memcpy@d
  3993  0014E8  D012               	goto	l2932
  3994  0014EA                     l2926:
  3995                           
  3996                           ; BSR set to: 0
  3997  0014EA  C0D5  FFD9         	movff	memcpy@s,fsr2l
  3998  0014EE  C0D6  FFDA         	movff	memcpy@s+1,fsr2h
  3999  0014F2  C0D3  FFE1         	movff	memcpy@d,fsr1l
  4000  0014F6  C0D4  FFE2         	movff	memcpy@d+1,fsr1h
  4001  0014FA  CFDF FFE7          	movff	indf2,indf1
  4002                           
  4003                           ; BSR set to: 0
  4004  0014FE  0100               	movlb	0	; () banked
  4005  001500  0100               	movlb	0	; () banked
  4006  001502  4BD5               	infsnz	memcpy@s& (0+255),f,b
  4007  001504  2BD6               	incf	(memcpy@s+1)& (0+255),f,b
  4008                           
  4009                           ; BSR set to: 0
  4010  001506  0100               	movlb	0	; () banked
  4011  001508  0100               	movlb	0	; () banked
  4012  00150A  4BD3               	infsnz	memcpy@d& (0+255),f,b
  4013  00150C  2BD4               	incf	(memcpy@d+1)& (0+255),f,b
  4014  00150E                     l2932:
  4015                           
  4016                           ; BSR set to: 0
  4017  00150E  0100               	movlb	0	; () banked
  4018  001510  0100               	movlb	0	; () banked
  4019  001512  07D1               	decf	memcpy@n& (0+255),f,b
  4020  001514  A0D8               	btfss	status,0,c
  4021  001516  07D2               	decf	(memcpy@n+1)& (0+255),f,b
  4022  001518  0100               	movlb	0	; () banked
  4023  00151A  29D1               	incf	memcpy@n& (0+255),w,b
  4024  00151C  B4D8               	btfsc	status,2,c
  4025  00151E  29D2               	incf	(memcpy@n+1)& (0+255),w,b
  4026  001520  B4D8               	btfsc	status,2,c
  4027                           
  4028                           ; BSR set to: 0
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;	Return value of _memcpy is never used
  4032  001522  0012               	return	
  4033  001524  D7E2               	goto	l2926
  4034  001526                     __end_of_memcpy:
  4035                           	opt stack 0
  4036                           tblptru	equ	0xFF8
  4037                           prodh	equ	0xFF4
  4038                           prodl	equ	0xFF3
  4039                           intcon	equ	0xFF2
  4040                           postinc0	equ	0xFEE
  4041                           wreg	equ	0xFE8
  4042                           indf1	equ	0xFE7
  4043                           fsr1h	equ	0xFE2
  4044                           fsr1l	equ	0xFE1
  4045                           indf2	equ	0xFDF
  4046                           postinc2	equ	0xFDE
  4047                           postdec2	equ	0xFDD
  4048                           fsr2h	equ	0xFDA
  4049                           fsr2l	equ	0xFD9
  4050                           status	equ	0xFD8
  4051                           
  4052 ;; *************** function _OpenUSART *****************
  4053 ;; Defined at:
  4054 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;  config          1    wreg     unsigned char 
  4057 ;;  spbrg           2   23[BANK0 ] unsigned int 
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;  config          1   28[BANK0 ] unsigned char 
  4060 ;; Return value:  Size  Location     Type
  4061 ;;		None               void
  4062 ;; Registers used:
  4063 ;;		wreg, status,2
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4069 ;;      Params:         0       2       0       0       0
  4070 ;;      Locals:         0       1       0       0       0
  4071 ;;      Temps:          0       3       0       0       0
  4072 ;;      Totals:         0       6       0       0       0
  4073 ;;Total ram usage:        6 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; Hardware stack levels required when called:   10
  4076 ;; This function calls:
  4077 ;;		Nothing
  4078 ;; This function is called by:
  4079 ;;		_main
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           	psect	text25
  4084  0010EC                     __ptext25:
  4085                           	opt stack 0
  4086  0010EC                     _OpenUSART:
  4087                           	opt stack 19
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;incstack = 0
  4091                           ;OpenUSART@config stored from wreg
  4092  0010EC  CFE8 F0D2          	movff	wreg,OpenUSART@config
  4093  0010F0  0E00               	movlw	0
  4094  0010F2  6EAC               	movwf	4012,c	;volatile
  4095  0010F4  0E00               	movlw	0
  4096  0010F6  6EAB               	movwf	4011,c	;volatile
  4097  0010F8  0100               	movlb	0	; () banked
  4098  0010FA  0100               	movlb	0	; () banked
  4099  0010FC  B1D2               	btfsc	OpenUSART@config& (0+255),0,b
  4100                           
  4101                           ; BSR set to: 0
  4102  0010FE  88AC               	bsf	4012,4,c	;volatile
  4103                           
  4104                           ; BSR set to: 0
  4105                           
  4106                           ; BSR set to: 0
  4107  001100  0100               	movlb	0	; () banked
  4108  001102  0100               	movlb	0	; () banked
  4109  001104  A3D2               	btfss	OpenUSART@config& (0+255),1,b
  4110  001106  D002               	goto	l2378
  4111                           
  4112                           ; BSR set to: 0
  4113  001108  8CAC               	bsf	4012,6,c	;volatile
  4114  00110A  8CAB               	bsf	4011,6,c	;volatile
  4115  00110C                     l2378:
  4116                           
  4117                           ; BSR set to: 0
  4118  00110C  0100               	movlb	0	; () banked
  4119  00110E  0100               	movlb	0	; () banked
  4120  001110  B5D2               	btfsc	OpenUSART@config& (0+255),2,b
  4121                           
  4122                           ; BSR set to: 0
  4123  001112  8EAC               	bsf	4012,7,c	;volatile
  4124                           
  4125                           ; BSR set to: 0
  4126                           
  4127                           ; BSR set to: 0
  4128  001114  0100               	movlb	0	; () banked
  4129  001116  0100               	movlb	0	; () banked
  4130  001118  A7D2               	btfss	OpenUSART@config& (0+255),3,b
  4131  00111A  D002               	goto	l433
  4132                           
  4133                           ; BSR set to: 0
  4134  00111C  88AB               	bsf	4011,4,c	;volatile
  4135  00111E  D001               	goto	l2386
  4136  001120                     l433:
  4137                           
  4138                           ; BSR set to: 0
  4139  001120  8AAB               	bsf	4011,5,c	;volatile
  4140  001122                     l2386:
  4141                           
  4142                           ; BSR set to: 0
  4143  001122  0100               	movlb	0	; () banked
  4144  001124  0100               	movlb	0	; () banked
  4145  001126  B9D2               	btfsc	OpenUSART@config& (0+255),4,b
  4146                           
  4147                           ; BSR set to: 0
  4148  001128  84AC               	bsf	4012,2,c	;volatile
  4149                           
  4150                           ; BSR set to: 0
  4151  00112A  989E               	bcf	3998,4,c	;volatile
  4152                           
  4153                           ; BSR set to: 0
  4154  00112C  0100               	movlb	0	; () banked
  4155  00112E  0100               	movlb	0	; () banked
  4156  001130  BBD2               	btfsc	OpenUSART@config& (0+255),5,b
  4157                           
  4158                           ; BSR set to: 0
  4159  001132  86AB               	bsf	4011,3,c	;volatile
  4160                           
  4161                           ; BSR set to: 0
  4162                           
  4163                           ; BSR set to: 0
  4164  001134  0100               	movlb	0	; () banked
  4165  001136  0100               	movlb	0	; () banked
  4166  001138  ADD2               	btfss	OpenUSART@config& (0+255),6,b
  4167  00113A  D002               	goto	l437
  4168                           
  4169                           ; BSR set to: 0
  4170  00113C  8A9D               	bsf	3997,5,c	;volatile
  4171  00113E  D001               	goto	l438
  4172  001140                     l437:
  4173                           
  4174                           ; BSR set to: 0
  4175  001140  9A9D               	bcf	3997,5,c	;volatile
  4176  001142                     l438:
  4177                           
  4178                           ; BSR set to: 0
  4179  001142  9A9E               	bcf	3998,5,c	;volatile
  4180                           
  4181                           ; BSR set to: 0
  4182  001144  0100               	movlb	0	; () banked
  4183  001146  0100               	movlb	0	; () banked
  4184  001148  AFD2               	btfss	OpenUSART@config& (0+255),7,b
  4185  00114A  D002               	goto	l439
  4186                           
  4187                           ; BSR set to: 0
  4188  00114C  889D               	bsf	3997,4,c	;volatile
  4189  00114E  D001               	goto	l440
  4190  001150                     l439:
  4191                           
  4192                           ; BSR set to: 0
  4193  001150  989D               	bcf	3997,4,c	;volatile
  4194  001152                     l440:
  4195                           
  4196                           ; BSR set to: 0
  4197  001152  C0CD  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4198                           
  4199                           ; BSR set to: 0
  4200  001156  0100               	movlb	0	; () banked
  4201  001158  C0CE  F0CF         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4202  00115C  C0CF  F0D0         	movff	??_OpenUSART,??_OpenUSART+1
  4203  001160  0100               	movlb	0	; () banked
  4204  001162  6BD1               	clrf	(??_OpenUSART+2)& (0+255),b
  4205  001164  0100               	movlb	0	; () banked
  4206  001166  51D0               	movf	(??_OpenUSART+1)& (0+255),w,b
  4207  001168  6EB0               	movwf	4016,c	;volatile
  4208                           
  4209                           ; BSR set to: 0
  4210  00116A  8AAC               	bsf	4012,5,c	;volatile
  4211                           
  4212                           ; BSR set to: 0
  4213  00116C  8EAB               	bsf	4011,7,c	;volatile
  4214                           
  4215                           ; BSR set to: 0
  4216  00116E  9C94               	bcf	3988,6,c	;volatile
  4217                           
  4218                           ; BSR set to: 0
  4219  001170  8E94               	bsf	3988,7,c	;volatile
  4220                           
  4221                           ; BSR set to: 0
  4222  001172  A8AC               	btfss	4012,4,c	;volatile
  4223  001174  0012               	return	
  4224                           
  4225                           ; BSR set to: 0
  4226  001176  BEAC               	btfsc	4012,7,c	;volatile
  4227  001178  0012               	return	
  4228                           
  4229                           ; BSR set to: 0
  4230  00117A  8C94               	bsf	3988,6,c	;volatile
  4231  00117C  0012               	return	
  4232  00117E                     __end_of_OpenUSART:
  4233                           	opt stack 0
  4234                           tblptru	equ	0xFF8
  4235                           prodh	equ	0xFF4
  4236                           prodl	equ	0xFF3
  4237                           intcon	equ	0xFF2
  4238                           postinc0	equ	0xFEE
  4239                           wreg	equ	0xFE8
  4240                           indf1	equ	0xFE7
  4241                           fsr1h	equ	0xFE2
  4242                           fsr1l	equ	0xFE1
  4243                           indf2	equ	0xFDF
  4244                           postinc2	equ	0xFDE
  4245                           postdec2	equ	0xFDD
  4246                           fsr2h	equ	0xFDA
  4247                           fsr2l	equ	0xFD9
  4248                           status	equ	0xFD8
  4249                           
  4250 ;; *************** function _OpenTimer1 *****************
  4251 ;; Defined at:
  4252 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;  config          1    wreg     unsigned char 
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;  config          1   23[BANK0 ] unsigned char 
  4257 ;; Return value:  Size  Location     Type
  4258 ;;		None               void
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, status,0
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4266 ;;      Params:         0       0       0       0       0
  4267 ;;      Locals:         0       1       0       0       0
  4268 ;;      Temps:          0       0       0       0       0
  4269 ;;      Totals:         0       1       0       0       0
  4270 ;;Total ram usage:        1 bytes
  4271 ;; Hardware stack levels used:    1
  4272 ;; Hardware stack levels required when called:   10
  4273 ;; This function calls:
  4274 ;;		Nothing
  4275 ;; This function is called by:
  4276 ;;		_main
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text26
  4281  001788                     __ptext26:
  4282                           	opt stack 0
  4283  001788                     _OpenTimer1:
  4284                           	opt stack 19
  4285                           
  4286                           ; BSR set to: 0
  4287                           ;incstack = 0
  4288                           ;OpenTimer1@config stored from wreg
  4289  001788  CFE8 F0CD          	movff	wreg,OpenTimer1@config
  4290  00178C  0100               	movlb	0	; () banked
  4291  00178E  0100               	movlb	0	; () banked
  4292  001790  51CD               	movf	OpenTimer1@config& (0+255),w,b
  4293  001792  0B7E               	andlw	126
  4294  001794  6ECD               	movwf	4045,c	;volatile
  4295                           
  4296                           ; BSR set to: 0
  4297  001796  0100               	movlb	0	; () banked
  4298  001798  0100               	movlb	0	; () banked
  4299  00179A  ADCD               	btfss	OpenTimer1@config& (0+255),6,b
  4300  00179C  D002               	goto	l389
  4301                           
  4302                           ; BSR set to: 0
  4303  00179E  8ECD               	bsf	4045,7,c	;volatile
  4304  0017A0  D001               	goto	l2338
  4305  0017A2                     l389:
  4306                           
  4307                           ; BSR set to: 0
  4308  0017A2  9ECD               	bcf	4045,7,c	;volatile
  4309  0017A4                     l2338:
  4310                           
  4311                           ; BSR set to: 0
  4312  0017A4  0E00               	movlw	0
  4313  0017A6  6ECF               	movwf	4047,c	;volatile
  4314  0017A8  0E00               	movlw	0
  4315  0017AA  6ECE               	movwf	4046,c	;volatile
  4316                           
  4317                           ; BSR set to: 0
  4318  0017AC  909E               	bcf	3998,0,c	;volatile
  4319                           
  4320                           ; BSR set to: 0
  4321  0017AE  0100               	movlb	0	; () banked
  4322  0017B0  0100               	movlb	0	; () banked
  4323  0017B2  AFCD               	btfss	OpenTimer1@config& (0+255),7,b
  4324  0017B4  D002               	goto	l391
  4325                           
  4326                           ; BSR set to: 0
  4327  0017B6  809D               	bsf	3997,0,c	;volatile
  4328  0017B8  D001               	goto	l392
  4329  0017BA                     l391:
  4330                           
  4331                           ; BSR set to: 0
  4332  0017BA  909D               	bcf	3997,0,c	;volatile
  4333  0017BC                     l392:
  4334                           
  4335                           ; BSR set to: 0
  4336  0017BC  80CD               	bsf	4045,0,c	;volatile
  4337                           
  4338                           ; BSR set to: 0
  4339  0017BE  0012               	return	
  4340  0017C0                     __end_of_OpenTimer1:
  4341                           	opt stack 0
  4342                           tblptru	equ	0xFF8
  4343                           prodh	equ	0xFF4
  4344                           prodl	equ	0xFF3
  4345                           intcon	equ	0xFF2
  4346                           postinc0	equ	0xFEE
  4347                           wreg	equ	0xFE8
  4348                           indf1	equ	0xFE7
  4349                           fsr1h	equ	0xFE2
  4350                           fsr1l	equ	0xFE1
  4351                           indf2	equ	0xFDF
  4352                           postinc2	equ	0xFDE
  4353                           postdec2	equ	0xFDD
  4354                           fsr2h	equ	0xFDA
  4355                           fsr2l	equ	0xFD9
  4356                           status	equ	0xFD8
  4357                           
  4358 ;; *************** function _InterruptHandlerLow *****************
  4359 ;; Defined at:
  4360 ;;		line 122 in file "../src/interrupts.c"
  4361 ;; Parameters:    Size  Location     Type
  4362 ;;		None
  4363 ;; Auto vars:     Size  Location     Type
  4364 ;;		None
  4365 ;; Return value:  Size  Location     Type
  4366 ;;		None               void
  4367 ;; Registers used:
  4368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4369 ;; Tracked objects:
  4370 ;;		On entry : 0/0
  4371 ;;		On exit  : 0/0
  4372 ;;		Unchanged: 0/0
  4373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4374 ;;      Params:         0       0       0       0       0
  4375 ;;      Locals:         0       0       0       0       0
  4376 ;;      Temps:         17       0       0       0       0
  4377 ;;      Totals:        17       0       0       0       0
  4378 ;;Total ram usage:       17 bytes
  4379 ;; Hardware stack levels used:    1
  4380 ;; Hardware stack levels required when called:    9
  4381 ;; This function calls:
  4382 ;;		_timer1_int_handler
  4383 ;;		_uart_recv_int_handler
  4384 ;; This function is called by:
  4385 ;;		Interrupt level 1
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388                           
  4389                           	psect	intcodelo
  4390  000018                     __pintcodelo:
  4391                           	opt stack 0
  4392  000018                     _InterruptHandlerLow:
  4393                           	opt stack 16
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;incstack = 0
  4397  000018  CFD8 F01E          	movff	status,??_InterruptHandlerLow
  4398  00001C  CFE8 F01F          	movff	wreg,??_InterruptHandlerLow+1
  4399  000020  CFE0 F020          	movff	bsr,??_InterruptHandlerLow+2
  4400  000024  CFFA F021          	movff	pclath,??_InterruptHandlerLow+3
  4401  000028  CFFB F022          	movff	pclatu,??_InterruptHandlerLow+4
  4402  00002C  CFE9 F023          	movff	fsr0l,??_InterruptHandlerLow+5
  4403  000030  CFEA F024          	movff	fsr0h,??_InterruptHandlerLow+6
  4404  000034  CFE1 F025          	movff	fsr1l,??_InterruptHandlerLow+7
  4405  000038  CFE2 F026          	movff	fsr1h,??_InterruptHandlerLow+8
  4406  00003C  CFD9 F027          	movff	fsr2l,??_InterruptHandlerLow+9
  4407  000040  CFDA F028          	movff	fsr2h,??_InterruptHandlerLow+10
  4408  000044  CFF3 F029          	movff	prodl,??_InterruptHandlerLow+11
  4409  000048  CFF4 F02A          	movff	prodh,??_InterruptHandlerLow+12
  4410  00004C  CFF6 F02B          	movff	tblptrl,??_InterruptHandlerLow+13
  4411  000050  CFF7 F02C          	movff	tblptrh,??_InterruptHandlerLow+14
  4412  000054  CFF8 F02D          	movff	tblptru,??_InterruptHandlerLow+15
  4413  000058  CFF5 F02E          	movff	tablat,??_InterruptHandlerLow+16
  4414                           
  4415                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  4416  00005C  A09E               	btfss	3998,0,c	;volatile
  4417  00005E  D003               	goto	i1l2804
  4418                           
  4419                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  4420  000060  909E               	bcf	3998,0,c	;volatile
  4421                           
  4422                           ;interrupts.c: 126: timer1_int_handler();
  4423  000062  ECBA  F00A         	call	_timer1_int_handler	;wreg free
  4424  000066                     i1l2804:
  4425                           
  4426                           ;interrupts.c: 127: }
  4427                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  4428  000066  AA9E               	btfss	3998,5,c	;volatile
  4429  000068  D003               	goto	i1l47
  4430                           
  4431                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  4432  00006A  9A9E               	bcf	3998,5,c	;volatile
  4433                           
  4434                           ;interrupts.c: 132: uart_recv_int_handler();
  4435  00006C  EC28  F008         	call	_uart_recv_int_handler	;wreg free
  4436  000070                     i1l47:
  4437  000070  C02E  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4438  000074  C02D  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4439  000078  C02C  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4440  00007C  C02B  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4441  000080  C02A  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4442  000084  C029  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4443  000088  C028  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4444  00008C  C027  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4445  000090  C026  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4446  000094  C025  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4447  000098  C024  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4448  00009C  C023  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4449  0000A0  C022  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4450  0000A4  C021  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4451  0000A8  C020  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4452  0000AC  C01F  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4453  0000B0  C01E  FFD8         	movff	??_InterruptHandlerLow,status
  4454  0000B4  0010               	retfie	
  4455  0000B6                     __end_of_InterruptHandlerLow:
  4456                           	opt stack 0
  4457                           pclatu	equ	0xFFB
  4458                           pclath	equ	0xFFA
  4459                           tblptru	equ	0xFF8
  4460                           tblptrh	equ	0xFF7
  4461                           tblptrl	equ	0xFF6
  4462                           tablat	equ	0xFF5
  4463                           prodh	equ	0xFF4
  4464                           prodl	equ	0xFF3
  4465                           intcon	equ	0xFF2
  4466                           postinc0	equ	0xFEE
  4467                           fsr0h	equ	0xFEA
  4468                           fsr0l	equ	0xFE9
  4469                           wreg	equ	0xFE8
  4470                           indf1	equ	0xFE7
  4471                           fsr1h	equ	0xFE2
  4472                           fsr1l	equ	0xFE1
  4473                           bsr	equ	0xFE0
  4474                           indf2	equ	0xFDF
  4475                           postinc2	equ	0xFDE
  4476                           postdec2	equ	0xFDD
  4477                           fsr2h	equ	0xFDA
  4478                           fsr2l	equ	0xFD9
  4479                           status	equ	0xFD8
  4480                           
  4481 ;; *************** function _uart_recv_int_handler *****************
  4482 ;; Defined at:
  4483 ;;		line 11 in file "../src/my_uart.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;		None
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;		None
  4488 ;; Return value:  Size  Location     Type
  4489 ;;		None               void
  4490 ;; Registers used:
  4491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4497 ;;      Params:         0       0       0       0       0
  4498 ;;      Locals:         0       0       0       0       0
  4499 ;;      Temps:          1       0       0       0       0
  4500 ;;      Totals:         1       0       0       0       0
  4501 ;;Total ram usage:        1 bytes
  4502 ;; Hardware stack levels used:    1
  4503 ;; Hardware stack levels required when called:    8
  4504 ;; This function calls:
  4505 ;;		_ReadUSART
  4506 ;;		_ToMainLow_sendmsg
  4507 ;; This function is called by:
  4508 ;;		_InterruptHandlerLow
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512                           	psect	text28
  4513  001050                     __ptext28:
  4514                           	opt stack 0
  4515  001050                     _uart_recv_int_handler:
  4516                           	opt stack 16
  4517                           
  4518                           ;my_uart.c: 12: if ((PIR1bits.RCIF)) {
  4519                           
  4520                           ;incstack = 0
  4521  001050  AA9E               	btfss	3998,5,c	;volatile
  4522  001052  D03C               	goto	i1l2792
  4523                           
  4524                           ;my_uart.c: 13: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  4525  001054  EE20 F004          	lfsr	2,4
  4526  001058  504D               	movf	_uc_ptr,w,c
  4527  00105A  26D9               	addwf	fsr2l,f,c
  4528  00105C  504E               	movf	_uc_ptr+1,w,c
  4529  00105E  22DA               	addwfc	fsr2h,f,c
  4530  001060  50DF               	movf	indf2,w,c
  4531  001062  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4532  001064  501B               	movf	??_uart_recv_int_handler,w,c
  4533  001066  0D01               	mullw	1
  4534  001068  50F3               	movf	prodl,w,c
  4535  00106A  244D               	addwf	_uc_ptr,w,c
  4536  00106C  6ED9               	movwf	fsr2l,c
  4537  00106E  50F4               	movf	prodh,w,c
  4538  001070  204E               	addwfc	_uc_ptr+1,w,c
  4539  001072  6EDA               	movwf	fsr2h,c
  4540  001074  ECB0  F00C         	call	_ReadUSART	;wreg free
  4541  001078  6EDF               	movwf	indf2,c
  4542                           
  4543                           ;my_uart.c: 14: uc_ptr->buflen++;
  4544  00107A  EE20 F004          	lfsr	2,4
  4545  00107E  504D               	movf	_uc_ptr,w,c
  4546  001080  26D9               	addwf	fsr2l,f,c
  4547  001082  504E               	movf	_uc_ptr+1,w,c
  4548  001084  22DA               	addwfc	fsr2h,f,c
  4549  001086  2ADF               	incf	indf2,f,c
  4550                           
  4551                           ;my_uart.c: 16: if (uc_ptr->buflen == 4) {
  4552  001088  EE20 F004          	lfsr	2,4
  4553  00108C  504D               	movf	_uc_ptr,w,c
  4554  00108E  26D9               	addwf	fsr2l,f,c
  4555  001090  504E               	movf	_uc_ptr+1,w,c
  4556  001092  22DA               	addwfc	fsr2h,f,c
  4557  001094  0E04               	movlw	4
  4558  001096  62DF               	cpfseq	indf2,c
  4559  001098  D019               	goto	i1l2792
  4560                           
  4561                           ;my_uart.c: 17: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  4562  00109A  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4563  00109C  0E1F               	movlw	31
  4564  00109E  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4565  0010A0  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  4566  0010A2  C04E  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  4567  0010A6  C04D  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  4568  0010AA  EE20 F004          	lfsr	2,4
  4569  0010AE  504D               	movf	_uc_ptr,w,c
  4570  0010B0  26D9               	addwf	fsr2l,f,c
  4571  0010B2  504E               	movf	_uc_ptr+1,w,c
  4572  0010B4  22DA               	addwfc	fsr2h,f,c
  4573  0010B6  50DF               	movf	indf2,w,c
  4574  0010B8  EC69  F00C         	call	_ToMainLow_sendmsg
  4575                           
  4576                           ;my_uart.c: 18: uc_ptr->buflen = 0;
  4577  0010BC  EE20 F004          	lfsr	2,4
  4578  0010C0  504D               	movf	_uc_ptr,w,c
  4579  0010C2  26D9               	addwf	fsr2l,f,c
  4580  0010C4  504E               	movf	_uc_ptr+1,w,c
  4581  0010C6  22DA               	addwfc	fsr2h,f,c
  4582  0010C8  0E00               	movlw	0
  4583  0010CA  6EDF               	movwf	indf2,c
  4584  0010CC                     i1l2792:
  4585                           
  4586                           ;my_uart.c: 19: }
  4587                           ;my_uart.c: 20: }
  4588                           ;my_uart.c: 21: if (USART_Status.OVERRUN_ERROR == 1) {
  4589  0010CC  A650               	btfss	_USART_Status,3,c
  4590  0010CE  0012               	return	
  4591                           
  4592                           ;my_uart.c: 24: RCSTAbits.CREN = 0;
  4593  0010D0  98AB               	bcf	4011,4,c	;volatile
  4594                           
  4595                           ;my_uart.c: 25: RCSTAbits.CREN = 1;
  4596  0010D2  88AB               	bsf	4011,4,c	;volatile
  4597                           
  4598                           ;my_uart.c: 26: ToMainLow_sendmsg(0, 30, (void *) 0);
  4599  0010D4  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4600  0010D6  0E1E               	movlw	30
  4601  0010D8  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4602  0010DA  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  4603  0010DC  0E00               	movlw	0
  4604  0010DE  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  4605  0010E0  0E00               	movlw	0
  4606  0010E2  6E18               	movwf	ToMainLow_sendmsg@data,c
  4607  0010E4  0E00               	movlw	0
  4608  0010E6  EC69  F00C         	call	_ToMainLow_sendmsg
  4609  0010EA  0012               	return	
  4610  0010EC                     __end_of_uart_recv_int_handler:
  4611                           	opt stack 0
  4612                           pclatu	equ	0xFFB
  4613                           pclath	equ	0xFFA
  4614                           tblptru	equ	0xFF8
  4615                           tblptrh	equ	0xFF7
  4616                           tblptrl	equ	0xFF6
  4617                           tablat	equ	0xFF5
  4618                           prodh	equ	0xFF4
  4619                           prodl	equ	0xFF3
  4620                           intcon	equ	0xFF2
  4621                           postinc0	equ	0xFEE
  4622                           fsr0h	equ	0xFEA
  4623                           fsr0l	equ	0xFE9
  4624                           wreg	equ	0xFE8
  4625                           indf1	equ	0xFE7
  4626                           fsr1h	equ	0xFE2
  4627                           fsr1l	equ	0xFE1
  4628                           bsr	equ	0xFE0
  4629                           indf2	equ	0xFDF
  4630                           postinc2	equ	0xFDE
  4631                           postdec2	equ	0xFDD
  4632                           fsr2h	equ	0xFDA
  4633                           fsr2l	equ	0xFD9
  4634                           status	equ	0xFD8
  4635                           
  4636 ;; *************** function _ReadUSART *****************
  4637 ;; Defined at:
  4638 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;		None
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;  data            1    0[COMRAM] unsigned char 
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  1    wreg      unsigned char 
  4645 ;; Registers used:
  4646 ;;		wreg, status,2, status,0
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4652 ;;      Params:         0       0       0       0       0
  4653 ;;      Locals:         1       0       0       0       0
  4654 ;;      Temps:          0       0       0       0       0
  4655 ;;      Totals:         1       0       0       0       0
  4656 ;;Total ram usage:        1 bytes
  4657 ;; Hardware stack levels used:    1
  4658 ;; Hardware stack levels required when called:    5
  4659 ;; This function calls:
  4660 ;;		Nothing
  4661 ;; This function is called by:
  4662 ;;		_uart_recv_int_handler
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           	psect	text29
  4667  001960                     __ptext29:
  4668                           	opt stack 0
  4669  001960                     _ReadUSART:
  4670                           	opt stack 18
  4671                           
  4672                           ;incstack = 0
  4673  001960  0EF2               	movlw	242
  4674  001962  1650               	andwf	_USART_Status,f,c
  4675  001964  ACAB               	btfss	4011,6,c	;volatile
  4676  001966  D003               	goto	i1l451
  4677  001968  9050               	bcf	_USART_Status,0,c
  4678  00196A  B0AB               	btfsc	4011,0,c	;volatile
  4679  00196C  8050               	bsf	_USART_Status,0,c
  4680  00196E                     i1l451:
  4681  00196E  B4AB               	btfsc	4011,2,c	;volatile
  4682  001970  8450               	bsf	_USART_Status,2,c
  4683  001972  B2AB               	btfsc	4011,1,c	;volatile
  4684  001974  8650               	bsf	_USART_Status,3,c
  4685  001976  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  4686  00197A  5001               	movf	ReadUSART@data,w,c
  4687  00197C  0012               	return	
  4688  00197E                     __end_of_ReadUSART:
  4689                           	opt stack 0
  4690                           pclatu	equ	0xFFB
  4691                           pclath	equ	0xFFA
  4692                           tblptru	equ	0xFF8
  4693                           tblptrh	equ	0xFF7
  4694                           tblptrl	equ	0xFF6
  4695                           tablat	equ	0xFF5
  4696                           prodh	equ	0xFF4
  4697                           prodl	equ	0xFF3
  4698                           intcon	equ	0xFF2
  4699                           postinc0	equ	0xFEE
  4700                           fsr0h	equ	0xFEA
  4701                           fsr0l	equ	0xFE9
  4702                           wreg	equ	0xFE8
  4703                           indf1	equ	0xFE7
  4704                           fsr1h	equ	0xFE2
  4705                           fsr1l	equ	0xFE1
  4706                           bsr	equ	0xFE0
  4707                           indf2	equ	0xFDF
  4708                           postinc2	equ	0xFDE
  4709                           postdec2	equ	0xFDD
  4710                           fsr2h	equ	0xFDA
  4711                           fsr2l	equ	0xFD9
  4712                           status	equ	0xFD8
  4713                           
  4714 ;; *************** function _timer1_int_handler *****************
  4715 ;; Defined at:
  4716 ;;		line 34 in file "../src/user_interrupts.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;		None
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;  result          2   27[COMRAM] unsigned int 
  4721 ;; Return value:  Size  Location     Type
  4722 ;;		None               void
  4723 ;; Registers used:
  4724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4730 ;;      Params:         0       0       0       0       0
  4731 ;;      Locals:         2       0       0       0       0
  4732 ;;      Temps:          1       0       0       0       0
  4733 ;;      Totals:         3       0       0       0       0
  4734 ;;Total ram usage:        3 bytes
  4735 ;; Hardware stack levels used:    1
  4736 ;; Hardware stack levels required when called:    8
  4737 ;; This function calls:
  4738 ;;		_ReadTimer1
  4739 ;;		_ToMainLow_sendmsg
  4740 ;;		_WriteTimer1
  4741 ;; This function is called by:
  4742 ;;		_InterruptHandlerLow
  4743 ;; This function uses a non-reentrant model
  4744 ;;
  4745                           
  4746                           	psect	text30
  4747  001574                     __ptext30:
  4748                           	opt stack 0
  4749  001574                     _timer1_int_handler:
  4750                           	opt stack 16
  4751                           
  4752                           ;user_interrupts.c: 35: unsigned int result;
  4753                           ;user_interrupts.c: 38: LATBbits.LATB1 = !LATBbits.LATB1;
  4754                           
  4755                           ;incstack = 0
  4756  001574  B28A               	btfsc	3978,1,c	;volatile
  4757  001576  D002               	goto	i1u185_20
  4758  001578  0E01               	movlw	1
  4759  00157A  D001               	goto	i1u185_26
  4760  00157C                     i1u185_20:
  4761  00157C  0E00               	movlw	0
  4762  00157E                     i1u185_26:
  4763  00157E  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  4764  001580  461B               	rlncf	??_timer1_int_handler,f,c
  4765  001582  508A               	movf	3978,w,c	;volatile
  4766  001584  181B               	xorwf	??_timer1_int_handler,w,c
  4767  001586  0BFD               	andlw	-3
  4768  001588  181B               	xorwf	??_timer1_int_handler,w,c
  4769  00158A  6E8A               	movwf	3978,c	;volatile
  4770                           
  4771                           ;user_interrupts.c: 39: result = ReadTimer1();
  4772  00158C  ECEE  F00C         	call	_ReadTimer1	;wreg free
  4773  001590  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  4774  001594  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  4775                           
  4776                           ;user_interrupts.c: 40: ToMainLow_sendmsg(0, 11, (void *) 0);
  4777  001598  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  4778  00159A  0E0B               	movlw	11
  4779  00159C  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4780  00159E  501B               	movf	??_timer1_int_handler& (0+255),w,c
  4781  0015A0  0E00               	movlw	0
  4782  0015A2  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  4783  0015A4  0E00               	movlw	0
  4784  0015A6  6E18               	movwf	ToMainLow_sendmsg@data,c
  4785  0015A8  0E00               	movlw	0
  4786  0015AA  EC69  F00C         	call	_ToMainLow_sendmsg
  4787                           
  4788                           ;user_interrupts.c: 43: WriteTimer1(0);
  4789  0015AE  0E00               	movlw	0
  4790  0015B0  6E02               	movwf	WriteTimer1@timer1+1,c
  4791  0015B2  0E00               	movlw	0
  4792  0015B4  6E01               	movwf	WriteTimer1@timer1,c
  4793  0015B6  ECE5  F00C         	call	_WriteTimer1	;wreg free
  4794  0015BA  0012               	return	
  4795  0015BC                     __end_of_timer1_int_handler:
  4796                           	opt stack 0
  4797                           pclatu	equ	0xFFB
  4798                           pclath	equ	0xFFA
  4799                           tblptru	equ	0xFF8
  4800                           tblptrh	equ	0xFF7
  4801                           tblptrl	equ	0xFF6
  4802                           tablat	equ	0xFF5
  4803                           prodh	equ	0xFF4
  4804                           prodl	equ	0xFF3
  4805                           intcon	equ	0xFF2
  4806                           postinc0	equ	0xFEE
  4807                           fsr0h	equ	0xFEA
  4808                           fsr0l	equ	0xFE9
  4809                           wreg	equ	0xFE8
  4810                           indf1	equ	0xFE7
  4811                           fsr1h	equ	0xFE2
  4812                           fsr1l	equ	0xFE1
  4813                           bsr	equ	0xFE0
  4814                           indf2	equ	0xFDF
  4815                           postinc2	equ	0xFDE
  4816                           postdec2	equ	0xFDD
  4817                           fsr2h	equ	0xFDA
  4818                           fsr2l	equ	0xFD9
  4819                           status	equ	0xFD8
  4820                           
  4821 ;; *************** function _WriteTimer1 *****************
  4822 ;; Defined at:
  4823 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;  timer1          2    0[COMRAM] unsigned int 
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;  timer           2    2[COMRAM] struct Timers
  4828 ;; Return value:  Size  Location     Type
  4829 ;;		None               void
  4830 ;; Registers used:
  4831 ;;		None
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4837 ;;      Params:         2       0       0       0       0
  4838 ;;      Locals:         2       0       0       0       0
  4839 ;;      Temps:          0       0       0       0       0
  4840 ;;      Totals:         4       0       0       0       0
  4841 ;;Total ram usage:        4 bytes
  4842 ;; Hardware stack levels used:    1
  4843 ;; Hardware stack levels required when called:    5
  4844 ;; This function calls:
  4845 ;;		Nothing
  4846 ;; This function is called by:
  4847 ;;		_timer1_int_handler
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           	psect	text31
  4852  0019CA                     __ptext31:
  4853                           	opt stack 0
  4854  0019CA                     _WriteTimer1:
  4855                           	opt stack 18
  4856                           
  4857                           ;incstack = 0
  4858  0019CA  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  4859  0019CE  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  4860  0019D2  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  4861  0019D6  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  4862  0019DA  0012               	return	
  4863  0019DC                     __end_of_WriteTimer1:
  4864                           	opt stack 0
  4865                           pclatu	equ	0xFFB
  4866                           pclath	equ	0xFFA
  4867                           tblptru	equ	0xFF8
  4868                           tblptrh	equ	0xFF7
  4869                           tblptrl	equ	0xFF6
  4870                           tablat	equ	0xFF5
  4871                           prodh	equ	0xFF4
  4872                           prodl	equ	0xFF3
  4873                           intcon	equ	0xFF2
  4874                           postinc0	equ	0xFEE
  4875                           fsr0h	equ	0xFEA
  4876                           fsr0l	equ	0xFE9
  4877                           wreg	equ	0xFE8
  4878                           indf1	equ	0xFE7
  4879                           fsr1h	equ	0xFE2
  4880                           fsr1l	equ	0xFE1
  4881                           bsr	equ	0xFE0
  4882                           indf2	equ	0xFDF
  4883                           postinc2	equ	0xFDE
  4884                           postdec2	equ	0xFDD
  4885                           fsr2h	equ	0xFDA
  4886                           fsr2l	equ	0xFD9
  4887                           status	equ	0xFD8
  4888                           
  4889 ;; *************** function _ToMainLow_sendmsg *****************
  4890 ;; Defined at:
  4891 ;;		line 103 in file "../src/messages.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;  length          1    wreg     unsigned char 
  4894 ;;  msgtype         1   22[COMRAM] unsigned char 
  4895 ;;  data            2   23[COMRAM] PTR void 
  4896 ;;		 -> NULL(0), main@uc(5), 
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;  length          1   25[COMRAM] unsigned char 
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  1    wreg      char 
  4901 ;; Registers used:
  4902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4908 ;;      Params:         3       0       0       0       0
  4909 ;;      Locals:         1       0       0       0       0
  4910 ;;      Temps:          0       0       0       0       0
  4911 ;;      Totals:         4       0       0       0       0
  4912 ;;Total ram usage:        4 bytes
  4913 ;; Hardware stack levels used:    1
  4914 ;; Hardware stack levels required when called:    7
  4915 ;; This function calls:
  4916 ;;		i1_send_msg
  4917 ;; This function is called by:
  4918 ;;		_uart_recv_int_handler
  4919 ;;		_timer1_int_handler
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text32
  4924  0018D2                     __ptext32:
  4925                           	opt stack 0
  4926  0018D2                     _ToMainLow_sendmsg:
  4927                           	opt stack 16
  4928                           
  4929                           ;incstack = 0
  4930                           ;ToMainLow_sendmsg@length stored from wreg
  4931  0018D2  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  4932                           
  4933                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  4934                           ;	Return value of _ToMainLow_sendmsg is never used
  4935  0018D6  0100               	movlb	0	; () banked
  4936  0018D8  0E00               	movlw	high _ToMainLow_MQ
  4937  0018DA  6E0C               	movwf	i1send_msg@qptr+1,c
  4938  0018DC  0100               	movlb	0	; () banked
  4939  0018DE  0E80               	movlw	low _ToMainLow_MQ
  4940  0018E0  6E0B               	movwf	i1send_msg@qptr,c
  4941  0018E2  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  4942  0018E6  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  4943  0018EA  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  4944  0018EE  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  4945  0018F2  EC2B  F007         	call	i1_send_msg	;wreg free
  4946  0018F6  0012               	return	
  4947  0018F8                     __end_of_ToMainLow_sendmsg:
  4948                           	opt stack 0
  4949                           pclatu	equ	0xFFB
  4950                           pclath	equ	0xFFA
  4951                           tblptru	equ	0xFF8
  4952                           tblptrh	equ	0xFF7
  4953                           tblptrl	equ	0xFF6
  4954                           tablat	equ	0xFF5
  4955                           prodh	equ	0xFF4
  4956                           prodl	equ	0xFF3
  4957                           intcon	equ	0xFF2
  4958                           postinc0	equ	0xFEE
  4959                           fsr0h	equ	0xFEA
  4960                           fsr0l	equ	0xFE9
  4961                           wreg	equ	0xFE8
  4962                           indf1	equ	0xFE7
  4963                           fsr1h	equ	0xFE2
  4964                           fsr1l	equ	0xFE1
  4965                           bsr	equ	0xFE0
  4966                           indf2	equ	0xFDF
  4967                           postinc2	equ	0xFDE
  4968                           postdec2	equ	0xFDD
  4969                           fsr2h	equ	0xFDA
  4970                           fsr2l	equ	0xFD9
  4971                           status	equ	0xFD8
  4972                           
  4973 ;; *************** function i1_send_msg *****************
  4974 ;; Defined at:
  4975 ;;		line 24 in file "../src/messages.c"
  4976 ;; Parameters:    Size  Location     Type
  4977 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  4978 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4979 ;;  length          1   12[COMRAM] unsigned char 
  4980 ;;  msgtype         1   13[COMRAM] unsigned char 
  4981 ;;  data            2   14[COMRAM] PTR void 
  4982 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), 
  4983 ;;		 -> main@ic(28), main@uc(5), 
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  4986 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4987 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4988 ;;  send_msg        2   17[COMRAM] unsigned int 
  4989 ;;  send_msg        1   19[COMRAM] unsigned char 
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  1    wreg      char 
  4992 ;; Registers used:
  4993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4994 ;; Tracked objects:
  4995 ;;		On entry : 0/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4999 ;;      Params:         6       0       0       0       0
  5000 ;;      Locals:         5       0       0       0       0
  5001 ;;      Temps:          1       0       0       0       0
  5002 ;;      Totals:        12       0       0       0       0
  5003 ;;Total ram usage:       12 bytes
  5004 ;; Hardware stack levels used:    1
  5005 ;; Hardware stack levels required when called:    6
  5006 ;; This function calls:
  5007 ;;		i1_memcpy
  5008 ;; This function is called by:
  5009 ;;		_ToMainLow_sendmsg
  5010 ;; This function uses a non-reentrant model
  5011 ;;
  5012                           
  5013                           	psect	text33
  5014  000E56                     __ptext33:
  5015                           	opt stack 0
  5016  000E56                     i1_send_msg:
  5017                           	opt stack 16
  5018                           
  5019                           ;messages.c: 25: unsigned char slot;
  5020                           ;messages.c: 27: msg *qmsg;
  5021                           ;messages.c: 28: size_t tlength = length;
  5022                           
  5023                           ;incstack = 0
  5024  000E56  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5025  000E5A  6A13               	clrf	i1send_msg@tlength+1,c
  5026                           
  5027                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5028  000E5C  EE20 F034          	lfsr	2,52
  5029  000E60  500B               	movf	i1send_msg@qptr,w,c
  5030  000E62  26D9               	addwf	fsr2l,f,c
  5031  000E64  500C               	movf	i1send_msg@qptr+1,w,c
  5032  000E66  22DA               	addwfc	fsr2h,f,c
  5033  000E68  50DF               	movf	indf2,w,c
  5034  000E6A  6E14               	movwf	i1send_msg@slot,c
  5035                           
  5036                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5037  000E6C  5014               	movf	i1send_msg@slot,w,c
  5038  000E6E  0D0D               	mullw	13
  5039  000E70  50F3               	movf	prodl,w,c
  5040  000E72  240B               	addwf	i1send_msg@qptr,w,c
  5041  000E74  6E15               	movwf	i1send_msg@qmsg,c
  5042  000E76  50F4               	movf	prodh,w,c
  5043  000E78  200C               	addwfc	i1send_msg@qptr+1,w,c
  5044  000E7A  6E16               	movwf	i1send_msg@qmsg+1,c
  5045                           
  5046                           ;messages.c: 41: if (qmsg->full != 0) {
  5047  000E7C  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5048  000E80  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5049  000E84  50DF               	movf	indf2,w,c
  5050  000E86  B4D8               	btfsc	status,2,c
  5051  000E88  D002               	goto	i1l2756
  5052                           
  5053                           ;messages.c: 42: return (-1);
  5054  000E8A  0EFF               	movlw	255
  5055  000E8C  0012               	return	
  5056  000E8E                     i1l2756:
  5057                           
  5058                           ;messages.c: 43: }
  5059                           ;messages.c: 46: qmsg->length = length;
  5060  000E8E  EE20 F001          	lfsr	2,1
  5061  000E92  5015               	movf	i1send_msg@qmsg,w,c
  5062  000E94  26D9               	addwf	fsr2l,f,c
  5063  000E96  5016               	movf	i1send_msg@qmsg+1,w,c
  5064  000E98  22DA               	addwfc	fsr2h,f,c
  5065  000E9A  C00D  FFDF         	movff	i1send_msg@length,indf2
  5066                           
  5067                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5068  000E9E  EE20 F002          	lfsr	2,2
  5069  000EA2  5015               	movf	i1send_msg@qmsg,w,c
  5070  000EA4  26D9               	addwf	fsr2l,f,c
  5071  000EA6  5016               	movf	i1send_msg@qmsg+1,w,c
  5072  000EA8  22DA               	addwfc	fsr2h,f,c
  5073  000EAA  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5074                           
  5075                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5076  000EAE  0E03               	movlw	3
  5077  000EB0  2415               	addwf	i1send_msg@qmsg,w,c
  5078  000EB2  6E01               	movwf	i1memcpy@d1,c
  5079  000EB4  0E00               	movlw	0
  5080  000EB6  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5081  000EB8  6E02               	movwf	i1memcpy@d1+1,c
  5082  000EBA  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5083  000EBE  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5084  000EC2  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5085  000EC6  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5086  000ECA  EC65  F00B         	call	i1_memcpy	;wreg free
  5087                           
  5088                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5089  000ECE  EE20 F034          	lfsr	2,52
  5090  000ED2  500B               	movf	i1send_msg@qptr,w,c
  5091  000ED4  26D9               	addwf	fsr2l,f,c
  5092  000ED6  500C               	movf	i1send_msg@qptr+1,w,c
  5093  000ED8  22DA               	addwfc	fsr2h,f,c
  5094  000EDA  EE10 F034          	lfsr	1,52
  5095  000EDE  500B               	movf	i1send_msg@qptr,w,c
  5096  000EE0  26E1               	addwf	fsr1l,f,c
  5097  000EE2  500C               	movf	i1send_msg@qptr+1,w,c
  5098  000EE4  22E2               	addwfc	fsr1h,f,c
  5099  000EE6  50E7               	movf	indf1,w,c
  5100  000EE8  6E11               	movwf	??i1_send_msg& (0+255),c
  5101  000EEA  2811               	incf	??i1_send_msg,w,c
  5102  000EEC  0B03               	andlw	3
  5103  000EEE  6EDF               	movwf	indf2,c
  5104                           
  5105                           ;messages.c: 59: qmsg->full = 1;
  5106  000EF0  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5107  000EF4  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5108  000EF8  0E01               	movlw	1
  5109  000EFA  6EDF               	movwf	indf2,c
  5110                           
  5111                           ;messages.c: 60: return (1);
  5112  000EFC  0E01               	movlw	1
  5113  000EFE  0012               	return	
  5114  000F00                     __end_ofi1_send_msg:
  5115                           	opt stack 0
  5116                           pclatu	equ	0xFFB
  5117                           pclath	equ	0xFFA
  5118                           tblptru	equ	0xFF8
  5119                           tblptrh	equ	0xFF7
  5120                           tblptrl	equ	0xFF6
  5121                           tablat	equ	0xFF5
  5122                           prodh	equ	0xFF4
  5123                           prodl	equ	0xFF3
  5124                           intcon	equ	0xFF2
  5125                           postinc0	equ	0xFEE
  5126                           fsr0h	equ	0xFEA
  5127                           fsr0l	equ	0xFE9
  5128                           wreg	equ	0xFE8
  5129                           indf1	equ	0xFE7
  5130                           fsr1h	equ	0xFE2
  5131                           fsr1l	equ	0xFE1
  5132                           bsr	equ	0xFE0
  5133                           indf2	equ	0xFDF
  5134                           postinc2	equ	0xFDE
  5135                           postdec2	equ	0xFDD
  5136                           fsr2h	equ	0xFDA
  5137                           fsr2l	equ	0xFD9
  5138                           status	equ	0xFD8
  5139                           
  5140 ;; *************** function i1_memcpy *****************
  5141 ;; Defined at:
  5142 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;  d1              2    0[COMRAM] PTR void 
  5145 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5146 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5147 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  5148 ;;  s1              2    2[COMRAM] PTR const void 
  5149 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5150 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5151 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  5152 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  5153 ;;		 -> main@ic(28), main@uc(5), 
  5154 ;;  n               2    4[COMRAM] unsigned int 
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5157 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5158 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5159 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  5160 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  5161 ;;		 -> main@ic(28), main@uc(5), 
  5162 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5163 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5164 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5165 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  5166 ;; Return value:  Size  Location     Type
  5167 ;;                  2    0[COMRAM] PTR void 
  5168 ;; Registers used:
  5169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/0
  5172 ;;		On exit  : 0/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5175 ;;      Params:         6       0       0       0       0
  5176 ;;      Locals:         4       0       0       0       0
  5177 ;;      Temps:          0       0       0       0       0
  5178 ;;      Totals:        10       0       0       0       0
  5179 ;;Total ram usage:       10 bytes
  5180 ;; Hardware stack levels used:    1
  5181 ;; Hardware stack levels required when called:    5
  5182 ;; This function calls:
  5183 ;;		Nothing
  5184 ;; This function is called by:
  5185 ;;		i1_send_msg
  5186 ;; This function uses a non-reentrant model
  5187 ;;
  5188                           
  5189                           	psect	text34
  5190  0016CA                     __ptext34:
  5191                           	opt stack 0
  5192  0016CA                     i1_memcpy:
  5193                           	opt stack 16
  5194                           
  5195                           ;incstack = 0
  5196  0016CA  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5197  0016CE  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5198  0016D2  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5199  0016D6  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5200  0016DA  D00E               	goto	i1l2732
  5201  0016DC                     i1l2726:
  5202  0016DC  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5203  0016E0  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5204  0016E4  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5205  0016E8  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5206  0016EC  CFDF FFE7          	movff	indf2,indf1
  5207  0016F0  4A09               	infsnz	i1memcpy@s,f,c
  5208  0016F2  2A0A               	incf	i1memcpy@s+1,f,c
  5209  0016F4  4A07               	infsnz	i1memcpy@d,f,c
  5210  0016F6  2A08               	incf	i1memcpy@d+1,f,c
  5211  0016F8                     i1l2732:
  5212  0016F8  0605               	decf	i1memcpy@n,f,c
  5213  0016FA  A0D8               	btfss	status,0,c
  5214  0016FC  0606               	decf	i1memcpy@n+1,f,c
  5215  0016FE  2805               	incf	i1memcpy@n& (0+255),w,c
  5216  001700  B4D8               	btfsc	status,2,c
  5217  001702  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5218  001704  B4D8               	btfsc	status,2,c
  5219                           
  5220                           ;	Return value of i1_memcpy is never used
  5221  001706  0012               	return	
  5222  001708  D7E9               	goto	i1l2726
  5223  00170A                     __end_ofi1_memcpy:
  5224                           	opt stack 0
  5225                           pclatu	equ	0xFFB
  5226                           pclath	equ	0xFFA
  5227                           tblptru	equ	0xFF8
  5228                           tblptrh	equ	0xFF7
  5229                           tblptrl	equ	0xFF6
  5230                           tablat	equ	0xFF5
  5231                           prodh	equ	0xFF4
  5232                           prodl	equ	0xFF3
  5233                           intcon	equ	0xFF2
  5234                           postinc0	equ	0xFEE
  5235                           fsr0h	equ	0xFEA
  5236                           fsr0l	equ	0xFE9
  5237                           wreg	equ	0xFE8
  5238                           indf1	equ	0xFE7
  5239                           fsr1h	equ	0xFE2
  5240                           fsr1l	equ	0xFE1
  5241                           bsr	equ	0xFE0
  5242                           indf2	equ	0xFDF
  5243                           postinc2	equ	0xFDE
  5244                           postdec2	equ	0xFDD
  5245                           fsr2h	equ	0xFDA
  5246                           fsr2l	equ	0xFD9
  5247                           status	equ	0xFD8
  5248                           
  5249 ;; *************** function _ReadTimer1 *****************
  5250 ;; Defined at:
  5251 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;		None
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;  timer           2    2[COMRAM] struct Timers
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  2    0[COMRAM] unsigned int 
  5258 ;; Registers used:
  5259 ;;		None
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5265 ;;      Params:         2       0       0       0       0
  5266 ;;      Locals:         2       0       0       0       0
  5267 ;;      Temps:          0       0       0       0       0
  5268 ;;      Totals:         4       0       0       0       0
  5269 ;;Total ram usage:        4 bytes
  5270 ;; Hardware stack levels used:    1
  5271 ;; Hardware stack levels required when called:    5
  5272 ;; This function calls:
  5273 ;;		Nothing
  5274 ;; This function is called by:
  5275 ;;		_timer1_int_handler
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279                           	psect	text35
  5280  0019DC                     __ptext35:
  5281                           	opt stack 0
  5282  0019DC                     _ReadTimer1:
  5283                           	opt stack 18
  5284                           
  5285                           ;incstack = 0
  5286  0019DC  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  5287  0019E0  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  5288  0019E4  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  5289  0019E8  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  5290  0019EC  0012               	return	
  5291  0019EE                     __end_of_ReadTimer1:
  5292                           	opt stack 0
  5293                           pclatu	equ	0xFFB
  5294                           pclath	equ	0xFFA
  5295                           tblptru	equ	0xFF8
  5296                           tblptrh	equ	0xFF7
  5297                           tblptrl	equ	0xFF6
  5298                           tablat	equ	0xFF5
  5299                           prodh	equ	0xFF4
  5300                           prodl	equ	0xFF3
  5301                           intcon	equ	0xFF2
  5302                           postinc0	equ	0xFEE
  5303                           fsr0h	equ	0xFEA
  5304                           fsr0l	equ	0xFE9
  5305                           wreg	equ	0xFE8
  5306                           indf1	equ	0xFE7
  5307                           fsr1h	equ	0xFE2
  5308                           fsr1l	equ	0xFE1
  5309                           bsr	equ	0xFE0
  5310                           indf2	equ	0xFDF
  5311                           postinc2	equ	0xFDE
  5312                           postdec2	equ	0xFDD
  5313                           fsr2h	equ	0xFDA
  5314                           fsr2l	equ	0xFD9
  5315                           status	equ	0xFD8
  5316                           
  5317 ;; *************** function _InterruptHandlerHigh *****************
  5318 ;; Defined at:
  5319 ;;		line 83 in file "../src/interrupts.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;		None
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;		None
  5324 ;; Return value:  Size  Location     Type
  5325 ;;		None               void
  5326 ;; Registers used:
  5327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5333 ;;      Params:         0       0       0       0       0
  5334 ;;      Locals:         0       0       0       0       0
  5335 ;;      Temps:          0      14       0       0       0
  5336 ;;      Totals:         0      14       0       0       0
  5337 ;;Total ram usage:       14 bytes
  5338 ;; Hardware stack levels used:    1
  5339 ;; Hardware stack levels required when called:    4
  5340 ;; This function calls:
  5341 ;;		_SleepIfOkay
  5342 ;;		_i2c_int_handler
  5343 ;;		_timer0_int_handler
  5344 ;; This function is called by:
  5345 ;;		Interrupt level 2
  5346 ;; This function uses a non-reentrant model
  5347 ;;
  5348                           
  5349                           	psect	intcode
  5350  000008                     __pintcode:
  5351                           	opt stack 0
  5352  000008                     _InterruptHandlerHigh:
  5353                           	opt stack 16
  5354                           
  5355                           ;incstack = 0
  5356  000008  CFFA F0BF          	movff	pclath,??_InterruptHandlerHigh
  5357  00000C  CFFB F0C0          	movff	pclatu,??_InterruptHandlerHigh+1
  5358  000010  EF04  F009         	goto	int_func
  5359                           pclatu	equ	0xFFB
  5360                           pclath	equ	0xFFA
  5361                           tblptru	equ	0xFF8
  5362                           tblptrh	equ	0xFF7
  5363                           tblptrl	equ	0xFF6
  5364                           tablat	equ	0xFF5
  5365                           prodh	equ	0xFF4
  5366                           prodl	equ	0xFF3
  5367                           intcon	equ	0xFF2
  5368                           postinc0	equ	0xFEE
  5369                           fsr0h	equ	0xFEA
  5370                           fsr0l	equ	0xFE9
  5371                           wreg	equ	0xFE8
  5372                           indf1	equ	0xFE7
  5373                           fsr1h	equ	0xFE2
  5374                           fsr1l	equ	0xFE1
  5375                           bsr	equ	0xFE0
  5376                           indf2	equ	0xFDF
  5377                           postinc2	equ	0xFDE
  5378                           postdec2	equ	0xFDD
  5379                           fsr2h	equ	0xFDA
  5380                           fsr2l	equ	0xFD9
  5381                           status	equ	0xFD8
  5382                           
  5383                           	psect	intcode_body
  5384  001208                     __pintcode_body:
  5385                           	opt stack 16
  5386  001208                     int_func:
  5387                           	opt stack 16
  5388  001208  CFE9 F0C1          	movff	fsr0l,??_InterruptHandlerHigh+2
  5389  00120C  CFEA F0C2          	movff	fsr0h,??_InterruptHandlerHigh+3
  5390  001210  CFE1 F0C3          	movff	fsr1l,??_InterruptHandlerHigh+4
  5391  001214  CFE2 F0C4          	movff	fsr1h,??_InterruptHandlerHigh+5
  5392  001218  CFD9 F0C5          	movff	fsr2l,??_InterruptHandlerHigh+6
  5393  00121C  CFDA F0C6          	movff	fsr2h,??_InterruptHandlerHigh+7
  5394  001220  CFF3 F0C7          	movff	prodl,??_InterruptHandlerHigh+8
  5395  001224  CFF4 F0C8          	movff	prodh,??_InterruptHandlerHigh+9
  5396  001228  CFF6 F0C9          	movff	tblptrl,??_InterruptHandlerHigh+10
  5397  00122C  CFF7 F0CA          	movff	tblptrh,??_InterruptHandlerHigh+11
  5398  001230  CFF8 F0CB          	movff	tblptru,??_InterruptHandlerHigh+12
  5399  001234  CFF5 F0CC          	movff	tablat,??_InterruptHandlerHigh+13
  5400                           
  5401                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  5402  001238  A69E               	btfss	3998,3,c	;volatile
  5403  00123A  D003               	goto	i2l2054
  5404                           
  5405                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  5406  00123C  969E               	bcf	3998,3,c	;volatile
  5407                           
  5408                           ;interrupts.c: 92: i2c_int_handler();
  5409  00123E  EC5D  F000         	call	_i2c_int_handler	;wreg free
  5410  001242                     i2l2054:
  5411                           
  5412                           ;interrupts.c: 93: }
  5413                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  5414  001242  A4F2               	btfss	intcon,2,c	;volatile
  5415  001244  D003               	goto	i2l41
  5416                           
  5417                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  5418  001246  94F2               	bcf	intcon,2,c	;volatile
  5419                           
  5420                           ;interrupts.c: 99: timer0_int_handler();
  5421  001248  EC82  F009         	call	_timer0_int_handler	;wreg free
  5422  00124C                     i2l41:
  5423                           
  5424                           ;interrupts.c: 100: }
  5425                           ;interrupts.c: 109: SleepIfOkay();
  5426  00124C  EC93  F00A         	call	_SleepIfOkay	;wreg free
  5427  001250  C0CC  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  5428  001254  C0CB  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  5429  001258  C0CA  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  5430  00125C  C0C9  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  5431  001260  C0C8  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  5432  001264  C0C7  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  5433  001268  C0C6  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  5434  00126C  C0C5  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  5435  001270  C0C4  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  5436  001274  C0C3  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  5437  001278  C0C2  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  5438  00127C  C0C1  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  5439  001280  C0C0  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  5440  001284  C0BF  FFFA         	movff	??_InterruptHandlerHigh,pclath
  5441  001288  0011               	retfie		f
  5442  00128A                     __end_of_InterruptHandlerHigh:
  5443                           	opt stack 0
  5444                           pclatu	equ	0xFFB
  5445                           pclath	equ	0xFFA
  5446                           tblptru	equ	0xFF8
  5447                           tblptrh	equ	0xFF7
  5448                           tblptrl	equ	0xFF6
  5449                           tablat	equ	0xFF5
  5450                           prodh	equ	0xFF4
  5451                           prodl	equ	0xFF3
  5452                           intcon	equ	0xFF2
  5453                           postinc0	equ	0xFEE
  5454                           fsr0h	equ	0xFEA
  5455                           fsr0l	equ	0xFE9
  5456                           wreg	equ	0xFE8
  5457                           indf1	equ	0xFE7
  5458                           fsr1h	equ	0xFE2
  5459                           fsr1l	equ	0xFE1
  5460                           bsr	equ	0xFE0
  5461                           indf2	equ	0xFDF
  5462                           postinc2	equ	0xFDE
  5463                           postdec2	equ	0xFDD
  5464                           fsr2h	equ	0xFDA
  5465                           fsr2l	equ	0xFD9
  5466                           status	equ	0xFD8
  5467                           
  5468 ;; *************** function _timer0_int_handler *****************
  5469 ;; Defined at:
  5470 ;;		line 16 in file "../src/user_interrupts.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;		None
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;  val             2    4[BANK0 ] unsigned int 
  5475 ;;  msgtype         2    2[BANK0 ] int 
  5476 ;;  length          2    0[BANK0 ] int 
  5477 ;; Return value:  Size  Location     Type
  5478 ;;		None               void
  5479 ;; Registers used:
  5480 ;;		wreg, status,2, status,0, cstack
  5481 ;; Tracked objects:
  5482 ;;		On entry : 0/0
  5483 ;;		On exit  : 0/0
  5484 ;;		Unchanged: 0/0
  5485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5486 ;;      Params:         0       0       0       0       0
  5487 ;;      Locals:         0       6       0       0       0
  5488 ;;      Temps:          1       0       0       0       0
  5489 ;;      Totals:         1       6       0       0       0
  5490 ;;Total ram usage:        7 bytes
  5491 ;; Hardware stack levels used:    1
  5492 ;; Hardware stack levels required when called:    3
  5493 ;; This function calls:
  5494 ;;		_FromMainHigh_recvmsg
  5495 ;;		_ToMainHigh_sendmsg
  5496 ;;		_WriteTimer0
  5497 ;; This function is called by:
  5498 ;;		_InterruptHandlerHigh
  5499 ;; This function uses a non-reentrant model
  5500 ;;
  5501                           
  5502                           	psect	text37
  5503  001304                     __ptext37:
  5504                           	opt stack 0
  5505  001304                     _timer0_int_handler:
  5506                           	opt stack 16
  5507                           
  5508                           ;user_interrupts.c: 17: unsigned int val;
  5509                           ;user_interrupts.c: 18: int length, msgtype;
  5510                           ;user_interrupts.c: 21: LATBbits.LATB0 = !LATBbits.LATB0;
  5511                           
  5512                           ;incstack = 0
  5513  001304  B08A               	btfsc	3978,0,c	;volatile
  5514  001306  D002               	goto	i2u132_40
  5515  001308  0E01               	movlw	1
  5516  00130A  D001               	goto	i2u132_46
  5517  00130C                     i2u132_40:
  5518  00130C  0E00               	movlw	0
  5519  00130E                     i2u132_46:
  5520  00130E  6E4C               	movwf	??_timer0_int_handler& (0+255),c
  5521  001310  508A               	movf	3978,w,c	;volatile
  5522  001312  184C               	xorwf	??_timer0_int_handler,w,c
  5523  001314  0BFE               	andlw	-2
  5524  001316  184C               	xorwf	??_timer0_int_handler,w,c
  5525  001318  6E8A               	movwf	3978,c	;volatile
  5526                           
  5527                           ;user_interrupts.c: 23: WriteTimer0(0);
  5528  00131A  0E00               	movlw	0
  5529  00131C  6E30               	movwf	WriteTimer0@timer0+1,c
  5530  00131E  0E00               	movlw	0
  5531  001320  6E2F               	movwf	WriteTimer0@timer0,c
  5532  001322  ECF7  F00C         	call	_WriteTimer0	;wreg free
  5533                           
  5534                           ;user_interrupts.c: 25: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  5535  001326  0100               	movlb	0	; () banked
  5536  001328  0E00               	movlw	high timer0_int_handler@msgtype
  5537  00132A  6E48               	movwf	FromMainHigh_recvmsg@msgtype+1,c
  5538  00132C  0100               	movlb	0	; () banked
  5539  00132E  0EB8               	movlw	low timer0_int_handler@msgtype
  5540  001330  6E47               	movwf	FromMainHigh_recvmsg@msgtype,c
  5541  001332  0100               	movlb	0	; () banked
  5542  001334  0E00               	movlw	high timer0_int_handler@val
  5543  001336  6E4A               	movwf	FromMainHigh_recvmsg@data+1,c
  5544  001338  0100               	movlb	0	; () banked
  5545  00133A  0EBA               	movlw	low timer0_int_handler@val
  5546  00133C  6E49               	movwf	FromMainHigh_recvmsg@data,c
  5547  00133E  0E02               	movlw	2
  5548  001340  EC2D  F00C         	call	_FromMainHigh_recvmsg
  5549  001344  0100               	movlb	0	; () banked
  5550  001346  0100               	movlb	0	; () banked
  5551  001348  6FB6               	movwf	timer0_int_handler@length& (0+255),b
  5552  00134A  0100               	movlb	0	; () banked
  5553  00134C  6BB7               	clrf	(timer0_int_handler@length+1)& (0+255),b
  5554  00134E  0100               	movlb	0	; () banked
  5555  001350  BFB6               	btfsc	timer0_int_handler@length& (0+255),7,b
  5556  001352  07B7               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;user_interrupts.c: 26: if (length == sizeof (val)) {
  5560  001354  0100               	movlb	0	; () banked
  5561  001356  0100               	movlb	0	; () banked
  5562  001358  51B6               	movf	timer0_int_handler@length& (0+255),w,b
  5563  00135A  0A02               	xorlw	2
  5564  00135C  11B7               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  5565  00135E  A4D8               	btfss	status,2,c
  5566  001360  0012               	return	
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;user_interrupts.c: 27: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  5570  001362  6E4C               	movwf	??_timer0_int_handler& (0+255),c
  5571  001364  0E0A               	movlw	10
  5572  001366  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  5573  001368  504C               	movf	??_timer0_int_handler& (0+255),w,c
  5574  00136A  0100               	movlb	0	; () banked
  5575  00136C  0E00               	movlw	high timer0_int_handler@val
  5576  00136E  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  5577  001370  0100               	movlb	0	; () banked
  5578  001372  0EBA               	movlw	low timer0_int_handler@val
  5579  001374  6E46               	movwf	ToMainHigh_sendmsg@data,c
  5580  001376  0E02               	movlw	2
  5581  001378  EC7C  F00C         	call	_ToMainHigh_sendmsg
  5582  00137C  0012               	return	
  5583  00137E                     __end_of_timer0_int_handler:
  5584                           	opt stack 0
  5585                           pclatu	equ	0xFFB
  5586                           pclath	equ	0xFFA
  5587                           tblptru	equ	0xFF8
  5588                           tblptrh	equ	0xFF7
  5589                           tblptrl	equ	0xFF6
  5590                           tablat	equ	0xFF5
  5591                           prodh	equ	0xFF4
  5592                           prodl	equ	0xFF3
  5593                           intcon	equ	0xFF2
  5594                           postinc0	equ	0xFEE
  5595                           fsr0h	equ	0xFEA
  5596                           fsr0l	equ	0xFE9
  5597                           wreg	equ	0xFE8
  5598                           indf1	equ	0xFE7
  5599                           fsr1h	equ	0xFE2
  5600                           fsr1l	equ	0xFE1
  5601                           bsr	equ	0xFE0
  5602                           indf2	equ	0xFDF
  5603                           postinc2	equ	0xFDE
  5604                           postdec2	equ	0xFDD
  5605                           fsr2h	equ	0xFDA
  5606                           fsr2l	equ	0xFD9
  5607                           status	equ	0xFD8
  5608                           
  5609 ;; *************** function _WriteTimer0 *****************
  5610 ;; Defined at:
  5611 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;  timer0          2   46[COMRAM] unsigned int 
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;  timer           2   48[COMRAM] struct Timers
  5616 ;; Return value:  Size  Location     Type
  5617 ;;		None               void
  5618 ;; Registers used:
  5619 ;;		None
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5625 ;;      Params:         2       0       0       0       0
  5626 ;;      Locals:         2       0       0       0       0
  5627 ;;      Temps:          0       0       0       0       0
  5628 ;;      Totals:         4       0       0       0       0
  5629 ;;Total ram usage:        4 bytes
  5630 ;; Hardware stack levels used:    1
  5631 ;; This function calls:
  5632 ;;		Nothing
  5633 ;; This function is called by:
  5634 ;;		_timer0_int_handler
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638                           	psect	text38
  5639  0019EE                     __ptext38:
  5640                           	opt stack 0
  5641  0019EE                     _WriteTimer0:
  5642                           	opt stack 18
  5643                           
  5644                           ;incstack = 0
  5645  0019EE  C02F  F031         	movff	WriteTimer0@timer0,WriteTimer0@timer
  5646  0019F2  C030  F032         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  5647  0019F6  C032  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  5648  0019FA  C031  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  5649  0019FE  0012               	return	
  5650  001A00                     __end_of_WriteTimer0:
  5651                           	opt stack 0
  5652                           pclatu	equ	0xFFB
  5653                           pclath	equ	0xFFA
  5654                           tblptru	equ	0xFF8
  5655                           tblptrh	equ	0xFF7
  5656                           tblptrl	equ	0xFF6
  5657                           tablat	equ	0xFF5
  5658                           prodh	equ	0xFF4
  5659                           prodl	equ	0xFF3
  5660                           intcon	equ	0xFF2
  5661                           postinc0	equ	0xFEE
  5662                           fsr0h	equ	0xFEA
  5663                           fsr0l	equ	0xFE9
  5664                           wreg	equ	0xFE8
  5665                           indf1	equ	0xFE7
  5666                           fsr1h	equ	0xFE2
  5667                           fsr1l	equ	0xFE1
  5668                           bsr	equ	0xFE0
  5669                           indf2	equ	0xFDF
  5670                           postinc2	equ	0xFDE
  5671                           postdec2	equ	0xFDD
  5672                           fsr2h	equ	0xFDA
  5673                           fsr2l	equ	0xFD9
  5674                           status	equ	0xFD8
  5675                           
  5676 ;; *************** function _FromMainHigh_recvmsg *****************
  5677 ;; Defined at:
  5678 ;;		line 183 in file "../src/messages.c"
  5679 ;; Parameters:    Size  Location     Type
  5680 ;;  maxlength       1    wreg     unsigned char 
  5681 ;;  msgtype         2   70[COMRAM] PTR unsigned char 
  5682 ;;		 -> timer0_int_handler@msgtype(2), 
  5683 ;;  data            2   72[COMRAM] PTR void 
  5684 ;;		 -> timer0_int_handler@val(2), 
  5685 ;; Auto vars:     Size  Location     Type
  5686 ;;  maxlength       1   74[COMRAM] unsigned char 
  5687 ;; Return value:  Size  Location     Type
  5688 ;;                  1    wreg      char 
  5689 ;; Registers used:
  5690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5691 ;; Tracked objects:
  5692 ;;		On entry : 0/0
  5693 ;;		On exit  : 0/0
  5694 ;;		Unchanged: 0/0
  5695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5696 ;;      Params:         4       0       0       0       0
  5697 ;;      Locals:         1       0       0       0       0
  5698 ;;      Temps:          0       0       0       0       0
  5699 ;;      Totals:         5       0       0       0       0
  5700 ;;Total ram usage:        5 bytes
  5701 ;; Hardware stack levels used:    1
  5702 ;; Hardware stack levels required when called:    2
  5703 ;; This function calls:
  5704 ;;		i2_recv_msg
  5705 ;; This function is called by:
  5706 ;;		_timer0_int_handler
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710                           	psect	text39
  5711  00185A                     __ptext39:
  5712                           	opt stack 0
  5713  00185A                     _FromMainHigh_recvmsg:
  5714                           	opt stack 16
  5715                           
  5716                           ;incstack = 0
  5717                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  5718  00185A  CFE8 F04B          	movff	wreg,FromMainHigh_recvmsg@maxlength
  5719                           
  5720                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  5721  00185E  0101               	movlb	1	; () banked
  5722  001860  0E01               	movlw	high _FromMainHigh_MQ
  5723  001862  6E3A               	movwf	i2recv_msg@qptr+1,c
  5724  001864  0101               	movlb	1	; () banked
  5725  001866  0E00               	movlw	low _FromMainHigh_MQ
  5726  001868  6E39               	movwf	i2recv_msg@qptr,c
  5727  00186A  C04B  F03B         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  5728  00186E  C048  F03D         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  5729  001872  C047  F03C         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  5730  001876  C04A  F03F         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  5731  00187A  C049  F03E         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  5732  00187E  EC5E  F006         	call	i2_recv_msg	;wreg free
  5733  001882  0012               	return	
  5734  001884                     __end_of_FromMainHigh_recvmsg:
  5735                           	opt stack 0
  5736                           pclatu	equ	0xFFB
  5737                           pclath	equ	0xFFA
  5738                           tblptru	equ	0xFF8
  5739                           tblptrh	equ	0xFF7
  5740                           tblptrl	equ	0xFF6
  5741                           tablat	equ	0xFF5
  5742                           prodh	equ	0xFF4
  5743                           prodl	equ	0xFF3
  5744                           intcon	equ	0xFF2
  5745                           postinc0	equ	0xFEE
  5746                           fsr0h	equ	0xFEA
  5747                           fsr0l	equ	0xFE9
  5748                           wreg	equ	0xFE8
  5749                           indf1	equ	0xFE7
  5750                           fsr1h	equ	0xFE2
  5751                           fsr1l	equ	0xFE1
  5752                           bsr	equ	0xFE0
  5753                           indf2	equ	0xFDF
  5754                           postinc2	equ	0xFDE
  5755                           postdec2	equ	0xFDD
  5756                           fsr2h	equ	0xFDA
  5757                           fsr2l	equ	0xFD9
  5758                           status	equ	0xFD8
  5759                           
  5760 ;; *************** function i2_recv_msg *****************
  5761 ;; Defined at:
  5762 ;;		line 63 in file "../src/messages.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;  qptr            2   56[COMRAM] PTR struct __msg_queue
  5765 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5766 ;;  maxlength       1   58[COMRAM] unsigned char 
  5767 ;;  msgtype         2   59[COMRAM] PTR unsigned char 
  5768 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  5769 ;;  data            2   61[COMRAM] PTR void 
  5770 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;  recv_msg        2   68[COMRAM] PTR struct __msg
  5773 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5774 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5775 ;;  recv_msg        2   66[COMRAM] unsigned int 
  5776 ;;  recv_msg        1   65[COMRAM] unsigned char 
  5777 ;; Return value:  Size  Location     Type
  5778 ;;                  1    wreg      char 
  5779 ;; Registers used:
  5780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5781 ;; Tracked objects:
  5782 ;;		On entry : 0/0
  5783 ;;		On exit  : 0/0
  5784 ;;		Unchanged: 0/0
  5785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5786 ;;      Params:         7       0       0       0       0
  5787 ;;      Locals:         5       0       0       0       0
  5788 ;;      Temps:          2       0       0       0       0
  5789 ;;      Totals:        14       0       0       0       0
  5790 ;;Total ram usage:       14 bytes
  5791 ;; Hardware stack levels used:    1
  5792 ;; Hardware stack levels required when called:    1
  5793 ;; This function calls:
  5794 ;;		i2_memcpy
  5795 ;; This function is called by:
  5796 ;;		_FromMainHigh_recvmsg
  5797 ;; This function uses a non-reentrant model
  5798 ;;
  5799                           
  5800                           	psect	text40
  5801  000CBC                     __ptext40:
  5802                           	opt stack 0
  5803  000CBC                     i2_recv_msg:
  5804                           	opt stack 16
  5805                           
  5806                           ;messages.c: 64: unsigned char slot;
  5807                           ;messages.c: 68: msg *qmsg;
  5808                           ;messages.c: 69: size_t tlength;
  5809                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5810                           
  5811                           ;incstack = 0
  5812  000CBC  EE20 F035          	lfsr	2,53
  5813  000CC0  5039               	movf	i2recv_msg@qptr,w,c
  5814  000CC2  26D9               	addwf	fsr2l,f,c
  5815  000CC4  503A               	movf	i2recv_msg@qptr+1,w,c
  5816  000CC6  22DA               	addwfc	fsr2h,f,c
  5817  000CC8  50DF               	movf	indf2,w,c
  5818  000CCA  6E42               	movwf	i2recv_msg@slot,c
  5819                           
  5820                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5821  000CCC  5042               	movf	i2recv_msg@slot,w,c
  5822  000CCE  0D0D               	mullw	13
  5823  000CD0  50F3               	movf	prodl,w,c
  5824  000CD2  2439               	addwf	i2recv_msg@qptr,w,c
  5825  000CD4  6E45               	movwf	i2recv_msg@qmsg,c
  5826  000CD6  50F4               	movf	prodh,w,c
  5827  000CD8  203A               	addwfc	i2recv_msg@qptr+1,w,c
  5828  000CDA  6E46               	movwf	i2recv_msg@qmsg+1,c
  5829                           
  5830                           ;messages.c: 74: if (qmsg->full == 1) {
  5831  000CDC  0E01               	movlw	1
  5832  000CDE  C045  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  5833  000CE2  C046  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  5834  000CE6  62DF               	cpfseq	indf2,c
  5835  000CE8  D050               	goto	i2l2716
  5836                           
  5837                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5838  000CEA  EE20 F001          	lfsr	2,1
  5839  000CEE  5045               	movf	i2recv_msg@qmsg,w,c
  5840  000CF0  26D9               	addwf	fsr2l,f,c
  5841  000CF2  5046               	movf	i2recv_msg@qmsg+1,w,c
  5842  000CF4  22DA               	addwfc	fsr2h,f,c
  5843  000CF6  50DF               	movf	indf2,w,c
  5844  000CF8  5C3B               	subwf	i2recv_msg@maxlength,w,c
  5845  000CFA  B0D8               	btfsc	status,0,c
  5846  000CFC  D002               	goto	i2l2700
  5847                           
  5848                           ;messages.c: 77: return (-3);
  5849  000CFE  0EFD               	movlw	253
  5850  000D00  0012               	return	
  5851  000D02                     i2l2700:
  5852                           
  5853                           ;messages.c: 78: }
  5854                           ;messages.c: 80: tlength = qmsg->length;
  5855  000D02  EE20 F001          	lfsr	2,1
  5856  000D06  5045               	movf	i2recv_msg@qmsg,w,c
  5857  000D08  26D9               	addwf	fsr2l,f,c
  5858  000D0A  5046               	movf	i2recv_msg@qmsg+1,w,c
  5859  000D0C  22DA               	addwfc	fsr2h,f,c
  5860  000D0E  50DF               	movf	indf2,w,c
  5861  000D10  6E40               	movwf	??i2_recv_msg& (0+255),c
  5862  000D12  5040               	movf	??i2_recv_msg,w,c
  5863  000D14  6E43               	movwf	i2recv_msg@tlength,c
  5864  000D16  6A44               	clrf	i2recv_msg@tlength+1,c
  5865                           
  5866                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5867  000D18  C03F  F030         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  5868  000D1C  C03E  F02F         	movff	i2recv_msg@data,i2memcpy@d1
  5869  000D20  0E03               	movlw	3
  5870  000D22  2445               	addwf	i2recv_msg@qmsg,w,c
  5871  000D24  6E40               	movwf	??i2_recv_msg& (0+255),c
  5872  000D26  0E00               	movlw	0
  5873  000D28  2046               	addwfc	i2recv_msg@qmsg+1,w,c
  5874  000D2A  6E41               	movwf	(??i2_recv_msg+1)& (0+255),c
  5875  000D2C  C040  F031         	movff	??i2_recv_msg,i2memcpy@s1
  5876  000D30  C041  F032         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  5877  000D34  C043  F033         	movff	i2recv_msg@tlength,i2memcpy@n
  5878  000D38  C044  F034         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  5879  000D3C  EC85  F00B         	call	i2_memcpy	;wreg free
  5880                           
  5881                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5882  000D40  EE20 F035          	lfsr	2,53
  5883  000D44  5039               	movf	i2recv_msg@qptr,w,c
  5884  000D46  26D9               	addwf	fsr2l,f,c
  5885  000D48  503A               	movf	i2recv_msg@qptr+1,w,c
  5886  000D4A  22DA               	addwfc	fsr2h,f,c
  5887  000D4C  EE10 F035          	lfsr	1,53
  5888  000D50  5039               	movf	i2recv_msg@qptr,w,c
  5889  000D52  26E1               	addwf	fsr1l,f,c
  5890  000D54  503A               	movf	i2recv_msg@qptr+1,w,c
  5891  000D56  22E2               	addwfc	fsr1h,f,c
  5892  000D58  50E7               	movf	indf1,w,c
  5893  000D5A  6E40               	movwf	??i2_recv_msg& (0+255),c
  5894  000D5C  2840               	incf	??i2_recv_msg,w,c
  5895  000D5E  0B03               	andlw	3
  5896  000D60  6EDF               	movwf	indf2,c
  5897                           
  5898                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5899  000D62  EE20 F002          	lfsr	2,2
  5900  000D66  5045               	movf	i2recv_msg@qmsg,w,c
  5901  000D68  26D9               	addwf	fsr2l,f,c
  5902  000D6A  5046               	movf	i2recv_msg@qmsg+1,w,c
  5903  000D6C  22DA               	addwfc	fsr2h,f,c
  5904  000D6E  C03C  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  5905  000D72  C03D  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  5906  000D76  CFDF FFE7          	movff	indf2,indf1
  5907                           
  5908                           ;messages.c: 91: qmsg->full = 0;
  5909  000D7A  C045  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  5910  000D7E  C046  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  5911  000D82  0E00               	movlw	0
  5912  000D84  6EDF               	movwf	indf2,c
  5913                           
  5914                           ;messages.c: 92: return (tlength);
  5915  000D86  5043               	movf	i2recv_msg@tlength,w,c
  5916  000D88  0012               	return	
  5917  000D8A                     i2l2716:
  5918                           
  5919                           ;messages.c: 94: return (-4);
  5920  000D8A  0EFC               	movlw	252
  5921  000D8C  0012               	return	
  5922  000D8E                     __end_ofi2_recv_msg:
  5923                           	opt stack 0
  5924                           pclatu	equ	0xFFB
  5925                           pclath	equ	0xFFA
  5926                           tblptru	equ	0xFF8
  5927                           tblptrh	equ	0xFF7
  5928                           tblptrl	equ	0xFF6
  5929                           tablat	equ	0xFF5
  5930                           prodh	equ	0xFF4
  5931                           prodl	equ	0xFF3
  5932                           intcon	equ	0xFF2
  5933                           postinc0	equ	0xFEE
  5934                           fsr0h	equ	0xFEA
  5935                           fsr0l	equ	0xFE9
  5936                           wreg	equ	0xFE8
  5937                           indf1	equ	0xFE7
  5938                           fsr1h	equ	0xFE2
  5939                           fsr1l	equ	0xFE1
  5940                           bsr	equ	0xFE0
  5941                           indf2	equ	0xFDF
  5942                           postinc2	equ	0xFDE
  5943                           postdec2	equ	0xFDD
  5944                           fsr2h	equ	0xFDA
  5945                           fsr2l	equ	0xFD9
  5946                           status	equ	0xFD8
  5947                           
  5948 ;; *************** function _i2c_int_handler *****************
  5949 ;; Defined at:
  5950 ;;		line 100 in file "../src/my_i2c.c"
  5951 ;; Parameters:    Size  Location     Type
  5952 ;;		None
  5953 ;; Auto vars:     Size  Location     Type
  5954 ;;  error_buf       3    0[BANK0 ] unsigned char [3]
  5955 ;;  data_read       1    8[BANK0 ] unsigned char 
  5956 ;;  msg_ready       1    7[BANK0 ] unsigned char 
  5957 ;;  msg_to_send     1    6[BANK0 ] unsigned char 
  5958 ;;  i2c_data        1    5[BANK0 ] unsigned char 
  5959 ;;  overrun_erro    1    4[BANK0 ] unsigned char 
  5960 ;;  data_written    1    3[BANK0 ] unsigned char 
  5961 ;; Return value:  Size  Location     Type
  5962 ;;		None               void
  5963 ;; Registers used:
  5964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5965 ;; Tracked objects:
  5966 ;;		On entry : 0/0
  5967 ;;		On exit  : 0/0
  5968 ;;		Unchanged: 0/0
  5969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5970 ;;      Params:         0       0       0       0       0
  5971 ;;      Locals:         0       9       0       0       0
  5972 ;;      Temps:          2       0       0       0       0
  5973 ;;      Totals:         2       9       0       0       0
  5974 ;;Total ram usage:       11 bytes
  5975 ;; Hardware stack levels used:    1
  5976 ;; Hardware stack levels required when called:    3
  5977 ;; This function calls:
  5978 ;;		_ToMainHigh_sendmsg
  5979 ;;		_handle_start
  5980 ;; This function is called by:
  5981 ;;		_InterruptHandlerHigh
  5982 ;; This function uses a non-reentrant model
  5983 ;;
  5984                           
  5985                           	psect	text41
  5986  0000BA                     __ptext41:
  5987                           	opt stack 0
  5988  0000BA                     _i2c_int_handler:
  5989                           	opt stack 16
  5990                           
  5991                           ;my_i2c.c: 101: unsigned char i2c_data;
  5992                           ;my_i2c.c: 102: unsigned char data_read = 0;
  5993                           
  5994                           ;incstack = 0
  5995  0000BA  6E49               	movwf	??_i2c_int_handler& (0+255),c
  5996  0000BC  0E00               	movlw	0
  5997  0000BE  0100               	movlb	0	; () banked
  5998  0000C0  0100               	movlb	0	; () banked
  5999  0000C2  6FBE               	movwf	i2c_int_handler@data_read& (0+255),b
  6000  0000C4  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6001                           
  6002                           ;my_i2c.c: 103: unsigned char data_written = 0;
  6003  0000C6  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6004  0000C8  0E00               	movlw	0
  6005  0000CA  0100               	movlb	0	; () banked
  6006  0000CC  0100               	movlb	0	; () banked
  6007  0000CE  6FB9               	movwf	i2c_int_handler@data_written& (0+255),b
  6008  0000D0  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6009                           
  6010                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  6011  0000D2  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6012  0000D4  0E00               	movlw	0
  6013  0000D6  0100               	movlb	0	; () banked
  6014  0000D8  0100               	movlb	0	; () banked
  6015  0000DA  6FBD               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6016  0000DC  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6017                           
  6018                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  6019  0000DE  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6020  0000E0  0E00               	movlw	0
  6021  0000E2  0100               	movlb	0	; () banked
  6022  0000E4  0100               	movlb	0	; () banked
  6023  0000E6  6FBC               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6024  0000E8  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6025                           
  6026                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  6027  0000EA  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6028  0000EC  0E00               	movlw	0
  6029  0000EE  0100               	movlb	0	; () banked
  6030  0000F0  0100               	movlb	0	; () banked
  6031  0000F2  6FBA               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6032  0000F4  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6033                           
  6034                           ; BSR set to: 0
  6035                           ;my_i2c.c: 107: unsigned char error_buf[3];
  6036                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  6037  0000F6  ACC6               	btfss	4038,6,c	;volatile
  6038  0000F8  D027               	goto	i2l2074
  6039                           
  6040                           ; BSR set to: 0
  6041                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  6042  0000FA  9CC6               	bcf	4038,6,c	;volatile
  6043                           
  6044                           ; BSR set to: 0
  6045                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  6046  0000FC  0100               	movlb	0	; () banked
  6047  0000FE  EE20 F00C          	lfsr	2,12
  6048  000102  0100               	movlb	0	; () banked
  6049  000104  51E7               	movf	_ic_ptr& (0+255),w,b
  6050  000106  26D9               	addwf	fsr2l,f,c
  6051  000108  0100               	movlb	0	; () banked
  6052  00010A  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6053  00010C  22DA               	addwfc	fsr2h,f,c
  6054  00010E  0E05               	movlw	5
  6055  000110  6EDF               	movwf	indf2,c
  6056                           
  6057                           ; BSR set to: 0
  6058                           ;my_i2c.c: 116: overrun_error = 1;
  6059  000112  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6060  000114  0E01               	movlw	1
  6061  000116  0100               	movlb	0	; () banked
  6062  000118  0100               	movlb	0	; () banked
  6063  00011A  6FBA               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6064  00011C  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6065                           
  6066                           ; BSR set to: 0
  6067                           ;my_i2c.c: 117: ic_ptr->error_count++;
  6068  00011E  0100               	movlb	0	; () banked
  6069  000120  EE20 F00E          	lfsr	2,14
  6070  000124  0100               	movlb	0	; () banked
  6071  000126  51E7               	movf	_ic_ptr& (0+255),w,b
  6072  000128  26D9               	addwf	fsr2l,f,c
  6073  00012A  0100               	movlb	0	; () banked
  6074  00012C  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6075  00012E  22DA               	addwfc	fsr2h,f,c
  6076  000130  2ADF               	incf	indf2,f,c
  6077                           
  6078                           ; BSR set to: 0
  6079                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  6080  000132  0100               	movlb	0	; () banked
  6081  000134  EE20 F00D          	lfsr	2,13
  6082  000138  0100               	movlb	0	; () banked
  6083  00013A  51E7               	movf	_ic_ptr& (0+255),w,b
  6084  00013C  26D9               	addwf	fsr2l,f,c
  6085  00013E  0100               	movlb	0	; () banked
  6086  000140  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6087  000142  22DA               	addwfc	fsr2h,f,c
  6088  000144  0E04               	movlw	4
  6089  000146  6EDF               	movwf	indf2,c
  6090  000148                     i2l2074:
  6091                           
  6092                           ; BSR set to: 0
  6093                           ;my_i2c.c: 119: }
  6094                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  6095  000148  A0C7               	btfss	4039,0,c	;volatile
  6096  00014A  D008               	goto	i2l2080
  6097                           
  6098                           ; BSR set to: 0
  6099                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  6100  00014C  CFC9 F0BB          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6101                           
  6102                           ; BSR set to: 0
  6103                           ;my_i2c.c: 123: data_read = 1;
  6104  000150  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6105  000152  0E01               	movlw	1
  6106  000154  0100               	movlb	0	; () banked
  6107  000156  0100               	movlb	0	; () banked
  6108  000158  6FBE               	movwf	i2c_int_handler@data_read& (0+255),b
  6109  00015A  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6110  00015C                     i2l2080:
  6111                           
  6112                           ; BSR set to: 0
  6113                           ;my_i2c.c: 124: }
  6114                           ;my_i2c.c: 129: if (!overrun_error) {
  6115  00015C  0100               	movlb	0	; () banked
  6116  00015E  0100               	movlb	0	; () banked
  6117  000160  67BA               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6118  000162  D1B8               	goto	i2l259
  6119  000164  D1A1               	goto	i2l2168
  6120  000166                     i2l261:
  6121                           
  6122                           ; BSR set to: 0
  6123                           ;my_i2c.c: 132: {
  6124                           ;my_i2c.c: 134: if (SSPSTATbits.S == 1) {
  6125  000166  A6C7               	btfss	4039,3,c	;volatile
  6126  000168  D1B5               	goto	i2l259
  6127                           
  6128                           ; BSR set to: 0
  6129                           ;my_i2c.c: 135: handle_start(data_read);
  6130  00016A  0100               	movlb	0	; () banked
  6131  00016C  0100               	movlb	0	; () banked
  6132  00016E  51BE               	movf	i2c_int_handler@data_read& (0+255),w,b
  6133  000170  ECC7  F006         	call	_handle_start
  6134                           
  6135                           ;my_i2c.c: 137: if (ic_ptr->status == 0x8) {
  6136  000174  0100               	movlb	0	; () banked
  6137  000176  EE20 F00C          	lfsr	2,12
  6138  00017A  0100               	movlb	0	; () banked
  6139  00017C  51E7               	movf	_ic_ptr& (0+255),w,b
  6140  00017E  26D9               	addwf	fsr2l,f,c
  6141  000180  0100               	movlb	0	; () banked
  6142  000182  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6143  000184  22DA               	addwfc	fsr2h,f,c
  6144  000186  0E08               	movlw	8
  6145  000188  62DF               	cpfseq	indf2,c
  6146  00018A  D1A4               	goto	i2l259
  6147                           
  6148                           ; BSR set to: 0
  6149                           ;my_i2c.c: 138: data_read = 0;
  6150  00018C  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6151  00018E  0E00               	movlw	0
  6152  000190  0100               	movlb	0	; () banked
  6153  000192  0100               	movlb	0	; () banked
  6154  000194  6FBE               	movwf	i2c_int_handler@data_read& (0+255),b
  6155  000196  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6156                           
  6157                           ;my_i2c.c: 139: msg_to_send = 1;
  6158  000198  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6159  00019A  0E01               	movlw	1
  6160  00019C  0100               	movlb	0	; () banked
  6161  00019E  0100               	movlb	0	; () banked
  6162  0001A0  6FBC               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6163  0001A2  D175               	goto	L8
  6164  0001A4                     i2l265:
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;my_i2c.c: 145: {
  6168                           ;my_i2c.c: 147: if (SSPSTATbits.P == 1) {
  6169  0001A4  A8C7               	btfss	4039,4,c	;volatile
  6170  0001A6  D02E               	goto	i2l2100
  6171                           
  6172                           ; BSR set to: 0
  6173                           ;my_i2c.c: 150: ic_ptr->event_count++;
  6174  0001A8  0100               	movlb	0	; () banked
  6175  0001AA  EE20 F00B          	lfsr	2,11
  6176  0001AE  0100               	movlb	0	; () banked
  6177  0001B0  51E7               	movf	_ic_ptr& (0+255),w,b
  6178  0001B2  26D9               	addwf	fsr2l,f,c
  6179  0001B4  0100               	movlb	0	; () banked
  6180  0001B6  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6181  0001B8  22DA               	addwfc	fsr2h,f,c
  6182  0001BA  2ADF               	incf	indf2,f,c
  6183                           
  6184                           ; BSR set to: 0
  6185                           ;my_i2c.c: 151: if (data_read) {
  6186  0001BC  0100               	movlb	0	; () banked
  6187  0001BE  0100               	movlb	0	; () banked
  6188  0001C0  51BE               	movf	i2c_int_handler@data_read& (0+255),w,b
  6189  0001C2  B4D8               	btfsc	status,2,c
  6190  0001C4  D166               	goto	L10
  6191                           
  6192                           ; BSR set to: 0
  6193                           ;my_i2c.c: 152: if (SSPSTATbits.D_A == 0) {
  6194  0001C6  BAC7               	btfsc	4039,5,c	;volatile
  6195  0001C8  D007               	goto	i2l2098
  6196                           
  6197                           ; BSR set to: 0
  6198                           ;my_i2c.c: 153: msg_ready = 1;
  6199  0001CA  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6200  0001CC  0E01               	movlw	1
  6201  0001CE  0100               	movlb	0	; () banked
  6202  0001D0  0100               	movlb	0	; () banked
  6203  0001D2  6FBD               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6204  0001D4  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6205                           
  6206                           ;my_i2c.c: 154: } else {
  6207  0001D6  D15D               	goto	L10
  6208  0001D8                     i2l2098:
  6209                           
  6210                           ; BSR set to: 0
  6211                           ;my_i2c.c: 155: ic_ptr->error_count++;
  6212  0001D8  0100               	movlb	0	; () banked
  6213  0001DA  EE20 F00E          	lfsr	2,14
  6214  0001DE  0100               	movlb	0	; () banked
  6215  0001E0  51E7               	movf	_ic_ptr& (0+255),w,b
  6216  0001E2  26D9               	addwf	fsr2l,f,c
  6217  0001E4  0100               	movlb	0	; () banked
  6218  0001E6  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6219  0001E8  22DA               	addwfc	fsr2h,f,c
  6220  0001EA  2ADF               	incf	indf2,f,c
  6221                           
  6222                           ;my_i2c.c: 156: ic_ptr->error_code = 0x6;
  6223  0001EC  0100               	movlb	0	; () banked
  6224  0001EE  EE20 F00D          	lfsr	2,13
  6225  0001F2  0100               	movlb	0	; () banked
  6226  0001F4  51E7               	movf	_ic_ptr& (0+255),w,b
  6227  0001F6  26D9               	addwf	fsr2l,f,c
  6228  0001F8  0100               	movlb	0	; () banked
  6229  0001FA  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6230  0001FC  22DA               	addwfc	fsr2h,f,c
  6231  0001FE  0E06               	movlw	6
  6232  000200  6EDF               	movwf	indf2,c
  6233                           
  6234                           ; BSR set to: 0
  6235  000202  D147               	goto	L10
  6236  000204                     i2l2100:
  6237                           
  6238                           ; BSR set to: 0
  6239  000204  0100               	movlb	0	; () banked
  6240  000206  0100               	movlb	0	; () banked
  6241  000208  51BE               	movf	i2c_int_handler@data_read& (0+255),w,b
  6242  00020A  B4D8               	btfsc	status,2,c
  6243  00020C  D163               	goto	i2l259
  6244                           
  6245                           ; BSR set to: 0
  6246                           ;my_i2c.c: 161: ic_ptr->event_count++;
  6247  00020E  0100               	movlb	0	; () banked
  6248  000210  EE20 F00B          	lfsr	2,11
  6249  000214  0100               	movlb	0	; () banked
  6250  000216  51E7               	movf	_ic_ptr& (0+255),w,b
  6251  000218  26D9               	addwf	fsr2l,f,c
  6252  00021A  0100               	movlb	0	; () banked
  6253  00021C  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6254  00021E  22DA               	addwfc	fsr2h,f,c
  6255  000220  2ADF               	incf	indf2,f,c
  6256                           
  6257                           ; BSR set to: 0
  6258                           ;my_i2c.c: 162: if (SSPSTATbits.D_A == 0) {
  6259  000222  BAC7               	btfsc	4039,5,c	;volatile
  6260  000224  D019               	goto	i2l2116
  6261                           
  6262                           ; BSR set to: 0
  6263                           ;my_i2c.c: 163: if (SSPSTATbits.R_W == 0) {
  6264  000226  B4C7               	btfsc	4039,2,c	;volatile
  6265  000228  D00B               	goto	i2l2110
  6266                           
  6267                           ; BSR set to: 0
  6268                           ;my_i2c.c: 164: ic_ptr->status = 0x7;
  6269  00022A  0100               	movlb	0	; () banked
  6270  00022C  EE20 F00C          	lfsr	2,12
  6271  000230  0100               	movlb	0	; () banked
  6272  000232  51E7               	movf	_ic_ptr& (0+255),w,b
  6273  000234  26D9               	addwf	fsr2l,f,c
  6274  000236  0100               	movlb	0	; () banked
  6275  000238  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6276  00023A  22DA               	addwfc	fsr2h,f,c
  6277  00023C  0E07               	movlw	7
  6278  00023E  D071               	goto	L7
  6279  000240                     i2l2110:
  6280                           
  6281                           ; BSR set to: 0
  6282                           ;my_i2c.c: 166: ic_ptr->status = 0x8;
  6283  000240  0100               	movlb	0	; () banked
  6284  000242  EE20 F00C          	lfsr	2,12
  6285  000246  0100               	movlb	0	; () banked
  6286  000248  51E7               	movf	_ic_ptr& (0+255),w,b
  6287  00024A  26D9               	addwf	fsr2l,f,c
  6288  00024C  0100               	movlb	0	; () banked
  6289  00024E  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6290  000250  22DA               	addwfc	fsr2h,f,c
  6291  000252  0E08               	movlw	8
  6292  000254  6EDF               	movwf	indf2,c
  6293  000256  D110               	goto	L11
  6294  000258                     i2l2116:
  6295                           
  6296                           ; BSR set to: 0
  6297                           ;my_i2c.c: 172: ic_ptr->error_count++;
  6298  000258  0100               	movlb	0	; () banked
  6299  00025A  EE20 F00E          	lfsr	2,14
  6300  00025E  0100               	movlb	0	; () banked
  6301  000260  51E7               	movf	_ic_ptr& (0+255),w,b
  6302  000262  26D9               	addwf	fsr2l,f,c
  6303  000264  0100               	movlb	0	; () banked
  6304  000266  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6305  000268  22DA               	addwfc	fsr2h,f,c
  6306  00026A  2ADF               	incf	indf2,f,c
  6307                           
  6308                           ;my_i2c.c: 173: ic_ptr->status = 0x5;
  6309  00026C  0100               	movlb	0	; () banked
  6310  00026E  EE20 F00C          	lfsr	2,12
  6311  000272  0100               	movlb	0	; () banked
  6312  000274  51E7               	movf	_ic_ptr& (0+255),w,b
  6313  000276  26D9               	addwf	fsr2l,f,c
  6314  000278  0100               	movlb	0	; () banked
  6315  00027A  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6316  00027C  22DA               	addwfc	fsr2h,f,c
  6317  00027E  0E05               	movlw	5
  6318  000280  6EDF               	movwf	indf2,c
  6319                           
  6320                           ;my_i2c.c: 174: ic_ptr->error_code = 0x6;
  6321  000282  0100               	movlb	0	; () banked
  6322  000284  EE20 F00D          	lfsr	2,13
  6323  000288  0100               	movlb	0	; () banked
  6324  00028A  51E7               	movf	_ic_ptr& (0+255),w,b
  6325  00028C  26D9               	addwf	fsr2l,f,c
  6326  00028E  0100               	movlb	0	; () banked
  6327  000290  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6328  000292  22DA               	addwfc	fsr2h,f,c
  6329  000294  0E06               	movlw	6
  6330  000296  D045               	goto	L7
  6331  000298                     i2l2118:
  6332                           
  6333                           ; BSR set to: 0
  6334                           ;my_i2c.c: 180: {
  6335                           ;my_i2c.c: 181: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6336  000298  0100               	movlb	0	; () banked
  6337  00029A  EE20 F01A          	lfsr	2,26
  6338  00029E  0100               	movlb	0	; () banked
  6339  0002A0  51E7               	movf	_ic_ptr& (0+255),w,b
  6340  0002A2  26D9               	addwf	fsr2l,f,c
  6341  0002A4  0100               	movlb	0	; () banked
  6342  0002A6  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6343  0002A8  22DA               	addwfc	fsr2h,f,c
  6344  0002AA  50DF               	movf	indf2,w,c
  6345  0002AC  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6346  0002AE  0100               	movlb	0	; () banked
  6347  0002B0  EE20 F019          	lfsr	2,25
  6348  0002B4  0100               	movlb	0	; () banked
  6349  0002B6  51E7               	movf	_ic_ptr& (0+255),w,b
  6350  0002B8  26D9               	addwf	fsr2l,f,c
  6351  0002BA  0100               	movlb	0	; () banked
  6352  0002BC  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6353  0002BE  22DA               	addwfc	fsr2h,f,c
  6354  0002C0  50DF               	movf	indf2,w,c
  6355  0002C2  5C49               	subwf	??_i2c_int_handler,w,c
  6356  0002C4  B0D8               	btfsc	status,0,c
  6357  0002C6  D0E5               	goto	L10
  6358                           
  6359                           ; BSR set to: 0
  6360                           ;my_i2c.c: 182: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6361  0002C8  0100               	movlb	0	; () banked
  6362  0002CA  EE20 F01A          	lfsr	2,26
  6363  0002CE  0100               	movlb	0	; () banked
  6364  0002D0  51E7               	movf	_ic_ptr& (0+255),w,b
  6365  0002D2  26D9               	addwf	fsr2l,f,c
  6366  0002D4  0100               	movlb	0	; () banked
  6367  0002D6  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6368  0002D8  22DA               	addwfc	fsr2h,f,c
  6369  0002DA  50DF               	movf	indf2,w,c
  6370  0002DC  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6371  0002DE  5049               	movf	??_i2c_int_handler,w,c
  6372  0002E0  0D01               	mullw	1
  6373  0002E2  0E0F               	movlw	15
  6374  0002E4  26F3               	addwf	prodl,f,c
  6375  0002E6  0E00               	movlw	0
  6376  0002E8  22F4               	addwfc	prodh,f,c
  6377  0002EA  50F3               	movf	prodl,w,c
  6378  0002EC  0100               	movlb	0	; () banked
  6379  0002EE  0100               	movlb	0	; () banked
  6380  0002F0  25E7               	addwf	_ic_ptr& (0+255),w,b
  6381  0002F2  6ED9               	movwf	fsr2l,c
  6382  0002F4  50F4               	movf	prodh,w,c
  6383  0002F6  0100               	movlb	0	; () banked
  6384  0002F8  0100               	movlb	0	; () banked
  6385  0002FA  21E8               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6386  0002FC  6EDA               	movwf	fsr2h,c
  6387  0002FE  50DF               	movf	indf2,w,c
  6388  000300  6EC9               	movwf	4041,c	;volatile
  6389                           
  6390                           ; BSR set to: 0
  6391                           ;my_i2c.c: 183: ic_ptr->outbufind++;
  6392  000302  0100               	movlb	0	; () banked
  6393  000304  EE20 F01A          	lfsr	2,26
  6394  000308  0100               	movlb	0	; () banked
  6395  00030A  51E7               	movf	_ic_ptr& (0+255),w,b
  6396  00030C  26D9               	addwf	fsr2l,f,c
  6397  00030E  0100               	movlb	0	; () banked
  6398  000310  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6399  000312  22DA               	addwfc	fsr2h,f,c
  6400  000314  2ADF               	incf	indf2,f,c
  6401                           
  6402                           ; BSR set to: 0
  6403                           ;my_i2c.c: 184: data_written = 1;
  6404  000316  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6405  000318  0E01               	movlw	1
  6406  00031A  0100               	movlb	0	; () banked
  6407  00031C  0100               	movlb	0	; () banked
  6408  00031E  6FB9               	movwf	i2c_int_handler@data_written& (0+255),b
  6409  000320  D0B6               	goto	L8
  6410  000322                     L7:
  6411  000322  6EDF               	movwf	indf2,c
  6412  000324  D0D7               	goto	i2l259
  6413  000326                     i2l279:
  6414                           
  6415                           ; BSR set to: 0
  6416                           ;my_i2c.c: 192: {
  6417                           ;my_i2c.c: 194: if (SSPSTATbits.P == 1) {
  6418  000326  A8C7               	btfss	4039,4,c	;volatile
  6419  000328  D05E               	goto	i2l2146
  6420                           
  6421                           ; BSR set to: 0
  6422                           ;my_i2c.c: 196: ic_ptr->event_count++;
  6423  00032A  0100               	movlb	0	; () banked
  6424  00032C  EE20 F00B          	lfsr	2,11
  6425  000330  0100               	movlb	0	; () banked
  6426  000332  51E7               	movf	_ic_ptr& (0+255),w,b
  6427  000334  26D9               	addwf	fsr2l,f,c
  6428  000336  0100               	movlb	0	; () banked
  6429  000338  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6430  00033A  22DA               	addwfc	fsr2h,f,c
  6431  00033C  2ADF               	incf	indf2,f,c
  6432                           
  6433                           ; BSR set to: 0
  6434                           ;my_i2c.c: 197: if (data_read) {
  6435  00033E  0100               	movlb	0	; () banked
  6436  000340  0100               	movlb	0	; () banked
  6437  000342  51BE               	movf	i2c_int_handler@data_read& (0+255),w,b
  6438  000344  B4D8               	btfsc	status,2,c
  6439  000346  D048               	goto	i2l2142
  6440                           
  6441                           ; BSR set to: 0
  6442                           ;my_i2c.c: 198: if (SSPSTATbits.D_A == 1) {
  6443  000348  AAC7               	btfss	4039,5,c	;volatile
  6444  00034A  D025               	goto	i2l2140
  6445                           
  6446                           ; BSR set to: 0
  6447                           ;my_i2c.c: 199: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6448  00034C  0100               	movlb	0	; () banked
  6449  00034E  EE20 F00A          	lfsr	2,10
  6450  000352  0100               	movlb	0	; () banked
  6451  000354  51E7               	movf	_ic_ptr& (0+255),w,b
  6452  000356  26D9               	addwf	fsr2l,f,c
  6453  000358  0100               	movlb	0	; () banked
  6454  00035A  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6455  00035C  22DA               	addwfc	fsr2h,f,c
  6456  00035E  50DF               	movf	indf2,w,c
  6457  000360  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6458  000362  5049               	movf	??_i2c_int_handler,w,c
  6459  000364  0D01               	mullw	1
  6460  000366  50F3               	movf	prodl,w,c
  6461  000368  0100               	movlb	0	; () banked
  6462  00036A  0100               	movlb	0	; () banked
  6463  00036C  25E7               	addwf	_ic_ptr& (0+255),w,b
  6464  00036E  6ED9               	movwf	fsr2l,c
  6465  000370  50F4               	movf	prodh,w,c
  6466  000372  0100               	movlb	0	; () banked
  6467  000374  0100               	movlb	0	; () banked
  6468  000376  21E8               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6469  000378  6EDA               	movwf	fsr2h,c
  6470  00037A  0100               	movlb	0	; () banked
  6471  00037C  C0BB  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6472                           
  6473                           ; BSR set to: 0
  6474                           ;my_i2c.c: 200: ic_ptr->buflen++;
  6475  000380  0100               	movlb	0	; () banked
  6476  000382  EE20 F00A          	lfsr	2,10
  6477  000386  0100               	movlb	0	; () banked
  6478  000388  51E7               	movf	_ic_ptr& (0+255),w,b
  6479  00038A  26D9               	addwf	fsr2l,f,c
  6480  00038C  0100               	movlb	0	; () banked
  6481  00038E  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6482  000390  22DA               	addwfc	fsr2h,f,c
  6483  000392  2ADF               	incf	indf2,f,c
  6484  000394  D021               	goto	i2l2142
  6485  000396                     i2l2140:
  6486                           
  6487                           ; BSR set to: 0
  6488                           ;my_i2c.c: 203: ic_ptr->error_count++;
  6489  000396  0100               	movlb	0	; () banked
  6490  000398  EE20 F00E          	lfsr	2,14
  6491  00039C  0100               	movlb	0	; () banked
  6492  00039E  51E7               	movf	_ic_ptr& (0+255),w,b
  6493  0003A0  26D9               	addwf	fsr2l,f,c
  6494  0003A2  0100               	movlb	0	; () banked
  6495  0003A4  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6496  0003A6  22DA               	addwfc	fsr2h,f,c
  6497  0003A8  2ADF               	incf	indf2,f,c
  6498                           
  6499                           ;my_i2c.c: 204: ic_ptr->error_code = 0x6;
  6500  0003AA  0100               	movlb	0	; () banked
  6501  0003AC  EE20 F00D          	lfsr	2,13
  6502  0003B0  0100               	movlb	0	; () banked
  6503  0003B2  51E7               	movf	_ic_ptr& (0+255),w,b
  6504  0003B4  26D9               	addwf	fsr2l,f,c
  6505  0003B6  0100               	movlb	0	; () banked
  6506  0003B8  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6507  0003BA  22DA               	addwfc	fsr2h,f,c
  6508  0003BC  0E06               	movlw	6
  6509  0003BE  6EDF               	movwf	indf2,c
  6510                           
  6511                           ;my_i2c.c: 205: ic_ptr->status = 0x5;
  6512  0003C0  0100               	movlb	0	; () banked
  6513  0003C2  EE20 F00C          	lfsr	2,12
  6514  0003C6  0100               	movlb	0	; () banked
  6515  0003C8  51E7               	movf	_ic_ptr& (0+255),w,b
  6516  0003CA  26D9               	addwf	fsr2l,f,c
  6517  0003CC  0100               	movlb	0	; () banked
  6518  0003CE  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6519  0003D0  22DA               	addwfc	fsr2h,f,c
  6520  0003D2  0E05               	movlw	5
  6521  0003D4  6EDF               	movwf	indf2,c
  6522  0003D6  D05D               	goto	L10
  6523  0003D8                     i2l2142:
  6524                           
  6525                           ; BSR set to: 0
  6526                           ;my_i2c.c: 208: msg_ready = 1;
  6527  0003D8  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6528  0003DA  0E01               	movlw	1
  6529  0003DC  0100               	movlb	0	; () banked
  6530  0003DE  0100               	movlb	0	; () banked
  6531  0003E0  6FBD               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6532  0003E2  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6533                           
  6534                           ; BSR set to: 0
  6535  0003E4  D056               	goto	L10
  6536  0003E6                     i2l2146:
  6537                           
  6538                           ; BSR set to: 0
  6539  0003E6  0100               	movlb	0	; () banked
  6540  0003E8  0100               	movlb	0	; () banked
  6541  0003EA  51BE               	movf	i2c_int_handler@data_read& (0+255),w,b
  6542  0003EC  B4D8               	btfsc	status,2,c
  6543  0003EE  D072               	goto	i2l259
  6544                           
  6545                           ; BSR set to: 0
  6546                           ;my_i2c.c: 212: ic_ptr->event_count++;
  6547  0003F0  0100               	movlb	0	; () banked
  6548  0003F2  EE20 F00B          	lfsr	2,11
  6549  0003F6  0100               	movlb	0	; () banked
  6550  0003F8  51E7               	movf	_ic_ptr& (0+255),w,b
  6551  0003FA  26D9               	addwf	fsr2l,f,c
  6552  0003FC  0100               	movlb	0	; () banked
  6553  0003FE  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6554  000400  22DA               	addwfc	fsr2h,f,c
  6555  000402  2ADF               	incf	indf2,f,c
  6556                           
  6557                           ; BSR set to: 0
  6558                           ;my_i2c.c: 213: if (SSPSTATbits.D_A == 1) {
  6559  000404  AAC7               	btfss	4039,5,c	;volatile
  6560  000406  D025               	goto	i2l287
  6561                           
  6562                           ; BSR set to: 0
  6563                           ;my_i2c.c: 214: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6564  000408  0100               	movlb	0	; () banked
  6565  00040A  EE20 F00A          	lfsr	2,10
  6566  00040E  0100               	movlb	0	; () banked
  6567  000410  51E7               	movf	_ic_ptr& (0+255),w,b
  6568  000412  26D9               	addwf	fsr2l,f,c
  6569  000414  0100               	movlb	0	; () banked
  6570  000416  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6571  000418  22DA               	addwfc	fsr2h,f,c
  6572  00041A  50DF               	movf	indf2,w,c
  6573  00041C  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6574  00041E  5049               	movf	??_i2c_int_handler,w,c
  6575  000420  0D01               	mullw	1
  6576  000422  50F3               	movf	prodl,w,c
  6577  000424  0100               	movlb	0	; () banked
  6578  000426  0100               	movlb	0	; () banked
  6579  000428  25E7               	addwf	_ic_ptr& (0+255),w,b
  6580  00042A  6ED9               	movwf	fsr2l,c
  6581  00042C  50F4               	movf	prodh,w,c
  6582  00042E  0100               	movlb	0	; () banked
  6583  000430  0100               	movlb	0	; () banked
  6584  000432  21E8               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6585  000434  6EDA               	movwf	fsr2h,c
  6586  000436  0100               	movlb	0	; () banked
  6587  000438  C0BB  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6588                           
  6589                           ; BSR set to: 0
  6590                           ;my_i2c.c: 215: ic_ptr->buflen++;
  6591  00043C  0100               	movlb	0	; () banked
  6592  00043E  EE20 F00A          	lfsr	2,10
  6593  000442  0100               	movlb	0	; () banked
  6594  000444  51E7               	movf	_ic_ptr& (0+255),w,b
  6595  000446  26D9               	addwf	fsr2l,f,c
  6596  000448  0100               	movlb	0	; () banked
  6597  00044A  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6598  00044C  22DA               	addwfc	fsr2h,f,c
  6599  00044E  2ADF               	incf	indf2,f,c
  6600                           
  6601                           ;my_i2c.c: 216: } else {
  6602  000450  D041               	goto	i2l259
  6603  000452                     i2l287:
  6604                           
  6605                           ; BSR set to: 0
  6606                           ;my_i2c.c: 217: if (SSPSTATbits.R_W == 1) {
  6607  000452  A4C7               	btfss	4039,2,c	;volatile
  6608  000454  D6C1               	goto	i2l2098
  6609                           
  6610                           ; BSR set to: 0
  6611                           ;my_i2c.c: 218: ic_ptr->status = 0x8;
  6612  000456  0100               	movlb	0	; () banked
  6613  000458  EE20 F00C          	lfsr	2,12
  6614  00045C  0100               	movlb	0	; () banked
  6615  00045E  51E7               	movf	_ic_ptr& (0+255),w,b
  6616  000460  26D9               	addwf	fsr2l,f,c
  6617  000462  0100               	movlb	0	; () banked
  6618  000464  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6619  000466  22DA               	addwfc	fsr2h,f,c
  6620  000468  0E08               	movlw	8
  6621  00046A  6EDF               	movwf	indf2,c
  6622                           
  6623                           ; BSR set to: 0
  6624                           ;my_i2c.c: 219: msg_ready = 1;
  6625  00046C  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6626  00046E  0E01               	movlw	1
  6627  000470  0100               	movlb	0	; () banked
  6628  000472  0100               	movlb	0	; () banked
  6629  000474  6FBD               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6630  000476  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6631  000478                     L11:
  6632                           
  6633                           ; BSR set to: 0
  6634                           ;my_i2c.c: 220: msg_to_send = 1;
  6635  000478  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6636  00047A  0E01               	movlw	1
  6637  00047C  0100               	movlb	0	; () banked
  6638  00047E  0100               	movlb	0	; () banked
  6639  000480  6FBC               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6640  000482  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6641                           
  6642                           ; BSR set to: 0
  6643                           ;my_i2c.c: 222: data_read = 0;
  6644  000484  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6645  000486  0E00               	movlw	0
  6646  000488  0100               	movlb	0	; () banked
  6647  00048A  0100               	movlb	0	; () banked
  6648  00048C  6FBE               	movwf	i2c_int_handler@data_read& (0+255),b
  6649  00048E                     L8:
  6650  00048E  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6651                           
  6652                           ;my_i2c.c: 223: } else {
  6653  000490  D021               	goto	i2l259
  6654  000492                     L10:
  6655                           
  6656                           ;my_i2c.c: 226: ic_ptr->status = 0x5;
  6657  000492  0100               	movlb	0	; () banked
  6658  000494  EE20 F00C          	lfsr	2,12
  6659  000498  0100               	movlb	0	; () banked
  6660  00049A  51E7               	movf	_ic_ptr& (0+255),w,b
  6661  00049C  26D9               	addwf	fsr2l,f,c
  6662  00049E  0100               	movlb	0	; () banked
  6663  0004A0  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6664  0004A2  22DA               	addwfc	fsr2h,f,c
  6665  0004A4  0E05               	movlw	5
  6666  0004A6  D73D               	goto	L7
  6667  0004A8                     i2l2168:
  6668                           
  6669                           ; BSR set to: 0
  6670  0004A8  0100               	movlb	0	; () banked
  6671  0004AA  EE20 F00C          	lfsr	2,12
  6672  0004AE  0100               	movlb	0	; () banked
  6673  0004B0  51E7               	movf	_ic_ptr& (0+255),w,b
  6674  0004B2  26D9               	addwf	fsr2l,f,c
  6675  0004B4  0100               	movlb	0	; () banked
  6676  0004B6  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6677  0004B8  22DA               	addwfc	fsr2h,f,c
  6678  0004BA  50DF               	movf	indf2,w,c
  6679                           
  6680                           ; Switch size 1, requested type "space"
  6681                           ; Number of cases is 4, Range of values is 5 to 8
  6682                           ; switch strategies available:
  6683                           ; Name         Instructions Cycles
  6684                           ; simple_byte           13     7 (average)
  6685                           ;	Chosen strategy is simple_byte
  6686  0004BC  0A05               	xorlw	5	; case 5
  6687  0004BE  B4D8               	btfsc	status,2,c
  6688  0004C0  D652               	goto	i2l261
  6689  0004C2  0A03               	xorlw	3	; case 6
  6690  0004C4  B4D8               	btfsc	status,2,c
  6691  0004C6  D66E               	goto	i2l265
  6692  0004C8  0A01               	xorlw	1	; case 7
  6693  0004CA  B4D8               	btfsc	status,2,c
  6694  0004CC  D72C               	goto	i2l279
  6695  0004CE  0A0F               	xorlw	15	; case 8
  6696  0004D0  B4D8               	btfsc	status,2,c
  6697  0004D2  D6E2               	goto	i2l2118
  6698  0004D4                     i2l259:
  6699                           
  6700                           ; BSR set to: 0
  6701                           ;my_i2c.c: 233: }
  6702                           ;my_i2c.c: 236: if (data_read || data_written) {
  6703  0004D4  0100               	movlb	0	; () banked
  6704  0004D6  0100               	movlb	0	; () banked
  6705  0004D8  67BE               	tstfsz	i2c_int_handler@data_read& (0+255),b
  6706  0004DA  D005               	goto	i2l293
  6707                           
  6708                           ; BSR set to: 0
  6709  0004DC  0100               	movlb	0	; () banked
  6710  0004DE  0100               	movlb	0	; () banked
  6711  0004E0  51B9               	movf	i2c_int_handler@data_written& (0+255),w,b
  6712  0004E2  B4D8               	btfsc	status,2,c
  6713  0004E4  D002               	goto	i2l2174
  6714  0004E6                     i2l293:
  6715                           
  6716                           ; BSR set to: 0
  6717                           ;my_i2c.c: 238: if (SSPCON1bits.CKP == 0) {
  6718  0004E6  A8C6               	btfss	4038,4,c	;volatile
  6719                           
  6720                           ; BSR set to: 0
  6721                           ;my_i2c.c: 239: SSPCON1bits.CKP = 1;
  6722  0004E8  88C6               	bsf	4038,4,c	;volatile
  6723  0004EA                     i2l2174:
  6724                           
  6725                           ; BSR set to: 0
  6726                           ;my_i2c.c: 240: }
  6727                           ;my_i2c.c: 241: }
  6728                           ;my_i2c.c: 244: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  6729  0004EA  0100               	movlb	0	; () banked
  6730  0004EC  EE20 F00A          	lfsr	2,10
  6731  0004F0  0100               	movlb	0	; () banked
  6732  0004F2  51E7               	movf	_ic_ptr& (0+255),w,b
  6733  0004F4  26D9               	addwf	fsr2l,f,c
  6734  0004F6  0100               	movlb	0	; () banked
  6735  0004F8  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6736  0004FA  22DA               	addwfc	fsr2h,f,c
  6737  0004FC  0E08               	movlw	8
  6738  0004FE  64DF               	cpfsgt	indf2,c
  6739  000500  D024               	goto	i2l2180
  6740                           
  6741                           ; BSR set to: 0
  6742  000502  0100               	movlb	0	; () banked
  6743  000504  0100               	movlb	0	; () banked
  6744  000506  67BD               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  6745  000508  D020               	goto	i2l2180
  6746                           
  6747                           ; BSR set to: 0
  6748                           ;my_i2c.c: 245: ic_ptr->status = 0x5;
  6749  00050A  0100               	movlb	0	; () banked
  6750  00050C  EE20 F00C          	lfsr	2,12
  6751  000510  0100               	movlb	0	; () banked
  6752  000512  51E7               	movf	_ic_ptr& (0+255),w,b
  6753  000514  26D9               	addwf	fsr2l,f,c
  6754  000516  0100               	movlb	0	; () banked
  6755  000518  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6756  00051A  22DA               	addwfc	fsr2h,f,c
  6757  00051C  0E05               	movlw	5
  6758  00051E  6EDF               	movwf	indf2,c
  6759                           
  6760                           ;my_i2c.c: 246: ic_ptr->error_count++;
  6761  000520  0100               	movlb	0	; () banked
  6762  000522  EE20 F00E          	lfsr	2,14
  6763  000526  0100               	movlb	0	; () banked
  6764  000528  51E7               	movf	_ic_ptr& (0+255),w,b
  6765  00052A  26D9               	addwf	fsr2l,f,c
  6766  00052C  0100               	movlb	0	; () banked
  6767  00052E  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6768  000530  22DA               	addwfc	fsr2h,f,c
  6769  000532  2ADF               	incf	indf2,f,c
  6770                           
  6771                           ;my_i2c.c: 247: ic_ptr->error_code = 0x7;
  6772  000534  0100               	movlb	0	; () banked
  6773  000536  EE20 F00D          	lfsr	2,13
  6774  00053A  0100               	movlb	0	; () banked
  6775  00053C  51E7               	movf	_ic_ptr& (0+255),w,b
  6776  00053E  26D9               	addwf	fsr2l,f,c
  6777  000540  0100               	movlb	0	; () banked
  6778  000542  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6779  000544  22DA               	addwfc	fsr2h,f,c
  6780  000546  0E07               	movlw	7
  6781  000548  6EDF               	movwf	indf2,c
  6782  00054A                     i2l2180:
  6783                           
  6784                           ; BSR set to: 0
  6785                           ;my_i2c.c: 248: }
  6786                           ;my_i2c.c: 250: if (msg_ready) {
  6787  00054A  0100               	movlb	0	; () banked
  6788  00054C  0100               	movlb	0	; () banked
  6789  00054E  51BD               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  6790  000550  B4D8               	btfsc	status,2,c
  6791  000552  D03E               	goto	i2l2188
  6792                           
  6793                           ; BSR set to: 0
  6794                           ;my_i2c.c: 251: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  6795  000554  0100               	movlb	0	; () banked
  6796  000556  EE20 F00B          	lfsr	2,11
  6797  00055A  0100               	movlb	0	; () banked
  6798  00055C  51E7               	movf	_ic_ptr& (0+255),w,b
  6799  00055E  26D9               	addwf	fsr2l,f,c
  6800  000560  0100               	movlb	0	; () banked
  6801  000562  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6802  000564  22DA               	addwfc	fsr2h,f,c
  6803  000566  0100               	movlb	0	; () banked
  6804  000568  EE10 F00A          	lfsr	1,10
  6805  00056C  0100               	movlb	0	; () banked
  6806  00056E  51E7               	movf	_ic_ptr& (0+255),w,b
  6807  000570  26E1               	addwf	fsr1l,f,c
  6808  000572  0100               	movlb	0	; () banked
  6809  000574  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6810  000576  22E2               	addwfc	fsr1h,f,c
  6811  000578  50E7               	movf	indf1,w,c
  6812  00057A  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6813  00057C  5049               	movf	??_i2c_int_handler,w,c
  6814  00057E  0D01               	mullw	1
  6815  000580  50F3               	movf	prodl,w,c
  6816  000582  0100               	movlb	0	; () banked
  6817  000584  0100               	movlb	0	; () banked
  6818  000586  25E7               	addwf	_ic_ptr& (0+255),w,b
  6819  000588  6EE1               	movwf	fsr1l,c
  6820  00058A  50F4               	movf	prodh,w,c
  6821  00058C  0100               	movlb	0	; () banked
  6822  00058E  0100               	movlb	0	; () banked
  6823  000590  21E8               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6824  000592  6EE2               	movwf	fsr1h,c
  6825  000594  CFDF FFE7          	movff	indf2,indf1
  6826                           
  6827                           ; BSR set to: 0
  6828                           ;my_i2c.c: 252: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  6829  000598  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6830  00059A  0E28               	movlw	40
  6831  00059C  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  6832  00059E  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6833  0005A0  0100               	movlb	0	; () banked
  6834  0005A2  C0E8  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  6835  0005A6  0100               	movlb	0	; () banked
  6836  0005A8  C0E7  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  6837  0005AC  0100               	movlb	0	; () banked
  6838  0005AE  EE20 F00A          	lfsr	2,10
  6839  0005B2  0100               	movlb	0	; () banked
  6840  0005B4  51E7               	movf	_ic_ptr& (0+255),w,b
  6841  0005B6  26D9               	addwf	fsr2l,f,c
  6842  0005B8  0100               	movlb	0	; () banked
  6843  0005BA  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6844  0005BC  22DA               	addwfc	fsr2h,f,c
  6845  0005BE  50DF               	movf	indf2,w,c
  6846  0005C0  6E4A               	movwf	(??_i2c_int_handler+1)& (0+255),c
  6847  0005C2  284A               	incf	??_i2c_int_handler+1,w,c
  6848  0005C4  EC7C  F00C         	call	_ToMainHigh_sendmsg
  6849                           
  6850                           ;my_i2c.c: 253: ic_ptr->buflen = 0;
  6851  0005C8  0100               	movlb	0	; () banked
  6852  0005CA  EE20 F00A          	lfsr	2,10
  6853  0005CE  D043               	goto	L9
  6854  0005D0                     i2l2188:
  6855                           
  6856                           ; BSR set to: 0
  6857  0005D0  0100               	movlb	0	; () banked
  6858  0005D2  EE20 F00E          	lfsr	2,14
  6859  0005D6  0100               	movlb	0	; () banked
  6860  0005D8  51E7               	movf	_ic_ptr& (0+255),w,b
  6861  0005DA  26D9               	addwf	fsr2l,f,c
  6862  0005DC  0100               	movlb	0	; () banked
  6863  0005DE  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6864  0005E0  22DA               	addwfc	fsr2h,f,c
  6865  0005E2  50DF               	movf	indf2,w,c
  6866  0005E4  B4D8               	btfsc	status,2,c
  6867  0005E6  D03F               	goto	i2l2196
  6868                           
  6869                           ; BSR set to: 0
  6870                           ;my_i2c.c: 255: error_buf[0] = ic_ptr->error_count;
  6871  0005E8  0100               	movlb	0	; () banked
  6872  0005EA  EE20 F00E          	lfsr	2,14
  6873  0005EE  0100               	movlb	0	; () banked
  6874  0005F0  51E7               	movf	_ic_ptr& (0+255),w,b
  6875  0005F2  26D9               	addwf	fsr2l,f,c
  6876  0005F4  0100               	movlb	0	; () banked
  6877  0005F6  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6878  0005F8  22DA               	addwfc	fsr2h,f,c
  6879  0005FA  50DF               	movf	indf2,w,c
  6880  0005FC  0100               	movlb	0	; () banked
  6881  0005FE  0100               	movlb	0	; () banked
  6882  000600  6FB6               	movwf	i2c_int_handler@error_buf& (0+255),b
  6883                           
  6884                           ;my_i2c.c: 256: error_buf[1] = ic_ptr->error_code;
  6885  000602  0100               	movlb	0	; () banked
  6886  000604  EE20 F00D          	lfsr	2,13
  6887  000608  0100               	movlb	0	; () banked
  6888  00060A  51E7               	movf	_ic_ptr& (0+255),w,b
  6889  00060C  26D9               	addwf	fsr2l,f,c
  6890  00060E  0100               	movlb	0	; () banked
  6891  000610  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6892  000612  22DA               	addwfc	fsr2h,f,c
  6893  000614  50DF               	movf	indf2,w,c
  6894  000616  0100               	movlb	0	; () banked
  6895  000618  0100               	movlb	0	; () banked
  6896  00061A  6FB7               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  6897                           
  6898                           ;my_i2c.c: 257: error_buf[2] = ic_ptr->event_count;
  6899  00061C  0100               	movlb	0	; () banked
  6900  00061E  EE20 F00B          	lfsr	2,11
  6901  000622  0100               	movlb	0	; () banked
  6902  000624  51E7               	movf	_ic_ptr& (0+255),w,b
  6903  000626  26D9               	addwf	fsr2l,f,c
  6904  000628  0100               	movlb	0	; () banked
  6905  00062A  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6906  00062C  22DA               	addwfc	fsr2h,f,c
  6907  00062E  50DF               	movf	indf2,w,c
  6908  000630  0100               	movlb	0	; () banked
  6909  000632  0100               	movlb	0	; () banked
  6910  000634  6FB8               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  6911                           
  6912                           ; BSR set to: 0
  6913                           ;my_i2c.c: 258: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  6914  000636  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6915  000638  0E29               	movlw	41
  6916  00063A  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  6917  00063C  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6918  00063E  0100               	movlb	0	; () banked
  6919  000640  0E00               	movlw	high i2c_int_handler@error_buf
  6920  000642  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  6921  000644  0100               	movlb	0	; () banked
  6922  000646  0EB6               	movlw	low i2c_int_handler@error_buf
  6923  000648  6E46               	movwf	ToMainHigh_sendmsg@data,c
  6924  00064A  0E03               	movlw	3
  6925  00064C  EC7C  F00C         	call	_ToMainHigh_sendmsg
  6926                           
  6927                           ;my_i2c.c: 259: ic_ptr->error_count = 0;
  6928  000650  0100               	movlb	0	; () banked
  6929  000652  EE20 F00E          	lfsr	2,14
  6930  000656                     L9:
  6931  000656  0100               	movlb	0	; () banked
  6932  000658  51E7               	movf	_ic_ptr& (0+255),w,b
  6933  00065A  26D9               	addwf	fsr2l,f,c
  6934  00065C  0100               	movlb	0	; () banked
  6935  00065E  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  6936  000660  22DA               	addwfc	fsr2h,f,c
  6937  000662  0E00               	movlw	0
  6938  000664  6EDF               	movwf	indf2,c
  6939  000666                     i2l2196:
  6940                           
  6941                           ; BSR set to: 0
  6942                           ;my_i2c.c: 260: }
  6943                           ;my_i2c.c: 261: if (msg_to_send) {
  6944  000666  0100               	movlb	0	; () banked
  6945  000668  0100               	movlb	0	; () banked
  6946  00066A  51BC               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  6947  00066C  B4D8               	btfsc	status,2,c
  6948  00066E  0012               	return	
  6949                           
  6950                           ; BSR set to: 0
  6951                           ;my_i2c.c: 263: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  6952  000670  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6953  000672  0E2A               	movlw	42
  6954  000674  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  6955  000676  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6956  000678  0100               	movlb	0	; () banked
  6957  00067A  C0E8  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  6958  00067E  0100               	movlb	0	; () banked
  6959  000680  C0E7  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  6960  000684  0E00               	movlw	0
  6961  000686  EC7C  F00C         	call	_ToMainHigh_sendmsg
  6962                           
  6963                           ;my_i2c.c: 264: msg_to_send = 0;
  6964  00068A  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6965  00068C  0E00               	movlw	0
  6966  00068E  0100               	movlb	0	; () banked
  6967  000690  0100               	movlb	0	; () banked
  6968  000692  6FBC               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6969  000694  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6970  000696  0012               	return	
  6971  000698                     __end_of_i2c_int_handler:
  6972                           	opt stack 0
  6973                           pclatu	equ	0xFFB
  6974                           pclath	equ	0xFFA
  6975                           tblptru	equ	0xFF8
  6976                           tblptrh	equ	0xFF7
  6977                           tblptrl	equ	0xFF6
  6978                           tablat	equ	0xFF5
  6979                           prodh	equ	0xFF4
  6980                           prodl	equ	0xFF3
  6981                           intcon	equ	0xFF2
  6982                           postinc0	equ	0xFEE
  6983                           fsr0h	equ	0xFEA
  6984                           fsr0l	equ	0xFE9
  6985                           wreg	equ	0xFE8
  6986                           indf1	equ	0xFE7
  6987                           fsr1h	equ	0xFE2
  6988                           fsr1l	equ	0xFE1
  6989                           bsr	equ	0xFE0
  6990                           indf2	equ	0xFDF
  6991                           postinc2	equ	0xFDE
  6992                           postdec2	equ	0xFDD
  6993                           fsr2h	equ	0xFDA
  6994                           fsr2l	equ	0xFD9
  6995                           status	equ	0xFD8
  6996                           
  6997 ;; *************** function _handle_start *****************
  6998 ;; Defined at:
  6999 ;;		line 71 in file "../src/my_i2c.c"
  7000 ;; Parameters:    Size  Location     Type
  7001 ;;  data_read       1    wreg     unsigned char 
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;  data_read       1   46[COMRAM] unsigned char 
  7004 ;; Return value:  Size  Location     Type
  7005 ;;		None               void
  7006 ;; Registers used:
  7007 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7008 ;; Tracked objects:
  7009 ;;		On entry : 0/0
  7010 ;;		On exit  : 0/0
  7011 ;;		Unchanged: 0/0
  7012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7013 ;;      Params:         0       0       0       0       0
  7014 ;;      Locals:         1       0       0       0       0
  7015 ;;      Temps:          0       0       0       0       0
  7016 ;;      Totals:         1       0       0       0       0
  7017 ;;Total ram usage:        1 bytes
  7018 ;; Hardware stack levels used:    1
  7019 ;; This function calls:
  7020 ;;		Nothing
  7021 ;; This function is called by:
  7022 ;;		_i2c_int_handler
  7023 ;; This function uses a non-reentrant model
  7024 ;;
  7025                           
  7026                           	psect	text42
  7027  000D8E                     __ptext42:
  7028                           	opt stack 0
  7029  000D8E                     _handle_start:
  7030                           	opt stack 18
  7031                           
  7032                           ; BSR set to: 0
  7033                           ;incstack = 0
  7034                           ;handle_start@data_read stored from wreg
  7035  000D8E  CFE8 F02F          	movff	wreg,handle_start@data_read
  7036                           
  7037                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  7038  000D92  0100               	movlb	0	; () banked
  7039  000D94  EE20 F00B          	lfsr	2,11
  7040  000D98  0100               	movlb	0	; () banked
  7041  000D9A  51E7               	movf	_ic_ptr& (0+255),w,b
  7042  000D9C  26D9               	addwf	fsr2l,f,c
  7043  000D9E  0100               	movlb	0	; () banked
  7044  000DA0  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7045  000DA2  22DA               	addwfc	fsr2h,f,c
  7046  000DA4  0E01               	movlw	1
  7047  000DA6  6EDF               	movwf	indf2,c
  7048                           
  7049                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  7050  000DA8  0100               	movlb	0	; () banked
  7051  000DAA  EE20 F00A          	lfsr	2,10
  7052  000DAE  0100               	movlb	0	; () banked
  7053  000DB0  51E7               	movf	_ic_ptr& (0+255),w,b
  7054  000DB2  26D9               	addwf	fsr2l,f,c
  7055  000DB4  0100               	movlb	0	; () banked
  7056  000DB6  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7057  000DB8  22DA               	addwfc	fsr2h,f,c
  7058  000DBA  0E00               	movlw	0
  7059  000DBC  6EDF               	movwf	indf2,c
  7060                           
  7061                           ; BSR set to: 0
  7062                           ;my_i2c.c: 75: if (data_read) {
  7063  000DBE  502F               	movf	handle_start@data_read,w,c
  7064  000DC0  B4D8               	btfsc	status,2,c
  7065  000DC2  D03D               	goto	i2l2604
  7066                           
  7067                           ; BSR set to: 0
  7068                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  7069  000DC4  AAC7               	btfss	4039,5,c	;volatile
  7070  000DC6  D021               	goto	i2l249
  7071                           
  7072                           ; BSR set to: 0
  7073                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  7074  000DC8  0100               	movlb	0	; () banked
  7075  000DCA  EE20 F00C          	lfsr	2,12
  7076  000DCE  0100               	movlb	0	; () banked
  7077  000DD0  51E7               	movf	_ic_ptr& (0+255),w,b
  7078  000DD2  26D9               	addwf	fsr2l,f,c
  7079  000DD4  0100               	movlb	0	; () banked
  7080  000DD6  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7081  000DD8  22DA               	addwfc	fsr2h,f,c
  7082  000DDA  0E05               	movlw	5
  7083  000DDC  6EDF               	movwf	indf2,c
  7084                           
  7085                           ;my_i2c.c: 80: ic_ptr->error_count++;
  7086  000DDE  0100               	movlb	0	; () banked
  7087  000DE0  EE20 F00E          	lfsr	2,14
  7088  000DE4  0100               	movlb	0	; () banked
  7089  000DE6  51E7               	movf	_ic_ptr& (0+255),w,b
  7090  000DE8  26D9               	addwf	fsr2l,f,c
  7091  000DEA  0100               	movlb	0	; () banked
  7092  000DEC  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7093  000DEE  22DA               	addwfc	fsr2h,f,c
  7094  000DF0  2ADF               	incf	indf2,f,c
  7095                           
  7096                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  7097  000DF2  0100               	movlb	0	; () banked
  7098  000DF4  EE20 F00D          	lfsr	2,13
  7099  000DF8  0100               	movlb	0	; () banked
  7100  000DFA  51E7               	movf	_ic_ptr& (0+255),w,b
  7101  000DFC  26D9               	addwf	fsr2l,f,c
  7102  000DFE  0100               	movlb	0	; () banked
  7103  000E00  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7104  000E02  22DA               	addwfc	fsr2h,f,c
  7105  000E04  0E05               	movlw	5
  7106  000E06  6EDF               	movwf	indf2,c
  7107                           
  7108                           ;my_i2c.c: 82: } else {
  7109  000E08  0012               	return	
  7110  000E0A                     i2l249:
  7111                           
  7112                           ; BSR set to: 0
  7113                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  7114  000E0A  A4C7               	btfss	4039,2,c	;volatile
  7115  000E0C  D00C               	goto	i2l2602
  7116                           
  7117                           ; BSR set to: 0
  7118                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  7119  000E0E  0100               	movlb	0	; () banked
  7120  000E10  EE20 F00C          	lfsr	2,12
  7121  000E14  0100               	movlb	0	; () banked
  7122  000E16  51E7               	movf	_ic_ptr& (0+255),w,b
  7123  000E18  26D9               	addwf	fsr2l,f,c
  7124  000E1A  0100               	movlb	0	; () banked
  7125  000E1C  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7126  000E1E  22DA               	addwfc	fsr2h,f,c
  7127  000E20  0E08               	movlw	8
  7128  000E22  6EDF               	movwf	indf2,c
  7129                           
  7130                           ;my_i2c.c: 85: } else {
  7131  000E24  0012               	return	
  7132  000E26                     i2l2602:
  7133                           
  7134                           ; BSR set to: 0
  7135                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  7136  000E26  0100               	movlb	0	; () banked
  7137  000E28  EE20 F00C          	lfsr	2,12
  7138  000E2C  0100               	movlb	0	; () banked
  7139  000E2E  51E7               	movf	_ic_ptr& (0+255),w,b
  7140  000E30  26D9               	addwf	fsr2l,f,c
  7141  000E32  0100               	movlb	0	; () banked
  7142  000E34  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7143  000E36  22DA               	addwfc	fsr2h,f,c
  7144  000E38  0E07               	movlw	7
  7145  000E3A  6EDF               	movwf	indf2,c
  7146  000E3C  0012               	return	
  7147  000E3E                     i2l2604:
  7148                           
  7149                           ; BSR set to: 0
  7150                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  7151  000E3E  0100               	movlb	0	; () banked
  7152  000E40  EE20 F00C          	lfsr	2,12
  7153  000E44  0100               	movlb	0	; () banked
  7154  000E46  51E7               	movf	_ic_ptr& (0+255),w,b
  7155  000E48  26D9               	addwf	fsr2l,f,c
  7156  000E4A  0100               	movlb	0	; () banked
  7157  000E4C  51E8               	movf	(_ic_ptr+1)& (0+255),w,b
  7158  000E4E  22DA               	addwfc	fsr2h,f,c
  7159  000E50  0E06               	movlw	6
  7160  000E52  6EDF               	movwf	indf2,c
  7161  000E54  0012               	return	
  7162  000E56                     __end_of_handle_start:
  7163                           	opt stack 0
  7164                           pclatu	equ	0xFFB
  7165                           pclath	equ	0xFFA
  7166                           tblptru	equ	0xFF8
  7167                           tblptrh	equ	0xFF7
  7168                           tblptrl	equ	0xFF6
  7169                           tablat	equ	0xFF5
  7170                           prodh	equ	0xFF4
  7171                           prodl	equ	0xFF3
  7172                           intcon	equ	0xFF2
  7173                           postinc0	equ	0xFEE
  7174                           fsr0h	equ	0xFEA
  7175                           fsr0l	equ	0xFE9
  7176                           wreg	equ	0xFE8
  7177                           indf1	equ	0xFE7
  7178                           fsr1h	equ	0xFE2
  7179                           fsr1l	equ	0xFE1
  7180                           bsr	equ	0xFE0
  7181                           indf2	equ	0xFDF
  7182                           postinc2	equ	0xFDE
  7183                           postdec2	equ	0xFDD
  7184                           fsr2h	equ	0xFDA
  7185                           fsr2l	equ	0xFD9
  7186                           status	equ	0xFD8
  7187                           
  7188 ;; *************** function _ToMainHigh_sendmsg *****************
  7189 ;; Defined at:
  7190 ;;		line 126 in file "../src/messages.c"
  7191 ;; Parameters:    Size  Location     Type
  7192 ;;  length          1    wreg     unsigned char 
  7193 ;;  msgtype         1   68[COMRAM] unsigned char 
  7194 ;;  data            2   69[COMRAM] PTR void 
  7195 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  7196 ;; Auto vars:     Size  Location     Type
  7197 ;;  length          1   71[COMRAM] unsigned char 
  7198 ;; Return value:  Size  Location     Type
  7199 ;;                  1    wreg      char 
  7200 ;; Registers used:
  7201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7202 ;; Tracked objects:
  7203 ;;		On entry : 0/0
  7204 ;;		On exit  : 0/0
  7205 ;;		Unchanged: 0/0
  7206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7207 ;;      Params:         3       0       0       0       0
  7208 ;;      Locals:         1       0       0       0       0
  7209 ;;      Temps:          0       0       0       0       0
  7210 ;;      Totals:         4       0       0       0       0
  7211 ;;Total ram usage:        4 bytes
  7212 ;; Hardware stack levels used:    1
  7213 ;; Hardware stack levels required when called:    2
  7214 ;; This function calls:
  7215 ;;		i2_send_msg
  7216 ;; This function is called by:
  7217 ;;		_i2c_int_handler
  7218 ;;		_timer0_int_handler
  7219 ;; This function uses a non-reentrant model
  7220 ;;
  7221                           
  7222                           	psect	text43
  7223  0018F8                     __ptext43:
  7224                           	opt stack 0
  7225  0018F8                     _ToMainHigh_sendmsg:
  7226                           	opt stack 16
  7227                           
  7228                           ; BSR set to: 0
  7229                           ;incstack = 0
  7230                           ;ToMainHigh_sendmsg@length stored from wreg
  7231  0018F8  CFE8 F048          	movff	wreg,ToMainHigh_sendmsg@length
  7232                           
  7233                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7234                           ;	Return value of _ToMainHigh_sendmsg is never used
  7235  0018FC  0101               	movlb	1	; () banked
  7236  0018FE  0E01               	movlw	high _ToMainHigh_MQ
  7237  001900  6E3A               	movwf	i2send_msg@qptr+1,c
  7238  001902  0101               	movlb	1	; () banked
  7239  001904  0E6C               	movlw	low _ToMainHigh_MQ
  7240  001906  6E39               	movwf	i2send_msg@qptr,c
  7241  001908  C048  F03B         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  7242  00190C  C045  F03C         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7243  001910  C047  F03E         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7244  001914  C046  F03D         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  7245  001918  EC80  F007         	call	i2_send_msg	;wreg free
  7246  00191C  0012               	return	
  7247  00191E                     __end_of_ToMainHigh_sendmsg:
  7248                           	opt stack 0
  7249                           pclatu	equ	0xFFB
  7250                           pclath	equ	0xFFA
  7251                           tblptru	equ	0xFF8
  7252                           tblptrh	equ	0xFF7
  7253                           tblptrl	equ	0xFF6
  7254                           tablat	equ	0xFF5
  7255                           prodh	equ	0xFF4
  7256                           prodl	equ	0xFF3
  7257                           intcon	equ	0xFF2
  7258                           postinc0	equ	0xFEE
  7259                           fsr0h	equ	0xFEA
  7260                           fsr0l	equ	0xFE9
  7261                           wreg	equ	0xFE8
  7262                           indf1	equ	0xFE7
  7263                           fsr1h	equ	0xFE2
  7264                           fsr1l	equ	0xFE1
  7265                           bsr	equ	0xFE0
  7266                           indf2	equ	0xFDF
  7267                           postinc2	equ	0xFDE
  7268                           postdec2	equ	0xFDD
  7269                           fsr2h	equ	0xFDA
  7270                           fsr2l	equ	0xFD9
  7271                           status	equ	0xFD8
  7272                           
  7273 ;; *************** function i2_send_msg *****************
  7274 ;; Defined at:
  7275 ;;		line 24 in file "../src/messages.c"
  7276 ;; Parameters:    Size  Location     Type
  7277 ;;  qptr            2   56[COMRAM] PTR struct __msg_queue
  7278 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7279 ;;  length          1   58[COMRAM] unsigned char 
  7280 ;;  msgtype         1   59[COMRAM] unsigned char 
  7281 ;;  data            2   60[COMRAM] PTR void 
  7282 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), 
  7283 ;;		 -> main@ic(28), main@uc(5), 
  7284 ;; Auto vars:     Size  Location     Type
  7285 ;;  send_msg        2   66[COMRAM] PTR struct __msg
  7286 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7287 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7288 ;;  send_msg        2   63[COMRAM] unsigned int 
  7289 ;;  send_msg        1   65[COMRAM] unsigned char 
  7290 ;; Return value:  Size  Location     Type
  7291 ;;                  1    wreg      char 
  7292 ;; Registers used:
  7293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7294 ;; Tracked objects:
  7295 ;;		On entry : 0/0
  7296 ;;		On exit  : 0/0
  7297 ;;		Unchanged: 0/0
  7298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7299 ;;      Params:         6       0       0       0       0
  7300 ;;      Locals:         5       0       0       0       0
  7301 ;;      Temps:          1       0       0       0       0
  7302 ;;      Totals:        12       0       0       0       0
  7303 ;;Total ram usage:       12 bytes
  7304 ;; Hardware stack levels used:    1
  7305 ;; Hardware stack levels required when called:    1
  7306 ;; This function calls:
  7307 ;;		i2_memcpy
  7308 ;; This function is called by:
  7309 ;;		_ToMainHigh_sendmsg
  7310 ;; This function uses a non-reentrant model
  7311 ;;
  7312                           
  7313                           	psect	text44
  7314  000F00                     __ptext44:
  7315                           	opt stack 0
  7316  000F00                     i2_send_msg:
  7317                           	opt stack 16
  7318                           
  7319                           ;messages.c: 25: unsigned char slot;
  7320                           ;messages.c: 27: msg *qmsg;
  7321                           ;messages.c: 28: size_t tlength = length;
  7322                           
  7323                           ;incstack = 0
  7324  000F00  C03B  F040         	movff	i2send_msg@length,i2send_msg@tlength
  7325  000F04  6A41               	clrf	i2send_msg@tlength+1,c
  7326                           
  7327                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7328  000F06  EE20 F034          	lfsr	2,52
  7329  000F0A  5039               	movf	i2send_msg@qptr,w,c
  7330  000F0C  26D9               	addwf	fsr2l,f,c
  7331  000F0E  503A               	movf	i2send_msg@qptr+1,w,c
  7332  000F10  22DA               	addwfc	fsr2h,f,c
  7333  000F12  50DF               	movf	indf2,w,c
  7334  000F14  6E42               	movwf	i2send_msg@slot,c
  7335                           
  7336                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7337  000F16  5042               	movf	i2send_msg@slot,w,c
  7338  000F18  0D0D               	mullw	13
  7339  000F1A  50F3               	movf	prodl,w,c
  7340  000F1C  2439               	addwf	i2send_msg@qptr,w,c
  7341  000F1E  6E43               	movwf	i2send_msg@qmsg,c
  7342  000F20  50F4               	movf	prodh,w,c
  7343  000F22  203A               	addwfc	i2send_msg@qptr+1,w,c
  7344  000F24  6E44               	movwf	i2send_msg@qmsg+1,c
  7345                           
  7346                           ;messages.c: 41: if (qmsg->full != 0) {
  7347  000F26  C043  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7348  000F2A  C044  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7349  000F2E  50DF               	movf	indf2,w,c
  7350  000F30  B4D8               	btfsc	status,2,c
  7351  000F32  D002               	goto	i2l2676
  7352                           
  7353                           ;messages.c: 42: return (-1);
  7354  000F34  0EFF               	movlw	255
  7355  000F36  0012               	return	
  7356  000F38                     i2l2676:
  7357                           
  7358                           ;messages.c: 43: }
  7359                           ;messages.c: 46: qmsg->length = length;
  7360  000F38  EE20 F001          	lfsr	2,1
  7361  000F3C  5043               	movf	i2send_msg@qmsg,w,c
  7362  000F3E  26D9               	addwf	fsr2l,f,c
  7363  000F40  5044               	movf	i2send_msg@qmsg+1,w,c
  7364  000F42  22DA               	addwfc	fsr2h,f,c
  7365  000F44  C03B  FFDF         	movff	i2send_msg@length,indf2
  7366                           
  7367                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7368  000F48  EE20 F002          	lfsr	2,2
  7369  000F4C  5043               	movf	i2send_msg@qmsg,w,c
  7370  000F4E  26D9               	addwf	fsr2l,f,c
  7371  000F50  5044               	movf	i2send_msg@qmsg+1,w,c
  7372  000F52  22DA               	addwfc	fsr2h,f,c
  7373  000F54  C03C  FFDF         	movff	i2send_msg@msgtype,indf2
  7374                           
  7375                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7376  000F58  0E03               	movlw	3
  7377  000F5A  2443               	addwf	i2send_msg@qmsg,w,c
  7378  000F5C  6E2F               	movwf	i2memcpy@d1,c
  7379  000F5E  0E00               	movlw	0
  7380  000F60  2044               	addwfc	i2send_msg@qmsg+1,w,c
  7381  000F62  6E30               	movwf	i2memcpy@d1+1,c
  7382  000F64  C03E  F032         	movff	i2send_msg@data+1,i2memcpy@s1+1
  7383  000F68  C03D  F031         	movff	i2send_msg@data,i2memcpy@s1
  7384  000F6C  C040  F033         	movff	i2send_msg@tlength,i2memcpy@n
  7385  000F70  C041  F034         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  7386  000F74  EC85  F00B         	call	i2_memcpy	;wreg free
  7387                           
  7388                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7389  000F78  EE20 F034          	lfsr	2,52
  7390  000F7C  5039               	movf	i2send_msg@qptr,w,c
  7391  000F7E  26D9               	addwf	fsr2l,f,c
  7392  000F80  503A               	movf	i2send_msg@qptr+1,w,c
  7393  000F82  22DA               	addwfc	fsr2h,f,c
  7394  000F84  EE10 F034          	lfsr	1,52
  7395  000F88  5039               	movf	i2send_msg@qptr,w,c
  7396  000F8A  26E1               	addwf	fsr1l,f,c
  7397  000F8C  503A               	movf	i2send_msg@qptr+1,w,c
  7398  000F8E  22E2               	addwfc	fsr1h,f,c
  7399  000F90  50E7               	movf	indf1,w,c
  7400  000F92  6E3F               	movwf	??i2_send_msg& (0+255),c
  7401  000F94  283F               	incf	??i2_send_msg,w,c
  7402  000F96  0B03               	andlw	3
  7403  000F98  6EDF               	movwf	indf2,c
  7404                           
  7405                           ;messages.c: 59: qmsg->full = 1;
  7406  000F9A  C043  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7407  000F9E  C044  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7408  000FA2  0E01               	movlw	1
  7409  000FA4  6EDF               	movwf	indf2,c
  7410                           
  7411                           ;messages.c: 60: return (1);
  7412  000FA6  0E01               	movlw	1
  7413  000FA8  0012               	return	
  7414  000FAA                     __end_ofi2_send_msg:
  7415                           	opt stack 0
  7416                           pclatu	equ	0xFFB
  7417                           pclath	equ	0xFFA
  7418                           tblptru	equ	0xFF8
  7419                           tblptrh	equ	0xFF7
  7420                           tblptrl	equ	0xFF6
  7421                           tablat	equ	0xFF5
  7422                           prodh	equ	0xFF4
  7423                           prodl	equ	0xFF3
  7424                           intcon	equ	0xFF2
  7425                           postinc0	equ	0xFEE
  7426                           fsr0h	equ	0xFEA
  7427                           fsr0l	equ	0xFE9
  7428                           wreg	equ	0xFE8
  7429                           indf1	equ	0xFE7
  7430                           fsr1h	equ	0xFE2
  7431                           fsr1l	equ	0xFE1
  7432                           bsr	equ	0xFE0
  7433                           indf2	equ	0xFDF
  7434                           postinc2	equ	0xFDE
  7435                           postdec2	equ	0xFDD
  7436                           fsr2h	equ	0xFDA
  7437                           fsr2l	equ	0xFD9
  7438                           status	equ	0xFD8
  7439                           
  7440 ;; *************** function i2_memcpy *****************
  7441 ;; Defined at:
  7442 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  7443 ;; Parameters:    Size  Location     Type
  7444 ;;  d1              2   46[COMRAM] PTR void 
  7445 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7446 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7447 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  7448 ;;  s1              2   48[COMRAM] PTR const void 
  7449 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7450 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7451 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  7452 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  7453 ;;		 -> main@ic(28), main@uc(5), 
  7454 ;;  n               2   50[COMRAM] unsigned int 
  7455 ;; Auto vars:     Size  Location     Type
  7456 ;;  memcpy          2   54[COMRAM] PTR const unsigned char 
  7457 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7458 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7459 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  7460 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  7461 ;;		 -> main@ic(28), main@uc(5), 
  7462 ;;  memcpy          2   52[COMRAM] PTR unsigned char 
  7463 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7464 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7465 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  7466 ;; Return value:  Size  Location     Type
  7467 ;;                  2   46[COMRAM] PTR void 
  7468 ;; Registers used:
  7469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7470 ;; Tracked objects:
  7471 ;;		On entry : 0/0
  7472 ;;		On exit  : 0/0
  7473 ;;		Unchanged: 0/0
  7474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7475 ;;      Params:         6       0       0       0       0
  7476 ;;      Locals:         4       0       0       0       0
  7477 ;;      Temps:          0       0       0       0       0
  7478 ;;      Totals:        10       0       0       0       0
  7479 ;;Total ram usage:       10 bytes
  7480 ;; Hardware stack levels used:    1
  7481 ;; This function calls:
  7482 ;;		Nothing
  7483 ;; This function is called by:
  7484 ;;		i2_send_msg
  7485 ;;		i2_recv_msg
  7486 ;; This function uses a non-reentrant model
  7487 ;;
  7488                           
  7489                           	psect	text45
  7490  00170A                     __ptext45:
  7491                           	opt stack 0
  7492  00170A                     i2_memcpy:
  7493                           	opt stack 16
  7494                           
  7495                           ;incstack = 0
  7496  00170A  C032  F038         	movff	i2memcpy@s1+1,i2memcpy@s+1
  7497  00170E  C031  F037         	movff	i2memcpy@s1,i2memcpy@s
  7498  001712  C030  F036         	movff	i2memcpy@d1+1,i2memcpy@d+1
  7499  001716  C02F  F035         	movff	i2memcpy@d1,i2memcpy@d
  7500  00171A  D00E               	goto	i2l2742
  7501  00171C                     i2l2736:
  7502  00171C  C037  FFD9         	movff	i2memcpy@s,fsr2l
  7503  001720  C038  FFDA         	movff	i2memcpy@s+1,fsr2h
  7504  001724  C035  FFE1         	movff	i2memcpy@d,fsr1l
  7505  001728  C036  FFE2         	movff	i2memcpy@d+1,fsr1h
  7506  00172C  CFDF FFE7          	movff	indf2,indf1
  7507  001730  4A37               	infsnz	i2memcpy@s,f,c
  7508  001732  2A38               	incf	i2memcpy@s+1,f,c
  7509  001734  4A35               	infsnz	i2memcpy@d,f,c
  7510  001736  2A36               	incf	i2memcpy@d+1,f,c
  7511  001738                     i2l2742:
  7512  001738  0633               	decf	i2memcpy@n,f,c
  7513  00173A  A0D8               	btfss	status,0,c
  7514  00173C  0634               	decf	i2memcpy@n+1,f,c
  7515  00173E  2833               	incf	i2memcpy@n& (0+255),w,c
  7516  001740  B4D8               	btfsc	status,2,c
  7517  001742  2834               	incf	(i2memcpy@n+1)& (0+255),w,c
  7518  001744  B4D8               	btfsc	status,2,c
  7519                           
  7520                           ;	Return value of i2_memcpy is never used
  7521  001746  0012               	return	
  7522  001748  D7E9               	goto	i2l2736
  7523  00174A                     __end_ofi2_memcpy:
  7524                           	opt stack 0
  7525                           pclatu	equ	0xFFB
  7526                           pclath	equ	0xFFA
  7527                           tblptru	equ	0xFF8
  7528                           tblptrh	equ	0xFF7
  7529                           tblptrl	equ	0xFF6
  7530                           tablat	equ	0xFF5
  7531                           prodh	equ	0xFF4
  7532                           prodl	equ	0xFF3
  7533                           intcon	equ	0xFF2
  7534                           postinc0	equ	0xFEE
  7535                           fsr0h	equ	0xFEA
  7536                           fsr0l	equ	0xFE9
  7537                           wreg	equ	0xFE8
  7538                           indf1	equ	0xFE7
  7539                           fsr1h	equ	0xFE2
  7540                           fsr1l	equ	0xFE1
  7541                           bsr	equ	0xFE0
  7542                           indf2	equ	0xFDF
  7543                           postinc2	equ	0xFDE
  7544                           postdec2	equ	0xFDD
  7545                           fsr2h	equ	0xFDA
  7546                           fsr2l	equ	0xFD9
  7547                           status	equ	0xFD8
  7548                           
  7549 ;; *************** function _SleepIfOkay *****************
  7550 ;; Defined at:
  7551 ;;		line 228 in file "../src/messages.c"
  7552 ;; Parameters:    Size  Location     Type
  7553 ;;		None
  7554 ;; Auto vars:     Size  Location     Type
  7555 ;;		None
  7556 ;; Return value:  Size  Location     Type
  7557 ;;		None               void
  7558 ;; Registers used:
  7559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7560 ;; Tracked objects:
  7561 ;;		On entry : 0/0
  7562 ;;		On exit  : 0/0
  7563 ;;		Unchanged: 0/0
  7564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7565 ;;      Params:         0       0       0       0       0
  7566 ;;      Locals:         0       0       0       0       0
  7567 ;;      Temps:          0       0       0       0       0
  7568 ;;      Totals:         0       0       0       0       0
  7569 ;;Total ram usage:        0 bytes
  7570 ;; Hardware stack levels used:    1
  7571 ;; Hardware stack levels required when called:    2
  7572 ;; This function calls:
  7573 ;;		_enter_sleep_mode
  7574 ;;		i2_check_msg
  7575 ;;		i2_in_high_int
  7576 ;;		i2_in_low_int
  7577 ;; This function is called by:
  7578 ;;		_InterruptHandlerHigh
  7579 ;; This function uses a non-reentrant model
  7580 ;;
  7581                           
  7582                           	psect	text46
  7583  001526                     __ptext46:
  7584                           	opt stack 0
  7585  001526                     _SleepIfOkay:
  7586                           	opt stack 17
  7587                           
  7588                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  7589                           
  7590                           ;incstack = 0
  7591  001526  664F               	tstfsz	_MQ_Main_Willing_to_block,c
  7592  001528  D001               	goto	i2l2216
  7593  00152A  0012               	return	
  7594  00152C                     i2l2216:
  7595                           
  7596                           ;messages.c: 232: }
  7597                           ;messages.c: 235: if (in_low_int()) {
  7598  00152C  EC16  F00C         	call	i2_in_low_int	;wreg free
  7599  001530  5032               	movf	?i2_in_low_int+1,w,c
  7600  001532  1031               	iorwf	?i2_in_low_int,w,c
  7601  001534  A4D8               	btfss	status,2,c
  7602  001536  0012               	return	
  7603                           
  7604                           ;messages.c: 237: }
  7605                           ;messages.c: 240: if (!in_high_int()) {
  7606                           
  7607                           ;messages.c: 236: return;
  7608  001538  EC00  F00D         	call	i2_in_high_int	;wreg free
  7609  00153C  5030               	movf	?i2_in_high_int+1,w,c
  7610  00153E  102F               	iorwf	?i2_in_high_int,w,c
  7611  001540  B4D8               	btfsc	status,2,c
  7612  001542  0012               	return	
  7613                           
  7614                           ;messages.c: 242: }
  7615                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  7616                           
  7617                           ;messages.c: 241: return;
  7618  001544  0101               	movlb	1	; () banked
  7619  001546  0E01               	movlw	high _ToMainHigh_MQ
  7620  001548  6E30               	movwf	i2check_msg@qptr+1,c
  7621  00154A  0101               	movlb	1	; () banked
  7622  00154C  0E6C               	movlw	low _ToMainHigh_MQ
  7623  00154E  6E2F               	movwf	i2check_msg@qptr,c
  7624  001550  EC8F  F00C         	call	i2_check_msg	;wreg free
  7625  001554  0900               	iorlw	0
  7626  001556  A4D8               	btfss	status,2,c
  7627  001558  0012               	return	
  7628                           
  7629                           ;messages.c: 249: }
  7630                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  7631                           
  7632                           ;messages.c: 248: return;
  7633  00155A  0100               	movlb	0	; () banked
  7634  00155C  0E00               	movlw	high _ToMainLow_MQ
  7635  00155E  6E30               	movwf	i2check_msg@qptr+1,c
  7636  001560  0100               	movlb	0	; () banked
  7637  001562  0E80               	movlw	low _ToMainLow_MQ
  7638  001564  6E2F               	movwf	i2check_msg@qptr,c
  7639  001566  EC8F  F00C         	call	i2_check_msg	;wreg free
  7640  00156A  0900               	iorlw	0
  7641  00156C  B4D8               	btfsc	status,2,c
  7642                           
  7643                           ;messages.c: 252: }
  7644                           ;messages.c: 253: enter_sleep_mode();
  7645                           
  7646                           ;messages.c: 251: return;
  7647  00156E  EC0A  F00D         	call	_enter_sleep_mode	;wreg free
  7648  001572  0012               	return	
  7649  001574                     __end_of_SleepIfOkay:
  7650                           	opt stack 0
  7651                           pclatu	equ	0xFFB
  7652                           pclath	equ	0xFFA
  7653                           tblptru	equ	0xFF8
  7654                           tblptrh	equ	0xFF7
  7655                           tblptrl	equ	0xFF6
  7656                           tablat	equ	0xFF5
  7657                           prodh	equ	0xFF4
  7658                           prodl	equ	0xFF3
  7659                           intcon	equ	0xFF2
  7660                           postinc0	equ	0xFEE
  7661                           fsr0h	equ	0xFEA
  7662                           fsr0l	equ	0xFE9
  7663                           wreg	equ	0xFE8
  7664                           indf1	equ	0xFE7
  7665                           fsr1h	equ	0xFE2
  7666                           fsr1l	equ	0xFE1
  7667                           bsr	equ	0xFE0
  7668                           indf2	equ	0xFDF
  7669                           postinc2	equ	0xFDE
  7670                           postdec2	equ	0xFDD
  7671                           fsr2h	equ	0xFDA
  7672                           fsr2l	equ	0xFD9
  7673                           status	equ	0xFD8
  7674                           
  7675 ;; *************** function i2_in_low_int *****************
  7676 ;; Defined at:
  7677 ;;		line 30 in file "../src/interrupts.c"
  7678 ;; Parameters:    Size  Location     Type
  7679 ;;		None
  7680 ;; Auto vars:     Size  Location     Type
  7681 ;;		None
  7682 ;; Return value:  Size  Location     Type
  7683 ;;                  2   48[COMRAM] int 
  7684 ;; Registers used:
  7685 ;;		wreg, status,2, status,0, cstack
  7686 ;; Tracked objects:
  7687 ;;		On entry : 0/0
  7688 ;;		On exit  : 0/0
  7689 ;;		Unchanged: 0/0
  7690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7691 ;;      Params:         2       0       0       0       0
  7692 ;;      Locals:         0       0       0       0       0
  7693 ;;      Temps:          0       0       0       0       0
  7694 ;;      Totals:         2       0       0       0       0
  7695 ;;Total ram usage:        2 bytes
  7696 ;; Hardware stack levels used:    1
  7697 ;; Hardware stack levels required when called:    1
  7698 ;; This function calls:
  7699 ;;		i2_in_high_int
  7700 ;; This function is called by:
  7701 ;;		_SleepIfOkay
  7702 ;; This function uses a non-reentrant model
  7703 ;;
  7704                           
  7705                           	psect	text47
  7706  00182C                     __ptext47:
  7707                           	opt stack 0
  7708  00182C                     i2_in_low_int:
  7709                           	opt stack 17
  7710                           
  7711                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  7712                           
  7713                           ;incstack = 0
  7714  00182C  ACF2               	btfss	intcon,6,c	;volatile
  7715  00182E  D005               	goto	i2l2652
  7716                           
  7717                           ;interrupts.c: 32: return (0);
  7718  001830  0E00               	movlw	0
  7719  001832  6E32               	movwf	?i2_in_low_int+1,c
  7720  001834  0E00               	movlw	0
  7721  001836  6E31               	movwf	?i2_in_low_int,c
  7722  001838  0012               	return	
  7723  00183A                     i2l2652:
  7724  00183A  EC00  F00D         	call	i2_in_high_int	;wreg free
  7725  00183E  5030               	movf	?i2_in_high_int+1,w,c
  7726  001840  102F               	iorwf	?i2_in_high_int,w,c
  7727  001842  B4D8               	btfsc	status,2,c
  7728  001844  D005               	goto	i2l2660
  7729                           
  7730                           ;interrupts.c: 34: return (0);
  7731  001846  0E00               	movlw	0
  7732  001848  6E32               	movwf	?i2_in_low_int+1,c
  7733  00184A  0E00               	movlw	0
  7734  00184C  6E31               	movwf	?i2_in_low_int,c
  7735  00184E  0012               	return	
  7736  001850                     i2l2660:
  7737                           
  7738                           ;interrupts.c: 36: return (1);
  7739  001850  0E00               	movlw	0
  7740  001852  6E32               	movwf	?i2_in_low_int+1,c
  7741  001854  0E01               	movlw	1
  7742  001856  6E31               	movwf	?i2_in_low_int,c
  7743  001858  0012               	return	
  7744  00185A                     __end_ofi2_in_low_int:
  7745                           	opt stack 0
  7746                           pclatu	equ	0xFFB
  7747                           pclath	equ	0xFFA
  7748                           tblptru	equ	0xFF8
  7749                           tblptrh	equ	0xFF7
  7750                           tblptrl	equ	0xFF6
  7751                           tablat	equ	0xFF5
  7752                           prodh	equ	0xFF4
  7753                           prodl	equ	0xFF3
  7754                           intcon	equ	0xFF2
  7755                           postinc0	equ	0xFEE
  7756                           fsr0h	equ	0xFEA
  7757                           fsr0l	equ	0xFE9
  7758                           wreg	equ	0xFE8
  7759                           indf1	equ	0xFE7
  7760                           fsr1h	equ	0xFE2
  7761                           fsr1l	equ	0xFE1
  7762                           bsr	equ	0xFE0
  7763                           indf2	equ	0xFDF
  7764                           postinc2	equ	0xFDE
  7765                           postdec2	equ	0xFDD
  7766                           fsr2h	equ	0xFDA
  7767                           fsr2l	equ	0xFD9
  7768                           status	equ	0xFD8
  7769                           
  7770 ;; *************** function i2_in_high_int *****************
  7771 ;; Defined at:
  7772 ;;		line 22 in file "../src/interrupts.c"
  7773 ;; Parameters:    Size  Location     Type
  7774 ;;		None
  7775 ;; Auto vars:     Size  Location     Type
  7776 ;;		None
  7777 ;; Return value:  Size  Location     Type
  7778 ;;                  2   46[COMRAM] int 
  7779 ;; Registers used:
  7780 ;;		wreg, status,2
  7781 ;; Tracked objects:
  7782 ;;		On entry : 0/0
  7783 ;;		On exit  : 0/0
  7784 ;;		Unchanged: 0/0
  7785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7786 ;;      Params:         2       0       0       0       0
  7787 ;;      Locals:         0       0       0       0       0
  7788 ;;      Temps:          0       0       0       0       0
  7789 ;;      Totals:         2       0       0       0       0
  7790 ;;Total ram usage:        2 bytes
  7791 ;; Hardware stack levels used:    1
  7792 ;; This function calls:
  7793 ;;		Nothing
  7794 ;; This function is called by:
  7795 ;;		_SleepIfOkay
  7796 ;;		i2_in_low_int
  7797 ;; This function uses a non-reentrant model
  7798 ;;
  7799                           
  7800                           	psect	text48
  7801  001A00                     __ptext48:
  7802                           	opt stack 0
  7803  001A00                     i2_in_high_int:
  7804                           	opt stack 17
  7805                           
  7806                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  7807                           
  7808                           ;incstack = 0
  7809  001A00  0E00               	movlw	0
  7810  001A02  AEF2               	btfss	intcon,7,c	;volatile
  7811  001A04  0E01               	movlw	1
  7812  001A06  6E2F               	movwf	?i2_in_high_int,c
  7813  001A08  6A30               	clrf	?i2_in_high_int+1,c
  7814  001A0A  0012               	return	
  7815  001A0C                     __end_ofi2_in_high_int:
  7816                           	opt stack 0
  7817                           pclatu	equ	0xFFB
  7818                           pclath	equ	0xFFA
  7819                           tblptru	equ	0xFF8
  7820                           tblptrh	equ	0xFF7
  7821                           tblptrl	equ	0xFF6
  7822                           tablat	equ	0xFF5
  7823                           prodh	equ	0xFF4
  7824                           prodl	equ	0xFF3
  7825                           intcon	equ	0xFF2
  7826                           postinc0	equ	0xFEE
  7827                           fsr0h	equ	0xFEA
  7828                           fsr0l	equ	0xFE9
  7829                           wreg	equ	0xFE8
  7830                           indf1	equ	0xFE7
  7831                           fsr1h	equ	0xFE2
  7832                           fsr1l	equ	0xFE1
  7833                           bsr	equ	0xFE0
  7834                           indf2	equ	0xFDF
  7835                           postinc2	equ	0xFDE
  7836                           postdec2	equ	0xFDD
  7837                           fsr2h	equ	0xFDA
  7838                           fsr2l	equ	0xFD9
  7839                           status	equ	0xFD8
  7840                           
  7841 ;; *************** function i2_check_msg *****************
  7842 ;; Defined at:
  7843 ;;		line 222 in file "../src/messages.c"
  7844 ;; Parameters:    Size  Location     Type
  7845 ;;  qptr            2   46[COMRAM] PTR struct __msg_queue
  7846 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7847 ;; Auto vars:     Size  Location     Type
  7848 ;;		None
  7849 ;; Return value:  Size  Location     Type
  7850 ;;                  1    wreg      unsigned char 
  7851 ;; Registers used:
  7852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7853 ;; Tracked objects:
  7854 ;;		On entry : 0/0
  7855 ;;		On exit  : 0/0
  7856 ;;		Unchanged: 0/0
  7857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7858 ;;      Params:         2       0       0       0       0
  7859 ;;      Locals:         0       0       0       0       0
  7860 ;;      Temps:          1       0       0       0       0
  7861 ;;      Totals:         3       0       0       0       0
  7862 ;;Total ram usage:        3 bytes
  7863 ;; Hardware stack levels used:    1
  7864 ;; This function calls:
  7865 ;;		Nothing
  7866 ;; This function is called by:
  7867 ;;		_SleepIfOkay
  7868 ;; This function uses a non-reentrant model
  7869 ;;
  7870                           
  7871                           	psect	text49
  7872  00191E                     __ptext49:
  7873                           	opt stack 0
  7874  00191E                     i2_check_msg:
  7875                           	opt stack 18
  7876                           
  7877                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  7878                           
  7879                           ;incstack = 0
  7880  00191E  EE20 F035          	lfsr	2,53
  7881  001922  502F               	movf	i2check_msg@qptr,w,c
  7882  001924  26D9               	addwf	fsr2l,f,c
  7883  001926  5030               	movf	i2check_msg@qptr+1,w,c
  7884  001928  22DA               	addwfc	fsr2h,f,c
  7885  00192A  50DF               	movf	indf2,w,c
  7886  00192C  6E31               	movwf	??i2_check_msg& (0+255),c
  7887  00192E  5031               	movf	??i2_check_msg,w,c
  7888  001930  0D0D               	mullw	13
  7889  001932  50F3               	movf	prodl,w,c
  7890  001934  242F               	addwf	i2check_msg@qptr,w,c
  7891  001936  6ED9               	movwf	fsr2l,c
  7892  001938  50F4               	movf	prodh,w,c
  7893  00193A  2030               	addwfc	i2check_msg@qptr+1,w,c
  7894  00193C  6EDA               	movwf	fsr2h,c
  7895  00193E  50DF               	movf	indf2,w,c
  7896  001940  0012               	return	
  7897  001942                     __end_ofi2_check_msg:
  7898                           	opt stack 0
  7899                           pclatu	equ	0xFFB
  7900                           pclath	equ	0xFFA
  7901                           tblptru	equ	0xFF8
  7902                           tblptrh	equ	0xFF7
  7903                           tblptrl	equ	0xFF6
  7904                           tablat	equ	0xFF5
  7905                           prodh	equ	0xFF4
  7906                           prodl	equ	0xFF3
  7907                           intcon	equ	0xFF2
  7908                           postinc0	equ	0xFEE
  7909                           fsr0h	equ	0xFEA
  7910                           fsr0l	equ	0xFE9
  7911                           wreg	equ	0xFE8
  7912                           indf1	equ	0xFE7
  7913                           fsr1h	equ	0xFE2
  7914                           fsr1l	equ	0xFE1
  7915                           bsr	equ	0xFE0
  7916                           indf2	equ	0xFDF
  7917                           postinc2	equ	0xFDE
  7918                           postdec2	equ	0xFDD
  7919                           fsr2h	equ	0xFDA
  7920                           fsr2l	equ	0xFD9
  7921                           status	equ	0xFD8
  7922                           
  7923 ;; *************** function _enter_sleep_mode *****************
  7924 ;; Defined at:
  7925 ;;		line 202 in file "../src/messages.c"
  7926 ;; Parameters:    Size  Location     Type
  7927 ;;		None
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;		None
  7930 ;; Return value:  Size  Location     Type
  7931 ;;		None               void
  7932 ;; Registers used:
  7933 ;;		None
  7934 ;; Tracked objects:
  7935 ;;		On entry : 0/0
  7936 ;;		On exit  : 0/0
  7937 ;;		Unchanged: 0/0
  7938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7939 ;;      Params:         0       0       0       0       0
  7940 ;;      Locals:         0       0       0       0       0
  7941 ;;      Temps:          0       0       0       0       0
  7942 ;;      Totals:         0       0       0       0       0
  7943 ;;Total ram usage:        0 bytes
  7944 ;; Hardware stack levels used:    1
  7945 ;; This function calls:
  7946 ;;		Nothing
  7947 ;; This function is called by:
  7948 ;;		_SleepIfOkay
  7949 ;; This function uses a non-reentrant model
  7950 ;;
  7951                           
  7952                           	psect	text50
  7953  001A14                     __ptext50:
  7954                           	opt stack 0
  7955  001A14                     _enter_sleep_mode:
  7956                           	opt stack 18
  7957                           
  7958                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  7959                           
  7960                           ;incstack = 0
  7961  001A14  8ED3               	bsf	4051,7,c	;volatile
  7962  001A16  0003               	sleep		;# 
  7963  001A18  0012               	return	
  7964  001A1A                     __end_of_enter_sleep_mode:
  7965                           	opt stack 0
  7966  0000                     pclatu	equ	0xFFB
  7967                           pclath	equ	0xFFA
  7968                           tblptru	equ	0xFF8
  7969                           tblptrh	equ	0xFF7
  7970                           tblptrl	equ	0xFF6
  7971                           tablat	equ	0xFF5
  7972                           prodh	equ	0xFF4
  7973                           prodl	equ	0xFF3
  7974                           intcon	equ	0xFF2
  7975                           postinc0	equ	0xFEE
  7976                           fsr0h	equ	0xFEA
  7977                           fsr0l	equ	0xFE9
  7978                           wreg	equ	0xFE8
  7979                           indf1	equ	0xFE7
  7980                           fsr1h	equ	0xFE2
  7981                           fsr1l	equ	0xFE1
  7982                           bsr	equ	0xFE0
  7983                           indf2	equ	0xFDF
  7984                           postinc2	equ	0xFDE
  7985                           postdec2	equ	0xFDD
  7986                           fsr2h	equ	0xFDA
  7987                           fsr2l	equ	0xFD9
  7988                           status	equ	0xFD8
  7989                           pclatu	equ	0xFFB
  7990                           pclath	equ	0xFFA
  7991                           tblptru	equ	0xFF8
  7992                           tblptrh	equ	0xFF7
  7993                           tblptrl	equ	0xFF6
  7994                           tablat	equ	0xFF5
  7995                           prodh	equ	0xFF4
  7996                           prodl	equ	0xFF3
  7997                           intcon	equ	0xFF2
  7998                           postinc0	equ	0xFEE
  7999                           fsr0h	equ	0xFEA
  8000                           fsr0l	equ	0xFE9
  8001                           wreg	equ	0xFE8
  8002                           indf1	equ	0xFE7
  8003                           fsr1h	equ	0xFE2
  8004                           fsr1l	equ	0xFE1
  8005                           bsr	equ	0xFE0
  8006                           indf2	equ	0xFDF
  8007                           postinc2	equ	0xFDE
  8008                           postdec2	equ	0xFDD
  8009                           fsr2h	equ	0xFDA
  8010                           fsr2l	equ	0xFD9
  8011                           status	equ	0xFD8
  8012                           
  8013                           	psect	rparam
  8014  0000                     pclatu	equ	0xFFB
  8015                           pclath	equ	0xFFA
  8016                           tblptru	equ	0xFF8
  8017                           tblptrh	equ	0xFF7
  8018                           tblptrl	equ	0xFF6
  8019                           tablat	equ	0xFF5
  8020                           prodh	equ	0xFF4
  8021                           prodl	equ	0xFF3
  8022                           intcon	equ	0xFF2
  8023                           postinc0	equ	0xFEE
  8024                           fsr0h	equ	0xFEA
  8025                           fsr0l	equ	0xFE9
  8026                           wreg	equ	0xFE8
  8027                           indf1	equ	0xFE7
  8028                           fsr1h	equ	0xFE2
  8029                           fsr1l	equ	0xFE1
  8030                           bsr	equ	0xFE0
  8031                           indf2	equ	0xFDF
  8032                           postinc2	equ	0xFDE
  8033                           postdec2	equ	0xFDD
  8034                           fsr2h	equ	0xFDA
  8035                           fsr2l	equ	0xFD9
  8036                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     76      80
    BANK0           128     49     105
    BANK1           256     64     226
    BANK2           256      0       0
    BANK3           256      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@t1thread_data(BANK1[2]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@t1thread_data(BANK1[2]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK1[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@t1thread_data(BANK1[2]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_timer0_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0   11513
                                             10 BANK1     54    54      0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     344
                                             23 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    3046
                                              0 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2309
                                             45 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2062
                                             33 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     279
                                             23 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     130
                                             23 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      86
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      86
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     390
                                             27 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     390
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     270
                                             29 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             27 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             25 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                             23 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2480
                                             47 BANK0      1     1      0
                                              0 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2480
                                             47 BANK0      1     1      0
                                              0 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2233
                                             33 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     636
                                             23 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     284
                                             23 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    4938
                                             29 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    2416
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    2522
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2393
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    1943
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    8935
                                              9 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  7     7      0    5507
                                             75 COMRAM     1     1      0
                                              0 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     132
                                             46 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    2477
                                             70 COMRAM     5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    2283
                                             56 COMRAM    14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    11    11      0    3192
                                             72 COMRAM     2     2      0
                                              0 BANK0      9     9      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      22
                                             46 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    2788
                                             68 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2210
                                             56 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     929
                                             46 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             48 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             46 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0      10        0.0%
BANK1              100     40      E2       6       88.3%
BITBANK0            80      0       0       4        0.0%
BANK0               80     31      69       5       82.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     4C      50       1       63.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     19B       9        0.0%
DATA                 0      0     19B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Tue Feb 04 16:33:25 2014

              main@uthread_data 01B8        _MQ_Main_Willing_to_block 004F                     _SSPSTATbits 000FC7  
     __end_of_ToMainLow_recvmsg 1688                              bsr 000FE0       __end_of_ToMainLow_sendmsg 18F8  
                  __CFG_CP0$OFF 000000               i2recv_msg@msgtype 003C               i2recv_msg@tlength 0043  
                           l100 07B2                             l440 1152                             l433 1120  
                           l437 1140                             l438 1142                             l391 17BA  
                           l439 1150                             l392 17BC                             l389 17A2  
                           l666 1982                             l978 11FE            __size_of_WriteTimer0 0012  
          __size_of_WriteTimer1 0012                  _FromMainLow_MQ 0136                             wreg 000FE8  
                  __CFG_IESO$ON 000000                    ?_in_high_int 00CD                ??_init_uart_recv 00CF  
               ReadTimer1@timer 0003             i2recv_msg@maxlength 003B                            l2030 15F2  
                          l2022 15D0                            l2044 1636                            l2440 1026  
                          l2432 0FF8                            l2424 0FCA                            l2338 17A4  
                          l2452 0AC6                            l2456 0B4A                            l2386 1122  
                          l2378 110C                            l2490 12D2                            l2912 0C14  
                          l2932 150E                            l2852 0760                            l2844 071E  
                          l2926 14EA                            l2854 07B8                            l2862 0822  
                          l2870 0878                            l2856 07E6                            l2864 083A  
                          l2946 09E0                            l2962 0AA6                            l2882 095A  
                          l2858 0804                            l2876 08B6                            l2868 085A  
                          l2990 11EA                            l2982 119C                            l2878 0908  
                          l2984 11AE                            l2986 11B6                            u2017 1984  
                          _LATB 000F8A                            u1560 1034                            u1566 1036  
                          i1l47 0070                            i2l41 124C                 _FromMainHigh_MQ 0100  
                 __CFG_FCMEN$ON 000000          ?_block_on_To_msgqueues 0001                            _main 0698  
                          fsr0h 000FEA                            fsr1h 000FE2                            fsr0l 000FE9  
                          fsr2h 000FDA                            indf1 000FE7                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                     main@msgtype 01C4  
                    i1_send_msg 0E56                            pclat 000FFA                     i2_check_msg 191E  
                          prodh 000FF4                            prodl 000FF3           handle_start@data_read 002F  
                          start 00B6                      i2_recv_msg 0CBC                   __CFG_FOSC2$ON 000000  
                    i2_send_msg 0F00       ToMainHigh_recvmsg@msgtype 01A2                  send_msg@length 00D9  
   __size_of_timer0_int_handler 007A                     _Delay1KTCYx 197E                           ?_main 0001  
                         _T1CON 000FCD                 __end_of___lwmod 1208                      i1memcpy@d1 0001  
                         i1l451 196E                           i2l261 0166                           i2l249 0E0A  
                         i2l265 01A4                           i2l259 04D4                           i2l293 04E6  
                         i2l287 0452                           i2l279 0326                      i1memcpy@s1 0003  
   FromMainHigh_recvmsg@msgtype 0047                           _RCREG 000FAE                           _RCSTA 000FAB  
                         _TMR0H 000FD7                           _TMR1H 000FCF                           _TMR0L 000FD6  
                         _TMR1L 000FCE                           _SPBRG 000FAF                           _TRISB 000F93  
                         _TXSTA 000FAC                      i2memcpy@d1 002F                      i2memcpy@s1 0031  
                  ?_init_queues 0001       __size_of_enter_sleep_mode 0006                 __end_of_in_main 1646  
    ToMainLow_recvmsg@maxlength 00E5         timer0_lthread@msgbuffer 00D3         i2c_configure_slave@addr 00CD  
                         tablat 000FF5                           status 000FD8                __end_ofi1_memcpy 170A  
              __end_ofi2_memcpy 174A                 __initialization 18AC                    __end_of_main 0974  
                    _ReadTimer1 19DC     __size_of_timer1_int_handler 0048      __size_of_ToMainLow_recvmsg 0042  
    __size_of_ToMainLow_sendmsg 0026   __size_of_FromMainHigh_recvmsg 002A           __size_ofi2_in_low_int 002E  
 __size_of_FromMainHigh_sendmsg 0036                          ??_main 01AC                 send_msg@msgtype 00DA  
                 __activetblptr 000002                 send_msg@tlength 00DE            __end_of_handle_start 0E56  
       ??_uart_recv_int_handler 001B                          i2l2100 0204                          i1l2732 16F8  
                        i1l2804 0066                          i2l2110 0240                          i1l2726 16DC  
                        i2l2140 0396                          i2l2116 0258                          i1l2756 0E8E  
                        i2l2142 03D8                          i2l2118 0298                          i2l2054 1242  
                        i2l2216 152C                          i2l2080 015C                          i1l2792 10CC  
                        i2l2146 03E6                          i2l2074 0148                          i2l2180 054A  
                        i2l2174 04EA                          i2l2168 04A8                          i2l2602 0E26  
                        i2l2098 01D8                      _OpenTimer1 1788                          i2l2604 0E3E  
                        i2l2196 0666                          i2l2188 05D0                          i2l2700 0D02  
                __CFG_WDTEN$OFF 000000                          i2l2660 1850                          i2l2652 183A  
                        i2l2716 0D8A                          i2l2742 1738                          i2l2736 171C  
                        i2l2676 0F38     __end_of_i2c_configure_slave 18AC                   ??_SleepIfOkay 0033  
            __size_of_ReadUSART 001E                          _OSCCON 000FD3                          _SPBRGH 000FB0  
                        _SSPADD 000FC8                          _SSPBUF 000FC9  __size_of_start_i2c_slave_reply 010E  
                   ?i1_send_msg 000B   __end_of_start_i2c_slave_reply 0BB8              timer0_lthread@tptr 00CD  
                   ?i2_recv_msg 0039                    i2_in_low_int 182C                     ?i2_send_msg 0039  
                __CFG_XINST$OFF 000000              __size_of_OpenUSART 0092                 _i2c_int_handler 00BA  
                        _ic_ptr 00E7                       ??___lwmod 00D1                   main@msgbuffer 01AD  
              __end_of_init_i2c 14C8                OpenTimer1@config 00CD                          _memcpy 14C8  
                        clear_0 18B2                          clear_1 18BE                          _uc_ptr 004D  
                        main@ic 01C6                          main@uc 01BD                __end_of_recv_msg 0AAA  
   start_i2c_slave_reply@length 00D1                       ??_in_main 00D3                __end_of_send_msg 0CBC  
         timer0_int_handler@val 00BA         i2c_int_handler@i2c_data 00BB                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                     init_queue@i 00D0  
      ToMainLow_recvmsg@msgtype 01A2            __size_of_in_high_int 0012                 __CFG_FOSC$HSPLL 000000  
                    __accesstop 0080         __end_of__initialization 18C8      __end_of_ToMainHigh_recvmsg 16CA  
    __end_of_ToMainHigh_sendmsg 191E     __end_of_init_timer1_lthread 19B8             __end_of_SleepIfOkay 1574  
                __pcstackCOMRAM 0001          __size_ofi2_in_high_int 000C                     ?_ReadTimer1 0001  
            __size_of_check_msg 0036               __end_of_ReadUSART 197E       timer0_int_handler@msgtype 00B8  
           __size_ofi1_send_msg 00AA                       ?i1_memcpy 0001   __size_of_InterruptHandlerHigh 1282  
   __end_of_InterruptHandlerLow 00B6                       ?i2_memcpy 002F                   _ToMainHigh_MQ 016C  
           __size_ofi2_recv_msg 00D2                _enter_sleep_mode 1A14             __size_ofi2_send_msg 00AA  
          timer1_lthread@length 01A6                   ReadUSART@data 0001               __end_of_OpenUSART 117E  
                 check_msg@qptr 00CD            timer1_lthread@retval 01AB         ??_block_on_To_msgqueues 00D3  
          __size_of_init_queues 006E                      __pbssBANK0 0080                      __pbssBANK1 0100  
                   ?_OpenTimer1 0001                      __pnvCOMRAM 004D         __end_of_i2c_int_handler 0698  
                  ?i2_check_msg 002F              timer1_lthread@tptr 01A2               recv_msg@maxlength 00D9  
               recv_msg@msgtype 00DA                 recv_msg@tlength 00E1           __size_of_handle_start 00C8  
                  ?_Delay1KTCYx 0001                WriteTimer0@timer 0031                         ?_memcpy 00CD  
              WriteTimer1@timer 0003                   ??_WriteTimer0 0031                   ??_WriteTimer1 0003  
       __size_of_timer0_lthread 0012         __size_of_timer1_lthread 0072                      ??i1_memcpy 0007  
                    ??i2_memcpy 0035                i1send_msg@length 000D                   i2_in_high_int 1A00  
                       _SSPCON1 000FC6                         _SSPCON2 000FC5                         _SSPSTAT 000FC7  
           __size_of_ReadTimer1 0012               __end_of_check_msg 182C                       ?_init_i2c 00CD  
                   _SleepIfOkay 1526                       ?_recv_msg 00D7                      _in_low_int 15BC  
                  _handle_start 0D8E                         __Hparam 0000                       ?_send_msg 00D7  
                       __Lparam 0000      __end_of_timer0_int_handler 137E                init_uart_recv@uc 00CD  
                       ___lwmod 117E                 __CFG_STVREN$OFF 000000                         __pcinit 18AC  
               __size_of_memcpy 005E                      _init_queue 128A                         __ramtop 0400  
           __size_of_OpenTimer1 0038                         __ptext0 0698                         __ptext1 174A  
                       __ptext2 137E                         __ptext3 117E                         __ptext4 17C0  
                       __ptext5 0BB8                         __ptext6 1994                         __ptext7 0AAA  
                       __ptext8 1942                         __ptext9 19A6                         _in_main 1602  
                     _T1CONbits 000FCD             __end_of_WriteTimer0 1A00             __end_of_WriteTimer1 19DC  
                ?i2_in_high_int 002F                  __pintcode_body 1208    __end_of_FromMainHigh_recvmsg 1884  
          end_of_initialization 18C8         timer1_lthread@msgbuffer 01A8    __end_of_FromMainHigh_sendmsg 17F6  
__size_of_uart_recv_int_handler 009C      FromMainHigh_sendmsg@length 00E6                         memcpy@d 00D3  
                       memcpy@n 00D1                         memcpy@s 00D5   __end_of_uart_recv_int_handler 10EC  
                    ??_init_i2c 00CF     i2c_int_handler@data_written 00B9                   __Lmediumconst 0000  
                       int_func 1208                    ??i1_send_msg 0011                   ?_uart_lthread 00CD  
       __size_of_init_uart_recv 001E                ?_i2c_int_handler 0001                    ??i2_recv_msg 0040  
                    ??_recv_msg 00DE                    ??i2_send_msg 003F                      ??_send_msg 00DD  
    __end_of_timer1_int_handler 15BC                       _RCSTAbits 000FAB                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE       ToMainHigh_sendmsg@msgtype 0045  
            __end_ofi1_send_msg 0F00     FromMainHigh_sendmsg@msgtype 00E3                       _TRISCbits 000F94  
            __end_ofi2_recv_msg 0D8E              __end_ofi2_send_msg 0FAA   FromMainHigh_recvmsg@maxlength 004B  
      timer1_int_handler@result 001C                  ??_uart_lthread 00D5                       _TXSTAbits 000FAC  
                    main@length 01C5                     ?_in_low_int 00CF           timer0_lthread@msgtype 00CF  
         _start_i2c_slave_reply 0AAA    __size_of_i2c_configure_slave 0028            __size_ofi2_check_msg 0024  
      __end_of_enter_sleep_mode 1A1A                    ??_ReadTimer1 0003              _ToMainHigh_recvmsg 1688  
                     i1memcpy@d 0007              _ToMainHigh_sendmsg 18F8                       i1memcpy@n 0005  
                     i1memcpy@s 0009                  _timer0_lthread 1994                     ?_init_queue 00CD  
                     i2memcpy@d 0035                     _WriteTimer0 19EE                     _WriteTimer1 19CA  
                     i2memcpy@n 0033                       i2memcpy@s 0037                  _timer1_lthread 137E  
                __end_of_memcpy 1526               _enable_interrupts 1A0C            __size_of_Delay1KTCYx 0016  
           ?_ToMainHigh_recvmsg 01A2                 ??i2_in_high_int 0031        i2c_int_handler@data_read 00BE  
           ?_ToMainHigh_sendmsg 0045              ?_enable_interrupts 0001             start_initialization 18AC  
                 ??_in_high_int 00CF                       _ReadUSART 1960               __size_ofi1_memcpy 0040  
             __size_ofi2_memcpy 0040             ??_enable_interrupts 00CD                    ??_OpenTimer1 00CD  
__size_of_block_on_To_msgqueues 00A6              __end_of_ReadTimer1 19EE   __end_of_block_on_To_msgqueues 1050  
                     _OpenUSART 10EC    __end_of_InterruptHandlerHigh 128A                      init_i2c@ic 00CD  
          ??_ToMainHigh_recvmsg 00E5            ??_ToMainHigh_sendmsg 0048          __end_of_timer0_lthread 19A6  
      i2c_int_handler@error_buf 00B6          __end_of_timer1_lthread 13F0       __end_of_enable_interrupts 1A14  
                      ??_memcpy 00D3           timer1_lthread@msgtype 01A4            _FromMainHigh_recvmsg 185A  
          _FromMainHigh_sendmsg 17C0    __size_of_init_timer1_lthread 0012              __end_of_OpenTimer1 17C0  
      i2c_int_handler@msg_ready 00BD                     __pbssCOMRAM 004F                      ?_ReadUSART 0001  
                 ??_init_queues 00D1                   __pcstackBANK0 00B6                   __pcstackBANK1 01A2  
           __size_of_in_low_int 0046        start_i2c_slave_reply@msg 00CD             __CFG_CCP2MX$DEFAULT 000000  
               Delay1KTCYx@unit 00CD        ToMainLow_sendmsg@msgtype 0017    __size_of_InterruptHandlerLow 009E  
           __end_of_in_high_int 19CA                      ?_OpenUSART 00CD                    ?_SleepIfOkay 0001  
         ToMainLow_recvmsg@data 01A4                    _ToMainLow_MQ 0080             __size_of_init_queue 007A  
                _init_uart_recv 1942                       _check_msg 17F6                       __pnvBANK0 00E7  
        ?_start_i2c_slave_reply 00CD               __size_of_init_i2c 006A                    recv_msg@data 00DC  
                  recv_msg@qmsg 00E3                    recv_msg@slot 00E0                    recv_msg@qptr 00D7  
             __size_of_recv_msg 0136                       __pintcode 0008               __size_of_send_msg 0104  
               ?_timer0_lthread 00CD                        ?___lwmod 00CD           ?_FromMainHigh_recvmsg 0047  
               ?_timer1_lthread 01A2           ?_FromMainHigh_sendmsg 00E3                     __pintcodelo 0018  
        ToMainHigh_recvmsg@data 01A4            __end_of_uart_lthread 1788      i2c_int_handler@msg_to_send 00BC  
                      ?_in_main 00D1               WriteTimer0@timer0 002F              _timer0_int_handler 1304  
             WriteTimer1@timer1 0001             uart_lthread@msgtype 00CF           ToMainLow_sendmsg@data 0018  
           ?_timer0_int_handler 0001                uart_lthread@uptr 00CD          __end_of_init_uart_recv 1960  
           __end_of_init_queues 145E                        _LATBbits 000F8A                 i2check_msg@qptr 002F  
                    ?_check_msg 00CD                        _IPR1bits 000F9F                        _PIE1bits 000F9D  
                 ?i2_in_low_int 0031                        i1u185_20 157C                        i1u185_26 157E  
                      i2u132_40 130C                        i2u132_46 130E                        _PIR1bits 000F9E  
        ToMainHigh_sendmsg@data 0046                        _RCONbits 000FD0                __CFG_WDTPS$32768 000000  
          ??_timer0_int_handler 004C      __size_of_enable_interrupts 0008               i1send_msg@msgtype 000E  
             i1send_msg@tlength 0012            timer0_lthread@length 00D1              _timer1_int_handler 1574  
                      i1_memcpy 16CA            _InterruptHandlerHigh 0008                     ??_ReadUSART 0001  
                      i2_memcpy 170A            timer0_lthread@msgval 00D5        FromMainHigh_recvmsg@data 0049  
                   _in_high_int 19B8                    send_msg@data 00DB             _i2c_configure_slave 1884  
                  send_msg@qmsg 00E1                    send_msg@slot 00E0                    send_msg@qptr 00D7  
         uart_lthread@msgbuffer 00D3             ?_timer1_int_handler 0001                 ?_init_uart_recv 00CD  
                   ??_OpenUSART 00CF                 OpenUSART@config 00D2                  ??i2_in_low_int 0033  
         _uart_recv_int_handler 1050                    ??_in_low_int 00D1                        __Hrparam 0000  
          ?_i2c_configure_slave 0001                        __Lrparam 0000               ?_enter_sleep_mode 0001  
        ??_FromMainHigh_recvmsg 004B          ??_FromMainHigh_sendmsg 00E6            ??_timer1_int_handler 001B  
      __size_of_i2c_int_handler 05DE              ??_enter_sleep_mode 002F                __size_of___lwmod 008A  
                  ??_init_queue 00CF                    ?_WriteTimer0 002F                    ?_WriteTimer1 0001  
      FromMainHigh_sendmsg@data 00E4         ToMainLow_sendmsg@length 001A               main@t0thread_data 01BA  
         ?_InterruptHandlerHigh 0001                __size_of_in_main 0044               i2send_msg@msgtype 003C  
   ToMainHigh_recvmsg@maxlength 00E5               i2send_msg@tlength 0040         init_timer1_lthread@tptr 00CD  
                   _init_queues 13F0              __end_of_in_low_int 1602                        __ptext10 13F0  
                      __ptext11 128A                        __ptext20 197E                        __ptext12 145E  
                      __ptext21 1646                        __ptext13 1884                        __ptext30 1574  
                      __ptext22 1688                        __ptext14 1A0C                        __ptext31 19CA  
                      __ptext23 0974                        __ptext15 0FAA                        __ptext40 0CBC  
                      __ptext32 18D2                        __ptext24 14C8                        __ptext16 1602  
                      __ptext41 00BA                        __ptext33 0E56                        __ptext25 10EC  
                      __ptext17 15BC                        __ptext50 1A14                        __ptext42 0D8E  
                      __ptext34 16CA                        __ptext26 1788                        __ptext18 19B8  
                      __ptext43 18F8                        __ptext35 19DC                        __ptext19 17F6  
                      __ptext44 0F00                        __ptext28 1050                        __ptext45 170A  
                      __ptext37 1304                        __ptext29 1960                        __ptext46 1526  
                      __ptext38 19EE                        __ptext47 182C                        __ptext39 185A  
                      __ptext48 1A00                        __ptext49 191E                  i1send_msg@data 000F  
                i1send_msg@qmsg 0015                  i1send_msg@slot 0014                  i1send_msg@qptr 000B  
            uart_lthread@length 00D1        timer0_int_handler@length 00B6                        _init_i2c 145E  
           _init_timer1_lthread 19A6                   __size_of_main 02DC                   ??i2_check_msg 0031  
             main@t1thread_data 01C2                     ??_check_msg 00CF              __end_of_init_queue 1304  
          __size_of_SleepIfOkay 004E                        _recv_msg 0974           ??_i2c_configure_slave 00CD  
                      _send_msg 0BB8                  init_queue@qptr 00CD           __size_of_uart_lthread 003E  
                i2recv_msg@data 003E                  i2recv_msg@qmsg 0045                   ??_Delay1KTCYx 00CD  
                i2recv_msg@slot 0042                  i2recv_msg@qptr 0039             _InterruptHandlerLow 0018  
          ?_init_timer1_lthread 00CD                     _OSCTUNEbits 000F9B                      _INTCONbits 000FF2  
                OpenUSART@spbrg 00CD                        memcpy@d1 00CD                        memcpy@s1 00CF  
         __end_ofi2_in_high_int 1A0C    i2c_int_handler@overrun_error 00BA                i2send_msg@length 003B  
                      intlevel1 0000                        intlevel2 0000            ?_InterruptHandlerLow 0001  
       ??_start_i2c_slave_reply 00CF                ___lwmod@dividend 00CD          ?_uart_recv_int_handler 0001  
                  _uart_lthread 174A           _block_on_To_msgqueues 0FAA                   ?_handle_start 0001  
              ??_timer0_lthread 00D5     __size_of_ToMainHigh_recvmsg 0042     __size_of_ToMainHigh_sendmsg 0026  
                    _OSCCONbits 000FD3                ??_timer1_lthread 01AA        ToMainHigh_sendmsg@length 0048  
           __end_ofi2_check_msg 1942           ??_init_timer1_lthread 00CF          ??_InterruptHandlerHigh 00BF  
             _ToMainLow_recvmsg 1646               _ToMainLow_sendmsg 18D2              main@last_reg_recvd 01BC  
               ___lwmod@divisor 00CF            __end_ofi2_in_low_int 185A              ?_ToMainLow_recvmsg 01A2  
           __end_of_Delay1KTCYx 1994               ??_i2c_int_handler 0049                 ___lwmod@counter 00D2  
            ?_ToMainLow_sendmsg 0017                     _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5  
                i2send_msg@data 003D           ??_InterruptHandlerLow 001E             ??_ToMainLow_recvmsg 00E5  
                i2send_msg@qmsg 0043                  i2send_msg@slot 0042                  i2send_msg@qptr 0039  
           ??_ToMainLow_sendmsg 001A                  ??_handle_start 002F                    _USART_Status 0050  

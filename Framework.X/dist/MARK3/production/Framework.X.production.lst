

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Mar 24 21:37:15 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    79                           	psect	param0,global,class=BANK0,space=1,delta=1
    80  0000                     
    81                           	psect	idataCOMRAM
    82  001FA0                     __pidataCOMRAM:
    83                           	opt stack 0
    84                           
    85                           ;initializer for _sendingPlaceHolder
    86  001FA0  012B               	dw	299
    87                           
    88                           ;initializer for _back
    89  001FA2  4D                 	db	77
    90  001FA3  CC                 	db	204
    91                           
    92                           ;initializer for _forwardHalf
    93  001FA4  23                 	db	35
    94  001FA5  A3                 	db	163
    95                           
    96                           ;initializer for _forwardSlow
    97  001FA6  32                 	db	50
    98  001FA7  B1                 	db	177
    99                           
   100                           ;initializer for _left
   101  001FA8  DB                 	db	219
   102  001FA9  23                 	db	35
   103                           
   104                           ;initializer for _right
   105  001FAA  5C                 	db	92
   106  001FAB  A3                 	db	163
   107                           
   108                           ;initializer for _left2
   109  001FAC  B4                 	db	180
   110                           
   111                           ;initializer for _right2
   112  001FAD  2D                 	db	45
   113                           
   114                           	psect	idataBANK0
   115  001EE2                     __pidataBANK0:
   116                           	opt stack 0
   117                           
   118                           ;initializer for _I2C_Send
   119  001EE2  4D                 	db	77
   120  001EE3  49                 	db	73
   121  001EE4  43                 	db	67
   122  001EE5  52                 	db	82
   123  001EE6  4F                 	db	79
   124  001EE7  43                 	db	67
   125  001EE8  48                 	db	72
   126  001EE9  49                 	db	73
   127  001EEA  50                 	db	80
   128  001EEB  3A                 	db	58
   129  001EEC  49                 	db	73
   130  001EED  32                 	db	50
   131  001EEE  43                 	db	67
   132  001EEF  5F                 	db	95
   133  001EF0  4D                 	db	77
   134  001EF1  41                 	db	65
   135  001EF2  53                 	db	83
   136  001EF3  54                 	db	84
   137  001EF4  45                 	db	69
   138  001EF5  52                 	db	82
   139  001EF6  00                 	db	0
   140                           
   141                           ;initializer for _forwardFull
   142  001EF7  01                 	db	1
   143  001EF8  81                 	db	129
   144  0000                     _ADCON0	set	4034
   145  0000                     _ADCON0bits	set	4034
   146  0000                     _ADCON1	set	4033
   147  0000                     _ADCON2	set	4032
   148  0000                     _ADRESH	set	4036
   149  0000                     _ADRESL	set	4035
   150  0000                     _INTCON2bits	set	4081
   151  0000                     _INTCONbits	set	4082
   152  0000                     _IPR1bits	set	3999
   153  0000                     _LATB	set	3978
   154  0000                     _LATBbits	set	3978
   155  0000                     _LATDbits	set	3980
   156  0000                     _OSCCON	set	4051
   157  0000                     _OSCCONbits	set	4051
   158  0000                     _OSCTUNEbits	set	3995
   159  0000                     _PIE1bits	set	3997
   160  0000                     _PIR1bits	set	3998
   161  0000                     _RCONbits	set	4048
   162  0000                     _RCREG	set	4014
   163  0000                     _RCSTA	set	4011
   164  0000                     _RCSTAbits	set	4011
   165  0000                     _SPBRG	set	4015
   166  0000                     _SPBRGH	set	4016
   167  0000                     _SSP1ADD	set	4040
   168  0000                     _SSP1CON1	set	4038
   169  0000                     _SSP1CON1bits	set	4038
   170  0000                     _SSP1CON2	set	4037
   171  0000                     _SSP1CON2bits	set	4037
   172  0000                     _SSP1STATbits	set	4039
   173  0000                     _SSPADD	set	4040
   174  0000                     _SSPBUF	set	4041
   175  0000                     _SSPCON1	set	4038
   176  0000                     _SSPCON1bits	set	4038
   177  0000                     _SSPCON2	set	4037
   178  0000                     _SSPCON2bits	set	4037
   179  0000                     _SSPSTAT	set	4039
   180  0000                     _SSPSTATbits	set	4039
   181  0000                     _T0CON	set	4053
   182  0000                     _T0CONbits	set	4053
   183  0000                     _TMR0H	set	4055
   184  0000                     _TMR0L	set	4054
   185  0000                     _TMR1H	set	4047
   186  0000                     _TMR1L	set	4046
   187  0000                     _TRISB	set	3987
   188  0000                     _TRISCbits	set	3988
   189  0000                     _TRISDbits	set	3989
   190  0000                     _TXREG	set	4013
   191  0000                     _TXSTA	set	4012
   192  0000                     _TXSTAbits	set	4012
   193                           
   194                           	psect	nvCOMRAM
   195  000061                     __pnvCOMRAM:
   196                           	opt stack 0
   197  000061                     _ic_ptr:
   198                           	opt stack 0
   199  000061                     	ds	2
   200                           
   201                           	psect	nvBANK0
   202  0000F5                     __pnvBANK0:
   203                           	opt stack 0
   204  0000F5                     _uc_ptr:
   205                           	opt stack 0
   206  0000F5                     	ds	2
   207                           
   208                           ; #config settings
   209  0000                     
   210                           	psect	cinit
   211  001724                     __pcinit:
   212                           	opt stack 0
   213  001724                     start_initialization:
   214                           	opt stack 0
   215  001724                     __initialization:
   216                           	opt stack 0
   217                           
   218                           ; Clear objects allocated to BANK2 (54 bytes)
   219  001724  EE02  F053         	lfsr	0,__pbssBANK2
   220  001728  0E36               	movlw	54
   221  00172A                     clear_0:
   222  00172A  6AEE               	clrf	postinc0,c
   223  00172C  06E8               	decf	wreg,f,c
   224  00172E  E1FD               	bnz	clear_0
   225                           
   226                           ; Clear objects allocated to BANK1 (163 bytes)
   227  001730  EE01  F000         	lfsr	0,__pbssBANK1
   228  001734  0EA3               	movlw	163
   229  001736                     clear_1:
   230  001736  6AEE               	clrf	postinc0,c
   231  001738  06E8               	decf	wreg,f,c
   232  00173A  E1FD               	bnz	clear_1
   233                           
   234                           ; Clear objects allocated to BANK0 (36 bytes)
   235  00173C  EE00  F0BA         	lfsr	0,__pbssBANK0
   236  001740  0E24               	movlw	36
   237  001742                     clear_2:
   238  001742  6AEE               	clrf	postinc0,c
   239  001744  06E8               	decf	wreg,f,c
   240  001746  E1FD               	bnz	clear_2
   241                           
   242                           ; Clear objects allocated to COMRAM (38 bytes)
   243  001748  EE00  F02D         	lfsr	0,__pbssCOMRAM
   244  00174C  0E26               	movlw	38
   245  00174E                     clear_3:
   246  00174E  6AEE               	clrf	postinc0,c
   247  001750  06E8               	decf	wreg,f,c
   248  001752  E1FD               	bnz	clear_3
   249                           
   250                           ; Initialize objects allocated to BANK0 (23 bytes)
   251                           ; load TBLPTR registers with __pidataBANK0
   252  001754  0EE2               	movlw	low __pidataBANK0
   253  001756  6EF6               	movwf	tblptrl,c
   254  001758  0E1E               	movlw	high __pidataBANK0
   255  00175A  6EF7               	movwf	tblptrh,c
   256  00175C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   257  00175E  6EF8               	movwf	tblptru,c
   258  001760  EE00  F0DE         	lfsr	0,__pdataBANK0
   259  001764  EE10 F017          	lfsr	1,23
   260  001768                     copy_data0:
   261  001768  0009               	tblrd		*+
   262  00176A  CFF5 FFEE          	movff	tablat,postinc0
   263  00176E  50E5               	movf	postdec1,w,c
   264  001770  50E1               	movf	fsr1l,w,c
   265  001772  E1FA               	bnz	copy_data0
   266                           
   267                           ; Initialize objects allocated to COMRAM (14 bytes)
   268                           ; load TBLPTR registers with __pidataCOMRAM
   269  001774  0EA0               	movlw	low __pidataCOMRAM
   270  001776  6EF6               	movwf	tblptrl,c
   271  001778  0E1F               	movlw	high __pidataCOMRAM
   272  00177A  6EF7               	movwf	tblptrh,c
   273  00177C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   274  00177E  6EF8               	movwf	tblptru,c
   275  001780  EE00  F053         	lfsr	0,__pdataCOMRAM
   276  001784  EE10 F00E          	lfsr	1,14
   277  001788                     copy_data1:
   278  001788  0009               	tblrd		*+
   279  00178A  CFF5 FFEE          	movff	tablat,postinc0
   280  00178E  50E5               	movf	postdec1,w,c
   281  001790  50E1               	movf	fsr1l,w,c
   282  001792  E1FA               	bnz	copy_data1
   283  001794                     end_of_initialization:
   284                           	opt stack 0
   285  001794                     __end_of__initialization:
   286                           	opt stack 0
   287  001794  0E00               	movlw	low (__Lmediumconst shr (0+16))
   288  001796  6EF8               	movwf	tblptru,c
   289  001798  0100               	movlb	0
   290  00179A  EFF0  F002         	goto	_main	;jump to C main() function
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           tblptrl	equ	0xFF6
   294                           tablat	equ	0xFF5
   295                           postinc0	equ	0xFEE
   296                           wreg	equ	0xFE8
   297                           postdec1	equ	0xFE5
   298                           fsr1l	equ	0xFE1
   299                           
   300                           	psect	bssCOMRAM
   301  00002D                     __pbssCOMRAM:
   302                           	opt stack 0
   303  00002D                     _adc_index:
   304                           	opt stack 0
   305  00002D                     	ds	2
   306  00002F                     _arrayPlaceHolder:
   307                           	opt stack 0
   308  00002F                     	ds	2
   309  000031                     _i2c_q:
   310                           	opt stack 0
   311  000031                     	ds	2
   312  000033                     _messages_lost:
   313                           	opt stack 0
   314  000033                     	ds	2
   315  000035                     _responding:
   316                           	opt stack 0
   317  000035                     	ds	2
   318  000037                     _semaphore:
   319                           	opt stack 0
   320  000037                     	ds	2
   321  000039                     _sensor_count:
   322                           	opt stack 0
   323  000039                     	ds	2
   324  00003B                     _start_stop:
   325                           	opt stack 0
   326  00003B                     	ds	2
   327  00003D                     _ticks_left:
   328                           	opt stack 0
   329  00003D                     	ds	2
   330  00003F                     _ticks_left_C:
   331                           	opt stack 0
   332  00003F                     	ds	2
   333  000041                     _ticks_right:
   334                           	opt stack 0
   335  000041                     	ds	2
   336  000043                     _ticks_right_C:
   337                           	opt stack 0
   338  000043                     	ds	2
   339  000045                     _ADCValue:
   340                           	opt stack 0
   341  000045                     	ds	1
   342  000046                     _USART_Status:
   343                           	opt stack 0
   344  000046                     	ds	1
   345  000047                     _add1:
   346                           	opt stack 0
   347  000047                     	ds	1
   348  000048                     _data:
   349                           	opt stack 0
   350  000048                     	ds	1
   351  000049                     _length:
   352                           	opt stack 0
   353  000049                     	ds	1
   354  00004A                     _mode:
   355                           	opt stack 0
   356  00004A                     	ds	1
   357  00004B                     _motor_state:
   358                           	opt stack 0
   359  00004B                     	ds	1
   360  00004C                     _slave_address:
   361                           	opt stack 0
   362  00004C                     	ds	1
   363  00004D                     _slew:
   364                           	opt stack 0
   365  00004D                     	ds	1
   366  00004E                     _status:
   367                           	opt stack 0
   368  00004E                     	ds	1
   369  00004F                     _sync_mode:
   370                           	opt stack 0
   371  00004F                     	ds	1
   372  000050                     _timer2_extender:
   373                           	opt stack 0
   374  000050                     	ds	1
   375  000051                     _w:
   376                           	opt stack 0
   377  000051                     	ds	1
   378  000052                     _stop:
   379                           	opt stack 0
   380  000052                     	ds	1
   381                           tblptru	equ	0xFF8
   382                           tblptrh	equ	0xFF7
   383                           tblptrl	equ	0xFF6
   384                           tablat	equ	0xFF5
   385                           postinc0	equ	0xFEE
   386                           wreg	equ	0xFE8
   387                           postdec1	equ	0xFE5
   388                           fsr1l	equ	0xFE1
   389                           
   390                           	psect	dataCOMRAM
   391  000053                     __pdataCOMRAM:
   392                           	opt stack 0
   393  000053                     _sendingPlaceHolder:
   394                           	opt stack 0
   395  000053                     	ds	2
   396  000055                     _back:
   397                           	opt stack 0
   398  000055                     	ds	2
   399  000057                     _forwardHalf:
   400                           	opt stack 0
   401  000057                     	ds	2
   402  000059                     _forwardSlow:
   403                           	opt stack 0
   404  000059                     	ds	2
   405  00005B                     _left:
   406                           	opt stack 0
   407  00005B                     	ds	2
   408  00005D                     _right:
   409                           	opt stack 0
   410  00005D                     	ds	2
   411  00005F                     _left2:
   412                           	opt stack 0
   413  00005F                     	ds	1
   414  000060                     _right2:
   415                           	opt stack 0
   416  000060                     	ds	1
   417                           tblptru	equ	0xFF8
   418                           tblptrh	equ	0xFF7
   419                           tblptrl	equ	0xFF6
   420                           tablat	equ	0xFF5
   421                           postinc0	equ	0xFEE
   422                           wreg	equ	0xFE8
   423                           postdec1	equ	0xFE5
   424                           fsr1l	equ	0xFE1
   425                           
   426                           	psect	bssBANK0
   427  0000BA                     __pbssBANK0:
   428                           	opt stack 0
   429  0000BA                     _I2C_Recv:
   430                           	opt stack 0
   431  0000BA                     	ds	21
   432  0000CF                     _i:
   433                           	opt stack 0
   434  0000CF                     	ds	2
   435  0000D1                     my_i2c_master@ic_ptr:
   436                           	opt stack 0
   437  0000D1                     	ds	2
   438  0000D3                     _MQ_Main_Willing_to_block:
   439                           	opt stack 0
   440  0000D3                     	ds	1
   441  0000D4                     _ADCArray:
   442                           	opt stack 0
   443  0000D4                     	ds	10
   444                           tblptru	equ	0xFF8
   445                           tblptrh	equ	0xFF7
   446                           tblptrl	equ	0xFF6
   447                           tablat	equ	0xFF5
   448                           postinc0	equ	0xFEE
   449                           wreg	equ	0xFE8
   450                           postdec1	equ	0xFE5
   451                           fsr1l	equ	0xFE1
   452                           
   453                           	psect	dataBANK0
   454  0000DE                     __pdataBANK0:
   455                           	opt stack 0
   456  0000DE                     _I2C_Send:
   457                           	opt stack 0
   458  0000DE                     	ds	21
   459  0000F3                     _forwardFull:
   460                           	opt stack 0
   461  0000F3                     	ds	2
   462                           tblptru	equ	0xFF8
   463                           tblptrh	equ	0xFF7
   464                           tblptrl	equ	0xFF6
   465                           tablat	equ	0xFF5
   466                           postinc0	equ	0xFEE
   467                           wreg	equ	0xFE8
   468                           postdec1	equ	0xFE5
   469                           fsr1l	equ	0xFE1
   470                           
   471                           	psect	bssBANK1
   472  000100                     __pbssBANK1:
   473                           	opt stack 0
   474  000100                     _i2cMstrMsgState:
   475                           	opt stack 0
   476  000100                     	ds	1
   477  000101                     _FromMainLow_MQ:
   478                           	opt stack 0
   479  000101                     	ds	54
   480  000137                     _ToMainHigh_MQ:
   481                           	opt stack 0
   482  000137                     	ds	54
   483  00016D                     _ToMainLow_MQ:
   484                           	opt stack 0
   485  00016D                     	ds	54
   486                           tblptru	equ	0xFF8
   487                           tblptrh	equ	0xFF7
   488                           tblptrl	equ	0xFF6
   489                           tablat	equ	0xFF5
   490                           postinc0	equ	0xFEE
   491                           wreg	equ	0xFE8
   492                           postdec1	equ	0xFE5
   493                           fsr1l	equ	0xFE1
   494                           
   495                           	psect	bssBANK2
   496  000253                     __pbssBANK2:
   497                           	opt stack 0
   498  000253                     _FromMainHigh_MQ:
   499                           	opt stack 0
   500  000253                     	ds	54
   501                           tblptru	equ	0xFF8
   502                           tblptrh	equ	0xFF7
   503                           tblptrl	equ	0xFF6
   504                           tablat	equ	0xFF5
   505                           postinc0	equ	0xFEE
   506                           wreg	equ	0xFE8
   507                           postdec1	equ	0xFE5
   508                           fsr1l	equ	0xFE1
   509                           
   510                           	psect	cstackBANK2
   511  000200                     __pcstackBANK2:
   512                           	opt stack 0
   513  000200                     main@last_reg_recvd:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x0
   517  000200                     	ds	1
   518  000201                     main@uthread_data:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x1
   522  000201                     	ds	2
   523  000203                     main@msgbuffer:
   524                           	opt stack 0
   525                           
   526                           ; 11 bytes @ 0x3
   527  000203                     	ds	11
   528  00020E                     main@average:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0xE
   532  00020E                     	ds	2
   533  000210                     main@movingtest:
   534                           	opt stack 0
   535                           
   536                           ; 1 bytes @ 0x10
   537  000210                     	ds	1
   538  000211                     main@i:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x11
   542  000211                     	ds	2
   543  000213                     main@length_1452:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0x13
   547  000213                     	ds	2
   548  000215                     main@t1thread_data:
   549                           	opt stack 0
   550                           
   551                           ; 2 bytes @ 0x15
   552  000215                     	ds	2
   553  000217                     main@t0thread_data:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0x17
   557  000217                     	ds	2
   558  000219                     main@msgtype:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x19
   562  000219                     	ds	1
   563  00021A                     main@length:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0x1A
   567  00021A                     	ds	1
   568  00021B                     main@uc:
   569                           	opt stack 0
   570                           
   571                           ; 28 bytes @ 0x1B
   572  00021B                     	ds	28
   573  000237                     main@ic:
   574                           	opt stack 0
   575                           
   576                           ; 28 bytes @ 0x37
   577  000237                     	ds	28
   578                           tblptru	equ	0xFF8
   579                           tblptrh	equ	0xFF7
   580                           tblptrl	equ	0xFF6
   581                           tablat	equ	0xFF5
   582                           postinc0	equ	0xFEE
   583                           wreg	equ	0xFE8
   584                           postdec1	equ	0xFE5
   585                           fsr1l	equ	0xFE1
   586                           
   587                           	psect	cstackBANK1
   588  0001A3                     __pcstackBANK1:
   589                           	opt stack 0
   590  0001A3                     ?_in_high_int:
   591                           	opt stack 0
   592  0001A3                     ?___awdiv:
   593                           	opt stack 0
   594  0001A3                     ?___lwmod:
   595                           	opt stack 0
   596  0001A3                     i2c_configure_slave@addr:
   597                           	opt stack 0
   598  0001A3                     i2c_master_recv@data:
   599                           	opt stack 0
   600  0001A3                     OpenADC@config2:
   601                           	opt stack 0
   602  0001A3                     OpenTimer0@config:
   603                           	opt stack 0
   604  0001A3                     Delay1KTCYx@unit:
   605                           	opt stack 0
   606  0001A3                     uart_lthread@uptr:
   607                           	opt stack 0
   608  0001A3                     init_timer1_lthread@tptr:
   609                           	opt stack 0
   610  0001A3                     init_timer0_lthread@tptr:
   611                           	opt stack 0
   612  0001A3                     init_uart_recv@uc:
   613                           	opt stack 0
   614  0001A3                     init_i2c@ic:
   615                           	opt stack 0
   616  0001A3                     init_queue@qptr:
   617                           	opt stack 0
   618  0001A3                     check_msg@qptr:
   619                           	opt stack 0
   620  0001A3                     OpenUSART@spbrg:
   621                           	opt stack 0
   622  0001A3                     ___awdiv@dividend:
   623                           	opt stack 0
   624  0001A3                     ___lwmod@dividend:
   625                           	opt stack 0
   626  0001A3                     memcpy@d1:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0x0
   630  0001A3                     	ds	1
   631  0001A4                     i2c_master_recv@slave_address:
   632                           	opt stack 0
   633  0001A4                     OpenADC@portconfig:
   634                           	opt stack 0
   635                           
   636                           ; 1 bytes @ 0x1
   637  0001A4                     	ds	1
   638  0001A5                     ??_OpenUSART:
   639  0001A5                     ??_i2c_master_recv:
   640  0001A5                     ??_OpenADC:
   641  0001A5                     ??_init_queue:
   642  0001A5                     ??_check_msg:
   643  0001A5                     ?_in_low_int:
   644                           	opt stack 0
   645  0001A5                     uart_lthread@msgtype:
   646                           	opt stack 0
   647  0001A5                     ___awdiv@divisor:
   648                           	opt stack 0
   649  0001A5                     ___lwmod@divisor:
   650                           	opt stack 0
   651  0001A5                     memcpy@s1:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x2
   655  0001A5                     	ds	1
   656  0001A6                     init_queue@i:
   657                           	opt stack 0
   658  0001A6                     i2c_master_recv@length:
   659                           	opt stack 0
   660                           
   661                           ; 1 bytes @ 0x3
   662  0001A6                     	ds	1
   663  0001A7                     ??_init_queues:
   664  0001A7                     ??___awdiv:
   665  0001A7                     ??___lwmod:
   666  0001A7                     ?_in_main:
   667                           	opt stack 0
   668  0001A7                     OpenADC@config:
   669                           	opt stack 0
   670  0001A7                     uart_lthread@length:
   671                           	opt stack 0
   672  0001A7                     memcpy@n:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0x4
   676  0001A7                     	ds	1
   677  0001A8                     ??_init_ADC:
   678  0001A8                     OpenUSART@config:
   679                           	opt stack 0
   680  0001A8                     ___awdiv@counter:
   681                           	opt stack 0
   682  0001A8                     ___lwmod@counter:
   683                           	opt stack 0
   684                           
   685                           ; 1 bytes @ 0x5
   686  0001A8                     	ds	1
   687  0001A9                     ??_block_on_To_msgqueues:
   688  0001A9                     ___awdiv@sign:
   689                           	opt stack 0
   690  0001A9                     uart_lthread@msgbuffer:
   691                           	opt stack 0
   692  0001A9                     memcpy@d:
   693                           	opt stack 0
   694                           
   695                           ; 2 bytes @ 0x6
   696  0001A9                     	ds	1
   697  0001AA                     init_ADC@ADCValue:
   698                           	opt stack 0
   699  0001AA                     ___awdiv@quotient:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x7
   703  0001AA                     	ds	1
   704  0001AB                     memcpy@s:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x8
   708  0001AB                     	ds	2
   709  0001AD                     send_msg@qptr:
   710                           	opt stack 0
   711  0001AD                     recv_msg@qptr:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0xA
   715  0001AD                     	ds	2
   716  0001AF                     send_msg@length:
   717                           	opt stack 0
   718  0001AF                     recv_msg@maxlength:
   719                           	opt stack 0
   720                           
   721                           ; 1 bytes @ 0xC
   722  0001AF                     	ds	1
   723  0001B0                     send_msg@msgtype:
   724                           	opt stack 0
   725  0001B0                     recv_msg@msgtype:
   726                           	opt stack 0
   727                           
   728                           ; 2 bytes @ 0xD
   729  0001B0                     	ds	1
   730  0001B1                     send_msg@data:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0xE
   734  0001B1                     	ds	1
   735  0001B2                     recv_msg@data:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0xF
   739  0001B2                     	ds	1
   740  0001B3                     ??_send_msg:
   741                           
   742                           ; 0 bytes @ 0x10
   743  0001B3                     	ds	1
   744  0001B4                     ??_recv_msg:
   745  0001B4                     send_msg@tlength:
   746                           	opt stack 0
   747                           
   748                           ; 2 bytes @ 0x11
   749  0001B4                     	ds	2
   750  0001B6                     send_msg@slot:
   751                           	opt stack 0
   752  0001B6                     recv_msg@slot:
   753                           	opt stack 0
   754                           
   755                           ; 1 bytes @ 0x13
   756  0001B6                     	ds	1
   757  0001B7                     send_msg@qmsg:
   758                           	opt stack 0
   759  0001B7                     recv_msg@tlength:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x14
   763  0001B7                     	ds	2
   764  0001B9                     ToMainLow_sendmsg@msgtype:
   765                           	opt stack 0
   766  0001B9                     FromMainHigh_sendmsg@msgtype:
   767                           	opt stack 0
   768  0001B9                     recv_msg@qmsg:
   769                           	opt stack 0
   770                           
   771                           ; 2 bytes @ 0x16
   772  0001B9                     	ds	1
   773  0001BA                     ToMainLow_sendmsg@data:
   774                           	opt stack 0
   775  0001BA                     FromMainHigh_sendmsg@data:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0x17
   779  0001BA                     	ds	1
   780  0001BB                     ToMainLow_recvmsg@msgtype:
   781                           	opt stack 0
   782  0001BB                     ToMainHigh_recvmsg@msgtype:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0x18
   786  0001BB                     	ds	1
   787  0001BC                     ToMainLow_sendmsg@length:
   788                           	opt stack 0
   789  0001BC                     FromMainHigh_sendmsg@length:
   790                           	opt stack 0
   791                           
   792                           ; 1 bytes @ 0x19
   793  0001BC                     	ds	1
   794  0001BD                     timer1_lthread@tptr:
   795                           	opt stack 0
   796  0001BD                     timer0_lthread@tptr:
   797                           	opt stack 0
   798  0001BD                     ToMainLow_recvmsg@data:
   799                           	opt stack 0
   800  0001BD                     ToMainHigh_recvmsg@data:
   801                           	opt stack 0
   802                           
   803                           ; 2 bytes @ 0x1A
   804  0001BD                     	ds	2
   805  0001BF                     ToMainLow_recvmsg@maxlength:
   806                           	opt stack 0
   807  0001BF                     ToMainHigh_recvmsg@maxlength:
   808                           	opt stack 0
   809  0001BF                     timer1_lthread@msgtype:
   810                           	opt stack 0
   811  0001BF                     timer0_lthread@msgtype:
   812                           	opt stack 0
   813                           
   814                           ; 2 bytes @ 0x1C
   815  0001BF                     	ds	2
   816  0001C1                     timer1_lthread@length:
   817                           	opt stack 0
   818  0001C1                     timer0_lthread@length:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0x1E
   822  0001C1                     	ds	2
   823  0001C3                     timer1_lthread@msgbuffer:
   824                           	opt stack 0
   825  0001C3                     timer0_lthread@msgbuffer:
   826                           	opt stack 0
   827                           
   828                           ; 2 bytes @ 0x20
   829  0001C3                     	ds	2
   830  0001C5                     ??_timer1_lthread:
   831  0001C5                     ??_timer0_lthread:
   832                           
   833                           ; 0 bytes @ 0x22
   834  0001C5                     	ds	1
   835  0001C6                     timer1_lthread@retval:
   836                           	opt stack 0
   837  0001C6                     timer0_lthread@retval:
   838                           	opt stack 0
   839                           
   840                           ; 1 bytes @ 0x23
   841  0001C6                     	ds	1
   842  0001C7                     ??_main:
   843                           
   844                           ; 0 bytes @ 0x24
   845  0001C7                     	ds	2
   846                           tblptru	equ	0xFF8
   847                           tblptrh	equ	0xFF7
   848                           tblptrl	equ	0xFF6
   849                           tablat	equ	0xFF5
   850                           postinc0	equ	0xFEE
   851                           wreg	equ	0xFE8
   852                           postdec1	equ	0xFE5
   853                           fsr1l	equ	0xFE1
   854                           
   855                           	psect	cstackBANK0
   856  000080                     __pcstackBANK0:
   857                           	opt stack 0
   858  000080                     ?_SensorValues:
   859                           	opt stack 0
   860  000080                     ?_ReadADC:
   861                           	opt stack 0
   862  000080                     handle_start@data_read:
   863                           	opt stack 0
   864  000080                     start_i2c_slave_reply@msg:
   865                           	opt stack 0
   866  000080                     WriteTimer0@timer0:
   867                           	opt stack 0
   868  000080                     i2memcpy@d1:
   869                           	opt stack 0
   870                           
   871                           ; 2 bytes @ 0x0
   872  000080                     	ds	2
   873  000082                     ??_SensorValues:
   874  000082                     ??_start_i2c_slave_reply:
   875  000082                     WriteTimer0@timer:
   876                           	opt stack 0
   877  000082                     i2memcpy@s1:
   878                           	opt stack 0
   879                           
   880                           ; 2 bytes @ 0x2
   881  000082                     	ds	2
   882  000084                     ??_timer0_int_handler:
   883  000084                     start_i2c_slave_reply@length:
   884                           	opt stack 0
   885  000084                     i2memcpy@n:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0x4
   889  000084                     	ds	2
   890  000086                     i2memcpy@d:
   891                           	opt stack 0
   892                           
   893                           ; 2 bytes @ 0x6
   894  000086                     	ds	2
   895  000088                     i2memcpy@s:
   896                           	opt stack 0
   897                           
   898                           ; 2 bytes @ 0x8
   899  000088                     	ds	2
   900  00008A                     i2send_msg@qptr:
   901                           	opt stack 0
   902                           
   903                           ; 2 bytes @ 0xA
   904  00008A                     	ds	2
   905  00008C                     i2send_msg@length:
   906                           	opt stack 0
   907                           
   908                           ; 1 bytes @ 0xC
   909  00008C                     	ds	1
   910  00008D                     i2send_msg@msgtype:
   911                           	opt stack 0
   912                           
   913                           ; 1 bytes @ 0xD
   914  00008D                     	ds	1
   915  00008E                     i2send_msg@data:
   916                           	opt stack 0
   917                           
   918                           ; 2 bytes @ 0xE
   919  00008E                     	ds	2
   920  000090                     ??i2_send_msg:
   921                           
   922                           ; 0 bytes @ 0x10
   923  000090                     	ds	1
   924  000091                     i2send_msg@tlength:
   925                           	opt stack 0
   926                           
   927                           ; 2 bytes @ 0x11
   928  000091                     	ds	2
   929  000093                     i2send_msg@slot:
   930                           	opt stack 0
   931                           
   932                           ; 1 bytes @ 0x13
   933  000093                     	ds	1
   934  000094                     i2send_msg@qmsg:
   935                           	opt stack 0
   936                           
   937                           ; 2 bytes @ 0x14
   938  000094                     	ds	2
   939  000096                     ToMainHigh_sendmsg@msgtype:
   940                           	opt stack 0
   941                           
   942                           ; 1 bytes @ 0x16
   943  000096                     	ds	1
   944  000097                     ToMainHigh_sendmsg@data:
   945                           	opt stack 0
   946                           
   947                           ; 2 bytes @ 0x17
   948  000097                     	ds	2
   949  000099                     ToMainHigh_sendmsg@length:
   950                           	opt stack 0
   951                           
   952                           ; 1 bytes @ 0x19
   953  000099                     	ds	1
   954  00009A                     ??_i2c_int_handler:
   955                           
   956                           ; 0 bytes @ 0x1A
   957  00009A                     	ds	1
   958  00009B                     i2c_int_handler@length:
   959                           	opt stack 0
   960                           
   961                           ; 2 bytes @ 0x1B
   962  00009B                     	ds	2
   963  00009D                     i2c_int_handler@msgbuffer:
   964                           	opt stack 0
   965                           
   966                           ; 2 bytes @ 0x1D
   967  00009D                     	ds	2
   968  00009F                     i2c_int_handler@error_buf:
   969                           	opt stack 0
   970                           
   971                           ; 3 bytes @ 0x1F
   972  00009F                     	ds	3
   973  0000A2                     i2c_int_handler@data_written:
   974                           	opt stack 0
   975                           
   976                           ; 1 bytes @ 0x22
   977  0000A2                     	ds	1
   978  0000A3                     i2c_int_handler@overrun_error:
   979                           	opt stack 0
   980                           
   981                           ; 1 bytes @ 0x23
   982  0000A3                     	ds	1
   983  0000A4                     i2c_int_handler@i2c_data:
   984                           	opt stack 0
   985                           
   986                           ; 1 bytes @ 0x24
   987  0000A4                     	ds	1
   988  0000A5                     i2c_int_handler@msg_to_send:
   989                           	opt stack 0
   990                           
   991                           ; 1 bytes @ 0x25
   992  0000A5                     	ds	1
   993  0000A6                     i2c_int_handler@msg_ready:
   994                           	opt stack 0
   995                           
   996                           ; 1 bytes @ 0x26
   997  0000A6                     	ds	1
   998  0000A7                     i2c_int_handler@data_read:
   999                           	opt stack 0
  1000                           
  1001                           ; 1 bytes @ 0x27
  1002  0000A7                     	ds	1
  1003  0000A8                     ??_InterruptHandlerHigh:
  1004                           
  1005                           ; 0 bytes @ 0x28
  1006  0000A8                     	ds	16
  1007  0000B8                     InterruptHandlerHigh@pureADCValue:
  1008                           	opt stack 0
  1009                           
  1010                           ; 2 bytes @ 0x38
  1011  0000B8                     	ds	2
  1012                           tblptru	equ	0xFF8
  1013                           tblptrh	equ	0xFF7
  1014                           tblptrl	equ	0xFF6
  1015                           tablat	equ	0xFF5
  1016                           postinc0	equ	0xFEE
  1017                           wreg	equ	0xFE8
  1018                           postdec1	equ	0xFE5
  1019                           fsr1l	equ	0xFE1
  1020                           
  1021                           	psect	cstackCOMRAM
  1022  000001                     __pcstackCOMRAM:
  1023                           	opt stack 0
  1024  000001                     ??_uart_recv_state:
  1025  000001                     ?_ReadTimer1:
  1026                           	opt stack 0
  1027  000001                     ReadUSART@data:
  1028                           	opt stack 0
  1029  000001                     WriteUSART@data:
  1030                           	opt stack 0
  1031  000001                     WriteTimer1@timer1:
  1032                           	opt stack 0
  1033  000001                     i1memcpy@d1:
  1034                           	opt stack 0
  1035                           
  1036                           ; 2 bytes @ 0x0
  1037  000001                     	ds	1
  1038  000002                     ??_uart_send_int_handler:
  1039                           
  1040                           ; 0 bytes @ 0x1
  1041  000002                     	ds	1
  1042  000003                     uart_recv_state@byte:
  1043                           	opt stack 0
  1044  000003                     ReadTimer1@timer:
  1045                           	opt stack 0
  1046  000003                     WriteTimer1@timer:
  1047                           	opt stack 0
  1048  000003                     i1memcpy@s1:
  1049                           	opt stack 0
  1050                           
  1051                           ; 2 bytes @ 0x2
  1052  000003                     	ds	2
  1053  000005                     ??_timer1_int_handler:
  1054  000005                     i1memcpy@n:
  1055                           	opt stack 0
  1056                           
  1057                           ; 2 bytes @ 0x4
  1058  000005                     	ds	1
  1059  000006                     timer1_int_handler@result:
  1060                           	opt stack 0
  1061                           
  1062                           ; 2 bytes @ 0x5
  1063  000006                     	ds	1
  1064  000007                     i1memcpy@d:
  1065                           	opt stack 0
  1066                           
  1067                           ; 2 bytes @ 0x6
  1068  000007                     	ds	2
  1069  000009                     i1memcpy@s:
  1070                           	opt stack 0
  1071                           
  1072                           ; 2 bytes @ 0x8
  1073  000009                     	ds	2
  1074  00000B                     i1send_msg@qptr:
  1075                           	opt stack 0
  1076                           
  1077                           ; 2 bytes @ 0xA
  1078  00000B                     	ds	2
  1079  00000D                     i1send_msg@length:
  1080                           	opt stack 0
  1081                           
  1082                           ; 1 bytes @ 0xC
  1083  00000D                     	ds	1
  1084  00000E                     i1send_msg@msgtype:
  1085                           	opt stack 0
  1086                           
  1087                           ; 1 bytes @ 0xD
  1088  00000E                     	ds	1
  1089  00000F                     i1send_msg@data:
  1090                           	opt stack 0
  1091                           
  1092                           ; 2 bytes @ 0xE
  1093  00000F                     	ds	2
  1094  000011                     ??i1_send_msg:
  1095                           
  1096                           ; 0 bytes @ 0x10
  1097  000011                     	ds	1
  1098  000012                     i1send_msg@tlength:
  1099                           	opt stack 0
  1100                           
  1101                           ; 2 bytes @ 0x11
  1102  000012                     	ds	2
  1103  000014                     i1send_msg@slot:
  1104                           	opt stack 0
  1105                           
  1106                           ; 1 bytes @ 0x13
  1107  000014                     	ds	1
  1108  000015                     i1send_msg@qmsg:
  1109                           	opt stack 0
  1110                           
  1111                           ; 2 bytes @ 0x14
  1112  000015                     	ds	2
  1113  000017                     i1ToMainLow_sendmsg@msgtype:
  1114                           	opt stack 0
  1115                           
  1116                           ; 1 bytes @ 0x16
  1117  000017                     	ds	1
  1118  000018                     i1ToMainLow_sendmsg@data:
  1119                           	opt stack 0
  1120                           
  1121                           ; 2 bytes @ 0x17
  1122  000018                     	ds	2
  1123  00001A                     i1ToMainLow_sendmsg@length:
  1124                           	opt stack 0
  1125                           
  1126                           ; 1 bytes @ 0x19
  1127  00001A                     	ds	1
  1128  00001B                     ??_uart_recv_int_handler:
  1129                           
  1130                           ; 0 bytes @ 0x1A
  1131  00001B                     	ds	1
  1132  00001C                     ??_InterruptHandlerLow:
  1133                           
  1134                           ; 0 bytes @ 0x1B
  1135  00001C                     	ds	17
  1136                           tblptru	equ	0xFF8
  1137                           tblptrh	equ	0xFF7
  1138                           tblptrl	equ	0xFF6
  1139                           tablat	equ	0xFF5
  1140                           postinc0	equ	0xFEE
  1141                           wreg	equ	0xFE8
  1142                           postdec1	equ	0xFE5
  1143                           fsr1l	equ	0xFE1
  1144                           
  1145 ;;
  1146 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1147 ;;
  1148 ;; *************** function _main *****************
  1149 ;; Defined at:
  1150 ;;		line 192 in file "../src/main.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;  i               2   17[BANK2 ] int 
  1155 ;;  average         2   14[BANK2 ] int 
  1156 ;;  length          2   19[BANK2 ] int 
  1157 ;;  ic             28   55[BANK2 ] struct __i2c_comm
  1158 ;;  uc             28   27[BANK2 ] struct __uart_comm
  1159 ;;  msgbuffer      11    3[BANK2 ] unsigned char [11]
  1160 ;;  t0thread_dat    2   23[BANK2 ] struct __timer0_thread_s
  1161 ;;  t1thread_dat    2   21[BANK2 ] struct __timer1_thread_s
  1162 ;;  uthread_data    2    1[BANK2 ] struct __uart_thread_str
  1163 ;;  length          1   26[BANK2 ] char 
  1164 ;;  msgtype         1   25[BANK2 ] unsigned char 
  1165 ;;  movingtest      1   16[BANK2 ] unsigned char 
  1166 ;;  last_reg_rec    1    0[BANK2 ] unsigned char 
  1167 ;; Return value:  Size  Location     Type
  1168 ;;		None               void
  1169 ;; Registers used:
  1170 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1176 ;;      Params:         0       0       0       0       0
  1177 ;;      Locals:         0       0       0      83       0
  1178 ;;      Temps:          0       0       2       0       0
  1179 ;;      Totals:         0       0       2      83       0
  1180 ;;Total ram usage:       85 bytes
  1181 ;; Hardware stack levels required when called:   14
  1182 ;; This function calls:
  1183 ;;		_OpenTimer0
  1184 ;;		_OpenUSART
  1185 ;;		_ToMainHigh_recvmsg
  1186 ;;		_ToMainLow_recvmsg
  1187 ;;		_ToMainLow_sendmsg
  1188 ;;		___awdiv
  1189 ;;		_block_on_To_msgqueues
  1190 ;;		_enable_interrupts
  1191 ;;		_i2c_configure_slave
  1192 ;;		_i2c_master_recv
  1193 ;;		_init_ADC
  1194 ;;		_init_i2c
  1195 ;;		_init_queues
  1196 ;;		_init_timer0_lthread
  1197 ;;		_init_timer1_lthread
  1198 ;;		_init_uart_recv
  1199 ;;		_timer0_lthread
  1200 ;;		_timer1_lthread
  1201 ;;		_uart_lthread
  1202 ;; This function is called by:
  1203 ;;		Startup code after reset
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           	psect	text0
  1208  0005E0                     __ptext0:
  1209                           	opt stack 0
  1210  0005E0                     _main:
  1211                           	opt stack 17
  1212                           
  1213                           ;main.c: 195: signed char length;
  1214                           ;main.c: 196: unsigned char msgtype;
  1215                           ;main.c: 197: unsigned char last_reg_recvd;
  1216                           ;main.c: 198: uart_comm uc;
  1217                           ;main.c: 199: i2c_comm ic;
  1218                           ;main.c: 200: unsigned char msgbuffer[10 + 1];
  1219                           ;main.c: 202: uart_thread_struct uthread_data;
  1220                           ;main.c: 203: timer1_thread_struct t1thread_data;
  1221                           ;main.c: 204: timer0_thread_struct t0thread_data;
  1222                           ;main.c: 206: unsigned char movingtest = 0;
  1223                           
  1224                           ;incstack = 0
  1225  0005E0  0101               	movlb	1	; () banked
  1226  0005E2  6FC7               	movwf	??_main& (0+255),b
  1227  0005E4  0E00               	movlw	0
  1228  0005E6  0102               	movlb	2	; () banked
  1229  0005E8  0102               	movlb	2	; () banked
  1230  0005EA  6F10               	movwf	main@movingtest& (0+255),b
  1231  0005EC  0101               	movlb	1	; () banked
  1232  0005EE  51C7               	movf	??_main& (0+255),w,b
  1233                           
  1234                           ; BSR set to: 1
  1235                           ;main.c: 213: OSCCON = 0x82;
  1236  0005F0  0E82               	movlw	130
  1237  0005F2  6ED3               	movwf	4051,c	;volatile
  1238                           
  1239                           ; BSR set to: 1
  1240                           ;main.c: 214: OSCTUNEbits.PLLEN = 0;
  1241  0005F4  9C9B               	bcf	3995,6,c	;volatile
  1242                           
  1243                           ; BSR set to: 1
  1244                           ;main.c: 232: init_uart_recv(&uc);
  1245  0005F6  0102               	movlb	2	; () banked
  1246  0005F8  0E02               	movlw	high main@uc
  1247  0005FA  0101               	movlb	1	; () banked
  1248  0005FC  0101               	movlb	1	; () banked
  1249  0005FE  6FA4               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1250  000600  0102               	movlb	2	; () banked
  1251  000602  0E1B               	movlw	low main@uc
  1252  000604  0101               	movlb	1	; () banked
  1253  000606  0101               	movlb	1	; () banked
  1254  000608  6FA3               	movwf	init_uart_recv@uc& (0+255),b
  1255  00060A  EC15  F00D         	call	_init_uart_recv	;wreg free
  1256                           
  1257                           ;main.c: 235: init_i2c(&ic);
  1258  00060E  0102               	movlb	2	; () banked
  1259  000610  0E02               	movlw	high main@ic
  1260  000612  0101               	movlb	1	; () banked
  1261  000614  0101               	movlb	1	; () banked
  1262  000616  6FA4               	movwf	(init_i2c@ic+1)& (0+255),b
  1263  000618  0102               	movlb	2	; () banked
  1264  00061A  0E37               	movlw	low main@ic
  1265  00061C  0101               	movlb	1	; () banked
  1266  00061E  0101               	movlb	1	; () banked
  1267  000620  6FA3               	movwf	init_i2c@ic& (0+255),b
  1268  000622  EC3F  F00D         	call	_init_i2c	;wreg free
  1269                           
  1270                           ;main.c: 238: init_timer1_lthread(&t1thread_data);
  1271  000626  0102               	movlb	2	; () banked
  1272  000628  0E02               	movlw	high main@t1thread_data
  1273  00062A  0101               	movlb	1	; () banked
  1274  00062C  0101               	movlb	1	; () banked
  1275  00062E  6FA4               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1276  000630  0102               	movlb	2	; () banked
  1277  000632  0E15               	movlw	low main@t1thread_data
  1278  000634  0101               	movlb	1	; () banked
  1279  000636  0101               	movlb	1	; () banked
  1280  000638  6FA3               	movwf	init_timer1_lthread@tptr& (0+255),b
  1281  00063A  EC92  F00F         	call	_init_timer1_lthread	;wreg free
  1282                           
  1283                           ;main.c: 240: init_timer0_lthread(&t0thread_data);
  1284  00063E  0102               	movlb	2	; () banked
  1285  000640  0E02               	movlw	high main@t0thread_data
  1286  000642  0101               	movlb	1	; () banked
  1287  000644  0101               	movlb	1	; () banked
  1288  000646  6FA4               	movwf	(init_timer0_lthread@tptr+1)& (0+255),b
  1289  000648  0102               	movlb	2	; () banked
  1290  00064A  0E17               	movlw	low main@t0thread_data
  1291  00064C  0101               	movlb	1	; () banked
  1292  00064E  0101               	movlb	1	; () banked
  1293  000650  6FA3               	movwf	init_timer0_lthread@tptr& (0+255),b
  1294  000652  EC9B  F00F         	call	_init_timer0_lthread	;wreg free
  1295                           
  1296                           ;main.c: 242: init_queues();
  1297  000656  EC7E  F00C         	call	_init_queues	;wreg free
  1298                           
  1299                           ;main.c: 248: TRISB = 0x0;
  1300  00065A  0E00               	movlw	0
  1301  00065C  6E93               	movwf	3987,c	;volatile
  1302                           
  1303                           ;main.c: 249: LATB = 0x0;
  1304  00065E  0E00               	movlw	0
  1305  000660  6E8A               	movwf	3978,c	;volatile
  1306                           
  1307                           ;main.c: 264: IPR1bits.TXIP = 0;
  1308  000662  989F               	bcf	3999,4,c	;volatile
  1309                           
  1310                           ;main.c: 281: enable_interrupts();
  1311  000664  ECD7  F00F         	call	_enable_interrupts	;wreg free
  1312                           
  1313                           ;main.c: 286: IPR1bits.TMR1IP = 0;
  1314  000668  909F               	bcf	3999,0,c	;volatile
  1315                           
  1316                           ;main.c: 288: IPR1bits.RCIP = 0;
  1317  00066A  9A9F               	bcf	3999,5,c	;volatile
  1318                           
  1319                           ;main.c: 290: IPR1bits.SSPIP = 1;
  1320  00066C  869F               	bsf	3999,3,c	;volatile
  1321                           
  1322                           ;main.c: 292: IPR1bits.ADIP = 1;
  1323  00066E  8C9F               	bsf	3999,6,c	;volatile
  1324                           
  1325                           ;main.c: 314: PIE1bits.SSPIE = 1;
  1326  000670  869D               	bsf	3997,3,c	;volatile
  1327                           
  1328                           ;main.c: 326: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1329                           ;main.c: 327: 0b11111111 & 0b11111111, 38);
  1330  000672  0E00               	movlw	0
  1331  000674  0101               	movlb	1	; () banked
  1332  000676  0101               	movlb	1	; () banked
  1333  000678  6FA4               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1334  00067A  0E26               	movlw	38
  1335  00067C  0101               	movlb	1	; () banked
  1336  00067E  6FA3               	movwf	OpenUSART@spbrg& (0+255),b
  1337  000680  0E7C               	movlw	124
  1338  000682  EC82  F00A         	call	_OpenUSART
  1339                           
  1340                           ;main.c: 349: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110001);
  1341  000686  0E91               	movlw	145
  1342  000688  EC26  F00F         	call	_OpenTimer0
  1343                           
  1344                           ;main.c: 351: init_ADC();
  1345  00068C  EC89  F00D         	call	_init_ADC	;wreg free
  1346                           
  1347                           ;main.c: 352: i2c_configure_slave(0x9C);
  1348  000690  0E9C               	movlw	156
  1349  000692  EC3B  F00F         	call	_i2c_configure_slave
  1350                           
  1351                           ;main.c: 404: LATBbits.LATB7 = 1;
  1352  000696  8E8A               	bsf	3978,7,c	;volatile
  1353  000698                     l4677:
  1354                           
  1355                           ;main.c: 425: block_on_To_msgqueues();
  1356  000698  EC3D  F009         	call	_block_on_To_msgqueues	;wreg free
  1357                           
  1358                           ;main.c: 432: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1359  00069C  0102               	movlb	2	; () banked
  1360  00069E  0E02               	movlw	high main@msgtype
  1361  0006A0  0101               	movlb	1	; () banked
  1362  0006A2  0101               	movlb	1	; () banked
  1363  0006A4  6FBC               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1364  0006A6  0102               	movlb	2	; () banked
  1365  0006A8  0E19               	movlw	low main@msgtype
  1366  0006AA  0101               	movlb	1	; () banked
  1367  0006AC  0101               	movlb	1	; () banked
  1368  0006AE  6FBB               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1369  0006B0  0102               	movlb	2	; () banked
  1370  0006B2  0E02               	movlw	high main@msgbuffer
  1371  0006B4  0101               	movlb	1	; () banked
  1372  0006B6  0101               	movlb	1	; () banked
  1373  0006B8  6FBE               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1374  0006BA  0102               	movlb	2	; () banked
  1375  0006BC  0E03               	movlw	low main@msgbuffer
  1376  0006BE  0101               	movlb	1	; () banked
  1377  0006C0  0101               	movlb	1	; () banked
  1378  0006C2  6FBD               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1379  0006C4  0E0A               	movlw	10
  1380  0006C6  EC12  F00E         	call	_ToMainHigh_recvmsg
  1381  0006CA  0102               	movlb	2	; () banked
  1382  0006CC  0102               	movlb	2	; () banked
  1383  0006CE  6F1A               	movwf	main@length& (0+255),b
  1384                           
  1385                           ; BSR set to: 2
  1386                           ;main.c: 433: if (length < 0) {
  1387  0006D0  0102               	movlb	2	; () banked
  1388  0006D2  0102               	movlb	2	; () banked
  1389  0006D4  BF1A               	btfsc	main@length& (0+255),7,b
  1390  0006D6  D0E3               	goto	l4717
  1391  0006D8  D0CF               	goto	l4715
  1392  0006DA                     l4685:
  1393                           
  1394                           ; BSR set to: 2
  1395                           ;main.c: 441: {
  1396                           ;main.c: 442: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1397  0006DA  0102               	movlb	2	; () banked
  1398  0006DC  0E02               	movlw	high main@t0thread_data
  1399  0006DE  0101               	movlb	1	; () banked
  1400  0006E0  0101               	movlb	1	; () banked
  1401  0006E2  6FBE               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1402  0006E4  0102               	movlb	2	; () banked
  1403  0006E6  0E17               	movlw	low main@t0thread_data
  1404  0006E8  0101               	movlb	1	; () banked
  1405  0006EA  0101               	movlb	1	; () banked
  1406  0006EC  6FBD               	movwf	timer0_lthread@tptr& (0+255),b
  1407  0006EE  0102               	movlb	2	; () banked
  1408  0006F0  0101               	movlb	1	; () banked
  1409  0006F2  C219  F1BF         	movff	main@msgtype,timer0_lthread@msgtype
  1410  0006F6  0101               	movlb	1	; () banked
  1411  0006F8  0101               	movlb	1	; () banked
  1412  0006FA  6BC0               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1413  0006FC  0102               	movlb	2	; () banked
  1414  0006FE  0102               	movlb	2	; () banked
  1415  000700  511A               	movf	main@length& (0+255),w,b
  1416  000702  0101               	movlb	1	; () banked
  1417  000704  0101               	movlb	1	; () banked
  1418  000706  6FC1               	movwf	timer0_lthread@length& (0+255),b
  1419  000708  0101               	movlb	1	; () banked
  1420  00070A  6BC2               	clrf	(timer0_lthread@length+1)& (0+255),b
  1421  00070C  0101               	movlb	1	; () banked
  1422  00070E  BFC1               	btfsc	timer0_lthread@length& (0+255),7,b
  1423  000710  07C2               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1424  000712  0102               	movlb	2	; () banked
  1425  000714  0E02               	movlw	high main@msgbuffer
  1426  000716  0101               	movlb	1	; () banked
  1427  000718  0101               	movlb	1	; () banked
  1428  00071A  6FC4               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1429  00071C  0102               	movlb	2	; () banked
  1430  00071E  0E03               	movlw	low main@msgbuffer
  1431  000720  0101               	movlb	1	; () banked
  1432  000722  0101               	movlb	1	; () banked
  1433  000724  6FC3               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1434  000726  EC45  F00C         	call	_timer0_lthread	;wreg free
  1435                           
  1436                           ;main.c: 443: break;
  1437  00072A  D0B9               	goto	l4717
  1438  00072C                     l374:
  1439                           
  1440                           ; BSR set to: 2
  1441                           ;main.c: 508: {
  1442                           ;main.c: 511: last_reg_recvd = msgbuffer[0];
  1443  00072C  C203  F200         	movff	main@msgbuffer,main@last_reg_recvd
  1444                           
  1445                           ;main.c: 512: break;
  1446  000730  D0B6               	goto	l4717
  1447  000732                     l4687:
  1448                           
  1449                           ; BSR set to: 2
  1450                           ;main.c: 554: {
  1451                           ;main.c: 555: if ( i2cMstrMsgState == 1 ) {
  1452  000732  0101               	movlb	1	; () banked
  1453  000734  0101               	movlb	1	; () banked
  1454  000736  0500               	decf	_i2cMstrMsgState& (0+255),w,b
  1455  000738  A4D8               	btfss	status,2,c
  1456  00073A  D086               	goto	l4711
  1457                           
  1458                           ; BSR set to: 1
  1459                           ;main.c: 565: int length = msgbuffer[0];
  1460  00073C  0102               	movlb	2	; () banked
  1461  00073E  0102               	movlb	2	; () banked
  1462  000740  C203  F213         	movff	main@msgbuffer,main@length_1452
  1463  000744  0102               	movlb	2	; () banked
  1464  000746  0102               	movlb	2	; () banked
  1465  000748  6B14               	clrf	(main@length_1452+1)& (0+255),b
  1466                           
  1467                           ; BSR set to: 2
  1468                           ;main.c: 566: if ( length > 0 ) {
  1469  00074A  0102               	movlb	2	; () banked
  1470  00074C  0102               	movlb	2	; () banked
  1471  00074E  5114               	movf	(main@length_1452+1)& (0+255),w,b
  1472  000750  0A80               	xorlw	128
  1473  000752  0F80               	addlw	-128
  1474  000754  0E01               	movlw	1
  1475  000756  B4D8               	btfsc	status,2,c
  1476  000758  5D13               	subwf	main@length_1452& (0+255),w,b
  1477  00075A  A0D8               	btfss	status,0,c
  1478  00075C  D0A0               	goto	l4717
  1479                           
  1480                           ; BSR set to: 2
  1481                           ;main.c: 567: int i;
  1482                           ;main.c: 568: int average;
  1483                           ;main.c: 569: for (i=0; i < length; i++)
  1484  00075E  0E00               	movlw	0
  1485  000760  0102               	movlb	2	; () banked
  1486  000762  0102               	movlb	2	; () banked
  1487  000764  6F12               	movwf	(main@i+1)& (0+255),b
  1488  000766  0E00               	movlw	0
  1489  000768  0102               	movlb	2	; () banked
  1490  00076A  6F11               	movwf	main@i& (0+255),b
  1491  00076C  D01B               	goto	l4699
  1492  00076E                     l4695:
  1493                           
  1494                           ;main.c: 570: average += msgbuffer[i];
  1495  00076E  0102               	movlb	2	; () banked
  1496  000770  0E03               	movlw	low main@msgbuffer
  1497  000772  0102               	movlb	2	; () banked
  1498  000774  0102               	movlb	2	; () banked
  1499  000776  2511               	addwf	main@i& (0+255),w,b
  1500  000778  6ED9               	movwf	fsr2l,c
  1501  00077A  0102               	movlb	2	; () banked
  1502  00077C  0E02               	movlw	high main@msgbuffer
  1503  00077E  0102               	movlb	2	; () banked
  1504  000780  0102               	movlb	2	; () banked
  1505  000782  2112               	addwfc	(main@i+1)& (0+255),w,b
  1506  000784  6EDA               	movwf	fsr2h,c
  1507  000786  50DF               	movf	indf2,w,c
  1508  000788  0101               	movlb	1	; () banked
  1509  00078A  6FC7               	movwf	??_main& (0+255),b
  1510  00078C  0101               	movlb	1	; () banked
  1511  00078E  51C7               	movf	??_main& (0+255),w,b
  1512  000790  0102               	movlb	2	; () banked
  1513  000792  0102               	movlb	2	; () banked
  1514  000794  270E               	addwf	main@average& (0+255),f,b
  1515  000796  0E00               	movlw	0
  1516  000798  0102               	movlb	2	; () banked
  1517  00079A  230F               	addwfc	(main@average+1)& (0+255),f,b
  1518                           
  1519                           ; BSR set to: 2
  1520  00079C  0102               	movlb	2	; () banked
  1521  00079E  0102               	movlb	2	; () banked
  1522  0007A0  4B11               	infsnz	main@i& (0+255),f,b
  1523  0007A2  2B12               	incf	(main@i+1)& (0+255),f,b
  1524  0007A4                     l4699:
  1525                           
  1526                           ; BSR set to: 2
  1527  0007A4  0102               	movlb	2	; () banked
  1528  0007A6  0102               	movlb	2	; () banked
  1529  0007A8  5112               	movf	(main@i+1)& (0+255),w,b
  1530  0007AA  0A80               	xorlw	128
  1531  0007AC  0101               	movlb	1	; () banked
  1532  0007AE  6FC7               	movwf	??_main& (0+255),b
  1533  0007B0  0102               	movlb	2	; () banked
  1534  0007B2  5113               	movf	main@length_1452& (0+255),w,b
  1535  0007B4  0102               	movlb	2	; () banked
  1536  0007B6  0102               	movlb	2	; () banked
  1537  0007B8  5D11               	subwf	main@i& (0+255),w,b
  1538  0007BA  0102               	movlb	2	; () banked
  1539  0007BC  0102               	movlb	2	; () banked
  1540  0007BE  5114               	movf	(main@length_1452+1)& (0+255),w,b
  1541  0007C0  0A80               	xorlw	128
  1542  0007C2  0101               	movlb	1	; () banked
  1543  0007C4  59C7               	subwfb	??_main& (0+255),w,b
  1544  0007C6  A0D8               	btfss	status,0,c
  1545  0007C8  D7D2               	goto	l4695
  1546                           
  1547                           ; BSR set to: 1
  1548                           ;main.c: 571: average = average / length;
  1549                           
  1550                           ; BSR set to: 1
  1551  0007CA  C20E  F1A3         	movff	main@average,___awdiv@dividend
  1552  0007CE  C20F  F1A4         	movff	main@average+1,___awdiv@dividend+1
  1553  0007D2  C213  F1A5         	movff	main@length_1452,___awdiv@divisor
  1554  0007D6  C214  F1A6         	movff	main@length_1452+1,___awdiv@divisor+1
  1555  0007DA  EC06  F006         	call	___awdiv	;wreg free
  1556  0007DE  0101               	movlb	1	; () banked
  1557  0007E0  C1A3  F20E         	movff	?___awdiv,main@average
  1558  0007E4  0101               	movlb	1	; () banked
  1559  0007E6  C1A4  F20F         	movff	?___awdiv+1,main@average+1
  1560                           
  1561                           ; BSR set to: 1
  1562                           ;main.c: 572: if ( msgbuffer[1] < 30 ) {
  1563  0007EA  0E1E               	movlw	30
  1564  0007EC  0102               	movlb	2	; () banked
  1565  0007EE  0102               	movlb	2	; () banked
  1566  0007F0  5D04               	subwf	(main@msgbuffer+1)& (0+255),w,b
  1567  0007F2  B0D8               	btfsc	status,0,c
  1568  0007F4  D054               	goto	l4717
  1569                           
  1570                           ; BSR set to: 2
  1571                           ;main.c: 573: if ( movingtest == 1) {
  1572  0007F6  0102               	movlb	2	; () banked
  1573  0007F8  0102               	movlb	2	; () banked
  1574  0007FA  0510               	decf	main@movingtest& (0+255),w,b
  1575  0007FC  A4D8               	btfss	status,2,c
  1576  0007FE  D04F               	goto	l4717
  1577                           
  1578                           ; BSR set to: 2
  1579                           ;main.c: 574: i2cMstrMsgState = 2;
  1580  000800  0101               	movlb	1	; () banked
  1581  000802  6FC7               	movwf	??_main& (0+255),b
  1582  000804  0E02               	movlw	2
  1583  000806  0101               	movlb	1	; () banked
  1584  000808  0101               	movlb	1	; () banked
  1585  00080A  6F00               	movwf	_i2cMstrMsgState& (0+255),b
  1586  00080C  0101               	movlb	1	; () banked
  1587  00080E  51C7               	movf	??_main& (0+255),w,b
  1588                           
  1589                           ;main.c: 575: movingtest = 0;
  1590  000810  0101               	movlb	1	; () banked
  1591  000812  6FC7               	movwf	??_main& (0+255),b
  1592  000814  0E00               	movlw	0
  1593  000816  0102               	movlb	2	; () banked
  1594  000818  0102               	movlb	2	; () banked
  1595  00081A  6F10               	movwf	main@movingtest& (0+255),b
  1596  00081C  0101               	movlb	1	; () banked
  1597  00081E  51C7               	movf	??_main& (0+255),w,b
  1598                           
  1599                           ; BSR set to: 1
  1600                           ;main.c: 576: i2c_master_recv(0x0A, 0x05, 0x4F);
  1601  000820  0101               	movlb	1	; () banked
  1602  000822  6FC7               	movwf	??_main& (0+255),b
  1603  000824  0E05               	movlw	5
  1604  000826  0101               	movlb	1	; () banked
  1605  000828  0101               	movlb	1	; () banked
  1606  00082A  6FA3               	movwf	i2c_master_recv@data& (0+255),b
  1607  00082C  0101               	movlb	1	; () banked
  1608  00082E  51C7               	movf	??_main& (0+255),w,b
  1609  000830  0101               	movlb	1	; () banked
  1610  000832  6FC8               	movwf	(??_main+1)& (0+255),b
  1611  000834  0E4F               	movlw	79
  1612  000836  0101               	movlb	1	; () banked
  1613  000838  0101               	movlb	1	; () banked
  1614  00083A  6FA4               	movwf	i2c_master_recv@slave_address& (0+255),b
  1615  00083C  0101               	movlb	1	; () banked
  1616  00083E  51C8               	movf	(??_main+1)& (0+255),w,b
  1617  000840  0E0A               	movlw	10
  1618  000842  EC39  F00A         	call	_i2c_master_recv
  1619  000846  D02B               	goto	l4717
  1620  000848                     l4711:
  1621                           
  1622                           ;main.c: 581: ToMainLow_sendmsg(length, 47, msgbuffer );
  1623  000848  0101               	movlb	1	; () banked
  1624  00084A  6FC7               	movwf	??_main& (0+255),b
  1625  00084C  0E2F               	movlw	47
  1626  00084E  0101               	movlb	1	; () banked
  1627  000850  0101               	movlb	1	; () banked
  1628  000852  6FB9               	movwf	ToMainLow_sendmsg@msgtype& (0+255),b
  1629  000854  0101               	movlb	1	; () banked
  1630  000856  51C7               	movf	??_main& (0+255),w,b
  1631  000858  0102               	movlb	2	; () banked
  1632  00085A  0E02               	movlw	high main@msgbuffer
  1633  00085C  0101               	movlb	1	; () banked
  1634  00085E  0101               	movlb	1	; () banked
  1635  000860  6FBB               	movwf	(ToMainLow_sendmsg@data+1)& (0+255),b
  1636  000862  0102               	movlb	2	; () banked
  1637  000864  0E03               	movlw	low main@msgbuffer
  1638  000866  0101               	movlb	1	; () banked
  1639  000868  0101               	movlb	1	; () banked
  1640  00086A  6FBA               	movwf	ToMainLow_sendmsg@data& (0+255),b
  1641  00086C  0102               	movlb	2	; () banked
  1642  00086E  0102               	movlb	2	; () banked
  1643  000870  511A               	movf	main@length& (0+255),w,b
  1644  000872  ECA5  F00E         	call	_ToMainLow_sendmsg
  1645  000876  D013               	goto	l4717
  1646  000878                     l4715:
  1647  000878  0102               	movlb	2	; () banked
  1648  00087A  0102               	movlb	2	; () banked
  1649  00087C  5119               	movf	main@msgtype& (0+255),w,b
  1650                           
  1651                           ; Switch size 1, requested type "space"
  1652                           ; Number of cases is 6, Range of values is 10 to 55
  1653                           ; switch strategies available:
  1654                           ; Name         Instructions Cycles
  1655                           ; simple_byte           19    10 (average)
  1656                           ;	Chosen strategy is simple_byte
  1657  00087E  0A0A               	xorlw	10	; case 10
  1658  000880  B4D8               	btfsc	status,2,c
  1659  000882  D72B               	goto	l4685
  1660  000884  0A22               	xorlw	34	; case 40
  1661  000886  B4D8               	btfsc	status,2,c
  1662  000888  D00A               	goto	l4717
  1663  00088A  0A01               	xorlw	1	; case 41
  1664  00088C  B4D8               	btfsc	status,2,c
  1665  00088E  D74E               	goto	l374
  1666  000890  0A03               	xorlw	3	; case 42
  1667  000892  B4D8               	btfsc	status,2,c
  1668  000894  D004               	goto	l4717
  1669  000896  0A07               	xorlw	7	; case 45
  1670  000898  B4D8               	btfsc	status,2,c
  1671  00089A  D74B               	goto	l4687
  1672  00089C  0A1A               	xorlw	26	; case 55
  1673  00089E                     l4717:
  1674                           
  1675                           ;main.c: 605: }
  1676                           ;main.c: 608: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1677  00089E  0102               	movlb	2	; () banked
  1678  0008A0  0E02               	movlw	high main@msgtype
  1679  0008A2  0101               	movlb	1	; () banked
  1680  0008A4  0101               	movlb	1	; () banked
  1681  0008A6  6FBC               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1682  0008A8  0102               	movlb	2	; () banked
  1683  0008AA  0E19               	movlw	low main@msgtype
  1684  0008AC  0101               	movlb	1	; () banked
  1685  0008AE  0101               	movlb	1	; () banked
  1686  0008B0  6FBB               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1687  0008B2  0102               	movlb	2	; () banked
  1688  0008B4  0E02               	movlw	high main@msgbuffer
  1689  0008B6  0101               	movlb	1	; () banked
  1690  0008B8  0101               	movlb	1	; () banked
  1691  0008BA  6FBE               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1692  0008BC  0102               	movlb	2	; () banked
  1693  0008BE  0E03               	movlw	low main@msgbuffer
  1694  0008C0  0101               	movlb	1	; () banked
  1695  0008C2  0101               	movlb	1	; () banked
  1696  0008C4  6FBD               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1697  0008C6  0E0A               	movlw	10
  1698  0008C8  ECF1  F00D         	call	_ToMainLow_recvmsg
  1699  0008CC  0102               	movlb	2	; () banked
  1700  0008CE  0102               	movlb	2	; () banked
  1701  0008D0  6F1A               	movwf	main@length& (0+255),b
  1702                           
  1703                           ; BSR set to: 2
  1704                           ;main.c: 609: if (length < 0) {
  1705  0008D2  0102               	movlb	2	; () banked
  1706  0008D4  0102               	movlb	2	; () banked
  1707  0008D6  BF1A               	btfsc	main@length& (0+255),7,b
  1708  0008D8  D6DF               	goto	l4677
  1709  0008DA  D052               	goto	l4729
  1710  0008DC                     l4723:
  1711                           
  1712                           ; BSR set to: 2
  1713                           ;main.c: 617: {
  1714                           ;main.c: 618: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1715  0008DC  0102               	movlb	2	; () banked
  1716  0008DE  0E02               	movlw	high main@t1thread_data
  1717  0008E0  0101               	movlb	1	; () banked
  1718  0008E2  0101               	movlb	1	; () banked
  1719  0008E4  6FBE               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1720  0008E6  0102               	movlb	2	; () banked
  1721  0008E8  0E15               	movlw	low main@t1thread_data
  1722  0008EA  0101               	movlb	1	; () banked
  1723  0008EC  0101               	movlb	1	; () banked
  1724  0008EE  6FBD               	movwf	timer1_lthread@tptr& (0+255),b
  1725  0008F0  0102               	movlb	2	; () banked
  1726  0008F2  0101               	movlb	1	; () banked
  1727  0008F4  C219  F1BF         	movff	main@msgtype,timer1_lthread@msgtype
  1728  0008F8  0101               	movlb	1	; () banked
  1729  0008FA  0101               	movlb	1	; () banked
  1730  0008FC  6BC0               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1731  0008FE  0102               	movlb	2	; () banked
  1732  000900  0102               	movlb	2	; () banked
  1733  000902  511A               	movf	main@length& (0+255),w,b
  1734  000904  0101               	movlb	1	; () banked
  1735  000906  0101               	movlb	1	; () banked
  1736  000908  6FC1               	movwf	timer1_lthread@length& (0+255),b
  1737  00090A  0101               	movlb	1	; () banked
  1738  00090C  6BC2               	clrf	(timer1_lthread@length+1)& (0+255),b
  1739  00090E  0101               	movlb	1	; () banked
  1740  000910  BFC1               	btfsc	timer1_lthread@length& (0+255),7,b
  1741  000912  07C2               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1742  000914  0102               	movlb	2	; () banked
  1743  000916  0E02               	movlw	high main@msgbuffer
  1744  000918  0101               	movlb	1	; () banked
  1745  00091A  0101               	movlb	1	; () banked
  1746  00091C  6FC4               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1747  00091E  0102               	movlb	2	; () banked
  1748  000920  0E03               	movlw	low main@msgbuffer
  1749  000922  0101               	movlb	1	; () banked
  1750  000924  0101               	movlb	1	; () banked
  1751  000926  6FC3               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1752  000928  EC0C  F00C         	call	_timer1_lthread	;wreg free
  1753                           
  1754                           ;main.c: 619: break;
  1755  00092C  D6B5               	goto	l4677
  1756  00092E                     l4725:
  1757                           
  1758                           ;main.c: 641: {
  1759                           ;main.c: 642: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1760  00092E  0102               	movlb	2	; () banked
  1761  000930  0E02               	movlw	high main@uthread_data
  1762  000932  0101               	movlb	1	; () banked
  1763  000934  0101               	movlb	1	; () banked
  1764  000936  6FA4               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1765  000938  0102               	movlb	2	; () banked
  1766  00093A  0E01               	movlw	low main@uthread_data
  1767  00093C  0101               	movlb	1	; () banked
  1768  00093E  0101               	movlb	1	; () banked
  1769  000940  6FA3               	movwf	uart_lthread@uptr& (0+255),b
  1770  000942  0102               	movlb	2	; () banked
  1771  000944  0101               	movlb	1	; () banked
  1772  000946  C219  F1A5         	movff	main@msgtype,uart_lthread@msgtype
  1773  00094A  0101               	movlb	1	; () banked
  1774  00094C  0101               	movlb	1	; () banked
  1775  00094E  6BA6               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1776  000950  0102               	movlb	2	; () banked
  1777  000952  0102               	movlb	2	; () banked
  1778  000954  511A               	movf	main@length& (0+255),w,b
  1779  000956  0101               	movlb	1	; () banked
  1780  000958  0101               	movlb	1	; () banked
  1781  00095A  6FA7               	movwf	uart_lthread@length& (0+255),b
  1782  00095C  0101               	movlb	1	; () banked
  1783  00095E  6BA8               	clrf	(uart_lthread@length+1)& (0+255),b
  1784  000960  0101               	movlb	1	; () banked
  1785  000962  BFA7               	btfsc	uart_lthread@length& (0+255),7,b
  1786  000964  07A8               	decf	(uart_lthread@length+1)& (0+255),f,b
  1787  000966  0102               	movlb	2	; () banked
  1788  000968  0E02               	movlw	high main@msgbuffer
  1789  00096A  0101               	movlb	1	; () banked
  1790  00096C  0101               	movlb	1	; () banked
  1791  00096E  6FAA               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1792  000970  0102               	movlb	2	; () banked
  1793  000972  0E03               	movlw	low main@msgbuffer
  1794  000974  0101               	movlb	1	; () banked
  1795  000976  0101               	movlb	1	; () banked
  1796  000978  6FA9               	movwf	uart_lthread@msgbuffer& (0+255),b
  1797  00097A  EC66  F00D         	call	_uart_lthread	;wreg free
  1798                           
  1799                           ;main.c: 643: break;
  1800  00097E  D68C               	goto	l4677
  1801  000980                     l4729:
  1802  000980  0102               	movlb	2	; () banked
  1803  000982  0102               	movlb	2	; () banked
  1804  000984  5119               	movf	main@msgtype& (0+255),w,b
  1805                           
  1806                           ; Switch size 1, requested type "space"
  1807                           ; Number of cases is 4, Range of values is 11 to 47
  1808                           ; switch strategies available:
  1809                           ; Name         Instructions Cycles
  1810                           ; simple_byte           13     7 (average)
  1811                           ;	Chosen strategy is simple_byte
  1812  000986  0A0B               	xorlw	11	; case 11
  1813  000988  B4D8               	btfsc	status,2,c
  1814  00098A  D7A8               	goto	l4723
  1815  00098C  0A15               	xorlw	21	; case 30
  1816  00098E  B4D8               	btfsc	status,2,c
  1817  000990  D7CE               	goto	l4725
  1818  000992  0A01               	xorlw	1	; case 31
  1819  000994  B4D8               	btfsc	status,2,c
  1820  000996  D7CB               	goto	l4725
  1821  000998  0A30               	xorlw	48	; case 47
  1822  00099A  B4D8               	btfsc	status,2,c
  1823  00099C  D7C8               	goto	l4725
  1824  00099E  D67C               	goto	l4677
  1825  0009A0                     __end_of_main:
  1826                           	opt stack 0
  1827                           tblptru	equ	0xFF8
  1828                           tblptrh	equ	0xFF7
  1829                           tblptrl	equ	0xFF6
  1830                           tablat	equ	0xFF5
  1831                           postinc0	equ	0xFEE
  1832                           wreg	equ	0xFE8
  1833                           postdec1	equ	0xFE5
  1834                           fsr1l	equ	0xFE1
  1835                           indf2	equ	0xFDF
  1836                           fsr2h	equ	0xFDA
  1837                           fsr2l	equ	0xFD9
  1838                           status	equ	0xFD8
  1839                           
  1840 ;; *************** function _uart_lthread *****************
  1841 ;; Defined at:
  1842 ;;		line 17 in file "../src/uart_thread.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  uptr            2    0[BANK1 ] PTR struct __uart_thread
  1845 ;;		 -> main@uthread_data(2), 
  1846 ;;  msgtype         2    2[BANK1 ] int 
  1847 ;;  length          2    4[BANK1 ] int 
  1848 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  1849 ;;		 -> main@msgbuffer(11), 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;		None
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  2    0[BANK1 ] int 
  1854 ;; Registers used:
  1855 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1861 ;;      Params:         0       0       8       0       0
  1862 ;;      Locals:         0       0       0       0       0
  1863 ;;      Temps:          0       0       0       0       0
  1864 ;;      Totals:         0       0       8       0       0
  1865 ;;Total ram usage:        8 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; Hardware stack levels required when called:   10
  1868 ;; This function calls:
  1869 ;;		Nothing
  1870 ;; This function is called by:
  1871 ;;		_main
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           	psect	text1
  1876  001ACC                     __ptext1:
  1877                           	opt stack 0
  1878  001ACC                     _uart_lthread:
  1879                           	opt stack 20
  1880                           
  1881                           ;uart_thread.c: 18: if (msgtype == 30) {
  1882                           
  1883                           ; BSR set to: 2
  1884                           ;incstack = 0
  1885  001ACC  0101               	movlb	1	; () banked
  1886  001ACE  0101               	movlb	1	; () banked
  1887  001AD0  51A5               	movf	uart_lthread@msgtype& (0+255),w,b
  1888  001AD2  0A1E               	xorlw	30
  1889  001AD4  11A6               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1890  001AD6  B4D8               	btfsc	status,2,c
  1891  001AD8  0012               	return	
  1892                           
  1893                           ; BSR set to: 1
  1894                           
  1895                           ; BSR set to: 1
  1896                           
  1897                           ; BSR set to: 1
  1898                           ;uart_thread.c: 19: } else if (msgtype == 31) {
  1899  001ADA  0101               	movlb	1	; () banked
  1900  001ADC  0101               	movlb	1	; () banked
  1901  001ADE  51A5               	movf	uart_lthread@msgtype& (0+255),w,b
  1902  001AE0  0A1F               	xorlw	31
  1903  001AE2  11A6               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1904  001AE4  A4D8               	btfss	status,2,c
  1905  001AE6  0012               	return	
  1906                           
  1907                           ; BSR set to: 1
  1908                           ;uart_thread.c: 22: msgbuffer[length] = '\0';
  1909  001AE8  0101               	movlb	1	; () banked
  1910  001AEA  0101               	movlb	1	; () banked
  1911  001AEC  51A7               	movf	uart_lthread@length& (0+255),w,b
  1912  001AEE  0101               	movlb	1	; () banked
  1913  001AF0  0101               	movlb	1	; () banked
  1914  001AF2  25A9               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1915  001AF4  6ED9               	movwf	fsr2l,c
  1916  001AF6  0101               	movlb	1	; () banked
  1917  001AF8  0101               	movlb	1	; () banked
  1918  001AFA  51A8               	movf	(uart_lthread@length+1)& (0+255),w,b
  1919  001AFC  0101               	movlb	1	; () banked
  1920  001AFE  0101               	movlb	1	; () banked
  1921  001B00  21AA               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1922  001B02  6EDA               	movwf	fsr2h,c
  1923  001B04  0E00               	movlw	0
  1924  001B06  6EDF               	movwf	indf2,c
  1925                           
  1926                           ; BSR set to: 1
  1927                           ;uart_thread.c: 34: i++;
  1928  001B08  0100               	movlb	0	; () banked
  1929  001B0A  0100               	movlb	0	; () banked
  1930  001B0C  4BCF               	infsnz	_i& (0+255),f,b
  1931  001B0E  2BD0               	incf	(_i+1)& (0+255),f,b
  1932  001B10  0012               	return	
  1933  001B12                     __end_of_uart_lthread:
  1934                           	opt stack 0
  1935                           tblptru	equ	0xFF8
  1936                           tblptrh	equ	0xFF7
  1937                           tblptrl	equ	0xFF6
  1938                           tablat	equ	0xFF5
  1939                           postinc0	equ	0xFEE
  1940                           wreg	equ	0xFE8
  1941                           postdec1	equ	0xFE5
  1942                           fsr1l	equ	0xFE1
  1943                           indf2	equ	0xFDF
  1944                           fsr2h	equ	0xFDA
  1945                           fsr2l	equ	0xFD9
  1946                           status	equ	0xFD8
  1947                           
  1948 ;; *************** function _timer1_lthread *****************
  1949 ;; Defined at:
  1950 ;;		line 14 in file "../src/timer1_thread.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  tptr            2   26[BANK1 ] PTR struct __timer1_thre
  1953 ;;		 -> main@t1thread_data(2), 
  1954 ;;  msgtype         2   28[BANK1 ] int 
  1955 ;;  length          2   30[BANK1 ] int 
  1956 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  1957 ;;		 -> main@msgbuffer(11), 
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;  retval          1   35[BANK1 ] char 
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  2   26[BANK1 ] int 
  1962 ;; Registers used:
  1963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1969 ;;      Params:         0       0       8       0       0
  1970 ;;      Locals:         0       0       1       0       0
  1971 ;;      Temps:          0       0       1       0       0
  1972 ;;      Totals:         0       0      10       0       0
  1973 ;;Total ram usage:       10 bytes
  1974 ;; Hardware stack levels used:    1
  1975 ;; Hardware stack levels required when called:   13
  1976 ;; This function calls:
  1977 ;;		_FromMainHigh_sendmsg
  1978 ;;		___lwmod
  1979 ;; This function is called by:
  1980 ;;		_main
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           	psect	text2
  1985  001818                     __ptext2:
  1986                           	opt stack 0
  1987  001818                     _timer1_lthread:
  1988                           	opt stack 17
  1989                           
  1990                           ;timer1_thread.c: 15: signed char retval;
  1991                           ;timer1_thread.c: 17: tptr->msgcount++;
  1992                           
  1993                           ;incstack = 0
  1994  001818  C1BD  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1995  00181C  C1BE  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1996  001820  2ADE               	incf	postinc2,f,c
  1997  001822  0E00               	movlw	0
  1998  001824  22DD               	addwfc	postdec2,f,c
  1999                           
  2000                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  2001  001826  C1BD  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2002  00182A  C1BE  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2003  00182E  0101               	movlb	1	; () banked
  2004  001830  CFDE F1A3          	movff	postinc2,___lwmod@dividend
  2005  001834  0101               	movlb	1	; () banked
  2006  001836  CFDD F1A4          	movff	postdec2,___lwmod@dividend+1
  2007  00183A  0E00               	movlw	0
  2008  00183C  0101               	movlb	1	; () banked
  2009  00183E  0101               	movlb	1	; () banked
  2010  001840  6FA6               	movwf	(___lwmod@divisor+1)& (0+255),b
  2011  001842  0E0A               	movlw	10
  2012  001844  0101               	movlb	1	; () banked
  2013  001846  6FA5               	movwf	___lwmod@divisor& (0+255),b
  2014  001848  ECCB  F00A         	call	___lwmod	;wreg free
  2015  00184C  0101               	movlb	1	; () banked
  2016  00184E  0101               	movlb	1	; () banked
  2017  001850  51A3               	movf	?___lwmod& (0+255),w,b
  2018  001852  0A09               	xorlw	9
  2019  001854  0101               	movlb	1	; () banked
  2020  001856  11A4               	iorwf	(?___lwmod+1)& (0+255),w,b
  2021  001858  A4D8               	btfss	status,2,c
  2022  00185A  0012               	return	
  2023                           
  2024                           ; BSR set to: 1
  2025                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  2026  00185C  0101               	movlb	1	; () banked
  2027  00185E  6FC5               	movwf	??_timer1_lthread& (0+255),b
  2028  001860  0E14               	movlw	20
  2029  001862  0101               	movlb	1	; () banked
  2030  001864  0101               	movlb	1	; () banked
  2031  001866  6FB9               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  2032  001868  0101               	movlb	1	; () banked
  2033  00186A  51C5               	movf	??_timer1_lthread& (0+255),w,b
  2034  00186C  0101               	movlb	1	; () banked
  2035  00186E  0101               	movlb	1	; () banked
  2036  001870  C1BE  F1BB         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  2037  001874  0101               	movlb	1	; () banked
  2038  001876  0101               	movlb	1	; () banked
  2039  001878  C1BD  F1BA         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  2040  00187C  0E02               	movlw	2
  2041  00187E  EC6F  F00E         	call	_FromMainHigh_sendmsg
  2042  001882  0101               	movlb	1	; () banked
  2043  001884  0101               	movlb	1	; () banked
  2044  001886  6FC6               	movwf	timer1_lthread@retval& (0+255),b
  2045  001888  0012               	return	
  2046  00188A                     __end_of_timer1_lthread:
  2047                           	opt stack 0
  2048                           tblptru	equ	0xFF8
  2049                           tblptrh	equ	0xFF7
  2050                           tblptrl	equ	0xFF6
  2051                           tablat	equ	0xFF5
  2052                           postinc0	equ	0xFEE
  2053                           wreg	equ	0xFE8
  2054                           postdec1	equ	0xFE5
  2055                           fsr1l	equ	0xFE1
  2056                           indf2	equ	0xFDF
  2057                           postinc2	equ	0xFDE
  2058                           postdec2	equ	0xFDD
  2059                           fsr2h	equ	0xFDA
  2060                           fsr2l	equ	0xFD9
  2061                           status	equ	0xFD8
  2062                           
  2063 ;; *************** function _timer0_lthread *****************
  2064 ;; Defined at:
  2065 ;;		line 14 in file "../src/timer0_thread.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  tptr            2   26[BANK1 ] PTR struct __timer0_thre
  2068 ;;		 -> main@t0thread_data(2), 
  2069 ;;  msgtype         2   28[BANK1 ] int 
  2070 ;;  length          2   30[BANK1 ] int 
  2071 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  2072 ;;		 -> main@msgbuffer(11), 
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;  retval          1   35[BANK1 ] char 
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  2   26[BANK1 ] int 
  2077 ;; Registers used:
  2078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2084 ;;      Params:         0       0       8       0       0
  2085 ;;      Locals:         0       0       1       0       0
  2086 ;;      Temps:          0       0       1       0       0
  2087 ;;      Totals:         0       0      10       0       0
  2088 ;;Total ram usage:       10 bytes
  2089 ;; Hardware stack levels used:    1
  2090 ;; Hardware stack levels required when called:   13
  2091 ;; This function calls:
  2092 ;;		_FromMainHigh_sendmsg
  2093 ;;		___lwmod
  2094 ;; This function is called by:
  2095 ;;		_main
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text3
  2100  00188A                     __ptext3:
  2101                           	opt stack 0
  2102  00188A                     _timer0_lthread:
  2103                           	opt stack 17
  2104                           
  2105                           ;timer0_thread.c: 19: signed char retval;
  2106                           ;timer0_thread.c: 21: tptr->msgcount++;
  2107                           
  2108                           ; BSR set to: 1
  2109                           ;incstack = 0
  2110  00188A  C1BD  FFD9         	movff	timer0_lthread@tptr,fsr2l
  2111  00188E  C1BE  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  2112  001892  2ADE               	incf	postinc2,f,c
  2113  001894  0E00               	movlw	0
  2114  001896  22DD               	addwfc	postdec2,f,c
  2115                           
  2116                           ;timer0_thread.c: 24: if ((tptr->msgcount % 10) == 9) {
  2117  001898  C1BD  FFD9         	movff	timer0_lthread@tptr,fsr2l
  2118  00189C  C1BE  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  2119  0018A0  0101               	movlb	1	; () banked
  2120  0018A2  CFDE F1A3          	movff	postinc2,___lwmod@dividend
  2121  0018A6  0101               	movlb	1	; () banked
  2122  0018A8  CFDD F1A4          	movff	postdec2,___lwmod@dividend+1
  2123  0018AC  0E00               	movlw	0
  2124  0018AE  0101               	movlb	1	; () banked
  2125  0018B0  0101               	movlb	1	; () banked
  2126  0018B2  6FA6               	movwf	(___lwmod@divisor+1)& (0+255),b
  2127  0018B4  0E0A               	movlw	10
  2128  0018B6  0101               	movlb	1	; () banked
  2129  0018B8  6FA5               	movwf	___lwmod@divisor& (0+255),b
  2130  0018BA  ECCB  F00A         	call	___lwmod	;wreg free
  2131  0018BE  0101               	movlb	1	; () banked
  2132  0018C0  0101               	movlb	1	; () banked
  2133  0018C2  51A3               	movf	?___lwmod& (0+255),w,b
  2134  0018C4  0A09               	xorlw	9
  2135  0018C6  0101               	movlb	1	; () banked
  2136  0018C8  11A4               	iorwf	(?___lwmod+1)& (0+255),w,b
  2137  0018CA  A4D8               	btfss	status,2,c
  2138  0018CC  0012               	return	
  2139                           
  2140                           ; BSR set to: 1
  2141                           ;timer0_thread.c: 25: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  2142  0018CE  0101               	movlb	1	; () banked
  2143  0018D0  6FC5               	movwf	??_timer0_lthread& (0+255),b
  2144  0018D2  0E14               	movlw	20
  2145  0018D4  0101               	movlb	1	; () banked
  2146  0018D6  0101               	movlb	1	; () banked
  2147  0018D8  6FB9               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  2148  0018DA  0101               	movlb	1	; () banked
  2149  0018DC  51C5               	movf	??_timer0_lthread& (0+255),w,b
  2150  0018DE  0101               	movlb	1	; () banked
  2151  0018E0  0101               	movlb	1	; () banked
  2152  0018E2  C1BE  F1BB         	movff	timer0_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  2153  0018E6  0101               	movlb	1	; () banked
  2154  0018E8  0101               	movlb	1	; () banked
  2155  0018EA  C1BD  F1BA         	movff	timer0_lthread@tptr,FromMainHigh_sendmsg@data
  2156  0018EE  0E02               	movlw	2
  2157  0018F0  EC6F  F00E         	call	_FromMainHigh_sendmsg
  2158  0018F4  0101               	movlb	1	; () banked
  2159  0018F6  0101               	movlb	1	; () banked
  2160  0018F8  6FC6               	movwf	timer0_lthread@retval& (0+255),b
  2161  0018FA  0012               	return	
  2162  0018FC                     __end_of_timer0_lthread:
  2163                           	opt stack 0
  2164                           tblptru	equ	0xFF8
  2165                           tblptrh	equ	0xFF7
  2166                           tblptrl	equ	0xFF6
  2167                           tablat	equ	0xFF5
  2168                           postinc0	equ	0xFEE
  2169                           wreg	equ	0xFE8
  2170                           postdec1	equ	0xFE5
  2171                           fsr1l	equ	0xFE1
  2172                           indf2	equ	0xFDF
  2173                           postinc2	equ	0xFDE
  2174                           postdec2	equ	0xFDD
  2175                           fsr2h	equ	0xFDA
  2176                           fsr2l	equ	0xFD9
  2177                           status	equ	0xFD8
  2178                           
  2179 ;; *************** function ___lwmod *****************
  2180 ;; Defined at:
  2181 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/common/lwmod.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;  dividend        2    0[BANK1 ] unsigned int 
  2184 ;;  divisor         2    2[BANK1 ] unsigned int 
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;  counter         1    5[BANK1 ] unsigned char 
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  2    0[BANK1 ] unsigned int 
  2189 ;; Registers used:
  2190 ;;		wreg, status,2, status,0
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2196 ;;      Params:         0       0       4       0       0
  2197 ;;      Locals:         0       0       1       0       0
  2198 ;;      Temps:          0       0       1       0       0
  2199 ;;      Totals:         0       0       6       0       0
  2200 ;;Total ram usage:        6 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; Hardware stack levels required when called:   10
  2203 ;; This function calls:
  2204 ;;		Nothing
  2205 ;; This function is called by:
  2206 ;;		_timer1_lthread
  2207 ;;		_timer0_lthread
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           	psect	text4
  2212  001596                     __ptext4:
  2213                           	opt stack 0
  2214  001596                     ___lwmod:
  2215                           	opt stack 19
  2216                           
  2217                           ; BSR set to: 1
  2218                           ;incstack = 0
  2219  001596  0101               	movlb	1	; () banked
  2220  001598  0101               	movlb	1	; () banked
  2221  00159A  51A6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2222  00159C  11A5               	iorwf	___lwmod@divisor& (0+255),w,b
  2223  00159E  B4D8               	btfsc	status,2,c
  2224  0015A0  D03A               	goto	l1389
  2225                           
  2226                           ; BSR set to: 1
  2227  0015A2  0101               	movlb	1	; () banked
  2228  0015A4  6FA7               	movwf	??___lwmod& (0+255),b
  2229  0015A6  0E01               	movlw	1
  2230  0015A8  0101               	movlb	1	; () banked
  2231  0015AA  0101               	movlb	1	; () banked
  2232  0015AC  6FA8               	movwf	___lwmod@counter& (0+255),b
  2233  0015AE  0101               	movlb	1	; () banked
  2234  0015B0  51A7               	movf	??___lwmod& (0+255),w,b
  2235  0015B2  D009               	goto	l5149
  2236  0015B4                     l5147:
  2237                           
  2238                           ; BSR set to: 1
  2239  0015B4  0101               	movlb	1	; () banked
  2240  0015B6  0101               	movlb	1	; () banked
  2241  0015B8  0101               	movlb	1	; () banked
  2242  0015BA  90D8               	bcf	status,0,c
  2243  0015BC  37A5               	rlcf	___lwmod@divisor& (0+255),f,b
  2244  0015BE  37A6               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2245  0015C0  0101               	movlb	1	; () banked
  2246  0015C2  0101               	movlb	1	; () banked
  2247  0015C4  2BA8               	incf	___lwmod@counter& (0+255),f,b
  2248  0015C6                     l5149:
  2249                           
  2250                           ; BSR set to: 1
  2251  0015C6  0101               	movlb	1	; () banked
  2252  0015C8  0101               	movlb	1	; () banked
  2253  0015CA  AFA6               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2254  0015CC  D7F3               	goto	l5147
  2255  0015CE                     l5151:
  2256                           
  2257                           ; BSR set to: 1
  2258  0015CE  0101               	movlb	1	; () banked
  2259  0015D0  0101               	movlb	1	; () banked
  2260  0015D2  51A5               	movf	___lwmod@divisor& (0+255),w,b
  2261  0015D4  0101               	movlb	1	; () banked
  2262  0015D6  0101               	movlb	1	; () banked
  2263  0015D8  5DA3               	subwf	___lwmod@dividend& (0+255),w,b
  2264  0015DA  0101               	movlb	1	; () banked
  2265  0015DC  0101               	movlb	1	; () banked
  2266  0015DE  51A6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2267  0015E0  0101               	movlb	1	; () banked
  2268  0015E2  0101               	movlb	1	; () banked
  2269  0015E4  59A4               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2270  0015E6  A0D8               	btfss	status,0,c
  2271  0015E8  D00C               	goto	l5155
  2272                           
  2273                           ; BSR set to: 1
  2274  0015EA  0101               	movlb	1	; () banked
  2275  0015EC  0101               	movlb	1	; () banked
  2276  0015EE  51A5               	movf	___lwmod@divisor& (0+255),w,b
  2277  0015F0  0101               	movlb	1	; () banked
  2278  0015F2  0101               	movlb	1	; () banked
  2279  0015F4  5FA3               	subwf	___lwmod@dividend& (0+255),f,b
  2280  0015F6  0101               	movlb	1	; () banked
  2281  0015F8  0101               	movlb	1	; () banked
  2282  0015FA  51A6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2283  0015FC  0101               	movlb	1	; () banked
  2284  0015FE  0101               	movlb	1	; () banked
  2285  001600  5BA4               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2286  001602                     l5155:
  2287                           
  2288                           ; BSR set to: 1
  2289  001602  0101               	movlb	1	; () banked
  2290  001604  0101               	movlb	1	; () banked
  2291  001606  0101               	movlb	1	; () banked
  2292  001608  90D8               	bcf	status,0,c
  2293  00160A  33A6               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2294  00160C  33A5               	rrcf	___lwmod@divisor& (0+255),f,b
  2295                           
  2296                           ; BSR set to: 1
  2297  00160E  0101               	movlb	1	; () banked
  2298  001610  0101               	movlb	1	; () banked
  2299  001612  2FA8               	decfsz	___lwmod@counter& (0+255),f,b
  2300  001614  D7DC               	goto	l5151
  2301  001616                     l1389:
  2302                           
  2303                           ; BSR set to: 1
  2304  001616  C1A3  F1A3         	movff	___lwmod@dividend,?___lwmod
  2305  00161A  C1A4  F1A4         	movff	___lwmod@dividend+1,?___lwmod+1
  2306                           
  2307                           ; BSR set to: 1
  2308  00161E  0012               	return	
  2309  001620                     __end_of___lwmod:
  2310                           	opt stack 0
  2311                           tblptru	equ	0xFF8
  2312                           tblptrh	equ	0xFF7
  2313                           tblptrl	equ	0xFF6
  2314                           tablat	equ	0xFF5
  2315                           postinc0	equ	0xFEE
  2316                           wreg	equ	0xFE8
  2317                           postdec1	equ	0xFE5
  2318                           fsr1l	equ	0xFE1
  2319                           indf2	equ	0xFDF
  2320                           postinc2	equ	0xFDE
  2321                           postdec2	equ	0xFDD
  2322                           fsr2h	equ	0xFDA
  2323                           fsr2l	equ	0xFD9
  2324                           status	equ	0xFD8
  2325                           
  2326 ;; *************** function _FromMainHigh_sendmsg *****************
  2327 ;; Defined at:
  2328 ;;		line 179 in file "../src/messages.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  length          1    wreg     unsigned char 
  2331 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2332 ;;  data            2   23[BANK1 ] PTR void 
  2333 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), 
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;  length          1   25[BANK1 ] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      char 
  2338 ;; Registers used:
  2339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2345 ;;      Params:         0       0       3       0       0
  2346 ;;      Locals:         0       0       1       0       0
  2347 ;;      Temps:          0       0       0       0       0
  2348 ;;      Totals:         0       0       4       0       0
  2349 ;;Total ram usage:        4 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:   12
  2352 ;; This function calls:
  2353 ;;		_send_msg
  2354 ;; This function is called by:
  2355 ;;		_timer1_lthread
  2356 ;;		_timer0_lthread
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           	psect	text5
  2361  001CDE                     __ptext5:
  2362                           	opt stack 0
  2363  001CDE                     _FromMainHigh_sendmsg:
  2364                           	opt stack 17
  2365                           
  2366                           ; BSR set to: 1
  2367                           ;incstack = 0
  2368                           ;FromMainHigh_sendmsg@length stored from wreg
  2369  001CDE  CFE8 F1BC          	movff	wreg,FromMainHigh_sendmsg@length
  2370                           
  2371                           ;messages.c: 185: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2372  001CE2  0102               	movlb	2	; () banked
  2373  001CE4  0E02               	movlw	high _FromMainHigh_MQ
  2374  001CE6  0101               	movlb	1	; () banked
  2375  001CE8  0101               	movlb	1	; () banked
  2376  001CEA  6FAE               	movwf	(send_msg@qptr+1)& (0+255),b
  2377  001CEC  0102               	movlb	2	; () banked
  2378  001CEE  0E53               	movlw	low _FromMainHigh_MQ
  2379  001CF0  0101               	movlb	1	; () banked
  2380  001CF2  0101               	movlb	1	; () banked
  2381  001CF4  6FAD               	movwf	send_msg@qptr& (0+255),b
  2382  001CF6  C1BC  F1AF         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2383  001CFA  C1B9  F1B0         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2384  001CFE  0101               	movlb	1	; () banked
  2385  001D00  0101               	movlb	1	; () banked
  2386  001D02  C1BB  F1B2         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2387  001D06  0101               	movlb	1	; () banked
  2388  001D08  0101               	movlb	1	; () banked
  2389  001D0A  C1BA  F1B1         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2390  001D0E  ECCE  F007         	call	_send_msg	;wreg free
  2391  001D12  0012               	return	
  2392  001D14                     __end_of_FromMainHigh_sendmsg:
  2393                           	opt stack 0
  2394                           tblptru	equ	0xFF8
  2395                           tblptrh	equ	0xFF7
  2396                           tblptrl	equ	0xFF6
  2397                           tablat	equ	0xFF5
  2398                           postinc0	equ	0xFEE
  2399                           wreg	equ	0xFE8
  2400                           postdec1	equ	0xFE5
  2401                           fsr1l	equ	0xFE1
  2402                           indf2	equ	0xFDF
  2403                           postinc2	equ	0xFDE
  2404                           postdec2	equ	0xFDD
  2405                           fsr2h	equ	0xFDA
  2406                           fsr2l	equ	0xFD9
  2407                           status	equ	0xFD8
  2408                           
  2409 ;; *************** function _init_uart_recv *****************
  2410 ;; Defined at:
  2411 ;;		line 202 in file "../src/my_uart.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;  uc              2    0[BANK1 ] PTR struct __uart_comm
  2414 ;;		 -> main@uc(28), 
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;		None
  2417 ;; Return value:  Size  Location     Type
  2418 ;;		None               void
  2419 ;; Registers used:
  2420 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2426 ;;      Params:         0       0       2       0       0
  2427 ;;      Locals:         0       0       0       0       0
  2428 ;;      Temps:          0       0       0       0       0
  2429 ;;      Totals:         0       0       2       0       0
  2430 ;;Total ram usage:        2 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; Hardware stack levels required when called:   10
  2433 ;; This function calls:
  2434 ;;		Nothing
  2435 ;; This function is called by:
  2436 ;;		_main
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           	psect	text6
  2441  001A2A                     __ptext6:
  2442                           	opt stack 0
  2443  001A2A                     _init_uart_recv:
  2444                           	opt stack 20
  2445                           
  2446                           ;my_uart.c: 203: uc_ptr = uc;
  2447                           
  2448                           ;incstack = 0
  2449  001A2A  0101               	movlb	1	; () banked
  2450  001A2C  0100               	movlb	0	; () banked
  2451  001A2E  C1A4  F0F6         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2452  001A32  0101               	movlb	1	; () banked
  2453  001A34  0100               	movlb	0	; () banked
  2454  001A36  C1A3  F0F5         	movff	init_uart_recv@uc,_uc_ptr
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;my_uart.c: 204: uc_ptr->buflen = 0;
  2458  001A3A  0100               	movlb	0	; () banked
  2459  001A3C  EE20 F00A          	lfsr	2,10
  2460  001A40  0100               	movlb	0	; () banked
  2461  001A42  51F5               	movf	_uc_ptr& (0+255),w,b
  2462  001A44  26D9               	addwf	fsr2l,f,c
  2463  001A46  0100               	movlb	0	; () banked
  2464  001A48  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  2465  001A4A  22DA               	addwfc	fsr2h,f,c
  2466  001A4C  0E00               	movlw	0
  2467  001A4E  6EDF               	movwf	indf2,c
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;my_uart.c: 205: uc_ptr->data_read = 0;
  2471  001A50  0100               	movlb	0	; () banked
  2472  001A52  EE20 F00F          	lfsr	2,15
  2473  001A56  0100               	movlb	0	; () banked
  2474  001A58  51F5               	movf	_uc_ptr& (0+255),w,b
  2475  001A5A  26D9               	addwf	fsr2l,f,c
  2476  001A5C  0100               	movlb	0	; () banked
  2477  001A5E  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  2478  001A60  22DA               	addwfc	fsr2h,f,c
  2479  001A62  0E00               	movlw	0
  2480  001A64  6EDF               	movwf	indf2,c
  2481                           
  2482                           ; BSR set to: 0
  2483                           ;my_uart.c: 206: uc_ptr->state = 48;
  2484  001A66  0100               	movlb	0	; () banked
  2485  001A68  EE20 F00B          	lfsr	2,11
  2486  001A6C  0100               	movlb	0	; () banked
  2487  001A6E  51F5               	movf	_uc_ptr& (0+255),w,b
  2488  001A70  26D9               	addwf	fsr2l,f,c
  2489  001A72  0100               	movlb	0	; () banked
  2490  001A74  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  2491  001A76  22DA               	addwfc	fsr2h,f,c
  2492  001A78  0E30               	movlw	48
  2493  001A7A  6EDF               	movwf	indf2,c
  2494                           
  2495                           ; BSR set to: 0
  2496  001A7C  0012               	return	
  2497  001A7E                     __end_of_init_uart_recv:
  2498                           	opt stack 0
  2499                           tblptru	equ	0xFF8
  2500                           tblptrh	equ	0xFF7
  2501                           tblptrl	equ	0xFF6
  2502                           tablat	equ	0xFF5
  2503                           postinc0	equ	0xFEE
  2504                           wreg	equ	0xFE8
  2505                           postdec1	equ	0xFE5
  2506                           fsr1l	equ	0xFE1
  2507                           indf2	equ	0xFDF
  2508                           postinc2	equ	0xFDE
  2509                           postdec2	equ	0xFDD
  2510                           fsr2h	equ	0xFDA
  2511                           fsr2l	equ	0xFD9
  2512                           status	equ	0xFD8
  2513                           
  2514 ;; *************** function _init_timer1_lthread *****************
  2515 ;; Defined at:
  2516 ;;		line 6 in file "../src/timer1_thread.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  2519 ;;		 -> main@t1thread_data(2), 
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;		None
  2522 ;; Return value:  Size  Location     Type
  2523 ;;		None               void
  2524 ;; Registers used:
  2525 ;;		wreg, fsr2l, fsr2h
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2531 ;;      Params:         0       0       2       0       0
  2532 ;;      Locals:         0       0       0       0       0
  2533 ;;      Temps:          0       0       0       0       0
  2534 ;;      Totals:         0       0       2       0       0
  2535 ;;Total ram usage:        2 bytes
  2536 ;; Hardware stack levels used:    1
  2537 ;; Hardware stack levels required when called:   10
  2538 ;; This function calls:
  2539 ;;		Nothing
  2540 ;; This function is called by:
  2541 ;;		_main
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text7
  2546  001F24                     __ptext7:
  2547                           	opt stack 0
  2548  001F24                     _init_timer1_lthread:
  2549                           	opt stack 20
  2550                           
  2551                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;incstack = 0
  2555  001F24  C1A3  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2556  001F28  C1A4  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2557  001F2C  0E00               	movlw	0
  2558  001F2E  6EDE               	movwf	postinc2,c
  2559  001F30  0E00               	movlw	0
  2560  001F32  6EDD               	movwf	postdec2,c
  2561  001F34  0012               	return	
  2562  001F36                     __end_of_init_timer1_lthread:
  2563                           	opt stack 0
  2564                           tblptru	equ	0xFF8
  2565                           tblptrh	equ	0xFF7
  2566                           tblptrl	equ	0xFF6
  2567                           tablat	equ	0xFF5
  2568                           postinc0	equ	0xFEE
  2569                           wreg	equ	0xFE8
  2570                           postdec1	equ	0xFE5
  2571                           fsr1l	equ	0xFE1
  2572                           indf2	equ	0xFDF
  2573                           postinc2	equ	0xFDE
  2574                           postdec2	equ	0xFDD
  2575                           fsr2h	equ	0xFDA
  2576                           fsr2l	equ	0xFD9
  2577                           status	equ	0xFD8
  2578                           
  2579 ;; *************** function _init_timer0_lthread *****************
  2580 ;; Defined at:
  2581 ;;		line 10 in file "../src/timer0_thread.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2584 ;;		 -> main@t0thread_data(2), 
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;		None
  2587 ;; Return value:  Size  Location     Type
  2588 ;;		None               void
  2589 ;; Registers used:
  2590 ;;		wreg, fsr2l, fsr2h
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2596 ;;      Params:         0       0       2       0       0
  2597 ;;      Locals:         0       0       0       0       0
  2598 ;;      Temps:          0       0       0       0       0
  2599 ;;      Totals:         0       0       2       0       0
  2600 ;;Total ram usage:        2 bytes
  2601 ;; Hardware stack levels used:    1
  2602 ;; Hardware stack levels required when called:   10
  2603 ;; This function calls:
  2604 ;;		Nothing
  2605 ;; This function is called by:
  2606 ;;		_main
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text8
  2611  001F36                     __ptext8:
  2612                           	opt stack 0
  2613  001F36                     _init_timer0_lthread:
  2614                           	opt stack 20
  2615                           
  2616                           ;timer0_thread.c: 11: tptr->msgcount = 0;
  2617                           
  2618                           ;incstack = 0
  2619  001F36  C1A3  FFD9         	movff	init_timer0_lthread@tptr,fsr2l
  2620  001F3A  C1A4  FFDA         	movff	init_timer0_lthread@tptr+1,fsr2h
  2621  001F3E  0E00               	movlw	0
  2622  001F40  6EDE               	movwf	postinc2,c
  2623  001F42  0E00               	movlw	0
  2624  001F44  6EDD               	movwf	postdec2,c
  2625  001F46  0012               	return	
  2626  001F48                     __end_of_init_timer0_lthread:
  2627                           	opt stack 0
  2628                           tblptru	equ	0xFF8
  2629                           tblptrh	equ	0xFF7
  2630                           tblptrl	equ	0xFF6
  2631                           tablat	equ	0xFF5
  2632                           postinc0	equ	0xFEE
  2633                           wreg	equ	0xFE8
  2634                           postdec1	equ	0xFE5
  2635                           fsr1l	equ	0xFE1
  2636                           indf2	equ	0xFDF
  2637                           postinc2	equ	0xFDE
  2638                           postdec2	equ	0xFDD
  2639                           fsr2h	equ	0xFDA
  2640                           fsr2l	equ	0xFD9
  2641                           status	equ	0xFD8
  2642                           
  2643 ;; *************** function _init_queues *****************
  2644 ;; Defined at:
  2645 ;;		line 199 in file "../src/messages.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;		None
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;		None
  2650 ;; Return value:  Size  Location     Type
  2651 ;;		None               void
  2652 ;; Registers used:
  2653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2659 ;;      Params:         0       0       0       0       0
  2660 ;;      Locals:         0       0       0       0       0
  2661 ;;      Temps:          0       0       1       0       0
  2662 ;;      Totals:         0       0       1       0       0
  2663 ;;Total ram usage:        1 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; Hardware stack levels required when called:   11
  2666 ;; This function calls:
  2667 ;;		_init_queue
  2668 ;; This function is called by:
  2669 ;;		_main
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text9
  2674  0018FC                     __ptext9:
  2675                           	opt stack 0
  2676  0018FC                     _init_queues:
  2677                           	opt stack 19
  2678                           
  2679                           ;messages.c: 200: MQ_Main_Willing_to_block = 0;
  2680                           
  2681                           ;incstack = 0
  2682  0018FC  0101               	movlb	1	; () banked
  2683  0018FE  6FA7               	movwf	??_init_queues& (0+255),b
  2684  001900  0E00               	movlw	0
  2685  001902  0100               	movlb	0	; () banked
  2686  001904  0100               	movlb	0	; () banked
  2687  001906  6FD3               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2688  001908  0101               	movlb	1	; () banked
  2689  00190A  51A7               	movf	??_init_queues& (0+255),w,b
  2690                           
  2691                           ; BSR set to: 1
  2692                           ;messages.c: 201: init_queue(&ToMainLow_MQ);
  2693  00190C  0101               	movlb	1	; () banked
  2694  00190E  0E01               	movlw	high _ToMainLow_MQ
  2695  001910  0101               	movlb	1	; () banked
  2696  001912  0101               	movlb	1	; () banked
  2697  001914  6FA4               	movwf	(init_queue@qptr+1)& (0+255),b
  2698  001916  0101               	movlb	1	; () banked
  2699  001918  0E6D               	movlw	low _ToMainLow_MQ
  2700  00191A  0101               	movlb	1	; () banked
  2701  00191C  0101               	movlb	1	; () banked
  2702  00191E  6FA3               	movwf	init_queue@qptr& (0+255),b
  2703  001920  ECCF  F00B         	call	_init_queue	;wreg free
  2704                           
  2705                           ;messages.c: 202: init_queue(&ToMainHigh_MQ);
  2706  001924  0101               	movlb	1	; () banked
  2707  001926  0E01               	movlw	high _ToMainHigh_MQ
  2708  001928  0101               	movlb	1	; () banked
  2709  00192A  0101               	movlb	1	; () banked
  2710  00192C  6FA4               	movwf	(init_queue@qptr+1)& (0+255),b
  2711  00192E  0101               	movlb	1	; () banked
  2712  001930  0E37               	movlw	low _ToMainHigh_MQ
  2713  001932  0101               	movlb	1	; () banked
  2714  001934  0101               	movlb	1	; () banked
  2715  001936  6FA3               	movwf	init_queue@qptr& (0+255),b
  2716  001938  ECCF  F00B         	call	_init_queue	;wreg free
  2717                           
  2718                           ;messages.c: 203: init_queue(&FromMainLow_MQ);
  2719  00193C  0101               	movlb	1	; () banked
  2720  00193E  0E01               	movlw	high _FromMainLow_MQ
  2721  001940  0101               	movlb	1	; () banked
  2722  001942  0101               	movlb	1	; () banked
  2723  001944  6FA4               	movwf	(init_queue@qptr+1)& (0+255),b
  2724  001946  0101               	movlb	1	; () banked
  2725  001948  0E01               	movlw	low _FromMainLow_MQ
  2726  00194A  0101               	movlb	1	; () banked
  2727  00194C  0101               	movlb	1	; () banked
  2728  00194E  6FA3               	movwf	init_queue@qptr& (0+255),b
  2729  001950  ECCF  F00B         	call	_init_queue	;wreg free
  2730                           
  2731                           ;messages.c: 204: init_queue(&FromMainHigh_MQ);
  2732  001954  0102               	movlb	2	; () banked
  2733  001956  0E02               	movlw	high _FromMainHigh_MQ
  2734  001958  0101               	movlb	1	; () banked
  2735  00195A  0101               	movlb	1	; () banked
  2736  00195C  6FA4               	movwf	(init_queue@qptr+1)& (0+255),b
  2737  00195E  0102               	movlb	2	; () banked
  2738  001960  0E53               	movlw	low _FromMainHigh_MQ
  2739  001962  0101               	movlb	1	; () banked
  2740  001964  0101               	movlb	1	; () banked
  2741  001966  6FA3               	movwf	init_queue@qptr& (0+255),b
  2742  001968  ECCF  F00B         	call	_init_queue	;wreg free
  2743  00196C  0012               	return	
  2744  00196E                     __end_of_init_queues:
  2745                           	opt stack 0
  2746                           tblptru	equ	0xFF8
  2747                           tblptrh	equ	0xFF7
  2748                           tblptrl	equ	0xFF6
  2749                           tablat	equ	0xFF5
  2750                           postinc0	equ	0xFEE
  2751                           wreg	equ	0xFE8
  2752                           postdec1	equ	0xFE5
  2753                           fsr1l	equ	0xFE1
  2754                           indf2	equ	0xFDF
  2755                           postinc2	equ	0xFDE
  2756                           postdec2	equ	0xFDD
  2757                           fsr2h	equ	0xFDA
  2758                           fsr2l	equ	0xFD9
  2759                           status	equ	0xFD8
  2760                           
  2761 ;; *************** function _init_queue *****************
  2762 ;; Defined at:
  2763 ;;		line 19 in file "../src/messages.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2766 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;  i               1    3[BANK1 ] unsigned char 
  2769 ;; Return value:  Size  Location     Type
  2770 ;;		None               void
  2771 ;; Registers used:
  2772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2778 ;;      Params:         0       0       2       0       0
  2779 ;;      Locals:         0       0       1       0       0
  2780 ;;      Temps:          0       0       1       0       0
  2781 ;;      Totals:         0       0       4       0       0
  2782 ;;Total ram usage:        4 bytes
  2783 ;; Hardware stack levels used:    1
  2784 ;; Hardware stack levels required when called:   10
  2785 ;; This function calls:
  2786 ;;		Nothing
  2787 ;; This function is called by:
  2788 ;;		_init_queues
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	text10
  2793  00179E                     __ptext10:
  2794                           	opt stack 0
  2795  00179E                     _init_queue:
  2796                           	opt stack 19
  2797                           
  2798                           ;messages.c: 20: unsigned char i;
  2799                           ;messages.c: 22: qptr->cur_write_ind = 0;
  2800                           
  2801                           ;incstack = 0
  2802  00179E  0101               	movlb	1	; () banked
  2803  0017A0  EE20 F034          	lfsr	2,52
  2804  0017A4  0101               	movlb	1	; () banked
  2805  0017A6  51A3               	movf	init_queue@qptr& (0+255),w,b
  2806  0017A8  26D9               	addwf	fsr2l,f,c
  2807  0017AA  0101               	movlb	1	; () banked
  2808  0017AC  51A4               	movf	(init_queue@qptr+1)& (0+255),w,b
  2809  0017AE  22DA               	addwfc	fsr2h,f,c
  2810  0017B0  0E00               	movlw	0
  2811  0017B2  6EDF               	movwf	indf2,c
  2812                           
  2813                           ;messages.c: 23: qptr->cur_read_ind = 0;
  2814  0017B4  0101               	movlb	1	; () banked
  2815  0017B6  EE20 F035          	lfsr	2,53
  2816  0017BA  0101               	movlb	1	; () banked
  2817  0017BC  51A3               	movf	init_queue@qptr& (0+255),w,b
  2818  0017BE  26D9               	addwf	fsr2l,f,c
  2819  0017C0  0101               	movlb	1	; () banked
  2820  0017C2  51A4               	movf	(init_queue@qptr+1)& (0+255),w,b
  2821  0017C4  22DA               	addwfc	fsr2h,f,c
  2822  0017C6  0E00               	movlw	0
  2823  0017C8  6EDF               	movwf	indf2,c
  2824                           
  2825                           ; BSR set to: 1
  2826                           ;messages.c: 24: for (i = 0; i < 4; i++) {
  2827  0017CA  0101               	movlb	1	; () banked
  2828  0017CC  6FA5               	movwf	??_init_queue& (0+255),b
  2829  0017CE  0E00               	movlw	0
  2830  0017D0  0101               	movlb	1	; () banked
  2831  0017D2  0101               	movlb	1	; () banked
  2832  0017D4  6FA6               	movwf	init_queue@i& (0+255),b
  2833  0017D6  0101               	movlb	1	; () banked
  2834  0017D8  51A5               	movf	??_init_queue& (0+255),w,b
  2835                           
  2836                           ; BSR set to: 1
  2837  0017DA  0E03               	movlw	3
  2838  0017DC  0101               	movlb	1	; () banked
  2839  0017DE  0101               	movlb	1	; () banked
  2840  0017E0  65A6               	cpfsgt	init_queue@i& (0+255),b
  2841  0017E2  D001               	goto	l4437
  2842  0017E4  0012               	return	
  2843  0017E6                     l4437:
  2844                           
  2845                           ; BSR set to: 1
  2846                           ;messages.c: 25: qptr->queue[i].full = 0;
  2847  0017E6  0101               	movlb	1	; () banked
  2848  0017E8  0101               	movlb	1	; () banked
  2849  0017EA  51A6               	movf	init_queue@i& (0+255),w,b
  2850  0017EC  0D0D               	mullw	13
  2851  0017EE  50F3               	movf	prodl,w,c
  2852  0017F0  0101               	movlb	1	; () banked
  2853  0017F2  0101               	movlb	1	; () banked
  2854  0017F4  25A3               	addwf	init_queue@qptr& (0+255),w,b
  2855  0017F6  6ED9               	movwf	fsr2l,c
  2856  0017F8  50F4               	movf	prodh,w,c
  2857  0017FA  0101               	movlb	1	; () banked
  2858  0017FC  0101               	movlb	1	; () banked
  2859  0017FE  21A4               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2860  001800  6EDA               	movwf	fsr2h,c
  2861  001802  0E00               	movlw	0
  2862  001804  6EDF               	movwf	indf2,c
  2863                           
  2864                           ; BSR set to: 1
  2865  001806  0101               	movlb	1	; () banked
  2866  001808  0101               	movlb	1	; () banked
  2867  00180A  2BA6               	incf	init_queue@i& (0+255),f,b
  2868                           
  2869                           ; BSR set to: 1
  2870  00180C  0E03               	movlw	3
  2871  00180E  0101               	movlb	1	; () banked
  2872  001810  0101               	movlb	1	; () banked
  2873  001812  65A6               	cpfsgt	init_queue@i& (0+255),b
  2874  001814  D7E8               	goto	l4437
  2875  001816  0012               	return	
  2876  001818                     __end_of_init_queue:
  2877                           	opt stack 0
  2878                           tblptru	equ	0xFF8
  2879                           tblptrh	equ	0xFF7
  2880                           tblptrl	equ	0xFF6
  2881                           tablat	equ	0xFF5
  2882                           prodh	equ	0xFF4
  2883                           prodl	equ	0xFF3
  2884                           postinc0	equ	0xFEE
  2885                           wreg	equ	0xFE8
  2886                           postdec1	equ	0xFE5
  2887                           fsr1l	equ	0xFE1
  2888                           indf2	equ	0xFDF
  2889                           postinc2	equ	0xFDE
  2890                           postdec2	equ	0xFDD
  2891                           fsr2h	equ	0xFDA
  2892                           fsr2l	equ	0xFD9
  2893                           status	equ	0xFD8
  2894                           
  2895 ;; *************** function _init_i2c *****************
  2896 ;; Defined at:
  2897 ;;		line 263 in file "../src/my_i2c.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  2900 ;;		 -> main@ic(28), 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;		None               void
  2905 ;; Registers used:
  2906 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2912 ;;      Params:         0       0       2       0       0
  2913 ;;      Locals:         0       0       0       0       0
  2914 ;;      Temps:          0       0       0       0       0
  2915 ;;      Totals:         0       0       2       0       0
  2916 ;;Total ram usage:        2 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:   10
  2919 ;; This function calls:
  2920 ;;		Nothing
  2921 ;; This function is called by:
  2922 ;;		_main
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text11
  2927  001A7E                     __ptext11:
  2928                           	opt stack 0
  2929  001A7E                     _init_i2c:
  2930                           	opt stack 20
  2931                           
  2932                           ;my_i2c.c: 264: ic_ptr = ic;
  2933                           
  2934                           ; BSR set to: 1
  2935                           ;incstack = 0
  2936  001A7E  0101               	movlb	1	; () banked
  2937  001A80  C1A4  F062         	movff	init_i2c@ic+1,_ic_ptr+1
  2938  001A84  0101               	movlb	1	; () banked
  2939  001A86  C1A3  F061         	movff	init_i2c@ic,_ic_ptr
  2940                           
  2941                           ; BSR set to: 1
  2942                           ;my_i2c.c: 265: ic_ptr->buflen = 0;
  2943  001A8A  EE20 F00A          	lfsr	2,10
  2944  001A8E  5061               	movf	_ic_ptr,w,c
  2945  001A90  26D9               	addwf	fsr2l,f,c
  2946  001A92  5062               	movf	_ic_ptr+1,w,c
  2947  001A94  22DA               	addwfc	fsr2h,f,c
  2948  001A96  0E00               	movlw	0
  2949  001A98  6EDF               	movwf	indf2,c
  2950                           
  2951                           ; BSR set to: 1
  2952                           ;my_i2c.c: 266: ic_ptr->event_count = 0;
  2953  001A9A  EE20 F00B          	lfsr	2,11
  2954  001A9E  5061               	movf	_ic_ptr,w,c
  2955  001AA0  26D9               	addwf	fsr2l,f,c
  2956  001AA2  5062               	movf	_ic_ptr+1,w,c
  2957  001AA4  22DA               	addwfc	fsr2h,f,c
  2958  001AA6  0E00               	movlw	0
  2959  001AA8  6EDF               	movwf	indf2,c
  2960                           
  2961                           ; BSR set to: 1
  2962                           ;my_i2c.c: 267: ic_ptr->status = 0x5;
  2963  001AAA  EE20 F00C          	lfsr	2,12
  2964  001AAE  5061               	movf	_ic_ptr,w,c
  2965  001AB0  26D9               	addwf	fsr2l,f,c
  2966  001AB2  5062               	movf	_ic_ptr+1,w,c
  2967  001AB4  22DA               	addwfc	fsr2h,f,c
  2968  001AB6  0E05               	movlw	5
  2969  001AB8  6EDF               	movwf	indf2,c
  2970                           
  2971                           ; BSR set to: 1
  2972                           ;my_i2c.c: 268: ic_ptr->error_count = 0;
  2973  001ABA  EE20 F00E          	lfsr	2,14
  2974  001ABE  5061               	movf	_ic_ptr,w,c
  2975  001AC0  26D9               	addwf	fsr2l,f,c
  2976  001AC2  5062               	movf	_ic_ptr+1,w,c
  2977  001AC4  22DA               	addwfc	fsr2h,f,c
  2978  001AC6  0E00               	movlw	0
  2979  001AC8  6EDF               	movwf	indf2,c
  2980                           
  2981                           ; BSR set to: 1
  2982  001ACA  0012               	return	
  2983  001ACC                     __end_of_init_i2c:
  2984                           	opt stack 0
  2985                           tblptru	equ	0xFF8
  2986                           tblptrh	equ	0xFF7
  2987                           tblptrl	equ	0xFF6
  2988                           tablat	equ	0xFF5
  2989                           prodh	equ	0xFF4
  2990                           prodl	equ	0xFF3
  2991                           postinc0	equ	0xFEE
  2992                           wreg	equ	0xFE8
  2993                           postdec1	equ	0xFE5
  2994                           fsr1l	equ	0xFE1
  2995                           indf2	equ	0xFDF
  2996                           postinc2	equ	0xFDE
  2997                           postdec2	equ	0xFDD
  2998                           fsr2h	equ	0xFDA
  2999                           fsr2l	equ	0xFD9
  3000                           status	equ	0xFD8
  3001                           
  3002 ;; *************** function _init_ADC *****************
  3003 ;; Defined at:
  3004 ;;		line 6 in file "../src/my_adc.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;		None
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;  ADCValue        2    7[BANK1 ] int 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;		None               void
  3011 ;; Registers used:
  3012 ;;		wreg, status,2, status,0, cstack
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3018 ;;      Params:         0       0       0       0       0
  3019 ;;      Locals:         0       0       2       0       0
  3020 ;;      Temps:          0       0       2       0       0
  3021 ;;      Totals:         0       0       4       0       0
  3022 ;;Total ram usage:        4 bytes
  3023 ;; Hardware stack levels used:    1
  3024 ;; Hardware stack levels required when called:   11
  3025 ;; This function calls:
  3026 ;;		_ConvertADC
  3027 ;;		_OpenADC
  3028 ;; This function is called by:
  3029 ;;		_main
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           	psect	text12
  3034  001B12                     __ptext12:
  3035                           	opt stack 0
  3036  001B12                     _init_ADC:
  3037                           	opt stack 19
  3038                           
  3039                           ;my_adc.c: 9: TRISDbits.TRISD7 = 0;
  3040                           
  3041                           ; BSR set to: 1
  3042                           ;incstack = 0
  3043  001B12  9E95               	bcf	3989,7,c	;volatile
  3044                           
  3045                           ;my_adc.c: 10: TRISDbits.TRISD6 = 0;
  3046  001B14  9C95               	bcf	3989,6,c	;volatile
  3047                           
  3048                           ;my_adc.c: 13: int ADCValue = 0;
  3049  001B16  0E00               	movlw	0
  3050  001B18  0101               	movlb	1	; () banked
  3051  001B1A  0101               	movlb	1	; () banked
  3052  001B1C  6FAB               	movwf	(init_ADC@ADCValue+1)& (0+255),b
  3053  001B1E  0E00               	movlw	0
  3054  001B20  0101               	movlb	1	; () banked
  3055  001B22  6FAA               	movwf	init_ADC@ADCValue& (0+255),b
  3056                           
  3057                           ; BSR set to: 1
  3058                           ;my_adc.c: 16: OpenADC(0b10001111 & 0b11111111 & 0b11111111, 0b10000111 & 0b11111111 & 0
      +                          b11111110 & 0b11111101, 0b11111111);
  3059  001B24  0101               	movlb	1	; () banked
  3060  001B26  6FA8               	movwf	??_init_ADC& (0+255),b
  3061  001B28  0E84               	movlw	132
  3062  001B2A  0101               	movlb	1	; () banked
  3063  001B2C  0101               	movlb	1	; () banked
  3064  001B2E  6FA3               	movwf	OpenADC@config2& (0+255),b
  3065  001B30  0101               	movlb	1	; () banked
  3066  001B32  51A8               	movf	??_init_ADC& (0+255),w,b
  3067  001B34  0101               	movlb	1	; () banked
  3068  001B36  6FA9               	movwf	(??_init_ADC+1)& (0+255),b
  3069  001B38  0EFF               	movlw	255
  3070  001B3A  0101               	movlb	1	; () banked
  3071  001B3C  0101               	movlb	1	; () banked
  3072  001B3E  6FA4               	movwf	OpenADC@portconfig& (0+255),b
  3073  001B40  0101               	movlb	1	; () banked
  3074  001B42  51A9               	movf	(??_init_ADC+1)& (0+255),w,b
  3075  001B44  0E8F               	movlw	143
  3076  001B46  EC10  F00B         	call	_OpenADC
  3077                           
  3078                           ;my_adc.c: 17: (PIR1bits.ADIF=0,INTCONbits.PEIE=1,PIE1bits.ADIE=1);
  3079  001B4A  9C9E               	bcf	3998,6,c	;volatile
  3080  001B4C  8CF2               	bsf	intcon,6,c	;volatile
  3081  001B4E  8C9D               	bsf	3997,6,c	;volatile
  3082                           
  3083                           ;my_adc.c: 18: (INTCONbits.GIE = 1);
  3084  001B50  8EF2               	bsf	intcon,7,c	;volatile
  3085                           
  3086                           ;my_adc.c: 20: ConvertADC();
  3087  001B52  ECDD  F00F         	call	_ConvertADC	;wreg free
  3088  001B56  0012               	return	
  3089  001B58                     __end_of_init_ADC:
  3090                           	opt stack 0
  3091                           tblptru	equ	0xFF8
  3092                           tblptrh	equ	0xFF7
  3093                           tblptrl	equ	0xFF6
  3094                           tablat	equ	0xFF5
  3095                           prodh	equ	0xFF4
  3096                           prodl	equ	0xFF3
  3097                           intcon	equ	0xFF2
  3098                           postinc0	equ	0xFEE
  3099                           wreg	equ	0xFE8
  3100                           postdec1	equ	0xFE5
  3101                           fsr1l	equ	0xFE1
  3102                           indf2	equ	0xFDF
  3103                           postinc2	equ	0xFDE
  3104                           postdec2	equ	0xFDD
  3105                           fsr2h	equ	0xFDA
  3106                           fsr2l	equ	0xFD9
  3107                           status	equ	0xFD8
  3108                           
  3109 ;; *************** function _OpenADC *****************
  3110 ;; Defined at:
  3111 ;;		line 68 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcopen.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;  config          1    wreg     unsigned char 
  3114 ;;  config2         1    0[BANK1 ] unsigned char 
  3115 ;;  portconfig      1    1[BANK1 ] unsigned char 
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;  config          1    4[BANK1 ] unsigned char 
  3118 ;; Return value:  Size  Location     Type
  3119 ;;		None               void
  3120 ;; Registers used:
  3121 ;;		wreg, status,2, status,0
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3127 ;;      Params:         0       0       2       0       0
  3128 ;;      Locals:         0       0       1       0       0
  3129 ;;      Temps:          0       0       2       0       0
  3130 ;;      Totals:         0       0       5       0       0
  3131 ;;Total ram usage:        5 bytes
  3132 ;; Hardware stack levels used:    1
  3133 ;; Hardware stack levels required when called:   10
  3134 ;; This function calls:
  3135 ;;		Nothing
  3136 ;; This function is called by:
  3137 ;;		_init_ADC
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           	psect	text13
  3142  001620                     __ptext13:
  3143                           	opt stack 0
  3144  001620                     _OpenADC:
  3145                           	opt stack 19
  3146                           
  3147                           ;incstack = 0
  3148                           ;OpenADC@config stored from wreg
  3149  001620  CFE8 F1A7          	movff	wreg,OpenADC@config
  3150  001624  0E00               	movlw	0
  3151  001626  6EC2               	movwf	4034,c	;volatile
  3152  001628  0E00               	movlw	0
  3153  00162A  6EC0               	movwf	4032,c	;volatile
  3154  00162C  0101               	movlb	1	; () banked
  3155  00162E  0101               	movlb	1	; () banked
  3156  001630  90D8               	bcf	status,0,c
  3157  001632  31A3               	rrcf	OpenADC@config2& (0+255),w,b
  3158  001634  0B3C               	andlw	60
  3159  001636  6EC2               	movwf	4034,c	;volatile
  3160                           
  3161                           ; BSR set to: 1
  3162  001638  C1A3  F1A5         	movff	OpenADC@config2,??_OpenADC
  3163  00163C  0101               	movlb	1	; () banked
  3164  00163E  3BA5               	swapf	??_OpenADC& (0+255),f,b
  3165  001640  0EF0               	movlw	240
  3166  001642  17A5               	andwf	??_OpenADC& (0+255),f,b
  3167  001644  0E30               	movlw	48
  3168  001646  0101               	movlb	1	; () banked
  3169  001648  17A5               	andwf	??_OpenADC& (0+255),f,b
  3170  00164A  0101               	movlb	1	; () banked
  3171  00164C  0101               	movlb	1	; () banked
  3172  00164E  51A4               	movf	OpenADC@portconfig& (0+255),w,b
  3173  001650  0B0F               	andlw	15
  3174  001652  0101               	movlb	1	; () banked
  3175  001654  11A5               	iorwf	??_OpenADC& (0+255),w,b
  3176  001656  6EC1               	movwf	4033,c	;volatile
  3177                           
  3178                           ; BSR set to: 1
  3179  001658  C1A7  F1A5         	movff	OpenADC@config,??_OpenADC
  3180  00165C  0101               	movlb	1	; () banked
  3181  00165E  90D8               	bcf	status,0,c
  3182  001660  37A5               	rlcf	??_OpenADC& (0+255),f,b
  3183  001662  0101               	movlb	1	; () banked
  3184  001664  90D8               	bcf	status,0,c
  3185  001666  37A5               	rlcf	??_OpenADC& (0+255),f,b
  3186  001668  0E38               	movlw	56
  3187  00166A  0101               	movlb	1	; () banked
  3188  00166C  17A5               	andwf	??_OpenADC& (0+255),f,b
  3189  00166E  C1A7  F1A6         	movff	OpenADC@config,??_OpenADC+1
  3190  001672  0101               	movlb	1	; () banked
  3191  001674  3BA6               	swapf	(??_OpenADC+1)& (0+255),f,b
  3192  001676  0E0F               	movlw	15
  3193  001678  17A6               	andwf	(??_OpenADC+1)& (0+255),f,b
  3194  00167A  0E07               	movlw	7
  3195  00167C  0101               	movlb	1	; () banked
  3196  00167E  17A6               	andwf	(??_OpenADC+1)& (0+255),f,b
  3197  001680  0101               	movlb	1	; () banked
  3198  001682  0101               	movlb	1	; () banked
  3199  001684  51A7               	movf	OpenADC@config& (0+255),w,b
  3200  001686  0B80               	andlw	128
  3201  001688  0101               	movlb	1	; () banked
  3202  00168A  11A6               	iorwf	(??_OpenADC+1)& (0+255),w,b
  3203  00168C  0101               	movlb	1	; () banked
  3204  00168E  11A5               	iorwf	??_OpenADC& (0+255),w,b
  3205  001690  6EC0               	movwf	4032,c	;volatile
  3206                           
  3207                           ; BSR set to: 1
  3208  001692  0101               	movlb	1	; () banked
  3209  001694  0101               	movlb	1	; () banked
  3210  001696  AFA3               	btfss	OpenADC@config2& (0+255),7,b
  3211  001698  D003               	goto	l763
  3212                           
  3213                           ; BSR set to: 1
  3214  00169A  9C9E               	bcf	3998,6,c	;volatile
  3215  00169C  8C9D               	bsf	3997,6,c	;volatile
  3216  00169E  8CF2               	bsf	intcon,6,c	;volatile
  3217  0016A0                     l763:
  3218                           
  3219                           ; BSR set to: 1
  3220  0016A0  80C2               	bsf	4034,0,c	;volatile
  3221                           
  3222                           ; BSR set to: 1
  3223  0016A2  0012               	return	
  3224  0016A4                     __end_of_OpenADC:
  3225                           	opt stack 0
  3226                           tblptru	equ	0xFF8
  3227                           tblptrh	equ	0xFF7
  3228                           tblptrl	equ	0xFF6
  3229                           tablat	equ	0xFF5
  3230                           prodh	equ	0xFF4
  3231                           prodl	equ	0xFF3
  3232                           intcon	equ	0xFF2
  3233                           postinc0	equ	0xFEE
  3234                           wreg	equ	0xFE8
  3235                           postdec1	equ	0xFE5
  3236                           fsr1l	equ	0xFE1
  3237                           indf2	equ	0xFDF
  3238                           postinc2	equ	0xFDE
  3239                           postdec2	equ	0xFDD
  3240                           fsr2h	equ	0xFDA
  3241                           fsr2l	equ	0xFD9
  3242                           status	equ	0xFD8
  3243                           
  3244 ;; *************** function _ConvertADC *****************
  3245 ;; Defined at:
  3246 ;;		line 22 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcconv.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;		None
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;		None
  3251 ;; Return value:  Size  Location     Type
  3252 ;;		None               void
  3253 ;; Registers used:
  3254 ;;		None
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3260 ;;      Params:         0       0       0       0       0
  3261 ;;      Locals:         0       0       0       0       0
  3262 ;;      Temps:          0       0       0       0       0
  3263 ;;      Totals:         0       0       0       0       0
  3264 ;;Total ram usage:        0 bytes
  3265 ;; Hardware stack levels used:    1
  3266 ;; Hardware stack levels required when called:   10
  3267 ;; This function calls:
  3268 ;;		Nothing
  3269 ;; This function is called by:
  3270 ;;		_init_ADC
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           	psect	text14
  3275  001FBA                     __ptext14:
  3276                           	opt stack 0
  3277  001FBA                     _ConvertADC:
  3278                           	opt stack 19
  3279                           
  3280                           ; BSR set to: 1
  3281                           ;incstack = 0
  3282  001FBA  82C2               	bsf	4034,1,c	;volatile
  3283  001FBC  0012               	return	
  3284  001FBE                     __end_of_ConvertADC:
  3285                           	opt stack 0
  3286                           tblptru	equ	0xFF8
  3287                           tblptrh	equ	0xFF7
  3288                           tblptrl	equ	0xFF6
  3289                           tablat	equ	0xFF5
  3290                           prodh	equ	0xFF4
  3291                           prodl	equ	0xFF3
  3292                           intcon	equ	0xFF2
  3293                           postinc0	equ	0xFEE
  3294                           wreg	equ	0xFE8
  3295                           postdec1	equ	0xFE5
  3296                           fsr1l	equ	0xFE1
  3297                           indf2	equ	0xFDF
  3298                           postinc2	equ	0xFDE
  3299                           postdec2	equ	0xFDD
  3300                           fsr2h	equ	0xFDA
  3301                           fsr2l	equ	0xFD9
  3302                           status	equ	0xFD8
  3303                           
  3304 ;; *************** function _i2c_master_recv *****************
  3305 ;; Defined at:
  3306 ;;		line 105 in file "../src/my_i2c_master.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;  length          1    wreg     unsigned char 
  3309 ;;  data            1    0[BANK1 ] unsigned char 
  3310 ;;  slave_addres    1    1[BANK1 ] unsigned char 
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;  length          1    3[BANK1 ] unsigned char 
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      unsigned char 
  3315 ;; Registers used:
  3316 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3322 ;;      Params:         0       0       2       0       0
  3323 ;;      Locals:         0       0       1       0       0
  3324 ;;      Temps:          0       0       1       0       0
  3325 ;;      Totals:         0       0       4       0       0
  3326 ;;Total ram usage:        4 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; Hardware stack levels required when called:   10
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_main
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text15
  3337  001472                     __ptext15:
  3338                           	opt stack 0
  3339  001472                     _i2c_master_recv:
  3340                           	opt stack 20
  3341                           
  3342                           ;incstack = 0
  3343                           ;i2c_master_recv@length stored from wreg
  3344  001472  CFE8 F1A6          	movff	wreg,i2c_master_recv@length
  3345                           
  3346                           ;my_i2c_master.c: 108: if ( ic_ptr->state != IDLE) {
  3347  001476  C0D1  FFD9         	movff	my_i2c_master@ic_ptr,fsr2l
  3348  00147A  C0D2  FFDA         	movff	my_i2c_master@ic_ptr+1,fsr2h
  3349  00147E  50DF               	movf	indf2,w,c
  3350  001480  A4D8               	btfss	status,2,c
  3351  001482  0012               	return	
  3352                           
  3353                           ;my_i2c_master.c: 110: }
  3354                           ;my_i2c_master.c: 112: mode = MASTER_READ;
  3355                           
  3356                           ;my_i2c_master.c: 109: return 0;
  3357                           ;	Return value of _i2c_master_recv is never used
  3358  001484  0101               	movlb	1	; () banked
  3359  001486  6FA5               	movwf	??_i2c_master_recv& (0+255),b
  3360  001488  0E02               	movlw	2
  3361  00148A  6E4A               	movwf	_mode,c
  3362  00148C  0101               	movlb	1	; () banked
  3363  00148E  51A5               	movf	??_i2c_master_recv& (0+255),w,b
  3364                           
  3365                           ; BSR set to: 1
  3366                           ;my_i2c_master.c: 114: ic_ptr->buffer_length = length;
  3367  001490  0100               	movlb	0	; () banked
  3368  001492  EE20 F00B          	lfsr	2,11
  3369  001496  0100               	movlb	0	; () banked
  3370  001498  51D1               	movf	my_i2c_master@ic_ptr& (0+255),w,b
  3371  00149A  26D9               	addwf	fsr2l,f,c
  3372  00149C  0100               	movlb	0	; () banked
  3373  00149E  51D2               	movf	(my_i2c_master@ic_ptr+1)& (0+255),w,b
  3374  0014A0  22DA               	addwfc	fsr2h,f,c
  3375  0014A2  0101               	movlb	1	; () banked
  3376  0014A4  C1A6  FFDF         	movff	i2c_master_recv@length,indf2
  3377                           
  3378                           ; BSR set to: 1
  3379                           ;my_i2c_master.c: 115: ic_ptr->buffer_index = 0;
  3380  0014A8  0100               	movlb	0	; () banked
  3381  0014AA  EE20 F00C          	lfsr	2,12
  3382  0014AE  0100               	movlb	0	; () banked
  3383  0014B0  51D1               	movf	my_i2c_master@ic_ptr& (0+255),w,b
  3384  0014B2  26D9               	addwf	fsr2l,f,c
  3385  0014B4  0100               	movlb	0	; () banked
  3386  0014B6  51D2               	movf	(my_i2c_master@ic_ptr+1)& (0+255),w,b
  3387  0014B8  22DA               	addwfc	fsr2h,f,c
  3388  0014BA  0E00               	movlw	0
  3389  0014BC  6EDF               	movwf	indf2,c
  3390                           
  3391                           ; BSR set to: 0
  3392                           ;my_i2c_master.c: 116: ic_ptr->slave_address = slave_address << 1;
  3393  0014BE  0100               	movlb	0	; () banked
  3394  0014C0  EE20 F00E          	lfsr	2,14
  3395  0014C4  0100               	movlb	0	; () banked
  3396  0014C6  51D1               	movf	my_i2c_master@ic_ptr& (0+255),w,b
  3397  0014C8  26D9               	addwf	fsr2l,f,c
  3398  0014CA  0100               	movlb	0	; () banked
  3399  0014CC  51D2               	movf	(my_i2c_master@ic_ptr+1)& (0+255),w,b
  3400  0014CE  22DA               	addwfc	fsr2h,f,c
  3401  0014D0  0101               	movlb	1	; () banked
  3402  0014D2  0101               	movlb	1	; () banked
  3403  0014D4  51A4               	movf	i2c_master_recv@slave_address& (0+255),w,b
  3404  0014D6  0101               	movlb	1	; () banked
  3405  0014D8  25A4               	addwf	i2c_master_recv@slave_address& (0+255),w,b
  3406  0014DA  6EDF               	movwf	indf2,c
  3407                           
  3408                           ; BSR set to: 1
  3409                           ;my_i2c_master.c: 117: ic_ptr->address = data;
  3410  0014DC  0100               	movlb	0	; () banked
  3411  0014DE  EE20 F00D          	lfsr	2,13
  3412  0014E2  0100               	movlb	0	; () banked
  3413  0014E4  51D1               	movf	my_i2c_master@ic_ptr& (0+255),w,b
  3414  0014E6  26D9               	addwf	fsr2l,f,c
  3415  0014E8  0100               	movlb	0	; () banked
  3416  0014EA  51D2               	movf	(my_i2c_master@ic_ptr+1)& (0+255),w,b
  3417  0014EC  22DA               	addwfc	fsr2h,f,c
  3418  0014EE  0101               	movlb	1	; () banked
  3419  0014F0  C1A3  FFDF         	movff	i2c_master_recv@data,indf2
  3420                           
  3421                           ; BSR set to: 1
  3422                           ;my_i2c_master.c: 118: SSP1CON2bits.SEN = 1;
  3423  0014F4  80C5               	bsf	4037,0,c	;volatile
  3424                           
  3425                           ; BSR set to: 1
  3426                           ;my_i2c_master.c: 119: ic_ptr->state = START_BIT;
  3427  0014F6  C0D1  FFD9         	movff	my_i2c_master@ic_ptr,fsr2l
  3428  0014FA  C0D2  FFDA         	movff	my_i2c_master@ic_ptr+1,fsr2h
  3429  0014FE  0E01               	movlw	1
  3430  001500  6EDF               	movwf	indf2,c
  3431  001502  0012               	return	
  3432  001504                     __end_of_i2c_master_recv:
  3433                           	opt stack 0
  3434                           tblptru	equ	0xFF8
  3435                           tblptrh	equ	0xFF7
  3436                           tblptrl	equ	0xFF6
  3437                           tablat	equ	0xFF5
  3438                           prodh	equ	0xFF4
  3439                           prodl	equ	0xFF3
  3440                           intcon	equ	0xFF2
  3441                           postinc0	equ	0xFEE
  3442                           wreg	equ	0xFE8
  3443                           postdec1	equ	0xFE5
  3444                           fsr1l	equ	0xFE1
  3445                           indf2	equ	0xFDF
  3446                           postinc2	equ	0xFDE
  3447                           postdec2	equ	0xFDD
  3448                           fsr2h	equ	0xFDA
  3449                           fsr2l	equ	0xFD9
  3450                           status	equ	0xFD8
  3451                           
  3452 ;; *************** function _i2c_configure_slave *****************
  3453 ;; Defined at:
  3454 ;;		line 274 in file "../src/my_i2c.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;  addr            1    wreg     unsigned char 
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;  addr            1    0[BANK1 ] unsigned char 
  3459 ;; Return value:  Size  Location     Type
  3460 ;;		None               void
  3461 ;; Registers used:
  3462 ;;		wreg, status,2, status,0
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3468 ;;      Params:         0       0       0       0       0
  3469 ;;      Locals:         0       0       1       0       0
  3470 ;;      Temps:          0       0       0       0       0
  3471 ;;      Totals:         0       0       1       0       0
  3472 ;;Total ram usage:        1 bytes
  3473 ;; Hardware stack levels used:    1
  3474 ;; Hardware stack levels required when called:   10
  3475 ;; This function calls:
  3476 ;;		Nothing
  3477 ;; This function is called by:
  3478 ;;		_main
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482                           	psect	text16
  3483  001E76                     __ptext16:
  3484                           	opt stack 0
  3485  001E76                     _i2c_configure_slave:
  3486                           	opt stack 20
  3487                           
  3488                           ;incstack = 0
  3489                           ;i2c_configure_slave@addr stored from wreg
  3490  001E76  CFE8 F1A3          	movff	wreg,i2c_configure_slave@addr
  3491                           
  3492                           ;my_i2c.c: 286: TRISCbits.TRISC3 = 1;
  3493  001E7A  8694               	bsf	3988,3,c	;volatile
  3494                           
  3495                           ;my_i2c.c: 287: TRISCbits.TRISC4 = 1;
  3496  001E7C  8894               	bsf	3988,4,c	;volatile
  3497                           
  3498                           ;my_i2c.c: 292: SSPADD = addr;
  3499  001E7E  C1A3  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3500                           
  3501                           ;my_i2c.c: 294: SSPSTAT = 0x0;
  3502  001E82  0E00               	movlw	0
  3503  001E84  6EC7               	movwf	4039,c	;volatile
  3504                           
  3505                           ;my_i2c.c: 295: SSPCON1 = 0x0;
  3506  001E86  0E00               	movlw	0
  3507  001E88  6EC6               	movwf	4038,c	;volatile
  3508                           
  3509                           ;my_i2c.c: 296: SSPCON2 = 0x0;
  3510  001E8A  0E00               	movlw	0
  3511  001E8C  6EC5               	movwf	4037,c	;volatile
  3512                           
  3513                           ;my_i2c.c: 297: SSPCON1 |= 0x0E;
  3514  001E8E  0E0E               	movlw	14
  3515  001E90  12C6               	iorwf	4038,f,c	;volatile
  3516                           
  3517                           ;my_i2c.c: 298: SSPSTAT |= 0b10000000;
  3518  001E92  8EC7               	bsf	4039,7,c	;volatile
  3519                           
  3520                           ;my_i2c.c: 301: TRISCbits.TRISC3 = 1;
  3521  001E94  8694               	bsf	3988,3,c	;volatile
  3522                           
  3523                           ;my_i2c.c: 302: TRISCbits.TRISC4 = 1;
  3524  001E96  8894               	bsf	3988,4,c	;volatile
  3525                           
  3526                           ;my_i2c.c: 323: SSPCON2bits.SEN = 1;
  3527  001E98  80C5               	bsf	4037,0,c	;volatile
  3528                           
  3529                           ;my_i2c.c: 324: SSPCON1 |= 0b00100000;
  3530  001E9A  8AC6               	bsf	4038,5,c	;volatile
  3531  001E9C  0012               	return	
  3532  001E9E                     __end_of_i2c_configure_slave:
  3533                           	opt stack 0
  3534                           tblptru	equ	0xFF8
  3535                           tblptrh	equ	0xFF7
  3536                           tblptrl	equ	0xFF6
  3537                           tablat	equ	0xFF5
  3538                           prodh	equ	0xFF4
  3539                           prodl	equ	0xFF3
  3540                           intcon	equ	0xFF2
  3541                           postinc0	equ	0xFEE
  3542                           wreg	equ	0xFE8
  3543                           postdec1	equ	0xFE5
  3544                           fsr1l	equ	0xFE1
  3545                           indf2	equ	0xFDF
  3546                           postinc2	equ	0xFDE
  3547                           postdec2	equ	0xFDD
  3548                           fsr2h	equ	0xFDA
  3549                           fsr2l	equ	0xFD9
  3550                           status	equ	0xFD8
  3551                           
  3552 ;; *************** function _enable_interrupts *****************
  3553 ;; Defined at:
  3554 ;;		line 104 in file "../src/interrupts.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;		None
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;		None
  3559 ;; Return value:  Size  Location     Type
  3560 ;;		None               void
  3561 ;; Registers used:
  3562 ;;		None
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3568 ;;      Params:         0       0       0       0       0
  3569 ;;      Locals:         0       0       0       0       0
  3570 ;;      Temps:          0       0       0       0       0
  3571 ;;      Totals:         0       0       0       0       0
  3572 ;;Total ram usage:        0 bytes
  3573 ;; Hardware stack levels used:    1
  3574 ;; Hardware stack levels required when called:   10
  3575 ;; This function calls:
  3576 ;;		Nothing
  3577 ;; This function is called by:
  3578 ;;		_main
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text17
  3583  001FAE                     __ptext17:
  3584                           	opt stack 0
  3585  001FAE                     _enable_interrupts:
  3586                           	opt stack 20
  3587                           
  3588                           ;interrupts.c: 107: RCONbits.IPEN = 1;
  3589                           
  3590                           ;incstack = 0
  3591  001FAE  8ED0               	bsf	4048,7,c	;volatile
  3592                           
  3593                           ;interrupts.c: 108: INTCONbits.GIEH = 1;
  3594  001FB0  8EF2               	bsf	intcon,7,c	;volatile
  3595                           
  3596                           ;interrupts.c: 109: INTCONbits.GIEL = 1;
  3597  001FB2  8CF2               	bsf	intcon,6,c	;volatile
  3598                           
  3599                           ;interrupts.c: 111: INTCONbits.TMR0IE = 1;
  3600  001FB4  8AF2               	bsf	intcon,5,c	;volatile
  3601                           
  3602                           ;interrupts.c: 113: INTCON2bits.TMR0IP = 1;
  3603  001FB6  84F1               	bsf	intcon2,2,c	;volatile
  3604  001FB8  0012               	return	
  3605  001FBA                     __end_of_enable_interrupts:
  3606                           	opt stack 0
  3607                           tblptru	equ	0xFF8
  3608                           tblptrh	equ	0xFF7
  3609                           tblptrl	equ	0xFF6
  3610                           tablat	equ	0xFF5
  3611                           prodh	equ	0xFF4
  3612                           prodl	equ	0xFF3
  3613                           intcon	equ	0xFF2
  3614                           intcon2	equ	0xFF1
  3615                           postinc0	equ	0xFEE
  3616                           wreg	equ	0xFE8
  3617                           postdec1	equ	0xFE5
  3618                           fsr1l	equ	0xFE1
  3619                           indf2	equ	0xFDF
  3620                           postinc2	equ	0xFDE
  3621                           postdec2	equ	0xFDD
  3622                           fsr2h	equ	0xFDA
  3623                           fsr2l	equ	0xFD9
  3624                           status	equ	0xFD8
  3625                           
  3626 ;; *************** function _block_on_To_msgqueues *****************
  3627 ;; Defined at:
  3628 ;;		line 263 in file "../src/messages.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;		None
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;		None
  3633 ;; Return value:  Size  Location     Type
  3634 ;;		None               void
  3635 ;; Registers used:
  3636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3642 ;;      Params:         0       0       0       0       0
  3643 ;;      Locals:         0       0       0       0       0
  3644 ;;      Temps:          0       0       1       0       0
  3645 ;;      Totals:         0       0       1       0       0
  3646 ;;Total ram usage:        1 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; Hardware stack levels required when called:   13
  3649 ;; This function calls:
  3650 ;;		_Delay1KTCYx
  3651 ;;		_check_msg
  3652 ;;		_in_main
  3653 ;; This function is called by:
  3654 ;;		_main
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           	psect	text18
  3659  00127A                     __ptext18:
  3660                           	opt stack 0
  3661  00127A                     _block_on_To_msgqueues:
  3662                           	opt stack 17
  3663                           
  3664                           ;messages.c: 264: if (!in_main()) {
  3665                           
  3666                           ;incstack = 0
  3667  00127A  ECCF  F00D         	call	_in_main	;wreg free
  3668  00127E  0101               	movlb	1	; () banked
  3669  001280  0101               	movlb	1	; () banked
  3670  001282  51A8               	movf	(?_in_main+1)& (0+255),w,b
  3671  001284  0101               	movlb	1	; () banked
  3672  001286  11A7               	iorwf	?_in_main& (0+255),w,b
  3673  001288  B4D8               	btfsc	status,2,c
  3674  00128A  0012               	return	
  3675                           
  3676                           ; BSR set to: 1
  3677                           ;messages.c: 266: }
  3678                           ;messages.c: 267: LATBbits.LATB3 = 1;
  3679                           
  3680                           ; BSR set to: 1
  3681                           ;messages.c: 265: return;
  3682  00128C  868A               	bsf	3978,3,c	;volatile
  3683                           
  3684                           ; BSR set to: 1
  3685                           ;messages.c: 268: MQ_Main_Willing_to_block = 1;
  3686  00128E  0101               	movlb	1	; () banked
  3687  001290  6FA9               	movwf	??_block_on_To_msgqueues& (0+255),b
  3688  001292  0E01               	movlw	1
  3689  001294  0100               	movlb	0	; () banked
  3690  001296  0100               	movlb	0	; () banked
  3691  001298  6FD3               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3692  00129A  0101               	movlb	1	; () banked
  3693  00129C  51A9               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3694  00129E                     l4595:
  3695                           
  3696                           ; BSR set to: 1
  3697                           ;messages.c: 270: if (check_msg(&ToMainHigh_MQ)) {
  3698  00129E  0101               	movlb	1	; () banked
  3699  0012A0  0E01               	movlw	high _ToMainHigh_MQ
  3700  0012A2  0101               	movlb	1	; () banked
  3701  0012A4  0101               	movlb	1	; () banked
  3702  0012A6  6FA4               	movwf	(check_msg@qptr+1)& (0+255),b
  3703  0012A8  0101               	movlb	1	; () banked
  3704  0012AA  0E37               	movlw	low _ToMainHigh_MQ
  3705  0012AC  0101               	movlb	1	; () banked
  3706  0012AE  0101               	movlb	1	; () banked
  3707  0012B0  6FA3               	movwf	check_msg@qptr& (0+255),b
  3708  0012B2  EC8A  F00E         	call	_check_msg	;wreg free
  3709  0012B6  0900               	iorlw	0
  3710  0012B8  B4D8               	btfsc	status,2,c
  3711  0012BA  D00A               	goto	l4603
  3712                           
  3713                           ;messages.c: 271: MQ_Main_Willing_to_block = 0;
  3714  0012BC  0101               	movlb	1	; () banked
  3715  0012BE  6FA9               	movwf	??_block_on_To_msgqueues& (0+255),b
  3716  0012C0  0E00               	movlw	0
  3717  0012C2  0100               	movlb	0	; () banked
  3718  0012C4  0100               	movlb	0	; () banked
  3719  0012C6  6FD3               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3720  0012C8  0101               	movlb	1	; () banked
  3721  0012CA  51A9               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3722                           
  3723                           ; BSR set to: 1
  3724                           ;messages.c: 272: LATBbits.LATB3 = 0;
  3725  0012CC  968A               	bcf	3978,3,c	;volatile
  3726  0012CE  0012               	return	
  3727  0012D0                     l4603:
  3728                           
  3729                           ;messages.c: 274: }
  3730                           ;messages.c: 275: if (check_msg(&ToMainLow_MQ)) {
  3731  0012D0  0101               	movlb	1	; () banked
  3732  0012D2  0E01               	movlw	high _ToMainLow_MQ
  3733  0012D4  0101               	movlb	1	; () banked
  3734  0012D6  0101               	movlb	1	; () banked
  3735  0012D8  6FA4               	movwf	(check_msg@qptr+1)& (0+255),b
  3736  0012DA  0101               	movlb	1	; () banked
  3737  0012DC  0E6D               	movlw	low _ToMainLow_MQ
  3738  0012DE  0101               	movlb	1	; () banked
  3739  0012E0  0101               	movlb	1	; () banked
  3740  0012E2  6FA3               	movwf	check_msg@qptr& (0+255),b
  3741  0012E4  EC8A  F00E         	call	_check_msg	;wreg free
  3742  0012E8  0900               	iorlw	0
  3743  0012EA  B4D8               	btfsc	status,2,c
  3744  0012EC  D00A               	goto	l4611
  3745                           
  3746                           ;messages.c: 276: MQ_Main_Willing_to_block = 0;
  3747  0012EE  0101               	movlb	1	; () banked
  3748  0012F0  6FA9               	movwf	??_block_on_To_msgqueues& (0+255),b
  3749  0012F2  0E00               	movlw	0
  3750  0012F4  0100               	movlb	0	; () banked
  3751  0012F6  0100               	movlb	0	; () banked
  3752  0012F8  6FD3               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3753  0012FA  0101               	movlb	1	; () banked
  3754  0012FC  51A9               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3755                           
  3756                           ; BSR set to: 1
  3757                           ;messages.c: 277: LATBbits.LATB3 = 0;
  3758  0012FE  968A               	bcf	3978,3,c	;volatile
  3759  001300  0012               	return	
  3760  001302                     l4611:
  3761                           
  3762                           ;messages.c: 279: }
  3763                           ;messages.c: 280: Delay1KTCYx(10);
  3764  001302  0E0A               	movlw	10
  3765  001304  EC7D  F00F         	call	_Delay1KTCYx
  3766                           
  3767                           ;messages.c: 281: LATBbits.LATB3 = !LATBbits.LATB3;
  3768  001308  B68A               	btfsc	3978,3,c	;volatile
  3769  00130A  D002               	goto	u3540
  3770  00130C  0E01               	movlw	1
  3771  00130E  D001               	goto	u3546
  3772  001310                     u3540:
  3773  001310  0E00               	movlw	0
  3774  001312                     u3546:
  3775  001312  0101               	movlb	1	; () banked
  3776  001314  6FA9               	movwf	??_block_on_To_msgqueues& (0+255),b
  3777  001316  0101               	movlb	1	; () banked
  3778  001318  47A9               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3779  00131A  47A9               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3780  00131C  47A9               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3781  00131E  508A               	movf	3978,w,c	;volatile
  3782  001320  0101               	movlb	1	; () banked
  3783  001322  19A9               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  3784  001324  0BF7               	andlw	-9
  3785  001326  19A9               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  3786  001328  6E8A               	movwf	3978,c	;volatile
  3787  00132A  D7B9               	goto	l4595
  3788  00132C                     __end_of_block_on_To_msgqueues:
  3789                           	opt stack 0
  3790                           tblptru	equ	0xFF8
  3791                           tblptrh	equ	0xFF7
  3792                           tblptrl	equ	0xFF6
  3793                           tablat	equ	0xFF5
  3794                           prodh	equ	0xFF4
  3795                           prodl	equ	0xFF3
  3796                           intcon	equ	0xFF2
  3797                           intcon2	equ	0xFF1
  3798                           postinc0	equ	0xFEE
  3799                           wreg	equ	0xFE8
  3800                           postdec1	equ	0xFE5
  3801                           fsr1l	equ	0xFE1
  3802                           indf2	equ	0xFDF
  3803                           postinc2	equ	0xFDE
  3804                           postdec2	equ	0xFDD
  3805                           fsr2h	equ	0xFDA
  3806                           fsr2l	equ	0xFD9
  3807                           status	equ	0xFD8
  3808                           
  3809 ;; *************** function _in_main *****************
  3810 ;; Defined at:
  3811 ;;		line 134 in file "../src/interrupts.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;		None
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;		None
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  2    4[BANK1 ] int 
  3818 ;; Registers used:
  3819 ;;		wreg, status,2, status,0, cstack
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3825 ;;      Params:         0       0       2       0       0
  3826 ;;      Locals:         0       0       0       0       0
  3827 ;;      Temps:          0       0       0       0       0
  3828 ;;      Totals:         0       0       2       0       0
  3829 ;;Total ram usage:        2 bytes
  3830 ;; Hardware stack levels used:    1
  3831 ;; Hardware stack levels required when called:   12
  3832 ;; This function calls:
  3833 ;;		_in_high_int
  3834 ;;		_in_low_int
  3835 ;; This function is called by:
  3836 ;;		_block_on_To_msgqueues
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text19
  3841  001B9E                     __ptext19:
  3842                           	opt stack 0
  3843  001B9E                     _in_main:
  3844                           	opt stack 17
  3845                           
  3846                           ;interrupts.c: 135: if ((!in_low_int()) && (!in_high_int())) {
  3847                           
  3848                           ; BSR set to: 1
  3849                           ;incstack = 0
  3850  001B9E  ECAC  F00D         	call	_in_low_int	;wreg free
  3851  001BA2  0101               	movlb	1	; () banked
  3852  001BA4  0101               	movlb	1	; () banked
  3853  001BA6  51A6               	movf	(?_in_low_int+1)& (0+255),w,b
  3854  001BA8  0101               	movlb	1	; () banked
  3855  001BAA  11A5               	iorwf	?_in_low_int& (0+255),w,b
  3856  001BAC  A4D8               	btfss	status,2,c
  3857  001BAE  D011               	goto	l4625
  3858                           
  3859                           ; BSR set to: 1
  3860  001BB0  ECA4  F00F         	call	_in_high_int	;wreg free
  3861  001BB4  0101               	movlb	1	; () banked
  3862  001BB6  0101               	movlb	1	; () banked
  3863  001BB8  51A4               	movf	(?_in_high_int+1)& (0+255),w,b
  3864  001BBA  0101               	movlb	1	; () banked
  3865  001BBC  11A3               	iorwf	?_in_high_int& (0+255),w,b
  3866  001BBE  A4D8               	btfss	status,2,c
  3867  001BC0  D008               	goto	l4625
  3868                           
  3869                           ; BSR set to: 1
  3870                           ;interrupts.c: 136: return (1);
  3871  001BC2  0E00               	movlw	0
  3872  001BC4  0101               	movlb	1	; () banked
  3873  001BC6  0101               	movlb	1	; () banked
  3874  001BC8  6FA8               	movwf	(?_in_main+1)& (0+255),b
  3875  001BCA  0E01               	movlw	1
  3876  001BCC  0101               	movlb	1	; () banked
  3877  001BCE  6FA7               	movwf	?_in_main& (0+255),b
  3878  001BD0  0012               	return	
  3879  001BD2                     l4625:
  3880                           
  3881                           ; BSR set to: 1
  3882                           ;interrupts.c: 138: return (0);
  3883  001BD2  0E00               	movlw	0
  3884  001BD4  0101               	movlb	1	; () banked
  3885  001BD6  0101               	movlb	1	; () banked
  3886  001BD8  6FA8               	movwf	(?_in_main+1)& (0+255),b
  3887  001BDA  0E00               	movlw	0
  3888  001BDC  0101               	movlb	1	; () banked
  3889  001BDE  6FA7               	movwf	?_in_main& (0+255),b
  3890  001BE0  0012               	return	
  3891  001BE2                     __end_of_in_main:
  3892                           	opt stack 0
  3893                           tblptru	equ	0xFF8
  3894                           tblptrh	equ	0xFF7
  3895                           tblptrl	equ	0xFF6
  3896                           tablat	equ	0xFF5
  3897                           prodh	equ	0xFF4
  3898                           prodl	equ	0xFF3
  3899                           intcon	equ	0xFF2
  3900                           intcon2	equ	0xFF1
  3901                           postinc0	equ	0xFEE
  3902                           wreg	equ	0xFE8
  3903                           postdec1	equ	0xFE5
  3904                           fsr1l	equ	0xFE1
  3905                           indf2	equ	0xFDF
  3906                           postinc2	equ	0xFDE
  3907                           postdec2	equ	0xFDD
  3908                           fsr2h	equ	0xFDA
  3909                           fsr2l	equ	0xFD9
  3910                           status	equ	0xFD8
  3911                           
  3912 ;; *************** function _in_low_int *****************
  3913 ;; Defined at:
  3914 ;;		line 124 in file "../src/interrupts.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;		None
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;		None
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  2    2[BANK1 ] int 
  3921 ;; Registers used:
  3922 ;;		wreg, status,2, status,0, cstack
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3928 ;;      Params:         0       0       2       0       0
  3929 ;;      Locals:         0       0       0       0       0
  3930 ;;      Temps:          0       0       0       0       0
  3931 ;;      Totals:         0       0       2       0       0
  3932 ;;Total ram usage:        2 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:   11
  3935 ;; This function calls:
  3936 ;;		_in_high_int
  3937 ;; This function is called by:
  3938 ;;		_in_main
  3939 ;;		_SleepIfOkay
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text20
  3944  001B58                     __ptext20:
  3945                           	opt stack 0
  3946  001B58                     _in_low_int:
  3947                           	opt stack 17
  3948                           
  3949                           ;interrupts.c: 125: if (INTCONbits.GIEL == 1) {
  3950                           
  3951                           ; BSR set to: 1
  3952                           ;incstack = 0
  3953  001B58  ACF2               	btfss	intcon,6,c	;volatile
  3954  001B5A  D008               	goto	l4573
  3955                           
  3956                           ;interrupts.c: 126: return (0);
  3957  001B5C  0E00               	movlw	0
  3958  001B5E  0101               	movlb	1	; () banked
  3959  001B60  0101               	movlb	1	; () banked
  3960  001B62  6FA6               	movwf	(?_in_low_int+1)& (0+255),b
  3961  001B64  0E00               	movlw	0
  3962  001B66  0101               	movlb	1	; () banked
  3963  001B68  6FA5               	movwf	?_in_low_int& (0+255),b
  3964  001B6A  0012               	return	
  3965  001B6C                     l4573:
  3966  001B6C  ECA4  F00F         	call	_in_high_int	;wreg free
  3967  001B70  0101               	movlb	1	; () banked
  3968  001B72  0101               	movlb	1	; () banked
  3969  001B74  51A4               	movf	(?_in_high_int+1)& (0+255),w,b
  3970  001B76  0101               	movlb	1	; () banked
  3971  001B78  11A3               	iorwf	?_in_high_int& (0+255),w,b
  3972  001B7A  B4D8               	btfsc	status,2,c
  3973  001B7C  D008               	goto	l4581
  3974                           
  3975                           ; BSR set to: 1
  3976                           ;interrupts.c: 128: return (0);
  3977  001B7E  0E00               	movlw	0
  3978  001B80  0101               	movlb	1	; () banked
  3979  001B82  0101               	movlb	1	; () banked
  3980  001B84  6FA6               	movwf	(?_in_low_int+1)& (0+255),b
  3981  001B86  0E00               	movlw	0
  3982  001B88  0101               	movlb	1	; () banked
  3983  001B8A  6FA5               	movwf	?_in_low_int& (0+255),b
  3984  001B8C  0012               	return	
  3985  001B8E                     l4581:
  3986                           
  3987                           ; BSR set to: 1
  3988                           ;interrupts.c: 130: return (1);
  3989  001B8E  0E00               	movlw	0
  3990  001B90  0101               	movlb	1	; () banked
  3991  001B92  0101               	movlb	1	; () banked
  3992  001B94  6FA6               	movwf	(?_in_low_int+1)& (0+255),b
  3993  001B96  0E01               	movlw	1
  3994  001B98  0101               	movlb	1	; () banked
  3995  001B9A  6FA5               	movwf	?_in_low_int& (0+255),b
  3996  001B9C  0012               	return	
  3997  001B9E                     __end_of_in_low_int:
  3998                           	opt stack 0
  3999                           tblptru	equ	0xFF8
  4000                           tblptrh	equ	0xFF7
  4001                           tblptrl	equ	0xFF6
  4002                           tablat	equ	0xFF5
  4003                           prodh	equ	0xFF4
  4004                           prodl	equ	0xFF3
  4005                           intcon	equ	0xFF2
  4006                           intcon2	equ	0xFF1
  4007                           postinc0	equ	0xFEE
  4008                           wreg	equ	0xFE8
  4009                           postdec1	equ	0xFE5
  4010                           fsr1l	equ	0xFE1
  4011                           indf2	equ	0xFDF
  4012                           postinc2	equ	0xFDE
  4013                           postdec2	equ	0xFDD
  4014                           fsr2h	equ	0xFDA
  4015                           fsr2l	equ	0xFD9
  4016                           status	equ	0xFD8
  4017                           
  4018 ;; *************** function _in_high_int *****************
  4019 ;; Defined at:
  4020 ;;		line 116 in file "../src/interrupts.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;		None
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;		None
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  2    0[BANK1 ] int 
  4027 ;; Registers used:
  4028 ;;		wreg, status,2
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4034 ;;      Params:         0       0       2       0       0
  4035 ;;      Locals:         0       0       0       0       0
  4036 ;;      Temps:          0       0       0       0       0
  4037 ;;      Totals:         0       0       2       0       0
  4038 ;;Total ram usage:        2 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; Hardware stack levels required when called:   10
  4041 ;; This function calls:
  4042 ;;		Nothing
  4043 ;; This function is called by:
  4044 ;;		_in_low_int
  4045 ;;		_in_main
  4046 ;;		_SleepIfOkay
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           	psect	text21
  4051  001F48                     __ptext21:
  4052                           	opt stack 0
  4053  001F48                     _in_high_int:
  4054                           	opt stack 17
  4055                           
  4056                           ;interrupts.c: 117: return (!INTCONbits.GIEH);
  4057                           
  4058                           ; BSR set to: 1
  4059                           ;incstack = 0
  4060  001F48  0E00               	movlw	0
  4061  001F4A  AEF2               	btfss	intcon,7,c	;volatile
  4062  001F4C  0E01               	movlw	1
  4063  001F4E  0101               	movlb	1	; () banked
  4064  001F50  0101               	movlb	1	; () banked
  4065  001F52  6FA3               	movwf	?_in_high_int& (0+255),b
  4066  001F54  0101               	movlb	1	; () banked
  4067  001F56  6BA4               	clrf	(?_in_high_int+1)& (0+255),b
  4068  001F58  0012               	return	
  4069  001F5A                     __end_of_in_high_int:
  4070                           	opt stack 0
  4071                           tblptru	equ	0xFF8
  4072                           tblptrh	equ	0xFF7
  4073                           tblptrl	equ	0xFF6
  4074                           tablat	equ	0xFF5
  4075                           prodh	equ	0xFF4
  4076                           prodl	equ	0xFF3
  4077                           intcon	equ	0xFF2
  4078                           intcon2	equ	0xFF1
  4079                           postinc0	equ	0xFEE
  4080                           wreg	equ	0xFE8
  4081                           postdec1	equ	0xFE5
  4082                           fsr1l	equ	0xFE1
  4083                           indf2	equ	0xFDF
  4084                           postinc2	equ	0xFDE
  4085                           postdec2	equ	0xFDD
  4086                           fsr2h	equ	0xFDA
  4087                           fsr2l	equ	0xFD9
  4088                           status	equ	0xFD8
  4089                           
  4090 ;; *************** function _check_msg *****************
  4091 ;; Defined at:
  4092 ;;		line 227 in file "../src/messages.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  4095 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;		None
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  1    wreg      unsigned char 
  4100 ;; Registers used:
  4101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4107 ;;      Params:         0       0       2       0       0
  4108 ;;      Locals:         0       0       0       0       0
  4109 ;;      Temps:          0       0       1       0       0
  4110 ;;      Totals:         0       0       3       0       0
  4111 ;;Total ram usage:        3 bytes
  4112 ;; Hardware stack levels used:    1
  4113 ;; Hardware stack levels required when called:   10
  4114 ;; This function calls:
  4115 ;;		Nothing
  4116 ;; This function is called by:
  4117 ;;		_block_on_To_msgqueues
  4118 ;;		_SleepIfOkay
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           	psect	text22
  4123  001D14                     __ptext22:
  4124                           	opt stack 0
  4125  001D14                     _check_msg:
  4126                           	opt stack 19
  4127                           
  4128                           ;messages.c: 228: return (qptr->queue[qptr->cur_read_ind].full);
  4129                           
  4130                           ; BSR set to: 1
  4131                           ;incstack = 0
  4132  001D14  0101               	movlb	1	; () banked
  4133  001D16  EE20 F035          	lfsr	2,53
  4134  001D1A  0101               	movlb	1	; () banked
  4135  001D1C  51A3               	movf	check_msg@qptr& (0+255),w,b
  4136  001D1E  26D9               	addwf	fsr2l,f,c
  4137  001D20  0101               	movlb	1	; () banked
  4138  001D22  51A4               	movf	(check_msg@qptr+1)& (0+255),w,b
  4139  001D24  22DA               	addwfc	fsr2h,f,c
  4140  001D26  50DF               	movf	indf2,w,c
  4141  001D28  0101               	movlb	1	; () banked
  4142  001D2A  6FA5               	movwf	??_check_msg& (0+255),b
  4143  001D2C  0101               	movlb	1	; () banked
  4144  001D2E  51A5               	movf	??_check_msg& (0+255),w,b
  4145  001D30  0D0D               	mullw	13
  4146  001D32  50F3               	movf	prodl,w,c
  4147  001D34  0101               	movlb	1	; () banked
  4148  001D36  0101               	movlb	1	; () banked
  4149  001D38  25A3               	addwf	check_msg@qptr& (0+255),w,b
  4150  001D3A  6ED9               	movwf	fsr2l,c
  4151  001D3C  50F4               	movf	prodh,w,c
  4152  001D3E  0101               	movlb	1	; () banked
  4153  001D40  0101               	movlb	1	; () banked
  4154  001D42  21A4               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4155  001D44  6EDA               	movwf	fsr2h,c
  4156  001D46  50DF               	movf	indf2,w,c
  4157  001D48  0012               	return	
  4158  001D4A                     __end_of_check_msg:
  4159                           	opt stack 0
  4160                           tblptru	equ	0xFF8
  4161                           tblptrh	equ	0xFF7
  4162                           tblptrl	equ	0xFF6
  4163                           tablat	equ	0xFF5
  4164                           prodh	equ	0xFF4
  4165                           prodl	equ	0xFF3
  4166                           intcon	equ	0xFF2
  4167                           intcon2	equ	0xFF1
  4168                           postinc0	equ	0xFEE
  4169                           wreg	equ	0xFE8
  4170                           postdec1	equ	0xFE5
  4171                           fsr1l	equ	0xFE1
  4172                           indf2	equ	0xFDF
  4173                           postinc2	equ	0xFDE
  4174                           postdec2	equ	0xFDD
  4175                           fsr2h	equ	0xFDA
  4176                           fsr2l	equ	0xFD9
  4177                           status	equ	0xFD8
  4178                           
  4179 ;; *************** function _Delay1KTCYx *****************
  4180 ;; Defined at:
  4181 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/pic18/d1ktcyx.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  unit            1    wreg     unsigned char 
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;  unit            1    0[BANK1 ] unsigned char 
  4186 ;; Return value:  Size  Location     Type
  4187 ;;		None               void
  4188 ;; Registers used:
  4189 ;;		wreg
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4195 ;;      Params:         0       0       0       0       0
  4196 ;;      Locals:         0       0       1       0       0
  4197 ;;      Temps:          0       0       0       0       0
  4198 ;;      Totals:         0       0       1       0       0
  4199 ;;Total ram usage:        1 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; Hardware stack levels required when called:   10
  4202 ;; This function calls:
  4203 ;;		Nothing
  4204 ;; This function is called by:
  4205 ;;		_block_on_To_msgqueues
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           	psect	text23
  4210  001EFA                     __ptext23:
  4211                           	opt stack 0
  4212  001EFA                     _Delay1KTCYx:
  4213                           	opt stack 19
  4214                           
  4215                           ; BSR set to: 1
  4216                           ;incstack = 0
  4217                           ;Delay1KTCYx@unit stored from wreg
  4218  001EFA  CFE8 F1A3          	movff	wreg,Delay1KTCYx@unit
  4219  001EFE                     l1077:
  4220  001EFE  0EFA               	movlw	250
  4221  001F00                     u4337:
  4222  001F00  F000               	nop	
  4223  001F02  2EE8               	decfsz	wreg,f,c
  4224  001F04  D7FD               	goto	u4337
  4225  001F06  0101               	movlb	1	; () banked
  4226  001F08  0101               	movlb	1	; () banked
  4227  001F0A  2FA3               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4228  001F0C  D7F8               	goto	l1077
  4229  001F0E  0012               	return	
  4230  001F10                     __end_of_Delay1KTCYx:
  4231                           	opt stack 0
  4232                           tblptru	equ	0xFF8
  4233                           tblptrh	equ	0xFF7
  4234                           tblptrl	equ	0xFF6
  4235                           tablat	equ	0xFF5
  4236                           prodh	equ	0xFF4
  4237                           prodl	equ	0xFF3
  4238                           intcon	equ	0xFF2
  4239                           intcon2	equ	0xFF1
  4240                           postinc0	equ	0xFEE
  4241                           wreg	equ	0xFE8
  4242                           postdec1	equ	0xFE5
  4243                           fsr1l	equ	0xFE1
  4244                           indf2	equ	0xFDF
  4245                           postinc2	equ	0xFDE
  4246                           postdec2	equ	0xFDD
  4247                           fsr2h	equ	0xFDA
  4248                           fsr2l	equ	0xFD9
  4249                           status	equ	0xFD8
  4250                           
  4251 ;; *************** function ___awdiv *****************
  4252 ;; Defined at:
  4253 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/common/awdiv.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;  dividend        2    0[BANK1 ] int 
  4256 ;;  divisor         2    2[BANK1 ] int 
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;  quotient        2    7[BANK1 ] int 
  4259 ;;  sign            1    6[BANK1 ] unsigned char 
  4260 ;;  counter         1    5[BANK1 ] unsigned char 
  4261 ;; Return value:  Size  Location     Type
  4262 ;;                  2    0[BANK1 ] int 
  4263 ;; Registers used:
  4264 ;;		wreg, status,2, status,0, prodl
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4270 ;;      Params:         0       0       4       0       0
  4271 ;;      Locals:         0       0       4       0       0
  4272 ;;      Temps:          0       0       1       0       0
  4273 ;;      Totals:         0       0       9       0       0
  4274 ;;Total ram usage:        9 bytes
  4275 ;; Hardware stack levels used:    1
  4276 ;; Hardware stack levels required when called:   10
  4277 ;; This function calls:
  4278 ;;		Nothing
  4279 ;; This function is called by:
  4280 ;;		_main
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284                           	psect	text24
  4285  000C0C                     __ptext24:
  4286                           	opt stack 0
  4287  000C0C                     ___awdiv:
  4288                           	opt stack 20
  4289                           
  4290                           ; BSR set to: 1
  4291                           ;incstack = 0
  4292  000C0C  0101               	movlb	1	; () banked
  4293  000C0E  6FA7               	movwf	??___awdiv& (0+255),b
  4294  000C10  0E00               	movlw	0
  4295  000C12  0101               	movlb	1	; () banked
  4296  000C14  0101               	movlb	1	; () banked
  4297  000C16  6FA9               	movwf	___awdiv@sign& (0+255),b
  4298  000C18  0101               	movlb	1	; () banked
  4299  000C1A  51A7               	movf	??___awdiv& (0+255),w,b
  4300                           
  4301                           ; BSR set to: 1
  4302  000C1C  0101               	movlb	1	; () banked
  4303  000C1E  0101               	movlb	1	; () banked
  4304  000C20  51A6               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4305  000C22  0A80               	xorlw	128
  4306  000C24  6EF3               	movwf	prodl,c
  4307  000C26  0E80               	movlw	128
  4308  000C28  5CF3               	subwf	prodl,w,c
  4309  000C2A  0E00               	movlw	0
  4310  000C2C  B4D8               	btfsc	status,2,c
  4311  000C2E  5DA5               	subwf	___awdiv@divisor& (0+255),w,b
  4312  000C30  B0D8               	btfsc	status,0,c
  4313  000C32  D00F               	goto	l5107
  4314                           
  4315                           ; BSR set to: 1
  4316  000C34  0101               	movlb	1	; () banked
  4317  000C36  0101               	movlb	1	; () banked
  4318  000C38  6DA5               	negf	___awdiv@divisor& (0+255),b
  4319  000C3A  0101               	movlb	1	; () banked
  4320  000C3C  1FA6               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4321  000C3E  B0D8               	btfsc	status,0,c
  4322  000C40  2BA6               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4323                           
  4324                           ; BSR set to: 1
  4325  000C42  0101               	movlb	1	; () banked
  4326  000C44  6FA7               	movwf	??___awdiv& (0+255),b
  4327  000C46  0E01               	movlw	1
  4328  000C48  0101               	movlb	1	; () banked
  4329  000C4A  0101               	movlb	1	; () banked
  4330  000C4C  6FA9               	movwf	___awdiv@sign& (0+255),b
  4331  000C4E  0101               	movlb	1	; () banked
  4332  000C50  51A7               	movf	??___awdiv& (0+255),w,b
  4333  000C52                     l5107:
  4334                           
  4335                           ; BSR set to: 1
  4336  000C52  0101               	movlb	1	; () banked
  4337  000C54  0101               	movlb	1	; () banked
  4338  000C56  51A4               	movf	(___awdiv@dividend+1)& (0+255),w,b
  4339  000C58  0A80               	xorlw	128
  4340  000C5A  6EF3               	movwf	prodl,c
  4341  000C5C  0E80               	movlw	128
  4342  000C5E  5CF3               	subwf	prodl,w,c
  4343  000C60  0E00               	movlw	0
  4344  000C62  B4D8               	btfsc	status,2,c
  4345  000C64  5DA3               	subwf	___awdiv@dividend& (0+255),w,b
  4346  000C66  B0D8               	btfsc	status,0,c
  4347  000C68  D00B               	goto	l5113
  4348                           
  4349                           ; BSR set to: 1
  4350  000C6A  0101               	movlb	1	; () banked
  4351  000C6C  0101               	movlb	1	; () banked
  4352  000C6E  6DA3               	negf	___awdiv@dividend& (0+255),b
  4353  000C70  0101               	movlb	1	; () banked
  4354  000C72  1FA4               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4355  000C74  B0D8               	btfsc	status,0,c
  4356  000C76  2BA4               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4357                           
  4358                           ; BSR set to: 1
  4359  000C78  0E01               	movlw	1
  4360  000C7A  0101               	movlb	1	; () banked
  4361  000C7C  0101               	movlb	1	; () banked
  4362  000C7E  1BA9               	xorwf	___awdiv@sign& (0+255),f,b
  4363  000C80                     l5113:
  4364                           
  4365                           ; BSR set to: 1
  4366  000C80  0E00               	movlw	0
  4367  000C82  0101               	movlb	1	; () banked
  4368  000C84  0101               	movlb	1	; () banked
  4369  000C86  6FAB               	movwf	(___awdiv@quotient+1)& (0+255),b
  4370  000C88  0E00               	movlw	0
  4371  000C8A  0101               	movlb	1	; () banked
  4372  000C8C  6FAA               	movwf	___awdiv@quotient& (0+255),b
  4373                           
  4374                           ; BSR set to: 1
  4375  000C8E  0101               	movlb	1	; () banked
  4376  000C90  0101               	movlb	1	; () banked
  4377  000C92  51A6               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4378  000C94  11A5               	iorwf	___awdiv@divisor& (0+255),w,b
  4379  000C96  B4D8               	btfsc	status,2,c
  4380  000C98  D043               	goto	l5135
  4381                           
  4382                           ; BSR set to: 1
  4383  000C9A  0101               	movlb	1	; () banked
  4384  000C9C  6FA7               	movwf	??___awdiv& (0+255),b
  4385  000C9E  0E01               	movlw	1
  4386  000CA0  0101               	movlb	1	; () banked
  4387  000CA2  0101               	movlb	1	; () banked
  4388  000CA4  6FA8               	movwf	___awdiv@counter& (0+255),b
  4389  000CA6  0101               	movlb	1	; () banked
  4390  000CA8  51A7               	movf	??___awdiv& (0+255),w,b
  4391  000CAA  D009               	goto	l5121
  4392  000CAC                     l5119:
  4393                           
  4394                           ; BSR set to: 1
  4395  000CAC  0101               	movlb	1	; () banked
  4396  000CAE  0101               	movlb	1	; () banked
  4397  000CB0  0101               	movlb	1	; () banked
  4398  000CB2  90D8               	bcf	status,0,c
  4399  000CB4  37A5               	rlcf	___awdiv@divisor& (0+255),f,b
  4400  000CB6  37A6               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4401  000CB8  0101               	movlb	1	; () banked
  4402  000CBA  0101               	movlb	1	; () banked
  4403  000CBC  2BA8               	incf	___awdiv@counter& (0+255),f,b
  4404  000CBE                     l5121:
  4405                           
  4406                           ; BSR set to: 1
  4407  000CBE  0101               	movlb	1	; () banked
  4408  000CC0  0101               	movlb	1	; () banked
  4409  000CC2  AFA6               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4410  000CC4  D7F3               	goto	l5119
  4411  000CC6                     l5123:
  4412                           
  4413                           ; BSR set to: 1
  4414  000CC6  0101               	movlb	1	; () banked
  4415  000CC8  0101               	movlb	1	; () banked
  4416  000CCA  0101               	movlb	1	; () banked
  4417  000CCC  90D8               	bcf	status,0,c
  4418  000CCE  37AA               	rlcf	___awdiv@quotient& (0+255),f,b
  4419  000CD0  37AB               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4420                           
  4421                           ; BSR set to: 1
  4422  000CD2  0101               	movlb	1	; () banked
  4423  000CD4  0101               	movlb	1	; () banked
  4424  000CD6  51A5               	movf	___awdiv@divisor& (0+255),w,b
  4425  000CD8  0101               	movlb	1	; () banked
  4426  000CDA  0101               	movlb	1	; () banked
  4427  000CDC  5DA3               	subwf	___awdiv@dividend& (0+255),w,b
  4428  000CDE  0101               	movlb	1	; () banked
  4429  000CE0  0101               	movlb	1	; () banked
  4430  000CE2  51A6               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4431  000CE4  0101               	movlb	1	; () banked
  4432  000CE6  0101               	movlb	1	; () banked
  4433  000CE8  59A4               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4434  000CEA  A0D8               	btfss	status,0,c
  4435  000CEC  D00F               	goto	l5131
  4436                           
  4437                           ; BSR set to: 1
  4438  000CEE  0101               	movlb	1	; () banked
  4439  000CF0  0101               	movlb	1	; () banked
  4440  000CF2  51A5               	movf	___awdiv@divisor& (0+255),w,b
  4441  000CF4  0101               	movlb	1	; () banked
  4442  000CF6  0101               	movlb	1	; () banked
  4443  000CF8  5FA3               	subwf	___awdiv@dividend& (0+255),f,b
  4444  000CFA  0101               	movlb	1	; () banked
  4445  000CFC  0101               	movlb	1	; () banked
  4446  000CFE  51A6               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4447  000D00  0101               	movlb	1	; () banked
  4448  000D02  0101               	movlb	1	; () banked
  4449  000D04  5BA4               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4450                           
  4451                           ; BSR set to: 1
  4452  000D06  0101               	movlb	1	; () banked
  4453  000D08  0101               	movlb	1	; () banked
  4454  000D0A  81AA               	bsf	___awdiv@quotient& (0+255),0,b
  4455  000D0C                     l5131:
  4456                           
  4457                           ; BSR set to: 1
  4458  000D0C  0101               	movlb	1	; () banked
  4459  000D0E  0101               	movlb	1	; () banked
  4460  000D10  0101               	movlb	1	; () banked
  4461  000D12  90D8               	bcf	status,0,c
  4462  000D14  33A6               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4463  000D16  33A5               	rrcf	___awdiv@divisor& (0+255),f,b
  4464                           
  4465                           ; BSR set to: 1
  4466  000D18  0101               	movlb	1	; () banked
  4467  000D1A  0101               	movlb	1	; () banked
  4468  000D1C  2FA8               	decfsz	___awdiv@counter& (0+255),f,b
  4469  000D1E  D7D3               	goto	l5123
  4470  000D20                     l5135:
  4471                           
  4472                           ; BSR set to: 1
  4473  000D20  0101               	movlb	1	; () banked
  4474  000D22  0101               	movlb	1	; () banked
  4475  000D24  51A9               	movf	___awdiv@sign& (0+255),w,b
  4476  000D26  B4D8               	btfsc	status,2,c
  4477  000D28  D007               	goto	l5139
  4478                           
  4479                           ; BSR set to: 1
  4480  000D2A  0101               	movlb	1	; () banked
  4481  000D2C  0101               	movlb	1	; () banked
  4482  000D2E  6DAA               	negf	___awdiv@quotient& (0+255),b
  4483  000D30  0101               	movlb	1	; () banked
  4484  000D32  1FAB               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4485  000D34  B0D8               	btfsc	status,0,c
  4486  000D36  2BAB               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4487  000D38                     l5139:
  4488                           
  4489                           ; BSR set to: 1
  4490  000D38  C1AA  F1A3         	movff	___awdiv@quotient,?___awdiv
  4491  000D3C  C1AB  F1A4         	movff	___awdiv@quotient+1,?___awdiv+1
  4492  000D40  0012               	return	
  4493  000D42                     __end_of___awdiv:
  4494                           	opt stack 0
  4495                           tblptru	equ	0xFF8
  4496                           tblptrh	equ	0xFF7
  4497                           tblptrl	equ	0xFF6
  4498                           tablat	equ	0xFF5
  4499                           prodh	equ	0xFF4
  4500                           prodl	equ	0xFF3
  4501                           intcon	equ	0xFF2
  4502                           intcon2	equ	0xFF1
  4503                           postinc0	equ	0xFEE
  4504                           wreg	equ	0xFE8
  4505                           postdec1	equ	0xFE5
  4506                           fsr1l	equ	0xFE1
  4507                           indf2	equ	0xFDF
  4508                           postinc2	equ	0xFDE
  4509                           postdec2	equ	0xFDD
  4510                           fsr2h	equ	0xFDA
  4511                           fsr2l	equ	0xFD9
  4512                           status	equ	0xFD8
  4513                           
  4514 ;; *************** function _ToMainLow_sendmsg *****************
  4515 ;; Defined at:
  4516 ;;		line 108 in file "../src/messages.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;  length          1    wreg     unsigned char 
  4519 ;;  msgtype         1   22[BANK1 ] unsigned char 
  4520 ;;  data            2   23[BANK1 ] PTR void 
  4521 ;;		 -> main@msgbuffer(11), NULL(0), 
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;  length          1   25[BANK1 ] unsigned char 
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  1    wreg      char 
  4526 ;; Registers used:
  4527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4533 ;;      Params:         0       0       3       0       0
  4534 ;;      Locals:         0       0       1       0       0
  4535 ;;      Temps:          0       0       0       0       0
  4536 ;;      Totals:         0       0       4       0       0
  4537 ;;Total ram usage:        4 bytes
  4538 ;; Hardware stack levels used:    1
  4539 ;; Hardware stack levels required when called:   12
  4540 ;; This function calls:
  4541 ;;		_send_msg
  4542 ;; This function is called by:
  4543 ;;		_main
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547                           	psect	text25
  4548  001D4A                     __ptext25:
  4549                           	opt stack 0
  4550  001D4A                     _ToMainLow_sendmsg:
  4551                           	opt stack 18
  4552                           
  4553                           ; BSR set to: 1
  4554                           ;incstack = 0
  4555                           ;ToMainLow_sendmsg@length stored from wreg
  4556  001D4A  CFE8 F1BC          	movff	wreg,ToMainLow_sendmsg@length
  4557                           
  4558                           ;messages.c: 114: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  4559                           ;	Return value of _ToMainLow_sendmsg is never used
  4560  001D4E  0101               	movlb	1	; () banked
  4561  001D50  0E01               	movlw	high _ToMainLow_MQ
  4562  001D52  0101               	movlb	1	; () banked
  4563  001D54  0101               	movlb	1	; () banked
  4564  001D56  6FAE               	movwf	(send_msg@qptr+1)& (0+255),b
  4565  001D58  0101               	movlb	1	; () banked
  4566  001D5A  0E6D               	movlw	low _ToMainLow_MQ
  4567  001D5C  0101               	movlb	1	; () banked
  4568  001D5E  0101               	movlb	1	; () banked
  4569  001D60  6FAD               	movwf	send_msg@qptr& (0+255),b
  4570  001D62  C1BC  F1AF         	movff	ToMainLow_sendmsg@length,send_msg@length
  4571  001D66  C1B9  F1B0         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  4572  001D6A  0101               	movlb	1	; () banked
  4573  001D6C  0101               	movlb	1	; () banked
  4574  001D6E  C1BB  F1B2         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  4575  001D72  0101               	movlb	1	; () banked
  4576  001D74  0101               	movlb	1	; () banked
  4577  001D76  C1BA  F1B1         	movff	ToMainLow_sendmsg@data,send_msg@data
  4578  001D7A  ECCE  F007         	call	_send_msg	;wreg free
  4579  001D7E  0012               	return	
  4580  001D80                     __end_of_ToMainLow_sendmsg:
  4581                           	opt stack 0
  4582                           tblptru	equ	0xFF8
  4583                           tblptrh	equ	0xFF7
  4584                           tblptrl	equ	0xFF6
  4585                           tablat	equ	0xFF5
  4586                           prodh	equ	0xFF4
  4587                           prodl	equ	0xFF3
  4588                           intcon	equ	0xFF2
  4589                           intcon2	equ	0xFF1
  4590                           postinc0	equ	0xFEE
  4591                           wreg	equ	0xFE8
  4592                           postdec1	equ	0xFE5
  4593                           fsr1l	equ	0xFE1
  4594                           indf2	equ	0xFDF
  4595                           postinc2	equ	0xFDE
  4596                           postdec2	equ	0xFDD
  4597                           fsr2h	equ	0xFDA
  4598                           fsr2l	equ	0xFD9
  4599                           status	equ	0xFD8
  4600                           
  4601 ;; *************** function _send_msg *****************
  4602 ;; Defined at:
  4603 ;;		line 29 in file "../src/messages.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  4606 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4607 ;;  length          1   12[BANK1 ] unsigned char 
  4608 ;;  msgtype         1   13[BANK1 ] unsigned char 
  4609 ;;  data            2   14[BANK1 ] PTR void 
  4610 ;;		 -> main@msgbuffer(11), main@t0thread_data(2), main@t1thread_data(2), i2c_int_handler@error_buf(3), 
  4611 ;;		 -> NULL(0), 
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  4614 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4615 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4616 ;;  tlength         2   17[BANK1 ] unsigned int 
  4617 ;;  slot            1   19[BANK1 ] unsigned char 
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  1    wreg      char 
  4620 ;; Registers used:
  4621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4627 ;;      Params:         0       0       6       0       0
  4628 ;;      Locals:         0       0       5       0       0
  4629 ;;      Temps:          0       0       1       0       0
  4630 ;;      Totals:         0       0      12       0       0
  4631 ;;Total ram usage:       12 bytes
  4632 ;; Hardware stack levels used:    1
  4633 ;; Hardware stack levels required when called:   11
  4634 ;; This function calls:
  4635 ;;		_memcpy
  4636 ;; This function is called by:
  4637 ;;		_ToMainLow_sendmsg
  4638 ;;		_FromMainHigh_sendmsg
  4639 ;;		_FromMainLow_sendmsg
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           	psect	text26
  4644  000F9C                     __ptext26:
  4645                           	opt stack 0
  4646  000F9C                     _send_msg:
  4647                           	opt stack 17
  4648                           
  4649                           ;messages.c: 30: unsigned char slot;
  4650                           ;messages.c: 32: msg *qmsg;
  4651                           ;messages.c: 33: size_t tlength = length;
  4652                           
  4653                           ;incstack = 0
  4654  000F9C  0101               	movlb	1	; () banked
  4655  000F9E  0101               	movlb	1	; () banked
  4656  000FA0  C1AF  F1B4         	movff	send_msg@length,send_msg@tlength
  4657  000FA4  0101               	movlb	1	; () banked
  4658  000FA6  0101               	movlb	1	; () banked
  4659  000FA8  6BB5               	clrf	(send_msg@tlength+1)& (0+255),b
  4660                           
  4661                           ; BSR set to: 1
  4662                           ;messages.c: 43: slot = qptr->cur_write_ind;
  4663  000FAA  0101               	movlb	1	; () banked
  4664  000FAC  EE20 F034          	lfsr	2,52
  4665  000FB0  0101               	movlb	1	; () banked
  4666  000FB2  51AD               	movf	send_msg@qptr& (0+255),w,b
  4667  000FB4  26D9               	addwf	fsr2l,f,c
  4668  000FB6  0101               	movlb	1	; () banked
  4669  000FB8  51AE               	movf	(send_msg@qptr+1)& (0+255),w,b
  4670  000FBA  22DA               	addwfc	fsr2h,f,c
  4671  000FBC  50DF               	movf	indf2,w,c
  4672  000FBE  0101               	movlb	1	; () banked
  4673  000FC0  0101               	movlb	1	; () banked
  4674  000FC2  6FB6               	movwf	send_msg@slot& (0+255),b
  4675                           
  4676                           ; BSR set to: 1
  4677                           ;messages.c: 44: qmsg = &(qptr->queue[slot]);
  4678  000FC4  0101               	movlb	1	; () banked
  4679  000FC6  0101               	movlb	1	; () banked
  4680  000FC8  51B6               	movf	send_msg@slot& (0+255),w,b
  4681  000FCA  0D0D               	mullw	13
  4682  000FCC  50F3               	movf	prodl,w,c
  4683  000FCE  0101               	movlb	1	; () banked
  4684  000FD0  0101               	movlb	1	; () banked
  4685  000FD2  25AD               	addwf	send_msg@qptr& (0+255),w,b
  4686  000FD4  0101               	movlb	1	; () banked
  4687  000FD6  0101               	movlb	1	; () banked
  4688  000FD8  6FB7               	movwf	send_msg@qmsg& (0+255),b
  4689  000FDA  50F4               	movf	prodh,w,c
  4690  000FDC  0101               	movlb	1	; () banked
  4691  000FDE  0101               	movlb	1	; () banked
  4692  000FE0  21AE               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  4693  000FE2  0101               	movlb	1	; () banked
  4694  000FE4  6FB8               	movwf	(send_msg@qmsg+1)& (0+255),b
  4695                           
  4696                           ; BSR set to: 1
  4697                           ;messages.c: 46: if (qmsg->full != 0) {
  4698  000FE6  C1B7  FFD9         	movff	send_msg@qmsg,fsr2l
  4699  000FEA  C1B8  FFDA         	movff	send_msg@qmsg+1,fsr2h
  4700  000FEE  50DF               	movf	indf2,w,c
  4701  000FF0  B4D8               	btfsc	status,2,c
  4702  000FF2  D002               	goto	l4455
  4703                           
  4704                           ; BSR set to: 1
  4705                           ;messages.c: 47: return (-1);
  4706  000FF4  0EFF               	movlw	255
  4707  000FF6  0012               	return	
  4708  000FF8                     l4455:
  4709                           
  4710                           ; BSR set to: 1
  4711                           ;messages.c: 48: }
  4712                           ;messages.c: 51: qmsg->length = length;
  4713  000FF8  0101               	movlb	1	; () banked
  4714  000FFA  EE20 F001          	lfsr	2,1
  4715  000FFE  0101               	movlb	1	; () banked
  4716  001000  51B7               	movf	send_msg@qmsg& (0+255),w,b
  4717  001002  26D9               	addwf	fsr2l,f,c
  4718  001004  0101               	movlb	1	; () banked
  4719  001006  51B8               	movf	(send_msg@qmsg+1)& (0+255),w,b
  4720  001008  22DA               	addwfc	fsr2h,f,c
  4721  00100A  0101               	movlb	1	; () banked
  4722  00100C  C1AF  FFDF         	movff	send_msg@length,indf2
  4723                           
  4724                           ;messages.c: 52: qmsg->msgtype = msgtype;
  4725  001010  0101               	movlb	1	; () banked
  4726  001012  EE20 F002          	lfsr	2,2
  4727  001016  0101               	movlb	1	; () banked
  4728  001018  51B7               	movf	send_msg@qmsg& (0+255),w,b
  4729  00101A  26D9               	addwf	fsr2l,f,c
  4730  00101C  0101               	movlb	1	; () banked
  4731  00101E  51B8               	movf	(send_msg@qmsg+1)& (0+255),w,b
  4732  001020  22DA               	addwfc	fsr2h,f,c
  4733  001022  0101               	movlb	1	; () banked
  4734  001024  C1B0  FFDF         	movff	send_msg@msgtype,indf2
  4735                           
  4736                           ; BSR set to: 1
  4737                           ;messages.c: 60: memcpy(qmsg->data, data, tlength);
  4738  001028  0E03               	movlw	3
  4739  00102A  0101               	movlb	1	; () banked
  4740  00102C  0101               	movlb	1	; () banked
  4741  00102E  25B7               	addwf	send_msg@qmsg& (0+255),w,b
  4742  001030  0101               	movlb	1	; () banked
  4743  001032  0101               	movlb	1	; () banked
  4744  001034  6FA3               	movwf	memcpy@d1& (0+255),b
  4745  001036  0E00               	movlw	0
  4746  001038  0101               	movlb	1	; () banked
  4747  00103A  0101               	movlb	1	; () banked
  4748  00103C  21B8               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  4749  00103E  0101               	movlb	1	; () banked
  4750  001040  6FA4               	movwf	(memcpy@d1+1)& (0+255),b
  4751  001042  0101               	movlb	1	; () banked
  4752  001044  0101               	movlb	1	; () banked
  4753  001046  C1B2  F1A6         	movff	send_msg@data+1,memcpy@s1+1
  4754  00104A  0101               	movlb	1	; () banked
  4755  00104C  0101               	movlb	1	; () banked
  4756  00104E  C1B1  F1A5         	movff	send_msg@data,memcpy@s1
  4757  001052  C1B4  F1A7         	movff	send_msg@tlength,memcpy@n
  4758  001056  C1B5  F1A8         	movff	send_msg@tlength+1,memcpy@n+1
  4759  00105A  ECB7  F00C         	call	_memcpy	;wreg free
  4760                           
  4761                           ;messages.c: 61: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  4762  00105E  0101               	movlb	1	; () banked
  4763  001060  EE20 F034          	lfsr	2,52
  4764  001064  0101               	movlb	1	; () banked
  4765  001066  51AD               	movf	send_msg@qptr& (0+255),w,b
  4766  001068  26D9               	addwf	fsr2l,f,c
  4767  00106A  0101               	movlb	1	; () banked
  4768  00106C  51AE               	movf	(send_msg@qptr+1)& (0+255),w,b
  4769  00106E  22DA               	addwfc	fsr2h,f,c
  4770  001070  0101               	movlb	1	; () banked
  4771  001072  EE10 F034          	lfsr	1,52
  4772  001076  0101               	movlb	1	; () banked
  4773  001078  51AD               	movf	send_msg@qptr& (0+255),w,b
  4774  00107A  26E1               	addwf	fsr1l,f,c
  4775  00107C  0101               	movlb	1	; () banked
  4776  00107E  51AE               	movf	(send_msg@qptr+1)& (0+255),w,b
  4777  001080  22E2               	addwfc	fsr1h,f,c
  4778  001082  50E7               	movf	indf1,w,c
  4779  001084  0101               	movlb	1	; () banked
  4780  001086  6FB3               	movwf	??_send_msg& (0+255),b
  4781  001088  0101               	movlb	1	; () banked
  4782  00108A  29B3               	incf	??_send_msg& (0+255),w,b
  4783  00108C  0B03               	andlw	3
  4784  00108E  6EDF               	movwf	indf2,c
  4785                           
  4786                           ; BSR set to: 1
  4787                           ;messages.c: 64: qmsg->full = 1;
  4788  001090  C1B7  FFD9         	movff	send_msg@qmsg,fsr2l
  4789  001094  C1B8  FFDA         	movff	send_msg@qmsg+1,fsr2h
  4790  001098  0E01               	movlw	1
  4791  00109A  6EDF               	movwf	indf2,c
  4792                           
  4793                           ; BSR set to: 1
  4794                           ;messages.c: 65: return (1);
  4795  00109C  0E01               	movlw	1
  4796  00109E  0012               	return	
  4797  0010A0                     __end_of_send_msg:
  4798                           	opt stack 0
  4799                           tblptru	equ	0xFF8
  4800                           tblptrh	equ	0xFF7
  4801                           tblptrl	equ	0xFF6
  4802                           tablat	equ	0xFF5
  4803                           prodh	equ	0xFF4
  4804                           prodl	equ	0xFF3
  4805                           intcon	equ	0xFF2
  4806                           intcon2	equ	0xFF1
  4807                           postinc0	equ	0xFEE
  4808                           wreg	equ	0xFE8
  4809                           indf1	equ	0xFE7
  4810                           postdec1	equ	0xFE5
  4811                           fsr1h	equ	0xFE2
  4812                           fsr1l	equ	0xFE1
  4813                           indf2	equ	0xFDF
  4814                           postinc2	equ	0xFDE
  4815                           postdec2	equ	0xFDD
  4816                           fsr2h	equ	0xFDA
  4817                           fsr2l	equ	0xFD9
  4818                           status	equ	0xFD8
  4819                           
  4820 ;; *************** function _ToMainLow_recvmsg *****************
  4821 ;; Defined at:
  4822 ;;		line 117 in file "../src/messages.c"
  4823 ;; Parameters:    Size  Location     Type
  4824 ;;  maxlength       1    wreg     unsigned char 
  4825 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4826 ;;		 -> main@msgtype(1), 
  4827 ;;  data            2   26[BANK1 ] PTR void 
  4828 ;;		 -> main@msgbuffer(11), 
  4829 ;; Auto vars:     Size  Location     Type
  4830 ;;  maxlength       1   28[BANK1 ] unsigned char 
  4831 ;; Return value:  Size  Location     Type
  4832 ;;                  1    wreg      char 
  4833 ;; Registers used:
  4834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4835 ;; Tracked objects:
  4836 ;;		On entry : 0/0
  4837 ;;		On exit  : 0/0
  4838 ;;		Unchanged: 0/0
  4839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4840 ;;      Params:         0       0       4       0       0
  4841 ;;      Locals:         0       0       1       0       0
  4842 ;;      Temps:          0       0       0       0       0
  4843 ;;      Totals:         0       0       5       0       0
  4844 ;;Total ram usage:        5 bytes
  4845 ;; Hardware stack levels used:    1
  4846 ;; Hardware stack levels required when called:   12
  4847 ;; This function calls:
  4848 ;;		_recv_msg
  4849 ;; This function is called by:
  4850 ;;		_main
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           	psect	text27
  4855  001BE2                     __ptext27:
  4856                           	opt stack 0
  4857  001BE2                     _ToMainLow_recvmsg:
  4858                           	opt stack 18
  4859                           
  4860                           ; BSR set to: 1
  4861                           ;incstack = 0
  4862                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4863  001BE2  CFE8 F1BF          	movff	wreg,ToMainLow_recvmsg@maxlength
  4864                           
  4865                           ;messages.c: 123: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4866  001BE6  0101               	movlb	1	; () banked
  4867  001BE8  0E01               	movlw	high _ToMainLow_MQ
  4868  001BEA  0101               	movlb	1	; () banked
  4869  001BEC  0101               	movlb	1	; () banked
  4870  001BEE  6FAE               	movwf	(recv_msg@qptr+1)& (0+255),b
  4871  001BF0  0101               	movlb	1	; () banked
  4872  001BF2  0E6D               	movlw	low _ToMainLow_MQ
  4873  001BF4  0101               	movlb	1	; () banked
  4874  001BF6  0101               	movlb	1	; () banked
  4875  001BF8  6FAD               	movwf	recv_msg@qptr& (0+255),b
  4876  001BFA  C1BF  F1AF         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4877  001BFE  0101               	movlb	1	; () banked
  4878  001C00  0101               	movlb	1	; () banked
  4879  001C02  C1BC  F1B1         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4880  001C06  0101               	movlb	1	; () banked
  4881  001C08  0101               	movlb	1	; () banked
  4882  001C0A  C1BB  F1B0         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4883  001C0E  0101               	movlb	1	; () banked
  4884  001C10  0101               	movlb	1	; () banked
  4885  001C12  C1BE  F1B3         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4886  001C16  0101               	movlb	1	; () banked
  4887  001C18  0101               	movlb	1	; () banked
  4888  001C1A  C1BD  F1B2         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4889  001C1E  ECA1  F006         	call	_recv_msg	;wreg free
  4890  001C22  0012               	return	
  4891  001C24                     __end_of_ToMainLow_recvmsg:
  4892                           	opt stack 0
  4893                           tblptru	equ	0xFF8
  4894                           tblptrh	equ	0xFF7
  4895                           tblptrl	equ	0xFF6
  4896                           tablat	equ	0xFF5
  4897                           prodh	equ	0xFF4
  4898                           prodl	equ	0xFF3
  4899                           intcon	equ	0xFF2
  4900                           intcon2	equ	0xFF1
  4901                           postinc0	equ	0xFEE
  4902                           wreg	equ	0xFE8
  4903                           indf1	equ	0xFE7
  4904                           postdec1	equ	0xFE5
  4905                           fsr1h	equ	0xFE2
  4906                           fsr1l	equ	0xFE1
  4907                           indf2	equ	0xFDF
  4908                           postinc2	equ	0xFDE
  4909                           postdec2	equ	0xFDD
  4910                           fsr2h	equ	0xFDA
  4911                           fsr2l	equ	0xFD9
  4912                           status	equ	0xFD8
  4913                           
  4914 ;; *************** function _ToMainHigh_recvmsg *****************
  4915 ;; Defined at:
  4916 ;;		line 140 in file "../src/messages.c"
  4917 ;; Parameters:    Size  Location     Type
  4918 ;;  maxlength       1    wreg     unsigned char 
  4919 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4920 ;;		 -> main@msgtype(1), 
  4921 ;;  data            2   26[BANK1 ] PTR void 
  4922 ;;		 -> main@msgbuffer(11), 
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;  maxlength       1   28[BANK1 ] unsigned char 
  4925 ;; Return value:  Size  Location     Type
  4926 ;;                  1    wreg      char 
  4927 ;; Registers used:
  4928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4934 ;;      Params:         0       0       4       0       0
  4935 ;;      Locals:         0       0       1       0       0
  4936 ;;      Temps:          0       0       0       0       0
  4937 ;;      Totals:         0       0       5       0       0
  4938 ;;Total ram usage:        5 bytes
  4939 ;; Hardware stack levels used:    1
  4940 ;; Hardware stack levels required when called:   12
  4941 ;; This function calls:
  4942 ;;		_recv_msg
  4943 ;; This function is called by:
  4944 ;;		_main
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948                           	psect	text28
  4949  001C24                     __ptext28:
  4950                           	opt stack 0
  4951  001C24                     _ToMainHigh_recvmsg:
  4952                           	opt stack 18
  4953                           
  4954                           ;incstack = 0
  4955                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4956  001C24  CFE8 F1BF          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4957                           
  4958                           ;messages.c: 146: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4959  001C28  0101               	movlb	1	; () banked
  4960  001C2A  0E01               	movlw	high _ToMainHigh_MQ
  4961  001C2C  0101               	movlb	1	; () banked
  4962  001C2E  0101               	movlb	1	; () banked
  4963  001C30  6FAE               	movwf	(recv_msg@qptr+1)& (0+255),b
  4964  001C32  0101               	movlb	1	; () banked
  4965  001C34  0E37               	movlw	low _ToMainHigh_MQ
  4966  001C36  0101               	movlb	1	; () banked
  4967  001C38  0101               	movlb	1	; () banked
  4968  001C3A  6FAD               	movwf	recv_msg@qptr& (0+255),b
  4969  001C3C  C1BF  F1AF         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4970  001C40  0101               	movlb	1	; () banked
  4971  001C42  0101               	movlb	1	; () banked
  4972  001C44  C1BC  F1B1         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4973  001C48  0101               	movlb	1	; () banked
  4974  001C4A  0101               	movlb	1	; () banked
  4975  001C4C  C1BB  F1B0         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4976  001C50  0101               	movlb	1	; () banked
  4977  001C52  0101               	movlb	1	; () banked
  4978  001C54  C1BE  F1B3         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4979  001C58  0101               	movlb	1	; () banked
  4980  001C5A  0101               	movlb	1	; () banked
  4981  001C5C  C1BD  F1B2         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4982  001C60  ECA1  F006         	call	_recv_msg	;wreg free
  4983  001C64  0012               	return	
  4984  001C66                     __end_of_ToMainHigh_recvmsg:
  4985                           	opt stack 0
  4986                           tblptru	equ	0xFF8
  4987                           tblptrh	equ	0xFF7
  4988                           tblptrl	equ	0xFF6
  4989                           tablat	equ	0xFF5
  4990                           prodh	equ	0xFF4
  4991                           prodl	equ	0xFF3
  4992                           intcon	equ	0xFF2
  4993                           intcon2	equ	0xFF1
  4994                           postinc0	equ	0xFEE
  4995                           wreg	equ	0xFE8
  4996                           indf1	equ	0xFE7
  4997                           postdec1	equ	0xFE5
  4998                           fsr1h	equ	0xFE2
  4999                           fsr1l	equ	0xFE1
  5000                           indf2	equ	0xFDF
  5001                           postinc2	equ	0xFDE
  5002                           postdec2	equ	0xFDD
  5003                           fsr2h	equ	0xFDA
  5004                           fsr2l	equ	0xFD9
  5005                           status	equ	0xFD8
  5006                           
  5007 ;; *************** function _recv_msg *****************
  5008 ;; Defined at:
  5009 ;;		line 68 in file "../src/messages.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  5012 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5013 ;;  maxlength       1   12[BANK1 ] unsigned char 
  5014 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  5015 ;;		 -> main@msgtype(1), 
  5016 ;;  data            2   15[BANK1 ] PTR void 
  5017 ;;		 -> main@msgbuffer(11), 
  5018 ;; Auto vars:     Size  Location     Type
  5019 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  5020 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5021 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5022 ;;  tlength         2   20[BANK1 ] unsigned int 
  5023 ;;  slot            1   19[BANK1 ] unsigned char 
  5024 ;; Return value:  Size  Location     Type
  5025 ;;                  1    wreg      char 
  5026 ;; Registers used:
  5027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5028 ;; Tracked objects:
  5029 ;;		On entry : 0/0
  5030 ;;		On exit  : 0/0
  5031 ;;		Unchanged: 0/0
  5032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5033 ;;      Params:         0       0       7       0       0
  5034 ;;      Locals:         0       0       5       0       0
  5035 ;;      Temps:          0       0       2       0       0
  5036 ;;      Totals:         0       0      14       0       0
  5037 ;;Total ram usage:       14 bytes
  5038 ;; Hardware stack levels used:    1
  5039 ;; Hardware stack levels required when called:   11
  5040 ;; This function calls:
  5041 ;;		_memcpy
  5042 ;; This function is called by:
  5043 ;;		_ToMainLow_recvmsg
  5044 ;;		_ToMainHigh_recvmsg
  5045 ;;		_FromMainLow_recvmsg
  5046 ;;		_FromMainHigh_recvmsg
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           	psect	text29
  5051  000D42                     __ptext29:
  5052                           	opt stack 0
  5053  000D42                     _recv_msg:
  5054                           	opt stack 18
  5055                           
  5056                           ;messages.c: 69: unsigned char slot;
  5057                           ;messages.c: 73: msg *qmsg;
  5058                           ;messages.c: 74: size_t tlength;
  5059                           ;messages.c: 77: slot = qptr->cur_read_ind;
  5060                           
  5061                           ;incstack = 0
  5062  000D42  0101               	movlb	1	; () banked
  5063  000D44  EE20 F035          	lfsr	2,53
  5064  000D48  0101               	movlb	1	; () banked
  5065  000D4A  51AD               	movf	recv_msg@qptr& (0+255),w,b
  5066  000D4C  26D9               	addwf	fsr2l,f,c
  5067  000D4E  0101               	movlb	1	; () banked
  5068  000D50  51AE               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5069  000D52  22DA               	addwfc	fsr2h,f,c
  5070  000D54  50DF               	movf	indf2,w,c
  5071  000D56  0101               	movlb	1	; () banked
  5072  000D58  0101               	movlb	1	; () banked
  5073  000D5A  6FB6               	movwf	recv_msg@slot& (0+255),b
  5074                           
  5075                           ; BSR set to: 1
  5076                           ;messages.c: 78: qmsg = &(qptr->queue[slot]);
  5077  000D5C  0101               	movlb	1	; () banked
  5078  000D5E  0101               	movlb	1	; () banked
  5079  000D60  51B6               	movf	recv_msg@slot& (0+255),w,b
  5080  000D62  0D0D               	mullw	13
  5081  000D64  50F3               	movf	prodl,w,c
  5082  000D66  0101               	movlb	1	; () banked
  5083  000D68  0101               	movlb	1	; () banked
  5084  000D6A  25AD               	addwf	recv_msg@qptr& (0+255),w,b
  5085  000D6C  0101               	movlb	1	; () banked
  5086  000D6E  0101               	movlb	1	; () banked
  5087  000D70  6FB9               	movwf	recv_msg@qmsg& (0+255),b
  5088  000D72  50F4               	movf	prodh,w,c
  5089  000D74  0101               	movlb	1	; () banked
  5090  000D76  0101               	movlb	1	; () banked
  5091  000D78  21AE               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  5092  000D7A  0101               	movlb	1	; () banked
  5093  000D7C  6FBA               	movwf	(recv_msg@qmsg+1)& (0+255),b
  5094                           
  5095                           ; BSR set to: 1
  5096                           ;messages.c: 79: if (qmsg->full == 1) {
  5097  000D7E  0E01               	movlw	1
  5098  000D80  C1B9  FFD9         	movff	recv_msg@qmsg,fsr2l
  5099  000D84  C1BA  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  5100  000D88  62DF               	cpfseq	indf2,c
  5101  000D8A  D074               	goto	l4505
  5102                           
  5103                           ; BSR set to: 1
  5104                           ;messages.c: 81: if (qmsg->length > maxlength) {
  5105  000D8C  0101               	movlb	1	; () banked
  5106  000D8E  EE20 F001          	lfsr	2,1
  5107  000D92  0101               	movlb	1	; () banked
  5108  000D94  51B9               	movf	recv_msg@qmsg& (0+255),w,b
  5109  000D96  26D9               	addwf	fsr2l,f,c
  5110  000D98  0101               	movlb	1	; () banked
  5111  000D9A  51BA               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5112  000D9C  22DA               	addwfc	fsr2h,f,c
  5113  000D9E  50DF               	movf	indf2,w,c
  5114  000DA0  0101               	movlb	1	; () banked
  5115  000DA2  0101               	movlb	1	; () banked
  5116  000DA4  5DAF               	subwf	recv_msg@maxlength& (0+255),w,b
  5117  000DA6  B0D8               	btfsc	status,0,c
  5118  000DA8  D002               	goto	l4489
  5119                           
  5120                           ; BSR set to: 1
  5121                           ;messages.c: 82: return (-3);
  5122  000DAA  0EFD               	movlw	253
  5123  000DAC  0012               	return	
  5124  000DAE                     l4489:
  5125                           
  5126                           ; BSR set to: 1
  5127                           ;messages.c: 83: }
  5128                           ;messages.c: 85: tlength = qmsg->length;
  5129  000DAE  0101               	movlb	1	; () banked
  5130  000DB0  EE20 F001          	lfsr	2,1
  5131  000DB4  0101               	movlb	1	; () banked
  5132  000DB6  51B9               	movf	recv_msg@qmsg& (0+255),w,b
  5133  000DB8  26D9               	addwf	fsr2l,f,c
  5134  000DBA  0101               	movlb	1	; () banked
  5135  000DBC  51BA               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5136  000DBE  22DA               	addwfc	fsr2h,f,c
  5137  000DC0  50DF               	movf	indf2,w,c
  5138  000DC2  0101               	movlb	1	; () banked
  5139  000DC4  6FB4               	movwf	??_recv_msg& (0+255),b
  5140  000DC6  0101               	movlb	1	; () banked
  5141  000DC8  51B4               	movf	??_recv_msg& (0+255),w,b
  5142  000DCA  0101               	movlb	1	; () banked
  5143  000DCC  0101               	movlb	1	; () banked
  5144  000DCE  6FB7               	movwf	recv_msg@tlength& (0+255),b
  5145  000DD0  0101               	movlb	1	; () banked
  5146  000DD2  6BB8               	clrf	(recv_msg@tlength+1)& (0+255),b
  5147                           
  5148                           ; BSR set to: 1
  5149                           ;messages.c: 86: memcpy(data, qmsg->data, tlength);
  5150  000DD4  0101               	movlb	1	; () banked
  5151  000DD6  0101               	movlb	1	; () banked
  5152  000DD8  C1B3  F1A4         	movff	recv_msg@data+1,memcpy@d1+1
  5153  000DDC  0101               	movlb	1	; () banked
  5154  000DDE  0101               	movlb	1	; () banked
  5155  000DE0  C1B2  F1A3         	movff	recv_msg@data,memcpy@d1
  5156  000DE4  0E03               	movlw	3
  5157  000DE6  0101               	movlb	1	; () banked
  5158  000DE8  0101               	movlb	1	; () banked
  5159  000DEA  25B9               	addwf	recv_msg@qmsg& (0+255),w,b
  5160  000DEC  0101               	movlb	1	; () banked
  5161  000DEE  6FB4               	movwf	??_recv_msg& (0+255),b
  5162  000DF0  0E00               	movlw	0
  5163  000DF2  0101               	movlb	1	; () banked
  5164  000DF4  0101               	movlb	1	; () banked
  5165  000DF6  21BA               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  5166  000DF8  0101               	movlb	1	; () banked
  5167  000DFA  6FB5               	movwf	(??_recv_msg+1)& (0+255),b
  5168  000DFC  C1B4  F1A5         	movff	??_recv_msg,memcpy@s1
  5169  000E00  C1B5  F1A6         	movff	??_recv_msg+1,memcpy@s1+1
  5170  000E04  C1B7  F1A7         	movff	recv_msg@tlength,memcpy@n
  5171  000E08  C1B8  F1A8         	movff	recv_msg@tlength+1,memcpy@n+1
  5172  000E0C  ECB7  F00C         	call	_memcpy	;wreg free
  5173                           
  5174                           ;messages.c: 92: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5175  000E10  0101               	movlb	1	; () banked
  5176  000E12  EE20 F035          	lfsr	2,53
  5177  000E16  0101               	movlb	1	; () banked
  5178  000E18  51AD               	movf	recv_msg@qptr& (0+255),w,b
  5179  000E1A  26D9               	addwf	fsr2l,f,c
  5180  000E1C  0101               	movlb	1	; () banked
  5181  000E1E  51AE               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5182  000E20  22DA               	addwfc	fsr2h,f,c
  5183  000E22  0101               	movlb	1	; () banked
  5184  000E24  EE10 F035          	lfsr	1,53
  5185  000E28  0101               	movlb	1	; () banked
  5186  000E2A  51AD               	movf	recv_msg@qptr& (0+255),w,b
  5187  000E2C  26E1               	addwf	fsr1l,f,c
  5188  000E2E  0101               	movlb	1	; () banked
  5189  000E30  51AE               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5190  000E32  22E2               	addwfc	fsr1h,f,c
  5191  000E34  50E7               	movf	indf1,w,c
  5192  000E36  0101               	movlb	1	; () banked
  5193  000E38  6FB4               	movwf	??_recv_msg& (0+255),b
  5194  000E3A  0101               	movlb	1	; () banked
  5195  000E3C  29B4               	incf	??_recv_msg& (0+255),w,b
  5196  000E3E  0B03               	andlw	3
  5197  000E40  6EDF               	movwf	indf2,c
  5198                           
  5199                           ; BSR set to: 1
  5200                           ;messages.c: 94: (*msgtype) = qmsg->msgtype;
  5201  000E42  0101               	movlb	1	; () banked
  5202  000E44  EE20 F002          	lfsr	2,2
  5203  000E48  0101               	movlb	1	; () banked
  5204  000E4A  51B9               	movf	recv_msg@qmsg& (0+255),w,b
  5205  000E4C  26D9               	addwf	fsr2l,f,c
  5206  000E4E  0101               	movlb	1	; () banked
  5207  000E50  51BA               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5208  000E52  22DA               	addwfc	fsr2h,f,c
  5209  000E54  C1B0  FFE1         	movff	recv_msg@msgtype,fsr1l
  5210  000E58  C1B1  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  5211  000E5C  CFDF FFE7          	movff	indf2,indf1
  5212                           
  5213                           ; BSR set to: 1
  5214                           ;messages.c: 96: qmsg->full = 0;
  5215  000E60  C1B9  FFD9         	movff	recv_msg@qmsg,fsr2l
  5216  000E64  C1BA  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  5217  000E68  0E00               	movlw	0
  5218  000E6A  6EDF               	movwf	indf2,c
  5219                           
  5220                           ; BSR set to: 1
  5221                           ;messages.c: 97: return (tlength);
  5222  000E6C  0101               	movlb	1	; () banked
  5223  000E6E  0101               	movlb	1	; () banked
  5224  000E70  51B7               	movf	recv_msg@tlength& (0+255),w,b
  5225  000E72  0012               	return	
  5226  000E74                     l4505:
  5227                           
  5228                           ; BSR set to: 1
  5229                           ;messages.c: 99: return (-4);
  5230  000E74  0EFC               	movlw	252
  5231  000E76  0012               	return	
  5232  000E78                     __end_of_recv_msg:
  5233                           	opt stack 0
  5234                           tblptru	equ	0xFF8
  5235                           tblptrh	equ	0xFF7
  5236                           tblptrl	equ	0xFF6
  5237                           tablat	equ	0xFF5
  5238                           prodh	equ	0xFF4
  5239                           prodl	equ	0xFF3
  5240                           intcon	equ	0xFF2
  5241                           intcon2	equ	0xFF1
  5242                           postinc0	equ	0xFEE
  5243                           wreg	equ	0xFE8
  5244                           indf1	equ	0xFE7
  5245                           postdec1	equ	0xFE5
  5246                           fsr1h	equ	0xFE2
  5247                           fsr1l	equ	0xFE1
  5248                           indf2	equ	0xFDF
  5249                           postinc2	equ	0xFDE
  5250                           postdec2	equ	0xFDD
  5251                           fsr2h	equ	0xFDA
  5252                           fsr2l	equ	0xFD9
  5253                           status	equ	0xFD8
  5254                           
  5255 ;; *************** function _memcpy *****************
  5256 ;; Defined at:
  5257 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;  d1              2    0[BANK1 ] PTR void 
  5260 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5261 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5262 ;;		 -> ToMainLow_MQ(54), NULL(0), 
  5263 ;;  s1              2    2[BANK1 ] PTR const void 
  5264 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5265 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5266 ;;		 -> main@msgbuffer(11), main@t0thread_data(2), main@t1thread_data(2), FromMainHigh_MQ(54), 
  5267 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), i2c_int_handler@error_buf(3), 
  5268 ;;		 -> NULL(0), 
  5269 ;;  n               2    4[BANK1 ] unsigned int 
  5270 ;; Auto vars:     Size  Location     Type
  5271 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  5272 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5273 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5274 ;;		 -> main@msgbuffer(11), main@t0thread_data(2), main@t1thread_data(2), FromMainHigh_MQ(54), 
  5275 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), i2c_int_handler@error_buf(3), 
  5276 ;;		 -> NULL(0), 
  5277 ;;  d               2    6[BANK1 ] PTR unsigned char 
  5278 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5279 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5280 ;;		 -> ToMainLow_MQ(54), NULL(0), 
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  2    0[BANK1 ] PTR void 
  5283 ;; Registers used:
  5284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5290 ;;      Params:         0       0       6       0       0
  5291 ;;      Locals:         0       0       4       0       0
  5292 ;;      Temps:          0       0       0       0       0
  5293 ;;      Totals:         0       0      10       0       0
  5294 ;;Total ram usage:       10 bytes
  5295 ;; Hardware stack levels used:    1
  5296 ;; Hardware stack levels required when called:   10
  5297 ;; This function calls:
  5298 ;;		Nothing
  5299 ;; This function is called by:
  5300 ;;		_send_msg
  5301 ;;		_recv_msg
  5302 ;;		_i2c_master_send
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           	psect	text30
  5307  00196E                     __ptext30:
  5308                           	opt stack 0
  5309  00196E                     _memcpy:
  5310                           	opt stack 17
  5311                           
  5312                           ; BSR set to: 1
  5313                           ;incstack = 0
  5314  00196E  0101               	movlb	1	; () banked
  5315  001970  0101               	movlb	1	; () banked
  5316  001972  C1A6  F1AC         	movff	memcpy@s1+1,memcpy@s+1
  5317  001976  0101               	movlb	1	; () banked
  5318  001978  0101               	movlb	1	; () banked
  5319  00197A  C1A5  F1AB         	movff	memcpy@s1,memcpy@s
  5320  00197E  0101               	movlb	1	; () banked
  5321  001980  0101               	movlb	1	; () banked
  5322  001982  C1A4  F1AA         	movff	memcpy@d1+1,memcpy@d+1
  5323  001986  0101               	movlb	1	; () banked
  5324  001988  0101               	movlb	1	; () banked
  5325  00198A  C1A3  F1A9         	movff	memcpy@d1,memcpy@d
  5326  00198E  D012               	goto	l4475
  5327  001990                     l4469:
  5328                           
  5329                           ; BSR set to: 1
  5330  001990  C1AB  FFD9         	movff	memcpy@s,fsr2l
  5331  001994  C1AC  FFDA         	movff	memcpy@s+1,fsr2h
  5332  001998  C1A9  FFE1         	movff	memcpy@d,fsr1l
  5333  00199C  C1AA  FFE2         	movff	memcpy@d+1,fsr1h
  5334  0019A0  CFDF FFE7          	movff	indf2,indf1
  5335                           
  5336                           ; BSR set to: 1
  5337  0019A4  0101               	movlb	1	; () banked
  5338  0019A6  0101               	movlb	1	; () banked
  5339  0019A8  4BAB               	infsnz	memcpy@s& (0+255),f,b
  5340  0019AA  2BAC               	incf	(memcpy@s+1)& (0+255),f,b
  5341                           
  5342                           ; BSR set to: 1
  5343  0019AC  0101               	movlb	1	; () banked
  5344  0019AE  0101               	movlb	1	; () banked
  5345  0019B0  4BA9               	infsnz	memcpy@d& (0+255),f,b
  5346  0019B2  2BAA               	incf	(memcpy@d+1)& (0+255),f,b
  5347  0019B4                     l4475:
  5348                           
  5349                           ; BSR set to: 1
  5350  0019B4  0101               	movlb	1	; () banked
  5351  0019B6  0101               	movlb	1	; () banked
  5352  0019B8  07A7               	decf	memcpy@n& (0+255),f,b
  5353  0019BA  A0D8               	btfss	status,0,c
  5354  0019BC  07A8               	decf	(memcpy@n+1)& (0+255),f,b
  5355  0019BE  0101               	movlb	1	; () banked
  5356  0019C0  29A7               	incf	memcpy@n& (0+255),w,b
  5357  0019C2  B4D8               	btfsc	status,2,c
  5358  0019C4  29A8               	incf	(memcpy@n+1)& (0+255),w,b
  5359  0019C6  B4D8               	btfsc	status,2,c
  5360                           
  5361                           ; BSR set to: 1
  5362                           
  5363                           ; BSR set to: 1
  5364                           ;	Return value of _memcpy is never used
  5365  0019C8  0012               	return	
  5366  0019CA  D7E2               	goto	l4469
  5367  0019CC                     __end_of_memcpy:
  5368                           	opt stack 0
  5369                           tblptru	equ	0xFF8
  5370                           tblptrh	equ	0xFF7
  5371                           tblptrl	equ	0xFF6
  5372                           tablat	equ	0xFF5
  5373                           prodh	equ	0xFF4
  5374                           prodl	equ	0xFF3
  5375                           intcon	equ	0xFF2
  5376                           intcon2	equ	0xFF1
  5377                           postinc0	equ	0xFEE
  5378                           wreg	equ	0xFE8
  5379                           indf1	equ	0xFE7
  5380                           postdec1	equ	0xFE5
  5381                           fsr1h	equ	0xFE2
  5382                           fsr1l	equ	0xFE1
  5383                           indf2	equ	0xFDF
  5384                           postinc2	equ	0xFDE
  5385                           postdec2	equ	0xFDD
  5386                           fsr2h	equ	0xFDA
  5387                           fsr2l	equ	0xFD9
  5388                           status	equ	0xFD8
  5389                           
  5390 ;; *************** function _OpenUSART *****************
  5391 ;; Defined at:
  5392 ;;		line 73 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uopen.c"
  5393 ;; Parameters:    Size  Location     Type
  5394 ;;  config          1    wreg     unsigned char 
  5395 ;;  spbrg           2    0[BANK1 ] unsigned int 
  5396 ;; Auto vars:     Size  Location     Type
  5397 ;;  config          1    5[BANK1 ] unsigned char 
  5398 ;; Return value:  Size  Location     Type
  5399 ;;		None               void
  5400 ;; Registers used:
  5401 ;;		wreg, status,2
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5407 ;;      Params:         0       0       2       0       0
  5408 ;;      Locals:         0       0       1       0       0
  5409 ;;      Temps:          0       0       3       0       0
  5410 ;;      Totals:         0       0       6       0       0
  5411 ;;Total ram usage:        6 bytes
  5412 ;; Hardware stack levels used:    1
  5413 ;; Hardware stack levels required when called:   10
  5414 ;; This function calls:
  5415 ;;		Nothing
  5416 ;; This function is called by:
  5417 ;;		_main
  5418 ;; This function uses a non-reentrant model
  5419 ;;
  5420                           
  5421                           	psect	text31
  5422  001504                     __ptext31:
  5423                           	opt stack 0
  5424  001504                     _OpenUSART:
  5425                           	opt stack 20
  5426                           
  5427                           ; BSR set to: 1
  5428                           ;incstack = 0
  5429                           ;OpenUSART@config stored from wreg
  5430  001504  CFE8 F1A8          	movff	wreg,OpenUSART@config
  5431  001508  0E00               	movlw	0
  5432  00150A  6EAC               	movwf	4012,c	;volatile
  5433  00150C  0E00               	movlw	0
  5434  00150E  6EAB               	movwf	4011,c	;volatile
  5435  001510  0101               	movlb	1	; () banked
  5436  001512  0101               	movlb	1	; () banked
  5437  001514  B1A8               	btfsc	OpenUSART@config& (0+255),0,b
  5438                           
  5439                           ; BSR set to: 1
  5440  001516  88AC               	bsf	4012,4,c	;volatile
  5441                           
  5442                           ; BSR set to: 1
  5443                           
  5444                           ; BSR set to: 1
  5445  001518  0101               	movlb	1	; () banked
  5446  00151A  0101               	movlb	1	; () banked
  5447  00151C  A3A8               	btfss	OpenUSART@config& (0+255),1,b
  5448  00151E  D002               	goto	l4743
  5449                           
  5450                           ; BSR set to: 1
  5451  001520  8CAC               	bsf	4012,6,c	;volatile
  5452  001522  8CAB               	bsf	4011,6,c	;volatile
  5453  001524                     l4743:
  5454                           
  5455                           ; BSR set to: 1
  5456  001524  0101               	movlb	1	; () banked
  5457  001526  0101               	movlb	1	; () banked
  5458  001528  B5A8               	btfsc	OpenUSART@config& (0+255),2,b
  5459                           
  5460                           ; BSR set to: 1
  5461  00152A  8EAC               	bsf	4012,7,c	;volatile
  5462                           
  5463                           ; BSR set to: 1
  5464                           
  5465                           ; BSR set to: 1
  5466  00152C  0101               	movlb	1	; () banked
  5467  00152E  0101               	movlb	1	; () banked
  5468  001530  A7A8               	btfss	OpenUSART@config& (0+255),3,b
  5469  001532  D002               	goto	l833
  5470                           
  5471                           ; BSR set to: 1
  5472  001534  88AB               	bsf	4011,4,c	;volatile
  5473  001536  D001               	goto	l4751
  5474  001538                     l833:
  5475                           
  5476                           ; BSR set to: 1
  5477  001538  8AAB               	bsf	4011,5,c	;volatile
  5478  00153A                     l4751:
  5479                           
  5480                           ; BSR set to: 1
  5481  00153A  0101               	movlb	1	; () banked
  5482  00153C  0101               	movlb	1	; () banked
  5483  00153E  B9A8               	btfsc	OpenUSART@config& (0+255),4,b
  5484                           
  5485                           ; BSR set to: 1
  5486  001540  84AC               	bsf	4012,2,c	;volatile
  5487                           
  5488                           ; BSR set to: 1
  5489  001542  989E               	bcf	3998,4,c	;volatile
  5490                           
  5491                           ; BSR set to: 1
  5492  001544  0101               	movlb	1	; () banked
  5493  001546  0101               	movlb	1	; () banked
  5494  001548  BBA8               	btfsc	OpenUSART@config& (0+255),5,b
  5495                           
  5496                           ; BSR set to: 1
  5497  00154A  86AB               	bsf	4011,3,c	;volatile
  5498                           
  5499                           ; BSR set to: 1
  5500                           
  5501                           ; BSR set to: 1
  5502  00154C  0101               	movlb	1	; () banked
  5503  00154E  0101               	movlb	1	; () banked
  5504  001550  ADA8               	btfss	OpenUSART@config& (0+255),6,b
  5505  001552  D002               	goto	l837
  5506                           
  5507                           ; BSR set to: 1
  5508  001554  8A9D               	bsf	3997,5,c	;volatile
  5509  001556  D001               	goto	l838
  5510  001558                     l837:
  5511                           
  5512                           ; BSR set to: 1
  5513  001558  9A9D               	bcf	3997,5,c	;volatile
  5514  00155A                     l838:
  5515                           
  5516                           ; BSR set to: 1
  5517  00155A  9A9E               	bcf	3998,5,c	;volatile
  5518                           
  5519                           ; BSR set to: 1
  5520  00155C  0101               	movlb	1	; () banked
  5521  00155E  0101               	movlb	1	; () banked
  5522  001560  AFA8               	btfss	OpenUSART@config& (0+255),7,b
  5523  001562  D002               	goto	l839
  5524                           
  5525                           ; BSR set to: 1
  5526  001564  889D               	bsf	3997,4,c	;volatile
  5527  001566  D001               	goto	l840
  5528  001568                     l839:
  5529                           
  5530                           ; BSR set to: 1
  5531  001568  989D               	bcf	3997,4,c	;volatile
  5532  00156A                     l840:
  5533                           
  5534                           ; BSR set to: 1
  5535  00156A  C1A3  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5536                           
  5537                           ; BSR set to: 1
  5538  00156E  0101               	movlb	1	; () banked
  5539  001570  C1A4  F1A5         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5540  001574  C1A5  F1A6         	movff	??_OpenUSART,??_OpenUSART+1
  5541  001578  0101               	movlb	1	; () banked
  5542  00157A  6BA7               	clrf	(??_OpenUSART+2)& (0+255),b
  5543  00157C  0101               	movlb	1	; () banked
  5544  00157E  51A6               	movf	(??_OpenUSART+1)& (0+255),w,b
  5545  001580  6EB0               	movwf	4016,c	;volatile
  5546                           
  5547                           ; BSR set to: 1
  5548  001582  8AAC               	bsf	4012,5,c	;volatile
  5549                           
  5550                           ; BSR set to: 1
  5551  001584  8EAB               	bsf	4011,7,c	;volatile
  5552                           
  5553                           ; BSR set to: 1
  5554  001586  9C94               	bcf	3988,6,c	;volatile
  5555                           
  5556                           ; BSR set to: 1
  5557  001588  8E94               	bsf	3988,7,c	;volatile
  5558                           
  5559                           ; BSR set to: 1
  5560  00158A  A8AC               	btfss	4012,4,c	;volatile
  5561  00158C  0012               	return	
  5562                           
  5563                           ; BSR set to: 1
  5564  00158E  BEAC               	btfsc	4012,7,c	;volatile
  5565  001590  0012               	return	
  5566                           
  5567                           ; BSR set to: 1
  5568  001592  8C94               	bsf	3988,6,c	;volatile
  5569  001594  0012               	return	
  5570  001596                     __end_of_OpenUSART:
  5571                           	opt stack 0
  5572                           tblptru	equ	0xFF8
  5573                           tblptrh	equ	0xFF7
  5574                           tblptrl	equ	0xFF6
  5575                           tablat	equ	0xFF5
  5576                           prodh	equ	0xFF4
  5577                           prodl	equ	0xFF3
  5578                           intcon	equ	0xFF2
  5579                           intcon2	equ	0xFF1
  5580                           postinc0	equ	0xFEE
  5581                           wreg	equ	0xFE8
  5582                           indf1	equ	0xFE7
  5583                           postdec1	equ	0xFE5
  5584                           fsr1h	equ	0xFE2
  5585                           fsr1l	equ	0xFE1
  5586                           indf2	equ	0xFDF
  5587                           postinc2	equ	0xFDE
  5588                           postdec2	equ	0xFDD
  5589                           fsr2h	equ	0xFDA
  5590                           fsr2l	equ	0xFD9
  5591                           status	equ	0xFD8
  5592                           
  5593 ;; *************** function _OpenTimer0 *****************
  5594 ;; Defined at:
  5595 ;;		line 18 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0open.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;  config          1    wreg     unsigned char 
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;  config          1    0[BANK1 ] unsigned char 
  5600 ;; Return value:  Size  Location     Type
  5601 ;;		None               void
  5602 ;; Registers used:
  5603 ;;		wreg, status,2, status,0
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5609 ;;      Params:         0       0       0       0       0
  5610 ;;      Locals:         0       0       1       0       0
  5611 ;;      Temps:          0       0       0       0       0
  5612 ;;      Totals:         0       0       1       0       0
  5613 ;;Total ram usage:        1 bytes
  5614 ;; Hardware stack levels used:    1
  5615 ;; Hardware stack levels required when called:   10
  5616 ;; This function calls:
  5617 ;;		Nothing
  5618 ;; This function is called by:
  5619 ;;		_main
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           	psect	text32
  5624  001E4C                     __ptext32:
  5625                           	opt stack 0
  5626  001E4C                     _OpenTimer0:
  5627                           	opt stack 20
  5628                           
  5629                           ; BSR set to: 1
  5630                           ;incstack = 0
  5631                           ;OpenTimer0@config stored from wreg
  5632  001E4C  CFE8 F1A3          	movff	wreg,OpenTimer0@config
  5633  001E50  0101               	movlb	1	; () banked
  5634  001E52  0101               	movlb	1	; () banked
  5635  001E54  51A3               	movf	OpenTimer0@config& (0+255),w,b
  5636  001E56  0B7F               	andlw	127
  5637  001E58  6ED5               	movwf	4053,c	;volatile
  5638                           
  5639                           ; BSR set to: 1
  5640  001E5A  0E00               	movlw	0
  5641  001E5C  6ED7               	movwf	4055,c	;volatile
  5642                           
  5643                           ; BSR set to: 1
  5644  001E5E  0E00               	movlw	0
  5645  001E60  6ED6               	movwf	4054,c	;volatile
  5646                           
  5647                           ; BSR set to: 1
  5648  001E62  94F2               	bcf	intcon,2,c	;volatile
  5649                           
  5650                           ; BSR set to: 1
  5651  001E64  0101               	movlb	1	; () banked
  5652  001E66  0101               	movlb	1	; () banked
  5653  001E68  AFA3               	btfss	OpenTimer0@config& (0+255),7,b
  5654  001E6A  D002               	goto	l784
  5655                           
  5656                           ; BSR set to: 1
  5657  001E6C  8AF2               	bsf	intcon,5,c	;volatile
  5658  001E6E  D001               	goto	l785
  5659  001E70                     l784:
  5660                           
  5661                           ; BSR set to: 1
  5662  001E70  9AF2               	bcf	intcon,5,c	;volatile
  5663  001E72                     l785:
  5664                           
  5665                           ; BSR set to: 1
  5666  001E72  8ED5               	bsf	4053,7,c	;volatile
  5667                           
  5668                           ; BSR set to: 1
  5669  001E74  0012               	return	
  5670  001E76                     __end_of_OpenTimer0:
  5671                           	opt stack 0
  5672                           tblptru	equ	0xFF8
  5673                           tblptrh	equ	0xFF7
  5674                           tblptrl	equ	0xFF6
  5675                           tablat	equ	0xFF5
  5676                           prodh	equ	0xFF4
  5677                           prodl	equ	0xFF3
  5678                           intcon	equ	0xFF2
  5679                           intcon2	equ	0xFF1
  5680                           postinc0	equ	0xFEE
  5681                           wreg	equ	0xFE8
  5682                           indf1	equ	0xFE7
  5683                           postdec1	equ	0xFE5
  5684                           fsr1h	equ	0xFE2
  5685                           fsr1l	equ	0xFE1
  5686                           indf2	equ	0xFDF
  5687                           postinc2	equ	0xFDE
  5688                           postdec2	equ	0xFDD
  5689                           fsr2h	equ	0xFDA
  5690                           fsr2l	equ	0xFD9
  5691                           status	equ	0xFD8
  5692                           
  5693 ;; *************** function _InterruptHandlerLow *****************
  5694 ;; Defined at:
  5695 ;;		line 346 in file "../src/interrupts.c"
  5696 ;; Parameters:    Size  Location     Type
  5697 ;;		None
  5698 ;; Auto vars:     Size  Location     Type
  5699 ;;		None
  5700 ;; Return value:  Size  Location     Type
  5701 ;;		None               void
  5702 ;; Registers used:
  5703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5709 ;;      Params:         0       0       0       0       0
  5710 ;;      Locals:         0       0       0       0       0
  5711 ;;      Temps:         17       0       0       0       0
  5712 ;;      Totals:        17       0       0       0       0
  5713 ;;Total ram usage:       17 bytes
  5714 ;; Hardware stack levels used:    1
  5715 ;; Hardware stack levels required when called:    9
  5716 ;; This function calls:
  5717 ;;		_timer1_int_handler
  5718 ;;		_uart_recv_int_handler
  5719 ;;		_uart_send_int_handler
  5720 ;; This function is called by:
  5721 ;;		Interrupt level 1
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           	psect	intcodelo
  5726  000018                     __pintcodelo:
  5727                           	opt stack 0
  5728  000018                     _InterruptHandlerLow:
  5729                           	opt stack 17
  5730                           
  5731                           ; BSR set to: 1
  5732                           ;incstack = 0
  5733  000018  CFD8 F01C          	movff	status,??_InterruptHandlerLow
  5734  00001C  CFE8 F01D          	movff	wreg,??_InterruptHandlerLow+1
  5735  000020  CFE0 F01E          	movff	bsr,??_InterruptHandlerLow+2
  5736  000024  CFFA F01F          	movff	pclath,??_InterruptHandlerLow+3
  5737  000028  CFFB F020          	movff	pclatu,??_InterruptHandlerLow+4
  5738  00002C  CFE9 F021          	movff	fsr0l,??_InterruptHandlerLow+5
  5739  000030  CFEA F022          	movff	fsr0h,??_InterruptHandlerLow+6
  5740  000034  CFE1 F023          	movff	fsr1l,??_InterruptHandlerLow+7
  5741  000038  CFE2 F024          	movff	fsr1h,??_InterruptHandlerLow+8
  5742  00003C  CFD9 F025          	movff	fsr2l,??_InterruptHandlerLow+9
  5743  000040  CFDA F026          	movff	fsr2h,??_InterruptHandlerLow+10
  5744  000044  CFF3 F027          	movff	prodl,??_InterruptHandlerLow+11
  5745  000048  CFF4 F028          	movff	prodh,??_InterruptHandlerLow+12
  5746  00004C  CFF6 F029          	movff	tblptrl,??_InterruptHandlerLow+13
  5747  000050  CFF7 F02A          	movff	tblptrh,??_InterruptHandlerLow+14
  5748  000054  CFF8 F02B          	movff	tblptru,??_InterruptHandlerLow+15
  5749  000058  CFF5 F02C          	movff	tablat,??_InterruptHandlerLow+16
  5750                           
  5751                           ;interrupts.c: 348: if (PIR1bits.TMR1IF) {
  5752  00005C  A09E               	btfss	3998,0,c	;volatile
  5753  00005E  D003               	goto	i1l5259
  5754                           
  5755                           ;interrupts.c: 349: PIR1bits.TMR1IF = 0;
  5756  000060  909E               	bcf	3998,0,c	;volatile
  5757                           
  5758                           ;interrupts.c: 350: timer1_int_handler();
  5759  000062  ECF6  F00E         	call	_timer1_int_handler	;wreg free
  5760  000066                     i1l5259:
  5761                           
  5762                           ;interrupts.c: 351: }
  5763                           ;interrupts.c: 354: if (PIR1bits.RCIF) {
  5764  000066  AA9E               	btfss	3998,5,c	;volatile
  5765  000068  D003               	goto	i1l5265
  5766                           
  5767                           ;interrupts.c: 355: PIR1bits.RCIF = 0;
  5768  00006A  9A9E               	bcf	3998,5,c	;volatile
  5769                           
  5770                           ;interrupts.c: 356: uart_recv_int_handler();
  5771  00006C  EC10  F00F         	call	_uart_recv_int_handler	;wreg free
  5772  000070                     i1l5265:
  5773                           
  5774                           ;interrupts.c: 357: }
  5775                           ;interrupts.c: 360: if ( PIE1bits.TXIE && PIR1bits.TX1IF ) {
  5776  000070  B89D               	btfsc	3997,4,c	;volatile
  5777  000072  A89E               	btfss	3998,4,c	;volatile
  5778  000074  D003               	goto	i1l508
  5779                           
  5780                           ;interrupts.c: 362: PIE1bits.TXIE = 0;
  5781  000076  989D               	bcf	3997,4,c	;volatile
  5782                           
  5783                           ;interrupts.c: 365: uart_send_int_handler();
  5784  000078  EC52  F00B         	call	_uart_send_int_handler	;wreg free
  5785  00007C                     i1l508:
  5786  00007C  C02C  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5787  000080  C02B  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5788  000084  C02A  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5789  000088  C029  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5790  00008C  C028  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5791  000090  C027  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5792  000094  C026  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5793  000098  C025  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5794  00009C  C024  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5795  0000A0  C023  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5796  0000A4  C022  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5797  0000A8  C021  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5798  0000AC  C020  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5799  0000B0  C01F  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5800  0000B4  C01E  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5801  0000B8  C01D  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5802  0000BC  C01C  FFD8         	movff	??_InterruptHandlerLow,status
  5803  0000C0  0010               	retfie	
  5804  0000C2                     __end_of_InterruptHandlerLow:
  5805                           	opt stack 0
  5806                           pclatu	equ	0xFFB
  5807                           pclath	equ	0xFFA
  5808                           tblptru	equ	0xFF8
  5809                           tblptrh	equ	0xFF7
  5810                           tblptrl	equ	0xFF6
  5811                           tablat	equ	0xFF5
  5812                           prodh	equ	0xFF4
  5813                           prodl	equ	0xFF3
  5814                           intcon	equ	0xFF2
  5815                           intcon2	equ	0xFF1
  5816                           postinc0	equ	0xFEE
  5817                           fsr0h	equ	0xFEA
  5818                           fsr0l	equ	0xFE9
  5819                           wreg	equ	0xFE8
  5820                           indf1	equ	0xFE7
  5821                           postdec1	equ	0xFE5
  5822                           fsr1h	equ	0xFE2
  5823                           fsr1l	equ	0xFE1
  5824                           bsr	equ	0xFE0
  5825                           indf2	equ	0xFDF
  5826                           postinc2	equ	0xFDE
  5827                           postdec2	equ	0xFDD
  5828                           fsr2h	equ	0xFDA
  5829                           fsr2l	equ	0xFD9
  5830                           status	equ	0xFD8
  5831                           
  5832 ;; *************** function _uart_send_int_handler *****************
  5833 ;; Defined at:
  5834 ;;		line 150 in file "../src/my_uart.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;		None
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;		None
  5839 ;; Return value:  Size  Location     Type
  5840 ;;		None               void
  5841 ;; Registers used:
  5842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5848 ;;      Params:         0       0       0       0       0
  5849 ;;      Locals:         0       0       0       0       0
  5850 ;;      Temps:          1       0       0       0       0
  5851 ;;      Totals:         1       0       0       0       0
  5852 ;;Total ram usage:        1 bytes
  5853 ;; Hardware stack levels used:    1
  5854 ;; Hardware stack levels required when called:    6
  5855 ;; This function calls:
  5856 ;;		_WriteUSART
  5857 ;; This function is called by:
  5858 ;;		_InterruptHandlerLow
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           	psect	text34
  5863  0016A4                     __ptext34:
  5864                           	opt stack 0
  5865  0016A4                     _uart_send_int_handler:
  5866                           	opt stack 19
  5867                           
  5868                           ;my_uart.c: 153: if(uc_ptr->sendSize > 0) {
  5869                           
  5870                           ;incstack = 0
  5871  0016A4  0100               	movlb	0	; () banked
  5872  0016A6  EE20 F01A          	lfsr	2,26
  5873  0016AA  0100               	movlb	0	; () banked
  5874  0016AC  51F5               	movf	_uc_ptr& (0+255),w,b
  5875  0016AE  26D9               	addwf	fsr2l,f,c
  5876  0016B0  0100               	movlb	0	; () banked
  5877  0016B2  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  5878  0016B4  22DA               	addwfc	fsr2h,f,c
  5879  0016B6  50DF               	movf	indf2,w,c
  5880  0016B8  B4D8               	btfsc	status,2,c
  5881  0016BA  0012               	return	
  5882                           
  5883                           ; BSR set to: 0
  5884                           ;my_uart.c: 157: WriteUSART(uc_ptr->sendBuffer[uc_ptr->sendCurrent]);
  5885  0016BC  0100               	movlb	0	; () banked
  5886  0016BE  EE20 F01B          	lfsr	2,27
  5887  0016C2  0100               	movlb	0	; () banked
  5888  0016C4  51F5               	movf	_uc_ptr& (0+255),w,b
  5889  0016C6  26D9               	addwf	fsr2l,f,c
  5890  0016C8  0100               	movlb	0	; () banked
  5891  0016CA  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  5892  0016CC  22DA               	addwfc	fsr2h,f,c
  5893  0016CE  50DF               	movf	indf2,w,c
  5894  0016D0  6E02               	movwf	??_uart_send_int_handler& (0+255),c
  5895  0016D2  5002               	movf	??_uart_send_int_handler,w,c
  5896  0016D4  0D01               	mullw	1
  5897  0016D6  0E10               	movlw	16
  5898  0016D8  26F3               	addwf	prodl,f,c
  5899  0016DA  0E00               	movlw	0
  5900  0016DC  22F4               	addwfc	prodh,f,c
  5901  0016DE  50F3               	movf	prodl,w,c
  5902  0016E0  0100               	movlb	0	; () banked
  5903  0016E2  0100               	movlb	0	; () banked
  5904  0016E4  25F5               	addwf	_uc_ptr& (0+255),w,b
  5905  0016E6  6ED9               	movwf	fsr2l,c
  5906  0016E8  50F4               	movf	prodh,w,c
  5907  0016EA  0100               	movlb	0	; () banked
  5908  0016EC  0100               	movlb	0	; () banked
  5909  0016EE  21F6               	addwfc	(_uc_ptr+1)& (0+255),w,b
  5910  0016F0  6EDA               	movwf	fsr2h,c
  5911  0016F2  50DF               	movf	indf2,w,c
  5912  0016F4  EC88  F00F         	call	_WriteUSART
  5913                           
  5914                           ;my_uart.c: 163: PIE1bits.TXIE = 1;
  5915  0016F8  889D               	bsf	3997,4,c	;volatile
  5916                           
  5917                           ;my_uart.c: 166: uc_ptr->sendCurrent++;
  5918  0016FA  0100               	movlb	0	; () banked
  5919  0016FC  EE20 F01B          	lfsr	2,27
  5920  001700  0100               	movlb	0	; () banked
  5921  001702  51F5               	movf	_uc_ptr& (0+255),w,b
  5922  001704  26D9               	addwf	fsr2l,f,c
  5923  001706  0100               	movlb	0	; () banked
  5924  001708  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  5925  00170A  22DA               	addwfc	fsr2h,f,c
  5926  00170C  2ADF               	incf	indf2,f,c
  5927                           
  5928                           ; BSR set to: 0
  5929                           ;my_uart.c: 167: uc_ptr->sendSize--;
  5930  00170E  0100               	movlb	0	; () banked
  5931  001710  EE20 F01A          	lfsr	2,26
  5932  001714  0100               	movlb	0	; () banked
  5933  001716  51F5               	movf	_uc_ptr& (0+255),w,b
  5934  001718  26D9               	addwf	fsr2l,f,c
  5935  00171A  0100               	movlb	0	; () banked
  5936  00171C  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  5937  00171E  22DA               	addwfc	fsr2h,f,c
  5938  001720  06DF               	decf	indf2,f,c
  5939  001722  0012               	return	
  5940  001724                     __end_of_uart_send_int_handler:
  5941                           	opt stack 0
  5942                           pclatu	equ	0xFFB
  5943                           pclath	equ	0xFFA
  5944                           tblptru	equ	0xFF8
  5945                           tblptrh	equ	0xFF7
  5946                           tblptrl	equ	0xFF6
  5947                           tablat	equ	0xFF5
  5948                           prodh	equ	0xFF4
  5949                           prodl	equ	0xFF3
  5950                           intcon	equ	0xFF2
  5951                           intcon2	equ	0xFF1
  5952                           postinc0	equ	0xFEE
  5953                           fsr0h	equ	0xFEA
  5954                           fsr0l	equ	0xFE9
  5955                           wreg	equ	0xFE8
  5956                           indf1	equ	0xFE7
  5957                           postdec1	equ	0xFE5
  5958                           fsr1h	equ	0xFE2
  5959                           fsr1l	equ	0xFE1
  5960                           bsr	equ	0xFE0
  5961                           indf2	equ	0xFDF
  5962                           postinc2	equ	0xFDE
  5963                           postdec2	equ	0xFDD
  5964                           fsr2h	equ	0xFDA
  5965                           fsr2l	equ	0xFD9
  5966                           status	equ	0xFD8
  5967                           
  5968 ;; *************** function _WriteUSART *****************
  5969 ;; Defined at:
  5970 ;;		line 13 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uwrite.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;  data            1    wreg     unsigned char 
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;  data            1    0[COMRAM] unsigned char 
  5975 ;; Return value:  Size  Location     Type
  5976 ;;		None               void
  5977 ;; Registers used:
  5978 ;;		wreg
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5984 ;;      Params:         0       0       0       0       0
  5985 ;;      Locals:         1       0       0       0       0
  5986 ;;      Temps:          0       0       0       0       0
  5987 ;;      Totals:         1       0       0       0       0
  5988 ;;Total ram usage:        1 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; Hardware stack levels required when called:    5
  5991 ;; This function calls:
  5992 ;;		Nothing
  5993 ;; This function is called by:
  5994 ;;		_uart_send_int_handler
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           	psect	text35
  5999  001F10                     __ptext35:
  6000                           	opt stack 0
  6001  001F10                     _WriteUSART:
  6002                           	opt stack 19
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;incstack = 0
  6006                           ;WriteUSART@data stored from wreg
  6007  001F10  CFE8 F001          	movff	wreg,WriteUSART@data
  6008  001F14  ACAC               	btfss	4012,6,c	;volatile
  6009  001F16  D003               	goto	i1l4205
  6010  001F18  90AC               	bcf	4012,0,c	;volatile
  6011  001F1A  B246               	btfsc	_USART_Status,1,c
  6012  001F1C  80AC               	bsf	4012,0,c	;volatile
  6013  001F1E                     i1l4205:
  6014  001F1E  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  6015  001F22  0012               	return	
  6016  001F24                     __end_of_WriteUSART:
  6017                           	opt stack 0
  6018                           pclatu	equ	0xFFB
  6019                           pclath	equ	0xFFA
  6020                           tblptru	equ	0xFF8
  6021                           tblptrh	equ	0xFF7
  6022                           tblptrl	equ	0xFF6
  6023                           tablat	equ	0xFF5
  6024                           prodh	equ	0xFF4
  6025                           prodl	equ	0xFF3
  6026                           intcon	equ	0xFF2
  6027                           intcon2	equ	0xFF1
  6028                           postinc0	equ	0xFEE
  6029                           fsr0h	equ	0xFEA
  6030                           fsr0l	equ	0xFE9
  6031                           wreg	equ	0xFE8
  6032                           indf1	equ	0xFE7
  6033                           postdec1	equ	0xFE5
  6034                           fsr1h	equ	0xFE2
  6035                           fsr1l	equ	0xFE1
  6036                           bsr	equ	0xFE0
  6037                           indf2	equ	0xFDF
  6038                           postinc2	equ	0xFDE
  6039                           postdec2	equ	0xFDD
  6040                           fsr2h	equ	0xFDA
  6041                           fsr2l	equ	0xFD9
  6042                           status	equ	0xFD8
  6043                           
  6044 ;; *************** function _uart_recv_int_handler *****************
  6045 ;; Defined at:
  6046 ;;		line 121 in file "../src/my_uart.c"
  6047 ;; Parameters:    Size  Location     Type
  6048 ;;		None
  6049 ;; Auto vars:     Size  Location     Type
  6050 ;;		None
  6051 ;; Return value:  Size  Location     Type
  6052 ;;		None               void
  6053 ;; Registers used:
  6054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6055 ;; Tracked objects:
  6056 ;;		On entry : 0/0
  6057 ;;		On exit  : 0/0
  6058 ;;		Unchanged: 0/0
  6059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6060 ;;      Params:         0       0       0       0       0
  6061 ;;      Locals:         0       0       0       0       0
  6062 ;;      Temps:          1       0       0       0       0
  6063 ;;      Totals:         1       0       0       0       0
  6064 ;;Total ram usage:        1 bytes
  6065 ;; Hardware stack levels used:    1
  6066 ;; Hardware stack levels required when called:    8
  6067 ;; This function calls:
  6068 ;;		_ReadUSART
  6069 ;;		_uart_recv_state
  6070 ;;		i1_ToMainLow_sendmsg
  6071 ;; This function is called by:
  6072 ;;		_InterruptHandlerLow
  6073 ;; This function uses a non-reentrant model
  6074 ;;
  6075                           
  6076                           	psect	text36
  6077  001E20                     __ptext36:
  6078                           	opt stack 0
  6079  001E20                     _uart_recv_int_handler:
  6080                           	opt stack 17
  6081                           
  6082                           ;my_uart.c: 135: if ((PIR1bits.RCIF)) {
  6083                           
  6084                           ;incstack = 0
  6085  001E20  AA9E               	btfss	3998,5,c	;volatile
  6086  001E22  D004               	goto	i1l5247
  6087                           
  6088                           ;my_uart.c: 137: uart_recv_state(ReadUSART());
  6089  001E24  EC62  F00F         	call	_ReadUSART	;wreg free
  6090  001E28  ECD0  F004         	call	_uart_recv_state
  6091  001E2C                     i1l5247:
  6092                           
  6093                           ;my_uart.c: 138: }
  6094                           ;my_uart.c: 139: if (USART_Status.OVERRUN_ERROR == 1) {
  6095  001E2C  A646               	btfss	_USART_Status,3,c
  6096  001E2E  0012               	return	
  6097                           
  6098                           ;my_uart.c: 142: RCSTAbits.CREN = 0;
  6099  001E30  98AB               	bcf	4011,4,c	;volatile
  6100                           
  6101                           ;my_uart.c: 143: RCSTAbits.CREN = 1;
  6102  001E32  88AB               	bsf	4011,4,c	;volatile
  6103                           
  6104                           ;my_uart.c: 144: ToMainLow_sendmsg(0, 30, (void *) 0);
  6105  001E34  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6106  001E36  0E1E               	movlw	30
  6107  001E38  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6108  001E3A  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6109  001E3C  0E00               	movlw	0
  6110  001E3E  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  6111  001E40  0E00               	movlw	0
  6112  001E42  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  6113  001E44  0E00               	movlw	0
  6114  001E46  EC4F  F00F         	call	i1_ToMainLow_sendmsg
  6115  001E4A  0012               	return	
  6116  001E4C                     __end_of_uart_recv_int_handler:
  6117                           	opt stack 0
  6118                           pclatu	equ	0xFFB
  6119                           pclath	equ	0xFFA
  6120                           tblptru	equ	0xFF8
  6121                           tblptrh	equ	0xFF7
  6122                           tblptrl	equ	0xFF6
  6123                           tablat	equ	0xFF5
  6124                           prodh	equ	0xFF4
  6125                           prodl	equ	0xFF3
  6126                           intcon	equ	0xFF2
  6127                           intcon2	equ	0xFF1
  6128                           postinc0	equ	0xFEE
  6129                           fsr0h	equ	0xFEA
  6130                           fsr0l	equ	0xFE9
  6131                           wreg	equ	0xFE8
  6132                           indf1	equ	0xFE7
  6133                           postdec1	equ	0xFE5
  6134                           fsr1h	equ	0xFE2
  6135                           fsr1l	equ	0xFE1
  6136                           bsr	equ	0xFE0
  6137                           indf2	equ	0xFDF
  6138                           postinc2	equ	0xFDE
  6139                           postdec2	equ	0xFDD
  6140                           fsr2h	equ	0xFDA
  6141                           fsr2l	equ	0xFD9
  6142                           status	equ	0xFD8
  6143                           
  6144 ;; *************** function i1_ToMainLow_sendmsg *****************
  6145 ;; Defined at:
  6146 ;;		line 108 in file "../src/messages.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;  length          1    wreg     unsigned char 
  6149 ;;  msgtype         1   22[COMRAM] unsigned char 
  6150 ;;  data            2   23[COMRAM] PTR void 
  6151 ;;		 -> main@msgbuffer(11), NULL(0), 
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;  length          1   25[COMRAM] unsigned char 
  6154 ;; Return value:  Size  Location     Type
  6155 ;;                  1    wreg      char 
  6156 ;; Registers used:
  6157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6158 ;; Tracked objects:
  6159 ;;		On entry : 0/0
  6160 ;;		On exit  : 0/0
  6161 ;;		Unchanged: 0/0
  6162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6163 ;;      Params:         3       0       0       0       0
  6164 ;;      Locals:         1       0       0       0       0
  6165 ;;      Temps:          0       0       0       0       0
  6166 ;;      Totals:         4       0       0       0       0
  6167 ;;Total ram usage:        4 bytes
  6168 ;; Hardware stack levels used:    1
  6169 ;; Hardware stack levels required when called:    7
  6170 ;; This function calls:
  6171 ;;		i1_send_msg
  6172 ;; This function is called by:
  6173 ;;		_uart_recv_int_handler
  6174 ;; This function uses a non-reentrant model
  6175 ;;
  6176                           
  6177                           	psect	text37
  6178  001E9E                     __ptext37:
  6179                           	opt stack 0
  6180  001E9E                     i1_ToMainLow_sendmsg:
  6181                           	opt stack 17
  6182                           
  6183                           ;incstack = 0
  6184                           ;i1ToMainLow_sendmsg@length stored from wreg
  6185  001E9E  CFE8 F01A          	movff	wreg,i1ToMainLow_sendmsg@length
  6186                           
  6187                           ;messages.c: 114: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6188                           ;	Return value of i1_ToMainLow_sendmsg is never used
  6189  001EA2  0101               	movlb	1	; () banked
  6190  001EA4  0E01               	movlw	high _ToMainLow_MQ
  6191  001EA6  6E0C               	movwf	i1send_msg@qptr+1,c
  6192  001EA8  0101               	movlb	1	; () banked
  6193  001EAA  0E6D               	movlw	low _ToMainLow_MQ
  6194  001EAC  6E0B               	movwf	i1send_msg@qptr,c
  6195  001EAE  C01A  F00D         	movff	i1ToMainLow_sendmsg@length,i1send_msg@length
  6196  001EB2  C017  F00E         	movff	i1ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6197  001EB6  C019  F010         	movff	i1ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6198  001EBA  C018  F00F         	movff	i1ToMainLow_sendmsg@data,i1send_msg@data
  6199  001EBE  EC96  F009         	call	i1_send_msg	;wreg free
  6200  001EC2  0012               	return	
  6201  001EC4                     __end_ofi1_ToMainLow_sendmsg:
  6202                           	opt stack 0
  6203                           pclatu	equ	0xFFB
  6204                           pclath	equ	0xFFA
  6205                           tblptru	equ	0xFF8
  6206                           tblptrh	equ	0xFF7
  6207                           tblptrl	equ	0xFF6
  6208                           tablat	equ	0xFF5
  6209                           prodh	equ	0xFF4
  6210                           prodl	equ	0xFF3
  6211                           intcon	equ	0xFF2
  6212                           intcon2	equ	0xFF1
  6213                           postinc0	equ	0xFEE
  6214                           fsr0h	equ	0xFEA
  6215                           fsr0l	equ	0xFE9
  6216                           wreg	equ	0xFE8
  6217                           indf1	equ	0xFE7
  6218                           postdec1	equ	0xFE5
  6219                           fsr1h	equ	0xFE2
  6220                           fsr1l	equ	0xFE1
  6221                           bsr	equ	0xFE0
  6222                           indf2	equ	0xFDF
  6223                           postinc2	equ	0xFDE
  6224                           postdec2	equ	0xFDD
  6225                           fsr2h	equ	0xFDA
  6226                           fsr2l	equ	0xFD9
  6227                           status	equ	0xFD8
  6228                           
  6229 ;; *************** function i1_send_msg *****************
  6230 ;; Defined at:
  6231 ;;		line 29 in file "../src/messages.c"
  6232 ;; Parameters:    Size  Location     Type
  6233 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6234 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6235 ;;  length          1   12[COMRAM] unsigned char 
  6236 ;;  msgtype         1   13[COMRAM] unsigned char 
  6237 ;;  data            2   14[COMRAM] PTR void 
  6238 ;;		 -> main@msgbuffer(11), main@t0thread_data(2), main@t1thread_data(2), i2c_int_handler@error_buf(3), 
  6239 ;;		 -> NULL(0), 
  6240 ;; Auto vars:     Size  Location     Type
  6241 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6242 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6243 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6244 ;;  send_msg        2   17[COMRAM] unsigned int 
  6245 ;;  send_msg        1   19[COMRAM] unsigned char 
  6246 ;; Return value:  Size  Location     Type
  6247 ;;                  1    wreg      char 
  6248 ;; Registers used:
  6249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6250 ;; Tracked objects:
  6251 ;;		On entry : 0/0
  6252 ;;		On exit  : 0/0
  6253 ;;		Unchanged: 0/0
  6254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6255 ;;      Params:         6       0       0       0       0
  6256 ;;      Locals:         5       0       0       0       0
  6257 ;;      Temps:          1       0       0       0       0
  6258 ;;      Totals:        12       0       0       0       0
  6259 ;;Total ram usage:       12 bytes
  6260 ;; Hardware stack levels used:    1
  6261 ;; Hardware stack levels required when called:    6
  6262 ;; This function calls:
  6263 ;;		i1_memcpy
  6264 ;; This function is called by:
  6265 ;;		i1_ToMainLow_sendmsg
  6266 ;; This function uses a non-reentrant model
  6267 ;;
  6268                           
  6269                           	psect	text38
  6270  00132C                     __ptext38:
  6271                           	opt stack 0
  6272  00132C                     i1_send_msg:
  6273                           	opt stack 17
  6274                           
  6275                           ;messages.c: 30: unsigned char slot;
  6276                           ;messages.c: 32: msg *qmsg;
  6277                           ;messages.c: 33: size_t tlength = length;
  6278                           
  6279                           ;incstack = 0
  6280  00132C  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6281  001330  6A13               	clrf	i1send_msg@tlength+1,c
  6282                           
  6283                           ;messages.c: 43: slot = qptr->cur_write_ind;
  6284  001332  EE20 F034          	lfsr	2,52
  6285  001336  500B               	movf	i1send_msg@qptr,w,c
  6286  001338  26D9               	addwf	fsr2l,f,c
  6287  00133A  500C               	movf	i1send_msg@qptr+1,w,c
  6288  00133C  22DA               	addwfc	fsr2h,f,c
  6289  00133E  50DF               	movf	indf2,w,c
  6290  001340  6E14               	movwf	i1send_msg@slot,c
  6291                           
  6292                           ;messages.c: 44: qmsg = &(qptr->queue[slot]);
  6293  001342  5014               	movf	i1send_msg@slot,w,c
  6294  001344  0D0D               	mullw	13
  6295  001346  50F3               	movf	prodl,w,c
  6296  001348  240B               	addwf	i1send_msg@qptr,w,c
  6297  00134A  6E15               	movwf	i1send_msg@qmsg,c
  6298  00134C  50F4               	movf	prodh,w,c
  6299  00134E  200C               	addwfc	i1send_msg@qptr+1,w,c
  6300  001350  6E16               	movwf	i1send_msg@qmsg+1,c
  6301                           
  6302                           ;messages.c: 46: if (qmsg->full != 0) {
  6303  001352  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6304  001356  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6305  00135A  50DF               	movf	indf2,w,c
  6306  00135C  B4D8               	btfsc	status,2,c
  6307  00135E  D002               	goto	i1l5227
  6308                           
  6309                           ;messages.c: 47: return (-1);
  6310  001360  0EFF               	movlw	255
  6311  001362  0012               	return	
  6312  001364                     i1l5227:
  6313                           
  6314                           ;messages.c: 48: }
  6315                           ;messages.c: 51: qmsg->length = length;
  6316  001364  EE20 F001          	lfsr	2,1
  6317  001368  5015               	movf	i1send_msg@qmsg,w,c
  6318  00136A  26D9               	addwf	fsr2l,f,c
  6319  00136C  5016               	movf	i1send_msg@qmsg+1,w,c
  6320  00136E  22DA               	addwfc	fsr2h,f,c
  6321  001370  C00D  FFDF         	movff	i1send_msg@length,indf2
  6322                           
  6323                           ;messages.c: 52: qmsg->msgtype = msgtype;
  6324  001374  EE20 F002          	lfsr	2,2
  6325  001378  5015               	movf	i1send_msg@qmsg,w,c
  6326  00137A  26D9               	addwf	fsr2l,f,c
  6327  00137C  5016               	movf	i1send_msg@qmsg+1,w,c
  6328  00137E  22DA               	addwfc	fsr2h,f,c
  6329  001380  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6330                           
  6331                           ;messages.c: 60: memcpy(qmsg->data, data, tlength);
  6332  001384  0E03               	movlw	3
  6333  001386  2415               	addwf	i1send_msg@qmsg,w,c
  6334  001388  6E01               	movwf	i1memcpy@d1,c
  6335  00138A  0E00               	movlw	0
  6336  00138C  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6337  00138E  6E02               	movwf	i1memcpy@d1+1,c
  6338  001390  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6339  001394  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6340  001398  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6341  00139C  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6342  0013A0  EC33  F00E         	call	i1_memcpy	;wreg free
  6343                           
  6344                           ;messages.c: 61: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6345  0013A4  EE20 F034          	lfsr	2,52
  6346  0013A8  500B               	movf	i1send_msg@qptr,w,c
  6347  0013AA  26D9               	addwf	fsr2l,f,c
  6348  0013AC  500C               	movf	i1send_msg@qptr+1,w,c
  6349  0013AE  22DA               	addwfc	fsr2h,f,c
  6350  0013B0  EE10 F034          	lfsr	1,52
  6351  0013B4  500B               	movf	i1send_msg@qptr,w,c
  6352  0013B6  26E1               	addwf	fsr1l,f,c
  6353  0013B8  500C               	movf	i1send_msg@qptr+1,w,c
  6354  0013BA  22E2               	addwfc	fsr1h,f,c
  6355  0013BC  50E7               	movf	indf1,w,c
  6356  0013BE  6E11               	movwf	??i1_send_msg& (0+255),c
  6357  0013C0  2811               	incf	??i1_send_msg,w,c
  6358  0013C2  0B03               	andlw	3
  6359  0013C4  6EDF               	movwf	indf2,c
  6360                           
  6361                           ;messages.c: 64: qmsg->full = 1;
  6362  0013C6  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6363  0013CA  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6364  0013CE  0E01               	movlw	1
  6365  0013D0  6EDF               	movwf	indf2,c
  6366                           
  6367                           ;messages.c: 65: return (1);
  6368  0013D2  0E01               	movlw	1
  6369  0013D4  0012               	return	
  6370  0013D6                     __end_ofi1_send_msg:
  6371                           	opt stack 0
  6372                           pclatu	equ	0xFFB
  6373                           pclath	equ	0xFFA
  6374                           tblptru	equ	0xFF8
  6375                           tblptrh	equ	0xFF7
  6376                           tblptrl	equ	0xFF6
  6377                           tablat	equ	0xFF5
  6378                           prodh	equ	0xFF4
  6379                           prodl	equ	0xFF3
  6380                           intcon	equ	0xFF2
  6381                           intcon2	equ	0xFF1
  6382                           postinc0	equ	0xFEE
  6383                           fsr0h	equ	0xFEA
  6384                           fsr0l	equ	0xFE9
  6385                           wreg	equ	0xFE8
  6386                           indf1	equ	0xFE7
  6387                           postdec1	equ	0xFE5
  6388                           fsr1h	equ	0xFE2
  6389                           fsr1l	equ	0xFE1
  6390                           bsr	equ	0xFE0
  6391                           indf2	equ	0xFDF
  6392                           postinc2	equ	0xFDE
  6393                           postdec2	equ	0xFDD
  6394                           fsr2h	equ	0xFDA
  6395                           fsr2l	equ	0xFD9
  6396                           status	equ	0xFD8
  6397                           
  6398 ;; *************** function i1_memcpy *****************
  6399 ;; Defined at:
  6400 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;  d1              2    0[COMRAM] PTR void 
  6403 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6404 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6405 ;;		 -> ToMainLow_MQ(54), NULL(0), 
  6406 ;;  s1              2    2[COMRAM] PTR const void 
  6407 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6408 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6409 ;;		 -> main@msgbuffer(11), main@t0thread_data(2), main@t1thread_data(2), FromMainHigh_MQ(54), 
  6410 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), i2c_int_handler@error_buf(3), 
  6411 ;;		 -> NULL(0), 
  6412 ;;  n               2    4[COMRAM] unsigned int 
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6415 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6416 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6417 ;;		 -> main@msgbuffer(11), main@t0thread_data(2), main@t1thread_data(2), FromMainHigh_MQ(54), 
  6418 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), i2c_int_handler@error_buf(3), 
  6419 ;;		 -> NULL(0), 
  6420 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6421 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6422 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6423 ;;		 -> ToMainLow_MQ(54), NULL(0), 
  6424 ;; Return value:  Size  Location     Type
  6425 ;;                  2    0[COMRAM] PTR void 
  6426 ;; Registers used:
  6427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6428 ;; Tracked objects:
  6429 ;;		On entry : 0/0
  6430 ;;		On exit  : 0/0
  6431 ;;		Unchanged: 0/0
  6432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6433 ;;      Params:         6       0       0       0       0
  6434 ;;      Locals:         4       0       0       0       0
  6435 ;;      Temps:          0       0       0       0       0
  6436 ;;      Totals:        10       0       0       0       0
  6437 ;;Total ram usage:       10 bytes
  6438 ;; Hardware stack levels used:    1
  6439 ;; Hardware stack levels required when called:    5
  6440 ;; This function calls:
  6441 ;;		Nothing
  6442 ;; This function is called by:
  6443 ;;		i1_send_msg
  6444 ;; This function uses a non-reentrant model
  6445 ;;
  6446                           
  6447                           	psect	text39
  6448  001C66                     __ptext39:
  6449                           	opt stack 0
  6450  001C66                     i1_memcpy:
  6451                           	opt stack 17
  6452                           
  6453                           ;incstack = 0
  6454  001C66  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6455  001C6A  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6456  001C6E  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6457  001C72  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6458  001C76  D00E               	goto	i1l5193
  6459  001C78                     i1l5187:
  6460  001C78  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6461  001C7C  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6462  001C80  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6463  001C84  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6464  001C88  CFDF FFE7          	movff	indf2,indf1
  6465  001C8C  4A09               	infsnz	i1memcpy@s,f,c
  6466  001C8E  2A0A               	incf	i1memcpy@s+1,f,c
  6467  001C90  4A07               	infsnz	i1memcpy@d,f,c
  6468  001C92  2A08               	incf	i1memcpy@d+1,f,c
  6469  001C94                     i1l5193:
  6470  001C94  0605               	decf	i1memcpy@n,f,c
  6471  001C96  A0D8               	btfss	status,0,c
  6472  001C98  0606               	decf	i1memcpy@n+1,f,c
  6473  001C9A  2805               	incf	i1memcpy@n& (0+255),w,c
  6474  001C9C  B4D8               	btfsc	status,2,c
  6475  001C9E  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6476  001CA0  B4D8               	btfsc	status,2,c
  6477                           
  6478                           ;	Return value of i1_memcpy is never used
  6479  001CA2  0012               	return	
  6480  001CA4  D7E9               	goto	i1l5187
  6481  001CA6                     __end_ofi1_memcpy:
  6482                           	opt stack 0
  6483                           pclatu	equ	0xFFB
  6484                           pclath	equ	0xFFA
  6485                           tblptru	equ	0xFF8
  6486                           tblptrh	equ	0xFF7
  6487                           tblptrl	equ	0xFF6
  6488                           tablat	equ	0xFF5
  6489                           prodh	equ	0xFF4
  6490                           prodl	equ	0xFF3
  6491                           intcon	equ	0xFF2
  6492                           intcon2	equ	0xFF1
  6493                           postinc0	equ	0xFEE
  6494                           fsr0h	equ	0xFEA
  6495                           fsr0l	equ	0xFE9
  6496                           wreg	equ	0xFE8
  6497                           indf1	equ	0xFE7
  6498                           postdec1	equ	0xFE5
  6499                           fsr1h	equ	0xFE2
  6500                           fsr1l	equ	0xFE1
  6501                           bsr	equ	0xFE0
  6502                           indf2	equ	0xFDF
  6503                           postinc2	equ	0xFDE
  6504                           postdec2	equ	0xFDD
  6505                           fsr2h	equ	0xFDA
  6506                           fsr2l	equ	0xFD9
  6507                           status	equ	0xFD8
  6508                           
  6509 ;; *************** function _uart_recv_state *****************
  6510 ;; Defined at:
  6511 ;;		line 14 in file "../src/my_uart.c"
  6512 ;; Parameters:    Size  Location     Type
  6513 ;;  byte            1    wreg     unsigned char 
  6514 ;; Auto vars:     Size  Location     Type
  6515 ;;  byte            1    2[COMRAM] unsigned char 
  6516 ;; Return value:  Size  Location     Type
  6517 ;;		None               void
  6518 ;; Registers used:
  6519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl
  6520 ;; Tracked objects:
  6521 ;;		On entry : 0/0
  6522 ;;		On exit  : 0/0
  6523 ;;		Unchanged: 0/0
  6524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6525 ;;      Params:         0       0       0       0       0
  6526 ;;      Locals:         1       0       0       0       0
  6527 ;;      Temps:          2       0       0       0       0
  6528 ;;      Totals:         3       0       0       0       0
  6529 ;;Total ram usage:        3 bytes
  6530 ;; Hardware stack levels used:    1
  6531 ;; Hardware stack levels required when called:    5
  6532 ;; This function calls:
  6533 ;;		Nothing
  6534 ;; This function is called by:
  6535 ;;		_uart_recv_int_handler
  6536 ;; This function uses a non-reentrant model
  6537 ;;
  6538                           
  6539                           	psect	text40
  6540  0009A0                     __ptext40:
  6541                           	opt stack 0
  6542  0009A0                     _uart_recv_state:
  6543                           	opt stack 19
  6544                           
  6545                           ;incstack = 0
  6546                           ;uart_recv_state@byte stored from wreg
  6547  0009A0  CFE8 F003          	movff	wreg,uart_recv_state@byte
  6548                           
  6549                           ;my_uart.c: 16: switch (uc_ptr->state) {
  6550  0009A4  D113               	goto	i1l4193
  6551  0009A6                     i1l4159:
  6552                           
  6553                           ;my_uart.c: 19: if ( byte == 0x2B) {
  6554  0009A6  5003               	movf	uart_recv_state@byte,w,c
  6555  0009A8  0A2B               	xorlw	43
  6556  0009AA  A4D8               	btfss	status,2,c
  6557  0009AC  0012               	return	
  6558                           
  6559                           ;my_uart.c: 21: uc_ptr->state = 53;
  6560  0009AE  0100               	movlb	0	; () banked
  6561  0009B0  EE20 F00B          	lfsr	2,11
  6562  0009B4  0100               	movlb	0	; () banked
  6563  0009B6  51F5               	movf	_uc_ptr& (0+255),w,b
  6564  0009B8  26D9               	addwf	fsr2l,f,c
  6565  0009BA  0100               	movlb	0	; () banked
  6566  0009BC  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  6567  0009BE  22DA               	addwfc	fsr2h,f,c
  6568  0009C0  0E35               	movlw	53
  6569  0009C2  6EDF               	movwf	indf2,c
  6570  0009C4  0012               	return	
  6571  0009C6                     i1l4163:
  6572                           
  6573                           ; BSR set to: 0
  6574                           ;my_uart.c: 26: if ( byte == 0x9F ) {
  6575  0009C6  5003               	movf	uart_recv_state@byte,w,c
  6576  0009C8  0A9F               	xorlw	159
  6577  0009CA  B4D8               	btfsc	status,2,c
  6578  0009CC  0012               	return	
  6579                           
  6580                           ; BSR set to: 0
  6581                           ;my_uart.c: 34: else {
  6582                           ;my_uart.c: 35: uc_ptr->state = 48;
  6583                           
  6584                           ; BSR set to: 0
  6585                           
  6586                           ; BSR set to: 0
  6587                           ;my_uart.c: 33: }
  6588  0009CE  0100               	movlb	0	; () banked
  6589  0009D0  EE20 F00B          	lfsr	2,11
  6590  0009D4  0100               	movlb	0	; () banked
  6591  0009D6  51F5               	movf	_uc_ptr& (0+255),w,b
  6592  0009D8  26D9               	addwf	fsr2l,f,c
  6593  0009DA  0100               	movlb	0	; () banked
  6594  0009DC  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  6595  0009DE  22DA               	addwfc	fsr2h,f,c
  6596  0009E0  0E30               	movlw	48
  6597  0009E2  6EDF               	movwf	indf2,c
  6598  0009E4  0012               	return	
  6599  0009E6                     i1l4169:
  6600                           
  6601                           ; BSR set to: 0
  6602                           ;my_uart.c: 40: uc_ptr->buflen = 0;
  6603  0009E6  0100               	movlb	0	; () banked
  6604  0009E8  EE20 F00A          	lfsr	2,10
  6605  0009EC  0100               	movlb	0	; () banked
  6606  0009EE  51F5               	movf	_uc_ptr& (0+255),w,b
  6607  0009F0  26D9               	addwf	fsr2l,f,c
  6608  0009F2  0100               	movlb	0	; () banked
  6609  0009F4  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  6610  0009F6  22DA               	addwfc	fsr2h,f,c
  6611  0009F8  0E00               	movlw	0
  6612  0009FA  6EDF               	movwf	indf2,c
  6613                           
  6614                           ;my_uart.c: 41: uc_ptr->data_read = 0;
  6615  0009FC  0100               	movlb	0	; () banked
  6616  0009FE  EE20 F00F          	lfsr	2,15
  6617  000A02  0100               	movlb	0	; () banked
  6618  000A04  51F5               	movf	_uc_ptr& (0+255),w,b
  6619  000A06  26D9               	addwf	fsr2l,f,c
  6620  000A08  0100               	movlb	0	; () banked
  6621  000A0A  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  6622  000A0C  22DA               	addwfc	fsr2h,f,c
  6623  000A0E  0E00               	movlw	0
  6624  000A10  6EDF               	movwf	indf2,c
  6625                           
  6626                           ;my_uart.c: 43: uc_ptr->msgtype = byte;
  6627  000A12  0100               	movlb	0	; () banked
  6628  000A14  EE20 F00C          	lfsr	2,12
  6629  000A18  0100               	movlb	0	; () banked
  6630  000A1A  51F5               	movf	_uc_ptr& (0+255),w,b
  6631  000A1C  26D9               	addwf	fsr2l,f,c
  6632  000A1E  0100               	movlb	0	; () banked
  6633  000A20  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  6634  000A22  22DA               	addwfc	fsr2h,f,c
  6635  000A24  C003  FFDF         	movff	uart_recv_state@byte,indf2
  6636                           
  6637                           ; BSR set to: 0
  6638                           ;my_uart.c: 44: uc_ptr->buffer[0] = byte;
  6639  000A28  C0F5  FFD9         	movff	_uc_ptr,fsr2l
  6640  000A2C  C0F6  FFDA         	movff	_uc_ptr+1,fsr2h
  6641  000A30  C003  FFDF         	movff	uart_recv_state@byte,indf2
  6642                           
  6643                           ; BSR set to: 0
  6644                           ;my_uart.c: 45: uc_ptr->state = 54;
  6645  000A34  0100               	movlb	0	; () banked
  6646  000A36  EE20 F00B          	lfsr	2,11
  6647  000A3A  0100               	movlb	0	; () banked
  6648  000A3C  51F5               	movf	_uc_ptr& (0+255),w,b
  6649  000A3E  26D9               	addwf	fsr2l,f,c
  6650  000A40  0100               	movlb	0	; () banked
  6651  000A42  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  6652  000A44  22DA               	addwfc	fsr2h,f,c
  6653  000A46  0E36               	movlw	54
  6654  000A48  6EDF               	movwf	indf2,c
  6655                           
  6656                           ;my_uart.c: 46: break;
  6657  000A4A  0012               	return	
  6658  000A4C                     i1l4175:
  6659                           
  6660                           ; BSR set to: 0
  6661                           ;my_uart.c: 50: uc_ptr->count = byte;
  6662  000A4C  0100               	movlb	0	; () banked
  6663  000A4E  EE20 F00E          	lfsr	2,14
  6664  000A52  0100               	movlb	0	; () banked
  6665  000A54  51F5               	movf	_uc_ptr& (0+255),w,b
  6666  000A56  26D9               	addwf	fsr2l,f,c
  6667  000A58  0100               	movlb	0	; () banked
  6668  000A5A  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  6669  000A5C  22DA               	addwfc	fsr2h,f,c
  6670  000A5E  C003  FFDF         	movff	uart_recv_state@byte,indf2
  6671                           
  6672                           ;my_uart.c: 58: break;
  6673  000A62  0012               	return	
  6674  000A64                     i1l4177:
  6675                           
  6676                           ; BSR set to: 0
  6677                           ;my_uart.c: 62: uc_ptr->buffer[1] = byte;
  6678  000A64  0100               	movlb	0	; () banked
  6679  000A66  EE20 F001          	lfsr	2,1
  6680  000A6A  0100               	movlb	0	; () banked
  6681  000A6C  51F5               	movf	_uc_ptr& (0+255),w,b
  6682  000A6E  26D9               	addwf	fsr2l,f,c
  6683  000A70  0100               	movlb	0	; () banked
  6684  000A72  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  6685  000A74  22DA               	addwfc	fsr2h,f,c
  6686  000A76  C003  FFDF         	movff	uart_recv_state@byte,indf2
  6687                           
  6688                           ;my_uart.c: 63: uc_ptr->data_length = byte;
  6689  000A7A  0100               	movlb	0	; () banked
  6690  000A7C  EE20 F00D          	lfsr	2,13
  6691  000A80  0100               	movlb	0	; () banked
  6692  000A82  51F5               	movf	_uc_ptr& (0+255),w,b
  6693  000A84  26D9               	addwf	fsr2l,f,c
  6694  000A86  0100               	movlb	0	; () banked
  6695  000A88  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  6696  000A8A  22DA               	addwfc	fsr2h,f,c
  6697  000A8C  C003  FFDF         	movff	uart_recv_state@byte,indf2
  6698                           
  6699                           ;my_uart.c: 64: uc_ptr->buflen = 0;
  6700  000A90  0100               	movlb	0	; () banked
  6701  000A92  EE20 F00A          	lfsr	2,10
  6702  000A96  0100               	movlb	0	; () banked
  6703  000A98  51F5               	movf	_uc_ptr& (0+255),w,b
  6704  000A9A  26D9               	addwf	fsr2l,f,c
  6705  000A9C  0100               	movlb	0	; () banked
  6706  000A9E  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  6707  000AA0  22DA               	addwfc	fsr2h,f,c
  6708  000AA2  0E00               	movlw	0
  6709  000AA4  6EDF               	movwf	indf2,c
  6710                           
  6711                           ;my_uart.c: 65: uc_ptr->data_read = 0;
  6712  000AA6  0100               	movlb	0	; () banked
  6713  000AA8  EE20 F00F          	lfsr	2,15
  6714  000AAC  0100               	movlb	0	; () banked
  6715  000AAE  51F5               	movf	_uc_ptr& (0+255),w,b
  6716  000AB0  26D9               	addwf	fsr2l,f,c
  6717  000AB2  0100               	movlb	0	; () banked
  6718  000AB4  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  6719  000AB6  22DA               	addwfc	fsr2h,f,c
  6720  000AB8  0E00               	movlw	0
  6721  000ABA  6EDF               	movwf	indf2,c
  6722                           
  6723                           ;my_uart.c: 66: uc_ptr->state = 51;
  6724  000ABC  0100               	movlb	0	; () banked
  6725  000ABE  EE20 F00B          	lfsr	2,11
  6726  000AC2  0100               	movlb	0	; () banked
  6727  000AC4  51F5               	movf	_uc_ptr& (0+255),w,b
  6728  000AC6  26D9               	addwf	fsr2l,f,c
  6729  000AC8  0100               	movlb	0	; () banked
  6730  000ACA  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  6731  000ACC  22DA               	addwfc	fsr2h,f,c
  6732  000ACE  0E33               	movlw	51
  6733  000AD0  6EDF               	movwf	indf2,c
  6734                           
  6735                           ;my_uart.c: 67: break;
  6736  000AD2  0012               	return	
  6737  000AD4                     i1l4179:
  6738                           
  6739                           ; BSR set to: 0
  6740                           ;my_uart.c: 73: if ( uc_ptr->data_read + 2 < 10 ) {
  6741  000AD4  0100               	movlb	0	; () banked
  6742  000AD6  EE20 F00F          	lfsr	2,15
  6743  000ADA  0100               	movlb	0	; () banked
  6744  000ADC  51F5               	movf	_uc_ptr& (0+255),w,b
  6745  000ADE  26D9               	addwf	fsr2l,f,c
  6746  000AE0  0100               	movlb	0	; () banked
  6747  000AE2  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  6748  000AE4  22DA               	addwfc	fsr2h,f,c
  6749  000AE6  50DF               	movf	indf2,w,c
  6750  000AE8  6E01               	movwf	??_uart_recv_state& (0+255),c
  6751  000AEA  6A02               	clrf	(??_uart_recv_state+1)& (0+255),c
  6752  000AEC  0E02               	movlw	2
  6753  000AEE  2601               	addwf	??_uart_recv_state,f,c
  6754  000AF0  0E00               	movlw	0
  6755  000AF2  2202               	addwfc	??_uart_recv_state+1,f,c
  6756  000AF4  5002               	movf	??_uart_recv_state+1,w,c
  6757  000AF6  0A80               	xorlw	128
  6758  000AF8  6EF3               	movwf	prodl,c
  6759  000AFA  0E80               	movlw	128
  6760  000AFC  5CF3               	subwf	prodl,w,c
  6761  000AFE  0E0A               	movlw	10
  6762  000B00  B4D8               	btfsc	status,2,c
  6763  000B02  5C01               	subwf	??_uart_recv_state,w,c
  6764  000B04  B0D8               	btfsc	status,0,c
  6765  000B06  D01C               	goto	i1l93
  6766                           
  6767                           ; BSR set to: 0
  6768                           ;my_uart.c: 74: uc_ptr->buffer[uc_ptr->data_read+2] = byte;
  6769  000B08  0100               	movlb	0	; () banked
  6770  000B0A  EE20 F00F          	lfsr	2,15
  6771  000B0E  0100               	movlb	0	; () banked
  6772  000B10  51F5               	movf	_uc_ptr& (0+255),w,b
  6773  000B12  26D9               	addwf	fsr2l,f,c
  6774  000B14  0100               	movlb	0	; () banked
  6775  000B16  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  6776  000B18  22DA               	addwfc	fsr2h,f,c
  6777  000B1A  50DF               	movf	indf2,w,c
  6778  000B1C  6E01               	movwf	??_uart_recv_state& (0+255),c
  6779  000B1E  6A02               	clrf	(??_uart_recv_state+1)& (0+255),c
  6780  000B20  0E02               	movlw	2
  6781  000B22  2601               	addwf	??_uart_recv_state,f,c
  6782  000B24  0E00               	movlw	0
  6783  000B26  2202               	addwfc	??_uart_recv_state+1,f,c
  6784  000B28  5001               	movf	??_uart_recv_state,w,c
  6785  000B2A  0100               	movlb	0	; () banked
  6786  000B2C  0100               	movlb	0	; () banked
  6787  000B2E  25F5               	addwf	_uc_ptr& (0+255),w,b
  6788  000B30  6ED9               	movwf	fsr2l,c
  6789  000B32  5002               	movf	??_uart_recv_state+1,w,c
  6790  000B34  0100               	movlb	0	; () banked
  6791  000B36  0100               	movlb	0	; () banked
  6792  000B38  21F6               	addwfc	(_uc_ptr+1)& (0+255),w,b
  6793  000B3A  6EDA               	movwf	fsr2h,c
  6794  000B3C  C003  FFDF         	movff	uart_recv_state@byte,indf2
  6795  000B40                     i1l93:
  6796                           
  6797                           ; BSR set to: 0
  6798                           ;my_uart.c: 75: }
  6799                           ;my_uart.c: 78: uc_ptr->data_read += 1;
  6800  000B40  0100               	movlb	0	; () banked
  6801  000B42  EE20 F00F          	lfsr	2,15
  6802  000B46  0100               	movlb	0	; () banked
  6803  000B48  51F5               	movf	_uc_ptr& (0+255),w,b
  6804  000B4A  26D9               	addwf	fsr2l,f,c
  6805  000B4C  0100               	movlb	0	; () banked
  6806  000B4E  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  6807  000B50  22DA               	addwfc	fsr2h,f,c
  6808  000B52  2ADF               	incf	indf2,f,c
  6809                           
  6810                           ;my_uart.c: 81: if(9 == uc_ptr->data_read) {
  6811  000B54  0100               	movlb	0	; () banked
  6812  000B56  EE20 F00F          	lfsr	2,15
  6813  000B5A  0100               	movlb	0	; () banked
  6814  000B5C  51F5               	movf	_uc_ptr& (0+255),w,b
  6815  000B5E  26D9               	addwf	fsr2l,f,c
  6816  000B60  0100               	movlb	0	; () banked
  6817  000B62  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  6818  000B64  22DA               	addwfc	fsr2h,f,c
  6819  000B66  0E09               	movlw	9
  6820  000B68  62DF               	cpfseq	indf2,c
  6821  000B6A  0012               	return	
  6822                           
  6823                           ; BSR set to: 0
  6824                           ;my_uart.c: 82: uc_ptr->state = 52;
  6825  000B6C  0100               	movlb	0	; () banked
  6826  000B6E  EE20 F00B          	lfsr	2,11
  6827  000B72  0100               	movlb	0	; () banked
  6828  000B74  51F5               	movf	_uc_ptr& (0+255),w,b
  6829  000B76  26D9               	addwf	fsr2l,f,c
  6830  000B78  0100               	movlb	0	; () banked
  6831  000B7A  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  6832  000B7C  22DA               	addwfc	fsr2h,f,c
  6833  000B7E  0E34               	movlw	52
  6834  000B80  6EDF               	movwf	indf2,c
  6835  000B82  0012               	return	
  6836  000B84                     i1l4185:
  6837                           
  6838                           ; BSR set to: 0
  6839                           ;my_uart.c: 88: if ( byte == 0x5C ) {
  6840  000B84  5003               	movf	uart_recv_state@byte,w,c
  6841  000B86  0A5C               	xorlw	92
  6842                           
  6843                           ; BSR set to: 0
  6844                           ;my_uart.c: 109: else {
  6845                           ;my_uart.c: 110: uc_ptr->state = 48;
  6846                           
  6847                           ; BSR set to: 0
  6848                           
  6849                           ;my_uart.c: 108: }
  6850                           
  6851                           ; BSR set to: 0
  6852                           ;my_uart.c: 90: uc_ptr->state = 48;
  6853  000B88  0100               	movlb	0	; () banked
  6854  000B8A  EE20 F00B          	lfsr	2,11
  6855  000B8E  0100               	movlb	0	; () banked
  6856  000B90  51F5               	movf	_uc_ptr& (0+255),w,b
  6857  000B92  26D9               	addwf	fsr2l,f,c
  6858  000B94  0100               	movlb	0	; () banked
  6859  000B96  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  6860  000B98  22DA               	addwfc	fsr2h,f,c
  6861  000B9A  0E30               	movlw	48
  6862  000B9C  6EDF               	movwf	indf2,c
  6863                           
  6864                           ; BSR set to: 0
  6865                           ;my_uart.c: 111: }
  6866                           ;my_uart.c: 112: uc_ptr->buflen = 0;
  6867  000B9E  0100               	movlb	0	; () banked
  6868  000BA0  EE20 F00A          	lfsr	2,10
  6869  000BA4  0100               	movlb	0	; () banked
  6870  000BA6  51F5               	movf	_uc_ptr& (0+255),w,b
  6871  000BA8  26D9               	addwf	fsr2l,f,c
  6872  000BAA  0100               	movlb	0	; () banked
  6873  000BAC  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  6874  000BAE  22DA               	addwfc	fsr2h,f,c
  6875  000BB0  0E00               	movlw	0
  6876  000BB2  6EDF               	movwf	indf2,c
  6877                           
  6878                           ;my_uart.c: 113: uc_ptr->data_read = 0;
  6879  000BB4  0100               	movlb	0	; () banked
  6880  000BB6  EE20 F00F          	lfsr	2,15
  6881  000BBA  0100               	movlb	0	; () banked
  6882  000BBC  51F5               	movf	_uc_ptr& (0+255),w,b
  6883  000BBE  26D9               	addwf	fsr2l,f,c
  6884  000BC0  0100               	movlb	0	; () banked
  6885  000BC2  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  6886  000BC4  22DA               	addwfc	fsr2h,f,c
  6887  000BC6  0E00               	movlw	0
  6888  000BC8  6EDF               	movwf	indf2,c
  6889                           
  6890                           ;my_uart.c: 114: break;
  6891  000BCA  0012               	return	
  6892  000BCC                     i1l4193:
  6893  000BCC  0100               	movlb	0	; () banked
  6894  000BCE  EE20 F00B          	lfsr	2,11
  6895  000BD2  0100               	movlb	0	; () banked
  6896  000BD4  51F5               	movf	_uc_ptr& (0+255),w,b
  6897  000BD6  26D9               	addwf	fsr2l,f,c
  6898  000BD8  0100               	movlb	0	; () banked
  6899  000BDA  51F6               	movf	(_uc_ptr+1)& (0+255),w,b
  6900  000BDC  22DA               	addwfc	fsr2h,f,c
  6901  000BDE  50DF               	movf	indf2,w,c
  6902                           
  6903                           ; Switch size 1, requested type "space"
  6904                           ; Number of cases is 7, Range of values is 48 to 54
  6905                           ; switch strategies available:
  6906                           ; Name         Instructions Cycles
  6907                           ; simple_byte           22    12 (average)
  6908                           ;	Chosen strategy is simple_byte
  6909  000BE0  0A30               	xorlw	48	; case 48
  6910  000BE2  B4D8               	btfsc	status,2,c
  6911  000BE4  D6E0               	goto	i1l4159
  6912  000BE6  0A01               	xorlw	1	; case 49
  6913  000BE8  B4D8               	btfsc	status,2,c
  6914  000BEA  D6FD               	goto	i1l4169
  6915  000BEC  0A03               	xorlw	3	; case 50
  6916  000BEE  B4D8               	btfsc	status,2,c
  6917  000BF0  D739               	goto	i1l4177
  6918  000BF2  0A01               	xorlw	1	; case 51
  6919  000BF4  B4D8               	btfsc	status,2,c
  6920  000BF6  D76E               	goto	i1l4179
  6921  000BF8  0A07               	xorlw	7	; case 52
  6922  000BFA  B4D8               	btfsc	status,2,c
  6923  000BFC  D7C3               	goto	i1l4185
  6924  000BFE  0A01               	xorlw	1	; case 53
  6925  000C00  B4D8               	btfsc	status,2,c
  6926  000C02  D6E1               	goto	i1l4163
  6927  000C04  0A03               	xorlw	3	; case 54
  6928  000C06  A4D8               	btfss	status,2,c
  6929  000C08  0012               	return	
  6930  000C0A  D720               	goto	i1l4175
  6931  000C0C                     __end_of_uart_recv_state:
  6932                           	opt stack 0
  6933                           pclatu	equ	0xFFB
  6934                           pclath	equ	0xFFA
  6935                           tblptru	equ	0xFF8
  6936                           tblptrh	equ	0xFF7
  6937                           tblptrl	equ	0xFF6
  6938                           tablat	equ	0xFF5
  6939                           prodh	equ	0xFF4
  6940                           prodl	equ	0xFF3
  6941                           intcon	equ	0xFF2
  6942                           intcon2	equ	0xFF1
  6943                           postinc0	equ	0xFEE
  6944                           fsr0h	equ	0xFEA
  6945                           fsr0l	equ	0xFE9
  6946                           wreg	equ	0xFE8
  6947                           indf1	equ	0xFE7
  6948                           postdec1	equ	0xFE5
  6949                           fsr1h	equ	0xFE2
  6950                           fsr1l	equ	0xFE1
  6951                           bsr	equ	0xFE0
  6952                           indf2	equ	0xFDF
  6953                           postinc2	equ	0xFDE
  6954                           postdec2	equ	0xFDD
  6955                           fsr2h	equ	0xFDA
  6956                           fsr2l	equ	0xFD9
  6957                           status	equ	0xFD8
  6958                           
  6959 ;; *************** function _ReadUSART *****************
  6960 ;; Defined at:
  6961 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uread.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;		None
  6964 ;; Auto vars:     Size  Location     Type
  6965 ;;  data            1    0[COMRAM] unsigned char 
  6966 ;; Return value:  Size  Location     Type
  6967 ;;                  1    wreg      unsigned char 
  6968 ;; Registers used:
  6969 ;;		wreg, status,2, status,0
  6970 ;; Tracked objects:
  6971 ;;		On entry : 0/0
  6972 ;;		On exit  : 0/0
  6973 ;;		Unchanged: 0/0
  6974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6975 ;;      Params:         0       0       0       0       0
  6976 ;;      Locals:         1       0       0       0       0
  6977 ;;      Temps:          0       0       0       0       0
  6978 ;;      Totals:         1       0       0       0       0
  6979 ;;Total ram usage:        1 bytes
  6980 ;; Hardware stack levels used:    1
  6981 ;; Hardware stack levels required when called:    5
  6982 ;; This function calls:
  6983 ;;		Nothing
  6984 ;; This function is called by:
  6985 ;;		_uart_recv_int_handler
  6986 ;; This function uses a non-reentrant model
  6987 ;;
  6988                           
  6989                           	psect	text41
  6990  001EC4                     __ptext41:
  6991                           	opt stack 0
  6992  001EC4                     _ReadUSART:
  6993                           	opt stack 19
  6994                           
  6995                           ;incstack = 0
  6996  001EC4  0EF2               	movlw	242
  6997  001EC6  1646               	andwf	_USART_Status,f,c
  6998  001EC8  ACAB               	btfss	4011,6,c	;volatile
  6999  001ECA  D003               	goto	i1l851
  7000  001ECC  9046               	bcf	_USART_Status,0,c
  7001  001ECE  B0AB               	btfsc	4011,0,c	;volatile
  7002  001ED0  8046               	bsf	_USART_Status,0,c
  7003  001ED2                     i1l851:
  7004  001ED2  B4AB               	btfsc	4011,2,c	;volatile
  7005  001ED4  8446               	bsf	_USART_Status,2,c
  7006  001ED6  B2AB               	btfsc	4011,1,c	;volatile
  7007  001ED8  8646               	bsf	_USART_Status,3,c
  7008  001EDA  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  7009  001EDE  5001               	movf	ReadUSART@data,w,c
  7010  001EE0  0012               	return	
  7011  001EE2                     __end_of_ReadUSART:
  7012                           	opt stack 0
  7013                           pclatu	equ	0xFFB
  7014                           pclath	equ	0xFFA
  7015                           tblptru	equ	0xFF8
  7016                           tblptrh	equ	0xFF7
  7017                           tblptrl	equ	0xFF6
  7018                           tablat	equ	0xFF5
  7019                           prodh	equ	0xFF4
  7020                           prodl	equ	0xFF3
  7021                           intcon	equ	0xFF2
  7022                           intcon2	equ	0xFF1
  7023                           postinc0	equ	0xFEE
  7024                           fsr0h	equ	0xFEA
  7025                           fsr0l	equ	0xFE9
  7026                           wreg	equ	0xFE8
  7027                           indf1	equ	0xFE7
  7028                           postdec1	equ	0xFE5
  7029                           fsr1h	equ	0xFE2
  7030                           fsr1l	equ	0xFE1
  7031                           bsr	equ	0xFE0
  7032                           indf2	equ	0xFDF
  7033                           postinc2	equ	0xFDE
  7034                           postdec2	equ	0xFDD
  7035                           fsr2h	equ	0xFDA
  7036                           fsr2l	equ	0xFD9
  7037                           status	equ	0xFD8
  7038                           
  7039 ;; *************** function _timer1_int_handler *****************
  7040 ;; Defined at:
  7041 ;;		line 42 in file "../src/user_interrupts.c"
  7042 ;; Parameters:    Size  Location     Type
  7043 ;;		None
  7044 ;; Auto vars:     Size  Location     Type
  7045 ;;  result          2    5[COMRAM] unsigned int 
  7046 ;; Return value:  Size  Location     Type
  7047 ;;		None               void
  7048 ;; Registers used:
  7049 ;;		wreg, status,2, status,0, cstack
  7050 ;; Tracked objects:
  7051 ;;		On entry : 0/0
  7052 ;;		On exit  : 0/0
  7053 ;;		Unchanged: 0/0
  7054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7055 ;;      Params:         0       0       0       0       0
  7056 ;;      Locals:         2       0       0       0       0
  7057 ;;      Temps:          1       0       0       0       0
  7058 ;;      Totals:         3       0       0       0       0
  7059 ;;Total ram usage:        3 bytes
  7060 ;; Hardware stack levels used:    1
  7061 ;; Hardware stack levels required when called:    6
  7062 ;; This function calls:
  7063 ;;		_ReadTimer1
  7064 ;;		_WriteTimer1
  7065 ;; This function is called by:
  7066 ;;		_InterruptHandlerLow
  7067 ;; This function uses a non-reentrant model
  7068 ;;
  7069                           
  7070                           	psect	text42
  7071  001DEC                     __ptext42:
  7072                           	opt stack 0
  7073  001DEC                     _timer1_int_handler:
  7074                           	opt stack 19
  7075                           
  7076                           ;user_interrupts.c: 43: unsigned int result;
  7077                           ;user_interrupts.c: 46: LATBbits.LATB7 = !LATBbits.LATB7;
  7078                           
  7079                           ;incstack = 0
  7080  001DEC  BE8A               	btfsc	3978,7,c	;volatile
  7081  001DEE  D002               	goto	i1u143_20
  7082  001DF0  0E01               	movlw	1
  7083  001DF2  D001               	goto	i1u143_26
  7084  001DF4                     i1u143_20:
  7085  001DF4  0E00               	movlw	0
  7086  001DF6                     i1u143_26:
  7087  001DF6  6E05               	movwf	??_timer1_int_handler& (0+255),c
  7088  001DF8  3205               	rrcf	??_timer1_int_handler,f,c
  7089  001DFA  3205               	rrcf	??_timer1_int_handler,f,c
  7090  001DFC  508A               	movf	3978,w,c	;volatile
  7091  001DFE  1805               	xorwf	??_timer1_int_handler,w,c
  7092  001E00  0B7F               	andlw	-129
  7093  001E02  1805               	xorwf	??_timer1_int_handler,w,c
  7094  001E04  6E8A               	movwf	3978,c	;volatile
  7095                           
  7096                           ;user_interrupts.c: 47: result = ReadTimer1();
  7097  001E06  ECB6  F00F         	call	_ReadTimer1	;wreg free
  7098  001E0A  C001  F006         	movff	?_ReadTimer1,timer1_int_handler@result
  7099  001E0E  C002  F007         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  7100                           
  7101                           ;user_interrupts.c: 57: WriteTimer1(0);
  7102  001E12  0E00               	movlw	0
  7103  001E14  6E02               	movwf	WriteTimer1@timer1+1,c
  7104  001E16  0E00               	movlw	0
  7105  001E18  6E01               	movwf	WriteTimer1@timer1,c
  7106  001E1A  ECAD  F00F         	call	_WriteTimer1	;wreg free
  7107  001E1E  0012               	return	
  7108  001E20                     __end_of_timer1_int_handler:
  7109                           	opt stack 0
  7110                           pclatu	equ	0xFFB
  7111                           pclath	equ	0xFFA
  7112                           tblptru	equ	0xFF8
  7113                           tblptrh	equ	0xFF7
  7114                           tblptrl	equ	0xFF6
  7115                           tablat	equ	0xFF5
  7116                           prodh	equ	0xFF4
  7117                           prodl	equ	0xFF3
  7118                           intcon	equ	0xFF2
  7119                           intcon2	equ	0xFF1
  7120                           postinc0	equ	0xFEE
  7121                           fsr0h	equ	0xFEA
  7122                           fsr0l	equ	0xFE9
  7123                           wreg	equ	0xFE8
  7124                           indf1	equ	0xFE7
  7125                           postdec1	equ	0xFE5
  7126                           fsr1h	equ	0xFE2
  7127                           fsr1l	equ	0xFE1
  7128                           bsr	equ	0xFE0
  7129                           indf2	equ	0xFDF
  7130                           postinc2	equ	0xFDE
  7131                           postdec2	equ	0xFDD
  7132                           fsr2h	equ	0xFDA
  7133                           fsr2l	equ	0xFD9
  7134                           status	equ	0xFD8
  7135                           
  7136 ;; *************** function _WriteTimer1 *****************
  7137 ;; Defined at:
  7138 ;;		line 14 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1write.c"
  7139 ;; Parameters:    Size  Location     Type
  7140 ;;  timer1          2    0[COMRAM] unsigned int 
  7141 ;; Auto vars:     Size  Location     Type
  7142 ;;  timer           2    2[COMRAM] struct Timers
  7143 ;; Return value:  Size  Location     Type
  7144 ;;		None               void
  7145 ;; Registers used:
  7146 ;;		None
  7147 ;; Tracked objects:
  7148 ;;		On entry : 0/0
  7149 ;;		On exit  : 0/0
  7150 ;;		Unchanged: 0/0
  7151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7152 ;;      Params:         2       0       0       0       0
  7153 ;;      Locals:         2       0       0       0       0
  7154 ;;      Temps:          0       0       0       0       0
  7155 ;;      Totals:         4       0       0       0       0
  7156 ;;Total ram usage:        4 bytes
  7157 ;; Hardware stack levels used:    1
  7158 ;; Hardware stack levels required when called:    5
  7159 ;; This function calls:
  7160 ;;		Nothing
  7161 ;; This function is called by:
  7162 ;;		_timer1_int_handler
  7163 ;; This function uses a non-reentrant model
  7164 ;;
  7165                           
  7166                           	psect	text43
  7167  001F5A                     __ptext43:
  7168                           	opt stack 0
  7169  001F5A                     _WriteTimer1:
  7170                           	opt stack 19
  7171                           
  7172                           ;incstack = 0
  7173  001F5A  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  7174  001F5E  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  7175  001F62  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  7176  001F66  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  7177  001F6A  0012               	return	
  7178  001F6C                     __end_of_WriteTimer1:
  7179                           	opt stack 0
  7180                           pclatu	equ	0xFFB
  7181                           pclath	equ	0xFFA
  7182                           tblptru	equ	0xFF8
  7183                           tblptrh	equ	0xFF7
  7184                           tblptrl	equ	0xFF6
  7185                           tablat	equ	0xFF5
  7186                           prodh	equ	0xFF4
  7187                           prodl	equ	0xFF3
  7188                           intcon	equ	0xFF2
  7189                           intcon2	equ	0xFF1
  7190                           postinc0	equ	0xFEE
  7191                           fsr0h	equ	0xFEA
  7192                           fsr0l	equ	0xFE9
  7193                           wreg	equ	0xFE8
  7194                           indf1	equ	0xFE7
  7195                           postdec1	equ	0xFE5
  7196                           fsr1h	equ	0xFE2
  7197                           fsr1l	equ	0xFE1
  7198                           bsr	equ	0xFE0
  7199                           indf2	equ	0xFDF
  7200                           postinc2	equ	0xFDE
  7201                           postdec2	equ	0xFDD
  7202                           fsr2h	equ	0xFDA
  7203                           fsr2l	equ	0xFD9
  7204                           status	equ	0xFD8
  7205                           
  7206 ;; *************** function _ReadTimer1 *****************
  7207 ;; Defined at:
  7208 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1read.c"
  7209 ;; Parameters:    Size  Location     Type
  7210 ;;		None
  7211 ;; Auto vars:     Size  Location     Type
  7212 ;;  timer           2    2[COMRAM] struct Timers
  7213 ;; Return value:  Size  Location     Type
  7214 ;;                  2    0[COMRAM] unsigned int 
  7215 ;; Registers used:
  7216 ;;		None
  7217 ;; Tracked objects:
  7218 ;;		On entry : 0/0
  7219 ;;		On exit  : 0/0
  7220 ;;		Unchanged: 0/0
  7221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7222 ;;      Params:         2       0       0       0       0
  7223 ;;      Locals:         2       0       0       0       0
  7224 ;;      Temps:          0       0       0       0       0
  7225 ;;      Totals:         4       0       0       0       0
  7226 ;;Total ram usage:        4 bytes
  7227 ;; Hardware stack levels used:    1
  7228 ;; Hardware stack levels required when called:    5
  7229 ;; This function calls:
  7230 ;;		Nothing
  7231 ;; This function is called by:
  7232 ;;		_timer1_int_handler
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235                           
  7236                           	psect	text44
  7237  001F6C                     __ptext44:
  7238                           	opt stack 0
  7239  001F6C                     _ReadTimer1:
  7240                           	opt stack 19
  7241                           
  7242                           ;incstack = 0
  7243  001F6C  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  7244  001F70  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  7245  001F74  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  7246  001F78  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  7247  001F7C  0012               	return	
  7248  001F7E                     __end_of_ReadTimer1:
  7249                           	opt stack 0
  7250                           pclatu	equ	0xFFB
  7251                           pclath	equ	0xFFA
  7252                           tblptru	equ	0xFF8
  7253                           tblptrh	equ	0xFF7
  7254                           tblptrl	equ	0xFF6
  7255                           tablat	equ	0xFF5
  7256                           prodh	equ	0xFF4
  7257                           prodl	equ	0xFF3
  7258                           intcon	equ	0xFF2
  7259                           intcon2	equ	0xFF1
  7260                           postinc0	equ	0xFEE
  7261                           fsr0h	equ	0xFEA
  7262                           fsr0l	equ	0xFE9
  7263                           wreg	equ	0xFE8
  7264                           indf1	equ	0xFE7
  7265                           postdec1	equ	0xFE5
  7266                           fsr1h	equ	0xFE2
  7267                           fsr1l	equ	0xFE1
  7268                           bsr	equ	0xFE0
  7269                           indf2	equ	0xFDF
  7270                           postinc2	equ	0xFDE
  7271                           postdec2	equ	0xFDD
  7272                           fsr2h	equ	0xFDA
  7273                           fsr2l	equ	0xFD9
  7274                           status	equ	0xFD8
  7275                           
  7276 ;; *************** function _InterruptHandlerHigh *****************
  7277 ;; Defined at:
  7278 ;;		line 177 in file "../src/interrupts.c"
  7279 ;; Parameters:    Size  Location     Type
  7280 ;;		None
  7281 ;; Auto vars:     Size  Location     Type
  7282 ;;  pureADCValue    2   56[BANK0 ] int 
  7283 ;; Return value:  Size  Location     Type
  7284 ;;		None               void
  7285 ;; Registers used:
  7286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7287 ;; Tracked objects:
  7288 ;;		On entry : 0/0
  7289 ;;		On exit  : 0/0
  7290 ;;		Unchanged: 0/0
  7291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7292 ;;      Params:         0       0       0       0       0
  7293 ;;      Locals:         0       2       0       0       0
  7294 ;;      Temps:          0      16       0       0       0
  7295 ;;      Totals:         0      18       0       0       0
  7296 ;;Total ram usage:       18 bytes
  7297 ;; Hardware stack levels used:    1
  7298 ;; Hardware stack levels required when called:    4
  7299 ;; This function calls:
  7300 ;;		_ReadADC
  7301 ;;		_i2c_int_handler
  7302 ;;		_timer0_int_handler
  7303 ;;		i2_ConvertADC
  7304 ;; This function is called by:
  7305 ;;		Interrupt level 2
  7306 ;; This function uses a non-reentrant model
  7307 ;;
  7308                           
  7309                           	psect	intcode
  7310  000008                     __pintcode:
  7311                           	opt stack 0
  7312  000008                     _InterruptHandlerHigh:
  7313                           	opt stack 17
  7314                           
  7315                           ;incstack = 0
  7316  000008  CFFA F0AA          	movff	pclath,??_InterruptHandlerHigh+2
  7317  00000C  CFFB F0AB          	movff	pclatu,??_InterruptHandlerHigh+3
  7318  000010  EF3C  F007         	goto	int_func
  7319                           pclatu	equ	0xFFB
  7320                           pclath	equ	0xFFA
  7321                           tblptru	equ	0xFF8
  7322                           tblptrh	equ	0xFF7
  7323                           tblptrl	equ	0xFF6
  7324                           tablat	equ	0xFF5
  7325                           prodh	equ	0xFF4
  7326                           prodl	equ	0xFF3
  7327                           intcon	equ	0xFF2
  7328                           intcon2	equ	0xFF1
  7329                           postinc0	equ	0xFEE
  7330                           fsr0h	equ	0xFEA
  7331                           fsr0l	equ	0xFE9
  7332                           wreg	equ	0xFE8
  7333                           indf1	equ	0xFE7
  7334                           postdec1	equ	0xFE5
  7335                           fsr1h	equ	0xFE2
  7336                           fsr1l	equ	0xFE1
  7337                           bsr	equ	0xFE0
  7338                           indf2	equ	0xFDF
  7339                           postinc2	equ	0xFDE
  7340                           postdec2	equ	0xFDD
  7341                           fsr2h	equ	0xFDA
  7342                           fsr2l	equ	0xFD9
  7343                           status	equ	0xFD8
  7344                           
  7345                           	psect	intcode_body
  7346  000E78                     __pintcode_body:
  7347                           	opt stack 17
  7348  000E78                     int_func:
  7349                           	opt stack 17
  7350  000E78  CFE9 F0AC          	movff	fsr0l,??_InterruptHandlerHigh+4
  7351  000E7C  CFEA F0AD          	movff	fsr0h,??_InterruptHandlerHigh+5
  7352  000E80  CFE1 F0AE          	movff	fsr1l,??_InterruptHandlerHigh+6
  7353  000E84  CFE2 F0AF          	movff	fsr1h,??_InterruptHandlerHigh+7
  7354  000E88  CFD9 F0B0          	movff	fsr2l,??_InterruptHandlerHigh+8
  7355  000E8C  CFDA F0B1          	movff	fsr2h,??_InterruptHandlerHigh+9
  7356  000E90  CFF3 F0B2          	movff	prodl,??_InterruptHandlerHigh+10
  7357  000E94  CFF4 F0B3          	movff	prodh,??_InterruptHandlerHigh+11
  7358  000E98  CFF6 F0B4          	movff	tblptrl,??_InterruptHandlerHigh+12
  7359  000E9C  CFF7 F0B5          	movff	tblptrh,??_InterruptHandlerHigh+13
  7360  000EA0  CFF8 F0B6          	movff	tblptru,??_InterruptHandlerHigh+14
  7361  000EA4  CFF5 F0B7          	movff	tablat,??_InterruptHandlerHigh+15
  7362                           
  7363                           ;interrupts.c: 182: if (PIR1bits.SSPIF) {
  7364  000EA8  A69E               	btfss	3998,3,c	;volatile
  7365  000EAA  D003               	goto	i2l4837
  7366                           
  7367                           ;interrupts.c: 184: PIR1bits.SSPIF = 0;
  7368  000EAC  969E               	bcf	3998,3,c	;volatile
  7369                           
  7370                           ;interrupts.c: 191: {
  7371                           ;interrupts.c: 192: i2c_int_handler();
  7372  000EAE  EC63  F000         	call	_i2c_int_handler	;wreg free
  7373  000EB2                     i2l4837:
  7374                           
  7375                           ;interrupts.c: 193: }
  7376                           ;interrupts.c: 195: }
  7377                           ;interrupts.c: 198: if ( PIR1bits.TMR2IF ) {
  7378  000EB2  B29E               	btfsc	3998,1,c	;volatile
  7379                           
  7380                           ;interrupts.c: 200: PIR1bits.TMR2IF = 0;
  7381  000EB4  929E               	bcf	3998,1,c	;volatile
  7382                           
  7383                           ;interrupts.c: 225: }
  7384                           ;interrupts.c: 228: if (INTCONbits.TMR0IF) {
  7385  000EB6  A4F2               	btfss	intcon,2,c	;volatile
  7386  000EB8  D005               	goto	i2l4847
  7387                           
  7388                           ;interrupts.c: 230: INTCONbits.TMR0IF = 0;
  7389  000EBA  94F2               	bcf	intcon,2,c	;volatile
  7390                           
  7391                           ;interrupts.c: 232: timer0_int_handler();
  7392  000EBC  ECC0  F00E         	call	_timer0_int_handler	;wreg free
  7393                           
  7394                           ;interrupts.c: 262: {
  7395                           ;interrupts.c: 263: ConvertADC();
  7396  000EC0  ECDF  F00F         	call	i2_ConvertADC	;wreg free
  7397  000EC4                     i2l4847:
  7398                           
  7399                           ;interrupts.c: 270: }
  7400                           ;interrupts.c: 276: }
  7401                           ;interrupts.c: 281: if(PIR1bits.ADIF == 1)
  7402  000EC4  BC9E               	btfsc	3998,6,c	;volatile
  7403                           
  7404                           ;interrupts.c: 284: PIR1bits.ADIF = 0;
  7405  000EC6  9C9E               	bcf	3998,6,c	;volatile
  7406                           
  7407                           ;interrupts.c: 285: LATDbits.LATD6 = !LATDbits.LATD6;
  7408  000EC8  BC8C               	btfsc	3980,6,c	;volatile
  7409  000ECA  D002               	goto	i2u380_40
  7410  000ECC  0E01               	movlw	1
  7411  000ECE  D001               	goto	i2u380_46
  7412  000ED0                     i2u380_40:
  7413  000ED0  0E00               	movlw	0
  7414  000ED2                     i2u380_46:
  7415  000ED2  0100               	movlb	0	; () banked
  7416  000ED4  6FA8               	movwf	??_InterruptHandlerHigh& (0+255),b
  7417  000ED6  0100               	movlb	0	; () banked
  7418  000ED8  3BA8               	swapf	??_InterruptHandlerHigh& (0+255),f,b
  7419  000EDA  47A8               	rlncf	??_InterruptHandlerHigh& (0+255),f,b
  7420  000EDC  47A8               	rlncf	??_InterruptHandlerHigh& (0+255),f,b
  7421  000EDE  508C               	movf	3980,w,c	;volatile
  7422  000EE0  0100               	movlb	0	; () banked
  7423  000EE2  19A8               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  7424  000EE4  0BBF               	andlw	-65
  7425  000EE6  19A8               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  7426  000EE8  6E8C               	movwf	3980,c	;volatile
  7427                           
  7428                           ; BSR set to: 0
  7429                           ;interrupts.c: 286: int pureADCValue = ReadADC();
  7430  000EEA  ECC8  F00F         	call	_ReadADC	;wreg free
  7431  000EEE  0100               	movlb	0	; () banked
  7432  000EF0  C080  F0B8         	movff	?_ReadADC,InterruptHandlerHigh@pureADCValue
  7433  000EF4  0100               	movlb	0	; () banked
  7434  000EF6  C081  F0B9         	movff	?_ReadADC+1,InterruptHandlerHigh@pureADCValue+1
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;interrupts.c: 287: ADCValue = pureADCValue >> 2;
  7438  000EFA  0100               	movlb	0	; () banked
  7439  000EFC  C0B8  F0A8         	movff	InterruptHandlerHigh@pureADCValue,??_InterruptHandlerHigh
  7440  000F00  0100               	movlb	0	; () banked
  7441  000F02  C0B9  F0A9         	movff	InterruptHandlerHigh@pureADCValue+1,??_InterruptHandlerHigh+1
  7442  000F06  0100               	movlb	0	; () banked
  7443  000F08  35A9               	rlcf	(??_InterruptHandlerHigh+1)& (0+255),w,b
  7444  000F0A  33A9               	rrcf	(??_InterruptHandlerHigh+1)& (0+255),f,b
  7445  000F0C  33A8               	rrcf	??_InterruptHandlerHigh& (0+255),f,b
  7446  000F0E  0100               	movlb	0	; () banked
  7447  000F10  35A9               	rlcf	(??_InterruptHandlerHigh+1)& (0+255),w,b
  7448  000F12  33A9               	rrcf	(??_InterruptHandlerHigh+1)& (0+255),f,b
  7449  000F14  33A8               	rrcf	??_InterruptHandlerHigh& (0+255),f,b
  7450  000F16  0100               	movlb	0	; () banked
  7451  000F18  51A8               	movf	??_InterruptHandlerHigh& (0+255),w,b
  7452  000F1A  6E45               	movwf	_ADCValue,c
  7453                           
  7454                           ; BSR set to: 0
  7455                           ;interrupts.c: 289: semaphore = 1;
  7456  000F1C  0E00               	movlw	0
  7457  000F1E  6E38               	movwf	_semaphore+1,c
  7458  000F20  0E01               	movlw	1
  7459  000F22  6E37               	movwf	_semaphore,c
  7460                           
  7461                           ; BSR set to: 0
  7462                           ;interrupts.c: 290: if(adc_index == 10)
  7463  000F24  502D               	movf	_adc_index,w,c
  7464  000F26  0A0A               	xorlw	10
  7465  000F28  102E               	iorwf	_adc_index+1,w,c
  7466  000F2A  A4D8               	btfss	status,2,c
  7467  000F2C  D00A               	goto	i2l4865
  7468                           
  7469                           ; BSR set to: 0
  7470                           ;interrupts.c: 291: {
  7471                           ;interrupts.c: 293: messages_lost = messages_lost + 8;
  7472  000F2E  0E08               	movlw	8
  7473  000F30  2433               	addwf	_messages_lost,w,c
  7474  000F32  6E33               	movwf	_messages_lost,c
  7475  000F34  0E00               	movlw	0
  7476  000F36  2034               	addwfc	_messages_lost+1,w,c
  7477  000F38  6E34               	movwf	_messages_lost+1,c
  7478                           
  7479                           ; BSR set to: 0
  7480                           ;interrupts.c: 294: adc_index = 1;
  7481  000F3A  0E00               	movlw	0
  7482  000F3C  6E2E               	movwf	_adc_index+1,c
  7483  000F3E  0E01               	movlw	1
  7484  000F40  6E2D               	movwf	_adc_index,c
  7485  000F42                     i2l4865:
  7486                           
  7487                           ; BSR set to: 0
  7488                           ;interrupts.c: 295: }
  7489                           ;interrupts.c: 296: ADCArray[adc_index] = ADCValue;
  7490  000F42  0100               	movlb	0	; () banked
  7491  000F44  0ED4               	movlw	low _ADCArray
  7492  000F46  242D               	addwf	_adc_index,w,c
  7493  000F48  6ED9               	movwf	fsr2l,c
  7494  000F4A  0100               	movlb	0	; () banked
  7495  000F4C  0E00               	movlw	high _ADCArray
  7496  000F4E  202E               	addwfc	_adc_index+1,w,c
  7497  000F50  6EDA               	movwf	fsr2h,c
  7498  000F52  C045  FFDF         	movff	_ADCValue,indf2
  7499                           
  7500                           ; BSR set to: 0
  7501                           ;interrupts.c: 297: adc_index++;
  7502  000F56  4A2D               	infsnz	_adc_index,f,c
  7503  000F58  2A2E               	incf	_adc_index+1,f,c
  7504                           
  7505                           ; BSR set to: 0
  7506                           ;interrupts.c: 298: semaphore = 0;
  7507  000F5A  0E00               	movlw	0
  7508  000F5C  6E38               	movwf	_semaphore+1,c
  7509  000F5E  0E00               	movlw	0
  7510  000F60  6E37               	movwf	_semaphore,c
  7511                           
  7512                           ; BSR set to: 0
  7513  000F62  C0B7  FFF5         	movff	??_InterruptHandlerHigh+15,tablat
  7514  000F66  C0B6  FFF8         	movff	??_InterruptHandlerHigh+14,tblptru
  7515  000F6A  C0B5  FFF7         	movff	??_InterruptHandlerHigh+13,tblptrh
  7516  000F6E  C0B4  FFF6         	movff	??_InterruptHandlerHigh+12,tblptrl
  7517  000F72  C0B3  FFF4         	movff	??_InterruptHandlerHigh+11,prodh
  7518  000F76  C0B2  FFF3         	movff	??_InterruptHandlerHigh+10,prodl
  7519  000F7A  C0B1  FFDA         	movff	??_InterruptHandlerHigh+9,fsr2h
  7520  000F7E  C0B0  FFD9         	movff	??_InterruptHandlerHigh+8,fsr2l
  7521  000F82  C0AF  FFE2         	movff	??_InterruptHandlerHigh+7,fsr1h
  7522  000F86  C0AE  FFE1         	movff	??_InterruptHandlerHigh+6,fsr1l
  7523  000F8A  C0AD  FFEA         	movff	??_InterruptHandlerHigh+5,fsr0h
  7524  000F8E  C0AC  FFE9         	movff	??_InterruptHandlerHigh+4,fsr0l
  7525  000F92  C0AB  FFFB         	movff	??_InterruptHandlerHigh+3,pclatu
  7526  000F96  C0AA  FFFA         	movff	??_InterruptHandlerHigh+2,pclath
  7527  000F9A  0011               	retfie		f
  7528  000F9C                     __end_of_InterruptHandlerHigh:
  7529                           	opt stack 0
  7530                           pclatu	equ	0xFFB
  7531                           pclath	equ	0xFFA
  7532                           tblptru	equ	0xFF8
  7533                           tblptrh	equ	0xFF7
  7534                           tblptrl	equ	0xFF6
  7535                           tablat	equ	0xFF5
  7536                           prodh	equ	0xFF4
  7537                           prodl	equ	0xFF3
  7538                           intcon	equ	0xFF2
  7539                           intcon2	equ	0xFF1
  7540                           postinc0	equ	0xFEE
  7541                           fsr0h	equ	0xFEA
  7542                           fsr0l	equ	0xFE9
  7543                           wreg	equ	0xFE8
  7544                           indf1	equ	0xFE7
  7545                           postdec1	equ	0xFE5
  7546                           fsr1h	equ	0xFE2
  7547                           fsr1l	equ	0xFE1
  7548                           bsr	equ	0xFE0
  7549                           indf2	equ	0xFDF
  7550                           postinc2	equ	0xFDE
  7551                           postdec2	equ	0xFDD
  7552                           fsr2h	equ	0xFDA
  7553                           fsr2l	equ	0xFD9
  7554                           status	equ	0xFD8
  7555                           
  7556 ;; *************** function i2_ConvertADC *****************
  7557 ;; Defined at:
  7558 ;;		line 22 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcconv.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;		None
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;		None
  7563 ;; Return value:  Size  Location     Type
  7564 ;;		None               void
  7565 ;; Registers used:
  7566 ;;		None
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7572 ;;      Params:         0       0       0       0       0
  7573 ;;      Locals:         0       0       0       0       0
  7574 ;;      Temps:          0       0       0       0       0
  7575 ;;      Totals:         0       0       0       0       0
  7576 ;;Total ram usage:        0 bytes
  7577 ;; Hardware stack levels used:    1
  7578 ;; This function calls:
  7579 ;;		Nothing
  7580 ;; This function is called by:
  7581 ;;		_InterruptHandlerHigh
  7582 ;; This function uses a non-reentrant model
  7583 ;;
  7584                           
  7585                           	psect	text46
  7586  001FBE                     __ptext46:
  7587                           	opt stack 0
  7588  001FBE                     i2_ConvertADC:
  7589                           	opt stack 20
  7590                           
  7591                           ; BSR set to: 0
  7592                           ;incstack = 0
  7593  001FBE  82C2               	bsf	4034,1,c	;volatile
  7594  001FC0  0012               	return	
  7595  001FC2                     __end_ofi2_ConvertADC:
  7596                           	opt stack 0
  7597                           pclatu	equ	0xFFB
  7598                           pclath	equ	0xFFA
  7599                           tblptru	equ	0xFF8
  7600                           tblptrh	equ	0xFF7
  7601                           tblptrl	equ	0xFF6
  7602                           tablat	equ	0xFF5
  7603                           prodh	equ	0xFF4
  7604                           prodl	equ	0xFF3
  7605                           intcon	equ	0xFF2
  7606                           intcon2	equ	0xFF1
  7607                           postinc0	equ	0xFEE
  7608                           fsr0h	equ	0xFEA
  7609                           fsr0l	equ	0xFE9
  7610                           wreg	equ	0xFE8
  7611                           indf1	equ	0xFE7
  7612                           postdec1	equ	0xFE5
  7613                           fsr1h	equ	0xFE2
  7614                           fsr1l	equ	0xFE1
  7615                           bsr	equ	0xFE0
  7616                           indf2	equ	0xFDF
  7617                           postinc2	equ	0xFDE
  7618                           postdec2	equ	0xFDD
  7619                           fsr2h	equ	0xFDA
  7620                           fsr2l	equ	0xFD9
  7621                           status	equ	0xFD8
  7622                           
  7623 ;; *************** function _timer0_int_handler *****************
  7624 ;; Defined at:
  7625 ;;		line 17 in file "../src/user_interrupts.c"
  7626 ;; Parameters:    Size  Location     Type
  7627 ;;		None
  7628 ;; Auto vars:     Size  Location     Type
  7629 ;;  msgtype         2    0        int 
  7630 ;;  length          2    0        int 
  7631 ;;  val             2    0        unsigned int 
  7632 ;; Return value:  Size  Location     Type
  7633 ;;		None               void
  7634 ;; Registers used:
  7635 ;;		wreg, status,2, status,0, cstack
  7636 ;; Tracked objects:
  7637 ;;		On entry : 0/0
  7638 ;;		On exit  : 0/0
  7639 ;;		Unchanged: 0/0
  7640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7641 ;;      Params:         0       0       0       0       0
  7642 ;;      Locals:         0       0       0       0       0
  7643 ;;      Temps:          0       1       0       0       0
  7644 ;;      Totals:         0       1       0       0       0
  7645 ;;Total ram usage:        1 bytes
  7646 ;; Hardware stack levels used:    1
  7647 ;; Hardware stack levels required when called:    1
  7648 ;; This function calls:
  7649 ;;		_WriteTimer0
  7650 ;; This function is called by:
  7651 ;;		_InterruptHandlerHigh
  7652 ;; This function uses a non-reentrant model
  7653 ;;
  7654                           
  7655                           	psect	text47
  7656  001D80                     __ptext47:
  7657                           	opt stack 0
  7658  001D80                     _timer0_int_handler:
  7659                           	opt stack 19
  7660                           
  7661                           ;user_interrupts.c: 18: unsigned int val;
  7662                           ;user_interrupts.c: 19: int length, msgtype;
  7663                           ;user_interrupts.c: 20: LATBbits.LATB6 = !LATBbits.LATB6;
  7664                           
  7665                           ;incstack = 0
  7666  001D80  BC8A               	btfsc	3978,6,c	;volatile
  7667  001D82  D002               	goto	i2u293_40
  7668  001D84  0E01               	movlw	1
  7669  001D86  D001               	goto	i2u293_46
  7670  001D88                     i2u293_40:
  7671  001D88  0E00               	movlw	0
  7672  001D8A                     i2u293_46:
  7673  001D8A  0100               	movlb	0	; () banked
  7674  001D8C  6F84               	movwf	??_timer0_int_handler& (0+255),b
  7675  001D8E  0100               	movlb	0	; () banked
  7676  001D90  3B84               	swapf	??_timer0_int_handler& (0+255),f,b
  7677  001D92  4784               	rlncf	??_timer0_int_handler& (0+255),f,b
  7678  001D94  4784               	rlncf	??_timer0_int_handler& (0+255),f,b
  7679  001D96  508A               	movf	3978,w,c	;volatile
  7680  001D98  0100               	movlb	0	; () banked
  7681  001D9A  1984               	xorwf	??_timer0_int_handler& (0+255),w,b
  7682  001D9C  0BBF               	andlw	-65
  7683  001D9E  1984               	xorwf	??_timer0_int_handler& (0+255),w,b
  7684  001DA0  6E8A               	movwf	3978,c	;volatile
  7685                           
  7686                           ; BSR set to: 0
  7687                           ;user_interrupts.c: 29: WriteTimer0(0);
  7688  001DA2  0E00               	movlw	0
  7689  001DA4  0100               	movlb	0	; () banked
  7690  001DA6  0100               	movlb	0	; () banked
  7691  001DA8  6F81               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  7692  001DAA  0E00               	movlw	0
  7693  001DAC  0100               	movlb	0	; () banked
  7694  001DAE  6F80               	movwf	WriteTimer0@timer0& (0+255),b
  7695  001DB0  ECBF  F00F         	call	_WriteTimer0	;wreg free
  7696  001DB4  0012               	return	
  7697  001DB6                     __end_of_timer0_int_handler:
  7698                           	opt stack 0
  7699                           pclatu	equ	0xFFB
  7700                           pclath	equ	0xFFA
  7701                           tblptru	equ	0xFF8
  7702                           tblptrh	equ	0xFF7
  7703                           tblptrl	equ	0xFF6
  7704                           tablat	equ	0xFF5
  7705                           prodh	equ	0xFF4
  7706                           prodl	equ	0xFF3
  7707                           intcon	equ	0xFF2
  7708                           intcon2	equ	0xFF1
  7709                           postinc0	equ	0xFEE
  7710                           fsr0h	equ	0xFEA
  7711                           fsr0l	equ	0xFE9
  7712                           wreg	equ	0xFE8
  7713                           indf1	equ	0xFE7
  7714                           postdec1	equ	0xFE5
  7715                           fsr1h	equ	0xFE2
  7716                           fsr1l	equ	0xFE1
  7717                           bsr	equ	0xFE0
  7718                           indf2	equ	0xFDF
  7719                           postinc2	equ	0xFDE
  7720                           postdec2	equ	0xFDD
  7721                           fsr2h	equ	0xFDA
  7722                           fsr2l	equ	0xFD9
  7723                           status	equ	0xFD8
  7724                           
  7725 ;; *************** function _WriteTimer0 *****************
  7726 ;; Defined at:
  7727 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0write.c"
  7728 ;; Parameters:    Size  Location     Type
  7729 ;;  timer0          2    0[BANK0 ] unsigned int 
  7730 ;; Auto vars:     Size  Location     Type
  7731 ;;  timer           2    2[BANK0 ] struct Timers
  7732 ;; Return value:  Size  Location     Type
  7733 ;;		None               void
  7734 ;; Registers used:
  7735 ;;		None
  7736 ;; Tracked objects:
  7737 ;;		On entry : 0/0
  7738 ;;		On exit  : 0/0
  7739 ;;		Unchanged: 0/0
  7740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7741 ;;      Params:         0       2       0       0       0
  7742 ;;      Locals:         0       2       0       0       0
  7743 ;;      Temps:          0       0       0       0       0
  7744 ;;      Totals:         0       4       0       0       0
  7745 ;;Total ram usage:        4 bytes
  7746 ;; Hardware stack levels used:    1
  7747 ;; This function calls:
  7748 ;;		Nothing
  7749 ;; This function is called by:
  7750 ;;		_timer0_int_handler
  7751 ;; This function uses a non-reentrant model
  7752 ;;
  7753                           
  7754                           	psect	text48
  7755  001F7E                     __ptext48:
  7756                           	opt stack 0
  7757  001F7E                     _WriteTimer0:
  7758                           	opt stack 19
  7759                           
  7760                           ;incstack = 0
  7761  001F7E  C080  F082         	movff	WriteTimer0@timer0,WriteTimer0@timer
  7762  001F82  C081  F083         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  7763  001F86  C083  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  7764  001F8A  C082  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  7765  001F8E  0012               	return	
  7766  001F90                     __end_of_WriteTimer0:
  7767                           	opt stack 0
  7768                           pclatu	equ	0xFFB
  7769                           pclath	equ	0xFFA
  7770                           tblptru	equ	0xFF8
  7771                           tblptrh	equ	0xFF7
  7772                           tblptrl	equ	0xFF6
  7773                           tablat	equ	0xFF5
  7774                           prodh	equ	0xFF4
  7775                           prodl	equ	0xFF3
  7776                           intcon	equ	0xFF2
  7777                           intcon2	equ	0xFF1
  7778                           postinc0	equ	0xFEE
  7779                           fsr0h	equ	0xFEA
  7780                           fsr0l	equ	0xFE9
  7781                           wreg	equ	0xFE8
  7782                           indf1	equ	0xFE7
  7783                           postdec1	equ	0xFE5
  7784                           fsr1h	equ	0xFE2
  7785                           fsr1l	equ	0xFE1
  7786                           bsr	equ	0xFE0
  7787                           indf2	equ	0xFDF
  7788                           postinc2	equ	0xFDE
  7789                           postdec2	equ	0xFDD
  7790                           fsr2h	equ	0xFDA
  7791                           fsr2l	equ	0xFD9
  7792                           status	equ	0xFD8
  7793                           
  7794 ;; *************** function _i2c_int_handler *****************
  7795 ;; Defined at:
  7796 ;;		line 68 in file "../src/my_i2c.c"
  7797 ;; Parameters:    Size  Location     Type
  7798 ;;		None
  7799 ;; Auto vars:     Size  Location     Type
  7800 ;;  msgbuffer       2   29[BANK0 ] PTR unsigned char 
  7801 ;;		 -> ADCArray(10), 
  7802 ;;  length          2   27[BANK0 ] int 
  7803 ;;  error_buf       3   31[BANK0 ] unsigned char [3]
  7804 ;;  data_read       1   39[BANK0 ] unsigned char 
  7805 ;;  msg_ready       1   38[BANK0 ] unsigned char 
  7806 ;;  msg_to_send     1   37[BANK0 ] unsigned char 
  7807 ;;  i2c_data        1   36[BANK0 ] unsigned char 
  7808 ;;  overrun_erro    1   35[BANK0 ] unsigned char 
  7809 ;;  data_written    1   34[BANK0 ] unsigned char 
  7810 ;; Return value:  Size  Location     Type
  7811 ;;		None               void
  7812 ;; Registers used:
  7813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7814 ;; Tracked objects:
  7815 ;;		On entry : 0/0
  7816 ;;		On exit  : 0/0
  7817 ;;		Unchanged: 0/0
  7818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7819 ;;      Params:         0       0       0       0       0
  7820 ;;      Locals:         0      13       0       0       0
  7821 ;;      Temps:          0       1       0       0       0
  7822 ;;      Totals:         0      14       0       0       0
  7823 ;;Total ram usage:       14 bytes
  7824 ;; Hardware stack levels used:    1
  7825 ;; Hardware stack levels required when called:    3
  7826 ;; This function calls:
  7827 ;;		_SensorValues
  7828 ;;		_ToMainHigh_sendmsg
  7829 ;;		_handle_start
  7830 ;;		_start_i2c_slave_reply
  7831 ;; This function is called by:
  7832 ;;		_InterruptHandlerHigh
  7833 ;; This function uses a non-reentrant model
  7834 ;;
  7835                           
  7836                           	psect	text49
  7837  0000C6                     __ptext49:
  7838                           	opt stack 0
  7839  0000C6                     _i2c_int_handler:
  7840                           	opt stack 17
  7841                           
  7842                           ;my_i2c.c: 69: unsigned char i2c_data;
  7843                           ;my_i2c.c: 70: unsigned char data_read = 0;
  7844                           
  7845                           ;incstack = 0
  7846  0000C6  0100               	movlb	0	; () banked
  7847  0000C8  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7848  0000CA  0E00               	movlw	0
  7849  0000CC  0100               	movlb	0	; () banked
  7850  0000CE  0100               	movlb	0	; () banked
  7851  0000D0  6FA7               	movwf	i2c_int_handler@data_read& (0+255),b
  7852  0000D2  0100               	movlb	0	; () banked
  7853  0000D4  519A               	movf	??_i2c_int_handler& (0+255),w,b
  7854                           
  7855                           ;my_i2c.c: 71: unsigned char data_written = 0;
  7856  0000D6  0100               	movlb	0	; () banked
  7857  0000D8  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7858  0000DA  0E00               	movlw	0
  7859  0000DC  0100               	movlb	0	; () banked
  7860  0000DE  0100               	movlb	0	; () banked
  7861  0000E0  6FA2               	movwf	i2c_int_handler@data_written& (0+255),b
  7862  0000E2  0100               	movlb	0	; () banked
  7863  0000E4  519A               	movf	??_i2c_int_handler& (0+255),w,b
  7864                           
  7865                           ;my_i2c.c: 72: unsigned char msg_ready = 0;
  7866  0000E6  0100               	movlb	0	; () banked
  7867  0000E8  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7868  0000EA  0E00               	movlw	0
  7869  0000EC  0100               	movlb	0	; () banked
  7870  0000EE  0100               	movlb	0	; () banked
  7871  0000F0  6FA6               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7872  0000F2  0100               	movlb	0	; () banked
  7873  0000F4  519A               	movf	??_i2c_int_handler& (0+255),w,b
  7874                           
  7875                           ;my_i2c.c: 73: unsigned char msg_to_send = 0;
  7876  0000F6  0100               	movlb	0	; () banked
  7877  0000F8  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7878  0000FA  0E00               	movlw	0
  7879  0000FC  0100               	movlb	0	; () banked
  7880  0000FE  0100               	movlb	0	; () banked
  7881  000100  6FA5               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7882  000102  0100               	movlb	0	; () banked
  7883  000104  519A               	movf	??_i2c_int_handler& (0+255),w,b
  7884                           
  7885                           ;my_i2c.c: 74: unsigned char overrun_error = 0;
  7886  000106  0100               	movlb	0	; () banked
  7887  000108  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7888  00010A  0E00               	movlw	0
  7889  00010C  0100               	movlb	0	; () banked
  7890  00010E  0100               	movlb	0	; () banked
  7891  000110  6FA3               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7892  000112  0100               	movlb	0	; () banked
  7893  000114  519A               	movf	??_i2c_int_handler& (0+255),w,b
  7894                           
  7895                           ; BSR set to: 0
  7896                           ;my_i2c.c: 75: unsigned char error_buf[3];
  7897                           ;my_i2c.c: 78: if (SSPCON1bits.SSPOV == 1) {
  7898  000116  ACC6               	btfss	4038,6,c	;volatile
  7899  000118  D020               	goto	i2l4255
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;my_i2c.c: 79: SSPCON1bits.SSPOV = 0;
  7903  00011A  9CC6               	bcf	4038,6,c	;volatile
  7904                           
  7905                           ; BSR set to: 0
  7906                           ;my_i2c.c: 83: ic_ptr->status = 0x5;
  7907  00011C  EE20 F00C          	lfsr	2,12
  7908  000120  5061               	movf	_ic_ptr,w,c
  7909  000122  26D9               	addwf	fsr2l,f,c
  7910  000124  5062               	movf	_ic_ptr+1,w,c
  7911  000126  22DA               	addwfc	fsr2h,f,c
  7912  000128  0E05               	movlw	5
  7913  00012A  6EDF               	movwf	indf2,c
  7914                           
  7915                           ; BSR set to: 0
  7916                           ;my_i2c.c: 84: overrun_error = 1;
  7917  00012C  0100               	movlb	0	; () banked
  7918  00012E  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7919  000130  0E01               	movlw	1
  7920  000132  0100               	movlb	0	; () banked
  7921  000134  0100               	movlb	0	; () banked
  7922  000136  6FA3               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7923  000138  0100               	movlb	0	; () banked
  7924  00013A  519A               	movf	??_i2c_int_handler& (0+255),w,b
  7925                           
  7926                           ; BSR set to: 0
  7927                           ;my_i2c.c: 85: ic_ptr->error_count++;
  7928  00013C  EE20 F00E          	lfsr	2,14
  7929  000140  5061               	movf	_ic_ptr,w,c
  7930  000142  26D9               	addwf	fsr2l,f,c
  7931  000144  5062               	movf	_ic_ptr+1,w,c
  7932  000146  22DA               	addwfc	fsr2h,f,c
  7933  000148  2ADF               	incf	indf2,f,c
  7934                           
  7935                           ; BSR set to: 0
  7936                           ;my_i2c.c: 86: ic_ptr->error_code = 0x4;
  7937  00014A  EE20 F00D          	lfsr	2,13
  7938  00014E  5061               	movf	_ic_ptr,w,c
  7939  000150  26D9               	addwf	fsr2l,f,c
  7940  000152  5062               	movf	_ic_ptr+1,w,c
  7941  000154  22DA               	addwfc	fsr2h,f,c
  7942  000156  0E04               	movlw	4
  7943  000158  6EDF               	movwf	indf2,c
  7944  00015A                     i2l4255:
  7945                           
  7946                           ; BSR set to: 0
  7947                           ;my_i2c.c: 87: }
  7948                           ;my_i2c.c: 89: if (SSPSTATbits.BF == 1) {
  7949  00015A  A0C7               	btfss	4039,0,c	;volatile
  7950  00015C  D00A               	goto	i2l4261
  7951                           
  7952                           ; BSR set to: 0
  7953                           ;my_i2c.c: 90: i2c_data = SSPBUF;
  7954  00015E  CFC9 F0A4          	movff	4041,i2c_int_handler@i2c_data	;volatile
  7955                           
  7956                           ; BSR set to: 0
  7957                           ;my_i2c.c: 91: data_read = 1;
  7958  000162  0100               	movlb	0	; () banked
  7959  000164  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7960  000166  0E01               	movlw	1
  7961  000168  0100               	movlb	0	; () banked
  7962  00016A  0100               	movlb	0	; () banked
  7963  00016C  6FA7               	movwf	i2c_int_handler@data_read& (0+255),b
  7964  00016E  0100               	movlb	0	; () banked
  7965  000170  519A               	movf	??_i2c_int_handler& (0+255),w,b
  7966  000172                     i2l4261:
  7967                           
  7968                           ; BSR set to: 0
  7969                           ;my_i2c.c: 92: }
  7970                           ;my_i2c.c: 97: if (!overrun_error) {
  7971  000172  0100               	movlb	0	; () banked
  7972  000174  0100               	movlb	0	; () banked
  7973  000176  67A3               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  7974  000178  D174               	goto	i2l163
  7975  00017A  D160               	goto	i2l4349
  7976  00017C                     i2l165:
  7977                           
  7978                           ; BSR set to: 0
  7979                           ;my_i2c.c: 100: {
  7980                           ;my_i2c.c: 102: if (SSPSTATbits.S == 1) {
  7981  00017C  A6C7               	btfss	4039,3,c	;volatile
  7982  00017E  D171               	goto	i2l163
  7983                           
  7984                           ; BSR set to: 0
  7985                           ;my_i2c.c: 103: handle_start(data_read);
  7986  000180  0100               	movlb	0	; () banked
  7987  000182  0100               	movlb	0	; () banked
  7988  000184  51A7               	movf	i2c_int_handler@data_read& (0+255),w,b
  7989  000186  ECEB  F009         	call	_handle_start
  7990                           
  7991                           ;my_i2c.c: 105: if (ic_ptr->status == 0x8) {
  7992  00018A  EE20 F00C          	lfsr	2,12
  7993  00018E  5061               	movf	_ic_ptr,w,c
  7994  000190  26D9               	addwf	fsr2l,f,c
  7995  000192  5062               	movf	_ic_ptr+1,w,c
  7996  000194  22DA               	addwfc	fsr2h,f,c
  7997  000196  0E08               	movlw	8
  7998  000198  62DF               	cpfseq	indf2,c
  7999  00019A  D163               	goto	i2l163
  8000                           
  8001                           ;my_i2c.c: 106: data_read = 0;
  8002  00019C  0100               	movlb	0	; () banked
  8003  00019E  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8004  0001A0  0E00               	movlw	0
  8005  0001A2  0100               	movlb	0	; () banked
  8006  0001A4  0100               	movlb	0	; () banked
  8007  0001A6  6FA7               	movwf	i2c_int_handler@data_read& (0+255),b
  8008  0001A8  0100               	movlb	0	; () banked
  8009  0001AA  519A               	movf	??_i2c_int_handler& (0+255),w,b
  8010                           
  8011                           ;my_i2c.c: 107: msg_to_send = 1;
  8012  0001AC  0100               	movlb	0	; () banked
  8013  0001AE  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8014  0001B0  0E01               	movlw	1
  8015  0001B2  0100               	movlb	0	; () banked
  8016  0001B4  0100               	movlb	0	; () banked
  8017  0001B6  6FA5               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8018  0001B8  D136               	goto	L6
  8019  0001BA                     i2l169:
  8020                           
  8021                           ; BSR set to: 0
  8022                           ;my_i2c.c: 113: {
  8023                           ;my_i2c.c: 115: if (SSPSTATbits.P == 1) {
  8024  0001BA  A8C7               	btfss	4039,4,c	;volatile
  8025  0001BC  D027               	goto	i2l4281
  8026                           
  8027                           ; BSR set to: 0
  8028                           ;my_i2c.c: 118: ic_ptr->event_count++;
  8029  0001BE  EE20 F00B          	lfsr	2,11
  8030  0001C2  5061               	movf	_ic_ptr,w,c
  8031  0001C4  26D9               	addwf	fsr2l,f,c
  8032  0001C6  5062               	movf	_ic_ptr+1,w,c
  8033  0001C8  22DA               	addwfc	fsr2h,f,c
  8034  0001CA  2ADF               	incf	indf2,f,c
  8035                           
  8036                           ; BSR set to: 0
  8037                           ;my_i2c.c: 119: if (data_read) {
  8038  0001CC  0100               	movlb	0	; () banked
  8039  0001CE  0100               	movlb	0	; () banked
  8040  0001D0  51A7               	movf	i2c_int_handler@data_read& (0+255),w,b
  8041  0001D2  B4D8               	btfsc	status,2,c
  8042  0001D4  D12B               	goto	L8
  8043                           
  8044                           ; BSR set to: 0
  8045                           ;my_i2c.c: 120: if (SSPSTATbits.D_A == 0) {
  8046  0001D6  BAC7               	btfsc	4039,5,c	;volatile
  8047  0001D8  D009               	goto	i2l4279
  8048                           
  8049                           ; BSR set to: 0
  8050                           ;my_i2c.c: 121: msg_ready = 1;
  8051  0001DA  0100               	movlb	0	; () banked
  8052  0001DC  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8053  0001DE  0E01               	movlw	1
  8054  0001E0  0100               	movlb	0	; () banked
  8055  0001E2  0100               	movlb	0	; () banked
  8056  0001E4  6FA6               	movwf	i2c_int_handler@msg_ready& (0+255),b
  8057  0001E6  0100               	movlb	0	; () banked
  8058  0001E8  519A               	movf	??_i2c_int_handler& (0+255),w,b
  8059                           
  8060                           ;my_i2c.c: 122: } else {
  8061  0001EA  D120               	goto	L8
  8062  0001EC                     i2l4279:
  8063                           
  8064                           ; BSR set to: 0
  8065                           ;my_i2c.c: 123: ic_ptr->error_count++;
  8066  0001EC  EE20 F00E          	lfsr	2,14
  8067  0001F0  5061               	movf	_ic_ptr,w,c
  8068  0001F2  26D9               	addwf	fsr2l,f,c
  8069  0001F4  5062               	movf	_ic_ptr+1,w,c
  8070  0001F6  22DA               	addwfc	fsr2h,f,c
  8071  0001F8  2ADF               	incf	indf2,f,c
  8072                           
  8073                           ;my_i2c.c: 124: ic_ptr->error_code = 0x6;
  8074  0001FA  EE20 F00D          	lfsr	2,13
  8075  0001FE  5061               	movf	_ic_ptr,w,c
  8076  000200  26D9               	addwf	fsr2l,f,c
  8077  000202  5062               	movf	_ic_ptr+1,w,c
  8078  000204  22DA               	addwfc	fsr2h,f,c
  8079  000206  0E06               	movlw	6
  8080  000208  6EDF               	movwf	indf2,c
  8081                           
  8082                           ; BSR set to: 0
  8083  00020A  D110               	goto	L8
  8084  00020C                     i2l4281:
  8085                           
  8086                           ; BSR set to: 0
  8087  00020C  0100               	movlb	0	; () banked
  8088  00020E  0100               	movlb	0	; () banked
  8089  000210  51A7               	movf	i2c_int_handler@data_read& (0+255),w,b
  8090  000212  B4D8               	btfsc	status,2,c
  8091  000214  D126               	goto	i2l163
  8092                           
  8093                           ; BSR set to: 0
  8094                           ;my_i2c.c: 129: ic_ptr->event_count++;
  8095  000216  EE20 F00B          	lfsr	2,11
  8096  00021A  5061               	movf	_ic_ptr,w,c
  8097  00021C  26D9               	addwf	fsr2l,f,c
  8098  00021E  5062               	movf	_ic_ptr+1,w,c
  8099  000220  22DA               	addwfc	fsr2h,f,c
  8100  000222  2ADF               	incf	indf2,f,c
  8101                           
  8102                           ; BSR set to: 0
  8103                           ;my_i2c.c: 130: if (SSPSTATbits.D_A == 0) {
  8104  000224  BAC7               	btfsc	4039,5,c	;volatile
  8105  000226  D013               	goto	i2l4297
  8106                           
  8107                           ; BSR set to: 0
  8108                           ;my_i2c.c: 131: if (SSPSTATbits.R_W == 0) {
  8109  000228  B4C7               	btfsc	4039,2,c	;volatile
  8110  00022A  D008               	goto	i2l4291
  8111                           
  8112                           ; BSR set to: 0
  8113                           ;my_i2c.c: 132: ic_ptr->status = 0x7;
  8114  00022C  EE20 F00C          	lfsr	2,12
  8115  000230  5061               	movf	_ic_ptr,w,c
  8116  000232  26D9               	addwf	fsr2l,f,c
  8117  000234  5062               	movf	_ic_ptr+1,w,c
  8118  000236  22DA               	addwfc	fsr2h,f,c
  8119  000238  0E07               	movlw	7
  8120  00023A  D05A               	goto	L5
  8121  00023C                     i2l4291:
  8122                           
  8123                           ; BSR set to: 0
  8124                           ;my_i2c.c: 134: ic_ptr->status = 0x8;
  8125  00023C  EE20 F00C          	lfsr	2,12
  8126  000240  5061               	movf	_ic_ptr,w,c
  8127  000242  26D9               	addwf	fsr2l,f,c
  8128  000244  5062               	movf	_ic_ptr+1,w,c
  8129  000246  22DA               	addwfc	fsr2h,f,c
  8130  000248  0E08               	movlw	8
  8131  00024A  6EDF               	movwf	indf2,c
  8132  00024C  D0DE               	goto	L9
  8133  00024E                     i2l4297:
  8134                           
  8135                           ; BSR set to: 0
  8136                           ;my_i2c.c: 140: ic_ptr->error_count++;
  8137  00024E  EE20 F00E          	lfsr	2,14
  8138  000252  5061               	movf	_ic_ptr,w,c
  8139  000254  26D9               	addwf	fsr2l,f,c
  8140  000256  5062               	movf	_ic_ptr+1,w,c
  8141  000258  22DA               	addwfc	fsr2h,f,c
  8142  00025A  2ADF               	incf	indf2,f,c
  8143                           
  8144                           ;my_i2c.c: 141: ic_ptr->status = 0x5;
  8145  00025C  EE20 F00C          	lfsr	2,12
  8146  000260  5061               	movf	_ic_ptr,w,c
  8147  000262  26D9               	addwf	fsr2l,f,c
  8148  000264  5062               	movf	_ic_ptr+1,w,c
  8149  000266  22DA               	addwfc	fsr2h,f,c
  8150  000268  0E05               	movlw	5
  8151  00026A  6EDF               	movwf	indf2,c
  8152                           
  8153                           ;my_i2c.c: 142: ic_ptr->error_code = 0x6;
  8154  00026C  EE20 F00D          	lfsr	2,13
  8155  000270  5061               	movf	_ic_ptr,w,c
  8156  000272  26D9               	addwf	fsr2l,f,c
  8157  000274  5062               	movf	_ic_ptr+1,w,c
  8158  000276  22DA               	addwfc	fsr2h,f,c
  8159  000278  0E06               	movlw	6
  8160  00027A  D03A               	goto	L5
  8161  00027C                     i2l4299:
  8162                           
  8163                           ; BSR set to: 0
  8164                           ;my_i2c.c: 148: {
  8165                           ;my_i2c.c: 149: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  8166  00027C  EE20 F01A          	lfsr	2,26
  8167  000280  5061               	movf	_ic_ptr,w,c
  8168  000282  26D9               	addwf	fsr2l,f,c
  8169  000284  5062               	movf	_ic_ptr+1,w,c
  8170  000286  22DA               	addwfc	fsr2h,f,c
  8171  000288  50DF               	movf	indf2,w,c
  8172  00028A  0100               	movlb	0	; () banked
  8173  00028C  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8174  00028E  EE20 F019          	lfsr	2,25
  8175  000292  5061               	movf	_ic_ptr,w,c
  8176  000294  26D9               	addwf	fsr2l,f,c
  8177  000296  5062               	movf	_ic_ptr+1,w,c
  8178  000298  22DA               	addwfc	fsr2h,f,c
  8179  00029A  50DF               	movf	indf2,w,c
  8180  00029C  0100               	movlb	0	; () banked
  8181  00029E  5D9A               	subwf	??_i2c_int_handler& (0+255),w,b
  8182  0002A0  B0D8               	btfsc	status,0,c
  8183  0002A2  D0C4               	goto	L8
  8184                           
  8185                           ; BSR set to: 0
  8186                           ;my_i2c.c: 150: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  8187  0002A4  EE20 F01A          	lfsr	2,26
  8188  0002A8  5061               	movf	_ic_ptr,w,c
  8189  0002AA  26D9               	addwf	fsr2l,f,c
  8190  0002AC  5062               	movf	_ic_ptr+1,w,c
  8191  0002AE  22DA               	addwfc	fsr2h,f,c
  8192  0002B0  50DF               	movf	indf2,w,c
  8193  0002B2  0100               	movlb	0	; () banked
  8194  0002B4  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8195  0002B6  0100               	movlb	0	; () banked
  8196  0002B8  519A               	movf	??_i2c_int_handler& (0+255),w,b
  8197  0002BA  0D01               	mullw	1
  8198  0002BC  0E0F               	movlw	15
  8199  0002BE  26F3               	addwf	prodl,f,c
  8200  0002C0  0E00               	movlw	0
  8201  0002C2  22F4               	addwfc	prodh,f,c
  8202  0002C4  50F3               	movf	prodl,w,c
  8203  0002C6  2461               	addwf	_ic_ptr,w,c
  8204  0002C8  6ED9               	movwf	fsr2l,c
  8205  0002CA  50F4               	movf	prodh,w,c
  8206  0002CC  2062               	addwfc	_ic_ptr+1,w,c
  8207  0002CE  6EDA               	movwf	fsr2h,c
  8208  0002D0  50DF               	movf	indf2,w,c
  8209  0002D2  6EC9               	movwf	4041,c	;volatile
  8210                           
  8211                           ; BSR set to: 0
  8212                           ;my_i2c.c: 151: ic_ptr->outbufind++;
  8213  0002D4  EE20 F01A          	lfsr	2,26
  8214  0002D8  5061               	movf	_ic_ptr,w,c
  8215  0002DA  26D9               	addwf	fsr2l,f,c
  8216  0002DC  5062               	movf	_ic_ptr+1,w,c
  8217  0002DE  22DA               	addwfc	fsr2h,f,c
  8218  0002E0  2ADF               	incf	indf2,f,c
  8219                           
  8220                           ; BSR set to: 0
  8221                           ;my_i2c.c: 152: data_written = 1;
  8222  0002E2  0100               	movlb	0	; () banked
  8223  0002E4  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8224  0002E6  0E01               	movlw	1
  8225  0002E8  0100               	movlb	0	; () banked
  8226  0002EA  0100               	movlb	0	; () banked
  8227  0002EC  6FA2               	movwf	i2c_int_handler@data_written& (0+255),b
  8228  0002EE  D09B               	goto	L6
  8229  0002F0                     L5:
  8230  0002F0  6EDF               	movwf	indf2,c
  8231  0002F2  D0B7               	goto	i2l163
  8232  0002F4                     i2l183:
  8233                           
  8234                           ; BSR set to: 0
  8235                           ;my_i2c.c: 160: {
  8236                           ;my_i2c.c: 162: if (SSPSTATbits.P == 1) {
  8237  0002F4  A8C7               	btfss	4039,4,c	;volatile
  8238  0002F6  D04C               	goto	i2l4327
  8239                           
  8240                           ; BSR set to: 0
  8241                           ;my_i2c.c: 164: ic_ptr->event_count++;
  8242  0002F8  EE20 F00B          	lfsr	2,11
  8243  0002FC  5061               	movf	_ic_ptr,w,c
  8244  0002FE  26D9               	addwf	fsr2l,f,c
  8245  000300  5062               	movf	_ic_ptr+1,w,c
  8246  000302  22DA               	addwfc	fsr2h,f,c
  8247  000304  2ADF               	incf	indf2,f,c
  8248                           
  8249                           ; BSR set to: 0
  8250                           ;my_i2c.c: 165: if (data_read) {
  8251  000306  0100               	movlb	0	; () banked
  8252  000308  0100               	movlb	0	; () banked
  8253  00030A  51A7               	movf	i2c_int_handler@data_read& (0+255),w,b
  8254  00030C  B4D8               	btfsc	status,2,c
  8255  00030E  D037               	goto	i2l4323
  8256                           
  8257                           ; BSR set to: 0
  8258                           ;my_i2c.c: 166: if (SSPSTATbits.D_A == 1) {
  8259  000310  AAC7               	btfss	4039,5,c	;volatile
  8260  000312  D01D               	goto	i2l4321
  8261                           
  8262                           ; BSR set to: 0
  8263                           ;my_i2c.c: 167: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  8264  000314  EE20 F00A          	lfsr	2,10
  8265  000318  5061               	movf	_ic_ptr,w,c
  8266  00031A  26D9               	addwf	fsr2l,f,c
  8267  00031C  5062               	movf	_ic_ptr+1,w,c
  8268  00031E  22DA               	addwfc	fsr2h,f,c
  8269  000320  50DF               	movf	indf2,w,c
  8270  000322  0100               	movlb	0	; () banked
  8271  000324  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8272  000326  0100               	movlb	0	; () banked
  8273  000328  519A               	movf	??_i2c_int_handler& (0+255),w,b
  8274  00032A  0D01               	mullw	1
  8275  00032C  50F3               	movf	prodl,w,c
  8276  00032E  2461               	addwf	_ic_ptr,w,c
  8277  000330  6ED9               	movwf	fsr2l,c
  8278  000332  50F4               	movf	prodh,w,c
  8279  000334  2062               	addwfc	_ic_ptr+1,w,c
  8280  000336  6EDA               	movwf	fsr2h,c
  8281  000338  0100               	movlb	0	; () banked
  8282  00033A  C0A4  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  8283                           
  8284                           ; BSR set to: 0
  8285                           ;my_i2c.c: 168: ic_ptr->buflen++;
  8286  00033E  EE20 F00A          	lfsr	2,10
  8287  000342  5061               	movf	_ic_ptr,w,c
  8288  000344  26D9               	addwf	fsr2l,f,c
  8289  000346  5062               	movf	_ic_ptr+1,w,c
  8290  000348  22DA               	addwfc	fsr2h,f,c
  8291  00034A  2ADF               	incf	indf2,f,c
  8292  00034C  D018               	goto	i2l4323
  8293  00034E                     i2l4321:
  8294                           
  8295                           ; BSR set to: 0
  8296                           ;my_i2c.c: 171: ic_ptr->error_count++;
  8297  00034E  EE20 F00E          	lfsr	2,14
  8298  000352  5061               	movf	_ic_ptr,w,c
  8299  000354  26D9               	addwf	fsr2l,f,c
  8300  000356  5062               	movf	_ic_ptr+1,w,c
  8301  000358  22DA               	addwfc	fsr2h,f,c
  8302  00035A  2ADF               	incf	indf2,f,c
  8303                           
  8304                           ;my_i2c.c: 172: ic_ptr->error_code = 0x6;
  8305  00035C  EE20 F00D          	lfsr	2,13
  8306  000360  5061               	movf	_ic_ptr,w,c
  8307  000362  26D9               	addwf	fsr2l,f,c
  8308  000364  5062               	movf	_ic_ptr+1,w,c
  8309  000366  22DA               	addwfc	fsr2h,f,c
  8310  000368  0E06               	movlw	6
  8311  00036A  6EDF               	movwf	indf2,c
  8312                           
  8313                           ;my_i2c.c: 173: ic_ptr->status = 0x5;
  8314  00036C  EE20 F00C          	lfsr	2,12
  8315  000370  5061               	movf	_ic_ptr,w,c
  8316  000372  26D9               	addwf	fsr2l,f,c
  8317  000374  5062               	movf	_ic_ptr+1,w,c
  8318  000376  22DA               	addwfc	fsr2h,f,c
  8319  000378  0E05               	movlw	5
  8320  00037A  6EDF               	movwf	indf2,c
  8321  00037C  D057               	goto	L8
  8322  00037E                     i2l4323:
  8323                           
  8324                           ; BSR set to: 0
  8325                           ;my_i2c.c: 176: msg_ready = 1;
  8326  00037E  0100               	movlb	0	; () banked
  8327  000380  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8328  000382  0E01               	movlw	1
  8329  000384  0100               	movlb	0	; () banked
  8330  000386  0100               	movlb	0	; () banked
  8331  000388  6FA6               	movwf	i2c_int_handler@msg_ready& (0+255),b
  8332  00038A  0100               	movlb	0	; () banked
  8333  00038C  519A               	movf	??_i2c_int_handler& (0+255),w,b
  8334                           
  8335                           ; BSR set to: 0
  8336  00038E  D04E               	goto	L8
  8337  000390                     i2l4327:
  8338                           
  8339                           ; BSR set to: 0
  8340  000390  0100               	movlb	0	; () banked
  8341  000392  0100               	movlb	0	; () banked
  8342  000394  51A7               	movf	i2c_int_handler@data_read& (0+255),w,b
  8343  000396  B4D8               	btfsc	status,2,c
  8344  000398  D064               	goto	i2l163
  8345                           
  8346                           ; BSR set to: 0
  8347                           ;my_i2c.c: 180: ic_ptr->event_count++;
  8348  00039A  EE20 F00B          	lfsr	2,11
  8349  00039E  5061               	movf	_ic_ptr,w,c
  8350  0003A0  26D9               	addwf	fsr2l,f,c
  8351  0003A2  5062               	movf	_ic_ptr+1,w,c
  8352  0003A4  22DA               	addwfc	fsr2h,f,c
  8353  0003A6  2ADF               	incf	indf2,f,c
  8354                           
  8355                           ; BSR set to: 0
  8356                           ;my_i2c.c: 181: if (SSPSTATbits.D_A == 1) {
  8357  0003A8  AAC7               	btfss	4039,5,c	;volatile
  8358  0003AA  D01D               	goto	i2l191
  8359                           
  8360                           ; BSR set to: 0
  8361                           ;my_i2c.c: 182: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  8362  0003AC  EE20 F00A          	lfsr	2,10
  8363  0003B0  5061               	movf	_ic_ptr,w,c
  8364  0003B2  26D9               	addwf	fsr2l,f,c
  8365  0003B4  5062               	movf	_ic_ptr+1,w,c
  8366  0003B6  22DA               	addwfc	fsr2h,f,c
  8367  0003B8  50DF               	movf	indf2,w,c
  8368  0003BA  0100               	movlb	0	; () banked
  8369  0003BC  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8370  0003BE  0100               	movlb	0	; () banked
  8371  0003C0  519A               	movf	??_i2c_int_handler& (0+255),w,b
  8372  0003C2  0D01               	mullw	1
  8373  0003C4  50F3               	movf	prodl,w,c
  8374  0003C6  2461               	addwf	_ic_ptr,w,c
  8375  0003C8  6ED9               	movwf	fsr2l,c
  8376  0003CA  50F4               	movf	prodh,w,c
  8377  0003CC  2062               	addwfc	_ic_ptr+1,w,c
  8378  0003CE  6EDA               	movwf	fsr2h,c
  8379  0003D0  0100               	movlb	0	; () banked
  8380  0003D2  C0A4  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  8381                           
  8382                           ; BSR set to: 0
  8383                           ;my_i2c.c: 183: ic_ptr->buflen++;
  8384  0003D6  EE20 F00A          	lfsr	2,10
  8385  0003DA  5061               	movf	_ic_ptr,w,c
  8386  0003DC  26D9               	addwf	fsr2l,f,c
  8387  0003DE  5062               	movf	_ic_ptr+1,w,c
  8388  0003E0  22DA               	addwfc	fsr2h,f,c
  8389  0003E2  2ADF               	incf	indf2,f,c
  8390                           
  8391                           ;my_i2c.c: 184: } else {
  8392  0003E4  D03E               	goto	i2l163
  8393  0003E6                     i2l191:
  8394                           
  8395                           ; BSR set to: 0
  8396                           ;my_i2c.c: 185: if (SSPSTATbits.R_W == 1) {
  8397  0003E6  A4C7               	btfss	4039,2,c	;volatile
  8398  0003E8  D701               	goto	i2l4279
  8399                           
  8400                           ; BSR set to: 0
  8401                           ;my_i2c.c: 186: ic_ptr->status = 0x8;
  8402  0003EA  EE20 F00C          	lfsr	2,12
  8403  0003EE  5061               	movf	_ic_ptr,w,c
  8404  0003F0  26D9               	addwf	fsr2l,f,c
  8405  0003F2  5062               	movf	_ic_ptr+1,w,c
  8406  0003F4  22DA               	addwfc	fsr2h,f,c
  8407  0003F6  0E08               	movlw	8
  8408  0003F8  6EDF               	movwf	indf2,c
  8409                           
  8410                           ; BSR set to: 0
  8411                           ;my_i2c.c: 187: msg_ready = 1;
  8412  0003FA  0100               	movlb	0	; () banked
  8413  0003FC  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8414  0003FE  0E01               	movlw	1
  8415  000400  0100               	movlb	0	; () banked
  8416  000402  0100               	movlb	0	; () banked
  8417  000404  6FA6               	movwf	i2c_int_handler@msg_ready& (0+255),b
  8418  000406  0100               	movlb	0	; () banked
  8419  000408  519A               	movf	??_i2c_int_handler& (0+255),w,b
  8420  00040A                     L9:
  8421                           
  8422                           ; BSR set to: 0
  8423                           ;my_i2c.c: 188: msg_to_send = 1;
  8424  00040A  0100               	movlb	0	; () banked
  8425  00040C  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8426  00040E  0E01               	movlw	1
  8427  000410  0100               	movlb	0	; () banked
  8428  000412  0100               	movlb	0	; () banked
  8429  000414  6FA5               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8430  000416  0100               	movlb	0	; () banked
  8431  000418  519A               	movf	??_i2c_int_handler& (0+255),w,b
  8432                           
  8433                           ; BSR set to: 0
  8434                           ;my_i2c.c: 190: data_read = 0;
  8435  00041A  0100               	movlb	0	; () banked
  8436  00041C  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8437  00041E  0E00               	movlw	0
  8438  000420  0100               	movlb	0	; () banked
  8439  000422  0100               	movlb	0	; () banked
  8440  000424  6FA7               	movwf	i2c_int_handler@data_read& (0+255),b
  8441  000426                     L6:
  8442  000426  0100               	movlb	0	; () banked
  8443  000428  519A               	movf	??_i2c_int_handler& (0+255),w,b
  8444                           
  8445                           ;my_i2c.c: 191: } else {
  8446  00042A  D01B               	goto	i2l163
  8447  00042C                     L8:
  8448                           
  8449                           ;my_i2c.c: 194: ic_ptr->status = 0x5;
  8450  00042C  EE20 F00C          	lfsr	2,12
  8451  000430  5061               	movf	_ic_ptr,w,c
  8452  000432  26D9               	addwf	fsr2l,f,c
  8453  000434  5062               	movf	_ic_ptr+1,w,c
  8454  000436  22DA               	addwfc	fsr2h,f,c
  8455  000438  0E05               	movlw	5
  8456  00043A  D75A               	goto	L5
  8457  00043C                     i2l4349:
  8458                           
  8459                           ; BSR set to: 0
  8460  00043C  EE20 F00C          	lfsr	2,12
  8461  000440  5061               	movf	_ic_ptr,w,c
  8462  000442  26D9               	addwf	fsr2l,f,c
  8463  000444  5062               	movf	_ic_ptr+1,w,c
  8464  000446  22DA               	addwfc	fsr2h,f,c
  8465  000448  50DF               	movf	indf2,w,c
  8466                           
  8467                           ; Switch size 1, requested type "space"
  8468                           ; Number of cases is 4, Range of values is 5 to 8
  8469                           ; switch strategies available:
  8470                           ; Name         Instructions Cycles
  8471                           ; simple_byte           13     7 (average)
  8472                           ;	Chosen strategy is simple_byte
  8473  00044A  0A05               	xorlw	5	; case 5
  8474  00044C  B4D8               	btfsc	status,2,c
  8475  00044E  D696               	goto	i2l165
  8476  000450  0A03               	xorlw	3	; case 6
  8477  000452  B4D8               	btfsc	status,2,c
  8478  000454  D6B2               	goto	i2l169
  8479  000456  0A01               	xorlw	1	; case 7
  8480  000458  B4D8               	btfsc	status,2,c
  8481  00045A  D74C               	goto	i2l183
  8482  00045C  0A0F               	xorlw	15	; case 8
  8483  00045E  B4D8               	btfsc	status,2,c
  8484  000460  D70D               	goto	i2l4299
  8485  000462                     i2l163:
  8486                           
  8487                           ;my_i2c.c: 201: }
  8488                           ;my_i2c.c: 204: if (data_read || data_written) {
  8489  000462  0100               	movlb	0	; () banked
  8490  000464  0100               	movlb	0	; () banked
  8491  000466  67A7               	tstfsz	i2c_int_handler@data_read& (0+255),b
  8492  000468  D005               	goto	i2l197
  8493                           
  8494                           ; BSR set to: 0
  8495  00046A  0100               	movlb	0	; () banked
  8496  00046C  0100               	movlb	0	; () banked
  8497  00046E  51A2               	movf	i2c_int_handler@data_written& (0+255),w,b
  8498  000470  B4D8               	btfsc	status,2,c
  8499  000472  D002               	goto	i2l4355
  8500  000474                     i2l197:
  8501                           
  8502                           ; BSR set to: 0
  8503                           ;my_i2c.c: 206: if (SSPCON1bits.CKP == 0) {
  8504  000474  A8C6               	btfss	4038,4,c	;volatile
  8505                           
  8506                           ; BSR set to: 0
  8507                           ;my_i2c.c: 207: SSPCON1bits.CKP = 1;
  8508  000476  88C6               	bsf	4038,4,c	;volatile
  8509  000478                     i2l4355:
  8510                           
  8511                           ; BSR set to: 0
  8512                           ;my_i2c.c: 208: }
  8513                           ;my_i2c.c: 209: }
  8514                           ;my_i2c.c: 212: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  8515  000478  EE20 F00A          	lfsr	2,10
  8516  00047C  5061               	movf	_ic_ptr,w,c
  8517  00047E  26D9               	addwf	fsr2l,f,c
  8518  000480  5062               	movf	_ic_ptr+1,w,c
  8519  000482  22DA               	addwfc	fsr2h,f,c
  8520  000484  0E08               	movlw	8
  8521  000486  64DF               	cpfsgt	indf2,c
  8522  000488  D01B               	goto	i2l4361
  8523                           
  8524                           ; BSR set to: 0
  8525  00048A  0100               	movlb	0	; () banked
  8526  00048C  0100               	movlb	0	; () banked
  8527  00048E  67A6               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  8528  000490  D017               	goto	i2l4361
  8529                           
  8530                           ; BSR set to: 0
  8531                           ;my_i2c.c: 213: ic_ptr->status = 0x5;
  8532  000492  EE20 F00C          	lfsr	2,12
  8533  000496  5061               	movf	_ic_ptr,w,c
  8534  000498  26D9               	addwf	fsr2l,f,c
  8535  00049A  5062               	movf	_ic_ptr+1,w,c
  8536  00049C  22DA               	addwfc	fsr2h,f,c
  8537  00049E  0E05               	movlw	5
  8538  0004A0  6EDF               	movwf	indf2,c
  8539                           
  8540                           ;my_i2c.c: 214: ic_ptr->error_count++;
  8541  0004A2  EE20 F00E          	lfsr	2,14
  8542  0004A6  5061               	movf	_ic_ptr,w,c
  8543  0004A8  26D9               	addwf	fsr2l,f,c
  8544  0004AA  5062               	movf	_ic_ptr+1,w,c
  8545  0004AC  22DA               	addwfc	fsr2h,f,c
  8546  0004AE  2ADF               	incf	indf2,f,c
  8547                           
  8548                           ;my_i2c.c: 215: ic_ptr->error_code = 0x7;
  8549  0004B0  EE20 F00D          	lfsr	2,13
  8550  0004B4  5061               	movf	_ic_ptr,w,c
  8551  0004B6  26D9               	addwf	fsr2l,f,c
  8552  0004B8  5062               	movf	_ic_ptr+1,w,c
  8553  0004BA  22DA               	addwfc	fsr2h,f,c
  8554  0004BC  0E07               	movlw	7
  8555  0004BE  6EDF               	movwf	indf2,c
  8556  0004C0                     i2l4361:
  8557                           
  8558                           ; BSR set to: 0
  8559                           ;my_i2c.c: 216: }
  8560                           ;my_i2c.c: 218: if (msg_ready) {
  8561  0004C0  0100               	movlb	0	; () banked
  8562  0004C2  0100               	movlb	0	; () banked
  8563  0004C4  51A6               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  8564  0004C6  B4D8               	btfsc	status,2,c
  8565  0004C8  D01D               	goto	i2l4367
  8566                           
  8567                           ; BSR set to: 0
  8568                           ;my_i2c.c: 219: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  8569  0004CA  EE20 F00B          	lfsr	2,11
  8570  0004CE  5061               	movf	_ic_ptr,w,c
  8571  0004D0  26D9               	addwf	fsr2l,f,c
  8572  0004D2  5062               	movf	_ic_ptr+1,w,c
  8573  0004D4  22DA               	addwfc	fsr2h,f,c
  8574  0004D6  EE10 F00A          	lfsr	1,10
  8575  0004DA  5061               	movf	_ic_ptr,w,c
  8576  0004DC  26E1               	addwf	fsr1l,f,c
  8577  0004DE  5062               	movf	_ic_ptr+1,w,c
  8578  0004E0  22E2               	addwfc	fsr1h,f,c
  8579  0004E2  50E7               	movf	indf1,w,c
  8580  0004E4  0100               	movlb	0	; () banked
  8581  0004E6  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8582  0004E8  0100               	movlb	0	; () banked
  8583  0004EA  519A               	movf	??_i2c_int_handler& (0+255),w,b
  8584  0004EC  0D01               	mullw	1
  8585  0004EE  50F3               	movf	prodl,w,c
  8586  0004F0  2461               	addwf	_ic_ptr,w,c
  8587  0004F2  6EE1               	movwf	fsr1l,c
  8588  0004F4  50F4               	movf	prodh,w,c
  8589  0004F6  2062               	addwfc	_ic_ptr+1,w,c
  8590  0004F8  6EE2               	movwf	fsr1h,c
  8591  0004FA  CFDF FFE7          	movff	indf2,indf1
  8592                           
  8593                           ; BSR set to: 0
  8594                           ;my_i2c.c: 221: ic_ptr->buflen = 0;
  8595  0004FE  EE20 F00A          	lfsr	2,10
  8596  000502  D03E               	goto	L7
  8597  000504                     i2l4367:
  8598                           
  8599                           ; BSR set to: 0
  8600  000504  EE20 F00E          	lfsr	2,14
  8601  000508  5061               	movf	_ic_ptr,w,c
  8602  00050A  26D9               	addwf	fsr2l,f,c
  8603  00050C  5062               	movf	_ic_ptr+1,w,c
  8604  00050E  22DA               	addwfc	fsr2h,f,c
  8605  000510  50DF               	movf	indf2,w,c
  8606  000512  B4D8               	btfsc	status,2,c
  8607  000514  D03B               	goto	i2l4375
  8608                           
  8609                           ; BSR set to: 0
  8610                           ;my_i2c.c: 223: error_buf[0] = ic_ptr->error_count;
  8611  000516  EE20 F00E          	lfsr	2,14
  8612  00051A  5061               	movf	_ic_ptr,w,c
  8613  00051C  26D9               	addwf	fsr2l,f,c
  8614  00051E  5062               	movf	_ic_ptr+1,w,c
  8615  000520  22DA               	addwfc	fsr2h,f,c
  8616  000522  50DF               	movf	indf2,w,c
  8617  000524  0100               	movlb	0	; () banked
  8618  000526  0100               	movlb	0	; () banked
  8619  000528  6F9F               	movwf	i2c_int_handler@error_buf& (0+255),b
  8620                           
  8621                           ;my_i2c.c: 224: error_buf[1] = ic_ptr->error_code;
  8622  00052A  EE20 F00D          	lfsr	2,13
  8623  00052E  5061               	movf	_ic_ptr,w,c
  8624  000530  26D9               	addwf	fsr2l,f,c
  8625  000532  5062               	movf	_ic_ptr+1,w,c
  8626  000534  22DA               	addwfc	fsr2h,f,c
  8627  000536  50DF               	movf	indf2,w,c
  8628  000538  0100               	movlb	0	; () banked
  8629  00053A  0100               	movlb	0	; () banked
  8630  00053C  6FA0               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  8631                           
  8632                           ;my_i2c.c: 225: error_buf[2] = ic_ptr->event_count;
  8633  00053E  EE20 F00B          	lfsr	2,11
  8634  000542  5061               	movf	_ic_ptr,w,c
  8635  000544  26D9               	addwf	fsr2l,f,c
  8636  000546  5062               	movf	_ic_ptr+1,w,c
  8637  000548  22DA               	addwfc	fsr2h,f,c
  8638  00054A  50DF               	movf	indf2,w,c
  8639  00054C  0100               	movlb	0	; () banked
  8640  00054E  0100               	movlb	0	; () banked
  8641  000550  6FA1               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  8642                           
  8643                           ; BSR set to: 0
  8644                           ;my_i2c.c: 226: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  8645  000552  0100               	movlb	0	; () banked
  8646  000554  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8647  000556  0E29               	movlw	41
  8648  000558  0100               	movlb	0	; () banked
  8649  00055A  0100               	movlb	0	; () banked
  8650  00055C  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8651  00055E  0100               	movlb	0	; () banked
  8652  000560  519A               	movf	??_i2c_int_handler& (0+255),w,b
  8653  000562  0100               	movlb	0	; () banked
  8654  000564  0E00               	movlw	high i2c_int_handler@error_buf
  8655  000566  0100               	movlb	0	; () banked
  8656  000568  0100               	movlb	0	; () banked
  8657  00056A  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8658  00056C  0100               	movlb	0	; () banked
  8659  00056E  0E9F               	movlw	low i2c_int_handler@error_buf
  8660  000570  0100               	movlb	0	; () banked
  8661  000572  0100               	movlb	0	; () banked
  8662  000574  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8663  000576  0E03               	movlw	3
  8664  000578  ECDB  F00E         	call	_ToMainHigh_sendmsg
  8665                           
  8666                           ;my_i2c.c: 227: ic_ptr->error_count = 0;
  8667  00057C  EE20 F00E          	lfsr	2,14
  8668  000580                     L7:
  8669  000580  5061               	movf	_ic_ptr,w,c
  8670  000582  26D9               	addwf	fsr2l,f,c
  8671  000584  5062               	movf	_ic_ptr+1,w,c
  8672  000586  22DA               	addwfc	fsr2h,f,c
  8673  000588  0E00               	movlw	0
  8674  00058A  6EDF               	movwf	indf2,c
  8675  00058C                     i2l4375:
  8676                           
  8677                           ;my_i2c.c: 228: }
  8678                           ;my_i2c.c: 229: if (msg_to_send) {
  8679  00058C  0100               	movlb	0	; () banked
  8680  00058E  0100               	movlb	0	; () banked
  8681  000590  51A5               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  8682  000592  B4D8               	btfsc	status,2,c
  8683  000594  0012               	return	
  8684                           
  8685                           ; BSR set to: 0
  8686                           ;my_i2c.c: 247: int length = 10;
  8687  000596  0E00               	movlw	0
  8688  000598  0100               	movlb	0	; () banked
  8689  00059A  0100               	movlb	0	; () banked
  8690  00059C  6F9C               	movwf	(i2c_int_handler@length+1)& (0+255),b
  8691  00059E  0E0A               	movlw	10
  8692  0005A0  0100               	movlb	0	; () banked
  8693  0005A2  6F9B               	movwf	i2c_int_handler@length& (0+255),b
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;my_i2c.c: 248: unsigned char * msgbuffer = SensorValues();
  8697  0005A4  EC53  F00E         	call	_SensorValues	;wreg free
  8698  0005A8  0100               	movlb	0	; () banked
  8699  0005AA  C080  F09D         	movff	?_SensorValues,i2c_int_handler@msgbuffer
  8700  0005AE  0100               	movlb	0	; () banked
  8701  0005B0  C081  F09E         	movff	?_SensorValues+1,i2c_int_handler@msgbuffer+1
  8702                           
  8703                           ; BSR set to: 0
  8704                           ;my_i2c.c: 249: start_i2c_slave_reply(length, msgbuffer);
  8705  0005B4  0100               	movlb	0	; () banked
  8706  0005B6  0100               	movlb	0	; () banked
  8707  0005B8  C09E  F081         	movff	i2c_int_handler@msgbuffer+1,start_i2c_slave_reply@msg+1
  8708  0005BC  0100               	movlb	0	; () banked
  8709  0005BE  0100               	movlb	0	; () banked
  8710  0005C0  C09D  F080         	movff	i2c_int_handler@msgbuffer,start_i2c_slave_reply@msg
  8711  0005C4  0100               	movlb	0	; () banked
  8712  0005C6  0100               	movlb	0	; () banked
  8713  0005C8  519B               	movf	i2c_int_handler@length& (0+255),w,b
  8714  0005CA  ECD2  F008         	call	_start_i2c_slave_reply
  8715                           
  8716                           ;my_i2c.c: 256: msg_to_send = 0;
  8717  0005CE  0100               	movlb	0	; () banked
  8718  0005D0  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8719  0005D2  0E00               	movlw	0
  8720  0005D4  0100               	movlb	0	; () banked
  8721  0005D6  0100               	movlb	0	; () banked
  8722  0005D8  6FA5               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8723  0005DA  0100               	movlb	0	; () banked
  8724  0005DC  519A               	movf	??_i2c_int_handler& (0+255),w,b
  8725  0005DE  0012               	return	
  8726  0005E0                     __end_of_i2c_int_handler:
  8727                           	opt stack 0
  8728                           pclatu	equ	0xFFB
  8729                           pclath	equ	0xFFA
  8730                           tblptru	equ	0xFF8
  8731                           tblptrh	equ	0xFF7
  8732                           tblptrl	equ	0xFF6
  8733                           tablat	equ	0xFF5
  8734                           prodh	equ	0xFF4
  8735                           prodl	equ	0xFF3
  8736                           intcon	equ	0xFF2
  8737                           intcon2	equ	0xFF1
  8738                           postinc0	equ	0xFEE
  8739                           fsr0h	equ	0xFEA
  8740                           fsr0l	equ	0xFE9
  8741                           wreg	equ	0xFE8
  8742                           indf1	equ	0xFE7
  8743                           postdec1	equ	0xFE5
  8744                           fsr1h	equ	0xFE2
  8745                           fsr1l	equ	0xFE1
  8746                           bsr	equ	0xFE0
  8747                           indf2	equ	0xFDF
  8748                           postinc2	equ	0xFDE
  8749                           postdec2	equ	0xFDD
  8750                           fsr2h	equ	0xFDA
  8751                           fsr2l	equ	0xFD9
  8752                           status	equ	0xFD8
  8753                           
  8754 ;; *************** function _start_i2c_slave_reply *****************
  8755 ;; Defined at:
  8756 ;;		line 21 in file "../src/my_i2c.c"
  8757 ;; Parameters:    Size  Location     Type
  8758 ;;  length          1    wreg     unsigned char 
  8759 ;;  msg             2    0[BANK0 ] PTR unsigned char 
  8760 ;;		 -> ADCArray(10), 
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;  length          1    4[BANK0 ] unsigned char 
  8763 ;; Return value:  Size  Location     Type
  8764 ;;		None               void
  8765 ;; Registers used:
  8766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8767 ;; Tracked objects:
  8768 ;;		On entry : 0/0
  8769 ;;		On exit  : 0/0
  8770 ;;		Unchanged: 0/0
  8771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8772 ;;      Params:         0       2       0       0       0
  8773 ;;      Locals:         0       1       0       0       0
  8774 ;;      Temps:          0       2       0       0       0
  8775 ;;      Totals:         0       5       0       0       0
  8776 ;;Total ram usage:        5 bytes
  8777 ;; Hardware stack levels used:    1
  8778 ;; This function calls:
  8779 ;;		Nothing
  8780 ;; This function is called by:
  8781 ;;		_i2c_int_handler
  8782 ;; This function uses a non-reentrant model
  8783 ;;
  8784                           
  8785                           	psect	text50
  8786  0011A4                     __ptext50:
  8787                           	opt stack 0
  8788  0011A4                     _start_i2c_slave_reply:
  8789                           	opt stack 19
  8790                           
  8791                           ; BSR set to: 0
  8792                           ;incstack = 0
  8793                           ;start_i2c_slave_reply@length stored from wreg
  8794  0011A4  CFE8 F084          	movff	wreg,start_i2c_slave_reply@length
  8795                           
  8796                           ;my_i2c.c: 23: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  8797  0011A8  EE20 F019          	lfsr	2,25
  8798  0011AC  5061               	movf	_ic_ptr,w,c
  8799  0011AE  26D9               	addwf	fsr2l,f,c
  8800  0011B0  5062               	movf	_ic_ptr+1,w,c
  8801  0011B2  22DA               	addwfc	fsr2h,f,c
  8802  0011B4  0E00               	movlw	0
  8803  0011B6  6EDF               	movwf	indf2,c
  8804  0011B8  D035               	goto	i2l4221
  8805  0011BA                     i2l4217:
  8806                           
  8807                           ;my_i2c.c: 24: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  8808  0011BA  EE20 F019          	lfsr	2,25
  8809  0011BE  5061               	movf	_ic_ptr,w,c
  8810  0011C0  26D9               	addwf	fsr2l,f,c
  8811  0011C2  5062               	movf	_ic_ptr+1,w,c
  8812  0011C4  22DA               	addwfc	fsr2h,f,c
  8813  0011C6  50DF               	movf	indf2,w,c
  8814  0011C8  0100               	movlb	0	; () banked
  8815  0011CA  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
  8816  0011CC  0100               	movlb	0	; () banked
  8817  0011CE  5182               	movf	??_start_i2c_slave_reply& (0+255),w,b
  8818  0011D0  0D01               	mullw	1
  8819  0011D2  50F3               	movf	prodl,w,c
  8820  0011D4  0100               	movlb	0	; () banked
  8821  0011D6  0100               	movlb	0	; () banked
  8822  0011D8  2580               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  8823  0011DA  6ED9               	movwf	fsr2l,c
  8824  0011DC  50F4               	movf	prodh,w,c
  8825  0011DE  0100               	movlb	0	; () banked
  8826  0011E0  0100               	movlb	0	; () banked
  8827  0011E2  2181               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  8828  0011E4  6EDA               	movwf	fsr2h,c
  8829  0011E6  EE10 F019          	lfsr	1,25
  8830  0011EA  5061               	movf	_ic_ptr,w,c
  8831  0011EC  26E1               	addwf	fsr1l,f,c
  8832  0011EE  5062               	movf	_ic_ptr+1,w,c
  8833  0011F0  22E2               	addwfc	fsr1h,f,c
  8834  0011F2  50E7               	movf	indf1,w,c
  8835  0011F4  0100               	movlb	0	; () banked
  8836  0011F6  6F83               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  8837  0011F8  0100               	movlb	0	; () banked
  8838  0011FA  5183               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  8839  0011FC  0D01               	mullw	1
  8840  0011FE  0E0F               	movlw	15
  8841  001200  26F3               	addwf	prodl,f,c
  8842  001202  0E00               	movlw	0
  8843  001204  22F4               	addwfc	prodh,f,c
  8844  001206  50F3               	movf	prodl,w,c
  8845  001208  2461               	addwf	_ic_ptr,w,c
  8846  00120A  6EE1               	movwf	fsr1l,c
  8847  00120C  50F4               	movf	prodh,w,c
  8848  00120E  2062               	addwfc	_ic_ptr+1,w,c
  8849  001210  6EE2               	movwf	fsr1h,c
  8850  001212  CFDF FFE7          	movff	indf2,indf1
  8851                           
  8852                           ; BSR set to: 0
  8853  001216  EE20 F019          	lfsr	2,25
  8854  00121A  5061               	movf	_ic_ptr,w,c
  8855  00121C  26D9               	addwf	fsr2l,f,c
  8856  00121E  5062               	movf	_ic_ptr+1,w,c
  8857  001220  22DA               	addwfc	fsr2h,f,c
  8858  001222  2ADF               	incf	indf2,f,c
  8859  001224                     i2l4221:
  8860  001224  EE20 F019          	lfsr	2,25
  8861  001228  5061               	movf	_ic_ptr,w,c
  8862  00122A  26D9               	addwf	fsr2l,f,c
  8863  00122C  5062               	movf	_ic_ptr+1,w,c
  8864  00122E  22DA               	addwfc	fsr2h,f,c
  8865  001230  50DF               	movf	indf2,w,c
  8866  001232  0100               	movlb	0	; () banked
  8867  001234  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
  8868  001236  0100               	movlb	0	; () banked
  8869  001238  0100               	movlb	0	; () banked
  8870  00123A  5184               	movf	start_i2c_slave_reply@length& (0+255),w,b
  8871  00123C  0100               	movlb	0	; () banked
  8872  00123E  5D82               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  8873  001240  A0D8               	btfss	status,0,c
  8874  001242  D7BB               	goto	i2l4217
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;my_i2c.c: 25: }
  8878                           ;my_i2c.c: 26: ic_ptr->outbuflen = length;
  8879                           
  8880                           ; BSR set to: 0
  8881  001244  EE20 F019          	lfsr	2,25
  8882  001248  5061               	movf	_ic_ptr,w,c
  8883  00124A  26D9               	addwf	fsr2l,f,c
  8884  00124C  5062               	movf	_ic_ptr+1,w,c
  8885  00124E  22DA               	addwfc	fsr2h,f,c
  8886  001250  0100               	movlb	0	; () banked
  8887  001252  C084  FFDF         	movff	start_i2c_slave_reply@length,indf2
  8888                           
  8889                           ;my_i2c.c: 27: ic_ptr->outbufind = 1;
  8890  001256  EE20 F01A          	lfsr	2,26
  8891  00125A  5061               	movf	_ic_ptr,w,c
  8892  00125C  26D9               	addwf	fsr2l,f,c
  8893  00125E  5062               	movf	_ic_ptr+1,w,c
  8894  001260  22DA               	addwfc	fsr2h,f,c
  8895  001262  0E01               	movlw	1
  8896  001264  6EDF               	movwf	indf2,c
  8897                           
  8898                           ;my_i2c.c: 30: SSPBUF = ic_ptr->outbuffer[0];
  8899  001266  EE20 F00F          	lfsr	2,15
  8900  00126A  5061               	movf	_ic_ptr,w,c
  8901  00126C  26D9               	addwf	fsr2l,f,c
  8902  00126E  5062               	movf	_ic_ptr+1,w,c
  8903  001270  22DA               	addwfc	fsr2h,f,c
  8904  001272  50DF               	movf	indf2,w,c
  8905  001274  6EC9               	movwf	4041,c	;volatile
  8906                           
  8907                           ; BSR set to: 0
  8908                           ;my_i2c.c: 33: SSPCON1bits.CKP = 1;
  8909  001276  88C6               	bsf	4038,4,c	;volatile
  8910                           
  8911                           ; BSR set to: 0
  8912  001278  0012               	return	
  8913  00127A                     __end_of_start_i2c_slave_reply:
  8914                           	opt stack 0
  8915                           pclatu	equ	0xFFB
  8916                           pclath	equ	0xFFA
  8917                           tblptru	equ	0xFF8
  8918                           tblptrh	equ	0xFF7
  8919                           tblptrl	equ	0xFF6
  8920                           tablat	equ	0xFF5
  8921                           prodh	equ	0xFF4
  8922                           prodl	equ	0xFF3
  8923                           intcon	equ	0xFF2
  8924                           intcon2	equ	0xFF1
  8925                           postinc0	equ	0xFEE
  8926                           fsr0h	equ	0xFEA
  8927                           fsr0l	equ	0xFE9
  8928                           wreg	equ	0xFE8
  8929                           indf1	equ	0xFE7
  8930                           postdec1	equ	0xFE5
  8931                           fsr1h	equ	0xFE2
  8932                           fsr1l	equ	0xFE1
  8933                           bsr	equ	0xFE0
  8934                           indf2	equ	0xFDF
  8935                           postinc2	equ	0xFDE
  8936                           postdec2	equ	0xFDD
  8937                           fsr2h	equ	0xFDA
  8938                           fsr2l	equ	0xFD9
  8939                           status	equ	0xFD8
  8940                           
  8941 ;; *************** function _handle_start *****************
  8942 ;; Defined at:
  8943 ;;		line 39 in file "../src/my_i2c.c"
  8944 ;; Parameters:    Size  Location     Type
  8945 ;;  data_read       1    wreg     unsigned char 
  8946 ;; Auto vars:     Size  Location     Type
  8947 ;;  data_read       1    0[BANK0 ] unsigned char 
  8948 ;; Return value:  Size  Location     Type
  8949 ;;		None               void
  8950 ;; Registers used:
  8951 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8952 ;; Tracked objects:
  8953 ;;		On entry : 0/0
  8954 ;;		On exit  : 0/0
  8955 ;;		Unchanged: 0/0
  8956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8957 ;;      Params:         0       0       0       0       0
  8958 ;;      Locals:         0       1       0       0       0
  8959 ;;      Temps:          0       0       0       0       0
  8960 ;;      Totals:         0       1       0       0       0
  8961 ;;Total ram usage:        1 bytes
  8962 ;; Hardware stack levels used:    1
  8963 ;; This function calls:
  8964 ;;		Nothing
  8965 ;; This function is called by:
  8966 ;;		_i2c_int_handler
  8967 ;; This function uses a non-reentrant model
  8968 ;;
  8969                           
  8970                           	psect	text51
  8971  0013D6                     __ptext51:
  8972                           	opt stack 0
  8973  0013D6                     _handle_start:
  8974                           	opt stack 19
  8975                           
  8976                           ; BSR set to: 0
  8977                           ;incstack = 0
  8978                           ;handle_start@data_read stored from wreg
  8979  0013D6  CFE8 F080          	movff	wreg,handle_start@data_read
  8980                           
  8981                           ;my_i2c.c: 40: ic_ptr->event_count = 1;
  8982  0013DA  EE20 F00B          	lfsr	2,11
  8983  0013DE  5061               	movf	_ic_ptr,w,c
  8984  0013E0  26D9               	addwf	fsr2l,f,c
  8985  0013E2  5062               	movf	_ic_ptr+1,w,c
  8986  0013E4  22DA               	addwfc	fsr2h,f,c
  8987  0013E6  0E01               	movlw	1
  8988  0013E8  6EDF               	movwf	indf2,c
  8989                           
  8990                           ;my_i2c.c: 41: ic_ptr->buflen = 0;
  8991  0013EA  EE20 F00A          	lfsr	2,10
  8992  0013EE  5061               	movf	_ic_ptr,w,c
  8993  0013F0  26D9               	addwf	fsr2l,f,c
  8994  0013F2  5062               	movf	_ic_ptr+1,w,c
  8995  0013F4  22DA               	addwfc	fsr2h,f,c
  8996  0013F6  0E00               	movlw	0
  8997  0013F8  6EDF               	movwf	indf2,c
  8998                           
  8999                           ;my_i2c.c: 43: if (data_read) {
  9000  0013FA  0100               	movlb	0	; () banked
  9001  0013FC  0100               	movlb	0	; () banked
  9002  0013FE  5180               	movf	handle_start@data_read& (0+255),w,b
  9003  001400  B4D8               	btfsc	status,2,c
  9004  001402  D02E               	goto	i2l4239
  9005                           
  9006                           ; BSR set to: 0
  9007                           ;my_i2c.c: 44: if (SSPSTATbits.D_A == 1) {
  9008  001404  AAC7               	btfss	4039,5,c	;volatile
  9009  001406  D018               	goto	i2l153
  9010                           
  9011                           ; BSR set to: 0
  9012                           ;my_i2c.c: 47: ic_ptr->status = 0x5;
  9013  001408  EE20 F00C          	lfsr	2,12
  9014  00140C  5061               	movf	_ic_ptr,w,c
  9015  00140E  26D9               	addwf	fsr2l,f,c
  9016  001410  5062               	movf	_ic_ptr+1,w,c
  9017  001412  22DA               	addwfc	fsr2h,f,c
  9018  001414  0E05               	movlw	5
  9019  001416  6EDF               	movwf	indf2,c
  9020                           
  9021                           ;my_i2c.c: 48: ic_ptr->error_count++;
  9022  001418  EE20 F00E          	lfsr	2,14
  9023  00141C  5061               	movf	_ic_ptr,w,c
  9024  00141E  26D9               	addwf	fsr2l,f,c
  9025  001420  5062               	movf	_ic_ptr+1,w,c
  9026  001422  22DA               	addwfc	fsr2h,f,c
  9027  001424  2ADF               	incf	indf2,f,c
  9028                           
  9029                           ;my_i2c.c: 49: ic_ptr->error_code = 0x5;
  9030  001426  EE20 F00D          	lfsr	2,13
  9031  00142A  5061               	movf	_ic_ptr,w,c
  9032  00142C  26D9               	addwf	fsr2l,f,c
  9033  00142E  5062               	movf	_ic_ptr+1,w,c
  9034  001430  22DA               	addwfc	fsr2h,f,c
  9035  001432  0E05               	movlw	5
  9036  001434  6EDF               	movwf	indf2,c
  9037                           
  9038                           ;my_i2c.c: 50: } else {
  9039  001436  0012               	return	
  9040  001438                     i2l153:
  9041                           
  9042                           ; BSR set to: 0
  9043                           ;my_i2c.c: 51: if (SSPSTATbits.R_W == 1) {
  9044  001438  A4C7               	btfss	4039,2,c	;volatile
  9045  00143A  D009               	goto	i2l4237
  9046                           
  9047                           ; BSR set to: 0
  9048                           ;my_i2c.c: 52: ic_ptr->status = 0x8;
  9049  00143C  EE20 F00C          	lfsr	2,12
  9050  001440  5061               	movf	_ic_ptr,w,c
  9051  001442  26D9               	addwf	fsr2l,f,c
  9052  001444  5062               	movf	_ic_ptr+1,w,c
  9053  001446  22DA               	addwfc	fsr2h,f,c
  9054  001448  0E08               	movlw	8
  9055  00144A  6EDF               	movwf	indf2,c
  9056                           
  9057                           ;my_i2c.c: 53: } else {
  9058  00144C  0012               	return	
  9059  00144E                     i2l4237:
  9060                           
  9061                           ; BSR set to: 0
  9062                           ;my_i2c.c: 54: ic_ptr->status = 0x7;
  9063  00144E  EE20 F00C          	lfsr	2,12
  9064  001452  5061               	movf	_ic_ptr,w,c
  9065  001454  26D9               	addwf	fsr2l,f,c
  9066  001456  5062               	movf	_ic_ptr+1,w,c
  9067  001458  22DA               	addwfc	fsr2h,f,c
  9068  00145A  0E07               	movlw	7
  9069  00145C  6EDF               	movwf	indf2,c
  9070  00145E  0012               	return	
  9071  001460                     i2l4239:
  9072                           
  9073                           ; BSR set to: 0
  9074                           ;my_i2c.c: 58: ic_ptr->status = 0x6;
  9075  001460  EE20 F00C          	lfsr	2,12
  9076  001464  5061               	movf	_ic_ptr,w,c
  9077  001466  26D9               	addwf	fsr2l,f,c
  9078  001468  5062               	movf	_ic_ptr+1,w,c
  9079  00146A  22DA               	addwfc	fsr2h,f,c
  9080  00146C  0E06               	movlw	6
  9081  00146E  6EDF               	movwf	indf2,c
  9082  001470  0012               	return	
  9083  001472                     __end_of_handle_start:
  9084                           	opt stack 0
  9085                           pclatu	equ	0xFFB
  9086                           pclath	equ	0xFFA
  9087                           tblptru	equ	0xFF8
  9088                           tblptrh	equ	0xFF7
  9089                           tblptrl	equ	0xFF6
  9090                           tablat	equ	0xFF5
  9091                           prodh	equ	0xFF4
  9092                           prodl	equ	0xFF3
  9093                           intcon	equ	0xFF2
  9094                           intcon2	equ	0xFF1
  9095                           postinc0	equ	0xFEE
  9096                           fsr0h	equ	0xFEA
  9097                           fsr0l	equ	0xFE9
  9098                           wreg	equ	0xFE8
  9099                           indf1	equ	0xFE7
  9100                           postdec1	equ	0xFE5
  9101                           fsr1h	equ	0xFE2
  9102                           fsr1l	equ	0xFE1
  9103                           bsr	equ	0xFE0
  9104                           indf2	equ	0xFDF
  9105                           postinc2	equ	0xFDE
  9106                           postdec2	equ	0xFDD
  9107                           fsr2h	equ	0xFDA
  9108                           fsr2l	equ	0xFD9
  9109                           status	equ	0xFD8
  9110                           
  9111 ;; *************** function _ToMainHigh_sendmsg *****************
  9112 ;; Defined at:
  9113 ;;		line 131 in file "../src/messages.c"
  9114 ;; Parameters:    Size  Location     Type
  9115 ;;  length          1    wreg     unsigned char 
  9116 ;;  msgtype         1   22[BANK0 ] unsigned char 
  9117 ;;  data            2   23[BANK0 ] PTR void 
  9118 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), 
  9119 ;; Auto vars:     Size  Location     Type
  9120 ;;  length          1   25[BANK0 ] unsigned char 
  9121 ;; Return value:  Size  Location     Type
  9122 ;;                  1    wreg      char 
  9123 ;; Registers used:
  9124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9125 ;; Tracked objects:
  9126 ;;		On entry : 0/0
  9127 ;;		On exit  : 0/0
  9128 ;;		Unchanged: 0/0
  9129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9130 ;;      Params:         0       3       0       0       0
  9131 ;;      Locals:         0       1       0       0       0
  9132 ;;      Temps:          0       0       0       0       0
  9133 ;;      Totals:         0       4       0       0       0
  9134 ;;Total ram usage:        4 bytes
  9135 ;; Hardware stack levels used:    1
  9136 ;; Hardware stack levels required when called:    2
  9137 ;; This function calls:
  9138 ;;		i2_send_msg
  9139 ;; This function is called by:
  9140 ;;		_i2c_int_handler
  9141 ;;		_i2c_master_handler
  9142 ;; This function uses a non-reentrant model
  9143 ;;
  9144                           
  9145                           	psect	text52
  9146  001DB6                     __ptext52:
  9147                           	opt stack 0
  9148  001DB6                     _ToMainHigh_sendmsg:
  9149                           	opt stack 17
  9150                           
  9151                           ; BSR set to: 0
  9152                           ;incstack = 0
  9153                           ;ToMainHigh_sendmsg@length stored from wreg
  9154  001DB6  CFE8 F099          	movff	wreg,ToMainHigh_sendmsg@length
  9155                           
  9156                           ;messages.c: 137: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  9157                           ;	Return value of _ToMainHigh_sendmsg is never used
  9158  001DBA  0101               	movlb	1	; () banked
  9159  001DBC  0E01               	movlw	high _ToMainHigh_MQ
  9160  001DBE  0100               	movlb	0	; () banked
  9161  001DC0  0100               	movlb	0	; () banked
  9162  001DC2  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  9163  001DC4  0101               	movlb	1	; () banked
  9164  001DC6  0E37               	movlw	low _ToMainHigh_MQ
  9165  001DC8  0100               	movlb	0	; () banked
  9166  001DCA  0100               	movlb	0	; () banked
  9167  001DCC  6F8A               	movwf	i2send_msg@qptr& (0+255),b
  9168  001DCE  C099  F08C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  9169  001DD2  C096  F08D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  9170  001DD6  0100               	movlb	0	; () banked
  9171  001DD8  0100               	movlb	0	; () banked
  9172  001DDA  C098  F08F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  9173  001DDE  0100               	movlb	0	; () banked
  9174  001DE0  0100               	movlb	0	; () banked
  9175  001DE2  C097  F08E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  9176  001DE6  EC50  F008         	call	i2_send_msg	;wreg free
  9177  001DEA  0012               	return	
  9178  001DEC                     __end_of_ToMainHigh_sendmsg:
  9179                           	opt stack 0
  9180                           pclatu	equ	0xFFB
  9181                           pclath	equ	0xFFA
  9182                           tblptru	equ	0xFF8
  9183                           tblptrh	equ	0xFF7
  9184                           tblptrl	equ	0xFF6
  9185                           tablat	equ	0xFF5
  9186                           prodh	equ	0xFF4
  9187                           prodl	equ	0xFF3
  9188                           intcon	equ	0xFF2
  9189                           intcon2	equ	0xFF1
  9190                           postinc0	equ	0xFEE
  9191                           fsr0h	equ	0xFEA
  9192                           fsr0l	equ	0xFE9
  9193                           wreg	equ	0xFE8
  9194                           indf1	equ	0xFE7
  9195                           postdec1	equ	0xFE5
  9196                           fsr1h	equ	0xFE2
  9197                           fsr1l	equ	0xFE1
  9198                           bsr	equ	0xFE0
  9199                           indf2	equ	0xFDF
  9200                           postinc2	equ	0xFDE
  9201                           postdec2	equ	0xFDD
  9202                           fsr2h	equ	0xFDA
  9203                           fsr2l	equ	0xFD9
  9204                           status	equ	0xFD8
  9205                           
  9206 ;; *************** function i2_send_msg *****************
  9207 ;; Defined at:
  9208 ;;		line 29 in file "../src/messages.c"
  9209 ;; Parameters:    Size  Location     Type
  9210 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  9211 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9212 ;;  length          1   12[BANK0 ] unsigned char 
  9213 ;;  msgtype         1   13[BANK0 ] unsigned char 
  9214 ;;  data            2   14[BANK0 ] PTR void 
  9215 ;;		 -> main@msgbuffer(11), main@t0thread_data(2), main@t1thread_data(2), i2c_int_handler@error_buf(3), 
  9216 ;;		 -> NULL(0), 
  9217 ;; Auto vars:     Size  Location     Type
  9218 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  9219 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  9220 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9221 ;;  send_msg        2   17[BANK0 ] unsigned int 
  9222 ;;  send_msg        1   19[BANK0 ] unsigned char 
  9223 ;; Return value:  Size  Location     Type
  9224 ;;                  1    wreg      char 
  9225 ;; Registers used:
  9226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9227 ;; Tracked objects:
  9228 ;;		On entry : 0/0
  9229 ;;		On exit  : 0/0
  9230 ;;		Unchanged: 0/0
  9231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9232 ;;      Params:         0       6       0       0       0
  9233 ;;      Locals:         0       5       0       0       0
  9234 ;;      Temps:          0       1       0       0       0
  9235 ;;      Totals:         0      12       0       0       0
  9236 ;;Total ram usage:       12 bytes
  9237 ;; Hardware stack levels used:    1
  9238 ;; Hardware stack levels required when called:    1
  9239 ;; This function calls:
  9240 ;;		i2_memcpy
  9241 ;; This function is called by:
  9242 ;;		_ToMainHigh_sendmsg
  9243 ;; This function uses a non-reentrant model
  9244 ;;
  9245                           
  9246                           	psect	text53
  9247  0010A0                     __ptext53:
  9248                           	opt stack 0
  9249  0010A0                     i2_send_msg:
  9250                           	opt stack 17
  9251                           
  9252                           ;messages.c: 30: unsigned char slot;
  9253                           ;messages.c: 32: msg *qmsg;
  9254                           ;messages.c: 33: size_t tlength = length;
  9255                           
  9256                           ;incstack = 0
  9257  0010A0  0100               	movlb	0	; () banked
  9258  0010A2  0100               	movlb	0	; () banked
  9259  0010A4  C08C  F091         	movff	i2send_msg@length,i2send_msg@tlength
  9260  0010A8  0100               	movlb	0	; () banked
  9261  0010AA  0100               	movlb	0	; () banked
  9262  0010AC  6B92               	clrf	(i2send_msg@tlength+1)& (0+255),b
  9263                           
  9264                           ; BSR set to: 0
  9265                           ;messages.c: 43: slot = qptr->cur_write_ind;
  9266  0010AE  0100               	movlb	0	; () banked
  9267  0010B0  EE20 F034          	lfsr	2,52
  9268  0010B4  0100               	movlb	0	; () banked
  9269  0010B6  518A               	movf	i2send_msg@qptr& (0+255),w,b
  9270  0010B8  26D9               	addwf	fsr2l,f,c
  9271  0010BA  0100               	movlb	0	; () banked
  9272  0010BC  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9273  0010BE  22DA               	addwfc	fsr2h,f,c
  9274  0010C0  50DF               	movf	indf2,w,c
  9275  0010C2  0100               	movlb	0	; () banked
  9276  0010C4  0100               	movlb	0	; () banked
  9277  0010C6  6F93               	movwf	i2send_msg@slot& (0+255),b
  9278                           
  9279                           ; BSR set to: 0
  9280                           ;messages.c: 44: qmsg = &(qptr->queue[slot]);
  9281  0010C8  0100               	movlb	0	; () banked
  9282  0010CA  0100               	movlb	0	; () banked
  9283  0010CC  5193               	movf	i2send_msg@slot& (0+255),w,b
  9284  0010CE  0D0D               	mullw	13
  9285  0010D0  50F3               	movf	prodl,w,c
  9286  0010D2  0100               	movlb	0	; () banked
  9287  0010D4  0100               	movlb	0	; () banked
  9288  0010D6  258A               	addwf	i2send_msg@qptr& (0+255),w,b
  9289  0010D8  0100               	movlb	0	; () banked
  9290  0010DA  0100               	movlb	0	; () banked
  9291  0010DC  6F94               	movwf	i2send_msg@qmsg& (0+255),b
  9292  0010DE  50F4               	movf	prodh,w,c
  9293  0010E0  0100               	movlb	0	; () banked
  9294  0010E2  0100               	movlb	0	; () banked
  9295  0010E4  218B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  9296  0010E6  0100               	movlb	0	; () banked
  9297  0010E8  6F95               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  9298                           
  9299                           ; BSR set to: 0
  9300                           ;messages.c: 46: if (qmsg->full != 0) {
  9301  0010EA  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9302  0010EE  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9303  0010F2  50DF               	movf	indf2,w,c
  9304  0010F4  B4D8               	btfsc	status,2,c
  9305  0010F6  D002               	goto	i2l5171
  9306                           
  9307                           ; BSR set to: 0
  9308                           ;messages.c: 47: return (-1);
  9309  0010F8  0EFF               	movlw	255
  9310  0010FA  0012               	return	
  9311  0010FC                     i2l5171:
  9312                           
  9313                           ; BSR set to: 0
  9314                           ;messages.c: 48: }
  9315                           ;messages.c: 51: qmsg->length = length;
  9316  0010FC  0100               	movlb	0	; () banked
  9317  0010FE  EE20 F001          	lfsr	2,1
  9318  001102  0100               	movlb	0	; () banked
  9319  001104  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  9320  001106  26D9               	addwf	fsr2l,f,c
  9321  001108  0100               	movlb	0	; () banked
  9322  00110A  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9323  00110C  22DA               	addwfc	fsr2h,f,c
  9324  00110E  0100               	movlb	0	; () banked
  9325  001110  C08C  FFDF         	movff	i2send_msg@length,indf2
  9326                           
  9327                           ;messages.c: 52: qmsg->msgtype = msgtype;
  9328  001114  0100               	movlb	0	; () banked
  9329  001116  EE20 F002          	lfsr	2,2
  9330  00111A  0100               	movlb	0	; () banked
  9331  00111C  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  9332  00111E  26D9               	addwf	fsr2l,f,c
  9333  001120  0100               	movlb	0	; () banked
  9334  001122  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9335  001124  22DA               	addwfc	fsr2h,f,c
  9336  001126  0100               	movlb	0	; () banked
  9337  001128  C08D  FFDF         	movff	i2send_msg@msgtype,indf2
  9338                           
  9339                           ; BSR set to: 0
  9340                           ;messages.c: 60: memcpy(qmsg->data, data, tlength);
  9341  00112C  0E03               	movlw	3
  9342  00112E  0100               	movlb	0	; () banked
  9343  001130  0100               	movlb	0	; () banked
  9344  001132  2594               	addwf	i2send_msg@qmsg& (0+255),w,b
  9345  001134  0100               	movlb	0	; () banked
  9346  001136  0100               	movlb	0	; () banked
  9347  001138  6F80               	movwf	i2memcpy@d1& (0+255),b
  9348  00113A  0E00               	movlw	0
  9349  00113C  0100               	movlb	0	; () banked
  9350  00113E  0100               	movlb	0	; () banked
  9351  001140  2195               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  9352  001142  0100               	movlb	0	; () banked
  9353  001144  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
  9354  001146  0100               	movlb	0	; () banked
  9355  001148  0100               	movlb	0	; () banked
  9356  00114A  C08F  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
  9357  00114E  0100               	movlb	0	; () banked
  9358  001150  0100               	movlb	0	; () banked
  9359  001152  C08E  F082         	movff	i2send_msg@data,i2memcpy@s1
  9360  001156  C091  F084         	movff	i2send_msg@tlength,i2memcpy@n
  9361  00115A  C092  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  9362  00115E  ECE6  F00C         	call	i2_memcpy	;wreg free
  9363                           
  9364                           ;messages.c: 61: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  9365  001162  0100               	movlb	0	; () banked
  9366  001164  EE20 F034          	lfsr	2,52
  9367  001168  0100               	movlb	0	; () banked
  9368  00116A  518A               	movf	i2send_msg@qptr& (0+255),w,b
  9369  00116C  26D9               	addwf	fsr2l,f,c
  9370  00116E  0100               	movlb	0	; () banked
  9371  001170  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9372  001172  22DA               	addwfc	fsr2h,f,c
  9373  001174  0100               	movlb	0	; () banked
  9374  001176  EE10 F034          	lfsr	1,52
  9375  00117A  0100               	movlb	0	; () banked
  9376  00117C  518A               	movf	i2send_msg@qptr& (0+255),w,b
  9377  00117E  26E1               	addwf	fsr1l,f,c
  9378  001180  0100               	movlb	0	; () banked
  9379  001182  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9380  001184  22E2               	addwfc	fsr1h,f,c
  9381  001186  50E7               	movf	indf1,w,c
  9382  001188  0100               	movlb	0	; () banked
  9383  00118A  6F90               	movwf	??i2_send_msg& (0+255),b
  9384  00118C  0100               	movlb	0	; () banked
  9385  00118E  2990               	incf	??i2_send_msg& (0+255),w,b
  9386  001190  0B03               	andlw	3
  9387  001192  6EDF               	movwf	indf2,c
  9388                           
  9389                           ; BSR set to: 0
  9390                           ;messages.c: 64: qmsg->full = 1;
  9391  001194  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9392  001198  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9393  00119C  0E01               	movlw	1
  9394  00119E  6EDF               	movwf	indf2,c
  9395                           
  9396                           ; BSR set to: 0
  9397                           ;messages.c: 65: return (1);
  9398  0011A0  0E01               	movlw	1
  9399  0011A2  0012               	return	
  9400  0011A4                     __end_ofi2_send_msg:
  9401                           	opt stack 0
  9402                           pclatu	equ	0xFFB
  9403                           pclath	equ	0xFFA
  9404                           tblptru	equ	0xFF8
  9405                           tblptrh	equ	0xFF7
  9406                           tblptrl	equ	0xFF6
  9407                           tablat	equ	0xFF5
  9408                           prodh	equ	0xFF4
  9409                           prodl	equ	0xFF3
  9410                           intcon	equ	0xFF2
  9411                           intcon2	equ	0xFF1
  9412                           postinc0	equ	0xFEE
  9413                           fsr0h	equ	0xFEA
  9414                           fsr0l	equ	0xFE9
  9415                           wreg	equ	0xFE8
  9416                           indf1	equ	0xFE7
  9417                           postdec1	equ	0xFE5
  9418                           fsr1h	equ	0xFE2
  9419                           fsr1l	equ	0xFE1
  9420                           bsr	equ	0xFE0
  9421                           indf2	equ	0xFDF
  9422                           postinc2	equ	0xFDE
  9423                           postdec2	equ	0xFDD
  9424                           fsr2h	equ	0xFDA
  9425                           fsr2l	equ	0xFD9
  9426                           status	equ	0xFD8
  9427                           
  9428 ;; *************** function i2_memcpy *****************
  9429 ;; Defined at:
  9430 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  9431 ;; Parameters:    Size  Location     Type
  9432 ;;  d1              2    0[BANK0 ] PTR void 
  9433 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  9434 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  9435 ;;		 -> ToMainLow_MQ(54), NULL(0), 
  9436 ;;  s1              2    2[BANK0 ] PTR const void 
  9437 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  9438 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  9439 ;;		 -> main@msgbuffer(11), main@t0thread_data(2), main@t1thread_data(2), FromMainHigh_MQ(54), 
  9440 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), i2c_int_handler@error_buf(3), 
  9441 ;;		 -> NULL(0), 
  9442 ;;  n               2    4[BANK0 ] unsigned int 
  9443 ;; Auto vars:     Size  Location     Type
  9444 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  9445 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  9446 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  9447 ;;		 -> main@msgbuffer(11), main@t0thread_data(2), main@t1thread_data(2), FromMainHigh_MQ(54), 
  9448 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), i2c_int_handler@error_buf(3), 
  9449 ;;		 -> NULL(0), 
  9450 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  9451 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  9452 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  9453 ;;		 -> ToMainLow_MQ(54), NULL(0), 
  9454 ;; Return value:  Size  Location     Type
  9455 ;;                  2    0[BANK0 ] PTR void 
  9456 ;; Registers used:
  9457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9458 ;; Tracked objects:
  9459 ;;		On entry : 0/0
  9460 ;;		On exit  : 0/0
  9461 ;;		Unchanged: 0/0
  9462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9463 ;;      Params:         0       6       0       0       0
  9464 ;;      Locals:         0       4       0       0       0
  9465 ;;      Temps:          0       0       0       0       0
  9466 ;;      Totals:         0      10       0       0       0
  9467 ;;Total ram usage:       10 bytes
  9468 ;; Hardware stack levels used:    1
  9469 ;; This function calls:
  9470 ;;		Nothing
  9471 ;; This function is called by:
  9472 ;;		i2_send_msg
  9473 ;; This function uses a non-reentrant model
  9474 ;;
  9475                           
  9476                           	psect	text54
  9477  0019CC                     __ptext54:
  9478                           	opt stack 0
  9479  0019CC                     i2_memcpy:
  9480                           	opt stack 17
  9481                           
  9482                           ; BSR set to: 0
  9483                           ;incstack = 0
  9484  0019CC  0100               	movlb	0	; () banked
  9485  0019CE  0100               	movlb	0	; () banked
  9486  0019D0  C083  F089         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9487  0019D4  0100               	movlb	0	; () banked
  9488  0019D6  0100               	movlb	0	; () banked
  9489  0019D8  C082  F088         	movff	i2memcpy@s1,i2memcpy@s
  9490  0019DC  0100               	movlb	0	; () banked
  9491  0019DE  0100               	movlb	0	; () banked
  9492  0019E0  C081  F087         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9493  0019E4  0100               	movlb	0	; () banked
  9494  0019E6  0100               	movlb	0	; () banked
  9495  0019E8  C080  F086         	movff	i2memcpy@d1,i2memcpy@d
  9496  0019EC  D012               	goto	i2l5203
  9497  0019EE                     i2l5197:
  9498                           
  9499                           ; BSR set to: 0
  9500  0019EE  C088  FFD9         	movff	i2memcpy@s,fsr2l
  9501  0019F2  C089  FFDA         	movff	i2memcpy@s+1,fsr2h
  9502  0019F6  C086  FFE1         	movff	i2memcpy@d,fsr1l
  9503  0019FA  C087  FFE2         	movff	i2memcpy@d+1,fsr1h
  9504  0019FE  CFDF FFE7          	movff	indf2,indf1
  9505                           
  9506                           ; BSR set to: 0
  9507  001A02  0100               	movlb	0	; () banked
  9508  001A04  0100               	movlb	0	; () banked
  9509  001A06  4B88               	infsnz	i2memcpy@s& (0+255),f,b
  9510  001A08  2B89               	incf	(i2memcpy@s+1)& (0+255),f,b
  9511                           
  9512                           ; BSR set to: 0
  9513  001A0A  0100               	movlb	0	; () banked
  9514  001A0C  0100               	movlb	0	; () banked
  9515  001A0E  4B86               	infsnz	i2memcpy@d& (0+255),f,b
  9516  001A10  2B87               	incf	(i2memcpy@d+1)& (0+255),f,b
  9517  001A12                     i2l5203:
  9518                           
  9519                           ; BSR set to: 0
  9520  001A12  0100               	movlb	0	; () banked
  9521  001A14  0100               	movlb	0	; () banked
  9522  001A16  0784               	decf	i2memcpy@n& (0+255),f,b
  9523  001A18  A0D8               	btfss	status,0,c
  9524  001A1A  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
  9525  001A1C  0100               	movlb	0	; () banked
  9526  001A1E  2984               	incf	i2memcpy@n& (0+255),w,b
  9527  001A20  B4D8               	btfsc	status,2,c
  9528  001A22  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
  9529  001A24  B4D8               	btfsc	status,2,c
  9530                           
  9531                           ; BSR set to: 0
  9532                           
  9533                           ; BSR set to: 0
  9534                           ;	Return value of i2_memcpy is never used
  9535  001A26  0012               	return	
  9536  001A28  D7E2               	goto	i2l5197
  9537  001A2A                     __end_ofi2_memcpy:
  9538                           	opt stack 0
  9539                           pclatu	equ	0xFFB
  9540                           pclath	equ	0xFFA
  9541                           tblptru	equ	0xFF8
  9542                           tblptrh	equ	0xFF7
  9543                           tblptrl	equ	0xFF6
  9544                           tablat	equ	0xFF5
  9545                           prodh	equ	0xFF4
  9546                           prodl	equ	0xFF3
  9547                           intcon	equ	0xFF2
  9548                           intcon2	equ	0xFF1
  9549                           postinc0	equ	0xFEE
  9550                           fsr0h	equ	0xFEA
  9551                           fsr0l	equ	0xFE9
  9552                           wreg	equ	0xFE8
  9553                           indf1	equ	0xFE7
  9554                           postdec1	equ	0xFE5
  9555                           fsr1h	equ	0xFE2
  9556                           fsr1l	equ	0xFE1
  9557                           bsr	equ	0xFE0
  9558                           indf2	equ	0xFDF
  9559                           postinc2	equ	0xFDE
  9560                           postdec2	equ	0xFDD
  9561                           fsr2h	equ	0xFDA
  9562                           fsr2l	equ	0xFD9
  9563                           status	equ	0xFD8
  9564                           
  9565 ;; *************** function _SensorValues *****************
  9566 ;; Defined at:
  9567 ;;		line 70 in file "../src/interrupts.c"
  9568 ;; Parameters:    Size  Location     Type
  9569 ;;		None
  9570 ;; Auto vars:     Size  Location     Type
  9571 ;;		None
  9572 ;; Return value:  Size  Location     Type
  9573 ;;                  2    0[BANK0 ] PTR unsigned char 
  9574 ;; Registers used:
  9575 ;;		wreg, status,2, status,0
  9576 ;; Tracked objects:
  9577 ;;		On entry : 0/0
  9578 ;;		On exit  : 0/0
  9579 ;;		Unchanged: 0/0
  9580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9581 ;;      Params:         0       2       0       0       0
  9582 ;;      Locals:         0       0       0       0       0
  9583 ;;      Temps:          0       1       0       0       0
  9584 ;;      Totals:         0       3       0       0       0
  9585 ;;Total ram usage:        3 bytes
  9586 ;; Hardware stack levels used:    1
  9587 ;; This function calls:
  9588 ;;		Nothing
  9589 ;; This function is called by:
  9590 ;;		_i2c_int_handler
  9591 ;; This function uses a non-reentrant model
  9592 ;;
  9593                           
  9594                           	psect	text55
  9595  001CA6                     __ptext55:
  9596                           	opt stack 0
  9597  001CA6                     _SensorValues:
  9598                           	opt stack 19
  9599                           
  9600                           ;interrupts.c: 71: ADCArray[0] = adc_index + messages_lost - 1;
  9601                           
  9602                           ; BSR set to: 0
  9603                           ;incstack = 0
  9604  001CA6  502D               	movf	_adc_index,w,c
  9605  001CA8  2433               	addwf	_messages_lost,w,c
  9606  001CAA  0100               	movlb	0	; () banked
  9607  001CAC  6F82               	movwf	??_SensorValues& (0+255),b
  9608  001CAE  0100               	movlb	0	; () banked
  9609  001CB0  0582               	decf	??_SensorValues& (0+255),w,b
  9610  001CB2  0100               	movlb	0	; () banked
  9611  001CB4  0100               	movlb	0	; () banked
  9612  001CB6  6FD4               	movwf	_ADCArray& (0+255),b
  9613                           
  9614                           ; BSR set to: 0
  9615                           ;interrupts.c: 73: adc_index = 1;
  9616  001CB8  0E00               	movlw	0
  9617  001CBA  6E2E               	movwf	_adc_index+1,c
  9618  001CBC  0E01               	movlw	1
  9619  001CBE  6E2D               	movwf	_adc_index,c
  9620                           
  9621                           ; BSR set to: 0
  9622                           ;interrupts.c: 74: messages_lost = 0;
  9623  001CC0  0E00               	movlw	0
  9624  001CC2  6E34               	movwf	_messages_lost+1,c
  9625  001CC4  0E00               	movlw	0
  9626  001CC6  6E33               	movwf	_messages_lost,c
  9627                           
  9628                           ;interrupts.c: 75: return ADCArray;
  9629  001CC8  0100               	movlb	0	; () banked
  9630  001CCA  0E00               	movlw	high _ADCArray
  9631  001CCC  0100               	movlb	0	; () banked
  9632  001CCE  0100               	movlb	0	; () banked
  9633  001CD0  6F81               	movwf	(?_SensorValues+1)& (0+255),b
  9634  001CD2  0100               	movlb	0	; () banked
  9635  001CD4  0ED4               	movlw	low _ADCArray
  9636  001CD6  0100               	movlb	0	; () banked
  9637  001CD8  0100               	movlb	0	; () banked
  9638  001CDA  6F80               	movwf	?_SensorValues& (0+255),b
  9639  001CDC  0012               	return	
  9640  001CDE                     __end_of_SensorValues:
  9641                           	opt stack 0
  9642                           pclatu	equ	0xFFB
  9643                           pclath	equ	0xFFA
  9644                           tblptru	equ	0xFF8
  9645                           tblptrh	equ	0xFF7
  9646                           tblptrl	equ	0xFF6
  9647                           tablat	equ	0xFF5
  9648                           prodh	equ	0xFF4
  9649                           prodl	equ	0xFF3
  9650                           intcon	equ	0xFF2
  9651                           intcon2	equ	0xFF1
  9652                           postinc0	equ	0xFEE
  9653                           fsr0h	equ	0xFEA
  9654                           fsr0l	equ	0xFE9
  9655                           wreg	equ	0xFE8
  9656                           indf1	equ	0xFE7
  9657                           postdec1	equ	0xFE5
  9658                           fsr1h	equ	0xFE2
  9659                           fsr1l	equ	0xFE1
  9660                           bsr	equ	0xFE0
  9661                           indf2	equ	0xFDF
  9662                           postinc2	equ	0xFDE
  9663                           postdec2	equ	0xFDD
  9664                           fsr2h	equ	0xFDA
  9665                           fsr2l	equ	0xFD9
  9666                           status	equ	0xFD8
  9667                           
  9668 ;; *************** function _ReadADC *****************
  9669 ;; Defined at:
  9670 ;;		line 24 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcread.c"
  9671 ;; Parameters:    Size  Location     Type
  9672 ;;		None
  9673 ;; Auto vars:     Size  Location     Type
  9674 ;;		None
  9675 ;; Return value:  Size  Location     Type
  9676 ;;                  2    0[BANK0 ] int 
  9677 ;; Registers used:
  9678 ;;		wreg, status,2
  9679 ;; Tracked objects:
  9680 ;;		On entry : 0/0
  9681 ;;		On exit  : 0/0
  9682 ;;		Unchanged: 0/0
  9683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9684 ;;      Params:         0       2       0       0       0
  9685 ;;      Locals:         0       0       0       0       0
  9686 ;;      Temps:          0       0       0       0       0
  9687 ;;      Totals:         0       2       0       0       0
  9688 ;;Total ram usage:        2 bytes
  9689 ;; Hardware stack levels used:    1
  9690 ;; This function calls:
  9691 ;;		Nothing
  9692 ;; This function is called by:
  9693 ;;		_InterruptHandlerHigh
  9694 ;; This function uses a non-reentrant model
  9695 ;;
  9696                           
  9697                           	psect	text56
  9698  001F90                     __ptext56:
  9699                           	opt stack 0
  9700  001F90                     _ReadADC:
  9701                           	opt stack 20
  9702                           
  9703                           ; BSR set to: 0
  9704                           ;incstack = 0
  9705  001F90  50C4               	movf	4036,w,c	;volatile
  9706  001F92  0100               	movlb	0	; () banked
  9707  001F94  0100               	movlb	0	; () banked
  9708  001F96  6F81               	movwf	(?_ReadADC+1)& (0+255),b
  9709  001F98  50C3               	movf	4035,w,c	;volatile
  9710  001F9A  0100               	movlb	0	; () banked
  9711  001F9C  6F80               	movwf	?_ReadADC& (0+255),b
  9712  001F9E  0012               	return	
  9713  001FA0                     __end_of_ReadADC:
  9714                           	opt stack 0
  9715  0000                     pclatu	equ	0xFFB
  9716                           pclath	equ	0xFFA
  9717                           tblptru	equ	0xFF8
  9718                           tblptrh	equ	0xFF7
  9719                           tblptrl	equ	0xFF6
  9720                           tablat	equ	0xFF5
  9721                           prodh	equ	0xFF4
  9722                           prodl	equ	0xFF3
  9723                           intcon	equ	0xFF2
  9724                           intcon2	equ	0xFF1
  9725                           postinc0	equ	0xFEE
  9726                           fsr0h	equ	0xFEA
  9727                           fsr0l	equ	0xFE9
  9728                           wreg	equ	0xFE8
  9729                           indf1	equ	0xFE7
  9730                           postdec1	equ	0xFE5
  9731                           fsr1h	equ	0xFE2
  9732                           fsr1l	equ	0xFE1
  9733                           bsr	equ	0xFE0
  9734                           indf2	equ	0xFDF
  9735                           postinc2	equ	0xFDE
  9736                           postdec2	equ	0xFDD
  9737                           fsr2h	equ	0xFDA
  9738                           fsr2l	equ	0xFD9
  9739                           status	equ	0xFD8
  9740                           pclatu	equ	0xFFB
  9741                           pclath	equ	0xFFA
  9742                           tblptru	equ	0xFF8
  9743                           tblptrh	equ	0xFF7
  9744                           tblptrl	equ	0xFF6
  9745                           tablat	equ	0xFF5
  9746                           prodh	equ	0xFF4
  9747                           prodl	equ	0xFF3
  9748                           intcon	equ	0xFF2
  9749                           intcon2	equ	0xFF1
  9750                           postinc0	equ	0xFEE
  9751                           fsr0h	equ	0xFEA
  9752                           fsr0l	equ	0xFE9
  9753                           wreg	equ	0xFE8
  9754                           indf1	equ	0xFE7
  9755                           postdec1	equ	0xFE5
  9756                           fsr1h	equ	0xFE2
  9757                           fsr1l	equ	0xFE1
  9758                           bsr	equ	0xFE0
  9759                           indf2	equ	0xFDF
  9760                           postinc2	equ	0xFDE
  9761                           postdec2	equ	0xFDD
  9762                           fsr2h	equ	0xFDA
  9763                           fsr2l	equ	0xFD9
  9764                           status	equ	0xFD8
  9765                           
  9766                           	psect	param0
  9767  0000                     pclatu	equ	0xFFB
  9768                           pclath	equ	0xFFA
  9769                           tblptru	equ	0xFF8
  9770                           tblptrh	equ	0xFF7
  9771                           tblptrl	equ	0xFF6
  9772                           tablat	equ	0xFF5
  9773                           prodh	equ	0xFF4
  9774                           prodl	equ	0xFF3
  9775                           intcon	equ	0xFF2
  9776                           intcon2	equ	0xFF1
  9777                           postinc0	equ	0xFEE
  9778                           fsr0h	equ	0xFEA
  9779                           fsr0l	equ	0xFE9
  9780                           wreg	equ	0xFE8
  9781                           indf1	equ	0xFE7
  9782                           postdec1	equ	0xFE5
  9783                           fsr1h	equ	0xFE2
  9784                           fsr1l	equ	0xFE1
  9785                           bsr	equ	0xFE0
  9786                           indf2	equ	0xFDF
  9787                           postinc2	equ	0xFDE
  9788                           postdec2	equ	0xFDD
  9789                           fsr2h	equ	0xFDA
  9790                           fsr2l	equ	0xFD9
  9791                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        37
    BSS         291
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     44      98
    BANK0           128     58     119
    BANK1           256     38     201
    BANK2           256     83     137
    BANK3           256      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK2[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    i2c_q	PTR struct i2c_queue size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK2[11]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK2[11]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> main@msgbuffer(BANK2[11]), main@t0thread_data(BANK2[2]), main@t1thread_data(BANK2[2]), FromMainHigh_MQ(BANK2[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> main@msgbuffer(BANK2[11]), main@t0thread_data(BANK2[2]), main@t1thread_data(BANK2[2]), FromMainHigh_MQ(BANK2[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> NULL(NULL[0]), 

    isEmpty@queue.elements	PTR unsigned char  size(2) Largest target is 0

    getQueue@queue.elements	PTR unsigned char  size(2) Largest target is 0

    putQueue@queue.elements	PTR unsigned char  size(2) Largest target is 0

    S181i2c_queue$elements	PTR unsigned char  size(2) Largest target is 0

    createQueue@queue.elements	PTR unsigned char  size(2) Largest target is 0

    my_i2c_master@ic_ptr	PTR struct __i2c_master_comm size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t0thread_data(BANK2[2]), main@t1thread_data(BANK2[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 3
		 -> i2c_int_handler@error_buf(BANK0[3]), NULL(NULL[0]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK2[11]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), NULL(NULL[0]), 

    send_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), main@t0thread_data(BANK2[2]), main@t1thread_data(BANK2[2]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> NULL(NULL[0]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK2[28]), 

    sp__SensorValues	PTR unsigned char  size(2) Largest target is 10
		 -> ADCArray(BANK0[10]), 

    i2c_int_handler@msgbuffer	PTR unsigned char  size(2) Largest target is 10
		 -> ADCArray(BANK0[10]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 10
		 -> ADCArray(BANK0[10]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK2[28]), NULL(NULL[0]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 28
		 -> main@uc(BANK2[28]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 28
		 -> main@uc(BANK2[28]), NULL(NULL[0]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK2[2]), 

    init_timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK2[2]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_send_int_handler->_WriteUSART
    _uart_recv_int_handler->i1_ToMainLow_sendmsg
    i1_ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _timer1_int_handler->_ReadTimer1
    _timer1_int_handler->_WriteTimer1

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_WriteTimer0
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer0_lthread
    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _timer0_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _init_queues->_init_queue
    _init_ADC->_OpenADC
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                85    85      0   21132
                                             36 BANK1      2     2      0
                                              0 BANK2     83    83      0
                         _OpenTimer0
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                  _ToMainLow_sendmsg
                            ___awdiv
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                    _i2c_master_recv
                           _init_ADC
                           _init_i2c
                        _init_queues
                _init_timer0_lthread
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     432
                                              0 BANK1      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    3641
                                             26 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8    3641
                                             26 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     372
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2834
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2     108
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2     108
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer0_lthread                                  2     0      2     108
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     500
                                              4 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     500
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2     108
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             4     4      0     374
                                              5 BANK1      4     4      0
                         _ConvertADC
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     371
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_master_recv                                      4     2      2     247
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     401
                                              6 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     370
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     599
                                              0 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_sendmsg                                    4     1      3    2764
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2433
                                             10 BANK1     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2851
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2851
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2604
                                             10 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     867
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     387
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    3372
                                             27 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
              _uart_send_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_send_int_handler                                1     1      0      31
                                              1 COMRAM     1     1      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (7) _WriteUSART                                           1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    3213
                                             26 COMRAM     1     1      0
                          _ReadUSART
                    _uart_recv_state
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) i1_ToMainLow_sendmsg                                  4     1      3    2919
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2547
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     796
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _uart_recv_state                                      3     3      0     279
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0     128
                                              4 COMRAM     3     3      0
                         _ReadTimer1
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               18    18      0    3965
                                             40 BANK0     18    18      0
                            _ReadADC
                    _i2c_int_handler
                 _timer0_int_handler
                       i2_ConvertADC
 ---------------------------------------------------------------------------------
 (11) i2_ConvertADC                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  7     7      0     176
                                              4 BANK0      1     1      0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     176
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    14    14      0    3755
                                             26 BANK0     14    14      0
                       _SensorValues
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (12) _start_i2c_slave_reply                               5     3      2     170
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    2902
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2347
                                             10 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     796
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (12) _SensorValues                                        3     1      2       0
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (11) _ReadADC                                             2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_sendmsg
     _send_msg
       _memcpy
   ___awdiv
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _i2c_master_recv
   _init_ADC
     _ConvertADC
     _OpenADC
   _init_i2c
   _init_queues
     _init_queue
   _init_timer0_lthread
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _uart_recv_state
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_send_int_handler
     _WriteUSART

 _InterruptHandlerHigh (ROOT)
   _ReadADC
   _i2c_int_handler
     _SensorValues
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
     _start_i2c_slave_reply
   _timer0_int_handler
     _WriteTimer0
   i2_ConvertADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     53      89       8       53.5%
BITBANK1           100      0       0       5        0.0%
BANK1              100     26      C9       6       78.5%
BITBANK0            80      0       0       3        0.0%
BANK0               80     3A      77       4       93.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2C      62       1       77.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     22B      11        0.0%
DATA                 0      0     22B      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Mar 24 21:37:15 2014

                main@uthread_data 0201                                 _i 00CF  
                               _w 0051          _MQ_Main_Willing_to_block 00D3  
                     _SSPSTATbits 000FC7         __end_of_ToMainLow_recvmsg 1C24  
                    ___awdiv@sign 01A9                                bsr 000FE0  
       __end_of_ToMainLow_sendmsg 1D80                      __CFG_CP0$OFF 000000  
                             l374 072C                               l840 156A  
                             l833 1538                               l763 16A0  
                             l837 1558                               l838 155A  
                             l839 1568                               l784 1E70  
                             l785 1E72              __size_of_WriteTimer0 0012  
            __size_of_WriteTimer1 0012                    _FromMainLow_MQ 0101  
                             wreg 000FE8                      __CFG_IESO$ON 000000  
                    ?_in_high_int 01A3                  ??_init_uart_recv 01A5  
                 ReadTimer1@timer 0003                       main@average 020E  
                            l1077 1EFE                              l1389 1616  
                            l5121 0CBE                              l5113 0C80  
                            l5131 0D0C                              l5123 0CC6  
                            l5107 0C52                              l5119 0CAC  
                            l5135 0D20                              l5151 15CE  
                            l4505 0E74                              l5139 0D38  
                            l4611 1302                              l4603 12D0  
                            l5155 1602                              l5147 15B4  
                            l4437 17E6                              l5149 15C6  
                            l4455 0FF8                              l4711 0848  
                            l4625 1BD2                              l4475 19B4  
                            l4723 08DC                              l4715 0878  
                            l4469 1990                              l4581 1B8E  
                            l4573 1B6C                              l4725 092E  
                            l4717 089E                              l4751 153A  
                            l4743 1524                              l4489 0DAE  
                            l4729 0980                              l4595 129E  
                            l4685 06DA                              l4677 0698  
                            l4695 076E                              l4687 0732  
                            l4699 07A4                              _LATB 000F8A  
                            u3540 1310                              u4337 1F00  
                            u3546 1312                              i1l93 0B40  
                 _FromMainHigh_MQ 0253                     __CFG_FCMEN$ON 000000  
                            _add1 0047                              _back 0055  
                            _data 0048            ?_block_on_To_msgqueues 0001  
                            _main 05E0                              _left 005B  
                            _mode 004A                              _slew 004D  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            indf1 000FE7                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            _stop 0052                       main@msgtype 0219  
                      i1_send_msg 132C                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
           handle_start@data_read 0080                              start 00C2  
                   __CFG_FOSC2$ON 000000                        i2_send_msg 10A0  
       ToMainHigh_recvmsg@msgtype 01BB                   __end_of_ReadADC 1FA0  
                  send_msg@length 01AF                   __end_of_OpenADC 16A4  
     __size_of_timer0_int_handler 0036                       _Delay1KTCYx 1EFA  
                           ?_main 0001                   __end_of___awdiv 0D42  
    __size_ofi1_ToMainLow_sendmsg 0026                             _T0CON 000FD5  
                 ___awdiv@divisor 01A5                   __end_of___lwmod 1620  
                      i1memcpy@d1 0001                             i1l508 007C  
                           i2l153 1438                             i2l163 0462  
                           i2l165 017C                             i2l191 03E6  
                           i2l183 02F4                             i2l169 01BA  
                           i1l851 1ED2                             i2l197 0474  
                      i1memcpy@s1 0003                   ___awdiv@counter 01A8  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR1H 000FCF  
                           _TMR0L 000FD6                             _TMR1L 000FCE  
                           _SPBRG 000FAF                             _TRISB 000F93  
                           _TXREG 000FAD                             _TXSTA 000FAC  
                           _i2c_q 0031                        i2memcpy@d1 0080  
                      i2memcpy@s1 0082                      ?_init_queues 0001  
                 __end_of_in_main 1BE2                             _left2 005F  
    i2c_master_recv@slave_address 01A4        ToMainLow_recvmsg@maxlength 01BF  
                           _right 005D                   _timer2_extender 0050  
                           main@i 0211           timer0_lthread@msgbuffer 01C3  
                      _ConvertADC 1FBA           i2c_configure_slave@addr 01A3  
                           tablat 000FF5                             status 000FD8  
                __end_ofi1_memcpy 1CA6                  __end_ofi2_memcpy 1A2A  
               ??_uart_recv_state 0001                    WriteUSART@data 0001  
                 __initialization 1724                      __end_of_main 09A0  
                      _ReadTimer1 1F6C       __size_of_timer1_int_handler 0034  
      __size_of_ToMainLow_recvmsg 0042        __size_of_ToMainLow_sendmsg 0036  
   __size_of_FromMainHigh_sendmsg 0036                            ??_main 01C7  
                 send_msg@msgtype 01B0                     __activetblptr 000002  
                 send_msg@tlength 01B4              __end_of_handle_start 1472  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                            _ADRESH 000FC4  
                          _ADRESL 000FC3                  ___awdiv@dividend 01A3  
         ??_uart_recv_int_handler 001B                            i1l4205 1F1E  
                          i1l4163 09C6                            i1l4175 0A4C  
                          i1l4159 09A6                            i1l4185 0B84  
                          i1l4177 0A64                            i1l4169 09E6  
                          i1l4193 0BCC                            i1l4179 0AD4  
                          i1l5227 1364                            i1l5247 1E2C  
                          i1l5193 1C94                            i1l5265 0070  
                          i1l5187 1C78                            i1l5259 0066  
                      _OpenTimer0 1E4C                            i2l4221 1224  
                  __CFG_WDTEN$OFF 000000                            i2l4217 11BA  
                          i2l4321 034E                            i2l5203 1A12  
                          i2l4323 037E                            i2l4237 144E  
                          i2l4261 0172                            i2l4239 1460  
                          i2l4327 0390                            i2l4255 015A  
                          i2l4361 04C0                            i2l4281 020C  
                          i2l5171 10FC                            i2l4355 0478  
                          i2l4291 023C                            i2l4349 043C  
                          i2l4375 058C                            i2l4367 0504  
                          i2l4279 01EC                            i2l4297 024E  
                          i2l4299 027C                            i2l5197 19EE  
                          i2l4837 0EB2                            i2l4847 0EC4  
                          i2l4865 0F42       __end_of_i2c_configure_slave 1E9E  
              __size_of_ReadUSART 001E                            _OSCCON 000FD3  
                          _SPBRGH 000FB0                            _SSPADD 000FC8  
              _sendingPlaceHolder 0053                            _SSPBUF 000FC9  
  __size_of_start_i2c_slave_reply 00D6                       ?i1_send_msg 000B  
                       ??_ReadADC 0082     __end_of_start_i2c_slave_reply 127A  
              timer0_lthread@tptr 01BD                         ??_OpenADC 01A5  
                     ?i2_send_msg 008A                    __CFG_XINST$OFF 000000  
              __size_of_OpenUSART 0092                         ??___awdiv 01A7  
                 _i2c_int_handler 00C6                   _i2c_master_recv 1472  
                __end_of_init_ADC 1B58                  OpenTimer0@config 01A3  
                          _ic_ptr 0061                         ??___lwmod 01A7  
                   main@msgbuffer 0203                  __end_of_init_i2c 1ACC  
                          _length 0049                            _memcpy 196E  
                          clear_0 172A                            clear_1 1736  
                          clear_2 1742                            clear_3 174E  
                ___awdiv@quotient 01AA                            _right2 0060  
                          _uc_ptr 00F5                            main@ic 0237  
                          _status 004E                            main@uc 021B  
                __end_of_recv_msg 0E78       start_i2c_slave_reply@length 0084  
                       ??_in_main 01A9                  __end_of_send_msg 10A0  
                    __pdataCOMRAM 0053           i2c_int_handler@i2c_data 00A4  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                       init_queue@i 01A6  
        ToMainLow_recvmsg@msgtype 01BB              __size_of_in_high_int 0012  
                     ?_ConvertADC 0001                   __CFG_FOSC$HSPLL 000000  
                      __accesstop 0080           __end_of__initialization 1794  
      __end_of_ToMainHigh_recvmsg 1C66        __end_of_ToMainHigh_sendmsg 1DEC  
  __size_of_uart_send_int_handler 0080       __end_of_init_timer0_lthread 1F48  
   __end_of_uart_send_int_handler 1724               uart_recv_state@byte 0003  
     __end_of_init_timer1_lthread 1F36                        _WriteUSART 1F10  
                  __pcstackCOMRAM 0001                      __pidataBANK0 1EE2  
                     ?_ReadTimer1 0001                __size_of_check_msg 0036  
               __end_of_ReadUSART 1EE2               __size_ofi1_send_msg 00AA  
                       ?i1_memcpy 0001     __size_of_InterruptHandlerHigh 0F94  
     __end_of_InterruptHandlerLow 00C2                         ?i2_memcpy 0080  
                   _ToMainHigh_MQ 0137               __size_ofi2_send_msg 0104  
            timer1_lthread@length 01C1                     ReadUSART@data 0001  
               __end_of_OpenUSART 1596                     check_msg@qptr 01A3  
            timer1_lthread@retval 01C6           ??_block_on_To_msgqueues 01A9  
            __size_of_init_queues 0072                        __pbssBANK0 00BA  
                      __pbssBANK1 0100                        __pbssBANK2 0253  
                     ?_OpenTimer0 0001                        __pnvCOMRAM 0061  
             i1_ToMainLow_sendmsg 1E9E           __end_of_i2c_int_handler 05E0  
         __end_of_i2c_master_recv 1504                timer1_lthread@tptr 01BD  
               recv_msg@maxlength 01AF                   recv_msg@msgtype 01B0  
                 recv_msg@tlength 01B7             __size_of_handle_start 009C  
                    ?_Delay1KTCYx 0001                  WriteTimer0@timer 0082  
                         ?_memcpy 01A3                  WriteTimer1@timer 0003  
                   ??_WriteTimer0 0082                     ??_WriteTimer1 0003  
             __size_of_ConvertADC 0004           __size_of_timer0_lthread 0072  
            ?i1_ToMainLow_sendmsg 0017           __size_of_timer1_lthread 0072  
                   ?_SensorValues 0080                        ??i1_memcpy 0007  
                      ??i2_memcpy 0086                  i1send_msg@length 000D  
                         _SSP1ADD 000FC8                           _SSPCON1 000FC6  
                         _SSPCON2 000FC5                   _uart_recv_state 09A0  
                         _SSPSTAT 000FC7               __size_of_ReadTimer1 0012  
               __end_of_check_msg 1D4A                         ?_init_ADC 0001  
                       ?_init_i2c 01A3                           _ReadADC 1F90  
                       ?_recv_msg 01AD                           _OpenADC 1620  
                      _in_low_int 1B58                      _handle_start 13D6  
                         __Hparam 0000                         ?_send_msg 01AD  
                         __Lparam 0000        __end_of_timer0_int_handler 1DB6  
                     ?_WriteUSART 0001                  init_ADC@ADCValue 01AA  
                init_uart_recv@uc 01A3                           ___awdiv 0C0C  
                         ___lwmod 1596                   __CFG_STVREN$OFF 000000  
                         __pcinit 1724                   __size_of_memcpy 005E  
                      _init_queue 179E                           __ramtop 0400  
           ??i1_ToMainLow_sendmsg 001A               __size_of_OpenTimer0 002A  
                         __ptext0 05E0                           __ptext1 1ACC  
                         __ptext2 1818                           __ptext3 188A  
                         __ptext4 1596                           __ptext5 1CDE  
                         __ptext6 1A2A                           __ptext7 1F24  
                         __ptext8 1F36                           __ptext9 18FC  
                  ??_SensorValues 0082                         _T0CONbits 000FD5  
                         _in_main 1B9E               __end_of_WriteTimer0 1F90  
             __end_of_WriteTimer1 1F6C                     _messages_lost 0033  
                  OpenADC@config2 01A3                    main@movingtest 0210  
                  __pintcode_body 0E78              end_of_initialization 1794  
         timer1_lthread@msgbuffer 01C3      __end_of_FromMainHigh_sendmsg 1D14  
                   ?i2_ConvertADC 0001                        ??_init_ADC 01A8  
  __size_of_uart_recv_int_handler 002C        FromMainHigh_sendmsg@length 01BC  
                         memcpy@d 01A9                           memcpy@n 01A7  
                         memcpy@s 01AB     __end_of_uart_recv_int_handler 1E4C  
                      ??_init_i2c 01A5       i2c_int_handler@data_written 00A2  
                   __Lmediumconst 0000                           int_func 0E78  
                    ??i1_send_msg 0011                     ?_uart_lthread 01A3  
         __size_of_init_uart_recv 0054                  ?_i2c_int_handler 0001  
                ?_i2c_master_recv 01A3                        ??_recv_msg 01B4  
                    ??i2_send_msg 0090                        ??_send_msg 01B3  
      __end_of_timer1_int_handler 1E20                         _RCSTAbits 000FAB  
                      _ticks_left 003D                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE         ToMainHigh_sendmsg@msgtype 0096  
                      _responding 0035           __end_of_uart_recv_state 0C0C  
              __end_ofi1_send_msg 13D6       FromMainHigh_sendmsg@msgtype 01B9  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
              __end_ofi2_send_msg 11A4               __size_of_WriteUSART 0014  
                  ??i2_ConvertADC 0080                      ??_ConvertADC 01A3  
                      _start_stop 003B          timer1_int_handler@result 0006  
                  ??_uart_lthread 01AB                         _TXSTAbits 000FAC  
                      main@length 021A                       ?_in_low_int 01A5  
           timer0_lthread@msgtype 01BF                  _arrayPlaceHolder 002F  
           _start_i2c_slave_reply 11A4      __size_of_i2c_configure_slave 0028  
                    ??_ReadTimer1 0003                _ToMainHigh_recvmsg 1C24  
                       i1memcpy@d 0007                _ToMainHigh_sendmsg 1DB6  
                       i1memcpy@n 0005                         i1memcpy@s 0009  
                   __pidataCOMRAM 1FA0                    _timer0_lthread 188A  
                     ?_init_queue 01A3                         i2memcpy@d 0086  
                     _WriteTimer0 1F7E                       _WriteTimer1 1F5A  
                       i2memcpy@n 0084                         i2memcpy@s 0088  
              __end_of_ConvertADC 1FBE                    _timer1_lthread 1818  
                  __end_of_memcpy 19CC                 _enable_interrupts 1FAE  
            __size_of_Delay1KTCYx 0016               ?_ToMainHigh_recvmsg 01BB  
        i2c_int_handler@data_read 00A7               ?_ToMainHigh_sendmsg 0096  
         i1ToMainLow_sendmsg@data 0018                ?_enable_interrupts 0001  
             start_initialization 1724                     ??_in_high_int 01A5  
                       _ReadUSART 1EC4                 __size_ofi1_memcpy 0040  
               __size_ofi2_memcpy 005E             i2c_int_handler@length 009B  
             ??_enable_interrupts 01A3                      ??_OpenTimer0 01A3  
  __size_of_block_on_To_msgqueues 00B2                __end_of_ReadTimer1 1F7E  
   __end_of_block_on_To_msgqueues 132C                         _OpenUSART 1504  
            __end_of_SensorValues 1CDE      __end_of_InterruptHandlerHigh 0F9C  
                      init_i2c@ic 01A3              ??_ToMainHigh_recvmsg 01BF  
            ??_ToMainHigh_sendmsg 0099             _uart_send_int_handler 16A4  
          __end_of_timer0_lthread 18FC          i2c_int_handler@error_buf 009F  
                     __pdataBANK0 00DE            __end_of_timer1_lthread 188A  
       __end_of_enable_interrupts 1FBA                          ??_memcpy 01A9  
           timer1_lthread@msgtype 01BF      __size_of_init_timer0_lthread 0012  
            _FromMainHigh_sendmsg 1CDE      __size_of_init_timer1_lthread 0012  
              __end_of_OpenTimer0 1E76          i2c_int_handler@msg_ready 00A6  
                ?_uart_recv_state 0001          i2c_int_handler@msgbuffer 009D  
                     __pbssCOMRAM 002D                        ?_ReadUSART 0001  
                   ??_init_queues 01A7                     __pcstackBANK0 0080  
                   __pcstackBANK1 01A3                     __pcstackBANK2 0200  
             __size_of_in_low_int 0046          start_i2c_slave_reply@msg 0080  
                       _adc_index 002D               __CFG_CCP2MX$DEFAULT 000000  
                 Delay1KTCYx@unit 01A3          ToMainLow_sendmsg@msgtype 01B9  
    __size_of_InterruptHandlerLow 00AA               __end_of_in_high_int 1F5A  
                      ?_OpenUSART 01A3             ToMainLow_recvmsg@data 01BD  
                    _ToMainLow_MQ 016D               __size_of_init_queue 007A  
                  _init_uart_recv 1A2A                          ?_ReadADC 0080  
                       _check_msg 1D14                         __pnvBANK0 00F5  
               __size_of_init_ADC 0046            ?_start_i2c_slave_reply 0080  
               __size_of_init_i2c 004E                 OpenADC@portconfig 01A4  
                        ?_OpenADC 01A3                      recv_msg@data 01B2  
                    ??_WriteUSART 0001                      recv_msg@qmsg 01B9  
                    recv_msg@slot 01B6                      recv_msg@qptr 01AD  
               __size_of_recv_msg 0136                         __pintcode 0008  
               __size_of_send_msg 0104                          ?___awdiv 01A3  
                 ?_timer0_lthread 01BD                          ?___lwmod 01A3  
            __end_ofi2_ConvertADC 1FC2                   ?_timer1_lthread 01BD  
           ?_FromMainHigh_sendmsg 01B9                       __pintcodelo 0018  
          ToMainHigh_recvmsg@data 01BD              __end_of_uart_lthread 1B12  
      i2c_int_handler@msg_to_send 00A5                          ?_in_main 01A7  
               WriteTimer0@timer0 0080                _timer0_int_handler 1D80  
               WriteTimer1@timer1 0001                          _ADCArray 00D4  
      i1ToMainLow_sendmsg@msgtype 0017                          _I2C_Recv 00BA  
                        _I2C_Send 00DE               uart_lthread@msgtype 01A5  
                        _ADCValue 0045           init_timer0_lthread@tptr 01A3  
           ToMainLow_sendmsg@data 01BA               ?_timer0_int_handler 0001  
              __end_of_WriteUSART 1F24                  uart_lthread@uptr 01A3  
          __end_of_init_uart_recv 1A7E               __end_of_init_queues 196E  
           i2c_master_recv@length 01A6                     OpenADC@config 01A7  
                        _LATBbits 000F8A                          _LATDbits 000F8C  
                      ?_check_msg 01A3                          _IPR1bits 000F9F  
                        _PIE1bits 000F9D                          i1u143_20 1DF4  
                        i1u143_26 1DF6                         _semaphore 0037  
                        _PIR1bits 000F9E                          i2u380_40 0ED0  
                 main@length_1452 0213                          i2u380_46 0ED2  
                        i2u293_40 1D88                          i2u293_46 1D8A  
          ?_uart_send_int_handler 0001            ToMainHigh_sendmsg@data 0097  
     __end_ofi1_ToMainLow_sendmsg 1EC4                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000                          _SSP1CON1 000FC6  
                        _SSP1CON2 000FC5              ??_timer0_int_handler 0084  
      __size_of_enable_interrupts 000C                 i1send_msg@msgtype 000E  
               i1send_msg@tlength 0012                        _ADCON0bits 000FC2  
            timer0_lthread@length 01C1                _timer1_int_handler 1DEC  
                        i1_memcpy 1C66              _InterruptHandlerHigh 0008  
                     ??_ReadUSART 0001                          i2_memcpy 19CC  
            timer0_lthread@retval 01C6                       _in_high_int 1F48  
                    send_msg@data 01B1               _i2c_configure_slave 1E76  
                       _sync_mode 004F                      send_msg@qmsg 01B7  
                    send_msg@slot 01B6                      send_msg@qptr 01AD  
                   _ticks_right_C 0043                       _INTCON2bits 000FF1  
           uart_lthread@msgbuffer 01A9                         copy_data0 1768  
                       copy_data1 1788             __size_of_SensorValues 0038  
             ?_timer1_int_handler 0001                   _i2cMstrMsgState 0100  
                 ?_init_uart_recv 01A3                       ??_OpenUSART 01A5  
                 OpenUSART@config 01A8                     _slave_address 004C  
                        __Hparam0 0000             _uart_recv_int_handler 1E20  
                    ??_in_low_int 01A7                  __size_of_ReadADC 0010  
                        __Lparam0 0000                  __size_of_OpenADC 0084  
            ?_i2c_configure_slave 0001            ??_FromMainHigh_sendmsg 01BC  
            ??_timer1_int_handler 0005                  __size_of___awdiv 0136  
        __size_of_i2c_int_handler 051A          __size_of_i2c_master_recv 0092  
                __size_of___lwmod 008A                      ??_init_queue 01A5  
                    ?_WriteTimer0 0080                      ?_WriteTimer1 0001  
        FromMainHigh_sendmsg@data 01BA           ToMainLow_sendmsg@length 01BC  
               main@t0thread_data 0217                      _SensorValues 1CA6  
           ?_InterruptHandlerHigh 0001                  __size_of_in_main 0044  
                     _forwardHalf 0057                       _forwardFull 00F3  
               i2send_msg@msgtype 008D       ToMainHigh_recvmsg@maxlength 01BF  
                     _forwardSlow 0059                 i2send_msg@tlength 0091  
         init_timer1_lthread@tptr 01A3                       _init_queues 18FC  
              __end_of_in_low_int 1B9E               my_i2c_master@ic_ptr 00D1  
                        __ptext10 179E                          __ptext11 1A7E  
                        __ptext20 1B58                          __ptext12 1B12  
                        __ptext21 1F48                          __ptext13 1620  
                        __ptext30 196E                          __ptext22 1D14  
                        __ptext14 1FBA                          __ptext31 1504  
                        __ptext23 1EFA                          __ptext15 1472  
                        __ptext40 09A0                          __ptext32 1E4C  
                        __ptext24 0C0C                          __ptext16 1E76  
                        __ptext41 1EC4                          __ptext25 1D4A  
                        __ptext17 1FAE                          __ptext50 11A4  
                        __ptext42 1DEC                          __ptext34 16A4  
                        __ptext26 0F9C                          __ptext18 127A  
                        __ptext51 13D6                          __ptext43 1F5A  
                        __ptext35 1F10                          __ptext27 1BE2  
                        __ptext19 1B9E                          __ptext52 1DB6  
                        __ptext44 1F6C                          __ptext36 1E20  
                        __ptext28 1C24                          __ptext53 10A0  
                        __ptext37 1E9E                          __ptext29 0D42  
                        __ptext54 19CC                          __ptext46 1FBE  
                        __ptext38 132C                          __ptext55 1CA6  
                        __ptext47 1D80                          __ptext39 1C66  
                        __ptext56 1F90                          __ptext48 1F7E  
                        __ptext49 00C6                      _SSP1CON1bits 000FC6  
                    _SSP1CON2bits 000FC5                    i1send_msg@data 000F  
       i1ToMainLow_sendmsg@length 001A                    i1send_msg@qmsg 0015  
                  i1send_msg@slot 0014                    i1send_msg@qptr 000B  
              uart_lthread@length 01A7               _init_timer0_lthread 1F36  
                        _init_ADC 1B12                          _init_i2c 1A7E  
             _init_timer1_lthread 1F24                     __size_of_main 03C0  
               main@t1thread_data 0215                       ??_check_msg 01A5  
              __end_of_init_queue 1818                          _recv_msg 0D42  
           ??_i2c_configure_slave 01A3             __size_ofi2_ConvertADC 0004  
                        _send_msg 0F9C                    init_queue@qptr 01A3  
           __size_of_uart_lthread 0046                     ??_Delay1KTCYx 01A3  
            ?_init_timer0_lthread 01A3                      _SSP1STATbits 000FC7  
             _InterruptHandlerLow 0018                      _ticks_left_C 003F  
            ?_init_timer1_lthread 01A3                       _OSCTUNEbits 000F9B  
                      _INTCONbits 000FF2                    OpenUSART@spbrg 01A3  
                        memcpy@d1 01A3                          memcpy@s1 01A5  
    i2c_int_handler@overrun_error 00A3                  i2send_msg@length 008C  
                        intlevel1 0000                          intlevel2 0000  
                    i2_ConvertADC 1FBE              ?_InterruptHandlerLow 0001  
                    _sensor_count 0039           ??_start_i2c_slave_reply 0082  
                ___lwmod@dividend 01A3            ?_uart_recv_int_handler 0001  
                    _uart_lthread 1ACC             _block_on_To_msgqueues 127A  
                   ?_handle_start 0001                  ??_timer0_lthread 01C5  
     __size_of_ToMainHigh_recvmsg 0042               i2c_master_recv@data 01A3  
     __size_of_ToMainHigh_sendmsg 0036                        _OSCCONbits 000FD3  
                ??_timer1_lthread 01C5          ToMainHigh_sendmsg@length 0099  
                     _ticks_right 0041             ??_init_timer0_lthread 01A5  
           ??_init_timer1_lthread 01A5            ??_InterruptHandlerHigh 00A8  
               _ToMainLow_recvmsg 1BE2                 _ToMainLow_sendmsg 1D4A  
                     _motor_state 004B                main@last_reg_recvd 0200  
                 ___lwmod@divisor 01A5                ?_ToMainLow_recvmsg 01BB  
             __end_of_Delay1KTCYx 1F10                 ??_i2c_int_handler 009A  
                 ___lwmod@counter 01A8                ?_ToMainLow_sendmsg 01B9  
               ??_i2c_master_recv 01A5                       _SSPCON1bits 000FC6  
                     _SSPCON2bits 000FC5                    i2send_msg@data 008E  
           ??_InterruptHandlerLow 001C               ??_ToMainLow_recvmsg 01BF  
                  i2send_msg@qmsg 0094                    i2send_msg@slot 0093  
                  i2send_msg@qptr 008A               ??_ToMainLow_sendmsg 01BC  
        __size_of_uart_recv_state 026C           ??_uart_send_int_handler 0002  
                  ??_handle_start 0080  InterruptHandlerHigh@pureADCValue 00B8  
                    _USART_Status 0046  



Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Sat Feb  8 14:29:15 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    76  0000                     
    77                           	psect	idataBANK0
    78  001BD4                     __pidataBANK0:
    79                           	opt stack 0
    80                           
    81                           ;initializer for _ADCValue
    82  001BD4  0002               	dw	2
    83  0000                     _ADCON0	set	4034
    84  0000                     _ADCON0bits	set	4034
    85  0000                     _ADCON1	set	4033
    86  0000                     _ADCON2	set	4032
    87  0000                     _ADRESH	set	4036
    88  0000                     _ADRESL	set	4035
    89  0000                     _INTCONbits	set	4082
    90  0000                     _IPR1bits	set	3999
    91  0000                     _LATB	set	3978
    92  0000                     _LATBbits	set	3978
    93  0000                     _OSCCON	set	4051
    94  0000                     _OSCCONbits	set	4051
    95  0000                     _OSCTUNEbits	set	3995
    96  0000                     _PIE1bits	set	3997
    97  0000                     _PIR1bits	set	3998
    98  0000                     _RCONbits	set	4048
    99  0000                     _RCREG	set	4014
   100  0000                     _RCSTA	set	4011
   101  0000                     _RCSTAbits	set	4011
   102  0000                     _SPBRG	set	4015
   103  0000                     _SPBRGH	set	4016
   104  0000                     _SSPADD	set	4040
   105  0000                     _SSPBUF	set	4041
   106  0000                     _SSPCON1	set	4038
   107  0000                     _SSPCON1bits	set	4038
   108  0000                     _SSPCON2	set	4037
   109  0000                     _SSPCON2bits	set	4037
   110  0000                     _SSPSTAT	set	4039
   111  0000                     _SSPSTATbits	set	4039
   112  0000                     _T1CON	set	4045
   113  0000                     _T1CONbits	set	4045
   114  0000                     _TMR0H	set	4055
   115  0000                     _TMR0L	set	4054
   116  0000                     _TMR1H	set	4047
   117  0000                     _TMR1L	set	4046
   118  0000                     _TRISB	set	3987
   119  0000                     _TRISCbits	set	3988
   120  0000                     _TXSTA	set	4012
   121  0000                     _TXSTAbits	set	4012
   122                           
   123                           	psect	nvCOMRAM
   124  00004D                     __pnvCOMRAM:
   125                           	opt stack 0
   126  00004D                     _uc_ptr:
   127                           	opt stack 0
   128  00004D                     	ds	2
   129                           
   130                           	psect	nvBANK0
   131  0000CD                     __pnvBANK0:
   132                           	opt stack 0
   133  0000CD                     _ic_ptr:
   134                           	opt stack 0
   135  0000CD                     	ds	2
   136                           
   137                           ; #config settings
   138  0000                     
   139                           	psect	cinit
   140  0018A8                     __pcinit:
   141                           	opt stack 0
   142  0018A8                     start_initialization:
   143                           	opt stack 0
   144  0018A8                     __initialization:
   145                           	opt stack 0
   146                           
   147                           ; Clear objects allocated to BANK2 (54 bytes)
   148  0018A8  EE02  F000         	lfsr	0,__pbssBANK2
   149  0018AC  0E36               	movlw	54
   150  0018AE                     clear_0:
   151  0018AE  6AEE               	clrf	postinc0,c
   152  0018B0  06E8               	decf	wreg,f,c
   153  0018B2  E1FD               	bnz	clear_0
   154                           
   155                           ; Clear objects allocated to BANK1 (162 bytes)
   156  0018B4  EE01  F000         	lfsr	0,__pbssBANK1
   157  0018B8  0EA2               	movlw	162
   158  0018BA                     clear_1:
   159  0018BA  6AEE               	clrf	postinc0,c
   160  0018BC  06E8               	decf	wreg,f,c
   161  0018BE  E1FD               	bnz	clear_1
   162                           
   163                           ; Clear objects allocated to COMRAM (2 bytes)
   164  0018C0  6A50               	clrf	(__pbssCOMRAM+1)& (0+255),c
   165  0018C2  6A4F               	clrf	__pbssCOMRAM& (0+255),c
   166                           
   167                           ; Initialize objects allocated to BANK0 (2 bytes)
   168                           ; load TBLPTR registers with __pidataBANK0
   169  0018C4  0ED4               	movlw	low __pidataBANK0
   170  0018C6  6EF6               	movwf	tblptrl,c
   171  0018C8  0E1B               	movlw	high __pidataBANK0
   172  0018CA  6EF7               	movwf	tblptrh,c
   173  0018CC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   174  0018CE  6EF8               	movwf	tblptru,c
   175  0018D0  0009               	tblrd		*+	;fetch initializer
   176  0018D2  CFF5 F0CF          	movff	tablat,__pdataBANK0
   177  0018D6  0009               	tblrd		*+	;fetch initializer
   178  0018D8  CFF5 F0D0          	movff	tablat,__pdataBANK0+1
   179  0018DC                     end_of_initialization:
   180                           	opt stack 0
   181  0018DC                     __end_of__initialization:
   182                           	opt stack 0
   183  0018DC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   184  0018DE  6EF8               	movwf	tblptru,c
   185  0018E0  0100               	movlb	0
   186  0018E2  EF7A  F003         	goto	_main	;jump to C main() function
   187                           tblptru	equ	0xFF8
   188                           tblptrh	equ	0xFF7
   189                           tblptrl	equ	0xFF6
   190                           tablat	equ	0xFF5
   191                           postinc0	equ	0xFEE
   192                           wreg	equ	0xFE8
   193                           
   194                           	psect	bssCOMRAM
   195  00004F                     __pbssCOMRAM:
   196                           	opt stack 0
   197  00004F                     _MQ_Main_Willing_to_block:
   198                           	opt stack 0
   199  00004F                     	ds	1
   200  000050                     _USART_Status:
   201                           	opt stack 0
   202  000050                     	ds	1
   203                           tblptru	equ	0xFF8
   204                           tblptrh	equ	0xFF7
   205                           tblptrl	equ	0xFF6
   206                           tablat	equ	0xFF5
   207                           postinc0	equ	0xFEE
   208                           wreg	equ	0xFE8
   209                           
   210                           	psect	dataBANK0
   211  0000CF                     __pdataBANK0:
   212                           	opt stack 0
   213  0000CF                     _ADCValue:
   214                           	opt stack 0
   215  0000CF                     	ds	2
   216                           tblptru	equ	0xFF8
   217                           tblptrh	equ	0xFF7
   218                           tblptrl	equ	0xFF6
   219                           tablat	equ	0xFF5
   220                           postinc0	equ	0xFEE
   221                           wreg	equ	0xFE8
   222                           
   223                           	psect	bssBANK1
   224  000100                     __pbssBANK1:
   225                           	opt stack 0
   226  000100                     _FromMainLow_MQ:
   227                           	opt stack 0
   228  000100                     	ds	54
   229  000136                     _ToMainHigh_MQ:
   230                           	opt stack 0
   231  000136                     	ds	54
   232  00016C                     _ToMainLow_MQ:
   233                           	opt stack 0
   234  00016C                     	ds	54
   235                           tblptru	equ	0xFF8
   236                           tblptrh	equ	0xFF7
   237                           tblptrl	equ	0xFF6
   238                           tablat	equ	0xFF5
   239                           postinc0	equ	0xFEE
   240                           wreg	equ	0xFE8
   241                           
   242                           	psect	bssBANK2
   243  000200                     __pbssBANK2:
   244                           	opt stack 0
   245  000200                     _FromMainHigh_MQ:
   246                           	opt stack 0
   247  000200                     	ds	54
   248                           tblptru	equ	0xFF8
   249                           tblptrh	equ	0xFF7
   250                           tblptrl	equ	0xFF6
   251                           tablat	equ	0xFF5
   252                           postinc0	equ	0xFEE
   253                           wreg	equ	0xFE8
   254                           
   255                           	psect	cstackBANK1
   256  0001A2                     __pcstackBANK1:
   257                           	opt stack 0
   258  0001A2                     main@msgbuffer:
   259                           	opt stack 0
   260                           
   261                           ; 11 bytes @ 0x0
   262  0001A2                     	ds	11
   263  0001AD                     main@uthread_data:
   264                           	opt stack 0
   265                           
   266                           ; 2 bytes @ 0xB
   267  0001AD                     	ds	2
   268  0001AF                     main@t0thread_data:
   269                           	opt stack 0
   270                           
   271                           ; 2 bytes @ 0xD
   272  0001AF                     	ds	2
   273  0001B1                     main@last_reg_recvd:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0xF
   277  0001B1                     	ds	1
   278  0001B2                     main@t1thread_data:
   279                           	opt stack 0
   280                           
   281                           ; 2 bytes @ 0x10
   282  0001B2                     	ds	2
   283  0001B4                     main@uc:
   284                           	opt stack 0
   285                           
   286                           ; 5 bytes @ 0x12
   287  0001B4                     	ds	5
   288  0001B9                     main@msgtype:
   289                           	opt stack 0
   290                           
   291                           ; 1 bytes @ 0x17
   292  0001B9                     	ds	1
   293  0001BA                     main@length:
   294                           	opt stack 0
   295                           
   296                           ; 1 bytes @ 0x18
   297  0001BA                     	ds	1
   298  0001BB                     main@ic:
   299                           	opt stack 0
   300                           
   301                           ; 28 bytes @ 0x19
   302  0001BB                     	ds	28
   303                           tblptru	equ	0xFF8
   304                           tblptrh	equ	0xFF7
   305                           tblptrl	equ	0xFF6
   306                           tablat	equ	0xFF5
   307                           postinc0	equ	0xFEE
   308                           wreg	equ	0xFE8
   309                           
   310                           	psect	cstackBANK0
   311  000080                     __pcstackBANK0:
   312                           	opt stack 0
   313  000080                     timer0_int_handler@length:
   314                           	opt stack 0
   315  000080                     i2c_int_handler@msgbuffer:
   316                           	opt stack 0
   317                           
   318                           ; 11 bytes @ 0x0
   319  000080                     	ds	2
   320  000082                     timer0_int_handler@msgtype:
   321                           	opt stack 0
   322                           
   323                           ; 2 bytes @ 0x2
   324  000082                     	ds	2
   325  000084                     timer0_int_handler@val:
   326                           	opt stack 0
   327                           
   328                           ; 2 bytes @ 0x4
   329  000084                     	ds	7
   330  00008B                     i2c_int_handler@length:
   331                           	opt stack 0
   332                           
   333                           ; 2 bytes @ 0xB
   334  00008B                     	ds	2
   335  00008D                     i2c_int_handler@error_buf:
   336                           	opt stack 0
   337                           
   338                           ; 3 bytes @ 0xD
   339  00008D                     	ds	3
   340  000090                     i2c_int_handler@data_written:
   341                           	opt stack 0
   342                           
   343                           ; 1 bytes @ 0x10
   344  000090                     	ds	1
   345  000091                     i2c_int_handler@overrun_error:
   346                           	opt stack 0
   347                           
   348                           ; 1 bytes @ 0x11
   349  000091                     	ds	1
   350  000092                     i2c_int_handler@i2c_data:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0x12
   354  000092                     	ds	1
   355  000093                     i2c_int_handler@msg_to_send:
   356                           	opt stack 0
   357                           
   358                           ; 1 bytes @ 0x13
   359  000093                     	ds	1
   360  000094                     i2c_int_handler@msg_ready:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x14
   364  000094                     	ds	1
   365  000095                     i2c_int_handler@data_read:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x15
   369  000095                     	ds	1
   370  000096                     ??_InterruptHandlerHigh:
   371                           
   372                           ; 0 bytes @ 0x16
   373  000096                     	ds	16
   374  0000A6                     InterruptHandlerHigh@pureADCValue:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0x26
   378  0000A6                     	ds	2
   379  0000A8                     ?_in_high_int:
   380                           	opt stack 0
   381  0000A8                     ?_returnADCValue:
   382                           	opt stack 0
   383  0000A8                     ?___lwmod:
   384                           	opt stack 0
   385  0000A8                     i2c_configure_slave@addr:
   386                           	opt stack 0
   387  0000A8                     OpenADC@config2:
   388                           	opt stack 0
   389  0000A8                     OpenTimer1@config:
   390                           	opt stack 0
   391  0000A8                     Delay1KTCYx@unit:
   392                           	opt stack 0
   393  0000A8                     uart_lthread@uptr:
   394                           	opt stack 0
   395  0000A8                     init_timer1_lthread@tptr:
   396                           	opt stack 0
   397  0000A8                     timer0_lthread@tptr:
   398                           	opt stack 0
   399  0000A8                     init_uart_recv@uc:
   400                           	opt stack 0
   401  0000A8                     start_i2c_slave_reply@msg:
   402                           	opt stack 0
   403  0000A8                     init_i2c@ic:
   404                           	opt stack 0
   405  0000A8                     init_queue@qptr:
   406                           	opt stack 0
   407  0000A8                     check_msg@qptr:
   408                           	opt stack 0
   409  0000A8                     OpenUSART@spbrg:
   410                           	opt stack 0
   411  0000A8                     ___lwmod@dividend:
   412                           	opt stack 0
   413  0000A8                     memcpy@d1:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0x28
   417  0000A8                     	ds	1
   418  0000A9                     OpenADC@portconfig:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0x29
   422  0000A9                     	ds	1
   423  0000AA                     ??_OpenADC:
   424  0000AA                     ??_OpenUSART:
   425  0000AA                     ??_start_i2c_slave_reply:
   426  0000AA                     ??_init_queue:
   427  0000AA                     ??_check_msg:
   428  0000AA                     ?_in_low_int:
   429                           	opt stack 0
   430  0000AA                     uart_lthread@msgtype:
   431                           	opt stack 0
   432  0000AA                     timer0_lthread@msgtype:
   433                           	opt stack 0
   434  0000AA                     returnADCValue@temp:
   435                           	opt stack 0
   436  0000AA                     ___lwmod@divisor:
   437                           	opt stack 0
   438  0000AA                     memcpy@s1:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0x2A
   442  0000AA                     	ds	1
   443  0000AB                     init_queue@i:
   444                           	opt stack 0
   445                           
   446                           ; 1 bytes @ 0x2B
   447  0000AB                     	ds	1
   448  0000AC                     ??_init_queues:
   449  0000AC                     ??___lwmod:
   450  0000AC                     ?_in_main:
   451                           	opt stack 0
   452  0000AC                     start_i2c_slave_reply@length:
   453                           	opt stack 0
   454  0000AC                     OpenADC@config:
   455                           	opt stack 0
   456  0000AC                     uart_lthread@length:
   457                           	opt stack 0
   458  0000AC                     timer0_lthread@length:
   459                           	opt stack 0
   460  0000AC                     memcpy@n:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x2C
   464  0000AC                     	ds	1
   465  0000AD                     ??_initADC:
   466  0000AD                     OpenUSART@config:
   467                           	opt stack 0
   468  0000AD                     ___lwmod@counter:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0x2D
   472  0000AD                     	ds	1
   473  0000AE                     ??_block_on_To_msgqueues:
   474  0000AE                     uart_lthread@msgbuffer:
   475                           	opt stack 0
   476  0000AE                     timer0_lthread@msgbuffer:
   477                           	opt stack 0
   478  0000AE                     memcpy@d:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x2E
   482  0000AE                     	ds	1
   483  0000AF                     initADC@ADCValue:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0x2F
   487  0000AF                     	ds	1
   488  0000B0                     timer0_lthread@msgval:
   489                           	opt stack 0
   490  0000B0                     memcpy@s:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x30
   494  0000B0                     	ds	2
   495  0000B2                     send_msg@qptr:
   496                           	opt stack 0
   497  0000B2                     recv_msg@qptr:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x32
   501  0000B2                     	ds	2
   502  0000B4                     send_msg@length:
   503                           	opt stack 0
   504  0000B4                     recv_msg@maxlength:
   505                           	opt stack 0
   506                           
   507                           ; 1 bytes @ 0x34
   508  0000B4                     	ds	1
   509  0000B5                     send_msg@msgtype:
   510                           	opt stack 0
   511  0000B5                     recv_msg@msgtype:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0x35
   515  0000B5                     	ds	1
   516  0000B6                     send_msg@data:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x36
   520  0000B6                     	ds	1
   521  0000B7                     recv_msg@data:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x37
   525  0000B7                     	ds	1
   526  0000B8                     ??_send_msg:
   527                           
   528                           ; 0 bytes @ 0x38
   529  0000B8                     	ds	1
   530  0000B9                     ??_recv_msg:
   531  0000B9                     send_msg@tlength:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x39
   535  0000B9                     	ds	2
   536  0000BB                     send_msg@slot:
   537                           	opt stack 0
   538  0000BB                     recv_msg@slot:
   539                           	opt stack 0
   540                           
   541                           ; 1 bytes @ 0x3B
   542  0000BB                     	ds	1
   543  0000BC                     send_msg@qmsg:
   544                           	opt stack 0
   545  0000BC                     recv_msg@tlength:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0x3C
   549  0000BC                     	ds	2
   550  0000BE                     FromMainHigh_sendmsg@msgtype:
   551                           	opt stack 0
   552  0000BE                     recv_msg@qmsg:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0x3E
   556  0000BE                     	ds	1
   557  0000BF                     FromMainHigh_sendmsg@data:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x3F
   561  0000BF                     	ds	1
   562  0000C0                     ToMainLow_recvmsg@msgtype:
   563                           	opt stack 0
   564  0000C0                     ToMainHigh_recvmsg@msgtype:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x40
   568  0000C0                     	ds	1
   569  0000C1                     FromMainHigh_sendmsg@length:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0x41
   573  0000C1                     	ds	1
   574  0000C2                     timer1_lthread@tptr:
   575                           	opt stack 0
   576  0000C2                     ToMainLow_recvmsg@data:
   577                           	opt stack 0
   578  0000C2                     ToMainHigh_recvmsg@data:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x42
   582  0000C2                     	ds	2
   583  0000C4                     ToMainLow_recvmsg@maxlength:
   584                           	opt stack 0
   585  0000C4                     ToMainHigh_recvmsg@maxlength:
   586                           	opt stack 0
   587  0000C4                     timer1_lthread@msgtype:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x44
   591  0000C4                     	ds	2
   592  0000C6                     timer1_lthread@length:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x46
   596  0000C6                     	ds	2
   597  0000C8                     timer1_lthread@msgbuffer:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x48
   601  0000C8                     	ds	2
   602  0000CA                     ??_timer1_lthread:
   603                           
   604                           ; 0 bytes @ 0x4A
   605  0000CA                     	ds	1
   606  0000CB                     timer1_lthread@retval:
   607                           	opt stack 0
   608                           
   609                           ; 1 bytes @ 0x4B
   610  0000CB                     	ds	1
   611  0000CC                     ??_main:
   612                           
   613                           ; 0 bytes @ 0x4C
   614  0000CC                     	ds	1
   615                           tblptru	equ	0xFF8
   616                           tblptrh	equ	0xFF7
   617                           tblptrl	equ	0xFF6
   618                           tablat	equ	0xFF5
   619                           postinc0	equ	0xFEE
   620                           wreg	equ	0xFE8
   621                           
   622                           	psect	cstackCOMRAM
   623  000001                     __pcstackCOMRAM:
   624                           	opt stack 0
   625  000001                     ?_ReadTimer1:
   626                           	opt stack 0
   627  000001                     ReadUSART@data:
   628                           	opt stack 0
   629  000001                     WriteTimer1@timer1:
   630                           	opt stack 0
   631  000001                     i1memcpy@d1:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0x0
   635  000001                     	ds	2
   636  000003                     ReadTimer1@timer:
   637                           	opt stack 0
   638  000003                     WriteTimer1@timer:
   639                           	opt stack 0
   640  000003                     i1memcpy@s1:
   641                           	opt stack 0
   642                           
   643                           ; 2 bytes @ 0x2
   644  000003                     	ds	2
   645  000005                     i1memcpy@n:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0x4
   649  000005                     	ds	2
   650  000007                     i1memcpy@d:
   651                           	opt stack 0
   652                           
   653                           ; 2 bytes @ 0x6
   654  000007                     	ds	2
   655  000009                     i1memcpy@s:
   656                           	opt stack 0
   657                           
   658                           ; 2 bytes @ 0x8
   659  000009                     	ds	2
   660  00000B                     i1send_msg@qptr:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0xA
   664  00000B                     	ds	2
   665  00000D                     i1send_msg@length:
   666                           	opt stack 0
   667                           
   668                           ; 1 bytes @ 0xC
   669  00000D                     	ds	1
   670  00000E                     i1send_msg@msgtype:
   671                           	opt stack 0
   672                           
   673                           ; 1 bytes @ 0xD
   674  00000E                     	ds	1
   675  00000F                     i1send_msg@data:
   676                           	opt stack 0
   677                           
   678                           ; 2 bytes @ 0xE
   679  00000F                     	ds	2
   680  000011                     ??i1_send_msg:
   681                           
   682                           ; 0 bytes @ 0x10
   683  000011                     	ds	1
   684  000012                     i1send_msg@tlength:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0x11
   688  000012                     	ds	2
   689  000014                     i1send_msg@slot:
   690                           	opt stack 0
   691                           
   692                           ; 1 bytes @ 0x13
   693  000014                     	ds	1
   694  000015                     i1send_msg@qmsg:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x14
   698  000015                     	ds	2
   699  000017                     ToMainLow_sendmsg@msgtype:
   700                           	opt stack 0
   701                           
   702                           ; 1 bytes @ 0x16
   703  000017                     	ds	1
   704  000018                     ToMainLow_sendmsg@data:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x17
   708  000018                     	ds	2
   709  00001A                     ToMainLow_sendmsg@length:
   710                           	opt stack 0
   711                           
   712                           ; 1 bytes @ 0x19
   713  00001A                     	ds	1
   714  00001B                     ??_timer1_int_handler:
   715  00001B                     ??_uart_recv_int_handler:
   716                           
   717                           ; 0 bytes @ 0x1A
   718  00001B                     	ds	1
   719  00001C                     timer1_int_handler@result:
   720                           	opt stack 0
   721                           
   722                           ; 2 bytes @ 0x1B
   723  00001C                     	ds	2
   724  00001E                     ??_InterruptHandlerLow:
   725                           
   726                           ; 0 bytes @ 0x1D
   727  00001E                     	ds	17
   728  00002F                     ?_ReadADC:
   729                           	opt stack 0
   730  00002F                     ?i2_in_high_int:
   731                           	opt stack 0
   732  00002F                     handle_start@data_read:
   733                           	opt stack 0
   734  00002F                     WriteTimer0@timer0:
   735                           	opt stack 0
   736  00002F                     i2check_msg@qptr:
   737                           	opt stack 0
   738  00002F                     i2memcpy@d1:
   739                           	opt stack 0
   740                           
   741                           ; 2 bytes @ 0x2E
   742  00002F                     	ds	2
   743  000031                     ??i2_check_msg:
   744  000031                     ?i2_in_low_int:
   745                           	opt stack 0
   746  000031                     WriteTimer0@timer:
   747                           	opt stack 0
   748  000031                     i2memcpy@s1:
   749                           	opt stack 0
   750                           
   751                           ; 2 bytes @ 0x30
   752  000031                     	ds	2
   753  000033                     i2memcpy@n:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x32
   757  000033                     	ds	2
   758  000035                     i2memcpy@d:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x34
   762  000035                     	ds	2
   763  000037                     i2memcpy@s:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0x36
   767  000037                     	ds	2
   768  000039                     i2send_msg@qptr:
   769                           	opt stack 0
   770  000039                     i2recv_msg@qptr:
   771                           	opt stack 0
   772                           
   773                           ; 2 bytes @ 0x38
   774  000039                     	ds	2
   775  00003B                     i2send_msg@length:
   776                           	opt stack 0
   777  00003B                     i2recv_msg@maxlength:
   778                           	opt stack 0
   779                           
   780                           ; 1 bytes @ 0x3A
   781  00003B                     	ds	1
   782  00003C                     i2send_msg@msgtype:
   783                           	opt stack 0
   784  00003C                     i2recv_msg@msgtype:
   785                           	opt stack 0
   786                           
   787                           ; 2 bytes @ 0x3B
   788  00003C                     	ds	1
   789  00003D                     i2send_msg@data:
   790                           	opt stack 0
   791                           
   792                           ; 2 bytes @ 0x3C
   793  00003D                     	ds	1
   794  00003E                     i2recv_msg@data:
   795                           	opt stack 0
   796                           
   797                           ; 2 bytes @ 0x3D
   798  00003E                     	ds	1
   799  00003F                     ??i2_send_msg:
   800                           
   801                           ; 0 bytes @ 0x3E
   802  00003F                     	ds	1
   803  000040                     ??i2_recv_msg:
   804  000040                     i2send_msg@tlength:
   805                           	opt stack 0
   806                           
   807                           ; 2 bytes @ 0x3F
   808  000040                     	ds	2
   809  000042                     i2send_msg@slot:
   810                           	opt stack 0
   811  000042                     i2recv_msg@slot:
   812                           	opt stack 0
   813                           
   814                           ; 1 bytes @ 0x41
   815  000042                     	ds	1
   816  000043                     i2send_msg@qmsg:
   817                           	opt stack 0
   818  000043                     i2recv_msg@tlength:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0x42
   822  000043                     	ds	2
   823  000045                     ToMainHigh_sendmsg@msgtype:
   824                           	opt stack 0
   825  000045                     i2recv_msg@qmsg:
   826                           	opt stack 0
   827                           
   828                           ; 2 bytes @ 0x44
   829  000045                     	ds	1
   830  000046                     ToMainHigh_sendmsg@data:
   831                           	opt stack 0
   832                           
   833                           ; 2 bytes @ 0x45
   834  000046                     	ds	1
   835  000047                     FromMainHigh_recvmsg@msgtype:
   836                           	opt stack 0
   837                           
   838                           ; 2 bytes @ 0x46
   839  000047                     	ds	1
   840  000048                     ToMainHigh_sendmsg@length:
   841                           	opt stack 0
   842                           
   843                           ; 1 bytes @ 0x47
   844  000048                     	ds	1
   845  000049                     ??_i2c_int_handler:
   846  000049                     FromMainHigh_recvmsg@data:
   847                           	opt stack 0
   848                           
   849                           ; 2 bytes @ 0x48
   850  000049                     	ds	2
   851  00004B                     FromMainHigh_recvmsg@maxlength:
   852                           	opt stack 0
   853                           
   854                           ; 1 bytes @ 0x4A
   855  00004B                     	ds	1
   856  00004C                     ??_timer0_int_handler:
   857                           
   858                           ; 0 bytes @ 0x4B
   859  00004C                     	ds	1
   860                           tblptru	equ	0xFF8
   861                           tblptrh	equ	0xFF7
   862                           tblptrl	equ	0xFF6
   863                           tablat	equ	0xFF5
   864                           postinc0	equ	0xFEE
   865                           wreg	equ	0xFE8
   866                           
   867 ;;
   868 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   869 ;;
   870 ;; *************** function _main *****************
   871 ;; Defined at:
   872 ;;		line 111 in file "../src/main.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;		None
   875 ;; Auto vars:     Size  Location     Type
   876 ;;  ic             28   25[BANK1 ] struct __i2c_comm
   877 ;;  msgbuffer      11    0[BANK1 ] unsigned char [11]
   878 ;;  uc              5   18[BANK1 ] struct __uart_comm
   879 ;;  t1thread_dat    2   16[BANK1 ] struct __timer1_thread_s
   880 ;;  t0thread_dat    2   13[BANK1 ] struct __timer0_thread_s
   881 ;;  uthread_data    2   11[BANK1 ] struct __uart_thread_str
   882 ;;  length          1   24[BANK1 ] char 
   883 ;;  msgtype         1   23[BANK1 ] unsigned char 
   884 ;;  last_reg_rec    1   15[BANK1 ] unsigned char 
   885 ;;  i               1    0        unsigned char 
   886 ;;  c               1    0        unsigned char 
   887 ;; Return value:  Size  Location     Type
   888 ;;		None               void
   889 ;; Registers used:
   890 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   896 ;;      Params:         0       0       0       0       0
   897 ;;      Locals:         0       0      53       0       0
   898 ;;      Temps:          0       1       0       0       0
   899 ;;      Totals:         0       1      53       0       0
   900 ;;Total ram usage:       54 bytes
   901 ;; Hardware stack levels required when called:   14
   902 ;; This function calls:
   903 ;;		_OpenTimer1
   904 ;;		_OpenUSART
   905 ;;		_ToMainHigh_recvmsg
   906 ;;		_ToMainLow_recvmsg
   907 ;;		_block_on_To_msgqueues
   908 ;;		_enable_interrupts
   909 ;;		_i2c_configure_slave
   910 ;;		_initADC
   911 ;;		_init_i2c
   912 ;;		_init_queues
   913 ;;		_init_timer1_lthread
   914 ;;		_init_uart_recv
   915 ;;		_returnADCValue
   916 ;;		_start_i2c_slave_reply
   917 ;;		_timer0_lthread
   918 ;;		_timer1_lthread
   919 ;;		_uart_lthread
   920 ;; This function is called by:
   921 ;;		Startup code after reset
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text0
   926  0006F4                     __ptext0:
   927                           	opt stack 0
   928  0006F4                     _main:
   929                           	opt stack 17
   930                           
   931                           ;main.c: 116: char c;
   932                           ;main.c: 117: signed char length;
   933                           ;main.c: 118: unsigned char msgtype;
   934                           ;main.c: 119: unsigned char last_reg_recvd;
   935                           ;main.c: 120: uart_comm uc;
   936                           ;main.c: 121: i2c_comm ic;
   937                           ;main.c: 122: unsigned char msgbuffer[10 + 1];
   938                           ;main.c: 123: unsigned char i;
   939                           ;main.c: 124: uart_thread_struct uthread_data;
   940                           ;main.c: 125: timer1_thread_struct t1thread_data;
   941                           ;main.c: 126: timer0_thread_struct t0thread_data;
   942                           ;main.c: 133: OSCCON = 0x82;
   943                           
   944                           ;incstack = 0
   945  0006F4  0E82               	movlw	130
   946  0006F6  6ED3               	movwf	4051,c	;volatile
   947                           
   948                           ;main.c: 134: OSCTUNEbits.PLLEN = 0;
   949  0006F8  9C9B               	bcf	3995,6,c	;volatile
   950                           
   951                           ;main.c: 138: init_uart_recv(&uc);
   952  0006FA  0101               	movlb	1	; () banked
   953  0006FC  0E01               	movlw	high main@uc
   954  0006FE  0100               	movlb	0	; () banked
   955  000700  0100               	movlb	0	; () banked
   956  000702  6FA9               	movwf	(init_uart_recv@uc+1)& (0+255),b
   957  000704  0101               	movlb	1	; () banked
   958  000706  0EB4               	movlw	low main@uc
   959  000708  0100               	movlb	0	; () banked
   960  00070A  0100               	movlb	0	; () banked
   961  00070C  6FA8               	movwf	init_uart_recv@uc& (0+255),b
   962  00070E  EC75  F00D         	call	_init_uart_recv	;wreg free
   963                           
   964                           ;main.c: 141: init_i2c(&ic);
   965  000712  0101               	movlb	1	; () banked
   966  000714  0E01               	movlw	high main@ic
   967  000716  0100               	movlb	0	; () banked
   968  000718  0100               	movlb	0	; () banked
   969  00071A  6FA9               	movwf	(init_i2c@ic+1)& (0+255),b
   970  00071C  0101               	movlb	1	; () banked
   971  00071E  0EBB               	movlw	low main@ic
   972  000720  0100               	movlb	0	; () banked
   973  000722  0100               	movlb	0	; () banked
   974  000724  6FA8               	movwf	init_i2c@ic& (0+255),b
   975  000726  ECBD  F00A         	call	_init_i2c	;wreg free
   976                           
   977                           ;main.c: 144: init_timer1_lthread(&t1thread_data);
   978  00072A  0101               	movlb	1	; () banked
   979  00072C  0E01               	movlw	high main@t1thread_data
   980  00072E  0100               	movlb	0	; () banked
   981  000730  0100               	movlb	0	; () banked
   982  000732  6FA9               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   983  000734  0101               	movlb	1	; () banked
   984  000736  0EB2               	movlw	low main@t1thread_data
   985  000738  0100               	movlb	0	; () banked
   986  00073A  0100               	movlb	0	; () banked
   987  00073C  6FA8               	movwf	init_timer1_lthread@tptr& (0+255),b
   988  00073E  ECA7  F00D         	call	_init_timer1_lthread	;wreg free
   989                           
   990                           ;main.c: 147: init_queues();
   991  000742  EC86  F00A         	call	_init_queues	;wreg free
   992                           
   993                           ;main.c: 149: initADC();
   994  000746  ECB1  F00B         	call	_initADC	;wreg free
   995                           
   996                           ;main.c: 152: TRISB = 0x0;
   997  00074A  0E00               	movlw	0
   998  00074C  6E93               	movwf	3987,c	;volatile
   999                           
  1000                           ;main.c: 153: LATB = 0x0;
  1001  00074E  0E00               	movlw	0
  1002  000750  6E8A               	movwf	3978,c	;volatile
  1003                           
  1004                           ;main.c: 166: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1005  000752  0EF5               	movlw	245
  1006  000754  EC92  F00C         	call	_OpenTimer1
  1007                           
  1008                           ;main.c: 170: enable_interrupts();
  1009  000758  ECDF  F00D         	call	_enable_interrupts	;wreg free
  1010                           
  1011                           ;main.c: 175: IPR1bits.TMR1IP = 0;
  1012  00075C  909F               	bcf	3999,0,c	;volatile
  1013                           
  1014                           ;main.c: 177: IPR1bits.RCIP = 0;
  1015  00075E  9A9F               	bcf	3999,5,c	;volatile
  1016                           
  1017                           ;main.c: 179: IPR1bits.SSPIP = 1;
  1018  000760  869F               	bsf	3999,3,c	;volatile
  1019                           
  1020                           ;main.c: 181: IPR1bits.ADIP = 1;
  1021  000762  8C9F               	bsf	3999,6,c	;volatile
  1022                           
  1023                           ;main.c: 190: i2c_configure_slave(0x9E);
  1024  000764  0E9E               	movlw	158
  1025  000766  EC29  F00D         	call	_i2c_configure_slave
  1026                           
  1027                           ;main.c: 203: PIE1bits.SSPIE = 1;
  1028  00076A  869D               	bsf	3997,3,c	;volatile
  1029                           
  1030                           ;main.c: 206: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1031                           ;main.c: 207: 0b11111111 & 0b11101111, 0x19);
  1032  00076C  0E00               	movlw	0
  1033  00076E  0100               	movlb	0	; () banked
  1034  000770  0100               	movlb	0	; () banked
  1035  000772  6FA9               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1036  000774  0E19               	movlw	25
  1037  000776  0100               	movlb	0	; () banked
  1038  000778  6FA8               	movwf	OpenUSART@spbrg& (0+255),b
  1039  00077A  0E6C               	movlw	108
  1040  00077C  EC03  F009         	call	_OpenUSART
  1041  000780                     l2706:
  1042                           
  1043                           ;main.c: 231: block_on_To_msgqueues();
  1044  000780  EC62  F008         	call	_block_on_To_msgqueues	;wreg free
  1045                           
  1046                           ;main.c: 238: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1047  000784  0101               	movlb	1	; () banked
  1048  000786  0E01               	movlw	high main@msgtype
  1049  000788  0100               	movlb	0	; () banked
  1050  00078A  0100               	movlb	0	; () banked
  1051  00078C  6FC1               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1052  00078E  0101               	movlb	1	; () banked
  1053  000790  0EB9               	movlw	low main@msgtype
  1054  000792  0100               	movlb	0	; () banked
  1055  000794  0100               	movlb	0	; () banked
  1056  000796  6FC0               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1057  000798  0101               	movlb	1	; () banked
  1058  00079A  0E01               	movlw	high main@msgbuffer
  1059  00079C  0100               	movlb	0	; () banked
  1060  00079E  0100               	movlb	0	; () banked
  1061  0007A0  6FC3               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1062  0007A2  0101               	movlb	1	; () banked
  1063  0007A4  0EA2               	movlw	low main@msgbuffer
  1064  0007A6  0100               	movlb	0	; () banked
  1065  0007A8  0100               	movlb	0	; () banked
  1066  0007AA  6FC2               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1067  0007AC  0E0A               	movlw	10
  1068  0007AE  ECF3  F00B         	call	_ToMainHigh_recvmsg
  1069  0007B2  0101               	movlb	1	; () banked
  1070  0007B4  0101               	movlb	1	; () banked
  1071  0007B6  6FBA               	movwf	main@length& (0+255),b
  1072                           
  1073                           ; BSR set to: 1
  1074                           ;main.c: 239: if (length < 0) {
  1075  0007B8  0101               	movlb	1	; () banked
  1076  0007BA  0101               	movlb	1	; () banked
  1077  0007BC  BFBA               	btfsc	main@length& (0+255),7,b
  1078  0007BE  D08D               	goto	l2740
  1079  0007C0  D07D               	goto	l2738
  1080  0007C2                     l2714:
  1081                           
  1082                           ; BSR set to: 1
  1083                           ;main.c: 247: {
  1084                           ;main.c: 248: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1085  0007C2  0101               	movlb	1	; () banked
  1086  0007C4  0E01               	movlw	high main@t0thread_data
  1087  0007C6  0100               	movlb	0	; () banked
  1088  0007C8  0100               	movlb	0	; () banked
  1089  0007CA  6FA9               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1090  0007CC  0101               	movlb	1	; () banked
  1091  0007CE  0EAF               	movlw	low main@t0thread_data
  1092  0007D0  0100               	movlb	0	; () banked
  1093  0007D2  0100               	movlb	0	; () banked
  1094  0007D4  6FA8               	movwf	timer0_lthread@tptr& (0+255),b
  1095  0007D6  0101               	movlb	1	; () banked
  1096  0007D8  0100               	movlb	0	; () banked
  1097  0007DA  C1B9  F0AA         	movff	main@msgtype,timer0_lthread@msgtype
  1098  0007DE  0100               	movlb	0	; () banked
  1099  0007E0  0100               	movlb	0	; () banked
  1100  0007E2  6BAB               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1101  0007E4  0101               	movlb	1	; () banked
  1102  0007E6  0101               	movlb	1	; () banked
  1103  0007E8  51BA               	movf	main@length& (0+255),w,b
  1104  0007EA  0100               	movlb	0	; () banked
  1105  0007EC  0100               	movlb	0	; () banked
  1106  0007EE  6FAC               	movwf	timer0_lthread@length& (0+255),b
  1107  0007F0  0100               	movlb	0	; () banked
  1108  0007F2  6BAD               	clrf	(timer0_lthread@length+1)& (0+255),b
  1109  0007F4  0100               	movlb	0	; () banked
  1110  0007F6  BFAC               	btfsc	timer0_lthread@length& (0+255),7,b
  1111  0007F8  07AD               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1112  0007FA  0101               	movlb	1	; () banked
  1113  0007FC  0E01               	movlw	high main@msgbuffer
  1114  0007FE  0100               	movlb	0	; () banked
  1115  000800  0100               	movlb	0	; () banked
  1116  000802  6FAF               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1117  000804  0101               	movlb	1	; () banked
  1118  000806  0EA2               	movlw	low main@msgbuffer
  1119  000808  0100               	movlb	0	; () banked
  1120  00080A  0100               	movlb	0	; () banked
  1121  00080C  6FAE               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1122  00080E  EC9E  F00D         	call	_timer0_lthread	;wreg free
  1123                           
  1124                           ;main.c: 249: break;
  1125  000812  D063               	goto	l2740
  1126  000814                     l321:
  1127                           
  1128                           ;main.c: 252: case 41:
  1129                           ;main.c: 253: {
  1130                           ;main.c: 256: last_reg_recvd = msgbuffer[0];
  1131  000814  C1A2  F1B1         	movff	main@msgbuffer,main@last_reg_recvd
  1132                           
  1133                           ;main.c: 257: break;
  1134  000818  D060               	goto	l2740
  1135  00081A                     l2716:
  1136                           
  1137                           ;main.c: 270: {
  1138                           ;main.c: 271: length = 2;
  1139  00081A  0100               	movlb	0	; () banked
  1140  00081C  6FCC               	movwf	??_main& (0+255),b
  1141  00081E  0E02               	movlw	2
  1142  000820  0101               	movlb	1	; () banked
  1143  000822  0101               	movlb	1	; () banked
  1144  000824  6FBA               	movwf	main@length& (0+255),b
  1145  000826  0100               	movlb	0	; () banked
  1146  000828  51CC               	movf	??_main& (0+255),w,b
  1147                           
  1148                           ; BSR set to: 0
  1149                           ;main.c: 273: msgbuffer[0] = returnADCValue();
  1150  00082A  ECE4  F00C         	call	_returnADCValue	;wreg free
  1151  00082E  0100               	movlb	0	; () banked
  1152  000830  0100               	movlb	0	; () banked
  1153  000832  51A8               	movf	?_returnADCValue& (0+255),w,b
  1154  000834  0101               	movlb	1	; () banked
  1155  000836  0101               	movlb	1	; () banked
  1156  000838  6FA2               	movwf	main@msgbuffer& (0+255),b
  1157                           
  1158                           ; BSR set to: 1
  1159                           ;main.c: 274: msgbuffer[1] = 0xAA;
  1160  00083A  0100               	movlb	0	; () banked
  1161  00083C  6FCC               	movwf	??_main& (0+255),b
  1162  00083E  0EAA               	movlw	170
  1163  000840  0101               	movlb	1	; () banked
  1164  000842  0101               	movlb	1	; () banked
  1165  000844  6FA3               	movwf	(main@msgbuffer+1)& (0+255),b
  1166  000846  0100               	movlb	0	; () banked
  1167  000848  51CC               	movf	??_main& (0+255),w,b
  1168                           
  1169                           ;main.c: 275: break;
  1170  00084A  D028               	goto	l2734
  1171  00084C                     l2722:
  1172                           
  1173                           ;main.c: 278: {
  1174                           ;main.c: 279: length = 1;
  1175  00084C  0100               	movlb	0	; () banked
  1176  00084E  6FCC               	movwf	??_main& (0+255),b
  1177  000850  0E01               	movlw	1
  1178  000852  0101               	movlb	1	; () banked
  1179  000854  0101               	movlb	1	; () banked
  1180  000856  6FBA               	movwf	main@length& (0+255),b
  1181  000858  0100               	movlb	0	; () banked
  1182  00085A  51CC               	movf	??_main& (0+255),w,b
  1183                           
  1184                           ; BSR set to: 0
  1185                           ;main.c: 281: msgbuffer[0] = returnADCValue();
  1186  00085C  ECE4  F00C         	call	_returnADCValue	;wreg free
  1187  000860  D00A               	goto	L1
  1188  000862                     l2726:
  1189                           
  1190                           ; BSR set to: 1
  1191                           ;main.c: 285: {
  1192                           ;main.c: 286: length = 1;
  1193  000862  0100               	movlb	0	; () banked
  1194  000864  6FCC               	movwf	??_main& (0+255),b
  1195  000866  0E01               	movlw	1
  1196  000868  0101               	movlb	1	; () banked
  1197  00086A  0101               	movlb	1	; () banked
  1198  00086C  6FBA               	movwf	main@length& (0+255),b
  1199  00086E  0100               	movlb	0	; () banked
  1200  000870  51CC               	movf	??_main& (0+255),w,b
  1201                           
  1202                           ; BSR set to: 0
  1203                           ;main.c: 288: msgbuffer[0] = returnADCValue();
  1204  000872  ECE4  F00C         	call	_returnADCValue	;wreg free
  1205  000876                     L1:
  1206  000876  0100               	movlb	0	; () banked
  1207  000878  0100               	movlb	0	; () banked
  1208  00087A  51A8               	movf	?_returnADCValue& (0+255),w,b
  1209  00087C  0101               	movlb	1	; () banked
  1210  00087E  0101               	movlb	1	; () banked
  1211  000880  6FA2               	movwf	main@msgbuffer& (0+255),b
  1212                           
  1213                           ;main.c: 289: break;
  1214  000882  D00C               	goto	l2734
  1215  000884                     l2732:
  1216  000884  0101               	movlb	1	; () banked
  1217  000886  0101               	movlb	1	; () banked
  1218  000888  51B1               	movf	main@last_reg_recvd& (0+255),w,b
  1219                           
  1220                           ; Switch size 1, requested type "space"
  1221                           ; Number of cases is 3, Range of values is 168 to 170
  1222                           ; switch strategies available:
  1223                           ; Name         Instructions Cycles
  1224                           ; simple_byte           10     6 (average)
  1225                           ;	Chosen strategy is simple_byte
  1226  00088A  0AA8               	xorlw	168	; case 168
  1227  00088C  B4D8               	btfsc	status,2,c
  1228  00088E  D7DE               	goto	l2722
  1229  000890  0A01               	xorlw	1	; case 169
  1230  000892  B4D8               	btfsc	status,2,c
  1231  000894  D7E6               	goto	l2726
  1232  000896  0A03               	xorlw	3	; case 170
  1233  000898  B4D8               	btfsc	status,2,c
  1234  00089A  D7BF               	goto	l2716
  1235  00089C                     l2734:
  1236                           
  1237                           ;main.c: 292: start_i2c_slave_reply(length, msgbuffer);
  1238  00089C  0101               	movlb	1	; () banked
  1239  00089E  0E01               	movlw	high main@msgbuffer
  1240  0008A0  0100               	movlb	0	; () banked
  1241  0008A2  0100               	movlb	0	; () banked
  1242  0008A4  6FA9               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1243  0008A6  0101               	movlb	1	; () banked
  1244  0008A8  0EA2               	movlw	low main@msgbuffer
  1245  0008AA  0100               	movlb	0	; () banked
  1246  0008AC  0100               	movlb	0	; () banked
  1247  0008AE  6FA8               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1248  0008B0  0101               	movlb	1	; () banked
  1249  0008B2  0101               	movlb	1	; () banked
  1250  0008B4  51BA               	movf	main@length& (0+255),w,b
  1251  0008B6  EC86  F005         	call	_start_i2c_slave_reply
  1252                           
  1253                           ;main.c: 293: break;
  1254  0008BA  D00F               	goto	l2740
  1255  0008BC                     l2738:
  1256  0008BC  0101               	movlb	1	; () banked
  1257  0008BE  0101               	movlb	1	; () banked
  1258  0008C0  51B9               	movf	main@msgtype& (0+255),w,b
  1259                           
  1260                           ; Switch size 1, requested type "space"
  1261                           ; Number of cases is 4, Range of values is 10 to 42
  1262                           ; switch strategies available:
  1263                           ; Name         Instructions Cycles
  1264                           ; simple_byte           13     7 (average)
  1265                           ;	Chosen strategy is simple_byte
  1266  0008C2  0A0A               	xorlw	10	; case 10
  1267  0008C4  B4D8               	btfsc	status,2,c
  1268  0008C6  D77D               	goto	l2714
  1269  0008C8  0A22               	xorlw	34	; case 40
  1270  0008CA  B4D8               	btfsc	status,2,c
  1271  0008CC  D7A3               	goto	l321
  1272  0008CE  0A01               	xorlw	1	; case 41
  1273  0008D0  B4D8               	btfsc	status,2,c
  1274  0008D2  D7A0               	goto	l321
  1275  0008D4  0A03               	xorlw	3	; case 42
  1276  0008D6  B4D8               	btfsc	status,2,c
  1277  0008D8  D7D5               	goto	l2732
  1278  0008DA                     l2740:
  1279                           
  1280                           ;main.c: 301: }
  1281                           ;main.c: 304: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1282  0008DA  0101               	movlb	1	; () banked
  1283  0008DC  0E01               	movlw	high main@msgtype
  1284  0008DE  0100               	movlb	0	; () banked
  1285  0008E0  0100               	movlb	0	; () banked
  1286  0008E2  6FC1               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1287  0008E4  0101               	movlb	1	; () banked
  1288  0008E6  0EB9               	movlw	low main@msgtype
  1289  0008E8  0100               	movlb	0	; () banked
  1290  0008EA  0100               	movlb	0	; () banked
  1291  0008EC  6FC0               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1292  0008EE  0101               	movlb	1	; () banked
  1293  0008F0  0E01               	movlw	high main@msgbuffer
  1294  0008F2  0100               	movlb	0	; () banked
  1295  0008F4  0100               	movlb	0	; () banked
  1296  0008F6  6FC3               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1297  0008F8  0101               	movlb	1	; () banked
  1298  0008FA  0EA2               	movlw	low main@msgbuffer
  1299  0008FC  0100               	movlb	0	; () banked
  1300  0008FE  0100               	movlb	0	; () banked
  1301  000900  6FC2               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1302  000902  0E0A               	movlw	10
  1303  000904  ECD2  F00B         	call	_ToMainLow_recvmsg
  1304  000908  0101               	movlb	1	; () banked
  1305  00090A  0101               	movlb	1	; () banked
  1306  00090C  6FBA               	movwf	main@length& (0+255),b
  1307                           
  1308                           ; BSR set to: 1
  1309                           ;main.c: 305: if (length < 0) {
  1310  00090E  0101               	movlb	1	; () banked
  1311  000910  0101               	movlb	1	; () banked
  1312  000912  BFBA               	btfsc	main@length& (0+255),7,b
  1313  000914  D735               	goto	l2706
  1314  000916  D052               	goto	l2752
  1315  000918                     l2746:
  1316                           
  1317                           ; BSR set to: 1
  1318                           ;main.c: 313: {
  1319                           ;main.c: 314: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1320  000918  0101               	movlb	1	; () banked
  1321  00091A  0E01               	movlw	high main@t1thread_data
  1322  00091C  0100               	movlb	0	; () banked
  1323  00091E  0100               	movlb	0	; () banked
  1324  000920  6FC3               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1325  000922  0101               	movlb	1	; () banked
  1326  000924  0EB2               	movlw	low main@t1thread_data
  1327  000926  0100               	movlb	0	; () banked
  1328  000928  0100               	movlb	0	; () banked
  1329  00092A  6FC2               	movwf	timer1_lthread@tptr& (0+255),b
  1330  00092C  0101               	movlb	1	; () banked
  1331  00092E  0100               	movlb	0	; () banked
  1332  000930  C1B9  F0C4         	movff	main@msgtype,timer1_lthread@msgtype
  1333  000934  0100               	movlb	0	; () banked
  1334  000936  0100               	movlb	0	; () banked
  1335  000938  6BC5               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1336  00093A  0101               	movlb	1	; () banked
  1337  00093C  0101               	movlb	1	; () banked
  1338  00093E  51BA               	movf	main@length& (0+255),w,b
  1339  000940  0100               	movlb	0	; () banked
  1340  000942  0100               	movlb	0	; () banked
  1341  000944  6FC6               	movwf	timer1_lthread@length& (0+255),b
  1342  000946  0100               	movlb	0	; () banked
  1343  000948  6BC7               	clrf	(timer1_lthread@length+1)& (0+255),b
  1344  00094A  0100               	movlb	0	; () banked
  1345  00094C  BFC6               	btfsc	timer1_lthread@length& (0+255),7,b
  1346  00094E  07C7               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1347  000950  0101               	movlb	1	; () banked
  1348  000952  0E01               	movlw	high main@msgbuffer
  1349  000954  0100               	movlb	0	; () banked
  1350  000956  0100               	movlb	0	; () banked
  1351  000958  6FC9               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1352  00095A  0101               	movlb	1	; () banked
  1353  00095C  0EA2               	movlw	low main@msgbuffer
  1354  00095E  0100               	movlb	0	; () banked
  1355  000960  0100               	movlb	0	; () banked
  1356  000962  6FC8               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1357  000964  EC4D  F00A         	call	_timer1_lthread	;wreg free
  1358                           
  1359                           ;main.c: 315: break;
  1360  000968  D70B               	goto	l2706
  1361  00096A                     l2748:
  1362                           
  1363                           ;main.c: 318: case 31:
  1364                           ;main.c: 319: {
  1365                           ;main.c: 320: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1366  00096A  0101               	movlb	1	; () banked
  1367  00096C  0E01               	movlw	high main@uthread_data
  1368  00096E  0100               	movlb	0	; () banked
  1369  000970  0100               	movlb	0	; () banked
  1370  000972  6FA9               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1371  000974  0101               	movlb	1	; () banked
  1372  000976  0EAD               	movlw	low main@uthread_data
  1373  000978  0100               	movlb	0	; () banked
  1374  00097A  0100               	movlb	0	; () banked
  1375  00097C  6FA8               	movwf	uart_lthread@uptr& (0+255),b
  1376  00097E  0101               	movlb	1	; () banked
  1377  000980  0100               	movlb	0	; () banked
  1378  000982  C1B9  F0AA         	movff	main@msgtype,uart_lthread@msgtype
  1379  000986  0100               	movlb	0	; () banked
  1380  000988  0100               	movlb	0	; () banked
  1381  00098A  6BAB               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1382  00098C  0101               	movlb	1	; () banked
  1383  00098E  0101               	movlb	1	; () banked
  1384  000990  51BA               	movf	main@length& (0+255),w,b
  1385  000992  0100               	movlb	0	; () banked
  1386  000994  0100               	movlb	0	; () banked
  1387  000996  6FAC               	movwf	uart_lthread@length& (0+255),b
  1388  000998  0100               	movlb	0	; () banked
  1389  00099A  6BAD               	clrf	(uart_lthread@length+1)& (0+255),b
  1390  00099C  0100               	movlb	0	; () banked
  1391  00099E  BFAC               	btfsc	uart_lthread@length& (0+255),7,b
  1392  0009A0  07AD               	decf	(uart_lthread@length+1)& (0+255),f,b
  1393  0009A2  0101               	movlb	1	; () banked
  1394  0009A4  0E01               	movlw	high main@msgbuffer
  1395  0009A6  0100               	movlb	0	; () banked
  1396  0009A8  0100               	movlb	0	; () banked
  1397  0009AA  6FAF               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1398  0009AC  0101               	movlb	1	; () banked
  1399  0009AE  0EA2               	movlw	low main@msgbuffer
  1400  0009B0  0100               	movlb	0	; () banked
  1401  0009B2  0100               	movlb	0	; () banked
  1402  0009B4  6FAE               	movwf	uart_lthread@msgbuffer& (0+255),b
  1403  0009B6  EC73  F00C         	call	_uart_lthread	;wreg free
  1404                           
  1405                           ;main.c: 321: break;
  1406  0009BA  D6E2               	goto	l2706
  1407  0009BC                     l2752:
  1408  0009BC  0101               	movlb	1	; () banked
  1409  0009BE  0101               	movlb	1	; () banked
  1410  0009C0  51B9               	movf	main@msgtype& (0+255),w,b
  1411                           
  1412                           ; Switch size 1, requested type "space"
  1413                           ; Number of cases is 3, Range of values is 11 to 31
  1414                           ; switch strategies available:
  1415                           ; Name         Instructions Cycles
  1416                           ; simple_byte           10     6 (average)
  1417                           ;	Chosen strategy is simple_byte
  1418  0009C2  0A0B               	xorlw	11	; case 11
  1419  0009C4  B4D8               	btfsc	status,2,c
  1420  0009C6  D7A8               	goto	l2746
  1421  0009C8  0A15               	xorlw	21	; case 30
  1422  0009CA  B4D8               	btfsc	status,2,c
  1423  0009CC  D7CE               	goto	l2748
  1424  0009CE  0A01               	xorlw	1	; case 31
  1425  0009D0  B4D8               	btfsc	status,2,c
  1426  0009D2  D7CB               	goto	l2748
  1427  0009D4  D6D5               	goto	l2706
  1428  0009D6                     __end_of_main:
  1429                           	opt stack 0
  1430                           tblptru	equ	0xFF8
  1431                           tblptrh	equ	0xFF7
  1432                           tblptrl	equ	0xFF6
  1433                           tablat	equ	0xFF5
  1434                           postinc0	equ	0xFEE
  1435                           wreg	equ	0xFE8
  1436                           status	equ	0xFD8
  1437                           
  1438 ;; *************** function _uart_lthread *****************
  1439 ;; Defined at:
  1440 ;;		line 9 in file "../src/uart_thread.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;  uptr            2   40[BANK0 ] PTR struct __uart_thread
  1443 ;;		 -> main@uthread_data(2), 
  1444 ;;  msgtype         2   42[BANK0 ] int 
  1445 ;;  length          2   44[BANK0 ] int 
  1446 ;;  msgbuffer       2   46[BANK0 ] PTR unsigned char 
  1447 ;;		 -> main@msgbuffer(11), 
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;		None
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  2   40[BANK0 ] int 
  1452 ;; Registers used:
  1453 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1459 ;;      Params:         0       8       0       0       0
  1460 ;;      Locals:         0       0       0       0       0
  1461 ;;      Temps:          0       0       0       0       0
  1462 ;;      Totals:         0       8       0       0       0
  1463 ;;Total ram usage:        8 bytes
  1464 ;; Hardware stack levels used:    1
  1465 ;; Hardware stack levels required when called:   10
  1466 ;; This function calls:
  1467 ;;		Nothing
  1468 ;; This function is called by:
  1469 ;;		_main
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           	psect	text1
  1474  0018E6                     __ptext1:
  1475                           	opt stack 0
  1476  0018E6                     _uart_lthread:
  1477                           	opt stack 20
  1478                           
  1479                           ;uart_thread.c: 10: if (msgtype == 30) {
  1480                           
  1481                           ; BSR set to: 1
  1482                           ;incstack = 0
  1483  0018E6  0100               	movlb	0	; () banked
  1484  0018E8  0100               	movlb	0	; () banked
  1485  0018EA  51AA               	movf	uart_lthread@msgtype& (0+255),w,b
  1486  0018EC  0A1E               	xorlw	30
  1487  0018EE  11AB               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1488  0018F0  B4D8               	btfsc	status,2,c
  1489  0018F2  0012               	return	
  1490                           
  1491                           ; BSR set to: 0
  1492                           
  1493                           ; BSR set to: 0
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;uart_thread.c: 11: } else if (msgtype == 31) {
  1497  0018F4  0100               	movlb	0	; () banked
  1498  0018F6  0100               	movlb	0	; () banked
  1499  0018F8  51AA               	movf	uart_lthread@msgtype& (0+255),w,b
  1500  0018FA  0A1F               	xorlw	31
  1501  0018FC  11AB               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1502  0018FE  A4D8               	btfss	status,2,c
  1503  001900  0012               	return	
  1504                           
  1505                           ; BSR set to: 0
  1506                           ;uart_thread.c: 14: msgbuffer[length] = '\0';
  1507  001902  0100               	movlb	0	; () banked
  1508  001904  0100               	movlb	0	; () banked
  1509  001906  51AC               	movf	uart_lthread@length& (0+255),w,b
  1510  001908  0100               	movlb	0	; () banked
  1511  00190A  0100               	movlb	0	; () banked
  1512  00190C  25AE               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1513  00190E  6ED9               	movwf	fsr2l,c
  1514  001910  0100               	movlb	0	; () banked
  1515  001912  0100               	movlb	0	; () banked
  1516  001914  51AD               	movf	(uart_lthread@length+1)& (0+255),w,b
  1517  001916  0100               	movlb	0	; () banked
  1518  001918  0100               	movlb	0	; () banked
  1519  00191A  21AF               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1520  00191C  6EDA               	movwf	fsr2h,c
  1521  00191E  0E00               	movlw	0
  1522  001920  6EDF               	movwf	indf2,c
  1523  001922  0012               	return	
  1524  001924                     __end_of_uart_lthread:
  1525                           	opt stack 0
  1526                           tblptru	equ	0xFF8
  1527                           tblptrh	equ	0xFF7
  1528                           tblptrl	equ	0xFF6
  1529                           tablat	equ	0xFF5
  1530                           postinc0	equ	0xFEE
  1531                           wreg	equ	0xFE8
  1532                           indf2	equ	0xFDF
  1533                           fsr2h	equ	0xFDA
  1534                           fsr2l	equ	0xFD9
  1535                           status	equ	0xFD8
  1536                           
  1537 ;; *************** function _timer1_lthread *****************
  1538 ;; Defined at:
  1539 ;;		line 14 in file "../src/timer1_thread.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  tptr            2   66[BANK0 ] PTR struct __timer1_thre
  1542 ;;		 -> main@t1thread_data(2), 
  1543 ;;  msgtype         2   68[BANK0 ] int 
  1544 ;;  length          2   70[BANK0 ] int 
  1545 ;;  msgbuffer       2   72[BANK0 ] PTR unsigned char 
  1546 ;;		 -> main@msgbuffer(11), 
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;  retval          1   75[BANK0 ] char 
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  2   66[BANK0 ] int 
  1551 ;; Registers used:
  1552 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1558 ;;      Params:         0       8       0       0       0
  1559 ;;      Locals:         0       1       0       0       0
  1560 ;;      Temps:          0       1       0       0       0
  1561 ;;      Totals:         0      10       0       0       0
  1562 ;;Total ram usage:       10 bytes
  1563 ;; Hardware stack levels used:    1
  1564 ;; Hardware stack levels required when called:   13
  1565 ;; This function calls:
  1566 ;;		_FromMainHigh_sendmsg
  1567 ;;		___lwmod
  1568 ;; This function is called by:
  1569 ;;		_main
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           	psect	text2
  1574  00149A                     __ptext2:
  1575                           	opt stack 0
  1576  00149A                     _timer1_lthread:
  1577                           	opt stack 17
  1578                           
  1579                           ;timer1_thread.c: 15: signed char retval;
  1580                           ;timer1_thread.c: 17: tptr->msgcount++;
  1581                           
  1582                           ; BSR set to: 0
  1583                           ;incstack = 0
  1584  00149A  C0C2  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1585  00149E  C0C3  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1586  0014A2  2ADE               	incf	postinc2,f,c
  1587  0014A4  0E00               	movlw	0
  1588  0014A6  22DD               	addwfc	postdec2,f,c
  1589                           
  1590                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1591  0014A8  C0C2  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1592  0014AC  C0C3  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1593  0014B0  0100               	movlb	0	; () banked
  1594  0014B2  CFDE F0A8          	movff	postinc2,___lwmod@dividend
  1595  0014B6  0100               	movlb	0	; () banked
  1596  0014B8  CFDD F0A9          	movff	postdec2,___lwmod@dividend+1
  1597  0014BC  0E00               	movlw	0
  1598  0014BE  0100               	movlb	0	; () banked
  1599  0014C0  0100               	movlb	0	; () banked
  1600  0014C2  6FAB               	movwf	(___lwmod@divisor+1)& (0+255),b
  1601  0014C4  0E0A               	movlw	10
  1602  0014C6  0100               	movlb	0	; () banked
  1603  0014C8  6FAA               	movwf	___lwmod@divisor& (0+255),b
  1604  0014CA  EC4C  F009         	call	___lwmod	;wreg free
  1605  0014CE  0100               	movlb	0	; () banked
  1606  0014D0  0100               	movlb	0	; () banked
  1607  0014D2  51A8               	movf	?___lwmod& (0+255),w,b
  1608  0014D4  0A09               	xorlw	9
  1609  0014D6  0100               	movlb	0	; () banked
  1610  0014D8  11A9               	iorwf	(?___lwmod+1)& (0+255),w,b
  1611  0014DA  A4D8               	btfss	status,2,c
  1612  0014DC  0012               	return	
  1613                           
  1614                           ; BSR set to: 0
  1615                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1616  0014DE  0100               	movlb	0	; () banked
  1617  0014E0  6FCA               	movwf	??_timer1_lthread& (0+255),b
  1618  0014E2  0E14               	movlw	20
  1619  0014E4  0100               	movlb	0	; () banked
  1620  0014E6  0100               	movlb	0	; () banked
  1621  0014E8  6FBE               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1622  0014EA  0100               	movlb	0	; () banked
  1623  0014EC  51CA               	movf	??_timer1_lthread& (0+255),w,b
  1624  0014EE  0100               	movlb	0	; () banked
  1625  0014F0  0100               	movlb	0	; () banked
  1626  0014F2  C0C3  F0C0         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1627  0014F6  0100               	movlb	0	; () banked
  1628  0014F8  0100               	movlb	0	; () banked
  1629  0014FA  C0C2  F0BF         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1630  0014FE  0E02               	movlw	2
  1631  001500  ECAE  F00C         	call	_FromMainHigh_sendmsg
  1632  001504  0100               	movlb	0	; () banked
  1633  001506  0100               	movlb	0	; () banked
  1634  001508  6FCB               	movwf	timer1_lthread@retval& (0+255),b
  1635  00150A  0012               	return	
  1636  00150C                     __end_of_timer1_lthread:
  1637                           	opt stack 0
  1638                           tblptru	equ	0xFF8
  1639                           tblptrh	equ	0xFF7
  1640                           tblptrl	equ	0xFF6
  1641                           tablat	equ	0xFF5
  1642                           postinc0	equ	0xFEE
  1643                           wreg	equ	0xFE8
  1644                           indf2	equ	0xFDF
  1645                           postinc2	equ	0xFDE
  1646                           postdec2	equ	0xFDD
  1647                           fsr2h	equ	0xFDA
  1648                           fsr2l	equ	0xFD9
  1649                           status	equ	0xFD8
  1650                           
  1651 ;; *************** function ___lwmod *****************
  1652 ;; Defined at:
  1653 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/common/lwmod.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  dividend        2   40[BANK0 ] unsigned int 
  1656 ;;  divisor         2   42[BANK0 ] unsigned int 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  counter         1   45[BANK0 ] unsigned char 
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  2   40[BANK0 ] unsigned int 
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1668 ;;      Params:         0       4       0       0       0
  1669 ;;      Locals:         0       1       0       0       0
  1670 ;;      Temps:          0       1       0       0       0
  1671 ;;      Totals:         0       6       0       0       0
  1672 ;;Total ram usage:        6 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:   10
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_timer1_lthread
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text3
  1683  001298                     __ptext3:
  1684                           	opt stack 0
  1685  001298                     ___lwmod:
  1686                           	opt stack 19
  1687                           
  1688                           ; BSR set to: 0
  1689                           ;incstack = 0
  1690  001298  0100               	movlb	0	; () banked
  1691  00129A  0100               	movlb	0	; () banked
  1692  00129C  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1693  00129E  11AA               	iorwf	___lwmod@divisor& (0+255),w,b
  1694  0012A0  B4D8               	btfsc	status,2,c
  1695  0012A2  D03A               	goto	l1038
  1696                           
  1697                           ; BSR set to: 0
  1698  0012A4  0100               	movlb	0	; () banked
  1699  0012A6  6FAC               	movwf	??___lwmod& (0+255),b
  1700  0012A8  0E01               	movlw	1
  1701  0012AA  0100               	movlb	0	; () banked
  1702  0012AC  0100               	movlb	0	; () banked
  1703  0012AE  6FAD               	movwf	___lwmod@counter& (0+255),b
  1704  0012B0  0100               	movlb	0	; () banked
  1705  0012B2  51AC               	movf	??___lwmod& (0+255),w,b
  1706  0012B4  D009               	goto	l2860
  1707  0012B6                     l2858:
  1708                           
  1709                           ; BSR set to: 0
  1710  0012B6  0100               	movlb	0	; () banked
  1711  0012B8  0100               	movlb	0	; () banked
  1712  0012BA  0100               	movlb	0	; () banked
  1713  0012BC  90D8               	bcf	status,0,c
  1714  0012BE  37AA               	rlcf	___lwmod@divisor& (0+255),f,b
  1715  0012C0  37AB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1716  0012C2  0100               	movlb	0	; () banked
  1717  0012C4  0100               	movlb	0	; () banked
  1718  0012C6  2BAD               	incf	___lwmod@counter& (0+255),f,b
  1719  0012C8                     l2860:
  1720                           
  1721                           ; BSR set to: 0
  1722  0012C8  0100               	movlb	0	; () banked
  1723  0012CA  0100               	movlb	0	; () banked
  1724  0012CC  AFAB               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1725  0012CE  D7F3               	goto	l2858
  1726  0012D0                     l2862:
  1727                           
  1728                           ; BSR set to: 0
  1729  0012D0  0100               	movlb	0	; () banked
  1730  0012D2  0100               	movlb	0	; () banked
  1731  0012D4  51AA               	movf	___lwmod@divisor& (0+255),w,b
  1732  0012D6  0100               	movlb	0	; () banked
  1733  0012D8  0100               	movlb	0	; () banked
  1734  0012DA  5DA8               	subwf	___lwmod@dividend& (0+255),w,b
  1735  0012DC  0100               	movlb	0	; () banked
  1736  0012DE  0100               	movlb	0	; () banked
  1737  0012E0  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1738  0012E2  0100               	movlb	0	; () banked
  1739  0012E4  0100               	movlb	0	; () banked
  1740  0012E6  59A9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1741  0012E8  A0D8               	btfss	status,0,c
  1742  0012EA  D00C               	goto	l2866
  1743                           
  1744                           ; BSR set to: 0
  1745  0012EC  0100               	movlb	0	; () banked
  1746  0012EE  0100               	movlb	0	; () banked
  1747  0012F0  51AA               	movf	___lwmod@divisor& (0+255),w,b
  1748  0012F2  0100               	movlb	0	; () banked
  1749  0012F4  0100               	movlb	0	; () banked
  1750  0012F6  5FA8               	subwf	___lwmod@dividend& (0+255),f,b
  1751  0012F8  0100               	movlb	0	; () banked
  1752  0012FA  0100               	movlb	0	; () banked
  1753  0012FC  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1754  0012FE  0100               	movlb	0	; () banked
  1755  001300  0100               	movlb	0	; () banked
  1756  001302  5BA9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1757  001304                     l2866:
  1758                           
  1759                           ; BSR set to: 0
  1760  001304  0100               	movlb	0	; () banked
  1761  001306  0100               	movlb	0	; () banked
  1762  001308  0100               	movlb	0	; () banked
  1763  00130A  90D8               	bcf	status,0,c
  1764  00130C  33AB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1765  00130E  33AA               	rrcf	___lwmod@divisor& (0+255),f,b
  1766                           
  1767                           ; BSR set to: 0
  1768  001310  0100               	movlb	0	; () banked
  1769  001312  0100               	movlb	0	; () banked
  1770  001314  2FAD               	decfsz	___lwmod@counter& (0+255),f,b
  1771  001316  D7DC               	goto	l2862
  1772  001318                     l1038:
  1773                           
  1774                           ; BSR set to: 0
  1775  001318  C0A8  F0A8         	movff	___lwmod@dividend,?___lwmod
  1776  00131C  C0A9  F0A9         	movff	___lwmod@dividend+1,?___lwmod+1
  1777                           
  1778                           ; BSR set to: 0
  1779  001320  0012               	return	
  1780  001322                     __end_of___lwmod:
  1781                           	opt stack 0
  1782                           tblptru	equ	0xFF8
  1783                           tblptrh	equ	0xFF7
  1784                           tblptrl	equ	0xFF6
  1785                           tablat	equ	0xFF5
  1786                           postinc0	equ	0xFEE
  1787                           wreg	equ	0xFE8
  1788                           indf2	equ	0xFDF
  1789                           postinc2	equ	0xFDE
  1790                           postdec2	equ	0xFDD
  1791                           fsr2h	equ	0xFDA
  1792                           fsr2l	equ	0xFD9
  1793                           status	equ	0xFD8
  1794                           
  1795 ;; *************** function _FromMainHigh_sendmsg *****************
  1796 ;; Defined at:
  1797 ;;		line 174 in file "../src/messages.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  length          1    wreg     unsigned char 
  1800 ;;  msgtype         1   62[BANK0 ] unsigned char 
  1801 ;;  data            2   63[BANK0 ] PTR void 
  1802 ;;		 -> main@t1thread_data(2), 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  length          1   65[BANK0 ] unsigned char 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      char 
  1807 ;; Registers used:
  1808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1814 ;;      Params:         0       3       0       0       0
  1815 ;;      Locals:         0       1       0       0       0
  1816 ;;      Temps:          0       0       0       0       0
  1817 ;;      Totals:         0       4       0       0       0
  1818 ;;Total ram usage:        4 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:   12
  1821 ;; This function calls:
  1822 ;;		_send_msg
  1823 ;; This function is called by:
  1824 ;;		_timer1_lthread
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           	psect	text4
  1829  00195C                     __ptext4:
  1830                           	opt stack 0
  1831  00195C                     _FromMainHigh_sendmsg:
  1832                           	opt stack 17
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;incstack = 0
  1836                           ;FromMainHigh_sendmsg@length stored from wreg
  1837  00195C  CFE8 F0C1          	movff	wreg,FromMainHigh_sendmsg@length
  1838                           
  1839                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1840  001960  0102               	movlb	2	; () banked
  1841  001962  0E02               	movlw	high _FromMainHigh_MQ
  1842  001964  0100               	movlb	0	; () banked
  1843  001966  0100               	movlb	0	; () banked
  1844  001968  6FB3               	movwf	(send_msg@qptr+1)& (0+255),b
  1845  00196A  0102               	movlb	2	; () banked
  1846  00196C  0E00               	movlw	low _FromMainHigh_MQ
  1847  00196E  0100               	movlb	0	; () banked
  1848  001970  0100               	movlb	0	; () banked
  1849  001972  6FB2               	movwf	send_msg@qptr& (0+255),b
  1850  001974  C0C1  F0B4         	movff	FromMainHigh_sendmsg@length,send_msg@length
  1851  001978  C0BE  F0B5         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  1852  00197C  0100               	movlb	0	; () banked
  1853  00197E  0100               	movlb	0	; () banked
  1854  001980  C0C0  F0B7         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  1855  001984  0100               	movlb	0	; () banked
  1856  001986  0100               	movlb	0	; () banked
  1857  001988  C0BF  F0B6         	movff	FromMainHigh_sendmsg@data,send_msg@data
  1858  00198C  EC0D  F006         	call	_send_msg	;wreg free
  1859  001990  0012               	return	
  1860  001992                     __end_of_FromMainHigh_sendmsg:
  1861                           	opt stack 0
  1862                           tblptru	equ	0xFF8
  1863                           tblptrh	equ	0xFF7
  1864                           tblptrl	equ	0xFF6
  1865                           tablat	equ	0xFF5
  1866                           postinc0	equ	0xFEE
  1867                           wreg	equ	0xFE8
  1868                           indf2	equ	0xFDF
  1869                           postinc2	equ	0xFDE
  1870                           postdec2	equ	0xFDD
  1871                           fsr2h	equ	0xFDA
  1872                           fsr2l	equ	0xFD9
  1873                           status	equ	0xFD8
  1874                           
  1875 ;; *************** function _send_msg *****************
  1876 ;; Defined at:
  1877 ;;		line 24 in file "../src/messages.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;  qptr            2   50[BANK0 ] PTR struct __msg_queue
  1880 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1881 ;;  length          1   52[BANK0 ] unsigned char 
  1882 ;;  msgtype         1   53[BANK0 ] unsigned char 
  1883 ;;  data            2   54[BANK0 ] PTR void 
  1884 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), i2c_int_handler@error_buf(3), 
  1885 ;;		 -> NULL(0), timer0_int_handler@val(2), 
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;  qmsg            2   60[BANK0 ] PTR struct __msg
  1888 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  1889 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1890 ;;  tlength         2   57[BANK0 ] unsigned int 
  1891 ;;  slot            1   59[BANK0 ] unsigned char 
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      char 
  1894 ;; Registers used:
  1895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1901 ;;      Params:         0       6       0       0       0
  1902 ;;      Locals:         0       5       0       0       0
  1903 ;;      Temps:          0       1       0       0       0
  1904 ;;      Totals:         0      12       0       0       0
  1905 ;;Total ram usage:       12 bytes
  1906 ;; Hardware stack levels used:    1
  1907 ;; Hardware stack levels required when called:   11
  1908 ;; This function calls:
  1909 ;;		_memcpy
  1910 ;; This function is called by:
  1911 ;;		_FromMainHigh_sendmsg
  1912 ;;		_FromMainLow_sendmsg
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           	psect	text5
  1917  000C1A                     __ptext5:
  1918                           	opt stack 0
  1919  000C1A                     _send_msg:
  1920                           	opt stack 17
  1921                           
  1922                           ;messages.c: 25: unsigned char slot;
  1923                           ;messages.c: 27: msg *qmsg;
  1924                           ;messages.c: 28: size_t tlength = length;
  1925                           
  1926                           ;incstack = 0
  1927  000C1A  0100               	movlb	0	; () banked
  1928  000C1C  0100               	movlb	0	; () banked
  1929  000C1E  C0B4  F0B9         	movff	send_msg@length,send_msg@tlength
  1930  000C22  0100               	movlb	0	; () banked
  1931  000C24  0100               	movlb	0	; () banked
  1932  000C26  6BBA               	clrf	(send_msg@tlength+1)& (0+255),b
  1933                           
  1934                           ; BSR set to: 0
  1935                           ;messages.c: 38: slot = qptr->cur_write_ind;
  1936  000C28  0100               	movlb	0	; () banked
  1937  000C2A  EE20 F034          	lfsr	2,52
  1938  000C2E  0100               	movlb	0	; () banked
  1939  000C30  51B2               	movf	send_msg@qptr& (0+255),w,b
  1940  000C32  26D9               	addwf	fsr2l,f,c
  1941  000C34  0100               	movlb	0	; () banked
  1942  000C36  51B3               	movf	(send_msg@qptr+1)& (0+255),w,b
  1943  000C38  22DA               	addwfc	fsr2h,f,c
  1944  000C3A  50DF               	movf	indf2,w,c
  1945  000C3C  0100               	movlb	0	; () banked
  1946  000C3E  0100               	movlb	0	; () banked
  1947  000C40  6FBB               	movwf	send_msg@slot& (0+255),b
  1948                           
  1949                           ; BSR set to: 0
  1950                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  1951  000C42  0100               	movlb	0	; () banked
  1952  000C44  0100               	movlb	0	; () banked
  1953  000C46  51BB               	movf	send_msg@slot& (0+255),w,b
  1954  000C48  0D0D               	mullw	13
  1955  000C4A  50F3               	movf	prodl,w,c
  1956  000C4C  0100               	movlb	0	; () banked
  1957  000C4E  0100               	movlb	0	; () banked
  1958  000C50  25B2               	addwf	send_msg@qptr& (0+255),w,b
  1959  000C52  0100               	movlb	0	; () banked
  1960  000C54  0100               	movlb	0	; () banked
  1961  000C56  6FBC               	movwf	send_msg@qmsg& (0+255),b
  1962  000C58  50F4               	movf	prodh,w,c
  1963  000C5A  0100               	movlb	0	; () banked
  1964  000C5C  0100               	movlb	0	; () banked
  1965  000C5E  21B3               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  1966  000C60  0100               	movlb	0	; () banked
  1967  000C62  6FBD               	movwf	(send_msg@qmsg+1)& (0+255),b
  1968                           
  1969                           ; BSR set to: 0
  1970                           ;messages.c: 41: if (qmsg->full != 0) {
  1971  000C64  C0BC  FFD9         	movff	send_msg@qmsg,fsr2l
  1972  000C68  C0BD  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1973  000C6C  50DF               	movf	indf2,w,c
  1974  000C6E  B4D8               	btfsc	status,2,c
  1975  000C70  D002               	goto	l2466
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;messages.c: 42: return (-1);
  1979  000C72  0EFF               	movlw	255
  1980  000C74  0012               	return	
  1981  000C76                     l2466:
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;messages.c: 43: }
  1985                           ;messages.c: 46: qmsg->length = length;
  1986  000C76  0100               	movlb	0	; () banked
  1987  000C78  EE20 F001          	lfsr	2,1
  1988  000C7C  0100               	movlb	0	; () banked
  1989  000C7E  51BC               	movf	send_msg@qmsg& (0+255),w,b
  1990  000C80  26D9               	addwf	fsr2l,f,c
  1991  000C82  0100               	movlb	0	; () banked
  1992  000C84  51BD               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1993  000C86  22DA               	addwfc	fsr2h,f,c
  1994  000C88  0100               	movlb	0	; () banked
  1995  000C8A  C0B4  FFDF         	movff	send_msg@length,indf2
  1996                           
  1997                           ;messages.c: 47: qmsg->msgtype = msgtype;
  1998  000C8E  0100               	movlb	0	; () banked
  1999  000C90  EE20 F002          	lfsr	2,2
  2000  000C94  0100               	movlb	0	; () banked
  2001  000C96  51BC               	movf	send_msg@qmsg& (0+255),w,b
  2002  000C98  26D9               	addwf	fsr2l,f,c
  2003  000C9A  0100               	movlb	0	; () banked
  2004  000C9C  51BD               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2005  000C9E  22DA               	addwfc	fsr2h,f,c
  2006  000CA0  0100               	movlb	0	; () banked
  2007  000CA2  C0B5  FFDF         	movff	send_msg@msgtype,indf2
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2011  000CA6  0E03               	movlw	3
  2012  000CA8  0100               	movlb	0	; () banked
  2013  000CAA  0100               	movlb	0	; () banked
  2014  000CAC  25BC               	addwf	send_msg@qmsg& (0+255),w,b
  2015  000CAE  0100               	movlb	0	; () banked
  2016  000CB0  0100               	movlb	0	; () banked
  2017  000CB2  6FA8               	movwf	memcpy@d1& (0+255),b
  2018  000CB4  0E00               	movlw	0
  2019  000CB6  0100               	movlb	0	; () banked
  2020  000CB8  0100               	movlb	0	; () banked
  2021  000CBA  21BD               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2022  000CBC  0100               	movlb	0	; () banked
  2023  000CBE  6FA9               	movwf	(memcpy@d1+1)& (0+255),b
  2024  000CC0  0100               	movlb	0	; () banked
  2025  000CC2  0100               	movlb	0	; () banked
  2026  000CC4  C0B7  F0AB         	movff	send_msg@data+1,memcpy@s1+1
  2027  000CC8  0100               	movlb	0	; () banked
  2028  000CCA  0100               	movlb	0	; () banked
  2029  000CCC  C0B6  F0AA         	movff	send_msg@data,memcpy@s1
  2030  000CD0  C0B9  F0AC         	movff	send_msg@tlength,memcpy@n
  2031  000CD4  C0BA  F0AD         	movff	send_msg@tlength+1,memcpy@n+1
  2032  000CD8  ECF2  F00A         	call	_memcpy	;wreg free
  2033                           
  2034                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2035  000CDC  0100               	movlb	0	; () banked
  2036  000CDE  EE20 F034          	lfsr	2,52
  2037  000CE2  0100               	movlb	0	; () banked
  2038  000CE4  51B2               	movf	send_msg@qptr& (0+255),w,b
  2039  000CE6  26D9               	addwf	fsr2l,f,c
  2040  000CE8  0100               	movlb	0	; () banked
  2041  000CEA  51B3               	movf	(send_msg@qptr+1)& (0+255),w,b
  2042  000CEC  22DA               	addwfc	fsr2h,f,c
  2043  000CEE  0100               	movlb	0	; () banked
  2044  000CF0  EE10 F034          	lfsr	1,52
  2045  000CF4  0100               	movlb	0	; () banked
  2046  000CF6  51B2               	movf	send_msg@qptr& (0+255),w,b
  2047  000CF8  26E1               	addwf	fsr1l,f,c
  2048  000CFA  0100               	movlb	0	; () banked
  2049  000CFC  51B3               	movf	(send_msg@qptr+1)& (0+255),w,b
  2050  000CFE  22E2               	addwfc	fsr1h,f,c
  2051  000D00  50E7               	movf	indf1,w,c
  2052  000D02  0100               	movlb	0	; () banked
  2053  000D04  6FB8               	movwf	??_send_msg& (0+255),b
  2054  000D06  0100               	movlb	0	; () banked
  2055  000D08  29B8               	incf	??_send_msg& (0+255),w,b
  2056  000D0A  0B03               	andlw	3
  2057  000D0C  6EDF               	movwf	indf2,c
  2058                           
  2059                           ; BSR set to: 0
  2060                           ;messages.c: 59: qmsg->full = 1;
  2061  000D0E  C0BC  FFD9         	movff	send_msg@qmsg,fsr2l
  2062  000D12  C0BD  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2063  000D16  0E01               	movlw	1
  2064  000D18  6EDF               	movwf	indf2,c
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;messages.c: 60: return (1);
  2068  000D1A  0E01               	movlw	1
  2069  000D1C  0012               	return	
  2070  000D1E                     __end_of_send_msg:
  2071                           	opt stack 0
  2072                           tblptru	equ	0xFF8
  2073                           tblptrh	equ	0xFF7
  2074                           tblptrl	equ	0xFF6
  2075                           tablat	equ	0xFF5
  2076                           prodh	equ	0xFF4
  2077                           prodl	equ	0xFF3
  2078                           postinc0	equ	0xFEE
  2079                           wreg	equ	0xFE8
  2080                           indf1	equ	0xFE7
  2081                           fsr1h	equ	0xFE2
  2082                           fsr1l	equ	0xFE1
  2083                           indf2	equ	0xFDF
  2084                           postinc2	equ	0xFDE
  2085                           postdec2	equ	0xFDD
  2086                           fsr2h	equ	0xFDA
  2087                           fsr2l	equ	0xFD9
  2088                           status	equ	0xFD8
  2089                           
  2090 ;; *************** function _timer0_lthread *****************
  2091 ;; Defined at:
  2092 ;;		line 9 in file "../src/timer0_thread.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  tptr            2   40[BANK0 ] PTR struct __timer0_thre
  2095 ;;		 -> main@t0thread_data(2), 
  2096 ;;  msgtype         2   42[BANK0 ] int 
  2097 ;;  length          2   44[BANK0 ] int 
  2098 ;;  msgbuffer       2   46[BANK0 ] PTR unsigned char 
  2099 ;;		 -> main@msgbuffer(11), 
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;  msgval          2   48[BANK0 ] PTR unsigned int 
  2102 ;;		 -> main@msgbuffer(11), 
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  2   40[BANK0 ] int 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2112 ;;      Params:         0       8       0       0       0
  2113 ;;      Locals:         0       2       0       0       0
  2114 ;;      Temps:          0       0       0       0       0
  2115 ;;      Totals:         0      10       0       0       0
  2116 ;;Total ram usage:       10 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:   10
  2119 ;; This function calls:
  2120 ;;		Nothing
  2121 ;; This function is called by:
  2122 ;;		_main
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           	psect	text6
  2127  001B3C                     __ptext6:
  2128                           	opt stack 0
  2129  001B3C                     _timer0_lthread:
  2130                           	opt stack 20
  2131                           
  2132                           ;timer0_thread.c: 10: unsigned int *msgval;
  2133                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;incstack = 0
  2137  001B3C  0100               	movlb	0	; () banked
  2138  001B3E  0100               	movlb	0	; () banked
  2139  001B40  C0AF  F0B1         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2140  001B44  0100               	movlb	0	; () banked
  2141  001B46  0100               	movlb	0	; () banked
  2142  001B48  C0AE  F0B0         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2143                           
  2144                           ; BSR set to: 0
  2145  001B4C  0012               	return	
  2146  001B4E                     __end_of_timer0_lthread:
  2147                           	opt stack 0
  2148                           tblptru	equ	0xFF8
  2149                           tblptrh	equ	0xFF7
  2150                           tblptrl	equ	0xFF6
  2151                           tablat	equ	0xFF5
  2152                           prodh	equ	0xFF4
  2153                           prodl	equ	0xFF3
  2154                           postinc0	equ	0xFEE
  2155                           wreg	equ	0xFE8
  2156                           indf1	equ	0xFE7
  2157                           fsr1h	equ	0xFE2
  2158                           fsr1l	equ	0xFE1
  2159                           indf2	equ	0xFDF
  2160                           postinc2	equ	0xFDE
  2161                           postdec2	equ	0xFDD
  2162                           fsr2h	equ	0xFDA
  2163                           fsr2l	equ	0xFD9
  2164                           status	equ	0xFD8
  2165                           
  2166 ;; *************** function _start_i2c_slave_reply *****************
  2167 ;; Defined at:
  2168 ;;		line 53 in file "../src/my_i2c.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  length          1    wreg     unsigned char 
  2171 ;;  msg             2   40[BANK0 ] PTR unsigned char 
  2172 ;;		 -> main@msgbuffer(11), 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  length          1   44[BANK0 ] unsigned char 
  2175 ;; Return value:  Size  Location     Type
  2176 ;;		None               void
  2177 ;; Registers used:
  2178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2184 ;;      Params:         0       2       0       0       0
  2185 ;;      Locals:         0       1       0       0       0
  2186 ;;      Temps:          0       2       0       0       0
  2187 ;;      Totals:         0       5       0       0       0
  2188 ;;Total ram usage:        5 bytes
  2189 ;; Hardware stack levels used:    1
  2190 ;; Hardware stack levels required when called:   10
  2191 ;; This function calls:
  2192 ;;		Nothing
  2193 ;; This function is called by:
  2194 ;;		_main
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text7
  2199  000B0C                     __ptext7:
  2200                           	opt stack 0
  2201  000B0C                     _start_i2c_slave_reply:
  2202                           	opt stack 20
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;incstack = 0
  2206                           ;start_i2c_slave_reply@length stored from wreg
  2207  000B0C  CFE8 F0AC          	movff	wreg,start_i2c_slave_reply@length
  2208                           
  2209                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2210  000B10  0100               	movlb	0	; () banked
  2211  000B12  EE20 F019          	lfsr	2,25
  2212  000B16  0100               	movlb	0	; () banked
  2213  000B18  51CD               	movf	_ic_ptr& (0+255),w,b
  2214  000B1A  26D9               	addwf	fsr2l,f,c
  2215  000B1C  0100               	movlb	0	; () banked
  2216  000B1E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2217  000B20  22DA               	addwfc	fsr2h,f,c
  2218  000B22  0E00               	movlw	0
  2219  000B24  6EDF               	movwf	indf2,c
  2220  000B26  D042               	goto	l2228
  2221  000B28                     l2224:
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2225  000B28  0100               	movlb	0	; () banked
  2226  000B2A  EE20 F019          	lfsr	2,25
  2227  000B2E  0100               	movlb	0	; () banked
  2228  000B30  51CD               	movf	_ic_ptr& (0+255),w,b
  2229  000B32  26D9               	addwf	fsr2l,f,c
  2230  000B34  0100               	movlb	0	; () banked
  2231  000B36  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2232  000B38  22DA               	addwfc	fsr2h,f,c
  2233  000B3A  50DF               	movf	indf2,w,c
  2234  000B3C  0100               	movlb	0	; () banked
  2235  000B3E  6FAA               	movwf	??_start_i2c_slave_reply& (0+255),b
  2236  000B40  0100               	movlb	0	; () banked
  2237  000B42  51AA               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2238  000B44  0D01               	mullw	1
  2239  000B46  50F3               	movf	prodl,w,c
  2240  000B48  0100               	movlb	0	; () banked
  2241  000B4A  0100               	movlb	0	; () banked
  2242  000B4C  25A8               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2243  000B4E  6ED9               	movwf	fsr2l,c
  2244  000B50  50F4               	movf	prodh,w,c
  2245  000B52  0100               	movlb	0	; () banked
  2246  000B54  0100               	movlb	0	; () banked
  2247  000B56  21A9               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2248  000B58  6EDA               	movwf	fsr2h,c
  2249  000B5A  0100               	movlb	0	; () banked
  2250  000B5C  EE10 F019          	lfsr	1,25
  2251  000B60  0100               	movlb	0	; () banked
  2252  000B62  51CD               	movf	_ic_ptr& (0+255),w,b
  2253  000B64  26E1               	addwf	fsr1l,f,c
  2254  000B66  0100               	movlb	0	; () banked
  2255  000B68  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2256  000B6A  22E2               	addwfc	fsr1h,f,c
  2257  000B6C  50E7               	movf	indf1,w,c
  2258  000B6E  0100               	movlb	0	; () banked
  2259  000B70  6FAB               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2260  000B72  0100               	movlb	0	; () banked
  2261  000B74  51AB               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2262  000B76  0D01               	mullw	1
  2263  000B78  0E0F               	movlw	15
  2264  000B7A  26F3               	addwf	prodl,f,c
  2265  000B7C  0E00               	movlw	0
  2266  000B7E  22F4               	addwfc	prodh,f,c
  2267  000B80  50F3               	movf	prodl,w,c
  2268  000B82  0100               	movlb	0	; () banked
  2269  000B84  0100               	movlb	0	; () banked
  2270  000B86  25CD               	addwf	_ic_ptr& (0+255),w,b
  2271  000B88  6EE1               	movwf	fsr1l,c
  2272  000B8A  50F4               	movf	prodh,w,c
  2273  000B8C  0100               	movlb	0	; () banked
  2274  000B8E  0100               	movlb	0	; () banked
  2275  000B90  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2276  000B92  6EE2               	movwf	fsr1h,c
  2277  000B94  CFDF FFE7          	movff	indf2,indf1
  2278                           
  2279                           ; BSR set to: 0
  2280  000B98  0100               	movlb	0	; () banked
  2281  000B9A  EE20 F019          	lfsr	2,25
  2282  000B9E  0100               	movlb	0	; () banked
  2283  000BA0  51CD               	movf	_ic_ptr& (0+255),w,b
  2284  000BA2  26D9               	addwf	fsr2l,f,c
  2285  000BA4  0100               	movlb	0	; () banked
  2286  000BA6  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2287  000BA8  22DA               	addwfc	fsr2h,f,c
  2288  000BAA  2ADF               	incf	indf2,f,c
  2289  000BAC                     l2228:
  2290                           
  2291                           ; BSR set to: 0
  2292  000BAC  0100               	movlb	0	; () banked
  2293  000BAE  EE20 F019          	lfsr	2,25
  2294  000BB2  0100               	movlb	0	; () banked
  2295  000BB4  51CD               	movf	_ic_ptr& (0+255),w,b
  2296  000BB6  26D9               	addwf	fsr2l,f,c
  2297  000BB8  0100               	movlb	0	; () banked
  2298  000BBA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2299  000BBC  22DA               	addwfc	fsr2h,f,c
  2300  000BBE  50DF               	movf	indf2,w,c
  2301  000BC0  0100               	movlb	0	; () banked
  2302  000BC2  6FAA               	movwf	??_start_i2c_slave_reply& (0+255),b
  2303  000BC4  0100               	movlb	0	; () banked
  2304  000BC6  0100               	movlb	0	; () banked
  2305  000BC8  51AC               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2306  000BCA  0100               	movlb	0	; () banked
  2307  000BCC  5DAA               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2308  000BCE  A0D8               	btfss	status,0,c
  2309  000BD0  D7AB               	goto	l2224
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;my_i2c.c: 57: }
  2313                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2314                           
  2315                           ; BSR set to: 0
  2316  000BD2  0100               	movlb	0	; () banked
  2317  000BD4  EE20 F019          	lfsr	2,25
  2318  000BD8  0100               	movlb	0	; () banked
  2319  000BDA  51CD               	movf	_ic_ptr& (0+255),w,b
  2320  000BDC  26D9               	addwf	fsr2l,f,c
  2321  000BDE  0100               	movlb	0	; () banked
  2322  000BE0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2323  000BE2  22DA               	addwfc	fsr2h,f,c
  2324  000BE4  0100               	movlb	0	; () banked
  2325  000BE6  C0AC  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2326                           
  2327                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2328  000BEA  0100               	movlb	0	; () banked
  2329  000BEC  EE20 F01A          	lfsr	2,26
  2330  000BF0  0100               	movlb	0	; () banked
  2331  000BF2  51CD               	movf	_ic_ptr& (0+255),w,b
  2332  000BF4  26D9               	addwf	fsr2l,f,c
  2333  000BF6  0100               	movlb	0	; () banked
  2334  000BF8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2335  000BFA  22DA               	addwfc	fsr2h,f,c
  2336  000BFC  0E01               	movlw	1
  2337  000BFE  6EDF               	movwf	indf2,c
  2338                           
  2339                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2340  000C00  0100               	movlb	0	; () banked
  2341  000C02  EE20 F00F          	lfsr	2,15
  2342  000C06  0100               	movlb	0	; () banked
  2343  000C08  51CD               	movf	_ic_ptr& (0+255),w,b
  2344  000C0A  26D9               	addwf	fsr2l,f,c
  2345  000C0C  0100               	movlb	0	; () banked
  2346  000C0E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2347  000C10  22DA               	addwfc	fsr2h,f,c
  2348  000C12  50DF               	movf	indf2,w,c
  2349  000C14  6EC9               	movwf	4041,c	;volatile
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2353  000C16  88C6               	bsf	4038,4,c	;volatile
  2354                           
  2355                           ; BSR set to: 0
  2356  000C18  0012               	return	
  2357  000C1A                     __end_of_start_i2c_slave_reply:
  2358                           	opt stack 0
  2359                           tblptru	equ	0xFF8
  2360                           tblptrh	equ	0xFF7
  2361                           tblptrl	equ	0xFF6
  2362                           tablat	equ	0xFF5
  2363                           prodh	equ	0xFF4
  2364                           prodl	equ	0xFF3
  2365                           postinc0	equ	0xFEE
  2366                           wreg	equ	0xFE8
  2367                           indf1	equ	0xFE7
  2368                           fsr1h	equ	0xFE2
  2369                           fsr1l	equ	0xFE1
  2370                           indf2	equ	0xFDF
  2371                           postinc2	equ	0xFDE
  2372                           postdec2	equ	0xFDD
  2373                           fsr2h	equ	0xFDA
  2374                           fsr2l	equ	0xFD9
  2375                           status	equ	0xFD8
  2376                           
  2377 ;; *************** function _returnADCValue *****************
  2378 ;; Defined at:
  2379 ;;		line 16 in file "../src/interrupts.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;		None
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;  temp            2   42[BANK0 ] int 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  2   40[BANK0 ] int 
  2386 ;; Registers used:
  2387 ;;		wreg, status,2, status,0
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2393 ;;      Params:         0       2       0       0       0
  2394 ;;      Locals:         0       2       0       0       0
  2395 ;;      Temps:          0       0       0       0       0
  2396 ;;      Totals:         0       4       0       0       0
  2397 ;;Total ram usage:        4 bytes
  2398 ;; Hardware stack levels used:    1
  2399 ;; Hardware stack levels required when called:   10
  2400 ;; This function calls:
  2401 ;;		Nothing
  2402 ;; This function is called by:
  2403 ;;		_main
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406                           
  2407                           	psect	text8
  2408  0019C8                     __ptext8:
  2409                           	opt stack 0
  2410  0019C8                     _returnADCValue:
  2411                           	opt stack 20
  2412                           
  2413                           ;interrupts.c: 18: int temp = 0;
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;incstack = 0
  2417  0019C8  0E00               	movlw	0
  2418  0019CA  0100               	movlb	0	; () banked
  2419  0019CC  0100               	movlb	0	; () banked
  2420  0019CE  6FAB               	movwf	(returnADCValue@temp+1)& (0+255),b
  2421  0019D0  0E00               	movlw	0
  2422  0019D2  0100               	movlb	0	; () banked
  2423  0019D4  6FAA               	movwf	returnADCValue@temp& (0+255),b
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;interrupts.c: 19: temp = temp + 1;
  2427  0019D6  0E01               	movlw	1
  2428  0019D8  0100               	movlb	0	; () banked
  2429  0019DA  0100               	movlb	0	; () banked
  2430  0019DC  25AA               	addwf	returnADCValue@temp& (0+255),w,b
  2431  0019DE  0100               	movlb	0	; () banked
  2432  0019E0  0100               	movlb	0	; () banked
  2433  0019E2  6FAA               	movwf	returnADCValue@temp& (0+255),b
  2434  0019E4  0E00               	movlw	0
  2435  0019E6  0100               	movlb	0	; () banked
  2436  0019E8  0100               	movlb	0	; () banked
  2437  0019EA  21AB               	addwfc	(returnADCValue@temp+1)& (0+255),w,b
  2438  0019EC  0100               	movlb	0	; () banked
  2439  0019EE  6FAB               	movwf	(returnADCValue@temp+1)& (0+255),b
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;interrupts.c: 20: return ADCValue;
  2443  0019F0  C0CF  F0A8         	movff	_ADCValue,?_returnADCValue
  2444  0019F4  C0D0  F0A9         	movff	_ADCValue+1,?_returnADCValue+1
  2445  0019F8  0012               	return	
  2446  0019FA                     __end_of_returnADCValue:
  2447                           	opt stack 0
  2448                           tblptru	equ	0xFF8
  2449                           tblptrh	equ	0xFF7
  2450                           tblptrl	equ	0xFF6
  2451                           tablat	equ	0xFF5
  2452                           prodh	equ	0xFF4
  2453                           prodl	equ	0xFF3
  2454                           postinc0	equ	0xFEE
  2455                           wreg	equ	0xFE8
  2456                           indf1	equ	0xFE7
  2457                           fsr1h	equ	0xFE2
  2458                           fsr1l	equ	0xFE1
  2459                           indf2	equ	0xFDF
  2460                           postinc2	equ	0xFDE
  2461                           postdec2	equ	0xFDD
  2462                           fsr2h	equ	0xFDA
  2463                           fsr2l	equ	0xFD9
  2464                           status	equ	0xFD8
  2465                           
  2466 ;; *************** function _init_uart_recv *****************
  2467 ;; Defined at:
  2468 ;;		line 30 in file "../src/my_uart.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;  uc              2   40[BANK0 ] PTR struct __uart_comm
  2471 ;;		 -> main@uc(5), 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;		None
  2474 ;; Return value:  Size  Location     Type
  2475 ;;		None               void
  2476 ;; Registers used:
  2477 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2483 ;;      Params:         0       2       0       0       0
  2484 ;;      Locals:         0       0       0       0       0
  2485 ;;      Temps:          0       0       0       0       0
  2486 ;;      Totals:         0       2       0       0       0
  2487 ;;Total ram usage:        2 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; Hardware stack levels required when called:   10
  2490 ;; This function calls:
  2491 ;;		Nothing
  2492 ;; This function is called by:
  2493 ;;		_main
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text9
  2498  001AEA                     __ptext9:
  2499                           	opt stack 0
  2500  001AEA                     _init_uart_recv:
  2501                           	opt stack 20
  2502                           
  2503                           ;my_uart.c: 31: uc_ptr = uc;
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;incstack = 0
  2507  001AEA  0100               	movlb	0	; () banked
  2508  001AEC  C0A9  F04E         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2509  001AF0  0100               	movlb	0	; () banked
  2510  001AF2  C0A8  F04D         	movff	init_uart_recv@uc,_uc_ptr
  2511                           
  2512                           ; BSR set to: 0
  2513                           ;my_uart.c: 32: uc_ptr->buflen = 0;
  2514  001AF6  EE20 F004          	lfsr	2,4
  2515  001AFA  504D               	movf	_uc_ptr,w,c
  2516  001AFC  26D9               	addwf	fsr2l,f,c
  2517  001AFE  504E               	movf	_uc_ptr+1,w,c
  2518  001B00  22DA               	addwfc	fsr2h,f,c
  2519  001B02  0E00               	movlw	0
  2520  001B04  6EDF               	movwf	indf2,c
  2521                           
  2522                           ; BSR set to: 0
  2523  001B06  0012               	return	
  2524  001B08                     __end_of_init_uart_recv:
  2525                           	opt stack 0
  2526                           tblptru	equ	0xFF8
  2527                           tblptrh	equ	0xFF7
  2528                           tblptrl	equ	0xFF6
  2529                           tablat	equ	0xFF5
  2530                           prodh	equ	0xFF4
  2531                           prodl	equ	0xFF3
  2532                           postinc0	equ	0xFEE
  2533                           wreg	equ	0xFE8
  2534                           indf1	equ	0xFE7
  2535                           fsr1h	equ	0xFE2
  2536                           fsr1l	equ	0xFE1
  2537                           indf2	equ	0xFDF
  2538                           postinc2	equ	0xFDE
  2539                           postdec2	equ	0xFDD
  2540                           fsr2h	equ	0xFDA
  2541                           fsr2l	equ	0xFD9
  2542                           status	equ	0xFD8
  2543                           
  2544 ;; *************** function _init_timer1_lthread *****************
  2545 ;; Defined at:
  2546 ;;		line 6 in file "../src/timer1_thread.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  tptr            2   40[BANK0 ] PTR struct __timer1_thre
  2549 ;;		 -> main@t1thread_data(2), 
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;		None
  2552 ;; Return value:  Size  Location     Type
  2553 ;;		None               void
  2554 ;; Registers used:
  2555 ;;		wreg, fsr2l, fsr2h
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2561 ;;      Params:         0       2       0       0       0
  2562 ;;      Locals:         0       0       0       0       0
  2563 ;;      Temps:          0       0       0       0       0
  2564 ;;      Totals:         0       2       0       0       0
  2565 ;;Total ram usage:        2 bytes
  2566 ;; Hardware stack levels used:    1
  2567 ;; Hardware stack levels required when called:   10
  2568 ;; This function calls:
  2569 ;;		Nothing
  2570 ;; This function is called by:
  2571 ;;		_main
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           	psect	text10
  2576  001B4E                     __ptext10:
  2577                           	opt stack 0
  2578  001B4E                     _init_timer1_lthread:
  2579                           	opt stack 20
  2580                           
  2581                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;incstack = 0
  2585  001B4E  C0A8  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2586  001B52  C0A9  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2587  001B56  0E00               	movlw	0
  2588  001B58  6EDE               	movwf	postinc2,c
  2589  001B5A  0E00               	movlw	0
  2590  001B5C  6EDD               	movwf	postdec2,c
  2591  001B5E  0012               	return	
  2592  001B60                     __end_of_init_timer1_lthread:
  2593                           	opt stack 0
  2594                           tblptru	equ	0xFF8
  2595                           tblptrh	equ	0xFF7
  2596                           tblptrl	equ	0xFF6
  2597                           tablat	equ	0xFF5
  2598                           prodh	equ	0xFF4
  2599                           prodl	equ	0xFF3
  2600                           postinc0	equ	0xFEE
  2601                           wreg	equ	0xFE8
  2602                           indf1	equ	0xFE7
  2603                           fsr1h	equ	0xFE2
  2604                           fsr1l	equ	0xFE1
  2605                           indf2	equ	0xFDF
  2606                           postinc2	equ	0xFDE
  2607                           postdec2	equ	0xFDD
  2608                           fsr2h	equ	0xFDA
  2609                           fsr2l	equ	0xFD9
  2610                           status	equ	0xFD8
  2611                           
  2612 ;; *************** function _init_queues *****************
  2613 ;; Defined at:
  2614 ;;		line 194 in file "../src/messages.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;		None
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;		None               void
  2621 ;; Registers used:
  2622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2628 ;;      Params:         0       0       0       0       0
  2629 ;;      Locals:         0       0       0       0       0
  2630 ;;      Temps:          0       1       0       0       0
  2631 ;;      Totals:         0       1       0       0       0
  2632 ;;Total ram usage:        1 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:   11
  2635 ;; This function calls:
  2636 ;;		_init_queue
  2637 ;; This function is called by:
  2638 ;;		_main
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text11
  2643  00150C                     __ptext11:
  2644                           	opt stack 0
  2645  00150C                     _init_queues:
  2646                           	opt stack 19
  2647                           
  2648                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2649                           
  2650                           ;incstack = 0
  2651  00150C  0100               	movlb	0	; () banked
  2652  00150E  6FAC               	movwf	??_init_queues& (0+255),b
  2653  001510  0E00               	movlw	0
  2654  001512  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  2655  001514  0100               	movlb	0	; () banked
  2656  001516  51AC               	movf	??_init_queues& (0+255),w,b
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2660  001518  0101               	movlb	1	; () banked
  2661  00151A  0E01               	movlw	high _ToMainLow_MQ
  2662  00151C  0100               	movlb	0	; () banked
  2663  00151E  0100               	movlb	0	; () banked
  2664  001520  6FA9               	movwf	(init_queue@qptr+1)& (0+255),b
  2665  001522  0101               	movlb	1	; () banked
  2666  001524  0E6C               	movlw	low _ToMainLow_MQ
  2667  001526  0100               	movlb	0	; () banked
  2668  001528  0100               	movlb	0	; () banked
  2669  00152A  6FA8               	movwf	init_queue@qptr& (0+255),b
  2670  00152C  ECD3  F009         	call	_init_queue	;wreg free
  2671                           
  2672                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2673  001530  0101               	movlb	1	; () banked
  2674  001532  0E01               	movlw	high _ToMainHigh_MQ
  2675  001534  0100               	movlb	0	; () banked
  2676  001536  0100               	movlb	0	; () banked
  2677  001538  6FA9               	movwf	(init_queue@qptr+1)& (0+255),b
  2678  00153A  0101               	movlb	1	; () banked
  2679  00153C  0E36               	movlw	low _ToMainHigh_MQ
  2680  00153E  0100               	movlb	0	; () banked
  2681  001540  0100               	movlb	0	; () banked
  2682  001542  6FA8               	movwf	init_queue@qptr& (0+255),b
  2683  001544  ECD3  F009         	call	_init_queue	;wreg free
  2684                           
  2685                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2686  001548  0101               	movlb	1	; () banked
  2687  00154A  0E01               	movlw	high _FromMainLow_MQ
  2688  00154C  0100               	movlb	0	; () banked
  2689  00154E  0100               	movlb	0	; () banked
  2690  001550  6FA9               	movwf	(init_queue@qptr+1)& (0+255),b
  2691  001552  0101               	movlb	1	; () banked
  2692  001554  0E00               	movlw	low _FromMainLow_MQ
  2693  001556  0100               	movlb	0	; () banked
  2694  001558  0100               	movlb	0	; () banked
  2695  00155A  6FA8               	movwf	init_queue@qptr& (0+255),b
  2696  00155C  ECD3  F009         	call	_init_queue	;wreg free
  2697                           
  2698                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2699  001560  0102               	movlb	2	; () banked
  2700  001562  0E02               	movlw	high _FromMainHigh_MQ
  2701  001564  0100               	movlb	0	; () banked
  2702  001566  0100               	movlb	0	; () banked
  2703  001568  6FA9               	movwf	(init_queue@qptr+1)& (0+255),b
  2704  00156A  0102               	movlb	2	; () banked
  2705  00156C  0E00               	movlw	low _FromMainHigh_MQ
  2706  00156E  0100               	movlb	0	; () banked
  2707  001570  0100               	movlb	0	; () banked
  2708  001572  6FA8               	movwf	init_queue@qptr& (0+255),b
  2709  001574  ECD3  F009         	call	_init_queue	;wreg free
  2710  001578  0012               	return	
  2711  00157A                     __end_of_init_queues:
  2712                           	opt stack 0
  2713                           tblptru	equ	0xFF8
  2714                           tblptrh	equ	0xFF7
  2715                           tblptrl	equ	0xFF6
  2716                           tablat	equ	0xFF5
  2717                           prodh	equ	0xFF4
  2718                           prodl	equ	0xFF3
  2719                           postinc0	equ	0xFEE
  2720                           wreg	equ	0xFE8
  2721                           indf1	equ	0xFE7
  2722                           fsr1h	equ	0xFE2
  2723                           fsr1l	equ	0xFE1
  2724                           indf2	equ	0xFDF
  2725                           postinc2	equ	0xFDE
  2726                           postdec2	equ	0xFDD
  2727                           fsr2h	equ	0xFDA
  2728                           fsr2l	equ	0xFD9
  2729                           status	equ	0xFD8
  2730                           
  2731 ;; *************** function _init_queue *****************
  2732 ;; Defined at:
  2733 ;;		line 14 in file "../src/messages.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;  qptr            2   40[BANK0 ] PTR struct __msg_queue
  2736 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;  i               1   43[BANK0 ] unsigned char 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;		None               void
  2741 ;; Registers used:
  2742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2748 ;;      Params:         0       2       0       0       0
  2749 ;;      Locals:         0       1       0       0       0
  2750 ;;      Temps:          0       1       0       0       0
  2751 ;;      Totals:         0       4       0       0       0
  2752 ;;Total ram usage:        4 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; Hardware stack levels required when called:   10
  2755 ;; This function calls:
  2756 ;;		Nothing
  2757 ;; This function is called by:
  2758 ;;		_init_queues
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text12
  2763  0013A6                     __ptext12:
  2764                           	opt stack 0
  2765  0013A6                     _init_queue:
  2766                           	opt stack 19
  2767                           
  2768                           ;messages.c: 15: unsigned char i;
  2769                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2770                           
  2771                           ;incstack = 0
  2772  0013A6  0100               	movlb	0	; () banked
  2773  0013A8  EE20 F034          	lfsr	2,52
  2774  0013AC  0100               	movlb	0	; () banked
  2775  0013AE  51A8               	movf	init_queue@qptr& (0+255),w,b
  2776  0013B0  26D9               	addwf	fsr2l,f,c
  2777  0013B2  0100               	movlb	0	; () banked
  2778  0013B4  51A9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2779  0013B6  22DA               	addwfc	fsr2h,f,c
  2780  0013B8  0E00               	movlw	0
  2781  0013BA  6EDF               	movwf	indf2,c
  2782                           
  2783                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2784  0013BC  0100               	movlb	0	; () banked
  2785  0013BE  EE20 F035          	lfsr	2,53
  2786  0013C2  0100               	movlb	0	; () banked
  2787  0013C4  51A8               	movf	init_queue@qptr& (0+255),w,b
  2788  0013C6  26D9               	addwf	fsr2l,f,c
  2789  0013C8  0100               	movlb	0	; () banked
  2790  0013CA  51A9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2791  0013CC  22DA               	addwfc	fsr2h,f,c
  2792  0013CE  0E00               	movlw	0
  2793  0013D0  6EDF               	movwf	indf2,c
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2797  0013D2  0100               	movlb	0	; () banked
  2798  0013D4  6FAA               	movwf	??_init_queue& (0+255),b
  2799  0013D6  0E00               	movlw	0
  2800  0013D8  0100               	movlb	0	; () banked
  2801  0013DA  0100               	movlb	0	; () banked
  2802  0013DC  6FAB               	movwf	init_queue@i& (0+255),b
  2803  0013DE  0100               	movlb	0	; () banked
  2804  0013E0  51AA               	movf	??_init_queue& (0+255),w,b
  2805                           
  2806                           ; BSR set to: 0
  2807  0013E2  0E03               	movlw	3
  2808  0013E4  0100               	movlb	0	; () banked
  2809  0013E6  0100               	movlb	0	; () banked
  2810  0013E8  65AB               	cpfsgt	init_queue@i& (0+255),b
  2811  0013EA  D001               	goto	l2448
  2812  0013EC  0012               	return	
  2813  0013EE                     l2448:
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;messages.c: 20: qptr->queue[i].full = 0;
  2817  0013EE  0100               	movlb	0	; () banked
  2818  0013F0  0100               	movlb	0	; () banked
  2819  0013F2  51AB               	movf	init_queue@i& (0+255),w,b
  2820  0013F4  0D0D               	mullw	13
  2821  0013F6  50F3               	movf	prodl,w,c
  2822  0013F8  0100               	movlb	0	; () banked
  2823  0013FA  0100               	movlb	0	; () banked
  2824  0013FC  25A8               	addwf	init_queue@qptr& (0+255),w,b
  2825  0013FE  6ED9               	movwf	fsr2l,c
  2826  001400  50F4               	movf	prodh,w,c
  2827  001402  0100               	movlb	0	; () banked
  2828  001404  0100               	movlb	0	; () banked
  2829  001406  21A9               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2830  001408  6EDA               	movwf	fsr2h,c
  2831  00140A  0E00               	movlw	0
  2832  00140C  6EDF               	movwf	indf2,c
  2833                           
  2834                           ; BSR set to: 0
  2835  00140E  0100               	movlb	0	; () banked
  2836  001410  0100               	movlb	0	; () banked
  2837  001412  2BAB               	incf	init_queue@i& (0+255),f,b
  2838                           
  2839                           ; BSR set to: 0
  2840  001414  0E03               	movlw	3
  2841  001416  0100               	movlb	0	; () banked
  2842  001418  0100               	movlb	0	; () banked
  2843  00141A  65AB               	cpfsgt	init_queue@i& (0+255),b
  2844  00141C  D7E8               	goto	l2448
  2845  00141E  0012               	return	
  2846  001420                     __end_of_init_queue:
  2847                           	opt stack 0
  2848                           tblptru	equ	0xFF8
  2849                           tblptrh	equ	0xFF7
  2850                           tblptrl	equ	0xFF6
  2851                           tablat	equ	0xFF5
  2852                           prodh	equ	0xFF4
  2853                           prodl	equ	0xFF3
  2854                           postinc0	equ	0xFEE
  2855                           wreg	equ	0xFE8
  2856                           indf1	equ	0xFE7
  2857                           fsr1h	equ	0xFE2
  2858                           fsr1l	equ	0xFE1
  2859                           indf2	equ	0xFDF
  2860                           postinc2	equ	0xFDE
  2861                           postdec2	equ	0xFDD
  2862                           fsr2h	equ	0xFDA
  2863                           fsr2l	equ	0xFD9
  2864                           status	equ	0xFD8
  2865                           
  2866 ;; *************** function _init_i2c *****************
  2867 ;; Defined at:
  2868 ;;		line 297 in file "../src/my_i2c.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  ic              2   40[BANK0 ] PTR struct __i2c_comm
  2871 ;;		 -> main@ic(28), 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;		None               void
  2876 ;; Registers used:
  2877 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2883 ;;      Params:         0       2       0       0       0
  2884 ;;      Locals:         0       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0
  2886 ;;      Totals:         0       2       0       0       0
  2887 ;;Total ram usage:        2 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:   10
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_main
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text13
  2898  00157A                     __ptext13:
  2899                           	opt stack 0
  2900  00157A                     _init_i2c:
  2901                           	opt stack 20
  2902                           
  2903                           ;my_i2c.c: 298: ic_ptr = ic;
  2904                           
  2905                           ; BSR set to: 0
  2906                           ;incstack = 0
  2907  00157A  0100               	movlb	0	; () banked
  2908  00157C  0100               	movlb	0	; () banked
  2909  00157E  C0A9  F0CE         	movff	init_i2c@ic+1,_ic_ptr+1
  2910  001582  0100               	movlb	0	; () banked
  2911  001584  0100               	movlb	0	; () banked
  2912  001586  C0A8  F0CD         	movff	init_i2c@ic,_ic_ptr
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;my_i2c.c: 299: ic_ptr->buflen = 0;
  2916  00158A  0100               	movlb	0	; () banked
  2917  00158C  EE20 F00A          	lfsr	2,10
  2918  001590  0100               	movlb	0	; () banked
  2919  001592  51CD               	movf	_ic_ptr& (0+255),w,b
  2920  001594  26D9               	addwf	fsr2l,f,c
  2921  001596  0100               	movlb	0	; () banked
  2922  001598  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2923  00159A  22DA               	addwfc	fsr2h,f,c
  2924  00159C  0E00               	movlw	0
  2925  00159E  6EDF               	movwf	indf2,c
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;my_i2c.c: 300: ic_ptr->event_count = 0;
  2929  0015A0  0100               	movlb	0	; () banked
  2930  0015A2  EE20 F00B          	lfsr	2,11
  2931  0015A6  0100               	movlb	0	; () banked
  2932  0015A8  51CD               	movf	_ic_ptr& (0+255),w,b
  2933  0015AA  26D9               	addwf	fsr2l,f,c
  2934  0015AC  0100               	movlb	0	; () banked
  2935  0015AE  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2936  0015B0  22DA               	addwfc	fsr2h,f,c
  2937  0015B2  0E00               	movlw	0
  2938  0015B4  6EDF               	movwf	indf2,c
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;my_i2c.c: 301: ic_ptr->status = 0x5;
  2942  0015B6  0100               	movlb	0	; () banked
  2943  0015B8  EE20 F00C          	lfsr	2,12
  2944  0015BC  0100               	movlb	0	; () banked
  2945  0015BE  51CD               	movf	_ic_ptr& (0+255),w,b
  2946  0015C0  26D9               	addwf	fsr2l,f,c
  2947  0015C2  0100               	movlb	0	; () banked
  2948  0015C4  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2949  0015C6  22DA               	addwfc	fsr2h,f,c
  2950  0015C8  0E05               	movlw	5
  2951  0015CA  6EDF               	movwf	indf2,c
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;my_i2c.c: 302: ic_ptr->error_count = 0;
  2955  0015CC  0100               	movlb	0	; () banked
  2956  0015CE  EE20 F00E          	lfsr	2,14
  2957  0015D2  0100               	movlb	0	; () banked
  2958  0015D4  51CD               	movf	_ic_ptr& (0+255),w,b
  2959  0015D6  26D9               	addwf	fsr2l,f,c
  2960  0015D8  0100               	movlb	0	; () banked
  2961  0015DA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2962  0015DC  22DA               	addwfc	fsr2h,f,c
  2963  0015DE  0E00               	movlw	0
  2964  0015E0  6EDF               	movwf	indf2,c
  2965                           
  2966                           ; BSR set to: 0
  2967  0015E2  0012               	return	
  2968  0015E4                     __end_of_init_i2c:
  2969                           	opt stack 0
  2970                           tblptru	equ	0xFF8
  2971                           tblptrh	equ	0xFF7
  2972                           tblptrl	equ	0xFF6
  2973                           tablat	equ	0xFF5
  2974                           prodh	equ	0xFF4
  2975                           prodl	equ	0xFF3
  2976                           postinc0	equ	0xFEE
  2977                           wreg	equ	0xFE8
  2978                           indf1	equ	0xFE7
  2979                           fsr1h	equ	0xFE2
  2980                           fsr1l	equ	0xFE1
  2981                           indf2	equ	0xFDF
  2982                           postinc2	equ	0xFDE
  2983                           postdec2	equ	0xFDD
  2984                           fsr2h	equ	0xFDA
  2985                           fsr2l	equ	0xFD9
  2986                           status	equ	0xFD8
  2987                           
  2988 ;; *************** function _initADC *****************
  2989 ;; Defined at:
  2990 ;;		line 98 in file "../src/main.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;  ADCValue        2   47[BANK0 ] int 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;		None               void
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, status,0, cstack
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3004 ;;      Params:         0       0       0       0       0
  3005 ;;      Locals:         0       2       0       0       0
  3006 ;;      Temps:          0       2       0       0       0
  3007 ;;      Totals:         0       4       0       0       0
  3008 ;;Total ram usage:        4 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:   11
  3011 ;; This function calls:
  3012 ;;		_ConvertADC
  3013 ;;		_OpenADC
  3014 ;; This function is called by:
  3015 ;;		_main
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text14
  3020  001762                     __ptext14:
  3021                           	opt stack 0
  3022  001762                     _initADC:
  3023                           	opt stack 19
  3024                           
  3025                           ;main.c: 100: int ADCValue = 0;
  3026                           
  3027                           ; BSR set to: 0
  3028                           ;incstack = 0
  3029  001762  0E00               	movlw	0
  3030  001764  0100               	movlb	0	; () banked
  3031  001766  0100               	movlb	0	; () banked
  3032  001768  6FB0               	movwf	(initADC@ADCValue+1)& (0+255),b
  3033  00176A  0E00               	movlw	0
  3034  00176C  0100               	movlb	0	; () banked
  3035  00176E  6FAF               	movwf	initADC@ADCValue& (0+255),b
  3036                           
  3037                           ; BSR set to: 0
  3038                           ;main.c: 102: OpenADC(0b10001111 & 0b11111111 & 0b11111111, 0b10000111 & 0b11111111 & 0b
      +                          11111110 & 0b11111101, 0b11111111);
  3039  001770  0100               	movlb	0	; () banked
  3040  001772  6FAD               	movwf	??_initADC& (0+255),b
  3041  001774  0E84               	movlw	132
  3042  001776  0100               	movlb	0	; () banked
  3043  001778  0100               	movlb	0	; () banked
  3044  00177A  6FA8               	movwf	OpenADC@config2& (0+255),b
  3045  00177C  0100               	movlb	0	; () banked
  3046  00177E  51AD               	movf	??_initADC& (0+255),w,b
  3047  001780  0100               	movlb	0	; () banked
  3048  001782  6FAE               	movwf	(??_initADC+1)& (0+255),b
  3049  001784  0EFF               	movlw	255
  3050  001786  0100               	movlb	0	; () banked
  3051  001788  0100               	movlb	0	; () banked
  3052  00178A  6FA9               	movwf	OpenADC@portconfig& (0+255),b
  3053  00178C  0100               	movlb	0	; () banked
  3054  00178E  51AE               	movf	(??_initADC+1)& (0+255),w,b
  3055  001790  0E8F               	movlw	143
  3056  001792  EC91  F009         	call	_OpenADC
  3057                           
  3058                           ;main.c: 103: (PIR1bits.ADIF=0,INTCONbits.PEIE=1,PIE1bits.ADIE=1);
  3059  001796  9C9E               	bcf	3998,6,c	;volatile
  3060  001798  8CF2               	bsf	intcon,6,c	;volatile
  3061  00179A  8C9D               	bsf	3997,6,c	;volatile
  3062                           
  3063                           ;main.c: 104: (INTCONbits.GIE = 1);
  3064  00179C  8EF2               	bsf	intcon,7,c	;volatile
  3065                           
  3066                           ;main.c: 105: ConvertADC();
  3067  00179E  ECE6  F00D         	call	_ConvertADC	;wreg free
  3068  0017A2  0012               	return	
  3069  0017A4                     __end_of_initADC:
  3070                           	opt stack 0
  3071                           tblptru	equ	0xFF8
  3072                           tblptrh	equ	0xFF7
  3073                           tblptrl	equ	0xFF6
  3074                           tablat	equ	0xFF5
  3075                           prodh	equ	0xFF4
  3076                           prodl	equ	0xFF3
  3077                           intcon	equ	0xFF2
  3078                           postinc0	equ	0xFEE
  3079                           wreg	equ	0xFE8
  3080                           indf1	equ	0xFE7
  3081                           fsr1h	equ	0xFE2
  3082                           fsr1l	equ	0xFE1
  3083                           indf2	equ	0xFDF
  3084                           postinc2	equ	0xFDE
  3085                           postdec2	equ	0xFDD
  3086                           fsr2h	equ	0xFDA
  3087                           fsr2l	equ	0xFD9
  3088                           status	equ	0xFD8
  3089                           
  3090 ;; *************** function _OpenADC *****************
  3091 ;; Defined at:
  3092 ;;		line 68 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcopen.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;  config          1    wreg     unsigned char 
  3095 ;;  config2         1   40[BANK0 ] unsigned char 
  3096 ;;  portconfig      1   41[BANK0 ] unsigned char 
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;  config          1   44[BANK0 ] unsigned char 
  3099 ;; Return value:  Size  Location     Type
  3100 ;;		None               void
  3101 ;; Registers used:
  3102 ;;		wreg, status,2, status,0
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3108 ;;      Params:         0       2       0       0       0
  3109 ;;      Locals:         0       1       0       0       0
  3110 ;;      Temps:          0       2       0       0       0
  3111 ;;      Totals:         0       5       0       0       0
  3112 ;;Total ram usage:        5 bytes
  3113 ;; Hardware stack levels used:    1
  3114 ;; Hardware stack levels required when called:   10
  3115 ;; This function calls:
  3116 ;;		Nothing
  3117 ;; This function is called by:
  3118 ;;		_initADC
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           	psect	text15
  3123  001322                     __ptext15:
  3124                           	opt stack 0
  3125  001322                     _OpenADC:
  3126                           	opt stack 19
  3127                           
  3128                           ;incstack = 0
  3129                           ;OpenADC@config stored from wreg
  3130  001322  CFE8 F0AC          	movff	wreg,OpenADC@config
  3131  001326  0E00               	movlw	0
  3132  001328  6EC2               	movwf	4034,c	;volatile
  3133  00132A  0E00               	movlw	0
  3134  00132C  6EC0               	movwf	4032,c	;volatile
  3135  00132E  0100               	movlb	0	; () banked
  3136  001330  0100               	movlb	0	; () banked
  3137  001332  90D8               	bcf	status,0,c
  3138  001334  31A8               	rrcf	OpenADC@config2& (0+255),w,b
  3139  001336  0B3C               	andlw	60
  3140  001338  6EC2               	movwf	4034,c	;volatile
  3141                           
  3142                           ; BSR set to: 0
  3143  00133A  C0A8  F0AA         	movff	OpenADC@config2,??_OpenADC
  3144  00133E  0100               	movlb	0	; () banked
  3145  001340  3BAA               	swapf	??_OpenADC& (0+255),f,b
  3146  001342  0EF0               	movlw	240
  3147  001344  17AA               	andwf	??_OpenADC& (0+255),f,b
  3148  001346  0E30               	movlw	48
  3149  001348  0100               	movlb	0	; () banked
  3150  00134A  17AA               	andwf	??_OpenADC& (0+255),f,b
  3151  00134C  0100               	movlb	0	; () banked
  3152  00134E  0100               	movlb	0	; () banked
  3153  001350  51A9               	movf	OpenADC@portconfig& (0+255),w,b
  3154  001352  0B0F               	andlw	15
  3155  001354  0100               	movlb	0	; () banked
  3156  001356  11AA               	iorwf	??_OpenADC& (0+255),w,b
  3157  001358  6EC1               	movwf	4033,c	;volatile
  3158                           
  3159                           ; BSR set to: 0
  3160  00135A  C0AC  F0AA         	movff	OpenADC@config,??_OpenADC
  3161  00135E  0100               	movlb	0	; () banked
  3162  001360  90D8               	bcf	status,0,c
  3163  001362  37AA               	rlcf	??_OpenADC& (0+255),f,b
  3164  001364  0100               	movlb	0	; () banked
  3165  001366  90D8               	bcf	status,0,c
  3166  001368  37AA               	rlcf	??_OpenADC& (0+255),f,b
  3167  00136A  0E38               	movlw	56
  3168  00136C  0100               	movlb	0	; () banked
  3169  00136E  17AA               	andwf	??_OpenADC& (0+255),f,b
  3170  001370  C0AC  F0AB         	movff	OpenADC@config,??_OpenADC+1
  3171  001374  0100               	movlb	0	; () banked
  3172  001376  3BAB               	swapf	(??_OpenADC+1)& (0+255),f,b
  3173  001378  0E0F               	movlw	15
  3174  00137A  17AB               	andwf	(??_OpenADC+1)& (0+255),f,b
  3175  00137C  0E07               	movlw	7
  3176  00137E  0100               	movlb	0	; () banked
  3177  001380  17AB               	andwf	(??_OpenADC+1)& (0+255),f,b
  3178  001382  0100               	movlb	0	; () banked
  3179  001384  0100               	movlb	0	; () banked
  3180  001386  51AC               	movf	OpenADC@config& (0+255),w,b
  3181  001388  0B80               	andlw	128
  3182  00138A  0100               	movlb	0	; () banked
  3183  00138C  11AB               	iorwf	(??_OpenADC+1)& (0+255),w,b
  3184  00138E  0100               	movlb	0	; () banked
  3185  001390  11AA               	iorwf	??_OpenADC& (0+255),w,b
  3186  001392  6EC0               	movwf	4032,c	;volatile
  3187                           
  3188                           ; BSR set to: 0
  3189  001394  0100               	movlb	0	; () banked
  3190  001396  0100               	movlb	0	; () banked
  3191  001398  AFA8               	btfss	OpenADC@config2& (0+255),7,b
  3192  00139A  D003               	goto	l419
  3193                           
  3194                           ; BSR set to: 0
  3195  00139C  9C9E               	bcf	3998,6,c	;volatile
  3196  00139E  8C9D               	bsf	3997,6,c	;volatile
  3197  0013A0  8CF2               	bsf	intcon,6,c	;volatile
  3198  0013A2                     l419:
  3199                           
  3200                           ; BSR set to: 0
  3201  0013A2  80C2               	bsf	4034,0,c	;volatile
  3202                           
  3203                           ; BSR set to: 0
  3204  0013A4  0012               	return	
  3205  0013A6                     __end_of_OpenADC:
  3206                           	opt stack 0
  3207                           tblptru	equ	0xFF8
  3208                           tblptrh	equ	0xFF7
  3209                           tblptrl	equ	0xFF6
  3210                           tablat	equ	0xFF5
  3211                           prodh	equ	0xFF4
  3212                           prodl	equ	0xFF3
  3213                           intcon	equ	0xFF2
  3214                           postinc0	equ	0xFEE
  3215                           wreg	equ	0xFE8
  3216                           indf1	equ	0xFE7
  3217                           fsr1h	equ	0xFE2
  3218                           fsr1l	equ	0xFE1
  3219                           indf2	equ	0xFDF
  3220                           postinc2	equ	0xFDE
  3221                           postdec2	equ	0xFDD
  3222                           fsr2h	equ	0xFDA
  3223                           fsr2l	equ	0xFD9
  3224                           status	equ	0xFD8
  3225                           
  3226 ;; *************** function _ConvertADC *****************
  3227 ;; Defined at:
  3228 ;;		line 22 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcconv.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;		None
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;		None
  3233 ;; Return value:  Size  Location     Type
  3234 ;;		None               void
  3235 ;; Registers used:
  3236 ;;		None
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3242 ;;      Params:         0       0       0       0       0
  3243 ;;      Locals:         0       0       0       0       0
  3244 ;;      Temps:          0       0       0       0       0
  3245 ;;      Totals:         0       0       0       0       0
  3246 ;;Total ram usage:        0 bytes
  3247 ;; Hardware stack levels used:    1
  3248 ;; Hardware stack levels required when called:   10
  3249 ;; This function calls:
  3250 ;;		Nothing
  3251 ;; This function is called by:
  3252 ;;		_initADC
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           	psect	text16
  3257  001BCC                     __ptext16:
  3258                           	opt stack 0
  3259  001BCC                     _ConvertADC:
  3260                           	opt stack 19
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;incstack = 0
  3264  001BCC  82C2               	bsf	4034,1,c	;volatile
  3265  001BCE  0012               	return	
  3266  001BD0                     __end_of_ConvertADC:
  3267                           	opt stack 0
  3268                           tblptru	equ	0xFF8
  3269                           tblptrh	equ	0xFF7
  3270                           tblptrl	equ	0xFF6
  3271                           tablat	equ	0xFF5
  3272                           prodh	equ	0xFF4
  3273                           prodl	equ	0xFF3
  3274                           intcon	equ	0xFF2
  3275                           postinc0	equ	0xFEE
  3276                           wreg	equ	0xFE8
  3277                           indf1	equ	0xFE7
  3278                           fsr1h	equ	0xFE2
  3279                           fsr1l	equ	0xFE1
  3280                           indf2	equ	0xFDF
  3281                           postinc2	equ	0xFDE
  3282                           postdec2	equ	0xFDD
  3283                           fsr2h	equ	0xFDA
  3284                           fsr2l	equ	0xFD9
  3285                           status	equ	0xFD8
  3286                           
  3287 ;; *************** function _i2c_configure_slave *****************
  3288 ;; Defined at:
  3289 ;;		line 308 in file "../src/my_i2c.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;  addr            1    wreg     unsigned char 
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;  addr            1   40[BANK0 ] unsigned char 
  3294 ;; Return value:  Size  Location     Type
  3295 ;;		None               void
  3296 ;; Registers used:
  3297 ;;		wreg, status,2, status,0
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3303 ;;      Params:         0       0       0       0       0
  3304 ;;      Locals:         0       1       0       0       0
  3305 ;;      Temps:          0       0       0       0       0
  3306 ;;      Totals:         0       1       0       0       0
  3307 ;;Total ram usage:        1 bytes
  3308 ;; Hardware stack levels used:    1
  3309 ;; Hardware stack levels required when called:   10
  3310 ;; This function calls:
  3311 ;;		Nothing
  3312 ;; This function is called by:
  3313 ;;		_main
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           	psect	text17
  3318  001A52                     __ptext17:
  3319                           	opt stack 0
  3320  001A52                     _i2c_configure_slave:
  3321                           	opt stack 20
  3322                           
  3323                           ;incstack = 0
  3324                           ;i2c_configure_slave@addr stored from wreg
  3325  001A52  CFE8 F0A8          	movff	wreg,i2c_configure_slave@addr
  3326                           
  3327                           ;my_i2c.c: 311: TRISCbits.TRISC3 = 1;
  3328  001A56  8694               	bsf	3988,3,c	;volatile
  3329                           
  3330                           ;my_i2c.c: 312: TRISCbits.TRISC4 = 1;
  3331  001A58  8894               	bsf	3988,4,c	;volatile
  3332                           
  3333                           ;my_i2c.c: 314: SSPADD = addr;
  3334  001A5A  C0A8  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3335                           
  3336                           ;my_i2c.c: 316: SSPSTAT = 0x0;
  3337  001A5E  0E00               	movlw	0
  3338  001A60  6EC7               	movwf	4039,c	;volatile
  3339                           
  3340                           ;my_i2c.c: 317: SSPCON1 = 0x0;
  3341  001A62  0E00               	movlw	0
  3342  001A64  6EC6               	movwf	4038,c	;volatile
  3343                           
  3344                           ;my_i2c.c: 318: SSPCON2 = 0x0;
  3345  001A66  0E00               	movlw	0
  3346  001A68  6EC5               	movwf	4037,c	;volatile
  3347                           
  3348                           ;my_i2c.c: 319: SSPCON1 |= 0x0E;
  3349  001A6A  0E0E               	movlw	14
  3350  001A6C  12C6               	iorwf	4038,f,c	;volatile
  3351                           
  3352                           ;my_i2c.c: 320: SSPSTAT |= 0b10000000;
  3353  001A6E  8EC7               	bsf	4039,7,c	;volatile
  3354                           
  3355                           ;my_i2c.c: 322: TRISCbits.TRISC3 = 1;
  3356  001A70  8694               	bsf	3988,3,c	;volatile
  3357                           
  3358                           ;my_i2c.c: 323: TRISCbits.TRISC4 = 1;
  3359  001A72  8894               	bsf	3988,4,c	;volatile
  3360                           
  3361                           ;my_i2c.c: 333: SSPCON2bits.SEN = 1;
  3362  001A74  80C5               	bsf	4037,0,c	;volatile
  3363                           
  3364                           ;my_i2c.c: 334: SSPCON1 |= 0b00100000;
  3365  001A76  8AC6               	bsf	4038,5,c	;volatile
  3366  001A78  0012               	return	
  3367  001A7A                     __end_of_i2c_configure_slave:
  3368                           	opt stack 0
  3369                           tblptru	equ	0xFF8
  3370                           tblptrh	equ	0xFF7
  3371                           tblptrl	equ	0xFF6
  3372                           tablat	equ	0xFF5
  3373                           prodh	equ	0xFF4
  3374                           prodl	equ	0xFF3
  3375                           intcon	equ	0xFF2
  3376                           postinc0	equ	0xFEE
  3377                           wreg	equ	0xFE8
  3378                           indf1	equ	0xFE7
  3379                           fsr1h	equ	0xFE2
  3380                           fsr1l	equ	0xFE1
  3381                           indf2	equ	0xFDF
  3382                           postinc2	equ	0xFDE
  3383                           postdec2	equ	0xFDD
  3384                           fsr2h	equ	0xFDA
  3385                           fsr2l	equ	0xFD9
  3386                           status	equ	0xFD8
  3387                           
  3388 ;; *************** function _enable_interrupts *****************
  3389 ;; Defined at:
  3390 ;;		line 23 in file "../src/interrupts.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;		None
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;		None
  3395 ;; Return value:  Size  Location     Type
  3396 ;;		None               void
  3397 ;; Registers used:
  3398 ;;		None
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3404 ;;      Params:         0       0       0       0       0
  3405 ;;      Locals:         0       0       0       0       0
  3406 ;;      Temps:          0       0       0       0       0
  3407 ;;      Totals:         0       0       0       0       0
  3408 ;;Total ram usage:        0 bytes
  3409 ;; Hardware stack levels used:    1
  3410 ;; Hardware stack levels required when called:   10
  3411 ;; This function calls:
  3412 ;;		Nothing
  3413 ;; This function is called by:
  3414 ;;		_main
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           	psect	text18
  3419  001BBE                     __ptext18:
  3420                           	opt stack 0
  3421  001BBE                     _enable_interrupts:
  3422                           	opt stack 20
  3423                           
  3424                           ;interrupts.c: 26: RCONbits.IPEN = 1;
  3425                           
  3426                           ;incstack = 0
  3427  001BBE  8ED0               	bsf	4048,7,c	;volatile
  3428                           
  3429                           ;interrupts.c: 27: INTCONbits.GIEH = 1;
  3430  001BC0  8EF2               	bsf	intcon,7,c	;volatile
  3431                           
  3432                           ;interrupts.c: 28: INTCONbits.GIEL = 1;
  3433  001BC2  8CF2               	bsf	intcon,6,c	;volatile
  3434  001BC4  0012               	return	
  3435  001BC6                     __end_of_enable_interrupts:
  3436                           	opt stack 0
  3437                           tblptru	equ	0xFF8
  3438                           tblptrh	equ	0xFF7
  3439                           tblptrl	equ	0xFF6
  3440                           tablat	equ	0xFF5
  3441                           prodh	equ	0xFF4
  3442                           prodl	equ	0xFF3
  3443                           intcon	equ	0xFF2
  3444                           postinc0	equ	0xFEE
  3445                           wreg	equ	0xFE8
  3446                           indf1	equ	0xFE7
  3447                           fsr1h	equ	0xFE2
  3448                           fsr1l	equ	0xFE1
  3449                           indf2	equ	0xFDF
  3450                           postinc2	equ	0xFDE
  3451                           postdec2	equ	0xFDD
  3452                           fsr2h	equ	0xFDA
  3453                           fsr2l	equ	0xFD9
  3454                           status	equ	0xFD8
  3455                           
  3456 ;; *************** function _block_on_To_msgqueues *****************
  3457 ;; Defined at:
  3458 ;;		line 258 in file "../src/messages.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;		None
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;		None
  3463 ;; Return value:  Size  Location     Type
  3464 ;;		None               void
  3465 ;; Registers used:
  3466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3472 ;;      Params:         0       0       0       0       0
  3473 ;;      Locals:         0       0       0       0       0
  3474 ;;      Temps:          0       1       0       0       0
  3475 ;;      Totals:         0       1       0       0       0
  3476 ;;Total ram usage:        1 bytes
  3477 ;; Hardware stack levels used:    1
  3478 ;; Hardware stack levels required when called:   13
  3479 ;; This function calls:
  3480 ;;		_Delay1KTCYx
  3481 ;;		_check_msg
  3482 ;;		_in_main
  3483 ;; This function is called by:
  3484 ;;		_main
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text19
  3489  0010C4                     __ptext19:
  3490                           	opt stack 0
  3491  0010C4                     _block_on_To_msgqueues:
  3492                           	opt stack 17
  3493                           
  3494                           ;messages.c: 259: if (!in_main()) {
  3495                           
  3496                           ;incstack = 0
  3497  0010C4  EC8F  F00B         	call	_in_main	;wreg free
  3498  0010C8  0100               	movlb	0	; () banked
  3499  0010CA  0100               	movlb	0	; () banked
  3500  0010CC  51AD               	movf	(?_in_main+1)& (0+255),w,b
  3501  0010CE  0100               	movlb	0	; () banked
  3502  0010D0  11AC               	iorwf	?_in_main& (0+255),w,b
  3503  0010D2  B4D8               	btfsc	status,2,c
  3504  0010D4  0012               	return	
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;messages.c: 261: }
  3508                           ;messages.c: 262: LATBbits.LATB3 = 1;
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;messages.c: 260: return;
  3512  0010D6  868A               	bsf	3978,3,c	;volatile
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3516  0010D8  0100               	movlb	0	; () banked
  3517  0010DA  6FAE               	movwf	??_block_on_To_msgqueues& (0+255),b
  3518  0010DC  0E01               	movlw	1
  3519  0010DE  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  3520  0010E0  0100               	movlb	0	; () banked
  3521  0010E2  51AE               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3522  0010E4                     l2604:
  3523                           
  3524                           ; BSR set to: 0
  3525                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3526  0010E4  0101               	movlb	1	; () banked
  3527  0010E6  0E01               	movlw	high _ToMainHigh_MQ
  3528  0010E8  0100               	movlb	0	; () banked
  3529  0010EA  0100               	movlb	0	; () banked
  3530  0010EC  6FA9               	movwf	(check_msg@qptr+1)& (0+255),b
  3531  0010EE  0101               	movlb	1	; () banked
  3532  0010F0  0E36               	movlw	low _ToMainHigh_MQ
  3533  0010F2  0100               	movlb	0	; () banked
  3534  0010F4  0100               	movlb	0	; () banked
  3535  0010F6  6FA8               	movwf	check_msg@qptr& (0+255),b
  3536  0010F8  ECC9  F00C         	call	_check_msg	;wreg free
  3537  0010FC  0900               	iorlw	0
  3538  0010FE  B4D8               	btfsc	status,2,c
  3539  001100  D008               	goto	l2612
  3540                           
  3541                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3542  001102  0100               	movlb	0	; () banked
  3543  001104  6FAE               	movwf	??_block_on_To_msgqueues& (0+255),b
  3544  001106  0E00               	movlw	0
  3545  001108  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  3546  00110A  0100               	movlb	0	; () banked
  3547  00110C  51AE               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;messages.c: 267: LATBbits.LATB3 = 0;
  3551  00110E  968A               	bcf	3978,3,c	;volatile
  3552  001110  0012               	return	
  3553  001112                     l2612:
  3554                           
  3555                           ;messages.c: 269: }
  3556                           ;messages.c: 270: if (check_msg(&ToMainLow_MQ)) {
  3557  001112  0101               	movlb	1	; () banked
  3558  001114  0E01               	movlw	high _ToMainLow_MQ
  3559  001116  0100               	movlb	0	; () banked
  3560  001118  0100               	movlb	0	; () banked
  3561  00111A  6FA9               	movwf	(check_msg@qptr+1)& (0+255),b
  3562  00111C  0101               	movlb	1	; () banked
  3563  00111E  0E6C               	movlw	low _ToMainLow_MQ
  3564  001120  0100               	movlb	0	; () banked
  3565  001122  0100               	movlb	0	; () banked
  3566  001124  6FA8               	movwf	check_msg@qptr& (0+255),b
  3567  001126  ECC9  F00C         	call	_check_msg	;wreg free
  3568  00112A  0900               	iorlw	0
  3569  00112C  B4D8               	btfsc	status,2,c
  3570  00112E  D008               	goto	l2620
  3571                           
  3572                           ;messages.c: 271: MQ_Main_Willing_to_block = 0;
  3573  001130  0100               	movlb	0	; () banked
  3574  001132  6FAE               	movwf	??_block_on_To_msgqueues& (0+255),b
  3575  001134  0E00               	movlw	0
  3576  001136  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  3577  001138  0100               	movlb	0	; () banked
  3578  00113A  51AE               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;messages.c: 272: LATBbits.LATB3 = 0;
  3582  00113C  968A               	bcf	3978,3,c	;volatile
  3583  00113E  0012               	return	
  3584  001140                     l2620:
  3585                           
  3586                           ;messages.c: 274: }
  3587                           ;messages.c: 275: Delay1KTCYx(10);
  3588  001140  0E0A               	movlw	10
  3589  001142  EC93  F00D         	call	_Delay1KTCYx
  3590                           
  3591                           ;messages.c: 276: LATBbits.LATB3 = !LATBbits.LATB3;
  3592  001146  B68A               	btfsc	3978,3,c	;volatile
  3593  001148  D002               	goto	u1570
  3594  00114A  0E01               	movlw	1
  3595  00114C  D001               	goto	u1576
  3596  00114E                     u1570:
  3597  00114E  0E00               	movlw	0
  3598  001150                     u1576:
  3599  001150  0100               	movlb	0	; () banked
  3600  001152  6FAE               	movwf	??_block_on_To_msgqueues& (0+255),b
  3601  001154  0100               	movlb	0	; () banked
  3602  001156  47AE               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3603  001158  47AE               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3604  00115A  47AE               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3605  00115C  508A               	movf	3978,w,c	;volatile
  3606  00115E  0100               	movlb	0	; () banked
  3607  001160  19AE               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  3608  001162  0BF7               	andlw	-9
  3609  001164  19AE               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  3610  001166  6E8A               	movwf	3978,c	;volatile
  3611  001168  D7BD               	goto	l2604
  3612  00116A                     __end_of_block_on_To_msgqueues:
  3613                           	opt stack 0
  3614                           tblptru	equ	0xFF8
  3615                           tblptrh	equ	0xFF7
  3616                           tblptrl	equ	0xFF6
  3617                           tablat	equ	0xFF5
  3618                           prodh	equ	0xFF4
  3619                           prodl	equ	0xFF3
  3620                           intcon	equ	0xFF2
  3621                           postinc0	equ	0xFEE
  3622                           wreg	equ	0xFE8
  3623                           indf1	equ	0xFE7
  3624                           fsr1h	equ	0xFE2
  3625                           fsr1l	equ	0xFE1
  3626                           indf2	equ	0xFDF
  3627                           postinc2	equ	0xFDE
  3628                           postdec2	equ	0xFDD
  3629                           fsr2h	equ	0xFDA
  3630                           fsr2l	equ	0xFD9
  3631                           status	equ	0xFD8
  3632                           
  3633 ;; *************** function _in_main *****************
  3634 ;; Defined at:
  3635 ;;		line 49 in file "../src/interrupts.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;		None
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;		None
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  2   44[BANK0 ] int 
  3642 ;; Registers used:
  3643 ;;		wreg, status,2, status,0, cstack
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3649 ;;      Params:         0       2       0       0       0
  3650 ;;      Locals:         0       0       0       0       0
  3651 ;;      Temps:          0       0       0       0       0
  3652 ;;      Totals:         0       2       0       0       0
  3653 ;;Total ram usage:        2 bytes
  3654 ;; Hardware stack levels used:    1
  3655 ;; Hardware stack levels required when called:   12
  3656 ;; This function calls:
  3657 ;;		_in_high_int
  3658 ;;		_in_low_int
  3659 ;; This function is called by:
  3660 ;;		_block_on_To_msgqueues
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           	psect	text20
  3665  00171E                     __ptext20:
  3666                           	opt stack 0
  3667  00171E                     _in_main:
  3668                           	opt stack 17
  3669                           
  3670                           ;interrupts.c: 50: if ((!in_low_int()) && (!in_high_int())) {
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;incstack = 0
  3674  00171E  EC6C  F00B         	call	_in_low_int	;wreg free
  3675  001722  0100               	movlb	0	; () banked
  3676  001724  0100               	movlb	0	; () banked
  3677  001726  51AB               	movf	(?_in_low_int+1)& (0+255),w,b
  3678  001728  0100               	movlb	0	; () banked
  3679  00172A  11AA               	iorwf	?_in_low_int& (0+255),w,b
  3680  00172C  A4D8               	btfss	status,2,c
  3681  00172E  D011               	goto	l2634
  3682                           
  3683                           ; BSR set to: 0
  3684  001730  ECB0  F00D         	call	_in_high_int	;wreg free
  3685  001734  0100               	movlb	0	; () banked
  3686  001736  0100               	movlb	0	; () banked
  3687  001738  51A9               	movf	(?_in_high_int+1)& (0+255),w,b
  3688  00173A  0100               	movlb	0	; () banked
  3689  00173C  11A8               	iorwf	?_in_high_int& (0+255),w,b
  3690  00173E  A4D8               	btfss	status,2,c
  3691  001740  D008               	goto	l2634
  3692                           
  3693                           ; BSR set to: 0
  3694                           ;interrupts.c: 51: return (1);
  3695  001742  0E00               	movlw	0
  3696  001744  0100               	movlb	0	; () banked
  3697  001746  0100               	movlb	0	; () banked
  3698  001748  6FAD               	movwf	(?_in_main+1)& (0+255),b
  3699  00174A  0E01               	movlw	1
  3700  00174C  0100               	movlb	0	; () banked
  3701  00174E  6FAC               	movwf	?_in_main& (0+255),b
  3702  001750  0012               	return	
  3703  001752                     l2634:
  3704                           
  3705                           ; BSR set to: 0
  3706                           ;interrupts.c: 53: return (0);
  3707  001752  0E00               	movlw	0
  3708  001754  0100               	movlb	0	; () banked
  3709  001756  0100               	movlb	0	; () banked
  3710  001758  6FAD               	movwf	(?_in_main+1)& (0+255),b
  3711  00175A  0E00               	movlw	0
  3712  00175C  0100               	movlb	0	; () banked
  3713  00175E  6FAC               	movwf	?_in_main& (0+255),b
  3714  001760  0012               	return	
  3715  001762                     __end_of_in_main:
  3716                           	opt stack 0
  3717                           tblptru	equ	0xFF8
  3718                           tblptrh	equ	0xFF7
  3719                           tblptrl	equ	0xFF6
  3720                           tablat	equ	0xFF5
  3721                           prodh	equ	0xFF4
  3722                           prodl	equ	0xFF3
  3723                           intcon	equ	0xFF2
  3724                           postinc0	equ	0xFEE
  3725                           wreg	equ	0xFE8
  3726                           indf1	equ	0xFE7
  3727                           fsr1h	equ	0xFE2
  3728                           fsr1l	equ	0xFE1
  3729                           indf2	equ	0xFDF
  3730                           postinc2	equ	0xFDE
  3731                           postdec2	equ	0xFDD
  3732                           fsr2h	equ	0xFDA
  3733                           fsr2l	equ	0xFD9
  3734                           status	equ	0xFD8
  3735                           
  3736 ;; *************** function _in_low_int *****************
  3737 ;; Defined at:
  3738 ;;		line 39 in file "../src/interrupts.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;		None
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;		None
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  2   42[BANK0 ] int 
  3745 ;; Registers used:
  3746 ;;		wreg, status,2, status,0, cstack
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3752 ;;      Params:         0       2       0       0       0
  3753 ;;      Locals:         0       0       0       0       0
  3754 ;;      Temps:          0       0       0       0       0
  3755 ;;      Totals:         0       2       0       0       0
  3756 ;;Total ram usage:        2 bytes
  3757 ;; Hardware stack levels used:    1
  3758 ;; Hardware stack levels required when called:   11
  3759 ;; This function calls:
  3760 ;;		_in_high_int
  3761 ;; This function is called by:
  3762 ;;		_in_main
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766                           	psect	text21
  3767  0016D8                     __ptext21:
  3768                           	opt stack 0
  3769  0016D8                     _in_low_int:
  3770                           	opt stack 17
  3771                           
  3772                           ;interrupts.c: 40: if (INTCONbits.GIEL == 1) {
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;incstack = 0
  3776  0016D8  ACF2               	btfss	intcon,6,c	;volatile
  3777  0016DA  D008               	goto	l2582
  3778                           
  3779                           ;interrupts.c: 41: return (0);
  3780  0016DC  0E00               	movlw	0
  3781  0016DE  0100               	movlb	0	; () banked
  3782  0016E0  0100               	movlb	0	; () banked
  3783  0016E2  6FAB               	movwf	(?_in_low_int+1)& (0+255),b
  3784  0016E4  0E00               	movlw	0
  3785  0016E6  0100               	movlb	0	; () banked
  3786  0016E8  6FAA               	movwf	?_in_low_int& (0+255),b
  3787  0016EA  0012               	return	
  3788  0016EC                     l2582:
  3789  0016EC  ECB0  F00D         	call	_in_high_int	;wreg free
  3790  0016F0  0100               	movlb	0	; () banked
  3791  0016F2  0100               	movlb	0	; () banked
  3792  0016F4  51A9               	movf	(?_in_high_int+1)& (0+255),w,b
  3793  0016F6  0100               	movlb	0	; () banked
  3794  0016F8  11A8               	iorwf	?_in_high_int& (0+255),w,b
  3795  0016FA  B4D8               	btfsc	status,2,c
  3796  0016FC  D008               	goto	l2590
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;interrupts.c: 43: return (0);
  3800  0016FE  0E00               	movlw	0
  3801  001700  0100               	movlb	0	; () banked
  3802  001702  0100               	movlb	0	; () banked
  3803  001704  6FAB               	movwf	(?_in_low_int+1)& (0+255),b
  3804  001706  0E00               	movlw	0
  3805  001708  0100               	movlb	0	; () banked
  3806  00170A  6FAA               	movwf	?_in_low_int& (0+255),b
  3807  00170C  0012               	return	
  3808  00170E                     l2590:
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;interrupts.c: 45: return (1);
  3812  00170E  0E00               	movlw	0
  3813  001710  0100               	movlb	0	; () banked
  3814  001712  0100               	movlb	0	; () banked
  3815  001714  6FAB               	movwf	(?_in_low_int+1)& (0+255),b
  3816  001716  0E01               	movlw	1
  3817  001718  0100               	movlb	0	; () banked
  3818  00171A  6FAA               	movwf	?_in_low_int& (0+255),b
  3819  00171C  0012               	return	
  3820  00171E                     __end_of_in_low_int:
  3821                           	opt stack 0
  3822                           tblptru	equ	0xFF8
  3823                           tblptrh	equ	0xFF7
  3824                           tblptrl	equ	0xFF6
  3825                           tablat	equ	0xFF5
  3826                           prodh	equ	0xFF4
  3827                           prodl	equ	0xFF3
  3828                           intcon	equ	0xFF2
  3829                           postinc0	equ	0xFEE
  3830                           wreg	equ	0xFE8
  3831                           indf1	equ	0xFE7
  3832                           fsr1h	equ	0xFE2
  3833                           fsr1l	equ	0xFE1
  3834                           indf2	equ	0xFDF
  3835                           postinc2	equ	0xFDE
  3836                           postdec2	equ	0xFDD
  3837                           fsr2h	equ	0xFDA
  3838                           fsr2l	equ	0xFD9
  3839                           status	equ	0xFD8
  3840                           
  3841 ;; *************** function _in_high_int *****************
  3842 ;; Defined at:
  3843 ;;		line 31 in file "../src/interrupts.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;		None
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;		None
  3848 ;; Return value:  Size  Location     Type
  3849 ;;                  2   40[BANK0 ] int 
  3850 ;; Registers used:
  3851 ;;		wreg, status,2
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3857 ;;      Params:         0       2       0       0       0
  3858 ;;      Locals:         0       0       0       0       0
  3859 ;;      Temps:          0       0       0       0       0
  3860 ;;      Totals:         0       2       0       0       0
  3861 ;;Total ram usage:        2 bytes
  3862 ;; Hardware stack levels used:    1
  3863 ;; Hardware stack levels required when called:   10
  3864 ;; This function calls:
  3865 ;;		Nothing
  3866 ;; This function is called by:
  3867 ;;		_in_low_int
  3868 ;;		_in_main
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           	psect	text22
  3873  001B60                     __ptext22:
  3874                           	opt stack 0
  3875  001B60                     _in_high_int:
  3876                           	opt stack 17
  3877                           
  3878                           ;interrupts.c: 32: return (!INTCONbits.GIEH);
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;incstack = 0
  3882  001B60  0E00               	movlw	0
  3883  001B62  AEF2               	btfss	intcon,7,c	;volatile
  3884  001B64  0E01               	movlw	1
  3885  001B66  0100               	movlb	0	; () banked
  3886  001B68  0100               	movlb	0	; () banked
  3887  001B6A  6FA8               	movwf	?_in_high_int& (0+255),b
  3888  001B6C  0100               	movlb	0	; () banked
  3889  001B6E  6BA9               	clrf	(?_in_high_int+1)& (0+255),b
  3890  001B70  0012               	return	
  3891  001B72                     __end_of_in_high_int:
  3892                           	opt stack 0
  3893                           tblptru	equ	0xFF8
  3894                           tblptrh	equ	0xFF7
  3895                           tblptrl	equ	0xFF6
  3896                           tablat	equ	0xFF5
  3897                           prodh	equ	0xFF4
  3898                           prodl	equ	0xFF3
  3899                           intcon	equ	0xFF2
  3900                           postinc0	equ	0xFEE
  3901                           wreg	equ	0xFE8
  3902                           indf1	equ	0xFE7
  3903                           fsr1h	equ	0xFE2
  3904                           fsr1l	equ	0xFE1
  3905                           indf2	equ	0xFDF
  3906                           postinc2	equ	0xFDE
  3907                           postdec2	equ	0xFDD
  3908                           fsr2h	equ	0xFDA
  3909                           fsr2l	equ	0xFD9
  3910                           status	equ	0xFD8
  3911                           
  3912 ;; *************** function _check_msg *****************
  3913 ;; Defined at:
  3914 ;;		line 222 in file "../src/messages.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  qptr            2   40[BANK0 ] PTR struct __msg_queue
  3917 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;		None
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      unsigned char 
  3922 ;; Registers used:
  3923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3929 ;;      Params:         0       2       0       0       0
  3930 ;;      Locals:         0       0       0       0       0
  3931 ;;      Temps:          0       1       0       0       0
  3932 ;;      Totals:         0       3       0       0       0
  3933 ;;Total ram usage:        3 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; Hardware stack levels required when called:   10
  3936 ;; This function calls:
  3937 ;;		Nothing
  3938 ;; This function is called by:
  3939 ;;		_block_on_To_msgqueues
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text23
  3944  001992                     __ptext23:
  3945                           	opt stack 0
  3946  001992                     _check_msg:
  3947                           	opt stack 19
  3948                           
  3949                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;incstack = 0
  3953  001992  0100               	movlb	0	; () banked
  3954  001994  EE20 F035          	lfsr	2,53
  3955  001998  0100               	movlb	0	; () banked
  3956  00199A  51A8               	movf	check_msg@qptr& (0+255),w,b
  3957  00199C  26D9               	addwf	fsr2l,f,c
  3958  00199E  0100               	movlb	0	; () banked
  3959  0019A0  51A9               	movf	(check_msg@qptr+1)& (0+255),w,b
  3960  0019A2  22DA               	addwfc	fsr2h,f,c
  3961  0019A4  50DF               	movf	indf2,w,c
  3962  0019A6  0100               	movlb	0	; () banked
  3963  0019A8  6FAA               	movwf	??_check_msg& (0+255),b
  3964  0019AA  0100               	movlb	0	; () banked
  3965  0019AC  51AA               	movf	??_check_msg& (0+255),w,b
  3966  0019AE  0D0D               	mullw	13
  3967  0019B0  50F3               	movf	prodl,w,c
  3968  0019B2  0100               	movlb	0	; () banked
  3969  0019B4  0100               	movlb	0	; () banked
  3970  0019B6  25A8               	addwf	check_msg@qptr& (0+255),w,b
  3971  0019B8  6ED9               	movwf	fsr2l,c
  3972  0019BA  50F4               	movf	prodh,w,c
  3973  0019BC  0100               	movlb	0	; () banked
  3974  0019BE  0100               	movlb	0	; () banked
  3975  0019C0  21A9               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3976  0019C2  6EDA               	movwf	fsr2h,c
  3977  0019C4  50DF               	movf	indf2,w,c
  3978  0019C6  0012               	return	
  3979  0019C8                     __end_of_check_msg:
  3980                           	opt stack 0
  3981                           tblptru	equ	0xFF8
  3982                           tblptrh	equ	0xFF7
  3983                           tblptrl	equ	0xFF6
  3984                           tablat	equ	0xFF5
  3985                           prodh	equ	0xFF4
  3986                           prodl	equ	0xFF3
  3987                           intcon	equ	0xFF2
  3988                           postinc0	equ	0xFEE
  3989                           wreg	equ	0xFE8
  3990                           indf1	equ	0xFE7
  3991                           fsr1h	equ	0xFE2
  3992                           fsr1l	equ	0xFE1
  3993                           indf2	equ	0xFDF
  3994                           postinc2	equ	0xFDE
  3995                           postdec2	equ	0xFDD
  3996                           fsr2h	equ	0xFDA
  3997                           fsr2l	equ	0xFD9
  3998                           status	equ	0xFD8
  3999                           
  4000 ;; *************** function _Delay1KTCYx *****************
  4001 ;; Defined at:
  4002 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/pic18/d1ktcyx.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;  unit            1    wreg     unsigned char 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  unit            1   40[BANK0 ] unsigned char 
  4007 ;; Return value:  Size  Location     Type
  4008 ;;		None               void
  4009 ;; Registers used:
  4010 ;;		wreg
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4016 ;;      Params:         0       0       0       0       0
  4017 ;;      Locals:         0       1       0       0       0
  4018 ;;      Temps:          0       0       0       0       0
  4019 ;;      Totals:         0       1       0       0       0
  4020 ;;Total ram usage:        1 bytes
  4021 ;; Hardware stack levels used:    1
  4022 ;; Hardware stack levels required when called:   10
  4023 ;; This function calls:
  4024 ;;		Nothing
  4025 ;; This function is called by:
  4026 ;;		_block_on_To_msgqueues
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           	psect	text24
  4031  001B26                     __ptext24:
  4032                           	opt stack 0
  4033  001B26                     _Delay1KTCYx:
  4034                           	opt stack 19
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;incstack = 0
  4038                           ;Delay1KTCYx@unit stored from wreg
  4039  001B26  CFE8 F0A8          	movff	wreg,Delay1KTCYx@unit
  4040  001B2A                     l726:
  4041  001B2A  0EFA               	movlw	250
  4042  001B2C                     u2407:
  4043  001B2C  F000               	nop	
  4044  001B2E  2EE8               	decfsz	wreg,f,c
  4045  001B30  D7FD               	goto	u2407
  4046  001B32  0100               	movlb	0	; () banked
  4047  001B34  0100               	movlb	0	; () banked
  4048  001B36  2FA8               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4049  001B38  D7F8               	goto	l726
  4050  001B3A  0012               	return	
  4051  001B3C                     __end_of_Delay1KTCYx:
  4052                           	opt stack 0
  4053                           tblptru	equ	0xFF8
  4054                           tblptrh	equ	0xFF7
  4055                           tblptrl	equ	0xFF6
  4056                           tablat	equ	0xFF5
  4057                           prodh	equ	0xFF4
  4058                           prodl	equ	0xFF3
  4059                           intcon	equ	0xFF2
  4060                           postinc0	equ	0xFEE
  4061                           wreg	equ	0xFE8
  4062                           indf1	equ	0xFE7
  4063                           fsr1h	equ	0xFE2
  4064                           fsr1l	equ	0xFE1
  4065                           indf2	equ	0xFDF
  4066                           postinc2	equ	0xFDE
  4067                           postdec2	equ	0xFDD
  4068                           fsr2h	equ	0xFDA
  4069                           fsr2l	equ	0xFD9
  4070                           status	equ	0xFD8
  4071                           
  4072 ;; *************** function _ToMainLow_recvmsg *****************
  4073 ;; Defined at:
  4074 ;;		line 112 in file "../src/messages.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;  maxlength       1    wreg     unsigned char 
  4077 ;;  msgtype         2   64[BANK0 ] PTR unsigned char 
  4078 ;;		 -> main@msgtype(1), 
  4079 ;;  data            2   66[BANK0 ] PTR void 
  4080 ;;		 -> main@msgbuffer(11), 
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;  maxlength       1   68[BANK0 ] unsigned char 
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  1    wreg      char 
  4085 ;; Registers used:
  4086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4092 ;;      Params:         0       4       0       0       0
  4093 ;;      Locals:         0       1       0       0       0
  4094 ;;      Temps:          0       0       0       0       0
  4095 ;;      Totals:         0       5       0       0       0
  4096 ;;Total ram usage:        5 bytes
  4097 ;; Hardware stack levels used:    1
  4098 ;; Hardware stack levels required when called:   12
  4099 ;; This function calls:
  4100 ;;		_recv_msg
  4101 ;; This function is called by:
  4102 ;;		_main
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106                           	psect	text25
  4107  0017A4                     __ptext25:
  4108                           	opt stack 0
  4109  0017A4                     _ToMainLow_recvmsg:
  4110                           	opt stack 18
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;incstack = 0
  4114                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4115  0017A4  CFE8 F0C4          	movff	wreg,ToMainLow_recvmsg@maxlength
  4116                           
  4117                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4118  0017A8  0101               	movlb	1	; () banked
  4119  0017AA  0E01               	movlw	high _ToMainLow_MQ
  4120  0017AC  0100               	movlb	0	; () banked
  4121  0017AE  0100               	movlb	0	; () banked
  4122  0017B0  6FB3               	movwf	(recv_msg@qptr+1)& (0+255),b
  4123  0017B2  0101               	movlb	1	; () banked
  4124  0017B4  0E6C               	movlw	low _ToMainLow_MQ
  4125  0017B6  0100               	movlb	0	; () banked
  4126  0017B8  0100               	movlb	0	; () banked
  4127  0017BA  6FB2               	movwf	recv_msg@qptr& (0+255),b
  4128  0017BC  C0C4  F0B4         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4129  0017C0  0100               	movlb	0	; () banked
  4130  0017C2  0100               	movlb	0	; () banked
  4131  0017C4  C0C1  F0B6         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4132  0017C8  0100               	movlb	0	; () banked
  4133  0017CA  0100               	movlb	0	; () banked
  4134  0017CC  C0C0  F0B5         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4135  0017D0  0100               	movlb	0	; () banked
  4136  0017D2  0100               	movlb	0	; () banked
  4137  0017D4  C0C3  F0B8         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4138  0017D8  0100               	movlb	0	; () banked
  4139  0017DA  0100               	movlb	0	; () banked
  4140  0017DC  C0C2  F0B7         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4141  0017E0  ECEB  F004         	call	_recv_msg	;wreg free
  4142  0017E4  0012               	return	
  4143  0017E6                     __end_of_ToMainLow_recvmsg:
  4144                           	opt stack 0
  4145                           tblptru	equ	0xFF8
  4146                           tblptrh	equ	0xFF7
  4147                           tblptrl	equ	0xFF6
  4148                           tablat	equ	0xFF5
  4149                           prodh	equ	0xFF4
  4150                           prodl	equ	0xFF3
  4151                           intcon	equ	0xFF2
  4152                           postinc0	equ	0xFEE
  4153                           wreg	equ	0xFE8
  4154                           indf1	equ	0xFE7
  4155                           fsr1h	equ	0xFE2
  4156                           fsr1l	equ	0xFE1
  4157                           indf2	equ	0xFDF
  4158                           postinc2	equ	0xFDE
  4159                           postdec2	equ	0xFDD
  4160                           fsr2h	equ	0xFDA
  4161                           fsr2l	equ	0xFD9
  4162                           status	equ	0xFD8
  4163                           
  4164 ;; *************** function _ToMainHigh_recvmsg *****************
  4165 ;; Defined at:
  4166 ;;		line 135 in file "../src/messages.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  maxlength       1    wreg     unsigned char 
  4169 ;;  msgtype         2   64[BANK0 ] PTR unsigned char 
  4170 ;;		 -> main@msgtype(1), 
  4171 ;;  data            2   66[BANK0 ] PTR void 
  4172 ;;		 -> main@msgbuffer(11), 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  maxlength       1   68[BANK0 ] unsigned char 
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  1    wreg      char 
  4177 ;; Registers used:
  4178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4184 ;;      Params:         0       4       0       0       0
  4185 ;;      Locals:         0       1       0       0       0
  4186 ;;      Temps:          0       0       0       0       0
  4187 ;;      Totals:         0       5       0       0       0
  4188 ;;Total ram usage:        5 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:   12
  4191 ;; This function calls:
  4192 ;;		_recv_msg
  4193 ;; This function is called by:
  4194 ;;		_main
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           	psect	text26
  4199  0017E6                     __ptext26:
  4200                           	opt stack 0
  4201  0017E6                     _ToMainHigh_recvmsg:
  4202                           	opt stack 18
  4203                           
  4204                           ;incstack = 0
  4205                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4206  0017E6  CFE8 F0C4          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4207                           
  4208                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4209  0017EA  0101               	movlb	1	; () banked
  4210  0017EC  0E01               	movlw	high _ToMainHigh_MQ
  4211  0017EE  0100               	movlb	0	; () banked
  4212  0017F0  0100               	movlb	0	; () banked
  4213  0017F2  6FB3               	movwf	(recv_msg@qptr+1)& (0+255),b
  4214  0017F4  0101               	movlb	1	; () banked
  4215  0017F6  0E36               	movlw	low _ToMainHigh_MQ
  4216  0017F8  0100               	movlb	0	; () banked
  4217  0017FA  0100               	movlb	0	; () banked
  4218  0017FC  6FB2               	movwf	recv_msg@qptr& (0+255),b
  4219  0017FE  C0C4  F0B4         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4220  001802  0100               	movlb	0	; () banked
  4221  001804  0100               	movlb	0	; () banked
  4222  001806  C0C1  F0B6         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4223  00180A  0100               	movlb	0	; () banked
  4224  00180C  0100               	movlb	0	; () banked
  4225  00180E  C0C0  F0B5         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4226  001812  0100               	movlb	0	; () banked
  4227  001814  0100               	movlb	0	; () banked
  4228  001816  C0C3  F0B8         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4229  00181A  0100               	movlb	0	; () banked
  4230  00181C  0100               	movlb	0	; () banked
  4231  00181E  C0C2  F0B7         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4232  001822  ECEB  F004         	call	_recv_msg	;wreg free
  4233  001826  0012               	return	
  4234  001828                     __end_of_ToMainHigh_recvmsg:
  4235                           	opt stack 0
  4236                           tblptru	equ	0xFF8
  4237                           tblptrh	equ	0xFF7
  4238                           tblptrl	equ	0xFF6
  4239                           tablat	equ	0xFF5
  4240                           prodh	equ	0xFF4
  4241                           prodl	equ	0xFF3
  4242                           intcon	equ	0xFF2
  4243                           postinc0	equ	0xFEE
  4244                           wreg	equ	0xFE8
  4245                           indf1	equ	0xFE7
  4246                           fsr1h	equ	0xFE2
  4247                           fsr1l	equ	0xFE1
  4248                           indf2	equ	0xFDF
  4249                           postinc2	equ	0xFDE
  4250                           postdec2	equ	0xFDD
  4251                           fsr2h	equ	0xFDA
  4252                           fsr2l	equ	0xFD9
  4253                           status	equ	0xFD8
  4254                           
  4255 ;; *************** function _recv_msg *****************
  4256 ;; Defined at:
  4257 ;;		line 63 in file "../src/messages.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;  qptr            2   50[BANK0 ] PTR struct __msg_queue
  4260 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4261 ;;  maxlength       1   52[BANK0 ] unsigned char 
  4262 ;;  msgtype         2   53[BANK0 ] PTR unsigned char 
  4263 ;;		 -> main@msgtype(1), timer0_int_handler@msgtype(2), 
  4264 ;;  data            2   55[BANK0 ] PTR void 
  4265 ;;		 -> main@msgbuffer(11), timer0_int_handler@val(2), 
  4266 ;; Auto vars:     Size  Location     Type
  4267 ;;  qmsg            2   62[BANK0 ] PTR struct __msg
  4268 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4269 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4270 ;;  tlength         2   60[BANK0 ] unsigned int 
  4271 ;;  slot            1   59[BANK0 ] unsigned char 
  4272 ;; Return value:  Size  Location     Type
  4273 ;;                  1    wreg      char 
  4274 ;; Registers used:
  4275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4281 ;;      Params:         0       7       0       0       0
  4282 ;;      Locals:         0       5       0       0       0
  4283 ;;      Temps:          0       2       0       0       0
  4284 ;;      Totals:         0      14       0       0       0
  4285 ;;Total ram usage:       14 bytes
  4286 ;; Hardware stack levels used:    1
  4287 ;; Hardware stack levels required when called:   11
  4288 ;; This function calls:
  4289 ;;		_memcpy
  4290 ;; This function is called by:
  4291 ;;		_ToMainLow_recvmsg
  4292 ;;		_ToMainHigh_recvmsg
  4293 ;;		_FromMainLow_recvmsg
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           	psect	text27
  4298  0009D6                     __ptext27:
  4299                           	opt stack 0
  4300  0009D6                     _recv_msg:
  4301                           	opt stack 18
  4302                           
  4303                           ;messages.c: 64: unsigned char slot;
  4304                           ;messages.c: 68: msg *qmsg;
  4305                           ;messages.c: 69: size_t tlength;
  4306                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4307                           
  4308                           ;incstack = 0
  4309  0009D6  0100               	movlb	0	; () banked
  4310  0009D8  EE20 F035          	lfsr	2,53
  4311  0009DC  0100               	movlb	0	; () banked
  4312  0009DE  51B2               	movf	recv_msg@qptr& (0+255),w,b
  4313  0009E0  26D9               	addwf	fsr2l,f,c
  4314  0009E2  0100               	movlb	0	; () banked
  4315  0009E4  51B3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4316  0009E6  22DA               	addwfc	fsr2h,f,c
  4317  0009E8  50DF               	movf	indf2,w,c
  4318  0009EA  0100               	movlb	0	; () banked
  4319  0009EC  0100               	movlb	0	; () banked
  4320  0009EE  6FBB               	movwf	recv_msg@slot& (0+255),b
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4324  0009F0  0100               	movlb	0	; () banked
  4325  0009F2  0100               	movlb	0	; () banked
  4326  0009F4  51BB               	movf	recv_msg@slot& (0+255),w,b
  4327  0009F6  0D0D               	mullw	13
  4328  0009F8  50F3               	movf	prodl,w,c
  4329  0009FA  0100               	movlb	0	; () banked
  4330  0009FC  0100               	movlb	0	; () banked
  4331  0009FE  25B2               	addwf	recv_msg@qptr& (0+255),w,b
  4332  000A00  0100               	movlb	0	; () banked
  4333  000A02  0100               	movlb	0	; () banked
  4334  000A04  6FBE               	movwf	recv_msg@qmsg& (0+255),b
  4335  000A06  50F4               	movf	prodh,w,c
  4336  000A08  0100               	movlb	0	; () banked
  4337  000A0A  0100               	movlb	0	; () banked
  4338  000A0C  21B3               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4339  000A0E  0100               	movlb	0	; () banked
  4340  000A10  6FBF               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;messages.c: 74: if (qmsg->full == 1) {
  4344  000A12  0E01               	movlw	1
  4345  000A14  C0BE  FFD9         	movff	recv_msg@qmsg,fsr2l
  4346  000A18  C0BF  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4347  000A1C  62DF               	cpfseq	indf2,c
  4348  000A1E  D074               	goto	l2516
  4349                           
  4350                           ; BSR set to: 0
  4351                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4352  000A20  0100               	movlb	0	; () banked
  4353  000A22  EE20 F001          	lfsr	2,1
  4354  000A26  0100               	movlb	0	; () banked
  4355  000A28  51BE               	movf	recv_msg@qmsg& (0+255),w,b
  4356  000A2A  26D9               	addwf	fsr2l,f,c
  4357  000A2C  0100               	movlb	0	; () banked
  4358  000A2E  51BF               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4359  000A30  22DA               	addwfc	fsr2h,f,c
  4360  000A32  50DF               	movf	indf2,w,c
  4361  000A34  0100               	movlb	0	; () banked
  4362  000A36  0100               	movlb	0	; () banked
  4363  000A38  5DB4               	subwf	recv_msg@maxlength& (0+255),w,b
  4364  000A3A  B0D8               	btfsc	status,0,c
  4365  000A3C  D002               	goto	l2500
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;messages.c: 77: return (-3);
  4369  000A3E  0EFD               	movlw	253
  4370  000A40  0012               	return	
  4371  000A42                     l2500:
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;messages.c: 78: }
  4375                           ;messages.c: 80: tlength = qmsg->length;
  4376  000A42  0100               	movlb	0	; () banked
  4377  000A44  EE20 F001          	lfsr	2,1
  4378  000A48  0100               	movlb	0	; () banked
  4379  000A4A  51BE               	movf	recv_msg@qmsg& (0+255),w,b
  4380  000A4C  26D9               	addwf	fsr2l,f,c
  4381  000A4E  0100               	movlb	0	; () banked
  4382  000A50  51BF               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4383  000A52  22DA               	addwfc	fsr2h,f,c
  4384  000A54  50DF               	movf	indf2,w,c
  4385  000A56  0100               	movlb	0	; () banked
  4386  000A58  6FB9               	movwf	??_recv_msg& (0+255),b
  4387  000A5A  0100               	movlb	0	; () banked
  4388  000A5C  51B9               	movf	??_recv_msg& (0+255),w,b
  4389  000A5E  0100               	movlb	0	; () banked
  4390  000A60  0100               	movlb	0	; () banked
  4391  000A62  6FBC               	movwf	recv_msg@tlength& (0+255),b
  4392  000A64  0100               	movlb	0	; () banked
  4393  000A66  6BBD               	clrf	(recv_msg@tlength+1)& (0+255),b
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4397  000A68  0100               	movlb	0	; () banked
  4398  000A6A  0100               	movlb	0	; () banked
  4399  000A6C  C0B8  F0A9         	movff	recv_msg@data+1,memcpy@d1+1
  4400  000A70  0100               	movlb	0	; () banked
  4401  000A72  0100               	movlb	0	; () banked
  4402  000A74  C0B7  F0A8         	movff	recv_msg@data,memcpy@d1
  4403  000A78  0E03               	movlw	3
  4404  000A7A  0100               	movlb	0	; () banked
  4405  000A7C  0100               	movlb	0	; () banked
  4406  000A7E  25BE               	addwf	recv_msg@qmsg& (0+255),w,b
  4407  000A80  0100               	movlb	0	; () banked
  4408  000A82  6FB9               	movwf	??_recv_msg& (0+255),b
  4409  000A84  0E00               	movlw	0
  4410  000A86  0100               	movlb	0	; () banked
  4411  000A88  0100               	movlb	0	; () banked
  4412  000A8A  21BF               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4413  000A8C  0100               	movlb	0	; () banked
  4414  000A8E  6FBA               	movwf	(??_recv_msg+1)& (0+255),b
  4415  000A90  C0B9  F0AA         	movff	??_recv_msg,memcpy@s1
  4416  000A94  C0BA  F0AB         	movff	??_recv_msg+1,memcpy@s1+1
  4417  000A98  C0BC  F0AC         	movff	recv_msg@tlength,memcpy@n
  4418  000A9C  C0BD  F0AD         	movff	recv_msg@tlength+1,memcpy@n+1
  4419  000AA0  ECF2  F00A         	call	_memcpy	;wreg free
  4420                           
  4421                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4422  000AA4  0100               	movlb	0	; () banked
  4423  000AA6  EE20 F035          	lfsr	2,53
  4424  000AAA  0100               	movlb	0	; () banked
  4425  000AAC  51B2               	movf	recv_msg@qptr& (0+255),w,b
  4426  000AAE  26D9               	addwf	fsr2l,f,c
  4427  000AB0  0100               	movlb	0	; () banked
  4428  000AB2  51B3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4429  000AB4  22DA               	addwfc	fsr2h,f,c
  4430  000AB6  0100               	movlb	0	; () banked
  4431  000AB8  EE10 F035          	lfsr	1,53
  4432  000ABC  0100               	movlb	0	; () banked
  4433  000ABE  51B2               	movf	recv_msg@qptr& (0+255),w,b
  4434  000AC0  26E1               	addwf	fsr1l,f,c
  4435  000AC2  0100               	movlb	0	; () banked
  4436  000AC4  51B3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4437  000AC6  22E2               	addwfc	fsr1h,f,c
  4438  000AC8  50E7               	movf	indf1,w,c
  4439  000ACA  0100               	movlb	0	; () banked
  4440  000ACC  6FB9               	movwf	??_recv_msg& (0+255),b
  4441  000ACE  0100               	movlb	0	; () banked
  4442  000AD0  29B9               	incf	??_recv_msg& (0+255),w,b
  4443  000AD2  0B03               	andlw	3
  4444  000AD4  6EDF               	movwf	indf2,c
  4445                           
  4446                           ; BSR set to: 0
  4447                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4448  000AD6  0100               	movlb	0	; () banked
  4449  000AD8  EE20 F002          	lfsr	2,2
  4450  000ADC  0100               	movlb	0	; () banked
  4451  000ADE  51BE               	movf	recv_msg@qmsg& (0+255),w,b
  4452  000AE0  26D9               	addwf	fsr2l,f,c
  4453  000AE2  0100               	movlb	0	; () banked
  4454  000AE4  51BF               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4455  000AE6  22DA               	addwfc	fsr2h,f,c
  4456  000AE8  C0B5  FFE1         	movff	recv_msg@msgtype,fsr1l
  4457  000AEC  C0B6  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4458  000AF0  CFDF FFE7          	movff	indf2,indf1
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;messages.c: 91: qmsg->full = 0;
  4462  000AF4  C0BE  FFD9         	movff	recv_msg@qmsg,fsr2l
  4463  000AF8  C0BF  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4464  000AFC  0E00               	movlw	0
  4465  000AFE  6EDF               	movwf	indf2,c
  4466                           
  4467                           ; BSR set to: 0
  4468                           ;messages.c: 92: return (tlength);
  4469  000B00  0100               	movlb	0	; () banked
  4470  000B02  0100               	movlb	0	; () banked
  4471  000B04  51BC               	movf	recv_msg@tlength& (0+255),w,b
  4472  000B06  0012               	return	
  4473  000B08                     l2516:
  4474                           
  4475                           ; BSR set to: 0
  4476                           ;messages.c: 94: return (-4);
  4477  000B08  0EFC               	movlw	252
  4478  000B0A  0012               	return	
  4479  000B0C                     __end_of_recv_msg:
  4480                           	opt stack 0
  4481                           tblptru	equ	0xFF8
  4482                           tblptrh	equ	0xFF7
  4483                           tblptrl	equ	0xFF6
  4484                           tablat	equ	0xFF5
  4485                           prodh	equ	0xFF4
  4486                           prodl	equ	0xFF3
  4487                           intcon	equ	0xFF2
  4488                           postinc0	equ	0xFEE
  4489                           wreg	equ	0xFE8
  4490                           indf1	equ	0xFE7
  4491                           fsr1h	equ	0xFE2
  4492                           fsr1l	equ	0xFE1
  4493                           indf2	equ	0xFDF
  4494                           postinc2	equ	0xFDE
  4495                           postdec2	equ	0xFDD
  4496                           fsr2h	equ	0xFDA
  4497                           fsr2l	equ	0xFD9
  4498                           status	equ	0xFD8
  4499                           
  4500 ;; *************** function _memcpy *****************
  4501 ;; Defined at:
  4502 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  4503 ;; Parameters:    Size  Location     Type
  4504 ;;  d1              2   40[BANK0 ] PTR void 
  4505 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4506 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4507 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  4508 ;;  s1              2   42[BANK0 ] PTR const void 
  4509 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4510 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4511 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), FromMainHigh_MQ(54), 
  4512 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), i2c_int_handler@error_buf(3), 
  4513 ;;		 -> NULL(0), timer0_int_handler@val(2), 
  4514 ;;  n               2   44[BANK0 ] unsigned int 
  4515 ;; Auto vars:     Size  Location     Type
  4516 ;;  s               2   48[BANK0 ] PTR const unsigned char 
  4517 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4518 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4519 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), FromMainHigh_MQ(54), 
  4520 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), i2c_int_handler@error_buf(3), 
  4521 ;;		 -> NULL(0), timer0_int_handler@val(2), 
  4522 ;;  d               2   46[BANK0 ] PTR unsigned char 
  4523 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4524 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4525 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  4526 ;; Return value:  Size  Location     Type
  4527 ;;                  2   40[BANK0 ] PTR void 
  4528 ;; Registers used:
  4529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4530 ;; Tracked objects:
  4531 ;;		On entry : 0/0
  4532 ;;		On exit  : 0/0
  4533 ;;		Unchanged: 0/0
  4534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4535 ;;      Params:         0       6       0       0       0
  4536 ;;      Locals:         0       4       0       0       0
  4537 ;;      Temps:          0       0       0       0       0
  4538 ;;      Totals:         0      10       0       0       0
  4539 ;;Total ram usage:       10 bytes
  4540 ;; Hardware stack levels used:    1
  4541 ;; Hardware stack levels required when called:   10
  4542 ;; This function calls:
  4543 ;;		Nothing
  4544 ;; This function is called by:
  4545 ;;		_send_msg
  4546 ;;		_recv_msg
  4547 ;; This function uses a non-reentrant model
  4548 ;;
  4549                           
  4550                           	psect	text28
  4551  0015E4                     __ptext28:
  4552                           	opt stack 0
  4553  0015E4                     _memcpy:
  4554                           	opt stack 17
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;incstack = 0
  4558  0015E4  0100               	movlb	0	; () banked
  4559  0015E6  0100               	movlb	0	; () banked
  4560  0015E8  C0AB  F0B1         	movff	memcpy@s1+1,memcpy@s+1
  4561  0015EC  0100               	movlb	0	; () banked
  4562  0015EE  0100               	movlb	0	; () banked
  4563  0015F0  C0AA  F0B0         	movff	memcpy@s1,memcpy@s
  4564  0015F4  0100               	movlb	0	; () banked
  4565  0015F6  0100               	movlb	0	; () banked
  4566  0015F8  C0A9  F0AF         	movff	memcpy@d1+1,memcpy@d+1
  4567  0015FC  0100               	movlb	0	; () banked
  4568  0015FE  0100               	movlb	0	; () banked
  4569  001600  C0A8  F0AE         	movff	memcpy@d1,memcpy@d
  4570  001604  D012               	goto	l2486
  4571  001606                     l2480:
  4572                           
  4573                           ; BSR set to: 0
  4574  001606  C0B0  FFD9         	movff	memcpy@s,fsr2l
  4575  00160A  C0B1  FFDA         	movff	memcpy@s+1,fsr2h
  4576  00160E  C0AE  FFE1         	movff	memcpy@d,fsr1l
  4577  001612  C0AF  FFE2         	movff	memcpy@d+1,fsr1h
  4578  001616  CFDF FFE7          	movff	indf2,indf1
  4579                           
  4580                           ; BSR set to: 0
  4581  00161A  0100               	movlb	0	; () banked
  4582  00161C  0100               	movlb	0	; () banked
  4583  00161E  4BB0               	infsnz	memcpy@s& (0+255),f,b
  4584  001620  2BB1               	incf	(memcpy@s+1)& (0+255),f,b
  4585                           
  4586                           ; BSR set to: 0
  4587  001622  0100               	movlb	0	; () banked
  4588  001624  0100               	movlb	0	; () banked
  4589  001626  4BAE               	infsnz	memcpy@d& (0+255),f,b
  4590  001628  2BAF               	incf	(memcpy@d+1)& (0+255),f,b
  4591  00162A                     l2486:
  4592                           
  4593                           ; BSR set to: 0
  4594  00162A  0100               	movlb	0	; () banked
  4595  00162C  0100               	movlb	0	; () banked
  4596  00162E  07AC               	decf	memcpy@n& (0+255),f,b
  4597  001630  A0D8               	btfss	status,0,c
  4598  001632  07AD               	decf	(memcpy@n+1)& (0+255),f,b
  4599  001634  0100               	movlb	0	; () banked
  4600  001636  29AC               	incf	memcpy@n& (0+255),w,b
  4601  001638  B4D8               	btfsc	status,2,c
  4602  00163A  29AD               	incf	(memcpy@n+1)& (0+255),w,b
  4603  00163C  B4D8               	btfsc	status,2,c
  4604                           
  4605                           ; BSR set to: 0
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;	Return value of _memcpy is never used
  4609  00163E  0012               	return	
  4610  001640  D7E2               	goto	l2480
  4611  001642                     __end_of_memcpy:
  4612                           	opt stack 0
  4613                           tblptru	equ	0xFF8
  4614                           tblptrh	equ	0xFF7
  4615                           tblptrl	equ	0xFF6
  4616                           tablat	equ	0xFF5
  4617                           prodh	equ	0xFF4
  4618                           prodl	equ	0xFF3
  4619                           intcon	equ	0xFF2
  4620                           postinc0	equ	0xFEE
  4621                           wreg	equ	0xFE8
  4622                           indf1	equ	0xFE7
  4623                           fsr1h	equ	0xFE2
  4624                           fsr1l	equ	0xFE1
  4625                           indf2	equ	0xFDF
  4626                           postinc2	equ	0xFDE
  4627                           postdec2	equ	0xFDD
  4628                           fsr2h	equ	0xFDA
  4629                           fsr2l	equ	0xFD9
  4630                           status	equ	0xFD8
  4631                           
  4632 ;; *************** function _OpenUSART *****************
  4633 ;; Defined at:
  4634 ;;		line 73 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uopen.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;  config          1    wreg     unsigned char 
  4637 ;;  spbrg           2   40[BANK0 ] unsigned int 
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;  config          1   45[BANK0 ] unsigned char 
  4640 ;; Return value:  Size  Location     Type
  4641 ;;		None               void
  4642 ;; Registers used:
  4643 ;;		wreg, status,2
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4649 ;;      Params:         0       2       0       0       0
  4650 ;;      Locals:         0       1       0       0       0
  4651 ;;      Temps:          0       3       0       0       0
  4652 ;;      Totals:         0       6       0       0       0
  4653 ;;Total ram usage:        6 bytes
  4654 ;; Hardware stack levels used:    1
  4655 ;; Hardware stack levels required when called:   10
  4656 ;; This function calls:
  4657 ;;		Nothing
  4658 ;; This function is called by:
  4659 ;;		_main
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           
  4663                           	psect	text29
  4664  001206                     __ptext29:
  4665                           	opt stack 0
  4666  001206                     _OpenUSART:
  4667                           	opt stack 20
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;incstack = 0
  4671                           ;OpenUSART@config stored from wreg
  4672  001206  CFE8 F0AD          	movff	wreg,OpenUSART@config
  4673  00120A  0E00               	movlw	0
  4674  00120C  6EAC               	movwf	4012,c	;volatile
  4675  00120E  0E00               	movlw	0
  4676  001210  6EAB               	movwf	4011,c	;volatile
  4677  001212  0100               	movlb	0	; () banked
  4678  001214  0100               	movlb	0	; () banked
  4679  001216  B1AD               	btfsc	OpenUSART@config& (0+255),0,b
  4680                           
  4681                           ; BSR set to: 0
  4682  001218  88AC               	bsf	4012,4,c	;volatile
  4683                           
  4684                           ; BSR set to: 0
  4685                           
  4686                           ; BSR set to: 0
  4687  00121A  0100               	movlb	0	; () banked
  4688  00121C  0100               	movlb	0	; () banked
  4689  00121E  A3AD               	btfss	OpenUSART@config& (0+255),1,b
  4690  001220  D002               	goto	l2780
  4691                           
  4692                           ; BSR set to: 0
  4693  001222  8CAC               	bsf	4012,6,c	;volatile
  4694  001224  8CAB               	bsf	4011,6,c	;volatile
  4695  001226                     l2780:
  4696                           
  4697                           ; BSR set to: 0
  4698  001226  0100               	movlb	0	; () banked
  4699  001228  0100               	movlb	0	; () banked
  4700  00122A  B5AD               	btfsc	OpenUSART@config& (0+255),2,b
  4701                           
  4702                           ; BSR set to: 0
  4703  00122C  8EAC               	bsf	4012,7,c	;volatile
  4704                           
  4705                           ; BSR set to: 0
  4706                           
  4707                           ; BSR set to: 0
  4708  00122E  0100               	movlb	0	; () banked
  4709  001230  0100               	movlb	0	; () banked
  4710  001232  A7AD               	btfss	OpenUSART@config& (0+255),3,b
  4711  001234  D002               	goto	l493
  4712                           
  4713                           ; BSR set to: 0
  4714  001236  88AB               	bsf	4011,4,c	;volatile
  4715  001238  D001               	goto	l2788
  4716  00123A                     l493:
  4717                           
  4718                           ; BSR set to: 0
  4719  00123A  8AAB               	bsf	4011,5,c	;volatile
  4720  00123C                     l2788:
  4721                           
  4722                           ; BSR set to: 0
  4723  00123C  0100               	movlb	0	; () banked
  4724  00123E  0100               	movlb	0	; () banked
  4725  001240  B9AD               	btfsc	OpenUSART@config& (0+255),4,b
  4726                           
  4727                           ; BSR set to: 0
  4728  001242  84AC               	bsf	4012,2,c	;volatile
  4729                           
  4730                           ; BSR set to: 0
  4731  001244  989E               	bcf	3998,4,c	;volatile
  4732                           
  4733                           ; BSR set to: 0
  4734  001246  0100               	movlb	0	; () banked
  4735  001248  0100               	movlb	0	; () banked
  4736  00124A  BBAD               	btfsc	OpenUSART@config& (0+255),5,b
  4737                           
  4738                           ; BSR set to: 0
  4739  00124C  86AB               	bsf	4011,3,c	;volatile
  4740                           
  4741                           ; BSR set to: 0
  4742                           
  4743                           ; BSR set to: 0
  4744  00124E  0100               	movlb	0	; () banked
  4745  001250  0100               	movlb	0	; () banked
  4746  001252  ADAD               	btfss	OpenUSART@config& (0+255),6,b
  4747  001254  D002               	goto	l497
  4748                           
  4749                           ; BSR set to: 0
  4750  001256  8A9D               	bsf	3997,5,c	;volatile
  4751  001258  D001               	goto	l498
  4752  00125A                     l497:
  4753                           
  4754                           ; BSR set to: 0
  4755  00125A  9A9D               	bcf	3997,5,c	;volatile
  4756  00125C                     l498:
  4757                           
  4758                           ; BSR set to: 0
  4759  00125C  9A9E               	bcf	3998,5,c	;volatile
  4760                           
  4761                           ; BSR set to: 0
  4762  00125E  0100               	movlb	0	; () banked
  4763  001260  0100               	movlb	0	; () banked
  4764  001262  AFAD               	btfss	OpenUSART@config& (0+255),7,b
  4765  001264  D002               	goto	l499
  4766                           
  4767                           ; BSR set to: 0
  4768  001266  889D               	bsf	3997,4,c	;volatile
  4769  001268  D001               	goto	l500
  4770  00126A                     l499:
  4771                           
  4772                           ; BSR set to: 0
  4773  00126A  989D               	bcf	3997,4,c	;volatile
  4774  00126C                     l500:
  4775                           
  4776                           ; BSR set to: 0
  4777  00126C  C0A8  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4778                           
  4779                           ; BSR set to: 0
  4780  001270  0100               	movlb	0	; () banked
  4781  001272  C0A9  F0AA         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4782  001276  C0AA  F0AB         	movff	??_OpenUSART,??_OpenUSART+1
  4783  00127A  0100               	movlb	0	; () banked
  4784  00127C  6BAC               	clrf	(??_OpenUSART+2)& (0+255),b
  4785  00127E  0100               	movlb	0	; () banked
  4786  001280  51AB               	movf	(??_OpenUSART+1)& (0+255),w,b
  4787  001282  6EB0               	movwf	4016,c	;volatile
  4788                           
  4789                           ; BSR set to: 0
  4790  001284  8AAC               	bsf	4012,5,c	;volatile
  4791                           
  4792                           ; BSR set to: 0
  4793  001286  8EAB               	bsf	4011,7,c	;volatile
  4794                           
  4795                           ; BSR set to: 0
  4796  001288  9C94               	bcf	3988,6,c	;volatile
  4797                           
  4798                           ; BSR set to: 0
  4799  00128A  8E94               	bsf	3988,7,c	;volatile
  4800                           
  4801                           ; BSR set to: 0
  4802  00128C  A8AC               	btfss	4012,4,c	;volatile
  4803  00128E  0012               	return	
  4804                           
  4805                           ; BSR set to: 0
  4806  001290  BEAC               	btfsc	4012,7,c	;volatile
  4807  001292  0012               	return	
  4808                           
  4809                           ; BSR set to: 0
  4810  001294  8C94               	bsf	3988,6,c	;volatile
  4811  001296  0012               	return	
  4812  001298                     __end_of_OpenUSART:
  4813                           	opt stack 0
  4814                           tblptru	equ	0xFF8
  4815                           tblptrh	equ	0xFF7
  4816                           tblptrl	equ	0xFF6
  4817                           tablat	equ	0xFF5
  4818                           prodh	equ	0xFF4
  4819                           prodl	equ	0xFF3
  4820                           intcon	equ	0xFF2
  4821                           postinc0	equ	0xFEE
  4822                           wreg	equ	0xFE8
  4823                           indf1	equ	0xFE7
  4824                           fsr1h	equ	0xFE2
  4825                           fsr1l	equ	0xFE1
  4826                           indf2	equ	0xFDF
  4827                           postinc2	equ	0xFDE
  4828                           postdec2	equ	0xFDD
  4829                           fsr2h	equ	0xFDA
  4830                           fsr2l	equ	0xFD9
  4831                           status	equ	0xFD8
  4832                           
  4833 ;; *************** function _OpenTimer1 *****************
  4834 ;; Defined at:
  4835 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1open.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;  config          1    wreg     unsigned char 
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;  config          1   40[BANK0 ] unsigned char 
  4840 ;; Return value:  Size  Location     Type
  4841 ;;		None               void
  4842 ;; Registers used:
  4843 ;;		wreg, status,2, status,0
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4849 ;;      Params:         0       0       0       0       0
  4850 ;;      Locals:         0       1       0       0       0
  4851 ;;      Temps:          0       0       0       0       0
  4852 ;;      Totals:         0       1       0       0       0
  4853 ;;Total ram usage:        1 bytes
  4854 ;; Hardware stack levels used:    1
  4855 ;; Hardware stack levels required when called:   10
  4856 ;; This function calls:
  4857 ;;		Nothing
  4858 ;; This function is called by:
  4859 ;;		_main
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           
  4863                           	psect	text30
  4864  001924                     __ptext30:
  4865                           	opt stack 0
  4866  001924                     _OpenTimer1:
  4867                           	opt stack 20
  4868                           
  4869                           ; BSR set to: 0
  4870                           ;incstack = 0
  4871                           ;OpenTimer1@config stored from wreg
  4872  001924  CFE8 F0A8          	movff	wreg,OpenTimer1@config
  4873  001928  0100               	movlb	0	; () banked
  4874  00192A  0100               	movlb	0	; () banked
  4875  00192C  51A8               	movf	OpenTimer1@config& (0+255),w,b
  4876  00192E  0B7E               	andlw	126
  4877  001930  6ECD               	movwf	4045,c	;volatile
  4878                           
  4879                           ; BSR set to: 0
  4880  001932  0100               	movlb	0	; () banked
  4881  001934  0100               	movlb	0	; () banked
  4882  001936  ADA8               	btfss	OpenTimer1@config& (0+255),6,b
  4883  001938  D002               	goto	l449
  4884                           
  4885                           ; BSR set to: 0
  4886  00193A  8ECD               	bsf	4045,7,c	;volatile
  4887  00193C  D001               	goto	l2760
  4888  00193E                     l449:
  4889                           
  4890                           ; BSR set to: 0
  4891  00193E  9ECD               	bcf	4045,7,c	;volatile
  4892  001940                     l2760:
  4893                           
  4894                           ; BSR set to: 0
  4895  001940  0E00               	movlw	0
  4896  001942  6ECF               	movwf	4047,c	;volatile
  4897  001944  0E00               	movlw	0
  4898  001946  6ECE               	movwf	4046,c	;volatile
  4899                           
  4900                           ; BSR set to: 0
  4901  001948  909E               	bcf	3998,0,c	;volatile
  4902                           
  4903                           ; BSR set to: 0
  4904  00194A  0100               	movlb	0	; () banked
  4905  00194C  0100               	movlb	0	; () banked
  4906  00194E  AFA8               	btfss	OpenTimer1@config& (0+255),7,b
  4907  001950  D002               	goto	l451
  4908                           
  4909                           ; BSR set to: 0
  4910  001952  809D               	bsf	3997,0,c	;volatile
  4911  001954  D001               	goto	l452
  4912  001956                     l451:
  4913                           
  4914                           ; BSR set to: 0
  4915  001956  909D               	bcf	3997,0,c	;volatile
  4916  001958                     l452:
  4917                           
  4918                           ; BSR set to: 0
  4919  001958  80CD               	bsf	4045,0,c	;volatile
  4920                           
  4921                           ; BSR set to: 0
  4922  00195A  0012               	return	
  4923  00195C                     __end_of_OpenTimer1:
  4924                           	opt stack 0
  4925                           tblptru	equ	0xFF8
  4926                           tblptrh	equ	0xFF7
  4927                           tblptrl	equ	0xFF6
  4928                           tablat	equ	0xFF5
  4929                           prodh	equ	0xFF4
  4930                           prodl	equ	0xFF3
  4931                           intcon	equ	0xFF2
  4932                           postinc0	equ	0xFEE
  4933                           wreg	equ	0xFE8
  4934                           indf1	equ	0xFE7
  4935                           fsr1h	equ	0xFE2
  4936                           fsr1l	equ	0xFE1
  4937                           indf2	equ	0xFDF
  4938                           postinc2	equ	0xFDE
  4939                           postdec2	equ	0xFDD
  4940                           fsr2h	equ	0xFDA
  4941                           fsr2l	equ	0xFD9
  4942                           status	equ	0xFD8
  4943                           
  4944 ;; *************** function _InterruptHandlerLow *****************
  4945 ;; Defined at:
  4946 ;;		line 142 in file "../src/interrupts.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;		None
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;		None
  4951 ;; Return value:  Size  Location     Type
  4952 ;;		None               void
  4953 ;; Registers used:
  4954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4960 ;;      Params:         0       0       0       0       0
  4961 ;;      Locals:         0       0       0       0       0
  4962 ;;      Temps:         17       0       0       0       0
  4963 ;;      Totals:        17       0       0       0       0
  4964 ;;Total ram usage:       17 bytes
  4965 ;; Hardware stack levels used:    1
  4966 ;; Hardware stack levels required when called:    9
  4967 ;; This function calls:
  4968 ;;		_timer1_int_handler
  4969 ;;		_uart_recv_int_handler
  4970 ;;		i1_ConvertADC
  4971 ;; This function is called by:
  4972 ;;		Interrupt level 1
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	intcodelo
  4977  000018                     __pintcodelo:
  4978                           	opt stack 0
  4979  000018                     _InterruptHandlerLow:
  4980                           	opt stack 17
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;incstack = 0
  4984  000018  CFD8 F01E          	movff	status,??_InterruptHandlerLow
  4985  00001C  CFE8 F01F          	movff	wreg,??_InterruptHandlerLow+1
  4986  000020  CFE0 F020          	movff	bsr,??_InterruptHandlerLow+2
  4987  000024  CFFA F021          	movff	pclath,??_InterruptHandlerLow+3
  4988  000028  CFFB F022          	movff	pclatu,??_InterruptHandlerLow+4
  4989  00002C  CFE9 F023          	movff	fsr0l,??_InterruptHandlerLow+5
  4990  000030  CFEA F024          	movff	fsr0h,??_InterruptHandlerLow+6
  4991  000034  CFE1 F025          	movff	fsr1l,??_InterruptHandlerLow+7
  4992  000038  CFE2 F026          	movff	fsr1h,??_InterruptHandlerLow+8
  4993  00003C  CFD9 F027          	movff	fsr2l,??_InterruptHandlerLow+9
  4994  000040  CFDA F028          	movff	fsr2h,??_InterruptHandlerLow+10
  4995  000044  CFF3 F029          	movff	prodl,??_InterruptHandlerLow+11
  4996  000048  CFF4 F02A          	movff	prodh,??_InterruptHandlerLow+12
  4997  00004C  CFF6 F02B          	movff	tblptrl,??_InterruptHandlerLow+13
  4998  000050  CFF7 F02C          	movff	tblptrh,??_InterruptHandlerLow+14
  4999  000054  CFF8 F02D          	movff	tblptru,??_InterruptHandlerLow+15
  5000  000058  CFF5 F02E          	movff	tablat,??_InterruptHandlerLow+16
  5001                           
  5002                           ;interrupts.c: 144: if (PIR1bits.TMR1IF) {
  5003  00005C  A09E               	btfss	3998,0,c	;volatile
  5004  00005E  D005               	goto	i1l3036
  5005                           
  5006                           ;interrupts.c: 145: PIR1bits.TMR1IF = 0;
  5007  000060  909E               	bcf	3998,0,c	;volatile
  5008                           
  5009                           ;interrupts.c: 146: ConvertADC();
  5010  000062  ECE8  F00D         	call	i1_ConvertADC	;wreg free
  5011                           
  5012                           ;interrupts.c: 147: timer1_int_handler();
  5013  000066  EC48  F00B         	call	_timer1_int_handler	;wreg free
  5014  00006A                     i1l3036:
  5015                           
  5016                           ;interrupts.c: 148: }
  5017                           ;interrupts.c: 151: if (PIR1bits.RCIF) {
  5018  00006A  AA9E               	btfss	3998,5,c	;volatile
  5019  00006C  D003               	goto	i1l397
  5020                           
  5021                           ;interrupts.c: 152: PIR1bits.RCIF = 0;
  5022  00006E  9A9E               	bcf	3998,5,c	;volatile
  5023                           
  5024                           ;interrupts.c: 153: uart_recv_int_handler();
  5025  000070  ECB5  F008         	call	_uart_recv_int_handler	;wreg free
  5026  000074                     i1l397:
  5027  000074  C02E  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5028  000078  C02D  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5029  00007C  C02C  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5030  000080  C02B  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5031  000084  C02A  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5032  000088  C029  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5033  00008C  C028  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5034  000090  C027  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5035  000094  C026  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5036  000098  C025  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5037  00009C  C024  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5038  0000A0  C023  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5039  0000A4  C022  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5040  0000A8  C021  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5041  0000AC  C020  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5042  0000B0  C01F  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5043  0000B4  C01E  FFD8         	movff	??_InterruptHandlerLow,status
  5044  0000B8  0010               	retfie	
  5045  0000BA                     __end_of_InterruptHandlerLow:
  5046                           	opt stack 0
  5047                           pclatu	equ	0xFFB
  5048                           pclath	equ	0xFFA
  5049                           tblptru	equ	0xFF8
  5050                           tblptrh	equ	0xFF7
  5051                           tblptrl	equ	0xFF6
  5052                           tablat	equ	0xFF5
  5053                           prodh	equ	0xFF4
  5054                           prodl	equ	0xFF3
  5055                           intcon	equ	0xFF2
  5056                           postinc0	equ	0xFEE
  5057                           fsr0h	equ	0xFEA
  5058                           fsr0l	equ	0xFE9
  5059                           wreg	equ	0xFE8
  5060                           indf1	equ	0xFE7
  5061                           fsr1h	equ	0xFE2
  5062                           fsr1l	equ	0xFE1
  5063                           bsr	equ	0xFE0
  5064                           indf2	equ	0xFDF
  5065                           postinc2	equ	0xFDE
  5066                           postdec2	equ	0xFDD
  5067                           fsr2h	equ	0xFDA
  5068                           fsr2l	equ	0xFD9
  5069                           status	equ	0xFD8
  5070                           
  5071 ;; *************** function i1_ConvertADC *****************
  5072 ;; Defined at:
  5073 ;;		line 22 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcconv.c"
  5074 ;; Parameters:    Size  Location     Type
  5075 ;;		None
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;		None
  5078 ;; Return value:  Size  Location     Type
  5079 ;;		None               void
  5080 ;; Registers used:
  5081 ;;		None
  5082 ;; Tracked objects:
  5083 ;;		On entry : 0/0
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5087 ;;      Params:         0       0       0       0       0
  5088 ;;      Locals:         0       0       0       0       0
  5089 ;;      Temps:          0       0       0       0       0
  5090 ;;      Totals:         0       0       0       0       0
  5091 ;;Total ram usage:        0 bytes
  5092 ;; Hardware stack levels used:    1
  5093 ;; Hardware stack levels required when called:    5
  5094 ;; This function calls:
  5095 ;;		Nothing
  5096 ;; This function is called by:
  5097 ;;		_InterruptHandlerLow
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           	psect	text32
  5102  001BD0                     __ptext32:
  5103                           	opt stack 0
  5104  001BD0                     i1_ConvertADC:
  5105                           	opt stack 20
  5106                           
  5107                           ;incstack = 0
  5108  001BD0  82C2               	bsf	4034,1,c	;volatile
  5109  001BD2  0012               	return	
  5110  001BD4                     __end_ofi1_ConvertADC:
  5111                           	opt stack 0
  5112                           pclatu	equ	0xFFB
  5113                           pclath	equ	0xFFA
  5114                           tblptru	equ	0xFF8
  5115                           tblptrh	equ	0xFF7
  5116                           tblptrl	equ	0xFF6
  5117                           tablat	equ	0xFF5
  5118                           prodh	equ	0xFF4
  5119                           prodl	equ	0xFF3
  5120                           intcon	equ	0xFF2
  5121                           postinc0	equ	0xFEE
  5122                           fsr0h	equ	0xFEA
  5123                           fsr0l	equ	0xFE9
  5124                           wreg	equ	0xFE8
  5125                           indf1	equ	0xFE7
  5126                           fsr1h	equ	0xFE2
  5127                           fsr1l	equ	0xFE1
  5128                           bsr	equ	0xFE0
  5129                           indf2	equ	0xFDF
  5130                           postinc2	equ	0xFDE
  5131                           postdec2	equ	0xFDD
  5132                           fsr2h	equ	0xFDA
  5133                           fsr2l	equ	0xFD9
  5134                           status	equ	0xFD8
  5135                           
  5136 ;; *************** function _uart_recv_int_handler *****************
  5137 ;; Defined at:
  5138 ;;		line 11 in file "../src/my_uart.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;		None
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;		None
  5143 ;; Return value:  Size  Location     Type
  5144 ;;		None               void
  5145 ;; Registers used:
  5146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5152 ;;      Params:         0       0       0       0       0
  5153 ;;      Locals:         0       0       0       0       0
  5154 ;;      Temps:          1       0       0       0       0
  5155 ;;      Totals:         1       0       0       0       0
  5156 ;;Total ram usage:        1 bytes
  5157 ;; Hardware stack levels used:    1
  5158 ;; Hardware stack levels required when called:    8
  5159 ;; This function calls:
  5160 ;;		_ReadUSART
  5161 ;;		_ToMainLow_sendmsg
  5162 ;; This function is called by:
  5163 ;;		_InterruptHandlerLow
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167                           	psect	text33
  5168  00116A                     __ptext33:
  5169                           	opt stack 0
  5170  00116A                     _uart_recv_int_handler:
  5171                           	opt stack 17
  5172                           
  5173                           ;my_uart.c: 12: if ((PIR1bits.RCIF)) {
  5174                           
  5175                           ;incstack = 0
  5176  00116A  AA9E               	btfss	3998,5,c	;volatile
  5177  00116C  D03C               	goto	i1l3022
  5178                           
  5179                           ;my_uart.c: 13: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5180  00116E  EE20 F004          	lfsr	2,4
  5181  001172  504D               	movf	_uc_ptr,w,c
  5182  001174  26D9               	addwf	fsr2l,f,c
  5183  001176  504E               	movf	_uc_ptr+1,w,c
  5184  001178  22DA               	addwfc	fsr2h,f,c
  5185  00117A  50DF               	movf	indf2,w,c
  5186  00117C  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5187  00117E  501B               	movf	??_uart_recv_int_handler,w,c
  5188  001180  0D01               	mullw	1
  5189  001182  50F3               	movf	prodl,w,c
  5190  001184  244D               	addwf	_uc_ptr,w,c
  5191  001186  6ED9               	movwf	fsr2l,c
  5192  001188  50F4               	movf	prodh,w,c
  5193  00118A  204E               	addwfc	_uc_ptr+1,w,c
  5194  00118C  6EDA               	movwf	fsr2h,c
  5195  00118E  EC84  F00D         	call	_ReadUSART	;wreg free
  5196  001192  6EDF               	movwf	indf2,c
  5197                           
  5198                           ;my_uart.c: 14: uc_ptr->buflen++;
  5199  001194  EE20 F004          	lfsr	2,4
  5200  001198  504D               	movf	_uc_ptr,w,c
  5201  00119A  26D9               	addwf	fsr2l,f,c
  5202  00119C  504E               	movf	_uc_ptr+1,w,c
  5203  00119E  22DA               	addwfc	fsr2h,f,c
  5204  0011A0  2ADF               	incf	indf2,f,c
  5205                           
  5206                           ;my_uart.c: 16: if (uc_ptr->buflen == 4) {
  5207  0011A2  EE20 F004          	lfsr	2,4
  5208  0011A6  504D               	movf	_uc_ptr,w,c
  5209  0011A8  26D9               	addwf	fsr2l,f,c
  5210  0011AA  504E               	movf	_uc_ptr+1,w,c
  5211  0011AC  22DA               	addwfc	fsr2h,f,c
  5212  0011AE  0E04               	movlw	4
  5213  0011B0  62DF               	cpfseq	indf2,c
  5214  0011B2  D019               	goto	i1l3022
  5215                           
  5216                           ;my_uart.c: 17: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5217  0011B4  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5218  0011B6  0E1F               	movlw	31
  5219  0011B8  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5220  0011BA  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5221  0011BC  C04E  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5222  0011C0  C04D  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5223  0011C4  EE20 F004          	lfsr	2,4
  5224  0011C8  504D               	movf	_uc_ptr,w,c
  5225  0011CA  26D9               	addwf	fsr2l,f,c
  5226  0011CC  504E               	movf	_uc_ptr+1,w,c
  5227  0011CE  22DA               	addwfc	fsr2h,f,c
  5228  0011D0  50DF               	movf	indf2,w,c
  5229  0011D2  EC3D  F00D         	call	_ToMainLow_sendmsg
  5230                           
  5231                           ;my_uart.c: 18: uc_ptr->buflen = 0;
  5232  0011D6  EE20 F004          	lfsr	2,4
  5233  0011DA  504D               	movf	_uc_ptr,w,c
  5234  0011DC  26D9               	addwf	fsr2l,f,c
  5235  0011DE  504E               	movf	_uc_ptr+1,w,c
  5236  0011E0  22DA               	addwfc	fsr2h,f,c
  5237  0011E2  0E00               	movlw	0
  5238  0011E4  6EDF               	movwf	indf2,c
  5239  0011E6                     i1l3022:
  5240                           
  5241                           ;my_uart.c: 19: }
  5242                           ;my_uart.c: 20: }
  5243                           ;my_uart.c: 21: if (USART_Status.OVERRUN_ERROR == 1) {
  5244  0011E6  A650               	btfss	_USART_Status,3,c
  5245  0011E8  0012               	return	
  5246                           
  5247                           ;my_uart.c: 24: RCSTAbits.CREN = 0;
  5248  0011EA  98AB               	bcf	4011,4,c	;volatile
  5249                           
  5250                           ;my_uart.c: 25: RCSTAbits.CREN = 1;
  5251  0011EC  88AB               	bsf	4011,4,c	;volatile
  5252                           
  5253                           ;my_uart.c: 26: ToMainLow_sendmsg(0, 30, (void *) 0);
  5254  0011EE  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5255  0011F0  0E1E               	movlw	30
  5256  0011F2  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5257  0011F4  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5258  0011F6  0E00               	movlw	0
  5259  0011F8  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5260  0011FA  0E00               	movlw	0
  5261  0011FC  6E18               	movwf	ToMainLow_sendmsg@data,c
  5262  0011FE  0E00               	movlw	0
  5263  001200  EC3D  F00D         	call	_ToMainLow_sendmsg
  5264  001204  0012               	return	
  5265  001206                     __end_of_uart_recv_int_handler:
  5266                           	opt stack 0
  5267                           pclatu	equ	0xFFB
  5268                           pclath	equ	0xFFA
  5269                           tblptru	equ	0xFF8
  5270                           tblptrh	equ	0xFF7
  5271                           tblptrl	equ	0xFF6
  5272                           tablat	equ	0xFF5
  5273                           prodh	equ	0xFF4
  5274                           prodl	equ	0xFF3
  5275                           intcon	equ	0xFF2
  5276                           postinc0	equ	0xFEE
  5277                           fsr0h	equ	0xFEA
  5278                           fsr0l	equ	0xFE9
  5279                           wreg	equ	0xFE8
  5280                           indf1	equ	0xFE7
  5281                           fsr1h	equ	0xFE2
  5282                           fsr1l	equ	0xFE1
  5283                           bsr	equ	0xFE0
  5284                           indf2	equ	0xFDF
  5285                           postinc2	equ	0xFDE
  5286                           postdec2	equ	0xFDD
  5287                           fsr2h	equ	0xFDA
  5288                           fsr2l	equ	0xFD9
  5289                           status	equ	0xFD8
  5290                           
  5291 ;; *************** function _ReadUSART *****************
  5292 ;; Defined at:
  5293 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uread.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;		None
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;  data            1    0[COMRAM] unsigned char 
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  1    wreg      unsigned char 
  5300 ;; Registers used:
  5301 ;;		wreg, status,2, status,0
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5307 ;;      Params:         0       0       0       0       0
  5308 ;;      Locals:         1       0       0       0       0
  5309 ;;      Temps:          0       0       0       0       0
  5310 ;;      Totals:         1       0       0       0       0
  5311 ;;Total ram usage:        1 bytes
  5312 ;; Hardware stack levels used:    1
  5313 ;; Hardware stack levels required when called:    5
  5314 ;; This function calls:
  5315 ;;		Nothing
  5316 ;; This function is called by:
  5317 ;;		_uart_recv_int_handler
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320                           
  5321                           	psect	text34
  5322  001B08                     __ptext34:
  5323                           	opt stack 0
  5324  001B08                     _ReadUSART:
  5325                           	opt stack 19
  5326                           
  5327                           ;incstack = 0
  5328  001B08  0EF2               	movlw	242
  5329  001B0A  1650               	andwf	_USART_Status,f,c
  5330  001B0C  ACAB               	btfss	4011,6,c	;volatile
  5331  001B0E  D003               	goto	i1l511
  5332  001B10  9050               	bcf	_USART_Status,0,c
  5333  001B12  B0AB               	btfsc	4011,0,c	;volatile
  5334  001B14  8050               	bsf	_USART_Status,0,c
  5335  001B16                     i1l511:
  5336  001B16  B4AB               	btfsc	4011,2,c	;volatile
  5337  001B18  8450               	bsf	_USART_Status,2,c
  5338  001B1A  B2AB               	btfsc	4011,1,c	;volatile
  5339  001B1C  8650               	bsf	_USART_Status,3,c
  5340  001B1E  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5341  001B22  5001               	movf	ReadUSART@data,w,c
  5342  001B24  0012               	return	
  5343  001B26                     __end_of_ReadUSART:
  5344                           	opt stack 0
  5345                           pclatu	equ	0xFFB
  5346                           pclath	equ	0xFFA
  5347                           tblptru	equ	0xFF8
  5348                           tblptrh	equ	0xFF7
  5349                           tblptrl	equ	0xFF6
  5350                           tablat	equ	0xFF5
  5351                           prodh	equ	0xFF4
  5352                           prodl	equ	0xFF3
  5353                           intcon	equ	0xFF2
  5354                           postinc0	equ	0xFEE
  5355                           fsr0h	equ	0xFEA
  5356                           fsr0l	equ	0xFE9
  5357                           wreg	equ	0xFE8
  5358                           indf1	equ	0xFE7
  5359                           fsr1h	equ	0xFE2
  5360                           fsr1l	equ	0xFE1
  5361                           bsr	equ	0xFE0
  5362                           indf2	equ	0xFDF
  5363                           postinc2	equ	0xFDE
  5364                           postdec2	equ	0xFDD
  5365                           fsr2h	equ	0xFDA
  5366                           fsr2l	equ	0xFD9
  5367                           status	equ	0xFD8
  5368                           
  5369 ;; *************** function _timer1_int_handler *****************
  5370 ;; Defined at:
  5371 ;;		line 34 in file "../src/user_interrupts.c"
  5372 ;; Parameters:    Size  Location     Type
  5373 ;;		None
  5374 ;; Auto vars:     Size  Location     Type
  5375 ;;  result          2   27[COMRAM] unsigned int 
  5376 ;; Return value:  Size  Location     Type
  5377 ;;		None               void
  5378 ;; Registers used:
  5379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5380 ;; Tracked objects:
  5381 ;;		On entry : 0/0
  5382 ;;		On exit  : 0/0
  5383 ;;		Unchanged: 0/0
  5384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5385 ;;      Params:         0       0       0       0       0
  5386 ;;      Locals:         2       0       0       0       0
  5387 ;;      Temps:          1       0       0       0       0
  5388 ;;      Totals:         3       0       0       0       0
  5389 ;;Total ram usage:        3 bytes
  5390 ;; Hardware stack levels used:    1
  5391 ;; Hardware stack levels required when called:    8
  5392 ;; This function calls:
  5393 ;;		_ReadTimer1
  5394 ;;		_ToMainLow_sendmsg
  5395 ;;		_WriteTimer1
  5396 ;; This function is called by:
  5397 ;;		_InterruptHandlerLow
  5398 ;; This function uses a non-reentrant model
  5399 ;;
  5400                           
  5401                           	psect	text35
  5402  001690                     __ptext35:
  5403                           	opt stack 0
  5404  001690                     _timer1_int_handler:
  5405                           	opt stack 17
  5406                           
  5407                           ;user_interrupts.c: 35: unsigned int result;
  5408                           ;user_interrupts.c: 38: LATBbits.LATB1 = !LATBbits.LATB1;
  5409                           
  5410                           ;incstack = 0
  5411  001690  B28A               	btfsc	3978,1,c	;volatile
  5412  001692  D002               	goto	i1u189_20
  5413  001694  0E01               	movlw	1
  5414  001696  D001               	goto	i1u189_26
  5415  001698                     i1u189_20:
  5416  001698  0E00               	movlw	0
  5417  00169A                     i1u189_26:
  5418  00169A  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  5419  00169C  461B               	rlncf	??_timer1_int_handler,f,c
  5420  00169E  508A               	movf	3978,w,c	;volatile
  5421  0016A0  181B               	xorwf	??_timer1_int_handler,w,c
  5422  0016A2  0BFD               	andlw	-3
  5423  0016A4  181B               	xorwf	??_timer1_int_handler,w,c
  5424  0016A6  6E8A               	movwf	3978,c	;volatile
  5425                           
  5426                           ;user_interrupts.c: 39: result = ReadTimer1();
  5427  0016A8  ECC2  F00D         	call	_ReadTimer1	;wreg free
  5428  0016AC  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  5429  0016B0  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5430                           
  5431                           ;user_interrupts.c: 40: ToMainLow_sendmsg(0, 11, (void *) 0);
  5432  0016B4  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  5433  0016B6  0E0B               	movlw	11
  5434  0016B8  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5435  0016BA  501B               	movf	??_timer1_int_handler& (0+255),w,c
  5436  0016BC  0E00               	movlw	0
  5437  0016BE  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5438  0016C0  0E00               	movlw	0
  5439  0016C2  6E18               	movwf	ToMainLow_sendmsg@data,c
  5440  0016C4  0E00               	movlw	0
  5441  0016C6  EC3D  F00D         	call	_ToMainLow_sendmsg
  5442                           
  5443                           ;user_interrupts.c: 43: WriteTimer1(0);
  5444  0016CA  0E00               	movlw	0
  5445  0016CC  6E02               	movwf	WriteTimer1@timer1+1,c
  5446  0016CE  0E00               	movlw	0
  5447  0016D0  6E01               	movwf	WriteTimer1@timer1,c
  5448  0016D2  ECB9  F00D         	call	_WriteTimer1	;wreg free
  5449  0016D6  0012               	return	
  5450  0016D8                     __end_of_timer1_int_handler:
  5451                           	opt stack 0
  5452                           pclatu	equ	0xFFB
  5453                           pclath	equ	0xFFA
  5454                           tblptru	equ	0xFF8
  5455                           tblptrh	equ	0xFF7
  5456                           tblptrl	equ	0xFF6
  5457                           tablat	equ	0xFF5
  5458                           prodh	equ	0xFF4
  5459                           prodl	equ	0xFF3
  5460                           intcon	equ	0xFF2
  5461                           postinc0	equ	0xFEE
  5462                           fsr0h	equ	0xFEA
  5463                           fsr0l	equ	0xFE9
  5464                           wreg	equ	0xFE8
  5465                           indf1	equ	0xFE7
  5466                           fsr1h	equ	0xFE2
  5467                           fsr1l	equ	0xFE1
  5468                           bsr	equ	0xFE0
  5469                           indf2	equ	0xFDF
  5470                           postinc2	equ	0xFDE
  5471                           postdec2	equ	0xFDD
  5472                           fsr2h	equ	0xFDA
  5473                           fsr2l	equ	0xFD9
  5474                           status	equ	0xFD8
  5475                           
  5476 ;; *************** function _WriteTimer1 *****************
  5477 ;; Defined at:
  5478 ;;		line 14 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1write.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;  timer1          2    0[COMRAM] unsigned int 
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;  timer           2    2[COMRAM] struct Timers
  5483 ;; Return value:  Size  Location     Type
  5484 ;;		None               void
  5485 ;; Registers used:
  5486 ;;		None
  5487 ;; Tracked objects:
  5488 ;;		On entry : 0/0
  5489 ;;		On exit  : 0/0
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5492 ;;      Params:         2       0       0       0       0
  5493 ;;      Locals:         2       0       0       0       0
  5494 ;;      Temps:          0       0       0       0       0
  5495 ;;      Totals:         4       0       0       0       0
  5496 ;;Total ram usage:        4 bytes
  5497 ;; Hardware stack levels used:    1
  5498 ;; Hardware stack levels required when called:    5
  5499 ;; This function calls:
  5500 ;;		Nothing
  5501 ;; This function is called by:
  5502 ;;		_timer1_int_handler
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           	psect	text36
  5507  001B72                     __ptext36:
  5508                           	opt stack 0
  5509  001B72                     _WriteTimer1:
  5510                           	opt stack 19
  5511                           
  5512                           ;incstack = 0
  5513  001B72  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5514  001B76  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5515  001B7A  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5516  001B7E  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5517  001B82  0012               	return	
  5518  001B84                     __end_of_WriteTimer1:
  5519                           	opt stack 0
  5520                           pclatu	equ	0xFFB
  5521                           pclath	equ	0xFFA
  5522                           tblptru	equ	0xFF8
  5523                           tblptrh	equ	0xFF7
  5524                           tblptrl	equ	0xFF6
  5525                           tablat	equ	0xFF5
  5526                           prodh	equ	0xFF4
  5527                           prodl	equ	0xFF3
  5528                           intcon	equ	0xFF2
  5529                           postinc0	equ	0xFEE
  5530                           fsr0h	equ	0xFEA
  5531                           fsr0l	equ	0xFE9
  5532                           wreg	equ	0xFE8
  5533                           indf1	equ	0xFE7
  5534                           fsr1h	equ	0xFE2
  5535                           fsr1l	equ	0xFE1
  5536                           bsr	equ	0xFE0
  5537                           indf2	equ	0xFDF
  5538                           postinc2	equ	0xFDE
  5539                           postdec2	equ	0xFDD
  5540                           fsr2h	equ	0xFDA
  5541                           fsr2l	equ	0xFD9
  5542                           status	equ	0xFD8
  5543                           
  5544 ;; *************** function _ToMainLow_sendmsg *****************
  5545 ;; Defined at:
  5546 ;;		line 103 in file "../src/messages.c"
  5547 ;; Parameters:    Size  Location     Type
  5548 ;;  length          1    wreg     unsigned char 
  5549 ;;  msgtype         1   22[COMRAM] unsigned char 
  5550 ;;  data            2   23[COMRAM] PTR void 
  5551 ;;		 -> main@uc(5), NULL(0), 
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;  length          1   25[COMRAM] unsigned char 
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  1    wreg      char 
  5556 ;; Registers used:
  5557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5563 ;;      Params:         3       0       0       0       0
  5564 ;;      Locals:         1       0       0       0       0
  5565 ;;      Temps:          0       0       0       0       0
  5566 ;;      Totals:         4       0       0       0       0
  5567 ;;Total ram usage:        4 bytes
  5568 ;; Hardware stack levels used:    1
  5569 ;; Hardware stack levels required when called:    7
  5570 ;; This function calls:
  5571 ;;		i1_send_msg
  5572 ;; This function is called by:
  5573 ;;		_timer1_int_handler
  5574 ;;		_uart_recv_int_handler
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           	psect	text37
  5579  001A7A                     __ptext37:
  5580                           	opt stack 0
  5581  001A7A                     _ToMainLow_sendmsg:
  5582                           	opt stack 17
  5583                           
  5584                           ;incstack = 0
  5585                           ;ToMainLow_sendmsg@length stored from wreg
  5586  001A7A  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5587                           
  5588                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5589                           ;	Return value of _ToMainLow_sendmsg is never used
  5590  001A7E  0101               	movlb	1	; () banked
  5591  001A80  0E01               	movlw	high _ToMainLow_MQ
  5592  001A82  6E0C               	movwf	i1send_msg@qptr+1,c
  5593  001A84  0101               	movlb	1	; () banked
  5594  001A86  0E6C               	movlw	low _ToMainLow_MQ
  5595  001A88  6E0B               	movwf	i1send_msg@qptr,c
  5596  001A8A  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5597  001A8E  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5598  001A92  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5599  001A96  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5600  001A9A  ECB8  F007         	call	i1_send_msg	;wreg free
  5601  001A9E  0012               	return	
  5602  001AA0                     __end_of_ToMainLow_sendmsg:
  5603                           	opt stack 0
  5604                           pclatu	equ	0xFFB
  5605                           pclath	equ	0xFFA
  5606                           tblptru	equ	0xFF8
  5607                           tblptrh	equ	0xFF7
  5608                           tblptrl	equ	0xFF6
  5609                           tablat	equ	0xFF5
  5610                           prodh	equ	0xFF4
  5611                           prodl	equ	0xFF3
  5612                           intcon	equ	0xFF2
  5613                           postinc0	equ	0xFEE
  5614                           fsr0h	equ	0xFEA
  5615                           fsr0l	equ	0xFE9
  5616                           wreg	equ	0xFE8
  5617                           indf1	equ	0xFE7
  5618                           fsr1h	equ	0xFE2
  5619                           fsr1l	equ	0xFE1
  5620                           bsr	equ	0xFE0
  5621                           indf2	equ	0xFDF
  5622                           postinc2	equ	0xFDE
  5623                           postdec2	equ	0xFDD
  5624                           fsr2h	equ	0xFDA
  5625                           fsr2l	equ	0xFD9
  5626                           status	equ	0xFD8
  5627                           
  5628 ;; *************** function i1_send_msg *****************
  5629 ;; Defined at:
  5630 ;;		line 24 in file "../src/messages.c"
  5631 ;; Parameters:    Size  Location     Type
  5632 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5633 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5634 ;;  length          1   12[COMRAM] unsigned char 
  5635 ;;  msgtype         1   13[COMRAM] unsigned char 
  5636 ;;  data            2   14[COMRAM] PTR void 
  5637 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), i2c_int_handler@error_buf(3), 
  5638 ;;		 -> NULL(0), timer0_int_handler@val(2), 
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5641 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5642 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5643 ;;  send_msg        2   17[COMRAM] unsigned int 
  5644 ;;  send_msg        1   19[COMRAM] unsigned char 
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  1    wreg      char 
  5647 ;; Registers used:
  5648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5654 ;;      Params:         6       0       0       0       0
  5655 ;;      Locals:         5       0       0       0       0
  5656 ;;      Temps:          1       0       0       0       0
  5657 ;;      Totals:        12       0       0       0       0
  5658 ;;Total ram usage:       12 bytes
  5659 ;; Hardware stack levels used:    1
  5660 ;; Hardware stack levels required when called:    6
  5661 ;; This function calls:
  5662 ;;		i1_memcpy
  5663 ;; This function is called by:
  5664 ;;		_ToMainLow_sendmsg
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           	psect	text38
  5669  000F70                     __ptext38:
  5670                           	opt stack 0
  5671  000F70                     i1_send_msg:
  5672                           	opt stack 17
  5673                           
  5674                           ;messages.c: 25: unsigned char slot;
  5675                           ;messages.c: 27: msg *qmsg;
  5676                           ;messages.c: 28: size_t tlength = length;
  5677                           
  5678                           ;incstack = 0
  5679  000F70  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5680  000F74  6A13               	clrf	i1send_msg@tlength+1,c
  5681                           
  5682                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5683  000F76  EE20 F034          	lfsr	2,52
  5684  000F7A  500B               	movf	i1send_msg@qptr,w,c
  5685  000F7C  26D9               	addwf	fsr2l,f,c
  5686  000F7E  500C               	movf	i1send_msg@qptr+1,w,c
  5687  000F80  22DA               	addwfc	fsr2h,f,c
  5688  000F82  50DF               	movf	indf2,w,c
  5689  000F84  6E14               	movwf	i1send_msg@slot,c
  5690                           
  5691                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5692  000F86  5014               	movf	i1send_msg@slot,w,c
  5693  000F88  0D0D               	mullw	13
  5694  000F8A  50F3               	movf	prodl,w,c
  5695  000F8C  240B               	addwf	i1send_msg@qptr,w,c
  5696  000F8E  6E15               	movwf	i1send_msg@qmsg,c
  5697  000F90  50F4               	movf	prodh,w,c
  5698  000F92  200C               	addwfc	i1send_msg@qptr+1,w,c
  5699  000F94  6E16               	movwf	i1send_msg@qmsg+1,c
  5700                           
  5701                           ;messages.c: 41: if (qmsg->full != 0) {
  5702  000F96  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5703  000F9A  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5704  000F9E  50DF               	movf	indf2,w,c
  5705  000FA0  B4D8               	btfsc	status,2,c
  5706  000FA2  D002               	goto	i1l2986
  5707                           
  5708                           ;messages.c: 42: return (-1);
  5709  000FA4  0EFF               	movlw	255
  5710  000FA6  0012               	return	
  5711  000FA8                     i1l2986:
  5712                           
  5713                           ;messages.c: 43: }
  5714                           ;messages.c: 46: qmsg->length = length;
  5715  000FA8  EE20 F001          	lfsr	2,1
  5716  000FAC  5015               	movf	i1send_msg@qmsg,w,c
  5717  000FAE  26D9               	addwf	fsr2l,f,c
  5718  000FB0  5016               	movf	i1send_msg@qmsg+1,w,c
  5719  000FB2  22DA               	addwfc	fsr2h,f,c
  5720  000FB4  C00D  FFDF         	movff	i1send_msg@length,indf2
  5721                           
  5722                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5723  000FB8  EE20 F002          	lfsr	2,2
  5724  000FBC  5015               	movf	i1send_msg@qmsg,w,c
  5725  000FBE  26D9               	addwf	fsr2l,f,c
  5726  000FC0  5016               	movf	i1send_msg@qmsg+1,w,c
  5727  000FC2  22DA               	addwfc	fsr2h,f,c
  5728  000FC4  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5729                           
  5730                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5731  000FC8  0E03               	movlw	3
  5732  000FCA  2415               	addwf	i1send_msg@qmsg,w,c
  5733  000FCC  6E01               	movwf	i1memcpy@d1,c
  5734  000FCE  0E00               	movlw	0
  5735  000FD0  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5736  000FD2  6E02               	movwf	i1memcpy@d1+1,c
  5737  000FD4  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5738  000FD8  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5739  000FDC  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5740  000FE0  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5741  000FE4  EC14  F00C         	call	i1_memcpy	;wreg free
  5742                           
  5743                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5744  000FE8  EE20 F034          	lfsr	2,52
  5745  000FEC  500B               	movf	i1send_msg@qptr,w,c
  5746  000FEE  26D9               	addwf	fsr2l,f,c
  5747  000FF0  500C               	movf	i1send_msg@qptr+1,w,c
  5748  000FF2  22DA               	addwfc	fsr2h,f,c
  5749  000FF4  EE10 F034          	lfsr	1,52
  5750  000FF8  500B               	movf	i1send_msg@qptr,w,c
  5751  000FFA  26E1               	addwf	fsr1l,f,c
  5752  000FFC  500C               	movf	i1send_msg@qptr+1,w,c
  5753  000FFE  22E2               	addwfc	fsr1h,f,c
  5754  001000  50E7               	movf	indf1,w,c
  5755  001002  6E11               	movwf	??i1_send_msg& (0+255),c
  5756  001004  2811               	incf	??i1_send_msg,w,c
  5757  001006  0B03               	andlw	3
  5758  001008  6EDF               	movwf	indf2,c
  5759                           
  5760                           ;messages.c: 59: qmsg->full = 1;
  5761  00100A  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5762  00100E  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5763  001012  0E01               	movlw	1
  5764  001014  6EDF               	movwf	indf2,c
  5765                           
  5766                           ;messages.c: 60: return (1);
  5767  001016  0E01               	movlw	1
  5768  001018  0012               	return	
  5769  00101A                     __end_ofi1_send_msg:
  5770                           	opt stack 0
  5771                           pclatu	equ	0xFFB
  5772                           pclath	equ	0xFFA
  5773                           tblptru	equ	0xFF8
  5774                           tblptrh	equ	0xFF7
  5775                           tblptrl	equ	0xFF6
  5776                           tablat	equ	0xFF5
  5777                           prodh	equ	0xFF4
  5778                           prodl	equ	0xFF3
  5779                           intcon	equ	0xFF2
  5780                           postinc0	equ	0xFEE
  5781                           fsr0h	equ	0xFEA
  5782                           fsr0l	equ	0xFE9
  5783                           wreg	equ	0xFE8
  5784                           indf1	equ	0xFE7
  5785                           fsr1h	equ	0xFE2
  5786                           fsr1l	equ	0xFE1
  5787                           bsr	equ	0xFE0
  5788                           indf2	equ	0xFDF
  5789                           postinc2	equ	0xFDE
  5790                           postdec2	equ	0xFDD
  5791                           fsr2h	equ	0xFDA
  5792                           fsr2l	equ	0xFD9
  5793                           status	equ	0xFD8
  5794                           
  5795 ;; *************** function i1_memcpy *****************
  5796 ;; Defined at:
  5797 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;  d1              2    0[COMRAM] PTR void 
  5800 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5801 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5802 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  5803 ;;  s1              2    2[COMRAM] PTR const void 
  5804 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5805 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5806 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), FromMainHigh_MQ(54), 
  5807 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), i2c_int_handler@error_buf(3), 
  5808 ;;		 -> NULL(0), timer0_int_handler@val(2), 
  5809 ;;  n               2    4[COMRAM] unsigned int 
  5810 ;; Auto vars:     Size  Location     Type
  5811 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5812 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5813 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5814 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), FromMainHigh_MQ(54), 
  5815 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), i2c_int_handler@error_buf(3), 
  5816 ;;		 -> NULL(0), timer0_int_handler@val(2), 
  5817 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5818 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5819 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5820 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  5821 ;; Return value:  Size  Location     Type
  5822 ;;                  2    0[COMRAM] PTR void 
  5823 ;; Registers used:
  5824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5825 ;; Tracked objects:
  5826 ;;		On entry : 0/0
  5827 ;;		On exit  : 0/0
  5828 ;;		Unchanged: 0/0
  5829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5830 ;;      Params:         6       0       0       0       0
  5831 ;;      Locals:         4       0       0       0       0
  5832 ;;      Temps:          0       0       0       0       0
  5833 ;;      Totals:        10       0       0       0       0
  5834 ;;Total ram usage:       10 bytes
  5835 ;; Hardware stack levels used:    1
  5836 ;; Hardware stack levels required when called:    5
  5837 ;; This function calls:
  5838 ;;		Nothing
  5839 ;; This function is called by:
  5840 ;;		i1_send_msg
  5841 ;; This function uses a non-reentrant model
  5842 ;;
  5843                           
  5844                           	psect	text39
  5845  001828                     __ptext39:
  5846                           	opt stack 0
  5847  001828                     i1_memcpy:
  5848                           	opt stack 17
  5849                           
  5850                           ;incstack = 0
  5851  001828  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5852  00182C  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5853  001830  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5854  001834  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5855  001838  D00E               	goto	i1l2962
  5856  00183A                     i1l2956:
  5857  00183A  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5858  00183E  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5859  001842  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5860  001846  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5861  00184A  CFDF FFE7          	movff	indf2,indf1
  5862  00184E  4A09               	infsnz	i1memcpy@s,f,c
  5863  001850  2A0A               	incf	i1memcpy@s+1,f,c
  5864  001852  4A07               	infsnz	i1memcpy@d,f,c
  5865  001854  2A08               	incf	i1memcpy@d+1,f,c
  5866  001856                     i1l2962:
  5867  001856  0605               	decf	i1memcpy@n,f,c
  5868  001858  A0D8               	btfss	status,0,c
  5869  00185A  0606               	decf	i1memcpy@n+1,f,c
  5870  00185C  2805               	incf	i1memcpy@n& (0+255),w,c
  5871  00185E  B4D8               	btfsc	status,2,c
  5872  001860  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5873  001862  B4D8               	btfsc	status,2,c
  5874                           
  5875                           ;	Return value of i1_memcpy is never used
  5876  001864  0012               	return	
  5877  001866  D7E9               	goto	i1l2956
  5878  001868                     __end_ofi1_memcpy:
  5879                           	opt stack 0
  5880                           pclatu	equ	0xFFB
  5881                           pclath	equ	0xFFA
  5882                           tblptru	equ	0xFF8
  5883                           tblptrh	equ	0xFF7
  5884                           tblptrl	equ	0xFF6
  5885                           tablat	equ	0xFF5
  5886                           prodh	equ	0xFF4
  5887                           prodl	equ	0xFF3
  5888                           intcon	equ	0xFF2
  5889                           postinc0	equ	0xFEE
  5890                           fsr0h	equ	0xFEA
  5891                           fsr0l	equ	0xFE9
  5892                           wreg	equ	0xFE8
  5893                           indf1	equ	0xFE7
  5894                           fsr1h	equ	0xFE2
  5895                           fsr1l	equ	0xFE1
  5896                           bsr	equ	0xFE0
  5897                           indf2	equ	0xFDF
  5898                           postinc2	equ	0xFDE
  5899                           postdec2	equ	0xFDD
  5900                           fsr2h	equ	0xFDA
  5901                           fsr2l	equ	0xFD9
  5902                           status	equ	0xFD8
  5903                           
  5904 ;; *************** function _ReadTimer1 *****************
  5905 ;; Defined at:
  5906 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1read.c"
  5907 ;; Parameters:    Size  Location     Type
  5908 ;;		None
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;  timer           2    2[COMRAM] struct Timers
  5911 ;; Return value:  Size  Location     Type
  5912 ;;                  2    0[COMRAM] unsigned int 
  5913 ;; Registers used:
  5914 ;;		None
  5915 ;; Tracked objects:
  5916 ;;		On entry : 0/0
  5917 ;;		On exit  : 0/0
  5918 ;;		Unchanged: 0/0
  5919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5920 ;;      Params:         2       0       0       0       0
  5921 ;;      Locals:         2       0       0       0       0
  5922 ;;      Temps:          0       0       0       0       0
  5923 ;;      Totals:         4       0       0       0       0
  5924 ;;Total ram usage:        4 bytes
  5925 ;; Hardware stack levels used:    1
  5926 ;; Hardware stack levels required when called:    5
  5927 ;; This function calls:
  5928 ;;		Nothing
  5929 ;; This function is called by:
  5930 ;;		_timer1_int_handler
  5931 ;; This function uses a non-reentrant model
  5932 ;;
  5933                           
  5934                           	psect	text40
  5935  001B84                     __ptext40:
  5936                           	opt stack 0
  5937  001B84                     _ReadTimer1:
  5938                           	opt stack 19
  5939                           
  5940                           ;incstack = 0
  5941  001B84  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  5942  001B88  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  5943  001B8C  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  5944  001B90  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  5945  001B94  0012               	return	
  5946  001B96                     __end_of_ReadTimer1:
  5947                           	opt stack 0
  5948                           pclatu	equ	0xFFB
  5949                           pclath	equ	0xFFA
  5950                           tblptru	equ	0xFF8
  5951                           tblptrh	equ	0xFF7
  5952                           tblptrl	equ	0xFF6
  5953                           tablat	equ	0xFF5
  5954                           prodh	equ	0xFF4
  5955                           prodl	equ	0xFF3
  5956                           intcon	equ	0xFF2
  5957                           postinc0	equ	0xFEE
  5958                           fsr0h	equ	0xFEA
  5959                           fsr0l	equ	0xFE9
  5960                           wreg	equ	0xFE8
  5961                           indf1	equ	0xFE7
  5962                           fsr1h	equ	0xFE2
  5963                           fsr1l	equ	0xFE1
  5964                           bsr	equ	0xFE0
  5965                           indf2	equ	0xFDF
  5966                           postinc2	equ	0xFDE
  5967                           postdec2	equ	0xFDD
  5968                           fsr2h	equ	0xFDA
  5969                           fsr2l	equ	0xFD9
  5970                           status	equ	0xFD8
  5971                           
  5972 ;; *************** function _InterruptHandlerHigh *****************
  5973 ;; Defined at:
  5974 ;;		line 92 in file "../src/interrupts.c"
  5975 ;; Parameters:    Size  Location     Type
  5976 ;;		None
  5977 ;; Auto vars:     Size  Location     Type
  5978 ;;  pureADCValue    2   38[BANK0 ] int 
  5979 ;; Return value:  Size  Location     Type
  5980 ;;		None               void
  5981 ;; Registers used:
  5982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5988 ;;      Params:         0       0       0       0       0
  5989 ;;      Locals:         0       2       0       0       0
  5990 ;;      Temps:          0      16       0       0       0
  5991 ;;      Totals:         0      18       0       0       0
  5992 ;;Total ram usage:       18 bytes
  5993 ;; Hardware stack levels used:    1
  5994 ;; Hardware stack levels required when called:    4
  5995 ;; This function calls:
  5996 ;;		_ReadADC
  5997 ;;		_SleepIfOkay
  5998 ;;		_i2c_int_handler
  5999 ;;		_timer0_int_handler
  6000 ;; This function is called by:
  6001 ;;		Interrupt level 2
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	intcode
  6006  000008                     __pintcode:
  6007                           	opt stack 0
  6008  000008                     _InterruptHandlerHigh:
  6009                           	opt stack 17
  6010                           
  6011                           ;incstack = 0
  6012  000008  CFFA F098          	movff	pclath,??_InterruptHandlerHigh+2
  6013  00000C  CFFB F099          	movff	pclatu,??_InterruptHandlerHigh+3
  6014  000010  EF5C  F007         	goto	int_func
  6015                           pclatu	equ	0xFFB
  6016                           pclath	equ	0xFFA
  6017                           tblptru	equ	0xFF8
  6018                           tblptrh	equ	0xFF7
  6019                           tblptrl	equ	0xFF6
  6020                           tablat	equ	0xFF5
  6021                           prodh	equ	0xFF4
  6022                           prodl	equ	0xFF3
  6023                           intcon	equ	0xFF2
  6024                           postinc0	equ	0xFEE
  6025                           fsr0h	equ	0xFEA
  6026                           fsr0l	equ	0xFE9
  6027                           wreg	equ	0xFE8
  6028                           indf1	equ	0xFE7
  6029                           fsr1h	equ	0xFE2
  6030                           fsr1l	equ	0xFE1
  6031                           bsr	equ	0xFE0
  6032                           indf2	equ	0xFDF
  6033                           postinc2	equ	0xFDE
  6034                           postdec2	equ	0xFDD
  6035                           fsr2h	equ	0xFDA
  6036                           fsr2l	equ	0xFD9
  6037                           status	equ	0xFD8
  6038                           
  6039                           	psect	intcode_body
  6040  000EB8                     __pintcode_body:
  6041                           	opt stack 17
  6042  000EB8                     int_func:
  6043                           	opt stack 17
  6044  000EB8  CFE9 F09A          	movff	fsr0l,??_InterruptHandlerHigh+4
  6045  000EBC  CFEA F09B          	movff	fsr0h,??_InterruptHandlerHigh+5
  6046  000EC0  CFE1 F09C          	movff	fsr1l,??_InterruptHandlerHigh+6
  6047  000EC4  CFE2 F09D          	movff	fsr1h,??_InterruptHandlerHigh+7
  6048  000EC8  CFD9 F09E          	movff	fsr2l,??_InterruptHandlerHigh+8
  6049  000ECC  CFDA F09F          	movff	fsr2h,??_InterruptHandlerHigh+9
  6050  000ED0  CFF3 F0A0          	movff	prodl,??_InterruptHandlerHigh+10
  6051  000ED4  CFF4 F0A1          	movff	prodh,??_InterruptHandlerHigh+11
  6052  000ED8  CFF6 F0A2          	movff	tblptrl,??_InterruptHandlerHigh+12
  6053  000EDC  CFF7 F0A3          	movff	tblptrh,??_InterruptHandlerHigh+13
  6054  000EE0  CFF8 F0A4          	movff	tblptru,??_InterruptHandlerHigh+14
  6055  000EE4  CFF5 F0A5          	movff	tablat,??_InterruptHandlerHigh+15
  6056                           
  6057                           ;interrupts.c: 97: if (PIR1bits.SSPIF) {
  6058  000EE8  A69E               	btfss	3998,3,c	;volatile
  6059  000EEA  D003               	goto	i2l3266
  6060                           
  6061                           ;interrupts.c: 99: PIR1bits.SSPIF = 0;
  6062  000EEC  969E               	bcf	3998,3,c	;volatile
  6063                           
  6064                           ;interrupts.c: 101: i2c_int_handler();
  6065  000EEE  EC5F  F000         	call	_i2c_int_handler	;wreg free
  6066  000EF2                     i2l3266:
  6067                           
  6068                           ;interrupts.c: 102: }
  6069                           ;interrupts.c: 105: if (INTCONbits.TMR0IF) {
  6070  000EF2  A4F2               	btfss	intcon,2,c	;volatile
  6071  000EF4  D003               	goto	i2l3272
  6072                           
  6073                           ;interrupts.c: 106: INTCONbits.TMR0IF = 0;
  6074  000EF6  94F2               	bcf	intcon,2,c	;volatile
  6075                           
  6076                           ;interrupts.c: 108: timer0_int_handler();
  6077  000EF8  EC10  F00A         	call	_timer0_int_handler	;wreg free
  6078  000EFC                     i2l3272:
  6079                           
  6080                           ;interrupts.c: 109: }
  6081                           ;interrupts.c: 114: if(PIR1bits.ADIF == 1)
  6082  000EFC  AC9E               	btfss	3998,6,c	;volatile
  6083  000EFE  D019               	goto	i2l3280
  6084                           
  6085                           ;interrupts.c: 115: {
  6086                           ;interrupts.c: 118: PIR1bits.ADIF = 0;
  6087  000F00  9C9E               	bcf	3998,6,c	;volatile
  6088                           
  6089                           ;interrupts.c: 119: int pureADCValue = ReadADC();
  6090  000F02  ECDA  F00D         	call	_ReadADC	;wreg free
  6091  000F06  C02F  F0A6         	movff	?_ReadADC,InterruptHandlerHigh@pureADCValue
  6092  000F0A  C030  F0A7         	movff	?_ReadADC+1,InterruptHandlerHigh@pureADCValue+1
  6093                           
  6094                           ;interrupts.c: 120: ADCValue = pureADCValue >> 2;
  6095  000F0E  0100               	movlb	0	; () banked
  6096  000F10  C0A6  F096         	movff	InterruptHandlerHigh@pureADCValue,??_InterruptHandlerHigh
  6097  000F14  0100               	movlb	0	; () banked
  6098  000F16  C0A7  F097         	movff	InterruptHandlerHigh@pureADCValue+1,??_InterruptHandlerHigh+1
  6099  000F1A  0100               	movlb	0	; () banked
  6100  000F1C  3597               	rlcf	(??_InterruptHandlerHigh+1)& (0+255),w,b
  6101  000F1E  3397               	rrcf	(??_InterruptHandlerHigh+1)& (0+255),f,b
  6102  000F20  3396               	rrcf	??_InterruptHandlerHigh& (0+255),f,b
  6103  000F22  0100               	movlb	0	; () banked
  6104  000F24  3597               	rlcf	(??_InterruptHandlerHigh+1)& (0+255),w,b
  6105  000F26  3397               	rrcf	(??_InterruptHandlerHigh+1)& (0+255),f,b
  6106  000F28  3396               	rrcf	??_InterruptHandlerHigh& (0+255),f,b
  6107  000F2A  C096  F0CF         	movff	??_InterruptHandlerHigh,_ADCValue
  6108  000F2E  C097  F0D0         	movff	??_InterruptHandlerHigh+1,_ADCValue+1
  6109  000F32                     i2l3280:
  6110                           
  6111                           ;interrupts.c: 123: }
  6112                           ;interrupts.c: 129: SleepIfOkay();
  6113  000F32  EC21  F00B         	call	_SleepIfOkay	;wreg free
  6114  000F36  C0A5  FFF5         	movff	??_InterruptHandlerHigh+15,tablat
  6115  000F3A  C0A4  FFF8         	movff	??_InterruptHandlerHigh+14,tblptru
  6116  000F3E  C0A3  FFF7         	movff	??_InterruptHandlerHigh+13,tblptrh
  6117  000F42  C0A2  FFF6         	movff	??_InterruptHandlerHigh+12,tblptrl
  6118  000F46  C0A1  FFF4         	movff	??_InterruptHandlerHigh+11,prodh
  6119  000F4A  C0A0  FFF3         	movff	??_InterruptHandlerHigh+10,prodl
  6120  000F4E  C09F  FFDA         	movff	??_InterruptHandlerHigh+9,fsr2h
  6121  000F52  C09E  FFD9         	movff	??_InterruptHandlerHigh+8,fsr2l
  6122  000F56  C09D  FFE2         	movff	??_InterruptHandlerHigh+7,fsr1h
  6123  000F5A  C09C  FFE1         	movff	??_InterruptHandlerHigh+6,fsr1l
  6124  000F5E  C09B  FFEA         	movff	??_InterruptHandlerHigh+5,fsr0h
  6125  000F62  C09A  FFE9         	movff	??_InterruptHandlerHigh+4,fsr0l
  6126  000F66  C099  FFFB         	movff	??_InterruptHandlerHigh+3,pclatu
  6127  000F6A  C098  FFFA         	movff	??_InterruptHandlerHigh+2,pclath
  6128  000F6E  0011               	retfie		f
  6129  000F70                     __end_of_InterruptHandlerHigh:
  6130                           	opt stack 0
  6131                           pclatu	equ	0xFFB
  6132                           pclath	equ	0xFFA
  6133                           tblptru	equ	0xFF8
  6134                           tblptrh	equ	0xFF7
  6135                           tblptrl	equ	0xFF6
  6136                           tablat	equ	0xFF5
  6137                           prodh	equ	0xFF4
  6138                           prodl	equ	0xFF3
  6139                           intcon	equ	0xFF2
  6140                           postinc0	equ	0xFEE
  6141                           fsr0h	equ	0xFEA
  6142                           fsr0l	equ	0xFE9
  6143                           wreg	equ	0xFE8
  6144                           indf1	equ	0xFE7
  6145                           fsr1h	equ	0xFE2
  6146                           fsr1l	equ	0xFE1
  6147                           bsr	equ	0xFE0
  6148                           indf2	equ	0xFDF
  6149                           postinc2	equ	0xFDE
  6150                           postdec2	equ	0xFDD
  6151                           fsr2h	equ	0xFDA
  6152                           fsr2l	equ	0xFD9
  6153                           status	equ	0xFD8
  6154                           
  6155 ;; *************** function _timer0_int_handler *****************
  6156 ;; Defined at:
  6157 ;;		line 16 in file "../src/user_interrupts.c"
  6158 ;; Parameters:    Size  Location     Type
  6159 ;;		None
  6160 ;; Auto vars:     Size  Location     Type
  6161 ;;  val             2    4[BANK0 ] unsigned int 
  6162 ;;  msgtype         2    2[BANK0 ] int 
  6163 ;;  length          2    0[BANK0 ] int 
  6164 ;; Return value:  Size  Location     Type
  6165 ;;		None               void
  6166 ;; Registers used:
  6167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6168 ;; Tracked objects:
  6169 ;;		On entry : 0/0
  6170 ;;		On exit  : 0/0
  6171 ;;		Unchanged: 0/0
  6172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6173 ;;      Params:         0       0       0       0       0
  6174 ;;      Locals:         0       6       0       0       0
  6175 ;;      Temps:          1       0       0       0       0
  6176 ;;      Totals:         1       6       0       0       0
  6177 ;;Total ram usage:        7 bytes
  6178 ;; Hardware stack levels used:    1
  6179 ;; Hardware stack levels required when called:    3
  6180 ;; This function calls:
  6181 ;;		_FromMainHigh_recvmsg
  6182 ;;		_ToMainHigh_sendmsg
  6183 ;;		_WriteTimer0
  6184 ;; This function is called by:
  6185 ;;		_InterruptHandlerHigh
  6186 ;; This function uses a non-reentrant model
  6187 ;;
  6188                           
  6189                           	psect	text42
  6190  001420                     __ptext42:
  6191                           	opt stack 0
  6192  001420                     _timer0_int_handler:
  6193                           	opt stack 17
  6194                           
  6195                           ;user_interrupts.c: 17: unsigned int val;
  6196                           ;user_interrupts.c: 18: int length, msgtype;
  6197                           ;user_interrupts.c: 21: LATBbits.LATB0 = !LATBbits.LATB0;
  6198                           
  6199                           ;incstack = 0
  6200  001420  B08A               	btfsc	3978,0,c	;volatile
  6201  001422  D002               	goto	i2u195_40
  6202  001424  0E01               	movlw	1
  6203  001426  D001               	goto	i2u195_46
  6204  001428                     i2u195_40:
  6205  001428  0E00               	movlw	0
  6206  00142A                     i2u195_46:
  6207  00142A  6E4C               	movwf	??_timer0_int_handler& (0+255),c
  6208  00142C  508A               	movf	3978,w,c	;volatile
  6209  00142E  184C               	xorwf	??_timer0_int_handler,w,c
  6210  001430  0BFE               	andlw	-2
  6211  001432  184C               	xorwf	??_timer0_int_handler,w,c
  6212  001434  6E8A               	movwf	3978,c	;volatile
  6213                           
  6214                           ;user_interrupts.c: 23: WriteTimer0(0);
  6215  001436  0E00               	movlw	0
  6216  001438  6E30               	movwf	WriteTimer0@timer0+1,c
  6217  00143A  0E00               	movlw	0
  6218  00143C  6E2F               	movwf	WriteTimer0@timer0,c
  6219  00143E  ECCB  F00D         	call	_WriteTimer0	;wreg free
  6220                           
  6221                           ;user_interrupts.c: 25: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6222  001442  0100               	movlb	0	; () banked
  6223  001444  0E00               	movlw	high timer0_int_handler@msgtype
  6224  001446  6E48               	movwf	FromMainHigh_recvmsg@msgtype+1,c
  6225  001448  0100               	movlb	0	; () banked
  6226  00144A  0E82               	movlw	low timer0_int_handler@msgtype
  6227  00144C  6E47               	movwf	FromMainHigh_recvmsg@msgtype,c
  6228  00144E  0100               	movlb	0	; () banked
  6229  001450  0E00               	movlw	high timer0_int_handler@val
  6230  001452  6E4A               	movwf	FromMainHigh_recvmsg@data+1,c
  6231  001454  0100               	movlb	0	; () banked
  6232  001456  0E84               	movlw	low timer0_int_handler@val
  6233  001458  6E49               	movwf	FromMainHigh_recvmsg@data,c
  6234  00145A  0E02               	movlw	2
  6235  00145C  EC14  F00D         	call	_FromMainHigh_recvmsg
  6236  001460  0100               	movlb	0	; () banked
  6237  001462  0100               	movlb	0	; () banked
  6238  001464  6F80               	movwf	timer0_int_handler@length& (0+255),b
  6239  001466  0100               	movlb	0	; () banked
  6240  001468  6B81               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6241  00146A  0100               	movlb	0	; () banked
  6242  00146C  BF80               	btfsc	timer0_int_handler@length& (0+255),7,b
  6243  00146E  0781               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6244                           
  6245                           ; BSR set to: 0
  6246                           ;user_interrupts.c: 26: if (length == sizeof (val)) {
  6247  001470  0100               	movlb	0	; () banked
  6248  001472  0100               	movlb	0	; () banked
  6249  001474  5180               	movf	timer0_int_handler@length& (0+255),w,b
  6250  001476  0A02               	xorlw	2
  6251  001478  1181               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6252  00147A  A4D8               	btfss	status,2,c
  6253  00147C  0012               	return	
  6254                           
  6255                           ; BSR set to: 0
  6256                           ;user_interrupts.c: 27: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6257  00147E  6E4C               	movwf	??_timer0_int_handler& (0+255),c
  6258  001480  0E0A               	movlw	10
  6259  001482  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  6260  001484  504C               	movf	??_timer0_int_handler& (0+255),w,c
  6261  001486  0100               	movlb	0	; () banked
  6262  001488  0E00               	movlw	high timer0_int_handler@val
  6263  00148A  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  6264  00148C  0100               	movlb	0	; () banked
  6265  00148E  0E84               	movlw	low timer0_int_handler@val
  6266  001490  6E46               	movwf	ToMainHigh_sendmsg@data,c
  6267  001492  0E02               	movlw	2
  6268  001494  EC50  F00D         	call	_ToMainHigh_sendmsg
  6269  001498  0012               	return	
  6270  00149A                     __end_of_timer0_int_handler:
  6271                           	opt stack 0
  6272                           pclatu	equ	0xFFB
  6273                           pclath	equ	0xFFA
  6274                           tblptru	equ	0xFF8
  6275                           tblptrh	equ	0xFF7
  6276                           tblptrl	equ	0xFF6
  6277                           tablat	equ	0xFF5
  6278                           prodh	equ	0xFF4
  6279                           prodl	equ	0xFF3
  6280                           intcon	equ	0xFF2
  6281                           postinc0	equ	0xFEE
  6282                           fsr0h	equ	0xFEA
  6283                           fsr0l	equ	0xFE9
  6284                           wreg	equ	0xFE8
  6285                           indf1	equ	0xFE7
  6286                           fsr1h	equ	0xFE2
  6287                           fsr1l	equ	0xFE1
  6288                           bsr	equ	0xFE0
  6289                           indf2	equ	0xFDF
  6290                           postinc2	equ	0xFDE
  6291                           postdec2	equ	0xFDD
  6292                           fsr2h	equ	0xFDA
  6293                           fsr2l	equ	0xFD9
  6294                           status	equ	0xFD8
  6295                           
  6296 ;; *************** function _WriteTimer0 *****************
  6297 ;; Defined at:
  6298 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0write.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;  timer0          2   46[COMRAM] unsigned int 
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;  timer           2   48[COMRAM] struct Timers
  6303 ;; Return value:  Size  Location     Type
  6304 ;;		None               void
  6305 ;; Registers used:
  6306 ;;		None
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6312 ;;      Params:         2       0       0       0       0
  6313 ;;      Locals:         2       0       0       0       0
  6314 ;;      Temps:          0       0       0       0       0
  6315 ;;      Totals:         4       0       0       0       0
  6316 ;;Total ram usage:        4 bytes
  6317 ;; Hardware stack levels used:    1
  6318 ;; This function calls:
  6319 ;;		Nothing
  6320 ;; This function is called by:
  6321 ;;		_timer0_int_handler
  6322 ;; This function uses a non-reentrant model
  6323 ;;
  6324                           
  6325                           	psect	text43
  6326  001B96                     __ptext43:
  6327                           	opt stack 0
  6328  001B96                     _WriteTimer0:
  6329                           	opt stack 19
  6330                           
  6331                           ;incstack = 0
  6332  001B96  C02F  F031         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6333  001B9A  C030  F032         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6334  001B9E  C032  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6335  001BA2  C031  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6336  001BA6  0012               	return	
  6337  001BA8                     __end_of_WriteTimer0:
  6338                           	opt stack 0
  6339                           pclatu	equ	0xFFB
  6340                           pclath	equ	0xFFA
  6341                           tblptru	equ	0xFF8
  6342                           tblptrh	equ	0xFF7
  6343                           tblptrl	equ	0xFF6
  6344                           tablat	equ	0xFF5
  6345                           prodh	equ	0xFF4
  6346                           prodl	equ	0xFF3
  6347                           intcon	equ	0xFF2
  6348                           postinc0	equ	0xFEE
  6349                           fsr0h	equ	0xFEA
  6350                           fsr0l	equ	0xFE9
  6351                           wreg	equ	0xFE8
  6352                           indf1	equ	0xFE7
  6353                           fsr1h	equ	0xFE2
  6354                           fsr1l	equ	0xFE1
  6355                           bsr	equ	0xFE0
  6356                           indf2	equ	0xFDF
  6357                           postinc2	equ	0xFDE
  6358                           postdec2	equ	0xFDD
  6359                           fsr2h	equ	0xFDA
  6360                           fsr2l	equ	0xFD9
  6361                           status	equ	0xFD8
  6362                           
  6363 ;; *************** function _FromMainHigh_recvmsg *****************
  6364 ;; Defined at:
  6365 ;;		line 183 in file "../src/messages.c"
  6366 ;; Parameters:    Size  Location     Type
  6367 ;;  maxlength       1    wreg     unsigned char 
  6368 ;;  msgtype         2   70[COMRAM] PTR unsigned char 
  6369 ;;		 -> timer0_int_handler@msgtype(2), 
  6370 ;;  data            2   72[COMRAM] PTR void 
  6371 ;;		 -> timer0_int_handler@val(2), 
  6372 ;; Auto vars:     Size  Location     Type
  6373 ;;  maxlength       1   74[COMRAM] unsigned char 
  6374 ;; Return value:  Size  Location     Type
  6375 ;;                  1    wreg      char 
  6376 ;; Registers used:
  6377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6378 ;; Tracked objects:
  6379 ;;		On entry : 0/0
  6380 ;;		On exit  : 0/0
  6381 ;;		Unchanged: 0/0
  6382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6383 ;;      Params:         4       0       0       0       0
  6384 ;;      Locals:         1       0       0       0       0
  6385 ;;      Temps:          0       0       0       0       0
  6386 ;;      Totals:         5       0       0       0       0
  6387 ;;Total ram usage:        5 bytes
  6388 ;; Hardware stack levels used:    1
  6389 ;; Hardware stack levels required when called:    2
  6390 ;; This function calls:
  6391 ;;		i2_recv_msg
  6392 ;; This function is called by:
  6393 ;;		_timer0_int_handler
  6394 ;; This function uses a non-reentrant model
  6395 ;;
  6396                           
  6397                           	psect	text44
  6398  001A28                     __ptext44:
  6399                           	opt stack 0
  6400  001A28                     _FromMainHigh_recvmsg:
  6401                           	opt stack 17
  6402                           
  6403                           ;incstack = 0
  6404                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  6405  001A28  CFE8 F04B          	movff	wreg,FromMainHigh_recvmsg@maxlength
  6406                           
  6407                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  6408  001A2C  0102               	movlb	2	; () banked
  6409  001A2E  0E02               	movlw	high _FromMainHigh_MQ
  6410  001A30  6E3A               	movwf	i2recv_msg@qptr+1,c
  6411  001A32  0102               	movlb	2	; () banked
  6412  001A34  0E00               	movlw	low _FromMainHigh_MQ
  6413  001A36  6E39               	movwf	i2recv_msg@qptr,c
  6414  001A38  C04B  F03B         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  6415  001A3C  C048  F03D         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  6416  001A40  C047  F03C         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  6417  001A44  C04A  F03F         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  6418  001A48  C049  F03E         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  6419  001A4C  EC8F  F006         	call	i2_recv_msg	;wreg free
  6420  001A50  0012               	return	
  6421  001A52                     __end_of_FromMainHigh_recvmsg:
  6422                           	opt stack 0
  6423                           pclatu	equ	0xFFB
  6424                           pclath	equ	0xFFA
  6425                           tblptru	equ	0xFF8
  6426                           tblptrh	equ	0xFF7
  6427                           tblptrl	equ	0xFF6
  6428                           tablat	equ	0xFF5
  6429                           prodh	equ	0xFF4
  6430                           prodl	equ	0xFF3
  6431                           intcon	equ	0xFF2
  6432                           postinc0	equ	0xFEE
  6433                           fsr0h	equ	0xFEA
  6434                           fsr0l	equ	0xFE9
  6435                           wreg	equ	0xFE8
  6436                           indf1	equ	0xFE7
  6437                           fsr1h	equ	0xFE2
  6438                           fsr1l	equ	0xFE1
  6439                           bsr	equ	0xFE0
  6440                           indf2	equ	0xFDF
  6441                           postinc2	equ	0xFDE
  6442                           postdec2	equ	0xFDD
  6443                           fsr2h	equ	0xFDA
  6444                           fsr2l	equ	0xFD9
  6445                           status	equ	0xFD8
  6446                           
  6447 ;; *************** function i2_recv_msg *****************
  6448 ;; Defined at:
  6449 ;;		line 63 in file "../src/messages.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;  qptr            2   56[COMRAM] PTR struct __msg_queue
  6452 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6453 ;;  maxlength       1   58[COMRAM] unsigned char 
  6454 ;;  msgtype         2   59[COMRAM] PTR unsigned char 
  6455 ;;		 -> main@msgtype(1), timer0_int_handler@msgtype(2), 
  6456 ;;  data            2   61[COMRAM] PTR void 
  6457 ;;		 -> main@msgbuffer(11), timer0_int_handler@val(2), 
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;  recv_msg        2   68[COMRAM] PTR struct __msg
  6460 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6461 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6462 ;;  recv_msg        2   66[COMRAM] unsigned int 
  6463 ;;  recv_msg        1   65[COMRAM] unsigned char 
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  1    wreg      char 
  6466 ;; Registers used:
  6467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6468 ;; Tracked objects:
  6469 ;;		On entry : 0/0
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6473 ;;      Params:         7       0       0       0       0
  6474 ;;      Locals:         5       0       0       0       0
  6475 ;;      Temps:          2       0       0       0       0
  6476 ;;      Totals:        14       0       0       0       0
  6477 ;;Total ram usage:       14 bytes
  6478 ;; Hardware stack levels used:    1
  6479 ;; Hardware stack levels required when called:    1
  6480 ;; This function calls:
  6481 ;;		i2_memcpy
  6482 ;; This function is called by:
  6483 ;;		_FromMainHigh_recvmsg
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           	psect	text45
  6488  000D1E                     __ptext45:
  6489                           	opt stack 0
  6490  000D1E                     i2_recv_msg:
  6491                           	opt stack 17
  6492                           
  6493                           ;messages.c: 64: unsigned char slot;
  6494                           ;messages.c: 68: msg *qmsg;
  6495                           ;messages.c: 69: size_t tlength;
  6496                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6497                           
  6498                           ;incstack = 0
  6499  000D1E  EE20 F035          	lfsr	2,53
  6500  000D22  5039               	movf	i2recv_msg@qptr,w,c
  6501  000D24  26D9               	addwf	fsr2l,f,c
  6502  000D26  503A               	movf	i2recv_msg@qptr+1,w,c
  6503  000D28  22DA               	addwfc	fsr2h,f,c
  6504  000D2A  50DF               	movf	indf2,w,c
  6505  000D2C  6E42               	movwf	i2recv_msg@slot,c
  6506                           
  6507                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6508  000D2E  5042               	movf	i2recv_msg@slot,w,c
  6509  000D30  0D0D               	mullw	13
  6510  000D32  50F3               	movf	prodl,w,c
  6511  000D34  2439               	addwf	i2recv_msg@qptr,w,c
  6512  000D36  6E45               	movwf	i2recv_msg@qmsg,c
  6513  000D38  50F4               	movf	prodh,w,c
  6514  000D3A  203A               	addwfc	i2recv_msg@qptr+1,w,c
  6515  000D3C  6E46               	movwf	i2recv_msg@qmsg+1,c
  6516                           
  6517                           ;messages.c: 74: if (qmsg->full == 1) {
  6518  000D3E  0E01               	movlw	1
  6519  000D40  C045  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6520  000D44  C046  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6521  000D48  62DF               	cpfseq	indf2,c
  6522  000D4A  D050               	goto	i2l3338
  6523                           
  6524                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6525  000D4C  EE20 F001          	lfsr	2,1
  6526  000D50  5045               	movf	i2recv_msg@qmsg,w,c
  6527  000D52  26D9               	addwf	fsr2l,f,c
  6528  000D54  5046               	movf	i2recv_msg@qmsg+1,w,c
  6529  000D56  22DA               	addwfc	fsr2h,f,c
  6530  000D58  50DF               	movf	indf2,w,c
  6531  000D5A  5C3B               	subwf	i2recv_msg@maxlength,w,c
  6532  000D5C  B0D8               	btfsc	status,0,c
  6533  000D5E  D002               	goto	i2l3322
  6534                           
  6535                           ;messages.c: 77: return (-3);
  6536  000D60  0EFD               	movlw	253
  6537  000D62  0012               	return	
  6538  000D64                     i2l3322:
  6539                           
  6540                           ;messages.c: 78: }
  6541                           ;messages.c: 80: tlength = qmsg->length;
  6542  000D64  EE20 F001          	lfsr	2,1
  6543  000D68  5045               	movf	i2recv_msg@qmsg,w,c
  6544  000D6A  26D9               	addwf	fsr2l,f,c
  6545  000D6C  5046               	movf	i2recv_msg@qmsg+1,w,c
  6546  000D6E  22DA               	addwfc	fsr2h,f,c
  6547  000D70  50DF               	movf	indf2,w,c
  6548  000D72  6E40               	movwf	??i2_recv_msg& (0+255),c
  6549  000D74  5040               	movf	??i2_recv_msg,w,c
  6550  000D76  6E43               	movwf	i2recv_msg@tlength,c
  6551  000D78  6A44               	clrf	i2recv_msg@tlength+1,c
  6552                           
  6553                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6554  000D7A  C03F  F030         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  6555  000D7E  C03E  F02F         	movff	i2recv_msg@data,i2memcpy@d1
  6556  000D82  0E03               	movlw	3
  6557  000D84  2445               	addwf	i2recv_msg@qmsg,w,c
  6558  000D86  6E40               	movwf	??i2_recv_msg& (0+255),c
  6559  000D88  0E00               	movlw	0
  6560  000D8A  2046               	addwfc	i2recv_msg@qmsg+1,w,c
  6561  000D8C  6E41               	movwf	(??i2_recv_msg+1)& (0+255),c
  6562  000D8E  C040  F031         	movff	??i2_recv_msg,i2memcpy@s1
  6563  000D92  C041  F032         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  6564  000D96  C043  F033         	movff	i2recv_msg@tlength,i2memcpy@n
  6565  000D9A  C044  F034         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  6566  000D9E  EC34  F00C         	call	i2_memcpy	;wreg free
  6567                           
  6568                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6569  000DA2  EE20 F035          	lfsr	2,53
  6570  000DA6  5039               	movf	i2recv_msg@qptr,w,c
  6571  000DA8  26D9               	addwf	fsr2l,f,c
  6572  000DAA  503A               	movf	i2recv_msg@qptr+1,w,c
  6573  000DAC  22DA               	addwfc	fsr2h,f,c
  6574  000DAE  EE10 F035          	lfsr	1,53
  6575  000DB2  5039               	movf	i2recv_msg@qptr,w,c
  6576  000DB4  26E1               	addwf	fsr1l,f,c
  6577  000DB6  503A               	movf	i2recv_msg@qptr+1,w,c
  6578  000DB8  22E2               	addwfc	fsr1h,f,c
  6579  000DBA  50E7               	movf	indf1,w,c
  6580  000DBC  6E40               	movwf	??i2_recv_msg& (0+255),c
  6581  000DBE  2840               	incf	??i2_recv_msg,w,c
  6582  000DC0  0B03               	andlw	3
  6583  000DC2  6EDF               	movwf	indf2,c
  6584                           
  6585                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6586  000DC4  EE20 F002          	lfsr	2,2
  6587  000DC8  5045               	movf	i2recv_msg@qmsg,w,c
  6588  000DCA  26D9               	addwf	fsr2l,f,c
  6589  000DCC  5046               	movf	i2recv_msg@qmsg+1,w,c
  6590  000DCE  22DA               	addwfc	fsr2h,f,c
  6591  000DD0  C03C  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  6592  000DD4  C03D  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  6593  000DD8  CFDF FFE7          	movff	indf2,indf1
  6594                           
  6595                           ;messages.c: 91: qmsg->full = 0;
  6596  000DDC  C045  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6597  000DE0  C046  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6598  000DE4  0E00               	movlw	0
  6599  000DE6  6EDF               	movwf	indf2,c
  6600                           
  6601                           ;messages.c: 92: return (tlength);
  6602  000DE8  5043               	movf	i2recv_msg@tlength,w,c
  6603  000DEA  0012               	return	
  6604  000DEC                     i2l3338:
  6605                           
  6606                           ;messages.c: 94: return (-4);
  6607  000DEC  0EFC               	movlw	252
  6608  000DEE  0012               	return	
  6609  000DF0                     __end_ofi2_recv_msg:
  6610                           	opt stack 0
  6611                           pclatu	equ	0xFFB
  6612                           pclath	equ	0xFFA
  6613                           tblptru	equ	0xFF8
  6614                           tblptrh	equ	0xFF7
  6615                           tblptrl	equ	0xFF6
  6616                           tablat	equ	0xFF5
  6617                           prodh	equ	0xFF4
  6618                           prodl	equ	0xFF3
  6619                           intcon	equ	0xFF2
  6620                           postinc0	equ	0xFEE
  6621                           fsr0h	equ	0xFEA
  6622                           fsr0l	equ	0xFE9
  6623                           wreg	equ	0xFE8
  6624                           indf1	equ	0xFE7
  6625                           fsr1h	equ	0xFE2
  6626                           fsr1l	equ	0xFE1
  6627                           bsr	equ	0xFE0
  6628                           indf2	equ	0xFDF
  6629                           postinc2	equ	0xFDE
  6630                           postdec2	equ	0xFDD
  6631                           fsr2h	equ	0xFDA
  6632                           fsr2l	equ	0xFD9
  6633                           status	equ	0xFD8
  6634                           
  6635 ;; *************** function _i2c_int_handler *****************
  6636 ;; Defined at:
  6637 ;;		line 100 in file "../src/my_i2c.c"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;		None
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;  msgbuffer      11    0[BANK0 ] unsigned char [11]
  6642 ;;  length          2   11[BANK0 ] int 
  6643 ;;  error_buf       3   13[BANK0 ] unsigned char [3]
  6644 ;;  data_read       1   21[BANK0 ] unsigned char 
  6645 ;;  msg_ready       1   20[BANK0 ] unsigned char 
  6646 ;;  msg_to_send     1   19[BANK0 ] unsigned char 
  6647 ;;  i2c_data        1   18[BANK0 ] unsigned char 
  6648 ;;  overrun_erro    1   17[BANK0 ] unsigned char 
  6649 ;;  data_written    1   16[BANK0 ] unsigned char 
  6650 ;; Return value:  Size  Location     Type
  6651 ;;		None               void
  6652 ;; Registers used:
  6653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6654 ;; Tracked objects:
  6655 ;;		On entry : 0/0
  6656 ;;		On exit  : 0/0
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6659 ;;      Params:         0       0       0       0       0
  6660 ;;      Locals:         0      22       0       0       0
  6661 ;;      Temps:          2       0       0       0       0
  6662 ;;      Totals:         2      22       0       0       0
  6663 ;;Total ram usage:       24 bytes
  6664 ;; Hardware stack levels used:    1
  6665 ;; Hardware stack levels required when called:    3
  6666 ;; This function calls:
  6667 ;;		_ToMainHigh_sendmsg
  6668 ;;		_handle_start
  6669 ;; This function is called by:
  6670 ;;		_InterruptHandlerHigh
  6671 ;; This function uses a non-reentrant model
  6672 ;;
  6673                           
  6674                           	psect	text46
  6675  0000BE                     __ptext46:
  6676                           	opt stack 0
  6677  0000BE                     _i2c_int_handler:
  6678                           	opt stack 17
  6679                           
  6680                           ;my_i2c.c: 101: unsigned char i2c_data;
  6681                           ;my_i2c.c: 102: unsigned char data_read = 0;
  6682                           
  6683                           ;incstack = 0
  6684  0000BE  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6685  0000C0  0E00               	movlw	0
  6686  0000C2  0100               	movlb	0	; () banked
  6687  0000C4  0100               	movlb	0	; () banked
  6688  0000C6  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  6689  0000C8  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6690                           
  6691                           ;my_i2c.c: 103: unsigned char data_written = 0;
  6692  0000CA  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6693  0000CC  0E00               	movlw	0
  6694  0000CE  0100               	movlb	0	; () banked
  6695  0000D0  0100               	movlb	0	; () banked
  6696  0000D2  6F90               	movwf	i2c_int_handler@data_written& (0+255),b
  6697  0000D4  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6698                           
  6699                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  6700  0000D6  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6701  0000D8  0E00               	movlw	0
  6702  0000DA  0100               	movlb	0	; () banked
  6703  0000DC  0100               	movlb	0	; () banked
  6704  0000DE  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6705  0000E0  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6706                           
  6707                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  6708  0000E2  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6709  0000E4  0E00               	movlw	0
  6710  0000E6  0100               	movlb	0	; () banked
  6711  0000E8  0100               	movlb	0	; () banked
  6712  0000EA  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6713  0000EC  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6714                           
  6715                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  6716  0000EE  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6717  0000F0  0E00               	movlw	0
  6718  0000F2  0100               	movlb	0	; () banked
  6719  0000F4  0100               	movlb	0	; () banked
  6720  0000F6  6F91               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6721  0000F8  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6722                           
  6723                           ; BSR set to: 0
  6724                           ;my_i2c.c: 107: unsigned char error_buf[3];
  6725                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  6726  0000FA  ACC6               	btfss	4038,6,c	;volatile
  6727  0000FC  D027               	goto	i2l3090
  6728                           
  6729                           ; BSR set to: 0
  6730                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  6731  0000FE  9CC6               	bcf	4038,6,c	;volatile
  6732                           
  6733                           ; BSR set to: 0
  6734                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  6735  000100  0100               	movlb	0	; () banked
  6736  000102  EE20 F00C          	lfsr	2,12
  6737  000106  0100               	movlb	0	; () banked
  6738  000108  51CD               	movf	_ic_ptr& (0+255),w,b
  6739  00010A  26D9               	addwf	fsr2l,f,c
  6740  00010C  0100               	movlb	0	; () banked
  6741  00010E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6742  000110  22DA               	addwfc	fsr2h,f,c
  6743  000112  0E05               	movlw	5
  6744  000114  6EDF               	movwf	indf2,c
  6745                           
  6746                           ; BSR set to: 0
  6747                           ;my_i2c.c: 116: overrun_error = 1;
  6748  000116  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6749  000118  0E01               	movlw	1
  6750  00011A  0100               	movlb	0	; () banked
  6751  00011C  0100               	movlb	0	; () banked
  6752  00011E  6F91               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6753  000120  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6754                           
  6755                           ; BSR set to: 0
  6756                           ;my_i2c.c: 117: ic_ptr->error_count++;
  6757  000122  0100               	movlb	0	; () banked
  6758  000124  EE20 F00E          	lfsr	2,14
  6759  000128  0100               	movlb	0	; () banked
  6760  00012A  51CD               	movf	_ic_ptr& (0+255),w,b
  6761  00012C  26D9               	addwf	fsr2l,f,c
  6762  00012E  0100               	movlb	0	; () banked
  6763  000130  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6764  000132  22DA               	addwfc	fsr2h,f,c
  6765  000134  2ADF               	incf	indf2,f,c
  6766                           
  6767                           ; BSR set to: 0
  6768                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  6769  000136  0100               	movlb	0	; () banked
  6770  000138  EE20 F00D          	lfsr	2,13
  6771  00013C  0100               	movlb	0	; () banked
  6772  00013E  51CD               	movf	_ic_ptr& (0+255),w,b
  6773  000140  26D9               	addwf	fsr2l,f,c
  6774  000142  0100               	movlb	0	; () banked
  6775  000144  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6776  000146  22DA               	addwfc	fsr2h,f,c
  6777  000148  0E04               	movlw	4
  6778  00014A  6EDF               	movwf	indf2,c
  6779  00014C                     i2l3090:
  6780                           
  6781                           ; BSR set to: 0
  6782                           ;my_i2c.c: 119: }
  6783                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  6784  00014C  A0C7               	btfss	4039,0,c	;volatile
  6785  00014E  D008               	goto	i2l3096
  6786                           
  6787                           ; BSR set to: 0
  6788                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  6789  000150  CFC9 F092          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6790                           
  6791                           ; BSR set to: 0
  6792                           ;my_i2c.c: 123: data_read = 1;
  6793  000154  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6794  000156  0E01               	movlw	1
  6795  000158  0100               	movlb	0	; () banked
  6796  00015A  0100               	movlb	0	; () banked
  6797  00015C  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  6798  00015E  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6799  000160                     i2l3096:
  6800                           
  6801                           ; BSR set to: 0
  6802                           ;my_i2c.c: 124: }
  6803                           ;my_i2c.c: 129: if (!overrun_error) {
  6804  000160  0100               	movlb	0	; () banked
  6805  000162  0100               	movlb	0	; () banked
  6806  000164  6791               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6807  000166  D1B8               	goto	i2l112
  6808  000168  D1A1               	goto	i2l3184
  6809  00016A                     i2l114:
  6810                           
  6811                           ; BSR set to: 0
  6812                           ;my_i2c.c: 132: {
  6813                           ;my_i2c.c: 134: if (SSPSTATbits.S == 1) {
  6814  00016A  A6C7               	btfss	4039,3,c	;volatile
  6815  00016C  D1B5               	goto	i2l112
  6816                           
  6817                           ; BSR set to: 0
  6818                           ;my_i2c.c: 135: handle_start(data_read);
  6819  00016E  0100               	movlb	0	; () banked
  6820  000170  0100               	movlb	0	; () banked
  6821  000172  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6822  000174  ECF8  F006         	call	_handle_start
  6823                           
  6824                           ;my_i2c.c: 137: if (ic_ptr->status == 0x8) {
  6825  000178  0100               	movlb	0	; () banked
  6826  00017A  EE20 F00C          	lfsr	2,12
  6827  00017E  0100               	movlb	0	; () banked
  6828  000180  51CD               	movf	_ic_ptr& (0+255),w,b
  6829  000182  26D9               	addwf	fsr2l,f,c
  6830  000184  0100               	movlb	0	; () banked
  6831  000186  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6832  000188  22DA               	addwfc	fsr2h,f,c
  6833  00018A  0E08               	movlw	8
  6834  00018C  62DF               	cpfseq	indf2,c
  6835  00018E  D1A4               	goto	i2l112
  6836                           
  6837                           ; BSR set to: 0
  6838                           ;my_i2c.c: 138: data_read = 0;
  6839  000190  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6840  000192  0E00               	movlw	0
  6841  000194  0100               	movlb	0	; () banked
  6842  000196  0100               	movlb	0	; () banked
  6843  000198  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  6844  00019A  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6845                           
  6846                           ;my_i2c.c: 139: msg_to_send = 1;
  6847  00019C  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6848  00019E  0E01               	movlw	1
  6849  0001A0  0100               	movlb	0	; () banked
  6850  0001A2  0100               	movlb	0	; () banked
  6851  0001A4  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6852  0001A6  D175               	goto	L7
  6853  0001A8                     i2l118:
  6854                           
  6855                           ; BSR set to: 0
  6856                           ;my_i2c.c: 145: {
  6857                           ;my_i2c.c: 147: if (SSPSTATbits.P == 1) {
  6858  0001A8  A8C7               	btfss	4039,4,c	;volatile
  6859  0001AA  D02E               	goto	i2l3116
  6860                           
  6861                           ; BSR set to: 0
  6862                           ;my_i2c.c: 150: ic_ptr->event_count++;
  6863  0001AC  0100               	movlb	0	; () banked
  6864  0001AE  EE20 F00B          	lfsr	2,11
  6865  0001B2  0100               	movlb	0	; () banked
  6866  0001B4  51CD               	movf	_ic_ptr& (0+255),w,b
  6867  0001B6  26D9               	addwf	fsr2l,f,c
  6868  0001B8  0100               	movlb	0	; () banked
  6869  0001BA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6870  0001BC  22DA               	addwfc	fsr2h,f,c
  6871  0001BE  2ADF               	incf	indf2,f,c
  6872                           
  6873                           ; BSR set to: 0
  6874                           ;my_i2c.c: 151: if (data_read) {
  6875  0001C0  0100               	movlb	0	; () banked
  6876  0001C2  0100               	movlb	0	; () banked
  6877  0001C4  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6878  0001C6  B4D8               	btfsc	status,2,c
  6879  0001C8  D166               	goto	L11
  6880                           
  6881                           ; BSR set to: 0
  6882                           ;my_i2c.c: 152: if (SSPSTATbits.D_A == 0) {
  6883  0001CA  BAC7               	btfsc	4039,5,c	;volatile
  6884  0001CC  D007               	goto	i2l3114
  6885                           
  6886                           ; BSR set to: 0
  6887                           ;my_i2c.c: 153: msg_ready = 1;
  6888  0001CE  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6889  0001D0  0E01               	movlw	1
  6890  0001D2  0100               	movlb	0	; () banked
  6891  0001D4  0100               	movlb	0	; () banked
  6892  0001D6  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6893  0001D8  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6894                           
  6895                           ;my_i2c.c: 154: } else {
  6896  0001DA  D15D               	goto	L11
  6897  0001DC                     i2l3114:
  6898                           
  6899                           ; BSR set to: 0
  6900                           ;my_i2c.c: 155: ic_ptr->error_count++;
  6901  0001DC  0100               	movlb	0	; () banked
  6902  0001DE  EE20 F00E          	lfsr	2,14
  6903  0001E2  0100               	movlb	0	; () banked
  6904  0001E4  51CD               	movf	_ic_ptr& (0+255),w,b
  6905  0001E6  26D9               	addwf	fsr2l,f,c
  6906  0001E8  0100               	movlb	0	; () banked
  6907  0001EA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6908  0001EC  22DA               	addwfc	fsr2h,f,c
  6909  0001EE  2ADF               	incf	indf2,f,c
  6910                           
  6911                           ;my_i2c.c: 156: ic_ptr->error_code = 0x6;
  6912  0001F0  0100               	movlb	0	; () banked
  6913  0001F2  EE20 F00D          	lfsr	2,13
  6914  0001F6  0100               	movlb	0	; () banked
  6915  0001F8  51CD               	movf	_ic_ptr& (0+255),w,b
  6916  0001FA  26D9               	addwf	fsr2l,f,c
  6917  0001FC  0100               	movlb	0	; () banked
  6918  0001FE  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6919  000200  22DA               	addwfc	fsr2h,f,c
  6920  000202  0E06               	movlw	6
  6921  000204  6EDF               	movwf	indf2,c
  6922                           
  6923                           ; BSR set to: 0
  6924  000206  D147               	goto	L11
  6925  000208                     i2l3116:
  6926                           
  6927                           ; BSR set to: 0
  6928  000208  0100               	movlb	0	; () banked
  6929  00020A  0100               	movlb	0	; () banked
  6930  00020C  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6931  00020E  B4D8               	btfsc	status,2,c
  6932  000210  D163               	goto	i2l112
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;my_i2c.c: 161: ic_ptr->event_count++;
  6936  000212  0100               	movlb	0	; () banked
  6937  000214  EE20 F00B          	lfsr	2,11
  6938  000218  0100               	movlb	0	; () banked
  6939  00021A  51CD               	movf	_ic_ptr& (0+255),w,b
  6940  00021C  26D9               	addwf	fsr2l,f,c
  6941  00021E  0100               	movlb	0	; () banked
  6942  000220  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6943  000222  22DA               	addwfc	fsr2h,f,c
  6944  000224  2ADF               	incf	indf2,f,c
  6945                           
  6946                           ; BSR set to: 0
  6947                           ;my_i2c.c: 162: if (SSPSTATbits.D_A == 0) {
  6948  000226  BAC7               	btfsc	4039,5,c	;volatile
  6949  000228  D019               	goto	i2l3132
  6950                           
  6951                           ; BSR set to: 0
  6952                           ;my_i2c.c: 163: if (SSPSTATbits.R_W == 0) {
  6953  00022A  B4C7               	btfsc	4039,2,c	;volatile
  6954  00022C  D00B               	goto	i2l3126
  6955                           
  6956                           ; BSR set to: 0
  6957                           ;my_i2c.c: 164: ic_ptr->status = 0x7;
  6958  00022E  0100               	movlb	0	; () banked
  6959  000230  EE20 F00C          	lfsr	2,12
  6960  000234  0100               	movlb	0	; () banked
  6961  000236  51CD               	movf	_ic_ptr& (0+255),w,b
  6962  000238  26D9               	addwf	fsr2l,f,c
  6963  00023A  0100               	movlb	0	; () banked
  6964  00023C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6965  00023E  22DA               	addwfc	fsr2h,f,c
  6966  000240  0E07               	movlw	7
  6967  000242  D071               	goto	L6
  6968  000244                     i2l3126:
  6969                           
  6970                           ; BSR set to: 0
  6971                           ;my_i2c.c: 166: ic_ptr->status = 0x8;
  6972  000244  0100               	movlb	0	; () banked
  6973  000246  EE20 F00C          	lfsr	2,12
  6974  00024A  0100               	movlb	0	; () banked
  6975  00024C  51CD               	movf	_ic_ptr& (0+255),w,b
  6976  00024E  26D9               	addwf	fsr2l,f,c
  6977  000250  0100               	movlb	0	; () banked
  6978  000252  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6979  000254  22DA               	addwfc	fsr2h,f,c
  6980  000256  0E08               	movlw	8
  6981  000258  6EDF               	movwf	indf2,c
  6982  00025A  D110               	goto	L12
  6983  00025C                     i2l3132:
  6984                           
  6985                           ; BSR set to: 0
  6986                           ;my_i2c.c: 172: ic_ptr->error_count++;
  6987  00025C  0100               	movlb	0	; () banked
  6988  00025E  EE20 F00E          	lfsr	2,14
  6989  000262  0100               	movlb	0	; () banked
  6990  000264  51CD               	movf	_ic_ptr& (0+255),w,b
  6991  000266  26D9               	addwf	fsr2l,f,c
  6992  000268  0100               	movlb	0	; () banked
  6993  00026A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6994  00026C  22DA               	addwfc	fsr2h,f,c
  6995  00026E  2ADF               	incf	indf2,f,c
  6996                           
  6997                           ;my_i2c.c: 173: ic_ptr->status = 0x5;
  6998  000270  0100               	movlb	0	; () banked
  6999  000272  EE20 F00C          	lfsr	2,12
  7000  000276  0100               	movlb	0	; () banked
  7001  000278  51CD               	movf	_ic_ptr& (0+255),w,b
  7002  00027A  26D9               	addwf	fsr2l,f,c
  7003  00027C  0100               	movlb	0	; () banked
  7004  00027E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7005  000280  22DA               	addwfc	fsr2h,f,c
  7006  000282  0E05               	movlw	5
  7007  000284  6EDF               	movwf	indf2,c
  7008                           
  7009                           ;my_i2c.c: 174: ic_ptr->error_code = 0x6;
  7010  000286  0100               	movlb	0	; () banked
  7011  000288  EE20 F00D          	lfsr	2,13
  7012  00028C  0100               	movlb	0	; () banked
  7013  00028E  51CD               	movf	_ic_ptr& (0+255),w,b
  7014  000290  26D9               	addwf	fsr2l,f,c
  7015  000292  0100               	movlb	0	; () banked
  7016  000294  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7017  000296  22DA               	addwfc	fsr2h,f,c
  7018  000298  0E06               	movlw	6
  7019  00029A  D045               	goto	L6
  7020  00029C                     i2l3134:
  7021                           
  7022                           ; BSR set to: 0
  7023                           ;my_i2c.c: 180: {
  7024                           ;my_i2c.c: 181: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7025  00029C  0100               	movlb	0	; () banked
  7026  00029E  EE20 F01A          	lfsr	2,26
  7027  0002A2  0100               	movlb	0	; () banked
  7028  0002A4  51CD               	movf	_ic_ptr& (0+255),w,b
  7029  0002A6  26D9               	addwf	fsr2l,f,c
  7030  0002A8  0100               	movlb	0	; () banked
  7031  0002AA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7032  0002AC  22DA               	addwfc	fsr2h,f,c
  7033  0002AE  50DF               	movf	indf2,w,c
  7034  0002B0  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7035  0002B2  0100               	movlb	0	; () banked
  7036  0002B4  EE20 F019          	lfsr	2,25
  7037  0002B8  0100               	movlb	0	; () banked
  7038  0002BA  51CD               	movf	_ic_ptr& (0+255),w,b
  7039  0002BC  26D9               	addwf	fsr2l,f,c
  7040  0002BE  0100               	movlb	0	; () banked
  7041  0002C0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7042  0002C2  22DA               	addwfc	fsr2h,f,c
  7043  0002C4  50DF               	movf	indf2,w,c
  7044  0002C6  5C49               	subwf	??_i2c_int_handler,w,c
  7045  0002C8  B0D8               	btfsc	status,0,c
  7046  0002CA  D0E5               	goto	L11
  7047                           
  7048                           ; BSR set to: 0
  7049                           ;my_i2c.c: 182: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7050  0002CC  0100               	movlb	0	; () banked
  7051  0002CE  EE20 F01A          	lfsr	2,26
  7052  0002D2  0100               	movlb	0	; () banked
  7053  0002D4  51CD               	movf	_ic_ptr& (0+255),w,b
  7054  0002D6  26D9               	addwf	fsr2l,f,c
  7055  0002D8  0100               	movlb	0	; () banked
  7056  0002DA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7057  0002DC  22DA               	addwfc	fsr2h,f,c
  7058  0002DE  50DF               	movf	indf2,w,c
  7059  0002E0  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7060  0002E2  5049               	movf	??_i2c_int_handler,w,c
  7061  0002E4  0D01               	mullw	1
  7062  0002E6  0E0F               	movlw	15
  7063  0002E8  26F3               	addwf	prodl,f,c
  7064  0002EA  0E00               	movlw	0
  7065  0002EC  22F4               	addwfc	prodh,f,c
  7066  0002EE  50F3               	movf	prodl,w,c
  7067  0002F0  0100               	movlb	0	; () banked
  7068  0002F2  0100               	movlb	0	; () banked
  7069  0002F4  25CD               	addwf	_ic_ptr& (0+255),w,b
  7070  0002F6  6ED9               	movwf	fsr2l,c
  7071  0002F8  50F4               	movf	prodh,w,c
  7072  0002FA  0100               	movlb	0	; () banked
  7073  0002FC  0100               	movlb	0	; () banked
  7074  0002FE  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7075  000300  6EDA               	movwf	fsr2h,c
  7076  000302  50DF               	movf	indf2,w,c
  7077  000304  6EC9               	movwf	4041,c	;volatile
  7078                           
  7079                           ; BSR set to: 0
  7080                           ;my_i2c.c: 183: ic_ptr->outbufind++;
  7081  000306  0100               	movlb	0	; () banked
  7082  000308  EE20 F01A          	lfsr	2,26
  7083  00030C  0100               	movlb	0	; () banked
  7084  00030E  51CD               	movf	_ic_ptr& (0+255),w,b
  7085  000310  26D9               	addwf	fsr2l,f,c
  7086  000312  0100               	movlb	0	; () banked
  7087  000314  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7088  000316  22DA               	addwfc	fsr2h,f,c
  7089  000318  2ADF               	incf	indf2,f,c
  7090                           
  7091                           ; BSR set to: 0
  7092                           ;my_i2c.c: 184: data_written = 1;
  7093  00031A  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7094  00031C  0E01               	movlw	1
  7095  00031E  0100               	movlb	0	; () banked
  7096  000320  0100               	movlb	0	; () banked
  7097  000322  6F90               	movwf	i2c_int_handler@data_written& (0+255),b
  7098  000324  D0B6               	goto	L7
  7099  000326                     L6:
  7100  000326  6EDF               	movwf	indf2,c
  7101  000328  D0D7               	goto	i2l112
  7102  00032A                     i2l132:
  7103                           
  7104                           ; BSR set to: 0
  7105                           ;my_i2c.c: 192: {
  7106                           ;my_i2c.c: 194: if (SSPSTATbits.P == 1) {
  7107  00032A  A8C7               	btfss	4039,4,c	;volatile
  7108  00032C  D05E               	goto	i2l3162
  7109                           
  7110                           ; BSR set to: 0
  7111                           ;my_i2c.c: 196: ic_ptr->event_count++;
  7112  00032E  0100               	movlb	0	; () banked
  7113  000330  EE20 F00B          	lfsr	2,11
  7114  000334  0100               	movlb	0	; () banked
  7115  000336  51CD               	movf	_ic_ptr& (0+255),w,b
  7116  000338  26D9               	addwf	fsr2l,f,c
  7117  00033A  0100               	movlb	0	; () banked
  7118  00033C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7119  00033E  22DA               	addwfc	fsr2h,f,c
  7120  000340  2ADF               	incf	indf2,f,c
  7121                           
  7122                           ; BSR set to: 0
  7123                           ;my_i2c.c: 197: if (data_read) {
  7124  000342  0100               	movlb	0	; () banked
  7125  000344  0100               	movlb	0	; () banked
  7126  000346  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  7127  000348  B4D8               	btfsc	status,2,c
  7128  00034A  D048               	goto	i2l3158
  7129                           
  7130                           ; BSR set to: 0
  7131                           ;my_i2c.c: 198: if (SSPSTATbits.D_A == 1) {
  7132  00034C  AAC7               	btfss	4039,5,c	;volatile
  7133  00034E  D025               	goto	i2l3156
  7134                           
  7135                           ; BSR set to: 0
  7136                           ;my_i2c.c: 199: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7137  000350  0100               	movlb	0	; () banked
  7138  000352  EE20 F00A          	lfsr	2,10
  7139  000356  0100               	movlb	0	; () banked
  7140  000358  51CD               	movf	_ic_ptr& (0+255),w,b
  7141  00035A  26D9               	addwf	fsr2l,f,c
  7142  00035C  0100               	movlb	0	; () banked
  7143  00035E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7144  000360  22DA               	addwfc	fsr2h,f,c
  7145  000362  50DF               	movf	indf2,w,c
  7146  000364  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7147  000366  5049               	movf	??_i2c_int_handler,w,c
  7148  000368  0D01               	mullw	1
  7149  00036A  50F3               	movf	prodl,w,c
  7150  00036C  0100               	movlb	0	; () banked
  7151  00036E  0100               	movlb	0	; () banked
  7152  000370  25CD               	addwf	_ic_ptr& (0+255),w,b
  7153  000372  6ED9               	movwf	fsr2l,c
  7154  000374  50F4               	movf	prodh,w,c
  7155  000376  0100               	movlb	0	; () banked
  7156  000378  0100               	movlb	0	; () banked
  7157  00037A  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7158  00037C  6EDA               	movwf	fsr2h,c
  7159  00037E  0100               	movlb	0	; () banked
  7160  000380  C092  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7161                           
  7162                           ; BSR set to: 0
  7163                           ;my_i2c.c: 200: ic_ptr->buflen++;
  7164  000384  0100               	movlb	0	; () banked
  7165  000386  EE20 F00A          	lfsr	2,10
  7166  00038A  0100               	movlb	0	; () banked
  7167  00038C  51CD               	movf	_ic_ptr& (0+255),w,b
  7168  00038E  26D9               	addwf	fsr2l,f,c
  7169  000390  0100               	movlb	0	; () banked
  7170  000392  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7171  000394  22DA               	addwfc	fsr2h,f,c
  7172  000396  2ADF               	incf	indf2,f,c
  7173  000398  D021               	goto	i2l3158
  7174  00039A                     i2l3156:
  7175                           
  7176                           ; BSR set to: 0
  7177                           ;my_i2c.c: 203: ic_ptr->error_count++;
  7178  00039A  0100               	movlb	0	; () banked
  7179  00039C  EE20 F00E          	lfsr	2,14
  7180  0003A0  0100               	movlb	0	; () banked
  7181  0003A2  51CD               	movf	_ic_ptr& (0+255),w,b
  7182  0003A4  26D9               	addwf	fsr2l,f,c
  7183  0003A6  0100               	movlb	0	; () banked
  7184  0003A8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7185  0003AA  22DA               	addwfc	fsr2h,f,c
  7186  0003AC  2ADF               	incf	indf2,f,c
  7187                           
  7188                           ;my_i2c.c: 204: ic_ptr->error_code = 0x6;
  7189  0003AE  0100               	movlb	0	; () banked
  7190  0003B0  EE20 F00D          	lfsr	2,13
  7191  0003B4  0100               	movlb	0	; () banked
  7192  0003B6  51CD               	movf	_ic_ptr& (0+255),w,b
  7193  0003B8  26D9               	addwf	fsr2l,f,c
  7194  0003BA  0100               	movlb	0	; () banked
  7195  0003BC  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7196  0003BE  22DA               	addwfc	fsr2h,f,c
  7197  0003C0  0E06               	movlw	6
  7198  0003C2  6EDF               	movwf	indf2,c
  7199                           
  7200                           ;my_i2c.c: 205: ic_ptr->status = 0x5;
  7201  0003C4  0100               	movlb	0	; () banked
  7202  0003C6  EE20 F00C          	lfsr	2,12
  7203  0003CA  0100               	movlb	0	; () banked
  7204  0003CC  51CD               	movf	_ic_ptr& (0+255),w,b
  7205  0003CE  26D9               	addwf	fsr2l,f,c
  7206  0003D0  0100               	movlb	0	; () banked
  7207  0003D2  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7208  0003D4  22DA               	addwfc	fsr2h,f,c
  7209  0003D6  0E05               	movlw	5
  7210  0003D8  6EDF               	movwf	indf2,c
  7211  0003DA  D05D               	goto	L11
  7212  0003DC                     i2l3158:
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;my_i2c.c: 208: msg_ready = 1;
  7216  0003DC  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7217  0003DE  0E01               	movlw	1
  7218  0003E0  0100               	movlb	0	; () banked
  7219  0003E2  0100               	movlb	0	; () banked
  7220  0003E4  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7221  0003E6  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7222                           
  7223                           ; BSR set to: 0
  7224  0003E8  D056               	goto	L11
  7225  0003EA                     i2l3162:
  7226                           
  7227                           ; BSR set to: 0
  7228  0003EA  0100               	movlb	0	; () banked
  7229  0003EC  0100               	movlb	0	; () banked
  7230  0003EE  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  7231  0003F0  B4D8               	btfsc	status,2,c
  7232  0003F2  D072               	goto	i2l112
  7233                           
  7234                           ; BSR set to: 0
  7235                           ;my_i2c.c: 212: ic_ptr->event_count++;
  7236  0003F4  0100               	movlb	0	; () banked
  7237  0003F6  EE20 F00B          	lfsr	2,11
  7238  0003FA  0100               	movlb	0	; () banked
  7239  0003FC  51CD               	movf	_ic_ptr& (0+255),w,b
  7240  0003FE  26D9               	addwf	fsr2l,f,c
  7241  000400  0100               	movlb	0	; () banked
  7242  000402  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7243  000404  22DA               	addwfc	fsr2h,f,c
  7244  000406  2ADF               	incf	indf2,f,c
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;my_i2c.c: 213: if (SSPSTATbits.D_A == 1) {
  7248  000408  AAC7               	btfss	4039,5,c	;volatile
  7249  00040A  D025               	goto	i2l140
  7250                           
  7251                           ; BSR set to: 0
  7252                           ;my_i2c.c: 214: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7253  00040C  0100               	movlb	0	; () banked
  7254  00040E  EE20 F00A          	lfsr	2,10
  7255  000412  0100               	movlb	0	; () banked
  7256  000414  51CD               	movf	_ic_ptr& (0+255),w,b
  7257  000416  26D9               	addwf	fsr2l,f,c
  7258  000418  0100               	movlb	0	; () banked
  7259  00041A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7260  00041C  22DA               	addwfc	fsr2h,f,c
  7261  00041E  50DF               	movf	indf2,w,c
  7262  000420  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7263  000422  5049               	movf	??_i2c_int_handler,w,c
  7264  000424  0D01               	mullw	1
  7265  000426  50F3               	movf	prodl,w,c
  7266  000428  0100               	movlb	0	; () banked
  7267  00042A  0100               	movlb	0	; () banked
  7268  00042C  25CD               	addwf	_ic_ptr& (0+255),w,b
  7269  00042E  6ED9               	movwf	fsr2l,c
  7270  000430  50F4               	movf	prodh,w,c
  7271  000432  0100               	movlb	0	; () banked
  7272  000434  0100               	movlb	0	; () banked
  7273  000436  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7274  000438  6EDA               	movwf	fsr2h,c
  7275  00043A  0100               	movlb	0	; () banked
  7276  00043C  C092  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7277                           
  7278                           ; BSR set to: 0
  7279                           ;my_i2c.c: 215: ic_ptr->buflen++;
  7280  000440  0100               	movlb	0	; () banked
  7281  000442  EE20 F00A          	lfsr	2,10
  7282  000446  0100               	movlb	0	; () banked
  7283  000448  51CD               	movf	_ic_ptr& (0+255),w,b
  7284  00044A  26D9               	addwf	fsr2l,f,c
  7285  00044C  0100               	movlb	0	; () banked
  7286  00044E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7287  000450  22DA               	addwfc	fsr2h,f,c
  7288  000452  2ADF               	incf	indf2,f,c
  7289                           
  7290                           ;my_i2c.c: 216: } else {
  7291  000454  D041               	goto	i2l112
  7292  000456                     i2l140:
  7293                           
  7294                           ; BSR set to: 0
  7295                           ;my_i2c.c: 217: if (SSPSTATbits.R_W == 1) {
  7296  000456  A4C7               	btfss	4039,2,c	;volatile
  7297  000458  D6C1               	goto	i2l3114
  7298                           
  7299                           ; BSR set to: 0
  7300                           ;my_i2c.c: 218: ic_ptr->status = 0x8;
  7301  00045A  0100               	movlb	0	; () banked
  7302  00045C  EE20 F00C          	lfsr	2,12
  7303  000460  0100               	movlb	0	; () banked
  7304  000462  51CD               	movf	_ic_ptr& (0+255),w,b
  7305  000464  26D9               	addwf	fsr2l,f,c
  7306  000466  0100               	movlb	0	; () banked
  7307  000468  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7308  00046A  22DA               	addwfc	fsr2h,f,c
  7309  00046C  0E08               	movlw	8
  7310  00046E  6EDF               	movwf	indf2,c
  7311                           
  7312                           ; BSR set to: 0
  7313                           ;my_i2c.c: 219: msg_ready = 1;
  7314  000470  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7315  000472  0E01               	movlw	1
  7316  000474  0100               	movlb	0	; () banked
  7317  000476  0100               	movlb	0	; () banked
  7318  000478  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7319  00047A  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7320  00047C                     L12:
  7321                           
  7322                           ; BSR set to: 0
  7323                           ;my_i2c.c: 220: msg_to_send = 1;
  7324  00047C  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7325  00047E  0E01               	movlw	1
  7326  000480  0100               	movlb	0	; () banked
  7327  000482  0100               	movlb	0	; () banked
  7328  000484  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7329  000486  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7330                           
  7331                           ; BSR set to: 0
  7332                           ;my_i2c.c: 222: data_read = 0;
  7333  000488  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7334  00048A  0E00               	movlw	0
  7335  00048C  0100               	movlb	0	; () banked
  7336  00048E  0100               	movlb	0	; () banked
  7337  000490  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  7338  000492                     L7:
  7339  000492  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7340                           
  7341                           ;my_i2c.c: 223: } else {
  7342  000494  D021               	goto	i2l112
  7343  000496                     L11:
  7344                           
  7345                           ;my_i2c.c: 226: ic_ptr->status = 0x5;
  7346  000496  0100               	movlb	0	; () banked
  7347  000498  EE20 F00C          	lfsr	2,12
  7348  00049C  0100               	movlb	0	; () banked
  7349  00049E  51CD               	movf	_ic_ptr& (0+255),w,b
  7350  0004A0  26D9               	addwf	fsr2l,f,c
  7351  0004A2  0100               	movlb	0	; () banked
  7352  0004A4  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7353  0004A6  22DA               	addwfc	fsr2h,f,c
  7354  0004A8  0E05               	movlw	5
  7355  0004AA  D73D               	goto	L6
  7356  0004AC                     i2l3184:
  7357                           
  7358                           ; BSR set to: 0
  7359  0004AC  0100               	movlb	0	; () banked
  7360  0004AE  EE20 F00C          	lfsr	2,12
  7361  0004B2  0100               	movlb	0	; () banked
  7362  0004B4  51CD               	movf	_ic_ptr& (0+255),w,b
  7363  0004B6  26D9               	addwf	fsr2l,f,c
  7364  0004B8  0100               	movlb	0	; () banked
  7365  0004BA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7366  0004BC  22DA               	addwfc	fsr2h,f,c
  7367  0004BE  50DF               	movf	indf2,w,c
  7368                           
  7369                           ; Switch size 1, requested type "space"
  7370                           ; Number of cases is 4, Range of values is 5 to 8
  7371                           ; switch strategies available:
  7372                           ; Name         Instructions Cycles
  7373                           ; simple_byte           13     7 (average)
  7374                           ;	Chosen strategy is simple_byte
  7375  0004C0  0A05               	xorlw	5	; case 5
  7376  0004C2  B4D8               	btfsc	status,2,c
  7377  0004C4  D652               	goto	i2l114
  7378  0004C6  0A03               	xorlw	3	; case 6
  7379  0004C8  B4D8               	btfsc	status,2,c
  7380  0004CA  D66E               	goto	i2l118
  7381  0004CC  0A01               	xorlw	1	; case 7
  7382  0004CE  B4D8               	btfsc	status,2,c
  7383  0004D0  D72C               	goto	i2l132
  7384  0004D2  0A0F               	xorlw	15	; case 8
  7385  0004D4  B4D8               	btfsc	status,2,c
  7386  0004D6  D6E2               	goto	i2l3134
  7387  0004D8                     i2l112:
  7388                           
  7389                           ; BSR set to: 0
  7390                           ;my_i2c.c: 233: }
  7391                           ;my_i2c.c: 236: if (data_read || data_written) {
  7392  0004D8  0100               	movlb	0	; () banked
  7393  0004DA  0100               	movlb	0	; () banked
  7394  0004DC  6795               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7395  0004DE  D005               	goto	i2l146
  7396                           
  7397                           ; BSR set to: 0
  7398  0004E0  0100               	movlb	0	; () banked
  7399  0004E2  0100               	movlb	0	; () banked
  7400  0004E4  5190               	movf	i2c_int_handler@data_written& (0+255),w,b
  7401  0004E6  B4D8               	btfsc	status,2,c
  7402  0004E8  D002               	goto	i2l3190
  7403  0004EA                     i2l146:
  7404                           
  7405                           ; BSR set to: 0
  7406                           ;my_i2c.c: 238: if (SSPCON1bits.CKP == 0) {
  7407  0004EA  A8C6               	btfss	4038,4,c	;volatile
  7408                           
  7409                           ; BSR set to: 0
  7410                           ;my_i2c.c: 239: SSPCON1bits.CKP = 1;
  7411  0004EC  88C6               	bsf	4038,4,c	;volatile
  7412  0004EE                     i2l3190:
  7413                           
  7414                           ; BSR set to: 0
  7415                           ;my_i2c.c: 240: }
  7416                           ;my_i2c.c: 241: }
  7417                           ;my_i2c.c: 244: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7418  0004EE  0100               	movlb	0	; () banked
  7419  0004F0  EE20 F00A          	lfsr	2,10
  7420  0004F4  0100               	movlb	0	; () banked
  7421  0004F6  51CD               	movf	_ic_ptr& (0+255),w,b
  7422  0004F8  26D9               	addwf	fsr2l,f,c
  7423  0004FA  0100               	movlb	0	; () banked
  7424  0004FC  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7425  0004FE  22DA               	addwfc	fsr2h,f,c
  7426  000500  0E08               	movlw	8
  7427  000502  64DF               	cpfsgt	indf2,c
  7428  000504  D024               	goto	i2l3196
  7429                           
  7430                           ; BSR set to: 0
  7431  000506  0100               	movlb	0	; () banked
  7432  000508  0100               	movlb	0	; () banked
  7433  00050A  6794               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7434  00050C  D020               	goto	i2l3196
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;my_i2c.c: 245: ic_ptr->status = 0x5;
  7438  00050E  0100               	movlb	0	; () banked
  7439  000510  EE20 F00C          	lfsr	2,12
  7440  000514  0100               	movlb	0	; () banked
  7441  000516  51CD               	movf	_ic_ptr& (0+255),w,b
  7442  000518  26D9               	addwf	fsr2l,f,c
  7443  00051A  0100               	movlb	0	; () banked
  7444  00051C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7445  00051E  22DA               	addwfc	fsr2h,f,c
  7446  000520  0E05               	movlw	5
  7447  000522  6EDF               	movwf	indf2,c
  7448                           
  7449                           ;my_i2c.c: 246: ic_ptr->error_count++;
  7450  000524  0100               	movlb	0	; () banked
  7451  000526  EE20 F00E          	lfsr	2,14
  7452  00052A  0100               	movlb	0	; () banked
  7453  00052C  51CD               	movf	_ic_ptr& (0+255),w,b
  7454  00052E  26D9               	addwf	fsr2l,f,c
  7455  000530  0100               	movlb	0	; () banked
  7456  000532  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7457  000534  22DA               	addwfc	fsr2h,f,c
  7458  000536  2ADF               	incf	indf2,f,c
  7459                           
  7460                           ;my_i2c.c: 247: ic_ptr->error_code = 0x7;
  7461  000538  0100               	movlb	0	; () banked
  7462  00053A  EE20 F00D          	lfsr	2,13
  7463  00053E  0100               	movlb	0	; () banked
  7464  000540  51CD               	movf	_ic_ptr& (0+255),w,b
  7465  000542  26D9               	addwf	fsr2l,f,c
  7466  000544  0100               	movlb	0	; () banked
  7467  000546  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7468  000548  22DA               	addwfc	fsr2h,f,c
  7469  00054A  0E07               	movlw	7
  7470  00054C  6EDF               	movwf	indf2,c
  7471  00054E                     i2l3196:
  7472                           
  7473                           ; BSR set to: 0
  7474                           ;my_i2c.c: 248: }
  7475                           ;my_i2c.c: 250: if (msg_ready) {
  7476  00054E  0100               	movlb	0	; () banked
  7477  000550  0100               	movlb	0	; () banked
  7478  000552  5194               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7479  000554  B4D8               	btfsc	status,2,c
  7480  000556  D03E               	goto	i2l3204
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;my_i2c.c: 251: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7484  000558  0100               	movlb	0	; () banked
  7485  00055A  EE20 F00B          	lfsr	2,11
  7486  00055E  0100               	movlb	0	; () banked
  7487  000560  51CD               	movf	_ic_ptr& (0+255),w,b
  7488  000562  26D9               	addwf	fsr2l,f,c
  7489  000564  0100               	movlb	0	; () banked
  7490  000566  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7491  000568  22DA               	addwfc	fsr2h,f,c
  7492  00056A  0100               	movlb	0	; () banked
  7493  00056C  EE10 F00A          	lfsr	1,10
  7494  000570  0100               	movlb	0	; () banked
  7495  000572  51CD               	movf	_ic_ptr& (0+255),w,b
  7496  000574  26E1               	addwf	fsr1l,f,c
  7497  000576  0100               	movlb	0	; () banked
  7498  000578  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7499  00057A  22E2               	addwfc	fsr1h,f,c
  7500  00057C  50E7               	movf	indf1,w,c
  7501  00057E  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7502  000580  5049               	movf	??_i2c_int_handler,w,c
  7503  000582  0D01               	mullw	1
  7504  000584  50F3               	movf	prodl,w,c
  7505  000586  0100               	movlb	0	; () banked
  7506  000588  0100               	movlb	0	; () banked
  7507  00058A  25CD               	addwf	_ic_ptr& (0+255),w,b
  7508  00058C  6EE1               	movwf	fsr1l,c
  7509  00058E  50F4               	movf	prodh,w,c
  7510  000590  0100               	movlb	0	; () banked
  7511  000592  0100               	movlb	0	; () banked
  7512  000594  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7513  000596  6EE2               	movwf	fsr1h,c
  7514  000598  CFDF FFE7          	movff	indf2,indf1
  7515                           
  7516                           ; BSR set to: 0
  7517                           ;my_i2c.c: 252: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7518  00059C  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7519  00059E  0E28               	movlw	40
  7520  0005A0  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7521  0005A2  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7522  0005A4  0100               	movlb	0	; () banked
  7523  0005A6  C0CE  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7524  0005AA  0100               	movlb	0	; () banked
  7525  0005AC  C0CD  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7526  0005B0  0100               	movlb	0	; () banked
  7527  0005B2  EE20 F00A          	lfsr	2,10
  7528  0005B6  0100               	movlb	0	; () banked
  7529  0005B8  51CD               	movf	_ic_ptr& (0+255),w,b
  7530  0005BA  26D9               	addwf	fsr2l,f,c
  7531  0005BC  0100               	movlb	0	; () banked
  7532  0005BE  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7533  0005C0  22DA               	addwfc	fsr2h,f,c
  7534  0005C2  50DF               	movf	indf2,w,c
  7535  0005C4  6E4A               	movwf	(??_i2c_int_handler+1)& (0+255),c
  7536  0005C6  284A               	incf	??_i2c_int_handler+1,w,c
  7537  0005C8  EC50  F00D         	call	_ToMainHigh_sendmsg
  7538                           
  7539                           ;my_i2c.c: 253: ic_ptr->buflen = 0;
  7540  0005CC  0100               	movlb	0	; () banked
  7541  0005CE  EE20 F00A          	lfsr	2,10
  7542  0005D2  D043               	goto	L8
  7543  0005D4                     i2l3204:
  7544                           
  7545                           ; BSR set to: 0
  7546  0005D4  0100               	movlb	0	; () banked
  7547  0005D6  EE20 F00E          	lfsr	2,14
  7548  0005DA  0100               	movlb	0	; () banked
  7549  0005DC  51CD               	movf	_ic_ptr& (0+255),w,b
  7550  0005DE  26D9               	addwf	fsr2l,f,c
  7551  0005E0  0100               	movlb	0	; () banked
  7552  0005E2  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7553  0005E4  22DA               	addwfc	fsr2h,f,c
  7554  0005E6  50DF               	movf	indf2,w,c
  7555  0005E8  B4D8               	btfsc	status,2,c
  7556  0005EA  D03F               	goto	i2l3212
  7557                           
  7558                           ; BSR set to: 0
  7559                           ;my_i2c.c: 255: error_buf[0] = ic_ptr->error_count;
  7560  0005EC  0100               	movlb	0	; () banked
  7561  0005EE  EE20 F00E          	lfsr	2,14
  7562  0005F2  0100               	movlb	0	; () banked
  7563  0005F4  51CD               	movf	_ic_ptr& (0+255),w,b
  7564  0005F6  26D9               	addwf	fsr2l,f,c
  7565  0005F8  0100               	movlb	0	; () banked
  7566  0005FA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7567  0005FC  22DA               	addwfc	fsr2h,f,c
  7568  0005FE  50DF               	movf	indf2,w,c
  7569  000600  0100               	movlb	0	; () banked
  7570  000602  0100               	movlb	0	; () banked
  7571  000604  6F8D               	movwf	i2c_int_handler@error_buf& (0+255),b
  7572                           
  7573                           ;my_i2c.c: 256: error_buf[1] = ic_ptr->error_code;
  7574  000606  0100               	movlb	0	; () banked
  7575  000608  EE20 F00D          	lfsr	2,13
  7576  00060C  0100               	movlb	0	; () banked
  7577  00060E  51CD               	movf	_ic_ptr& (0+255),w,b
  7578  000610  26D9               	addwf	fsr2l,f,c
  7579  000612  0100               	movlb	0	; () banked
  7580  000614  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7581  000616  22DA               	addwfc	fsr2h,f,c
  7582  000618  50DF               	movf	indf2,w,c
  7583  00061A  0100               	movlb	0	; () banked
  7584  00061C  0100               	movlb	0	; () banked
  7585  00061E  6F8E               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7586                           
  7587                           ;my_i2c.c: 257: error_buf[2] = ic_ptr->event_count;
  7588  000620  0100               	movlb	0	; () banked
  7589  000622  EE20 F00B          	lfsr	2,11
  7590  000626  0100               	movlb	0	; () banked
  7591  000628  51CD               	movf	_ic_ptr& (0+255),w,b
  7592  00062A  26D9               	addwf	fsr2l,f,c
  7593  00062C  0100               	movlb	0	; () banked
  7594  00062E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7595  000630  22DA               	addwfc	fsr2h,f,c
  7596  000632  50DF               	movf	indf2,w,c
  7597  000634  0100               	movlb	0	; () banked
  7598  000636  0100               	movlb	0	; () banked
  7599  000638  6F8F               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7600                           
  7601                           ; BSR set to: 0
  7602                           ;my_i2c.c: 258: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7603  00063A  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7604  00063C  0E29               	movlw	41
  7605  00063E  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7606  000640  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7607  000642  0100               	movlb	0	; () banked
  7608  000644  0E00               	movlw	high i2c_int_handler@error_buf
  7609  000646  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  7610  000648  0100               	movlb	0	; () banked
  7611  00064A  0E8D               	movlw	low i2c_int_handler@error_buf
  7612  00064C  6E46               	movwf	ToMainHigh_sendmsg@data,c
  7613  00064E  0E03               	movlw	3
  7614  000650  EC50  F00D         	call	_ToMainHigh_sendmsg
  7615                           
  7616                           ;my_i2c.c: 259: ic_ptr->error_count = 0;
  7617  000654  0100               	movlb	0	; () banked
  7618  000656  EE20 F00E          	lfsr	2,14
  7619  00065A                     L8:
  7620  00065A  0100               	movlb	0	; () banked
  7621  00065C  51CD               	movf	_ic_ptr& (0+255),w,b
  7622  00065E  26D9               	addwf	fsr2l,f,c
  7623  000660  0100               	movlb	0	; () banked
  7624  000662  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7625  000664  22DA               	addwfc	fsr2h,f,c
  7626  000666  0E00               	movlw	0
  7627  000668  6EDF               	movwf	indf2,c
  7628  00066A                     i2l3212:
  7629                           
  7630                           ; BSR set to: 0
  7631                           ;my_i2c.c: 260: }
  7632                           ;my_i2c.c: 261: if (msg_to_send) {
  7633  00066A  0100               	movlb	0	; () banked
  7634  00066C  0100               	movlb	0	; () banked
  7635  00066E  5193               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7636  000670  B4D8               	btfsc	status,2,c
  7637  000672  0012               	return	
  7638  000674  D02C               	goto	i2l3232
  7639  000676                     i2l3216:
  7640                           
  7641                           ; BSR set to: 0
  7642                           ;my_i2c.c: 267: {
  7643                           ;my_i2c.c: 268: length = 2;
  7644  000676  0E00               	movlw	0
  7645  000678  0100               	movlb	0	; () banked
  7646  00067A  0100               	movlb	0	; () banked
  7647  00067C  6F8C               	movwf	(i2c_int_handler@length+1)& (0+255),b
  7648  00067E  0E02               	movlw	2
  7649  000680  0100               	movlb	0	; () banked
  7650  000682  6F8B               	movwf	i2c_int_handler@length& (0+255),b
  7651                           
  7652                           ; BSR set to: 0
  7653                           ;my_i2c.c: 269: msgbuffer[0] = 0x55;
  7654  000684  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7655  000686  0E55               	movlw	85
  7656  000688  0100               	movlb	0	; () banked
  7657  00068A  0100               	movlb	0	; () banked
  7658  00068C  6F80               	movwf	i2c_int_handler@msgbuffer& (0+255),b
  7659  00068E  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7660                           
  7661                           ; BSR set to: 0
  7662                           ;my_i2c.c: 271: msgbuffer[1] = 0xAA;
  7663  000690  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7664  000692  0EAA               	movlw	170
  7665  000694  0100               	movlb	0	; () banked
  7666  000696  0100               	movlb	0	; () banked
  7667  000698  6F81               	movwf	(i2c_int_handler@msgbuffer+1)& (0+255),b
  7668  00069A  D00A               	goto	L9
  7669  00069C                     i2l3222:
  7670                           
  7671                           ; BSR set to: 0
  7672                           ;my_i2c.c: 275: {
  7673                           ;my_i2c.c: 276: length = 1;
  7674  00069C  0E00               	movlw	0
  7675  00069E  0100               	movlb	0	; () banked
  7676  0006A0  0100               	movlb	0	; () banked
  7677  0006A2  6F8C               	movwf	(i2c_int_handler@length+1)& (0+255),b
  7678  0006A4  0E01               	movlw	1
  7679  0006A6  0100               	movlb	0	; () banked
  7680  0006A8  6F8B               	movwf	i2c_int_handler@length& (0+255),b
  7681                           
  7682                           ; BSR set to: 0
  7683                           ;my_i2c.c: 277: msgbuffer[0] = 0x3A;
  7684  0006AA  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7685  0006AC  0E3A               	movlw	58
  7686  0006AE  D00B               	goto	L10
  7687  0006B0                     L9:
  7688  0006B0  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7689                           
  7690                           ;my_i2c.c: 279: break;
  7691  0006B2  D019               	goto	i2l3234
  7692  0006B4                     i2l3226:
  7693                           
  7694                           ; BSR set to: 0
  7695                           ;my_i2c.c: 282: {
  7696                           ;my_i2c.c: 283: length = 1;
  7697  0006B4  0E00               	movlw	0
  7698  0006B6  0100               	movlb	0	; () banked
  7699  0006B8  0100               	movlb	0	; () banked
  7700  0006BA  6F8C               	movwf	(i2c_int_handler@length+1)& (0+255),b
  7701  0006BC  0E01               	movlw	1
  7702  0006BE  0100               	movlb	0	; () banked
  7703  0006C0  6F8B               	movwf	i2c_int_handler@length& (0+255),b
  7704                           
  7705                           ; BSR set to: 0
  7706                           ;my_i2c.c: 284: msgbuffer[0] = 0xA3;
  7707  0006C2  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7708  0006C4  0EA3               	movlw	163
  7709  0006C6                     L10:
  7710  0006C6  0100               	movlb	0	; () banked
  7711  0006C8  0100               	movlb	0	; () banked
  7712  0006CA  6F80               	movwf	i2c_int_handler@msgbuffer& (0+255),b
  7713  0006CC  D7F1               	goto	L9
  7714  0006CE                     i2l3232:
  7715                           
  7716                           ; BSR set to: 0
  7717  0006CE  0100               	movlb	0	; () banked
  7718  0006D0  0100               	movlb	0	; () banked
  7719  0006D2  51CD               	movf	_ic_ptr& (0+255),w,b
  7720                           
  7721                           ; Switch size 1, requested type "space"
  7722                           ; Number of cases is 3, Range of values is 168 to 170
  7723                           ; switch strategies available:
  7724                           ; Name         Instructions Cycles
  7725                           ; simple_byte           10     6 (average)
  7726                           ;	Chosen strategy is simple_byte
  7727  0006D4  0AA8               	xorlw	168	; case 168
  7728  0006D6  B4D8               	btfsc	status,2,c
  7729  0006D8  D7E1               	goto	i2l3222
  7730  0006DA  0A01               	xorlw	1	; case 169
  7731  0006DC  B4D8               	btfsc	status,2,c
  7732  0006DE  D7EA               	goto	i2l3226
  7733  0006E0  0A03               	xorlw	3	; case 170
  7734  0006E2  B4D8               	btfsc	status,2,c
  7735  0006E4  D7C8               	goto	i2l3216
  7736  0006E6                     i2l3234:
  7737                           
  7738                           ; BSR set to: 0
  7739                           ;my_i2c.c: 290: msg_to_send = 0;
  7740  0006E6  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7741  0006E8  0E00               	movlw	0
  7742  0006EA  0100               	movlb	0	; () banked
  7743  0006EC  0100               	movlb	0	; () banked
  7744  0006EE  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7745  0006F0  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7746  0006F2  0012               	return	
  7747  0006F4                     __end_of_i2c_int_handler:
  7748                           	opt stack 0
  7749                           pclatu	equ	0xFFB
  7750                           pclath	equ	0xFFA
  7751                           tblptru	equ	0xFF8
  7752                           tblptrh	equ	0xFF7
  7753                           tblptrl	equ	0xFF6
  7754                           tablat	equ	0xFF5
  7755                           prodh	equ	0xFF4
  7756                           prodl	equ	0xFF3
  7757                           intcon	equ	0xFF2
  7758                           postinc0	equ	0xFEE
  7759                           fsr0h	equ	0xFEA
  7760                           fsr0l	equ	0xFE9
  7761                           wreg	equ	0xFE8
  7762                           indf1	equ	0xFE7
  7763                           fsr1h	equ	0xFE2
  7764                           fsr1l	equ	0xFE1
  7765                           bsr	equ	0xFE0
  7766                           indf2	equ	0xFDF
  7767                           postinc2	equ	0xFDE
  7768                           postdec2	equ	0xFDD
  7769                           fsr2h	equ	0xFDA
  7770                           fsr2l	equ	0xFD9
  7771                           status	equ	0xFD8
  7772                           
  7773 ;; *************** function _handle_start *****************
  7774 ;; Defined at:
  7775 ;;		line 71 in file "../src/my_i2c.c"
  7776 ;; Parameters:    Size  Location     Type
  7777 ;;  data_read       1    wreg     unsigned char 
  7778 ;; Auto vars:     Size  Location     Type
  7779 ;;  data_read       1   46[COMRAM] unsigned char 
  7780 ;; Return value:  Size  Location     Type
  7781 ;;		None               void
  7782 ;; Registers used:
  7783 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7784 ;; Tracked objects:
  7785 ;;		On entry : 0/0
  7786 ;;		On exit  : 0/0
  7787 ;;		Unchanged: 0/0
  7788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7789 ;;      Params:         0       0       0       0       0
  7790 ;;      Locals:         1       0       0       0       0
  7791 ;;      Temps:          0       0       0       0       0
  7792 ;;      Totals:         1       0       0       0       0
  7793 ;;Total ram usage:        1 bytes
  7794 ;; Hardware stack levels used:    1
  7795 ;; This function calls:
  7796 ;;		Nothing
  7797 ;; This function is called by:
  7798 ;;		_i2c_int_handler
  7799 ;; This function uses a non-reentrant model
  7800 ;;
  7801                           
  7802                           	psect	text47
  7803  000DF0                     __ptext47:
  7804                           	opt stack 0
  7805  000DF0                     _handle_start:
  7806                           	opt stack 19
  7807                           
  7808                           ; BSR set to: 0
  7809                           ;incstack = 0
  7810                           ;handle_start@data_read stored from wreg
  7811  000DF0  CFE8 F02F          	movff	wreg,handle_start@data_read
  7812                           
  7813                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  7814  000DF4  0100               	movlb	0	; () banked
  7815  000DF6  EE20 F00B          	lfsr	2,11
  7816  000DFA  0100               	movlb	0	; () banked
  7817  000DFC  51CD               	movf	_ic_ptr& (0+255),w,b
  7818  000DFE  26D9               	addwf	fsr2l,f,c
  7819  000E00  0100               	movlb	0	; () banked
  7820  000E02  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7821  000E04  22DA               	addwfc	fsr2h,f,c
  7822  000E06  0E01               	movlw	1
  7823  000E08  6EDF               	movwf	indf2,c
  7824                           
  7825                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  7826  000E0A  0100               	movlb	0	; () banked
  7827  000E0C  EE20 F00A          	lfsr	2,10
  7828  000E10  0100               	movlb	0	; () banked
  7829  000E12  51CD               	movf	_ic_ptr& (0+255),w,b
  7830  000E14  26D9               	addwf	fsr2l,f,c
  7831  000E16  0100               	movlb	0	; () banked
  7832  000E18  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7833  000E1A  22DA               	addwfc	fsr2h,f,c
  7834  000E1C  0E00               	movlw	0
  7835  000E1E  6EDF               	movwf	indf2,c
  7836                           
  7837                           ; BSR set to: 0
  7838                           ;my_i2c.c: 75: if (data_read) {
  7839  000E20  502F               	movf	handle_start@data_read,w,c
  7840  000E22  B4D8               	btfsc	status,2,c
  7841  000E24  D03D               	goto	i2l3074
  7842                           
  7843                           ; BSR set to: 0
  7844                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  7845  000E26  AAC7               	btfss	4039,5,c	;volatile
  7846  000E28  D021               	goto	i2l102
  7847                           
  7848                           ; BSR set to: 0
  7849                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  7850  000E2A  0100               	movlb	0	; () banked
  7851  000E2C  EE20 F00C          	lfsr	2,12
  7852  000E30  0100               	movlb	0	; () banked
  7853  000E32  51CD               	movf	_ic_ptr& (0+255),w,b
  7854  000E34  26D9               	addwf	fsr2l,f,c
  7855  000E36  0100               	movlb	0	; () banked
  7856  000E38  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7857  000E3A  22DA               	addwfc	fsr2h,f,c
  7858  000E3C  0E05               	movlw	5
  7859  000E3E  6EDF               	movwf	indf2,c
  7860                           
  7861                           ;my_i2c.c: 80: ic_ptr->error_count++;
  7862  000E40  0100               	movlb	0	; () banked
  7863  000E42  EE20 F00E          	lfsr	2,14
  7864  000E46  0100               	movlb	0	; () banked
  7865  000E48  51CD               	movf	_ic_ptr& (0+255),w,b
  7866  000E4A  26D9               	addwf	fsr2l,f,c
  7867  000E4C  0100               	movlb	0	; () banked
  7868  000E4E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7869  000E50  22DA               	addwfc	fsr2h,f,c
  7870  000E52  2ADF               	incf	indf2,f,c
  7871                           
  7872                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  7873  000E54  0100               	movlb	0	; () banked
  7874  000E56  EE20 F00D          	lfsr	2,13
  7875  000E5A  0100               	movlb	0	; () banked
  7876  000E5C  51CD               	movf	_ic_ptr& (0+255),w,b
  7877  000E5E  26D9               	addwf	fsr2l,f,c
  7878  000E60  0100               	movlb	0	; () banked
  7879  000E62  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7880  000E64  22DA               	addwfc	fsr2h,f,c
  7881  000E66  0E05               	movlw	5
  7882  000E68  6EDF               	movwf	indf2,c
  7883                           
  7884                           ;my_i2c.c: 82: } else {
  7885  000E6A  0012               	return	
  7886  000E6C                     i2l102:
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  7890  000E6C  A4C7               	btfss	4039,2,c	;volatile
  7891  000E6E  D00C               	goto	i2l3072
  7892                           
  7893                           ; BSR set to: 0
  7894                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  7895  000E70  0100               	movlb	0	; () banked
  7896  000E72  EE20 F00C          	lfsr	2,12
  7897  000E76  0100               	movlb	0	; () banked
  7898  000E78  51CD               	movf	_ic_ptr& (0+255),w,b
  7899  000E7A  26D9               	addwf	fsr2l,f,c
  7900  000E7C  0100               	movlb	0	; () banked
  7901  000E7E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7902  000E80  22DA               	addwfc	fsr2h,f,c
  7903  000E82  0E08               	movlw	8
  7904  000E84  6EDF               	movwf	indf2,c
  7905                           
  7906                           ;my_i2c.c: 85: } else {
  7907  000E86  0012               	return	
  7908  000E88                     i2l3072:
  7909                           
  7910                           ; BSR set to: 0
  7911                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  7912  000E88  0100               	movlb	0	; () banked
  7913  000E8A  EE20 F00C          	lfsr	2,12
  7914  000E8E  0100               	movlb	0	; () banked
  7915  000E90  51CD               	movf	_ic_ptr& (0+255),w,b
  7916  000E92  26D9               	addwf	fsr2l,f,c
  7917  000E94  0100               	movlb	0	; () banked
  7918  000E96  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7919  000E98  22DA               	addwfc	fsr2h,f,c
  7920  000E9A  0E07               	movlw	7
  7921  000E9C  6EDF               	movwf	indf2,c
  7922  000E9E  0012               	return	
  7923  000EA0                     i2l3074:
  7924                           
  7925                           ; BSR set to: 0
  7926                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  7927  000EA0  0100               	movlb	0	; () banked
  7928  000EA2  EE20 F00C          	lfsr	2,12
  7929  000EA6  0100               	movlb	0	; () banked
  7930  000EA8  51CD               	movf	_ic_ptr& (0+255),w,b
  7931  000EAA  26D9               	addwf	fsr2l,f,c
  7932  000EAC  0100               	movlb	0	; () banked
  7933  000EAE  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7934  000EB0  22DA               	addwfc	fsr2h,f,c
  7935  000EB2  0E06               	movlw	6
  7936  000EB4  6EDF               	movwf	indf2,c
  7937  000EB6  0012               	return	
  7938  000EB8                     __end_of_handle_start:
  7939                           	opt stack 0
  7940                           pclatu	equ	0xFFB
  7941                           pclath	equ	0xFFA
  7942                           tblptru	equ	0xFF8
  7943                           tblptrh	equ	0xFF7
  7944                           tblptrl	equ	0xFF6
  7945                           tablat	equ	0xFF5
  7946                           prodh	equ	0xFF4
  7947                           prodl	equ	0xFF3
  7948                           intcon	equ	0xFF2
  7949                           postinc0	equ	0xFEE
  7950                           fsr0h	equ	0xFEA
  7951                           fsr0l	equ	0xFE9
  7952                           wreg	equ	0xFE8
  7953                           indf1	equ	0xFE7
  7954                           fsr1h	equ	0xFE2
  7955                           fsr1l	equ	0xFE1
  7956                           bsr	equ	0xFE0
  7957                           indf2	equ	0xFDF
  7958                           postinc2	equ	0xFDE
  7959                           postdec2	equ	0xFDD
  7960                           fsr2h	equ	0xFDA
  7961                           fsr2l	equ	0xFD9
  7962                           status	equ	0xFD8
  7963                           
  7964 ;; *************** function _ToMainHigh_sendmsg *****************
  7965 ;; Defined at:
  7966 ;;		line 126 in file "../src/messages.c"
  7967 ;; Parameters:    Size  Location     Type
  7968 ;;  length          1    wreg     unsigned char 
  7969 ;;  msgtype         1   68[COMRAM] unsigned char 
  7970 ;;  data            2   69[COMRAM] PTR void 
  7971 ;;		 -> main@ic(28), i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  7972 ;; Auto vars:     Size  Location     Type
  7973 ;;  length          1   71[COMRAM] unsigned char 
  7974 ;; Return value:  Size  Location     Type
  7975 ;;                  1    wreg      char 
  7976 ;; Registers used:
  7977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7978 ;; Tracked objects:
  7979 ;;		On entry : 0/0
  7980 ;;		On exit  : 0/0
  7981 ;;		Unchanged: 0/0
  7982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7983 ;;      Params:         3       0       0       0       0
  7984 ;;      Locals:         1       0       0       0       0
  7985 ;;      Temps:          0       0       0       0       0
  7986 ;;      Totals:         4       0       0       0       0
  7987 ;;Total ram usage:        4 bytes
  7988 ;; Hardware stack levels used:    1
  7989 ;; Hardware stack levels required when called:    2
  7990 ;; This function calls:
  7991 ;;		i2_send_msg
  7992 ;; This function is called by:
  7993 ;;		_timer0_int_handler
  7994 ;;		_i2c_int_handler
  7995 ;; This function uses a non-reentrant model
  7996 ;;
  7997                           
  7998                           	psect	text48
  7999  001AA0                     __ptext48:
  8000                           	opt stack 0
  8001  001AA0                     _ToMainHigh_sendmsg:
  8002                           	opt stack 17
  8003                           
  8004                           ; BSR set to: 0
  8005                           ;incstack = 0
  8006                           ;ToMainHigh_sendmsg@length stored from wreg
  8007  001AA0  CFE8 F048          	movff	wreg,ToMainHigh_sendmsg@length
  8008                           
  8009                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8010                           ;	Return value of _ToMainHigh_sendmsg is never used
  8011  001AA4  0101               	movlb	1	; () banked
  8012  001AA6  0E01               	movlw	high _ToMainHigh_MQ
  8013  001AA8  6E3A               	movwf	i2send_msg@qptr+1,c
  8014  001AAA  0101               	movlb	1	; () banked
  8015  001AAC  0E36               	movlw	low _ToMainHigh_MQ
  8016  001AAE  6E39               	movwf	i2send_msg@qptr,c
  8017  001AB0  C048  F03B         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8018  001AB4  C045  F03C         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8019  001AB8  C047  F03E         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8020  001ABC  C046  F03D         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8021  001AC0  EC0D  F008         	call	i2_send_msg	;wreg free
  8022  001AC4  0012               	return	
  8023  001AC6                     __end_of_ToMainHigh_sendmsg:
  8024                           	opt stack 0
  8025                           pclatu	equ	0xFFB
  8026                           pclath	equ	0xFFA
  8027                           tblptru	equ	0xFF8
  8028                           tblptrh	equ	0xFF7
  8029                           tblptrl	equ	0xFF6
  8030                           tablat	equ	0xFF5
  8031                           prodh	equ	0xFF4
  8032                           prodl	equ	0xFF3
  8033                           intcon	equ	0xFF2
  8034                           postinc0	equ	0xFEE
  8035                           fsr0h	equ	0xFEA
  8036                           fsr0l	equ	0xFE9
  8037                           wreg	equ	0xFE8
  8038                           indf1	equ	0xFE7
  8039                           fsr1h	equ	0xFE2
  8040                           fsr1l	equ	0xFE1
  8041                           bsr	equ	0xFE0
  8042                           indf2	equ	0xFDF
  8043                           postinc2	equ	0xFDE
  8044                           postdec2	equ	0xFDD
  8045                           fsr2h	equ	0xFDA
  8046                           fsr2l	equ	0xFD9
  8047                           status	equ	0xFD8
  8048                           
  8049 ;; *************** function i2_send_msg *****************
  8050 ;; Defined at:
  8051 ;;		line 24 in file "../src/messages.c"
  8052 ;; Parameters:    Size  Location     Type
  8053 ;;  qptr            2   56[COMRAM] PTR struct __msg_queue
  8054 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8055 ;;  length          1   58[COMRAM] unsigned char 
  8056 ;;  msgtype         1   59[COMRAM] unsigned char 
  8057 ;;  data            2   60[COMRAM] PTR void 
  8058 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), i2c_int_handler@error_buf(3), 
  8059 ;;		 -> NULL(0), timer0_int_handler@val(2), 
  8060 ;; Auto vars:     Size  Location     Type
  8061 ;;  send_msg        2   66[COMRAM] PTR struct __msg
  8062 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8063 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8064 ;;  send_msg        2   63[COMRAM] unsigned int 
  8065 ;;  send_msg        1   65[COMRAM] unsigned char 
  8066 ;; Return value:  Size  Location     Type
  8067 ;;                  1    wreg      char 
  8068 ;; Registers used:
  8069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8070 ;; Tracked objects:
  8071 ;;		On entry : 0/0
  8072 ;;		On exit  : 0/0
  8073 ;;		Unchanged: 0/0
  8074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8075 ;;      Params:         6       0       0       0       0
  8076 ;;      Locals:         5       0       0       0       0
  8077 ;;      Temps:          1       0       0       0       0
  8078 ;;      Totals:        12       0       0       0       0
  8079 ;;Total ram usage:       12 bytes
  8080 ;; Hardware stack levels used:    1
  8081 ;; Hardware stack levels required when called:    1
  8082 ;; This function calls:
  8083 ;;		i2_memcpy
  8084 ;; This function is called by:
  8085 ;;		_ToMainHigh_sendmsg
  8086 ;; This function uses a non-reentrant model
  8087 ;;
  8088                           
  8089                           	psect	text49
  8090  00101A                     __ptext49:
  8091                           	opt stack 0
  8092  00101A                     i2_send_msg:
  8093                           	opt stack 17
  8094                           
  8095                           ;messages.c: 25: unsigned char slot;
  8096                           ;messages.c: 27: msg *qmsg;
  8097                           ;messages.c: 28: size_t tlength = length;
  8098                           
  8099                           ;incstack = 0
  8100  00101A  C03B  F040         	movff	i2send_msg@length,i2send_msg@tlength
  8101  00101E  6A41               	clrf	i2send_msg@tlength+1,c
  8102                           
  8103                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8104  001020  EE20 F034          	lfsr	2,52
  8105  001024  5039               	movf	i2send_msg@qptr,w,c
  8106  001026  26D9               	addwf	fsr2l,f,c
  8107  001028  503A               	movf	i2send_msg@qptr+1,w,c
  8108  00102A  22DA               	addwfc	fsr2h,f,c
  8109  00102C  50DF               	movf	indf2,w,c
  8110  00102E  6E42               	movwf	i2send_msg@slot,c
  8111                           
  8112                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8113  001030  5042               	movf	i2send_msg@slot,w,c
  8114  001032  0D0D               	mullw	13
  8115  001034  50F3               	movf	prodl,w,c
  8116  001036  2439               	addwf	i2send_msg@qptr,w,c
  8117  001038  6E43               	movwf	i2send_msg@qmsg,c
  8118  00103A  50F4               	movf	prodh,w,c
  8119  00103C  203A               	addwfc	i2send_msg@qptr+1,w,c
  8120  00103E  6E44               	movwf	i2send_msg@qmsg+1,c
  8121                           
  8122                           ;messages.c: 41: if (qmsg->full != 0) {
  8123  001040  C043  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8124  001044  C044  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8125  001048  50DF               	movf	indf2,w,c
  8126  00104A  B4D8               	btfsc	status,2,c
  8127  00104C  D002               	goto	i2l3298
  8128                           
  8129                           ;messages.c: 42: return (-1);
  8130  00104E  0EFF               	movlw	255
  8131  001050  0012               	return	
  8132  001052                     i2l3298:
  8133                           
  8134                           ;messages.c: 43: }
  8135                           ;messages.c: 46: qmsg->length = length;
  8136  001052  EE20 F001          	lfsr	2,1
  8137  001056  5043               	movf	i2send_msg@qmsg,w,c
  8138  001058  26D9               	addwf	fsr2l,f,c
  8139  00105A  5044               	movf	i2send_msg@qmsg+1,w,c
  8140  00105C  22DA               	addwfc	fsr2h,f,c
  8141  00105E  C03B  FFDF         	movff	i2send_msg@length,indf2
  8142                           
  8143                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8144  001062  EE20 F002          	lfsr	2,2
  8145  001066  5043               	movf	i2send_msg@qmsg,w,c
  8146  001068  26D9               	addwf	fsr2l,f,c
  8147  00106A  5044               	movf	i2send_msg@qmsg+1,w,c
  8148  00106C  22DA               	addwfc	fsr2h,f,c
  8149  00106E  C03C  FFDF         	movff	i2send_msg@msgtype,indf2
  8150                           
  8151                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8152  001072  0E03               	movlw	3
  8153  001074  2443               	addwf	i2send_msg@qmsg,w,c
  8154  001076  6E2F               	movwf	i2memcpy@d1,c
  8155  001078  0E00               	movlw	0
  8156  00107A  2044               	addwfc	i2send_msg@qmsg+1,w,c
  8157  00107C  6E30               	movwf	i2memcpy@d1+1,c
  8158  00107E  C03E  F032         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8159  001082  C03D  F031         	movff	i2send_msg@data,i2memcpy@s1
  8160  001086  C040  F033         	movff	i2send_msg@tlength,i2memcpy@n
  8161  00108A  C041  F034         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8162  00108E  EC34  F00C         	call	i2_memcpy	;wreg free
  8163                           
  8164                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8165  001092  EE20 F034          	lfsr	2,52
  8166  001096  5039               	movf	i2send_msg@qptr,w,c
  8167  001098  26D9               	addwf	fsr2l,f,c
  8168  00109A  503A               	movf	i2send_msg@qptr+1,w,c
  8169  00109C  22DA               	addwfc	fsr2h,f,c
  8170  00109E  EE10 F034          	lfsr	1,52
  8171  0010A2  5039               	movf	i2send_msg@qptr,w,c
  8172  0010A4  26E1               	addwf	fsr1l,f,c
  8173  0010A6  503A               	movf	i2send_msg@qptr+1,w,c
  8174  0010A8  22E2               	addwfc	fsr1h,f,c
  8175  0010AA  50E7               	movf	indf1,w,c
  8176  0010AC  6E3F               	movwf	??i2_send_msg& (0+255),c
  8177  0010AE  283F               	incf	??i2_send_msg,w,c
  8178  0010B0  0B03               	andlw	3
  8179  0010B2  6EDF               	movwf	indf2,c
  8180                           
  8181                           ;messages.c: 59: qmsg->full = 1;
  8182  0010B4  C043  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8183  0010B8  C044  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8184  0010BC  0E01               	movlw	1
  8185  0010BE  6EDF               	movwf	indf2,c
  8186                           
  8187                           ;messages.c: 60: return (1);
  8188  0010C0  0E01               	movlw	1
  8189  0010C2  0012               	return	
  8190  0010C4                     __end_ofi2_send_msg:
  8191                           	opt stack 0
  8192                           pclatu	equ	0xFFB
  8193                           pclath	equ	0xFFA
  8194                           tblptru	equ	0xFF8
  8195                           tblptrh	equ	0xFF7
  8196                           tblptrl	equ	0xFF6
  8197                           tablat	equ	0xFF5
  8198                           prodh	equ	0xFF4
  8199                           prodl	equ	0xFF3
  8200                           intcon	equ	0xFF2
  8201                           postinc0	equ	0xFEE
  8202                           fsr0h	equ	0xFEA
  8203                           fsr0l	equ	0xFE9
  8204                           wreg	equ	0xFE8
  8205                           indf1	equ	0xFE7
  8206                           fsr1h	equ	0xFE2
  8207                           fsr1l	equ	0xFE1
  8208                           bsr	equ	0xFE0
  8209                           indf2	equ	0xFDF
  8210                           postinc2	equ	0xFDE
  8211                           postdec2	equ	0xFDD
  8212                           fsr2h	equ	0xFDA
  8213                           fsr2l	equ	0xFD9
  8214                           status	equ	0xFD8
  8215                           
  8216 ;; *************** function i2_memcpy *****************
  8217 ;; Defined at:
  8218 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  8219 ;; Parameters:    Size  Location     Type
  8220 ;;  d1              2   46[COMRAM] PTR void 
  8221 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8222 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8223 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  8224 ;;  s1              2   48[COMRAM] PTR const void 
  8225 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8226 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8227 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), FromMainHigh_MQ(54), 
  8228 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), i2c_int_handler@error_buf(3), 
  8229 ;;		 -> NULL(0), timer0_int_handler@val(2), 
  8230 ;;  n               2   50[COMRAM] unsigned int 
  8231 ;; Auto vars:     Size  Location     Type
  8232 ;;  memcpy          2   54[COMRAM] PTR const unsigned char 
  8233 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8234 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8235 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), FromMainHigh_MQ(54), 
  8236 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), i2c_int_handler@error_buf(3), 
  8237 ;;		 -> NULL(0), timer0_int_handler@val(2), 
  8238 ;;  memcpy          2   52[COMRAM] PTR unsigned char 
  8239 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8240 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8241 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  8242 ;; Return value:  Size  Location     Type
  8243 ;;                  2   46[COMRAM] PTR void 
  8244 ;; Registers used:
  8245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8246 ;; Tracked objects:
  8247 ;;		On entry : 0/0
  8248 ;;		On exit  : 0/0
  8249 ;;		Unchanged: 0/0
  8250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8251 ;;      Params:         6       0       0       0       0
  8252 ;;      Locals:         4       0       0       0       0
  8253 ;;      Temps:          0       0       0       0       0
  8254 ;;      Totals:        10       0       0       0       0
  8255 ;;Total ram usage:       10 bytes
  8256 ;; Hardware stack levels used:    1
  8257 ;; This function calls:
  8258 ;;		Nothing
  8259 ;; This function is called by:
  8260 ;;		i2_send_msg
  8261 ;;		i2_recv_msg
  8262 ;; This function uses a non-reentrant model
  8263 ;;
  8264                           
  8265                           	psect	text50
  8266  001868                     __ptext50:
  8267                           	opt stack 0
  8268  001868                     i2_memcpy:
  8269                           	opt stack 17
  8270                           
  8271                           ;incstack = 0
  8272  001868  C032  F038         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8273  00186C  C031  F037         	movff	i2memcpy@s1,i2memcpy@s
  8274  001870  C030  F036         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8275  001874  C02F  F035         	movff	i2memcpy@d1,i2memcpy@d
  8276  001878  D00E               	goto	i2l3378
  8277  00187A                     i2l3372:
  8278  00187A  C037  FFD9         	movff	i2memcpy@s,fsr2l
  8279  00187E  C038  FFDA         	movff	i2memcpy@s+1,fsr2h
  8280  001882  C035  FFE1         	movff	i2memcpy@d,fsr1l
  8281  001886  C036  FFE2         	movff	i2memcpy@d+1,fsr1h
  8282  00188A  CFDF FFE7          	movff	indf2,indf1
  8283  00188E  4A37               	infsnz	i2memcpy@s,f,c
  8284  001890  2A38               	incf	i2memcpy@s+1,f,c
  8285  001892  4A35               	infsnz	i2memcpy@d,f,c
  8286  001894  2A36               	incf	i2memcpy@d+1,f,c
  8287  001896                     i2l3378:
  8288  001896  0633               	decf	i2memcpy@n,f,c
  8289  001898  A0D8               	btfss	status,0,c
  8290  00189A  0634               	decf	i2memcpy@n+1,f,c
  8291  00189C  2833               	incf	i2memcpy@n& (0+255),w,c
  8292  00189E  B4D8               	btfsc	status,2,c
  8293  0018A0  2834               	incf	(i2memcpy@n+1)& (0+255),w,c
  8294  0018A2  B4D8               	btfsc	status,2,c
  8295                           
  8296                           ;	Return value of i2_memcpy is never used
  8297  0018A4  0012               	return	
  8298  0018A6  D7E9               	goto	i2l3372
  8299  0018A8                     __end_ofi2_memcpy:
  8300                           	opt stack 0
  8301                           pclatu	equ	0xFFB
  8302                           pclath	equ	0xFFA
  8303                           tblptru	equ	0xFF8
  8304                           tblptrh	equ	0xFF7
  8305                           tblptrl	equ	0xFF6
  8306                           tablat	equ	0xFF5
  8307                           prodh	equ	0xFF4
  8308                           prodl	equ	0xFF3
  8309                           intcon	equ	0xFF2
  8310                           postinc0	equ	0xFEE
  8311                           fsr0h	equ	0xFEA
  8312                           fsr0l	equ	0xFE9
  8313                           wreg	equ	0xFE8
  8314                           indf1	equ	0xFE7
  8315                           fsr1h	equ	0xFE2
  8316                           fsr1l	equ	0xFE1
  8317                           bsr	equ	0xFE0
  8318                           indf2	equ	0xFDF
  8319                           postinc2	equ	0xFDE
  8320                           postdec2	equ	0xFDD
  8321                           fsr2h	equ	0xFDA
  8322                           fsr2l	equ	0xFD9
  8323                           status	equ	0xFD8
  8324                           
  8325 ;; *************** function _SleepIfOkay *****************
  8326 ;; Defined at:
  8327 ;;		line 228 in file "../src/messages.c"
  8328 ;; Parameters:    Size  Location     Type
  8329 ;;		None
  8330 ;; Auto vars:     Size  Location     Type
  8331 ;;		None
  8332 ;; Return value:  Size  Location     Type
  8333 ;;		None               void
  8334 ;; Registers used:
  8335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8336 ;; Tracked objects:
  8337 ;;		On entry : 0/0
  8338 ;;		On exit  : 0/0
  8339 ;;		Unchanged: 0/0
  8340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8341 ;;      Params:         0       0       0       0       0
  8342 ;;      Locals:         0       0       0       0       0
  8343 ;;      Temps:          0       0       0       0       0
  8344 ;;      Totals:         0       0       0       0       0
  8345 ;;Total ram usage:        0 bytes
  8346 ;; Hardware stack levels used:    1
  8347 ;; Hardware stack levels required when called:    2
  8348 ;; This function calls:
  8349 ;;		_enter_sleep_mode
  8350 ;;		i2_check_msg
  8351 ;;		i2_in_high_int
  8352 ;;		i2_in_low_int
  8353 ;; This function is called by:
  8354 ;;		_InterruptHandlerHigh
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358                           	psect	text51
  8359  001642                     __ptext51:
  8360                           	opt stack 0
  8361  001642                     _SleepIfOkay:
  8362                           	opt stack 18
  8363                           
  8364                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8365                           
  8366                           ;incstack = 0
  8367  001642  664F               	tstfsz	_MQ_Main_Willing_to_block,c
  8368  001644  D001               	goto	i2l3242
  8369  001646  0012               	return	
  8370  001648                     i2l3242:
  8371                           
  8372                           ;messages.c: 232: }
  8373                           ;messages.c: 235: if (in_low_int()) {
  8374  001648  ECFD  F00C         	call	i2_in_low_int	;wreg free
  8375  00164C  5032               	movf	?i2_in_low_int+1,w,c
  8376  00164E  1031               	iorwf	?i2_in_low_int,w,c
  8377  001650  A4D8               	btfss	status,2,c
  8378  001652  0012               	return	
  8379                           
  8380                           ;messages.c: 237: }
  8381                           ;messages.c: 240: if (!in_high_int()) {
  8382                           
  8383                           ;messages.c: 236: return;
  8384  001654  ECD4  F00D         	call	i2_in_high_int	;wreg free
  8385  001658  5030               	movf	?i2_in_high_int+1,w,c
  8386  00165A  102F               	iorwf	?i2_in_high_int,w,c
  8387  00165C  B4D8               	btfsc	status,2,c
  8388  00165E  0012               	return	
  8389                           
  8390                           ;messages.c: 242: }
  8391                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8392                           
  8393                           ;messages.c: 241: return;
  8394  001660  0101               	movlb	1	; () banked
  8395  001662  0E01               	movlw	high _ToMainHigh_MQ
  8396  001664  6E30               	movwf	i2check_msg@qptr+1,c
  8397  001666  0101               	movlb	1	; () banked
  8398  001668  0E36               	movlw	low _ToMainHigh_MQ
  8399  00166A  6E2F               	movwf	i2check_msg@qptr,c
  8400  00166C  EC63  F00D         	call	i2_check_msg	;wreg free
  8401  001670  0900               	iorlw	0
  8402  001672  A4D8               	btfss	status,2,c
  8403  001674  0012               	return	
  8404                           
  8405                           ;messages.c: 249: }
  8406                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8407                           
  8408                           ;messages.c: 248: return;
  8409  001676  0101               	movlb	1	; () banked
  8410  001678  0E01               	movlw	high _ToMainLow_MQ
  8411  00167A  6E30               	movwf	i2check_msg@qptr+1,c
  8412  00167C  0101               	movlb	1	; () banked
  8413  00167E  0E6C               	movlw	low _ToMainLow_MQ
  8414  001680  6E2F               	movwf	i2check_msg@qptr,c
  8415  001682  EC63  F00D         	call	i2_check_msg	;wreg free
  8416  001686  0900               	iorlw	0
  8417  001688  B4D8               	btfsc	status,2,c
  8418                           
  8419                           ;messages.c: 252: }
  8420                           ;messages.c: 253: enter_sleep_mode();
  8421                           
  8422                           ;messages.c: 251: return;
  8423  00168A  ECE3  F00D         	call	_enter_sleep_mode	;wreg free
  8424  00168E  0012               	return	
  8425  001690                     __end_of_SleepIfOkay:
  8426                           	opt stack 0
  8427                           pclatu	equ	0xFFB
  8428                           pclath	equ	0xFFA
  8429                           tblptru	equ	0xFF8
  8430                           tblptrh	equ	0xFF7
  8431                           tblptrl	equ	0xFF6
  8432                           tablat	equ	0xFF5
  8433                           prodh	equ	0xFF4
  8434                           prodl	equ	0xFF3
  8435                           intcon	equ	0xFF2
  8436                           postinc0	equ	0xFEE
  8437                           fsr0h	equ	0xFEA
  8438                           fsr0l	equ	0xFE9
  8439                           wreg	equ	0xFE8
  8440                           indf1	equ	0xFE7
  8441                           fsr1h	equ	0xFE2
  8442                           fsr1l	equ	0xFE1
  8443                           bsr	equ	0xFE0
  8444                           indf2	equ	0xFDF
  8445                           postinc2	equ	0xFDE
  8446                           postdec2	equ	0xFDD
  8447                           fsr2h	equ	0xFDA
  8448                           fsr2l	equ	0xFD9
  8449                           status	equ	0xFD8
  8450                           
  8451 ;; *************** function i2_in_low_int *****************
  8452 ;; Defined at:
  8453 ;;		line 39 in file "../src/interrupts.c"
  8454 ;; Parameters:    Size  Location     Type
  8455 ;;		None
  8456 ;; Auto vars:     Size  Location     Type
  8457 ;;		None
  8458 ;; Return value:  Size  Location     Type
  8459 ;;                  2   48[COMRAM] int 
  8460 ;; Registers used:
  8461 ;;		wreg, status,2, status,0, cstack
  8462 ;; Tracked objects:
  8463 ;;		On entry : 0/0
  8464 ;;		On exit  : 0/0
  8465 ;;		Unchanged: 0/0
  8466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8467 ;;      Params:         2       0       0       0       0
  8468 ;;      Locals:         0       0       0       0       0
  8469 ;;      Temps:          0       0       0       0       0
  8470 ;;      Totals:         2       0       0       0       0
  8471 ;;Total ram usage:        2 bytes
  8472 ;; Hardware stack levels used:    1
  8473 ;; Hardware stack levels required when called:    1
  8474 ;; This function calls:
  8475 ;;		i2_in_high_int
  8476 ;; This function is called by:
  8477 ;;		_SleepIfOkay
  8478 ;; This function uses a non-reentrant model
  8479 ;;
  8480                           
  8481                           	psect	text52
  8482  0019FA                     __ptext52:
  8483                           	opt stack 0
  8484  0019FA                     i2_in_low_int:
  8485                           	opt stack 18
  8486                           
  8487                           ;interrupts.c: 40: if (INTCONbits.GIEL == 1) {
  8488                           
  8489                           ;incstack = 0
  8490  0019FA  ACF2               	btfss	intcon,6,c	;volatile
  8491  0019FC  D005               	goto	i2l3358
  8492                           
  8493                           ;interrupts.c: 41: return (0);
  8494  0019FE  0E00               	movlw	0
  8495  001A00  6E32               	movwf	?i2_in_low_int+1,c
  8496  001A02  0E00               	movlw	0
  8497  001A04  6E31               	movwf	?i2_in_low_int,c
  8498  001A06  0012               	return	
  8499  001A08                     i2l3358:
  8500  001A08  ECD4  F00D         	call	i2_in_high_int	;wreg free
  8501  001A0C  5030               	movf	?i2_in_high_int+1,w,c
  8502  001A0E  102F               	iorwf	?i2_in_high_int,w,c
  8503  001A10  B4D8               	btfsc	status,2,c
  8504  001A12  D005               	goto	i2l3366
  8505                           
  8506                           ;interrupts.c: 43: return (0);
  8507  001A14  0E00               	movlw	0
  8508  001A16  6E32               	movwf	?i2_in_low_int+1,c
  8509  001A18  0E00               	movlw	0
  8510  001A1A  6E31               	movwf	?i2_in_low_int,c
  8511  001A1C  0012               	return	
  8512  001A1E                     i2l3366:
  8513                           
  8514                           ;interrupts.c: 45: return (1);
  8515  001A1E  0E00               	movlw	0
  8516  001A20  6E32               	movwf	?i2_in_low_int+1,c
  8517  001A22  0E01               	movlw	1
  8518  001A24  6E31               	movwf	?i2_in_low_int,c
  8519  001A26  0012               	return	
  8520  001A28                     __end_ofi2_in_low_int:
  8521                           	opt stack 0
  8522                           pclatu	equ	0xFFB
  8523                           pclath	equ	0xFFA
  8524                           tblptru	equ	0xFF8
  8525                           tblptrh	equ	0xFF7
  8526                           tblptrl	equ	0xFF6
  8527                           tablat	equ	0xFF5
  8528                           prodh	equ	0xFF4
  8529                           prodl	equ	0xFF3
  8530                           intcon	equ	0xFF2
  8531                           postinc0	equ	0xFEE
  8532                           fsr0h	equ	0xFEA
  8533                           fsr0l	equ	0xFE9
  8534                           wreg	equ	0xFE8
  8535                           indf1	equ	0xFE7
  8536                           fsr1h	equ	0xFE2
  8537                           fsr1l	equ	0xFE1
  8538                           bsr	equ	0xFE0
  8539                           indf2	equ	0xFDF
  8540                           postinc2	equ	0xFDE
  8541                           postdec2	equ	0xFDD
  8542                           fsr2h	equ	0xFDA
  8543                           fsr2l	equ	0xFD9
  8544                           status	equ	0xFD8
  8545                           
  8546 ;; *************** function i2_in_high_int *****************
  8547 ;; Defined at:
  8548 ;;		line 31 in file "../src/interrupts.c"
  8549 ;; Parameters:    Size  Location     Type
  8550 ;;		None
  8551 ;; Auto vars:     Size  Location     Type
  8552 ;;		None
  8553 ;; Return value:  Size  Location     Type
  8554 ;;                  2   46[COMRAM] int 
  8555 ;; Registers used:
  8556 ;;		wreg, status,2
  8557 ;; Tracked objects:
  8558 ;;		On entry : 0/0
  8559 ;;		On exit  : 0/0
  8560 ;;		Unchanged: 0/0
  8561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8562 ;;      Params:         2       0       0       0       0
  8563 ;;      Locals:         0       0       0       0       0
  8564 ;;      Temps:          0       0       0       0       0
  8565 ;;      Totals:         2       0       0       0       0
  8566 ;;Total ram usage:        2 bytes
  8567 ;; Hardware stack levels used:    1
  8568 ;; This function calls:
  8569 ;;		Nothing
  8570 ;; This function is called by:
  8571 ;;		_SleepIfOkay
  8572 ;;		i2_in_low_int
  8573 ;; This function uses a non-reentrant model
  8574 ;;
  8575                           
  8576                           	psect	text53
  8577  001BA8                     __ptext53:
  8578                           	opt stack 0
  8579  001BA8                     i2_in_high_int:
  8580                           	opt stack 18
  8581                           
  8582                           ;interrupts.c: 32: return (!INTCONbits.GIEH);
  8583                           
  8584                           ;incstack = 0
  8585  001BA8  0E00               	movlw	0
  8586  001BAA  AEF2               	btfss	intcon,7,c	;volatile
  8587  001BAC  0E01               	movlw	1
  8588  001BAE  6E2F               	movwf	?i2_in_high_int,c
  8589  001BB0  6A30               	clrf	?i2_in_high_int+1,c
  8590  001BB2  0012               	return	
  8591  001BB4                     __end_ofi2_in_high_int:
  8592                           	opt stack 0
  8593                           pclatu	equ	0xFFB
  8594                           pclath	equ	0xFFA
  8595                           tblptru	equ	0xFF8
  8596                           tblptrh	equ	0xFF7
  8597                           tblptrl	equ	0xFF6
  8598                           tablat	equ	0xFF5
  8599                           prodh	equ	0xFF4
  8600                           prodl	equ	0xFF3
  8601                           intcon	equ	0xFF2
  8602                           postinc0	equ	0xFEE
  8603                           fsr0h	equ	0xFEA
  8604                           fsr0l	equ	0xFE9
  8605                           wreg	equ	0xFE8
  8606                           indf1	equ	0xFE7
  8607                           fsr1h	equ	0xFE2
  8608                           fsr1l	equ	0xFE1
  8609                           bsr	equ	0xFE0
  8610                           indf2	equ	0xFDF
  8611                           postinc2	equ	0xFDE
  8612                           postdec2	equ	0xFDD
  8613                           fsr2h	equ	0xFDA
  8614                           fsr2l	equ	0xFD9
  8615                           status	equ	0xFD8
  8616                           
  8617 ;; *************** function i2_check_msg *****************
  8618 ;; Defined at:
  8619 ;;		line 222 in file "../src/messages.c"
  8620 ;; Parameters:    Size  Location     Type
  8621 ;;  qptr            2   46[COMRAM] PTR struct __msg_queue
  8622 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8623 ;; Auto vars:     Size  Location     Type
  8624 ;;		None
  8625 ;; Return value:  Size  Location     Type
  8626 ;;                  1    wreg      unsigned char 
  8627 ;; Registers used:
  8628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8629 ;; Tracked objects:
  8630 ;;		On entry : 0/0
  8631 ;;		On exit  : 0/0
  8632 ;;		Unchanged: 0/0
  8633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8634 ;;      Params:         2       0       0       0       0
  8635 ;;      Locals:         0       0       0       0       0
  8636 ;;      Temps:          1       0       0       0       0
  8637 ;;      Totals:         3       0       0       0       0
  8638 ;;Total ram usage:        3 bytes
  8639 ;; Hardware stack levels used:    1
  8640 ;; This function calls:
  8641 ;;		Nothing
  8642 ;; This function is called by:
  8643 ;;		_SleepIfOkay
  8644 ;; This function uses a non-reentrant model
  8645 ;;
  8646                           
  8647                           	psect	text54
  8648  001AC6                     __ptext54:
  8649                           	opt stack 0
  8650  001AC6                     i2_check_msg:
  8651                           	opt stack 19
  8652                           
  8653                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8654                           
  8655                           ;incstack = 0
  8656  001AC6  EE20 F035          	lfsr	2,53
  8657  001ACA  502F               	movf	i2check_msg@qptr,w,c
  8658  001ACC  26D9               	addwf	fsr2l,f,c
  8659  001ACE  5030               	movf	i2check_msg@qptr+1,w,c
  8660  001AD0  22DA               	addwfc	fsr2h,f,c
  8661  001AD2  50DF               	movf	indf2,w,c
  8662  001AD4  6E31               	movwf	??i2_check_msg& (0+255),c
  8663  001AD6  5031               	movf	??i2_check_msg,w,c
  8664  001AD8  0D0D               	mullw	13
  8665  001ADA  50F3               	movf	prodl,w,c
  8666  001ADC  242F               	addwf	i2check_msg@qptr,w,c
  8667  001ADE  6ED9               	movwf	fsr2l,c
  8668  001AE0  50F4               	movf	prodh,w,c
  8669  001AE2  2030               	addwfc	i2check_msg@qptr+1,w,c
  8670  001AE4  6EDA               	movwf	fsr2h,c
  8671  001AE6  50DF               	movf	indf2,w,c
  8672  001AE8  0012               	return	
  8673  001AEA                     __end_ofi2_check_msg:
  8674                           	opt stack 0
  8675                           pclatu	equ	0xFFB
  8676                           pclath	equ	0xFFA
  8677                           tblptru	equ	0xFF8
  8678                           tblptrh	equ	0xFF7
  8679                           tblptrl	equ	0xFF6
  8680                           tablat	equ	0xFF5
  8681                           prodh	equ	0xFF4
  8682                           prodl	equ	0xFF3
  8683                           intcon	equ	0xFF2
  8684                           postinc0	equ	0xFEE
  8685                           fsr0h	equ	0xFEA
  8686                           fsr0l	equ	0xFE9
  8687                           wreg	equ	0xFE8
  8688                           indf1	equ	0xFE7
  8689                           fsr1h	equ	0xFE2
  8690                           fsr1l	equ	0xFE1
  8691                           bsr	equ	0xFE0
  8692                           indf2	equ	0xFDF
  8693                           postinc2	equ	0xFDE
  8694                           postdec2	equ	0xFDD
  8695                           fsr2h	equ	0xFDA
  8696                           fsr2l	equ	0xFD9
  8697                           status	equ	0xFD8
  8698                           
  8699 ;; *************** function _enter_sleep_mode *****************
  8700 ;; Defined at:
  8701 ;;		line 202 in file "../src/messages.c"
  8702 ;; Parameters:    Size  Location     Type
  8703 ;;		None
  8704 ;; Auto vars:     Size  Location     Type
  8705 ;;		None
  8706 ;; Return value:  Size  Location     Type
  8707 ;;		None               void
  8708 ;; Registers used:
  8709 ;;		None
  8710 ;; Tracked objects:
  8711 ;;		On entry : 0/0
  8712 ;;		On exit  : 0/0
  8713 ;;		Unchanged: 0/0
  8714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8715 ;;      Params:         0       0       0       0       0
  8716 ;;      Locals:         0       0       0       0       0
  8717 ;;      Temps:          0       0       0       0       0
  8718 ;;      Totals:         0       0       0       0       0
  8719 ;;Total ram usage:        0 bytes
  8720 ;; Hardware stack levels used:    1
  8721 ;; This function calls:
  8722 ;;		Nothing
  8723 ;; This function is called by:
  8724 ;;		_SleepIfOkay
  8725 ;; This function uses a non-reentrant model
  8726 ;;
  8727                           
  8728                           	psect	text55
  8729  001BC6                     __ptext55:
  8730                           	opt stack 0
  8731  001BC6                     _enter_sleep_mode:
  8732                           	opt stack 19
  8733                           
  8734                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8735                           
  8736                           ;incstack = 0
  8737  001BC6  8ED3               	bsf	4051,7,c	;volatile
  8738  001BC8  0003               	sleep		;# 
  8739  001BCA  0012               	return	
  8740  001BCC                     __end_of_enter_sleep_mode:
  8741                           	opt stack 0
  8742                           pclatu	equ	0xFFB
  8743                           pclath	equ	0xFFA
  8744                           tblptru	equ	0xFF8
  8745                           tblptrh	equ	0xFF7
  8746                           tblptrl	equ	0xFF6
  8747                           tablat	equ	0xFF5
  8748                           prodh	equ	0xFF4
  8749                           prodl	equ	0xFF3
  8750                           intcon	equ	0xFF2
  8751                           postinc0	equ	0xFEE
  8752                           fsr0h	equ	0xFEA
  8753                           fsr0l	equ	0xFE9
  8754                           wreg	equ	0xFE8
  8755                           indf1	equ	0xFE7
  8756                           fsr1h	equ	0xFE2
  8757                           fsr1l	equ	0xFE1
  8758                           bsr	equ	0xFE0
  8759                           indf2	equ	0xFDF
  8760                           postinc2	equ	0xFDE
  8761                           postdec2	equ	0xFDD
  8762                           fsr2h	equ	0xFDA
  8763                           fsr2l	equ	0xFD9
  8764                           status	equ	0xFD8
  8765                           
  8766 ;; *************** function _ReadADC *****************
  8767 ;; Defined at:
  8768 ;;		line 24 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcread.c"
  8769 ;; Parameters:    Size  Location     Type
  8770 ;;		None
  8771 ;; Auto vars:     Size  Location     Type
  8772 ;;		None
  8773 ;; Return value:  Size  Location     Type
  8774 ;;                  2   46[COMRAM] int 
  8775 ;; Registers used:
  8776 ;;		wreg, status,2
  8777 ;; Tracked objects:
  8778 ;;		On entry : 0/0
  8779 ;;		On exit  : 0/0
  8780 ;;		Unchanged: 0/0
  8781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8782 ;;      Params:         2       0       0       0       0
  8783 ;;      Locals:         0       0       0       0       0
  8784 ;;      Temps:          0       0       0       0       0
  8785 ;;      Totals:         2       0       0       0       0
  8786 ;;Total ram usage:        2 bytes
  8787 ;; Hardware stack levels used:    1
  8788 ;; This function calls:
  8789 ;;		Nothing
  8790 ;; This function is called by:
  8791 ;;		_InterruptHandlerHigh
  8792 ;; This function uses a non-reentrant model
  8793 ;;
  8794                           
  8795                           	psect	text56
  8796  001BB4                     __ptext56:
  8797                           	opt stack 0
  8798  001BB4                     _ReadADC:
  8799                           	opt stack 20
  8800                           
  8801                           ;incstack = 0
  8802  001BB4  50C4               	movf	4036,w,c	;volatile
  8803  001BB6  6E30               	movwf	?_ReadADC+1,c
  8804  001BB8  50C3               	movf	4035,w,c	;volatile
  8805  001BBA  6E2F               	movwf	?_ReadADC,c
  8806  001BBC  0012               	return	
  8807  001BBE                     __end_of_ReadADC:
  8808                           	opt stack 0
  8809  0000                     pclatu	equ	0xFFB
  8810                           pclath	equ	0xFFA
  8811                           tblptru	equ	0xFF8
  8812                           tblptrh	equ	0xFF7
  8813                           tblptrl	equ	0xFF6
  8814                           tablat	equ	0xFF5
  8815                           prodh	equ	0xFF4
  8816                           prodl	equ	0xFF3
  8817                           intcon	equ	0xFF2
  8818                           postinc0	equ	0xFEE
  8819                           fsr0h	equ	0xFEA
  8820                           fsr0l	equ	0xFE9
  8821                           wreg	equ	0xFE8
  8822                           indf1	equ	0xFE7
  8823                           fsr1h	equ	0xFE2
  8824                           fsr1l	equ	0xFE1
  8825                           bsr	equ	0xFE0
  8826                           indf2	equ	0xFDF
  8827                           postinc2	equ	0xFDE
  8828                           postdec2	equ	0xFDD
  8829                           fsr2h	equ	0xFDA
  8830                           fsr2l	equ	0xFD9
  8831                           status	equ	0xFD8
  8832                           pclatu	equ	0xFFB
  8833                           pclath	equ	0xFFA
  8834                           tblptru	equ	0xFF8
  8835                           tblptrh	equ	0xFF7
  8836                           tblptrl	equ	0xFF6
  8837                           tablat	equ	0xFF5
  8838                           prodh	equ	0xFF4
  8839                           prodl	equ	0xFF3
  8840                           intcon	equ	0xFF2
  8841                           postinc0	equ	0xFEE
  8842                           fsr0h	equ	0xFEA
  8843                           fsr0l	equ	0xFE9
  8844                           wreg	equ	0xFE8
  8845                           indf1	equ	0xFE7
  8846                           fsr1h	equ	0xFE2
  8847                           fsr1l	equ	0xFE1
  8848                           bsr	equ	0xFE0
  8849                           indf2	equ	0xFDF
  8850                           postinc2	equ	0xFDE
  8851                           postdec2	equ	0xFDD
  8852                           fsr2h	equ	0xFDA
  8853                           fsr2l	equ	0xFD9
  8854                           status	equ	0xFD8
  8855                           
  8856                           	psect	rparam
  8857  0000                     pclatu	equ	0xFFB
  8858                           pclath	equ	0xFFA
  8859                           tblptru	equ	0xFF8
  8860                           tblptrh	equ	0xFF7
  8861                           tblptrl	equ	0xFF6
  8862                           tablat	equ	0xFF5
  8863                           prodh	equ	0xFF4
  8864                           prodl	equ	0xFF3
  8865                           intcon	equ	0xFF2
  8866                           postinc0	equ	0xFEE
  8867                           fsr0h	equ	0xFEA
  8868                           fsr0l	equ	0xFE9
  8869                           wreg	equ	0xFE8
  8870                           indf1	equ	0xFE7
  8871                           fsr1h	equ	0xFE2
  8872                           fsr1l	equ	0xFE1
  8873                           bsr	equ	0xFE0
  8874                           indf2	equ	0xFDF
  8875                           postinc2	equ	0xFDE
  8876                           postdec2	equ	0xFDD
  8877                           fsr2h	equ	0xFDA
  8878                           fsr2l	equ	0xFD9
  8879                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     76      80
    BANK0           128     77      81
    BANK1           256     53     215
    BANK2           256      0      54
    BANK3           256      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK1[11]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), timer0_int_handler@val(BANK0[2]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK1[11]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), timer0_int_handler@val(BANK0[2]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[5]), FromMainHigh_MQ(BANK2[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[5]), FromMainHigh_MQ(BANK2[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> main@ic(BANK1[28]), i2c_int_handler@error_buf(BANK0[3]), NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> main@uc(BANK1[5]), NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> main@msgtype(BANK1[1]), timer0_int_handler@msgtype(BANK0[2]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), timer0_int_handler@val(BANK0[2]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK1[11]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), timer0_int_handler@val(BANK0[2]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[5]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), NULL(NULL[0]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), NULL(NULL[0]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_timer0_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _initADC->_OpenADC
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0    9541
                                             76 BANK0      1     1      0
                                              0 BANK1     53    53      0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                            _initADC
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _returnADCValue
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     344
                                             40 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    2403
                                             66 BANK0     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     211
                                             40 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    1847
                                             62 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1653
                                             50 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     279
                                             40 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     130
                                             40 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _returnADCValue                                       4     2      2      24
                                             40 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      86
                                             40 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      86
                                             40 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     390
                                             44 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     390
                                             40 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                             40 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initADC                                              4     4      0     283
                                             45 BANK0      4     4      0
                         _ConvertADC
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             40 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             40 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     270
                                             46 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             44 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             42 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             40 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                             40 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             40 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    1973
                                             64 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    1973
                                             64 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1779
                                             50 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     504
                                             40 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     284
                                             40 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             40 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    4938
                                             29 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
                       i1_ConvertADC
 ---------------------------------------------------------------------------------
 (6) i1_ConvertADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    2416
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    2522
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2393
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    1943
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               18    18      0   10768
                                             22 BANK0     18    18      0
                            _ReadADC
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  7     7      0    6566
                                             75 COMRAM     1     1      0
                                              0 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     176
                                             46 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    2994
                                             70 COMRAM     5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    2747
                                             56 COMRAM    14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    24    24      0    3884
                                             72 COMRAM     2     2      0
                                              0 BANK0     22    22      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      31
                                             46 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    3214
                                             68 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2659
                                             56 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6    1108
                                             46 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     284
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             48 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     284
                                             46 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ReadADC                                             2     0      2       0
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _initADC
     _ConvertADC
     _OpenADC
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _returnADCValue
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   i1_ConvertADC

 _InterruptHandlerHigh (ROOT)
   _ReadADC
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      36       8       21.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100     35      D7       6       84.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     4D      51       4       63.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     4C      50       1       63.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AE      11        0.0%
DATA                 0      0     1AE      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sat Feb  8 14:29:15 2014

                main@uthread_data 01AD          _MQ_Main_Willing_to_block 004F  
                     _SSPSTATbits 000FC7         __end_of_ToMainLow_recvmsg 17E6  
                              bsr 000FE0         __end_of_ToMainLow_sendmsg 1AA0  
                ??_returnADCValue 00AA                      __CFG_CP0$OFF 000000  
               i2recv_msg@msgtype 003C                 i2recv_msg@tlength 0043  
                             l321 0814                               l500 126C  
                             l451 1956                               l419 13A2  
                             l452 1958                               l449 193E  
                             l493 123A                               l726 1B2A  
                             l497 125A                               l498 125C  
                             l499 126A              __size_of_WriteTimer0 0012  
            __size_of_WriteTimer1 0012                    _FromMainLow_MQ 0100  
                             wreg 000FE8                      __CFG_IESO$ON 000000  
                    ?_in_high_int 00A8                  ??_init_uart_recv 00AA  
                 ReadTimer1@timer 0003               i2recv_msg@maxlength 003B  
                            l1038 1318                              l2224 0B28  
                            l2500 0A42                              l2228 0BAC  
                            l2516 0B08                              l2620 1140  
                            l2612 1112                              l2604 10E4  
                            l2480 1606                              l2448 13EE  
                            l2634 1752                              l2466 0C76  
                            l2722 084C                              l2714 07C2  
                            l2706 0780                              l2716 081A  
                            l2732 0884                              l2740 08DA  
                            l2486 162A                              l2590 170E  
                            l2582 16EC                              l2726 0862  
                            l2734 089C                              l2760 1940  
                            l2752 09BC                              l2746 0918  
                            l2738 08BC                              l2780 1226  
                            l2860 12C8                              l2748 096A  
                            l2862 12D0                              l2866 1304  
                            l2858 12B6                              l2788 123C  
                            _LATB 000F8A                              u2407 1B2C  
                            u1570 114E                              u1576 1150  
                 _FromMainHigh_MQ 0200                     __CFG_FCMEN$ON 000000  
          ?_block_on_To_msgqueues 0001                              _main 06F4  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            indf1 000FE7                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                     main@msgtype 01B9                        i1_send_msg 0F70  
                            pclat 000FFA                       i2_check_msg 1AC6  
                            prodh 000FF4                              prodl 000FF3  
           handle_start@data_read 002F                              start 00BA  
                      i2_recv_msg 0D1E                     __CFG_FOSC2$ON 000000  
                      i2_send_msg 101A         ToMainHigh_recvmsg@msgtype 00C0  
                 __end_of_ReadADC 1BBE                    send_msg@length 00B4  
                 __end_of_OpenADC 13A6       __size_of_timer0_int_handler 007A  
                     _Delay1KTCYx 1B26                             ?_main 0001  
                           _T1CON 000FCD                             i2l102 0E6C  
                           i1l511 1B16                             i2l112 04D8  
                 __end_of___lwmod 1322                             i2l114 016A  
                      i1memcpy@d1 0001                             i2l140 0456  
                           i2l132 032A                             i2l118 01A8  
                           i2l146 04EA                             i1l397 0074  
                      i1memcpy@s1 0003       FromMainHigh_recvmsg@msgtype 0047  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR1H 000FCF  
                           _TMR0L 000FD6                             _TMR1L 000FCE  
                           _SPBRG 000FAF                             _TRISB 000F93  
                           _TXSTA 000FAC                        i2memcpy@d1 002F  
                      i2memcpy@s1 0031                      ?_init_queues 0001  
              returnADCValue@temp 00AA         __size_of_enter_sleep_mode 0006  
                 __end_of_initADC 17A4                   __end_of_in_main 1762  
      ToMainLow_recvmsg@maxlength 00C4           timer0_lthread@msgbuffer 00AE  
                      _ConvertADC 1BCC           i2c_configure_slave@addr 00A8  
                           tablat 000FF5                             status 000FD8  
                __end_ofi1_memcpy 1868                  __end_ofi2_memcpy 18A8  
                 __initialization 18A8                      __end_of_main 09D6  
                      _ReadTimer1 1B84       __size_of_timer1_int_handler 0048  
      __size_of_ToMainLow_recvmsg 0042        __size_of_ToMainLow_sendmsg 0026  
   __size_of_FromMainHigh_recvmsg 002A             __size_ofi2_in_low_int 002E  
   __size_of_FromMainHigh_sendmsg 0036                            ??_main 00CC  
                 send_msg@msgtype 00B5                     __activetblptr 000002  
                 send_msg@tlength 00B9              __end_of_handle_start 0EB8  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                            _ADRESH 000FC4  
                          _ADRESL 000FC3           ??_uart_recv_int_handler 001B  
                          i1l3022 11E6                            i1l3036 006A  
                          i2l3114 01DC                            i1l2962 1856  
                          i2l3212 066A                            i2l3204 05D4  
                          i2l3132 025C                            i2l3116 0208  
                          i1l2956 183A                            i2l3222 069C  
                          i2l3134 029C                            i2l3126 0244  
                          i2l3072 0E88                            i2l3216 0676  
                          i2l3232 06CE                            i2l3242 1648  
                          i2l3074 0EA0                            i2l3226 06B4  
                          i2l3234 06E6                            i2l3162 03EA  
                          i2l3090 014C                            i2l3322 0D64  
                          i1l2986 0FA8                        _OpenTimer1 1924  
                          i2l3156 039A                            i2l3190 04EE  
                          i2l3158 03DC                    __CFG_WDTEN$OFF 000000  
                          i2l3184 04AC                            i2l3096 0160  
                          i2l3280 0F32                            i2l3272 0EFC  
                          i2l3338 0DEC                            i2l3266 0EF2  
                          i2l3372 187A                            i2l3196 054E  
                          i2l3366 1A1E                            i2l3358 1A08  
                          i2l3378 1896                            i2l3298 1052  
     __end_of_i2c_configure_slave 1A7A                     ??_SleepIfOkay 0033  
              __size_of_ReadUSART 001E                            _OSCCON 000FD3  
                          _SPBRGH 000FB0                            _SSPADD 000FC8  
                          _SSPBUF 000FC9    __size_of_start_i2c_slave_reply 010E  
                     ?i1_send_msg 000B                         ??_ReadADC 0031  
   __end_of_start_i2c_slave_reply 0C1A                timer0_lthread@tptr 00A8  
                     ?i2_recv_msg 0039                         ??_OpenADC 00AA  
                    i2_in_low_int 19FA                       ?i2_send_msg 0039  
                  __CFG_XINST$OFF 000000                __size_of_OpenUSART 0092  
                 _i2c_int_handler 00BE                            _ic_ptr 00CD  
                       ??___lwmod 00AC                     main@msgbuffer 01A2  
                __end_of_init_i2c 15E4                  OpenTimer1@config 00A8  
                          _memcpy 15E4                            clear_0 18AE  
                          clear_1 18BA                            _uc_ptr 004D  
                          main@ic 01BB                            main@uc 01B4  
                __end_of_recv_msg 0B0C       start_i2c_slave_reply@length 00AC  
                       ??_initADC 00AD                         ??_in_main 00AE  
                __end_of_send_msg 0D1E                   initADC@ADCValue 00AF  
           timer0_int_handler@val 0084           i2c_int_handler@i2c_data 0092  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                       init_queue@i 00AB  
        ToMainLow_recvmsg@msgtype 00C0              __size_of_in_high_int 0012  
                     ?_ConvertADC 0001                   __CFG_FOSC$HSPLL 000000  
                      __accesstop 0080           __end_of__initialization 18DC  
      __end_of_ToMainHigh_recvmsg 1828        __end_of_ToMainHigh_sendmsg 1AC6  
     __end_of_init_timer1_lthread 1B60               __end_of_SleepIfOkay 1690  
                  __pcstackCOMRAM 0001                      __pidataBANK0 1BD4  
          __size_ofi2_in_high_int 000C                       ?_ReadTimer1 0001  
              __size_of_check_msg 0036                 __end_of_ReadUSART 1B26  
       timer0_int_handler@msgtype 0082               __size_ofi1_send_msg 00AA  
                       ?i1_memcpy 0001     __size_of_InterruptHandlerHigh 0F68  
     __end_of_InterruptHandlerLow 00BA                         ?i2_memcpy 002F  
                   _ToMainHigh_MQ 0136               __size_ofi2_recv_msg 00D2  
                _enter_sleep_mode 1BC6               __size_ofi2_send_msg 00AA  
            timer1_lthread@length 00C6                     ReadUSART@data 0001  
               __end_of_OpenUSART 1298                     check_msg@qptr 00A8  
            timer1_lthread@retval 00CB           ??_block_on_To_msgqueues 00AE  
            __size_of_init_queues 006E                        __pbssBANK1 0100  
                      __pbssBANK2 0200                       ?_OpenTimer1 0001  
                      __pnvCOMRAM 004D           __end_of_i2c_int_handler 06F4  
                    ?i2_check_msg 002F                timer1_lthread@tptr 00C2  
               recv_msg@maxlength 00B4                   recv_msg@msgtype 00B5  
                 recv_msg@tlength 00BC             __size_of_handle_start 00C8  
                    ?_Delay1KTCYx 0001                  WriteTimer0@timer 0031  
                         ?_memcpy 00A8                  WriteTimer1@timer 0003  
                   ??_WriteTimer0 0031                     ??_WriteTimer1 0003  
             __size_of_ConvertADC 0004           __size_of_timer0_lthread 0012  
         __size_of_timer1_lthread 0072                        ??i1_memcpy 0007  
                      ??i2_memcpy 0035                  i1send_msg@length 000D  
                   i2_in_high_int 1BA8                           _SSPCON1 000FC6  
                         _SSPCON2 000FC5                           _SSPSTAT 000FC7  
             __size_of_ReadTimer1 0012                 __end_of_check_msg 19C8  
                       ?_init_i2c 00A8                       _SleepIfOkay 1642  
                         _ReadADC 1BB4                         ?_recv_msg 00B2  
                         _OpenADC 1322                        _in_low_int 16D8  
                    _handle_start 0DF0                           __Hparam 0000  
                       ?_send_msg 00B2                           __Lparam 0000  
      __end_of_timer0_int_handler 149A                  init_uart_recv@uc 00A8  
                         ___lwmod 1298                     ?i1_ConvertADC 0001  
                 __CFG_STVREN$OFF 000000                           __pcinit 18A8  
                 __size_of_memcpy 005E                        _init_queue 13A6  
                         __ramtop 0400               __size_of_OpenTimer1 0038  
                         __ptext0 06F4                           __ptext1 18E6  
                         __ptext2 149A                           __ptext3 1298  
                         __ptext4 195C                           __ptext5 0C1A  
                         __ptext6 1B3C                           __ptext7 0B0C  
                         __ptext8 19C8                           __ptext9 1AEA  
                         _initADC 1762                           _in_main 171E  
                       _T1CONbits 000FCD               __end_of_WriteTimer0 1BA8  
             __end_of_WriteTimer1 1B84                    ?i2_in_high_int 002F  
                  OpenADC@config2 00A8           __size_of_returnADCValue 0032  
                  __pintcode_body 0EB8      __end_of_FromMainHigh_recvmsg 1A52  
            end_of_initialization 18DC           timer1_lthread@msgbuffer 00C8  
    __end_of_FromMainHigh_sendmsg 1992    __size_of_uart_recv_int_handler 009C  
      FromMainHigh_sendmsg@length 00C1                           memcpy@d 00AE  
                         memcpy@n 00AC                           memcpy@s 00B0  
   __end_of_uart_recv_int_handler 1206                        ??_init_i2c 00AA  
     i2c_int_handler@data_written 0090                     __Lmediumconst 0000  
                         int_func 0EB8                      ??i1_send_msg 0011  
                   ?_uart_lthread 00A8           __size_of_init_uart_recv 001E  
                ?_i2c_int_handler 0001                      ??i2_recv_msg 0040  
                      ??_recv_msg 00B9                      ??i2_send_msg 003F  
                      ??_send_msg 00B8        __end_of_timer1_int_handler 16D8  
                       _RCSTAbits 000FAB                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
       ToMainHigh_sendmsg@msgtype 0045                    ??i1_ConvertADC 0001  
              __end_ofi1_send_msg 101A       FromMainHigh_sendmsg@msgtype 00BE  
                       _TRISCbits 000F94                __end_ofi2_recv_msg 0DF0  
              __end_ofi2_send_msg 10C4                      ??_ConvertADC 00A8  
   FromMainHigh_recvmsg@maxlength 004B          timer1_int_handler@result 001C  
                  ??_uart_lthread 00B0                         _TXSTAbits 000FAC  
                      main@length 01BA                       ?_in_low_int 00AA  
           timer0_lthread@msgtype 00AA             _start_i2c_slave_reply 0B0C  
    __size_of_i2c_configure_slave 0028              __size_ofi2_check_msg 0024  
        __end_of_enter_sleep_mode 1BCC                      ??_ReadTimer1 0003  
              _ToMainHigh_recvmsg 17E6                         i1memcpy@d 0007  
              _ToMainHigh_sendmsg 1AA0                         i1memcpy@n 0005  
                       i1memcpy@s 0009                    _timer0_lthread 1B3C  
                     ?_init_queue 00A8                         i2memcpy@d 0035  
                     _WriteTimer0 1B96                       _WriteTimer1 1B72  
                       i2memcpy@n 0033                         i2memcpy@s 0037  
              __end_of_ConvertADC 1BD0                    _timer1_lthread 149A  
                  __end_of_memcpy 1642                 _enable_interrupts 1BBE  
            __size_of_Delay1KTCYx 0016               ?_ToMainHigh_recvmsg 00C0  
                 ??i2_in_high_int 0031          i2c_int_handler@data_read 0095  
             ?_ToMainHigh_sendmsg 0045                ?_enable_interrupts 0001  
             start_initialization 18A8                     ??_in_high_int 00AA  
                       _ReadUSART 1B08                 __size_ofi1_memcpy 0040  
               __size_ofi2_memcpy 0040             i2c_int_handler@length 008B  
             ??_enable_interrupts 00A8                      ??_OpenTimer1 00A8  
  __size_of_block_on_To_msgqueues 00A6                __end_of_ReadTimer1 1B96  
   __end_of_block_on_To_msgqueues 116A                         _OpenUSART 1206  
    __end_of_InterruptHandlerHigh 0F70                        init_i2c@ic 00A8  
            ??_ToMainHigh_recvmsg 00C4              ??_ToMainHigh_sendmsg 0048  
          __end_of_timer0_lthread 1B4E          i2c_int_handler@error_buf 008D  
                     __pdataBANK0 00CF            __end_of_timer1_lthread 150C  
       __end_of_enable_interrupts 1BC6                          ??_memcpy 00AE  
           timer1_lthread@msgtype 00C4              _FromMainHigh_recvmsg 1A28  
            _FromMainHigh_sendmsg 195C      __size_of_init_timer1_lthread 0012  
              __end_of_OpenTimer1 195C          i2c_int_handler@msg_ready 0094  
        i2c_int_handler@msgbuffer 0080                       __pbssCOMRAM 004F  
                      ?_ReadUSART 0001                     ??_init_queues 00AC  
                   __pcstackBANK0 0080                     __pcstackBANK1 01A2  
             __size_of_in_low_int 0046          start_i2c_slave_reply@msg 00A8  
                  _returnADCValue 19C8               __CFG_CCP2MX$DEFAULT 000000  
            __end_ofi1_ConvertADC 1BD4                   Delay1KTCYx@unit 00A8  
        ToMainLow_sendmsg@msgtype 0017      __size_of_InterruptHandlerLow 00A2  
             __end_of_in_high_int 1B72                        ?_OpenUSART 00A8  
                    ?_SleepIfOkay 0001             ToMainLow_recvmsg@data 00C2  
                    _ToMainLow_MQ 016C               __size_of_init_queue 007A  
                  _init_uart_recv 1AEA                          ?_ReadADC 002F  
                       _check_msg 1992                         __pnvBANK0 00CD  
          ?_start_i2c_slave_reply 00A8                 __size_of_init_i2c 006A  
               OpenADC@portconfig 00A9                          ?_OpenADC 00A8  
                    recv_msg@data 00B7                      recv_msg@qmsg 00BE  
                    recv_msg@slot 00BB                      recv_msg@qptr 00B2  
               __size_of_recv_msg 0136                         __pintcode 0008  
               __size_of_send_msg 0104                   ?_timer0_lthread 00A8  
                        ?___lwmod 00A8             ?_FromMainHigh_recvmsg 0047  
                 ?_timer1_lthread 00C2             ?_FromMainHigh_sendmsg 00BE  
                     __pintcodelo 0018            ToMainHigh_recvmsg@data 00C2  
            __end_of_uart_lthread 1924                          ?_initADC 0001  
      i2c_int_handler@msg_to_send 0093                          ?_in_main 00AC  
               WriteTimer0@timer0 002F                _timer0_int_handler 1420  
               WriteTimer1@timer1 0001               uart_lthread@msgtype 00AA  
                        _ADCValue 00CF            __end_of_returnADCValue 19FA  
           ToMainLow_sendmsg@data 0018               ?_timer0_int_handler 0001  
                uart_lthread@uptr 00A8            __end_of_init_uart_recv 1B08  
             __end_of_init_queues 157A                     OpenADC@config 00AC  
                        _LATBbits 000F8A                   i2check_msg@qptr 002F  
                      ?_check_msg 00A8                          _IPR1bits 000F9F  
                        _PIE1bits 000F9D                     ?i2_in_low_int 0031  
                        i1u189_20 1698                          i1u189_26 169A  
                        _PIR1bits 000F9E                          i2u195_40 1428  
                        i2u195_46 142A            ToMainHigh_sendmsg@data 0046  
                        _RCONbits 000FD0                  __CFG_WDTPS$32768 000000  
            ??_timer0_int_handler 004C        __size_of_enable_interrupts 0008  
               i1send_msg@msgtype 000E                 i1send_msg@tlength 0012  
                      _ADCON0bits 000FC2              timer0_lthread@length 00AC  
              _timer1_int_handler 1690                          i1_memcpy 1828  
            _InterruptHandlerHigh 0008                       ??_ReadUSART 0001  
                        i2_memcpy 1868              timer0_lthread@msgval 00B0  
        FromMainHigh_recvmsg@data 0049                   ?_returnADCValue 00A8  
                     _in_high_int 1B60                      send_msg@data 00B6  
             _i2c_configure_slave 1A52                      send_msg@qmsg 00BC  
                    send_msg@slot 00BB                      send_msg@qptr 00B2  
           uart_lthread@msgbuffer 00AE               ?_timer1_int_handler 0001  
                 ?_init_uart_recv 00A8                       ??_OpenUSART 00AA  
                 OpenUSART@config 00AD                    ??i2_in_low_int 0033  
           _uart_recv_int_handler 116A                      ??_in_low_int 00AC  
                __size_of_ReadADC 000A                          __Hrparam 0000  
                __size_of_OpenADC 0084              ?_i2c_configure_slave 0001  
                        __Lrparam 0000                 ?_enter_sleep_mode 0001  
          ??_FromMainHigh_recvmsg 004B            ??_FromMainHigh_sendmsg 00C1  
            ??_timer1_int_handler 001B          __size_of_i2c_int_handler 0636  
              ??_enter_sleep_mode 002F                  __size_of___lwmod 008A  
                    ??_init_queue 00AA                      ?_WriteTimer0 002F  
                    ?_WriteTimer1 0001          FromMainHigh_sendmsg@data 00BF  
         ToMainLow_sendmsg@length 001A                 main@t0thread_data 01AF  
           ?_InterruptHandlerHigh 0001                  __size_of_initADC 0042  
                __size_of_in_main 0044             __size_ofi1_ConvertADC 0004  
               i2send_msg@msgtype 003C       ToMainHigh_recvmsg@maxlength 00C4  
               i2send_msg@tlength 0040           init_timer1_lthread@tptr 00A8  
                     _init_queues 150C                __end_of_in_low_int 171E  
                        __ptext10 1B4E                          __ptext11 150C  
                        __ptext20 171E                          __ptext12 13A6  
                        __ptext21 16D8                          __ptext13 157A  
                        __ptext30 1924                          __ptext22 1B60  
                        __ptext14 1762                          __ptext23 1992  
                        __ptext15 1322                          __ptext40 1B84  
                        __ptext32 1BD0                          __ptext24 1B26  
                        __ptext16 1BCC                          __ptext33 116A  
                        __ptext25 17A4                          __ptext17 1A52  
                        __ptext50 1868                          __ptext42 1420  
                        __ptext34 1B08                          __ptext26 17E6  
                        __ptext18 1BBE                          __ptext51 1642  
                        __ptext43 1B96                          __ptext35 1690  
                        __ptext27 09D6                          __ptext19 10C4  
                        __ptext52 19FA                          __ptext44 1A28  
                        __ptext36 1B72                          __ptext28 15E4  
                        __ptext53 1BA8                          __ptext45 0D1E  
                        __ptext37 1A7A                          __ptext29 1206  
                        __ptext54 1AC6                          __ptext46 00BE  
                        __ptext38 0F70                          __ptext55 1BC6  
                        __ptext47 0DF0                          __ptext39 1828  
                        __ptext56 1BB4                          __ptext48 1AA0  
                        __ptext49 101A                    i1send_msg@data 000F  
                  i1send_msg@qmsg 0015                    i1send_msg@slot 0014  
                  i1send_msg@qptr 000B                uart_lthread@length 00AC  
        timer0_int_handler@length 0080                          _init_i2c 157A  
             _init_timer1_lthread 1B4E                     __size_of_main 02E2  
                   ??i2_check_msg 0031                 main@t1thread_data 01B2  
                     ??_check_msg 00AA                __end_of_init_queue 1420  
            __size_of_SleepIfOkay 004E                          _recv_msg 09D6  
           ??_i2c_configure_slave 00A8                          _send_msg 0C1A  
                  init_queue@qptr 00A8             __size_of_uart_lthread 003E  
                  i2recv_msg@data 003E                    i2recv_msg@qmsg 0045  
                   ??_Delay1KTCYx 00A8                    i2recv_msg@slot 0042  
                  i2recv_msg@qptr 0039                      i1_ConvertADC 1BD0  
             _InterruptHandlerLow 0018              ?_init_timer1_lthread 00A8  
                     _OSCTUNEbits 000F9B                        _INTCONbits 000FF2  
                  OpenUSART@spbrg 00A8                          memcpy@d1 00A8  
                        memcpy@s1 00AA             __end_ofi2_in_high_int 1BB4  
    i2c_int_handler@overrun_error 0091                  i2send_msg@length 003B  
                        intlevel1 0000                          intlevel2 0000  
            ?_InterruptHandlerLow 0001           ??_start_i2c_slave_reply 00AA  
                ___lwmod@dividend 00A8            ?_uart_recv_int_handler 0001  
                    _uart_lthread 18E6             _block_on_To_msgqueues 10C4  
                   ?_handle_start 0001                  ??_timer0_lthread 00B0  
     __size_of_ToMainHigh_recvmsg 0042       __size_of_ToMainHigh_sendmsg 0026  
                      _OSCCONbits 000FD3                  ??_timer1_lthread 00CA  
        ToMainHigh_sendmsg@length 0048               __end_ofi2_check_msg 1AEA  
           ??_init_timer1_lthread 00AA            ??_InterruptHandlerHigh 0096  
               _ToMainLow_recvmsg 17A4                 _ToMainLow_sendmsg 1A7A  
              main@last_reg_recvd 01B1                   ___lwmod@divisor 00AA  
            __end_ofi2_in_low_int 1A28                ?_ToMainLow_recvmsg 00C0  
             __end_of_Delay1KTCYx 1B3C                 ??_i2c_int_handler 0049  
                 ___lwmod@counter 00AD                ?_ToMainLow_sendmsg 0017  
                     _SSPCON1bits 000FC6                       _SSPCON2bits 000FC5  
                  i2send_msg@data 003D             ??_InterruptHandlerLow 001E  
             ??_ToMainLow_recvmsg 00C4                    i2send_msg@qmsg 0043  
                  i2send_msg@slot 0042                    i2send_msg@qptr 0039  
             ??_ToMainLow_sendmsg 001A                    ??_handle_start 002F  
InterruptHandlerHigh@pureADCValue 00A6                      _USART_Status 0050  

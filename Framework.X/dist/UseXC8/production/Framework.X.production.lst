

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Mar 24 17:18:24 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    75                           	psect	param0,global,class=BANK0,space=1,delta=1
    76  0000                     
    77                           	psect	idataCOMRAM
    78  001D8A                     __pidataCOMRAM:
    79                           	opt stack 0
    80                           
    81                           ;initializer for _forwardFull
    82  001D8A  01                 	db	1
    83  001D8B  81                 	db	129
    84                           
    85                           ;initializer for _motor_index
    86  001D8C  0001               	dw	1
    87                           
    88                           ;initializer for _sensor_value
    89  001D8E  001E               	dw	30
    90                           
    91                           	psect	idataBANK0
    92  001C92                     __pidataBANK0:
    93                           	opt stack 0
    94                           
    95                           ;initializer for _I2C_Send
    96  001C92  4D                 	db	77
    97  001C93  49                 	db	73
    98  001C94  43                 	db	67
    99  001C95  52                 	db	82
   100  001C96  4F                 	db	79
   101  001C97  43                 	db	67
   102  001C98  48                 	db	72
   103  001C99  49                 	db	73
   104  001C9A  50                 	db	80
   105  001C9B  3A                 	db	58
   106  001C9C  49                 	db	73
   107  001C9D  32                 	db	50
   108  001C9E  43                 	db	67
   109  001C9F  5F                 	db	95
   110  001CA0  4D                 	db	77
   111  001CA1  41                 	db	65
   112  001CA2  53                 	db	83
   113  001CA3  54                 	db	84
   114  001CA4  45                 	db	69
   115  001CA5  52                 	db	82
   116  001CA6  00                 	db	0
   117                           
   118                           ;initializer for _back
   119  001CA7  4D                 	db	77
   120  001CA8  CC                 	db	204
   121                           
   122                           ;initializer for _forwardHalf
   123  001CA9  23                 	db	35
   124  001CAA  A3                 	db	163
   125                           
   126                           ;initializer for _forwardSlow
   127  001CAB  32                 	db	50
   128  001CAC  B1                 	db	177
   129                           
   130                           ;initializer for _left
   131  001CAD  DB                 	db	219
   132  001CAE  23                 	db	35
   133                           
   134                           ;initializer for _right
   135  001CAF  5C                 	db	92
   136  001CB0  A3                 	db	163
   137                           
   138                           ;initializer for _left2
   139  001CB1  B4                 	db	180
   140                           
   141                           ;initializer for _right2
   142  001CB2  2D                 	db	45
   143  0000                     _ADCON0	set	4034
   144  0000                     _ADCON0bits	set	4034
   145  0000                     _ADCON1	set	4033
   146  0000                     _ADCON2	set	4032
   147  0000                     _INTCON2bits	set	4081
   148  0000                     _INTCONbits	set	4082
   149  0000                     _IPR1bits	set	3999
   150  0000                     _LATB	set	3978
   151  0000                     _LATBbits	set	3978
   152  0000                     _LATDbits	set	3980
   153  0000                     _OSCCON	set	4051
   154  0000                     _OSCCONbits	set	4051
   155  0000                     _OSCTUNEbits	set	3995
   156  0000                     _PIE1bits	set	3997
   157  0000                     _PIR1bits	set	3998
   158  0000                     _RCONbits	set	4048
   159  0000                     _RCREG	set	4014
   160  0000                     _RCSTA	set	4011
   161  0000                     _RCSTAbits	set	4011
   162  0000                     _SPBRG	set	4015
   163  0000                     _SPBRGH	set	4016
   164  0000                     _SSP1ADD	set	4040
   165  0000                     _SSP1CON1	set	4038
   166  0000                     _SSP1CON1bits	set	4038
   167  0000                     _SSP1CON2	set	4037
   168  0000                     _SSP1CON2bits	set	4037
   169  0000                     _SSP1STATbits	set	4039
   170  0000                     _SSPADD	set	4040
   171  0000                     _SSPBUF	set	4041
   172  0000                     _SSPCON1	set	4038
   173  0000                     _SSPCON1bits	set	4038
   174  0000                     _SSPCON2	set	4037
   175  0000                     _SSPCON2bits	set	4037
   176  0000                     _SSPSTAT	set	4039
   177  0000                     _SSPSTATbits	set	4039
   178  0000                     _T0CON	set	4053
   179  0000                     _T0CONbits	set	4053
   180  0000                     _TMR0H	set	4055
   181  0000                     _TMR0L	set	4054
   182  0000                     _TMR1H	set	4047
   183  0000                     _TMR1L	set	4046
   184  0000                     _TRISB	set	3987
   185  0000                     _TRISCbits	set	3988
   186  0000                     _TRISDbits	set	3989
   187  0000                     _TXREG	set	4013
   188  0000                     _TXSTA	set	4012
   189  0000                     _TXSTAbits	set	4012
   190                           
   191                           	psect	nvCOMRAM
   192  000061                     __pnvCOMRAM:
   193                           	opt stack 0
   194  000061                     _uc_ptr:
   195                           	opt stack 0
   196  000061                     	ds	2
   197                           
   198                           	psect	nvBANK0
   199  0000DF                     __pnvBANK0:
   200                           	opt stack 0
   201  0000DF                     _ic_ptr:
   202                           	opt stack 0
   203  0000DF                     	ds	2
   204                           
   205                           ; #config settings
   206  0000                     
   207                           	psect	cinit
   208  001488                     __pcinit:
   209                           	opt stack 0
   210  001488                     start_initialization:
   211                           	opt stack 0
   212  001488                     __initialization:
   213                           	opt stack 0
   214                           
   215                           ; Clear objects allocated to BANK2 (108 bytes)
   216  001488  EE02  F000         	lfsr	0,__pbssBANK2
   217  00148C  0E6C               	movlw	108
   218  00148E                     clear_0:
   219  00148E  6AEE               	clrf	postinc0,c
   220  001490  06E8               	decf	wreg,f,c
   221  001492  E1FD               	bnz	clear_0
   222                           
   223                           ; Clear objects allocated to BANK1 (130 bytes)
   224  001494  EE01  F000         	lfsr	0,__pbssBANK1
   225  001498  0E82               	movlw	130
   226  00149A                     clear_1:
   227  00149A  6AEE               	clrf	postinc0,c
   228  00149C  06E8               	decf	wreg,f,c
   229  00149E  E1FD               	bnz	clear_1
   230                           
   231                           ; Clear objects allocated to BANK0 (21 bytes)
   232  0014A0  EE00  F0CA         	lfsr	0,__pbssBANK0
   233  0014A4  0E15               	movlw	21
   234  0014A6                     clear_2:
   235  0014A6  6AEE               	clrf	postinc0,c
   236  0014A8  06E8               	decf	wreg,f,c
   237  0014AA  E1FD               	bnz	clear_2
   238                           
   239                           ; Clear objects allocated to COMRAM (43 bytes)
   240  0014AC  EE00  F030         	lfsr	0,__pbssCOMRAM
   241  0014B0  0E2B               	movlw	43
   242  0014B2                     clear_3:
   243  0014B2  6AEE               	clrf	postinc0,c
   244  0014B4  06E8               	decf	wreg,f,c
   245  0014B6  E1FD               	bnz	clear_3
   246                           
   247                           ; Initialize objects allocated to BANK0 (33 bytes)
   248                           ; load TBLPTR registers with __pidataBANK0
   249  0014B8  0E92               	movlw	low __pidataBANK0
   250  0014BA  6EF6               	movwf	tblptrl,c
   251  0014BC  0E1C               	movlw	high __pidataBANK0
   252  0014BE  6EF7               	movwf	tblptrh,c
   253  0014C0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   254  0014C2  6EF8               	movwf	tblptru,c
   255  0014C4  EE00  F0A9         	lfsr	0,__pdataBANK0
   256  0014C8  EE10 F021          	lfsr	1,33
   257  0014CC                     copy_data0:
   258  0014CC  0009               	tblrd		*+
   259  0014CE  CFF5 FFEE          	movff	tablat,postinc0
   260  0014D2  50E5               	movf	postdec1,w,c
   261  0014D4  50E1               	movf	fsr1l,w,c
   262  0014D6  E1FA               	bnz	copy_data0
   263                           
   264                           ; Initialize objects allocated to COMRAM (6 bytes)
   265                           ; load TBLPTR registers with __pidataCOMRAM
   266  0014D8  0E8A               	movlw	low __pidataCOMRAM
   267  0014DA  6EF6               	movwf	tblptrl,c
   268  0014DC  0E1D               	movlw	high __pidataCOMRAM
   269  0014DE  6EF7               	movwf	tblptrh,c
   270  0014E0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   271  0014E2  6EF8               	movwf	tblptru,c
   272  0014E4  EE00  F05B         	lfsr	0,__pdataCOMRAM
   273  0014E8  EE10 F006          	lfsr	1,6
   274  0014EC                     copy_data1:
   275  0014EC  0009               	tblrd		*+
   276  0014EE  CFF5 FFEE          	movff	tablat,postinc0
   277  0014F2  50E5               	movf	postdec1,w,c
   278  0014F4  50E1               	movf	fsr1l,w,c
   279  0014F6  E1FA               	bnz	copy_data1
   280  0014F8                     end_of_initialization:
   281                           	opt stack 0
   282  0014F8                     __end_of__initialization:
   283                           	opt stack 0
   284  0014F8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   285  0014FA  6EF8               	movwf	tblptru,c
   286  0014FC  0100               	movlb	0
   287  0014FE  EF63  F000         	goto	_main	;jump to C main() function
   288                           tblptru	equ	0xFF8
   289                           tblptrh	equ	0xFF7
   290                           tblptrl	equ	0xFF6
   291                           tablat	equ	0xFF5
   292                           postinc0	equ	0xFEE
   293                           wreg	equ	0xFE8
   294                           postdec1	equ	0xFE5
   295                           fsr1l	equ	0xFE1
   296                           
   297                           	psect	bssCOMRAM
   298  000030                     __pbssCOMRAM:
   299                           	opt stack 0
   300  000030                     _i2c_q:
   301                           	opt stack 0
   302  000030                     	ds	2
   303  000032                     _motor_value:
   304                           	opt stack 0
   305  000032                     	ds	2
   306  000034                     _semaphore:
   307                           	opt stack 0
   308  000034                     	ds	2
   309  000036                     _sensor_count:
   310                           	opt stack 0
   311  000036                     	ds	2
   312  000038                     _ticks_left:
   313                           	opt stack 0
   314  000038                     	ds	2
   315  00003A                     _ticks_right:
   316                           	opt stack 0
   317  00003A                     	ds	2
   318  00003C                     _USART_Status:
   319                           	opt stack 0
   320  00003C                     	ds	1
   321  00003D                     _add1:
   322                           	opt stack 0
   323  00003D                     	ds	1
   324  00003E                     _data:
   325                           	opt stack 0
   326  00003E                     	ds	1
   327  00003F                     _length:
   328                           	opt stack 0
   329  00003F                     	ds	1
   330  000040                     _mode:
   331                           	opt stack 0
   332  000040                     	ds	1
   333  000041                     _slave_address:
   334                           	opt stack 0
   335  000041                     	ds	1
   336  000042                     _slew:
   337                           	opt stack 0
   338  000042                     	ds	1
   339  000043                     _status:
   340                           	opt stack 0
   341  000043                     	ds	1
   342  000044                     _sync_mode:
   343                           	opt stack 0
   344  000044                     	ds	1
   345  000045                     _timer2_extender:
   346                           	opt stack 0
   347  000045                     	ds	1
   348  000046                     _w:
   349                           	opt stack 0
   350  000046                     	ds	1
   351  000047                     _motorArrayLeft:
   352                           	opt stack 0
   353  000047                     	ds	10
   354  000051                     _motorArrayRight:
   355                           	opt stack 0
   356  000051                     	ds	10
   357                           tblptru	equ	0xFF8
   358                           tblptrh	equ	0xFF7
   359                           tblptrl	equ	0xFF6
   360                           tablat	equ	0xFF5
   361                           postinc0	equ	0xFEE
   362                           wreg	equ	0xFE8
   363                           postdec1	equ	0xFE5
   364                           fsr1l	equ	0xFE1
   365                           
   366                           	psect	dataCOMRAM
   367  00005B                     __pdataCOMRAM:
   368                           	opt stack 0
   369  00005B                     _forwardFull:
   370                           	opt stack 0
   371  00005B                     	ds	2
   372  00005D                     _motor_index:
   373                           	opt stack 0
   374  00005D                     	ds	2
   375  00005F                     _sensor_value:
   376                           	opt stack 0
   377  00005F                     	ds	2
   378                           tblptru	equ	0xFF8
   379                           tblptrh	equ	0xFF7
   380                           tblptrl	equ	0xFF6
   381                           tablat	equ	0xFF5
   382                           postinc0	equ	0xFEE
   383                           wreg	equ	0xFE8
   384                           postdec1	equ	0xFE5
   385                           fsr1l	equ	0xFE1
   386                           
   387                           	psect	bssBANK0
   388  0000CA                     __pbssBANK0:
   389                           	opt stack 0
   390  0000CA                     _motorSend:
   391                           	opt stack 0
   392  0000CA                     	ds	10
   393  0000D4                     _i:
   394                           	opt stack 0
   395  0000D4                     	ds	2
   396  0000D6                     _ticks_left_C:
   397                           	opt stack 0
   398  0000D6                     	ds	2
   399  0000D8                     _ticks_right_C:
   400                           	opt stack 0
   401  0000D8                     	ds	2
   402  0000DA                     my_i2c_master@ic_ptr:
   403                           	opt stack 0
   404  0000DA                     	ds	2
   405  0000DC                     _MQ_Main_Willing_to_block:
   406                           	opt stack 0
   407  0000DC                     	ds	1
   408  0000DD                     _motor_state:
   409                           	opt stack 0
   410  0000DD                     	ds	1
   411  0000DE                     _stop:
   412                           	opt stack 0
   413  0000DE                     	ds	1
   414                           tblptru	equ	0xFF8
   415                           tblptrh	equ	0xFF7
   416                           tblptrl	equ	0xFF6
   417                           tablat	equ	0xFF5
   418                           postinc0	equ	0xFEE
   419                           wreg	equ	0xFE8
   420                           postdec1	equ	0xFE5
   421                           fsr1l	equ	0xFE1
   422                           
   423                           	psect	dataBANK0
   424  0000A9                     __pdataBANK0:
   425                           	opt stack 0
   426  0000A9                     _I2C_Send:
   427                           	opt stack 0
   428  0000A9                     	ds	21
   429  0000BE                     _back:
   430                           	opt stack 0
   431  0000BE                     	ds	2
   432  0000C0                     _forwardHalf:
   433                           	opt stack 0
   434  0000C0                     	ds	2
   435  0000C2                     _forwardSlow:
   436                           	opt stack 0
   437  0000C2                     	ds	2
   438  0000C4                     _left:
   439                           	opt stack 0
   440  0000C4                     	ds	2
   441  0000C6                     _right:
   442                           	opt stack 0
   443  0000C6                     	ds	2
   444  0000C8                     _left2:
   445                           	opt stack 0
   446  0000C8                     	ds	1
   447  0000C9                     _right2:
   448                           	opt stack 0
   449  0000C9                     	ds	1
   450                           tblptru	equ	0xFF8
   451                           tblptrh	equ	0xFF7
   452                           tblptrl	equ	0xFF6
   453                           tablat	equ	0xFF5
   454                           postinc0	equ	0xFEE
   455                           wreg	equ	0xFE8
   456                           postdec1	equ	0xFE5
   457                           fsr1l	equ	0xFE1
   458                           
   459                           	psect	bssBANK1
   460  000100                     __pbssBANK1:
   461                           	opt stack 0
   462  000100                     _I2C_Recv:
   463                           	opt stack 0
   464  000100                     	ds	21
   465  000115                     _i2cMstrMsgState:
   466                           	opt stack 0
   467  000115                     	ds	1
   468  000116                     _ToMainHigh_MQ:
   469                           	opt stack 0
   470  000116                     	ds	54
   471  00014C                     _ToMainLow_MQ:
   472                           	opt stack 0
   473  00014C                     	ds	54
   474                           tblptru	equ	0xFF8
   475                           tblptrh	equ	0xFF7
   476                           tblptrl	equ	0xFF6
   477                           tablat	equ	0xFF5
   478                           postinc0	equ	0xFEE
   479                           wreg	equ	0xFE8
   480                           postdec1	equ	0xFE5
   481                           fsr1l	equ	0xFE1
   482                           
   483                           	psect	bssBANK2
   484  000200                     __pbssBANK2:
   485                           	opt stack 0
   486  000200                     _FromMainHigh_MQ:
   487                           	opt stack 0
   488  000200                     	ds	54
   489  000236                     _FromMainLow_MQ:
   490                           	opt stack 0
   491  000236                     	ds	54
   492                           tblptru	equ	0xFF8
   493                           tblptrh	equ	0xFF7
   494                           tblptrl	equ	0xFF6
   495                           tablat	equ	0xFF5
   496                           postinc0	equ	0xFEE
   497                           wreg	equ	0xFE8
   498                           postdec1	equ	0xFE5
   499                           fsr1l	equ	0xFE1
   500                           
   501                           	psect	cstackBANK1
   502  000182                     __pcstackBANK1:
   503                           	opt stack 0
   504  000182                     ?_in_high_int:
   505                           	opt stack 0
   506  000182                     ?___awdiv:
   507                           	opt stack 0
   508  000182                     ?___lwmod:
   509                           	opt stack 0
   510  000182                     i2c_master_recv@data:
   511                           	opt stack 0
   512  000182                     OpenTimer0@config:
   513                           	opt stack 0
   514  000182                     Delay1KTCYx@unit:
   515                           	opt stack 0
   516  000182                     init_timer1_lthread@tptr:
   517                           	opt stack 0
   518  000182                     init_timer0_lthread@tptr:
   519                           	opt stack 0
   520  000182                     uart_send_data@data:
   521                           	opt stack 0
   522  000182                     init_uart_recv@uc:
   523                           	opt stack 0
   524  000182                     init_i2c@ic:
   525                           	opt stack 0
   526  000182                     init_queue@qptr:
   527                           	opt stack 0
   528  000182                     check_msg@qptr:
   529                           	opt stack 0
   530  000182                     OpenUSART@spbrg:
   531                           	opt stack 0
   532  000182                     ___awdiv@dividend:
   533                           	opt stack 0
   534  000182                     ___lwmod@dividend:
   535                           	opt stack 0
   536  000182                     memcpy@d1:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x0
   540  000182                     	ds	1
   541  000183                     i2c_master_recv@slave_address:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x1
   545  000183                     	ds	1
   546  000184                     ??_OpenUSART:
   547  000184                     ??_i2c_master_recv:
   548  000184                     ??_init_queue:
   549  000184                     ??_check_msg:
   550  000184                     ?_in_low_int:
   551                           	opt stack 0
   552  000184                     uart_send_data@size:
   553                           	opt stack 0
   554  000184                     ___awdiv@divisor:
   555                           	opt stack 0
   556  000184                     ___lwmod@divisor:
   557                           	opt stack 0
   558  000184                     memcpy@s1:
   559                           	opt stack 0
   560                           
   561                           ; 2 bytes @ 0x2
   562  000184                     	ds	1
   563  000185                     init_queue@i:
   564                           	opt stack 0
   565  000185                     i2c_master_recv@length:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x3
   569  000185                     	ds	1
   570  000186                     ??_uart_send_data:
   571  000186                     ??_init_queues:
   572  000186                     ??___awdiv:
   573  000186                     ??___lwmod:
   574  000186                     ?_in_main:
   575                           	opt stack 0
   576  000186                     memcpy@n:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x4
   580  000186                     	ds	1
   581  000187                     OpenUSART@config:
   582                           	opt stack 0
   583  000187                     ___awdiv@counter:
   584                           	opt stack 0
   585  000187                     ___lwmod@counter:
   586                           	opt stack 0
   587                           
   588                           ; 1 bytes @ 0x5
   589  000187                     	ds	1
   590  000188                     ??_block_on_To_msgqueues:
   591  000188                     ___awdiv@sign:
   592                           	opt stack 0
   593  000188                     uart_send_data@i:
   594                           	opt stack 0
   595  000188                     memcpy@d:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0x6
   599  000188                     	ds	1
   600  000189                     ___awdiv@quotient:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x7
   604  000189                     	ds	1
   605  00018A                     uart_sendthread@length:
   606                           	opt stack 0
   607  00018A                     memcpy@s:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x8
   611  00018A                     	ds	2
   612  00018C                     uart_sendthread@msgbuffer:
   613                           	opt stack 0
   614  00018C                     send_msg@qptr:
   615                           	opt stack 0
   616  00018C                     recv_msg@qptr:
   617                           	opt stack 0
   618                           
   619                           ; 2 bytes @ 0xA
   620  00018C                     	ds	2
   621  00018E                     uart_sendthread@count:
   622                           	opt stack 0
   623  00018E                     send_msg@length:
   624                           	opt stack 0
   625  00018E                     recv_msg@maxlength:
   626                           	opt stack 0
   627                           
   628                           ; 1 bytes @ 0xC
   629  00018E                     	ds	1
   630  00018F                     ??_uart_sendthread:
   631  00018F                     send_msg@msgtype:
   632                           	opt stack 0
   633  00018F                     recv_msg@msgtype:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0xD
   637  00018F                     	ds	1
   638  000190                     send_msg@data:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0xE
   642  000190                     	ds	1
   643  000191                     recv_msg@data:
   644                           	opt stack 0
   645  000191                     uart_sendthread@buf:
   646                           	opt stack 0
   647                           
   648                           ; 11 bytes @ 0xF
   649  000191                     	ds	1
   650  000192                     ??_send_msg:
   651                           
   652                           ; 0 bytes @ 0x10
   653  000192                     	ds	1
   654  000193                     ??_recv_msg:
   655  000193                     send_msg@tlength:
   656                           	opt stack 0
   657                           
   658                           ; 2 bytes @ 0x11
   659  000193                     	ds	2
   660  000195                     send_msg@slot:
   661                           	opt stack 0
   662  000195                     recv_msg@slot:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x13
   666  000195                     	ds	1
   667  000196                     send_msg@qmsg:
   668                           	opt stack 0
   669  000196                     recv_msg@tlength:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0x14
   673  000196                     	ds	2
   674  000198                     ToMainLow_sendmsg@msgtype:
   675                           	opt stack 0
   676  000198                     ToMainHigh_sendmsg@msgtype:
   677                           	opt stack 0
   678  000198                     FromMainHigh_sendmsg@msgtype:
   679                           	opt stack 0
   680  000198                     recv_msg@qmsg:
   681                           	opt stack 0
   682                           
   683                           ; 2 bytes @ 0x16
   684  000198                     	ds	1
   685  000199                     ToMainLow_sendmsg@data:
   686                           	opt stack 0
   687  000199                     ToMainHigh_sendmsg@data:
   688                           	opt stack 0
   689  000199                     FromMainHigh_sendmsg@data:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x17
   693  000199                     	ds	1
   694  00019A                     ToMainLow_recvmsg@msgtype:
   695                           	opt stack 0
   696  00019A                     ToMainHigh_recvmsg@msgtype:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0x18
   700  00019A                     	ds	1
   701  00019B                     ToMainLow_sendmsg@length:
   702                           	opt stack 0
   703  00019B                     ToMainHigh_sendmsg@length:
   704                           	opt stack 0
   705  00019B                     FromMainHigh_sendmsg@length:
   706                           	opt stack 0
   707                           
   708                           ; 1 bytes @ 0x19
   709  00019B                     	ds	1
   710  00019C                     uart_lthread@uptr:
   711                           	opt stack 0
   712  00019C                     uart_sendthread@i:
   713                           	opt stack 0
   714  00019C                     timer1_lthread@tptr:
   715                           	opt stack 0
   716  00019C                     timer0_lthread@tptr:
   717                           	opt stack 0
   718  00019C                     ToMainLow_recvmsg@data:
   719                           	opt stack 0
   720  00019C                     ToMainHigh_recvmsg@data:
   721                           	opt stack 0
   722                           
   723                           ; 2 bytes @ 0x1A
   724  00019C                     	ds	2
   725  00019E                     ToMainLow_recvmsg@maxlength:
   726                           	opt stack 0
   727  00019E                     ToMainHigh_recvmsg@maxlength:
   728                           	opt stack 0
   729  00019E                     uart_lthread@msgtype:
   730                           	opt stack 0
   731  00019E                     timer1_lthread@msgtype:
   732                           	opt stack 0
   733  00019E                     timer0_lthread@msgtype:
   734                           	opt stack 0
   735                           
   736                           ; 2 bytes @ 0x1C
   737  00019E                     	ds	2
   738  0001A0                     uart_lthread@length:
   739                           	opt stack 0
   740  0001A0                     timer1_lthread@length:
   741                           	opt stack 0
   742  0001A0                     timer0_lthread@length:
   743                           	opt stack 0
   744                           
   745                           ; 2 bytes @ 0x1E
   746  0001A0                     	ds	2
   747  0001A2                     uart_lthread@msgbuffer:
   748                           	opt stack 0
   749  0001A2                     timer1_lthread@msgbuffer:
   750                           	opt stack 0
   751  0001A2                     timer0_lthread@msgbuffer:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x20
   755  0001A2                     	ds	2
   756  0001A4                     ??_uart_lthread:
   757  0001A4                     ??_timer1_lthread:
   758  0001A4                     ??_timer0_lthread:
   759                           
   760                           ; 0 bytes @ 0x22
   761  0001A4                     	ds	1
   762  0001A5                     timer1_lthread@retval:
   763                           	opt stack 0
   764  0001A5                     timer0_lthread@retval:
   765                           	opt stack 0
   766                           
   767                           ; 1 bytes @ 0x23
   768  0001A5                     	ds	1
   769  0001A6                     ??_main:
   770                           
   771                           ; 0 bytes @ 0x24
   772  0001A6                     	ds	2
   773  0001A8                     main@last_reg_recvd:
   774                           	opt stack 0
   775                           
   776                           ; 1 bytes @ 0x26
   777  0001A8                     	ds	1
   778  0001A9                     main@uthread_data:
   779                           	opt stack 0
   780                           
   781                           ; 2 bytes @ 0x27
   782  0001A9                     	ds	2
   783  0001AB                     main@msgCount:
   784                           	opt stack 0
   785                           
   786                           ; 1 bytes @ 0x29
   787  0001AB                     	ds	1
   788  0001AC                     main@average:
   789                           	opt stack 0
   790                           
   791                           ; 2 bytes @ 0x2A
   792  0001AC                     	ds	2
   793  0001AE                     main@msgbuffer:
   794                           	opt stack 0
   795                           
   796                           ; 11 bytes @ 0x2C
   797  0001AE                     	ds	11
   798  0001B9                     main@movingtest:
   799                           	opt stack 0
   800                           
   801                           ; 1 bytes @ 0x37
   802  0001B9                     	ds	1
   803  0001BA                     main@i:
   804                           	opt stack 0
   805                           
   806                           ; 2 bytes @ 0x38
   807  0001BA                     	ds	2
   808  0001BC                     main@length_1453:
   809                           	opt stack 0
   810                           
   811                           ; 2 bytes @ 0x3A
   812  0001BC                     	ds	2
   813  0001BE                     main@t1thread_data:
   814                           	opt stack 0
   815                           
   816                           ; 2 bytes @ 0x3C
   817  0001BE                     	ds	2
   818  0001C0                     main@t0thread_data:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0x3E
   822  0001C0                     	ds	2
   823  0001C2                     main@msgtype:
   824                           	opt stack 0
   825                           
   826                           ; 1 bytes @ 0x40
   827  0001C2                     	ds	1
   828  0001C3                     main@length:
   829                           	opt stack 0
   830                           
   831                           ; 1 bytes @ 0x41
   832  0001C3                     	ds	1
   833  0001C4                     main@uc:
   834                           	opt stack 0
   835                           
   836                           ; 28 bytes @ 0x42
   837  0001C4                     	ds	28
   838  0001E0                     main@ic:
   839                           	opt stack 0
   840                           
   841                           ; 28 bytes @ 0x5E
   842  0001E0                     	ds	28
   843                           tblptru	equ	0xFF8
   844                           tblptrh	equ	0xFF7
   845                           tblptrl	equ	0xFF6
   846                           tablat	equ	0xFF5
   847                           postinc0	equ	0xFEE
   848                           wreg	equ	0xFE8
   849                           postdec1	equ	0xFE5
   850                           fsr1l	equ	0xFE1
   851                           
   852                           	psect	cstackBANK0
   853  000080                     __pcstackBANK0:
   854                           	opt stack 0
   855  000080                     WriteTimer0@timer0:
   856                           	opt stack 0
   857  000080                     i2memcpy@d1:
   858                           	opt stack 0
   859                           
   860                           ; 2 bytes @ 0x0
   861  000080                     	ds	2
   862  000082                     WriteTimer0@timer:
   863                           	opt stack 0
   864  000082                     i2memcpy@s1:
   865                           	opt stack 0
   866                           
   867                           ; 2 bytes @ 0x2
   868  000082                     	ds	2
   869  000084                     ??_timer0_int_handler:
   870  000084                     i2memcpy@n:
   871                           	opt stack 0
   872                           
   873                           ; 2 bytes @ 0x4
   874  000084                     	ds	2
   875  000086                     i2memcpy@d:
   876                           	opt stack 0
   877                           
   878                           ; 2 bytes @ 0x6
   879  000086                     	ds	2
   880  000088                     i2memcpy@s:
   881                           	opt stack 0
   882                           
   883                           ; 2 bytes @ 0x8
   884  000088                     	ds	2
   885  00008A                     i2send_msg@qptr:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0xA
   889  00008A                     	ds	2
   890  00008C                     i2send_msg@length:
   891                           	opt stack 0
   892                           
   893                           ; 1 bytes @ 0xC
   894  00008C                     	ds	1
   895  00008D                     i2send_msg@msgtype:
   896                           	opt stack 0
   897                           
   898                           ; 1 bytes @ 0xD
   899  00008D                     	ds	1
   900  00008E                     i2send_msg@data:
   901                           	opt stack 0
   902                           
   903                           ; 2 bytes @ 0xE
   904  00008E                     	ds	2
   905  000090                     ??i2_send_msg:
   906                           
   907                           ; 0 bytes @ 0x10
   908  000090                     	ds	1
   909  000091                     i2send_msg@tlength:
   910                           	opt stack 0
   911                           
   912                           ; 2 bytes @ 0x11
   913  000091                     	ds	2
   914  000093                     i2send_msg@slot:
   915                           	opt stack 0
   916                           
   917                           ; 1 bytes @ 0x13
   918  000093                     	ds	1
   919  000094                     i2send_msg@qmsg:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x14
   923  000094                     	ds	2
   924  000096                     i2ToMainHigh_sendmsg@msgtype:
   925                           	opt stack 0
   926                           
   927                           ; 1 bytes @ 0x16
   928  000096                     	ds	1
   929  000097                     i2ToMainHigh_sendmsg@data:
   930                           	opt stack 0
   931                           
   932                           ; 2 bytes @ 0x17
   933  000097                     	ds	2
   934  000099                     i2ToMainHigh_sendmsg@length:
   935                           	opt stack 0
   936                           
   937                           ; 1 bytes @ 0x19
   938  000099                     	ds	1
   939  00009A                     ??_i2c_master_handler:
   940                           
   941                           ; 0 bytes @ 0x1A
   942  00009A                     	ds	1
   943  00009B                     ??_InterruptHandlerHigh:
   944                           
   945                           ; 0 bytes @ 0x1B
   946  00009B                     	ds	14
   947                           tblptru	equ	0xFF8
   948                           tblptrh	equ	0xFF7
   949                           tblptrl	equ	0xFF6
   950                           tablat	equ	0xFF5
   951                           postinc0	equ	0xFEE
   952                           wreg	equ	0xFE8
   953                           postdec1	equ	0xFE5
   954                           fsr1l	equ	0xFE1
   955                           
   956                           	psect	cstackCOMRAM
   957  000001                     __pcstackCOMRAM:
   958                           	opt stack 0
   959  000001                     ?_ReadTimer1:
   960                           	opt stack 0
   961  000001                     ReadUSART@data:
   962                           	opt stack 0
   963  000001                     WriteUSART@data:
   964                           	opt stack 0
   965  000001                     WriteTimer1@timer1:
   966                           	opt stack 0
   967  000001                     i1memcpy@d1:
   968                           	opt stack 0
   969                           
   970                           ; 2 bytes @ 0x0
   971  000001                     	ds	1
   972  000002                     ??_uart_send_int_handler:
   973                           
   974                           ; 0 bytes @ 0x1
   975  000002                     	ds	1
   976  000003                     ReadTimer1@timer:
   977                           	opt stack 0
   978  000003                     WriteTimer1@timer:
   979                           	opt stack 0
   980  000003                     i1memcpy@s1:
   981                           	opt stack 0
   982                           
   983                           ; 2 bytes @ 0x2
   984  000003                     	ds	2
   985  000005                     ??_timer1_int_handler:
   986  000005                     i1memcpy@n:
   987                           	opt stack 0
   988                           
   989                           ; 2 bytes @ 0x4
   990  000005                     	ds	1
   991  000006                     timer1_int_handler@result:
   992                           	opt stack 0
   993                           
   994                           ; 2 bytes @ 0x5
   995  000006                     	ds	1
   996  000007                     i1memcpy@d:
   997                           	opt stack 0
   998                           
   999                           ; 2 bytes @ 0x6
  1000  000007                     	ds	2
  1001  000009                     i1memcpy@s:
  1002                           	opt stack 0
  1003                           
  1004                           ; 2 bytes @ 0x8
  1005  000009                     	ds	2
  1006  00000B                     i1send_msg@qptr:
  1007                           	opt stack 0
  1008                           
  1009                           ; 2 bytes @ 0xA
  1010  00000B                     	ds	2
  1011  00000D                     i1send_msg@length:
  1012                           	opt stack 0
  1013                           
  1014                           ; 1 bytes @ 0xC
  1015  00000D                     	ds	1
  1016  00000E                     i1send_msg@msgtype:
  1017                           	opt stack 0
  1018                           
  1019                           ; 1 bytes @ 0xD
  1020  00000E                     	ds	1
  1021  00000F                     i1send_msg@data:
  1022                           	opt stack 0
  1023                           
  1024                           ; 2 bytes @ 0xE
  1025  00000F                     	ds	2
  1026  000011                     ??i1_send_msg:
  1027                           
  1028                           ; 0 bytes @ 0x10
  1029  000011                     	ds	1
  1030  000012                     i1send_msg@tlength:
  1031                           	opt stack 0
  1032                           
  1033                           ; 2 bytes @ 0x11
  1034  000012                     	ds	2
  1035  000014                     i1send_msg@slot:
  1036                           	opt stack 0
  1037                           
  1038                           ; 1 bytes @ 0x13
  1039  000014                     	ds	1
  1040  000015                     i1send_msg@qmsg:
  1041                           	opt stack 0
  1042                           
  1043                           ; 2 bytes @ 0x14
  1044  000015                     	ds	2
  1045  000017                     i1ToMainLow_sendmsg@msgtype:
  1046                           	opt stack 0
  1047  000017                     i1ToMainHigh_sendmsg@msgtype:
  1048                           	opt stack 0
  1049                           
  1050                           ; 1 bytes @ 0x16
  1051  000017                     	ds	1
  1052  000018                     i1ToMainLow_sendmsg@data:
  1053                           	opt stack 0
  1054  000018                     i1ToMainHigh_sendmsg@data:
  1055                           	opt stack 0
  1056                           
  1057                           ; 2 bytes @ 0x17
  1058  000018                     	ds	2
  1059  00001A                     i1ToMainLow_sendmsg@length:
  1060                           	opt stack 0
  1061  00001A                     i1ToMainHigh_sendmsg@length:
  1062                           	opt stack 0
  1063                           
  1064                           ; 1 bytes @ 0x19
  1065  00001A                     	ds	1
  1066  00001B                     ??_uart_recv_state:
  1067                           
  1068                           ; 0 bytes @ 0x1A
  1069  00001B                     	ds	2
  1070  00001D                     uart_recv_state@byte:
  1071                           	opt stack 0
  1072                           
  1073                           ; 1 bytes @ 0x1C
  1074  00001D                     	ds	1
  1075  00001E                     ??_uart_recv_int_handler:
  1076                           
  1077                           ; 0 bytes @ 0x1D
  1078  00001E                     	ds	1
  1079  00001F                     ??_InterruptHandlerLow:
  1080                           
  1081                           ; 0 bytes @ 0x1E
  1082  00001F                     	ds	17
  1083                           tblptru	equ	0xFF8
  1084                           tblptrh	equ	0xFF7
  1085                           tblptrl	equ	0xFF6
  1086                           tablat	equ	0xFF5
  1087                           postinc0	equ	0xFEE
  1088                           wreg	equ	0xFE8
  1089                           postdec1	equ	0xFE5
  1090                           fsr1l	equ	0xFE1
  1091                           
  1092 ;;
  1093 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1094 ;;
  1095 ;; *************** function _main *****************
  1096 ;; Defined at:
  1097 ;;		line 192 in file "../src/main.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;		None
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  i               2   56[BANK1 ] int 
  1102 ;;  average         2   42[BANK1 ] int 
  1103 ;;  length          2   58[BANK1 ] int 
  1104 ;;  ic             28   94[BANK1 ] struct __i2c_comm
  1105 ;;  uc             28   66[BANK1 ] struct __uart_comm
  1106 ;;  msgbuffer      11   44[BANK1 ] unsigned char [11]
  1107 ;;  t0thread_dat    2   62[BANK1 ] struct __timer0_thread_s
  1108 ;;  t1thread_dat    2   60[BANK1 ] struct __timer1_thread_s
  1109 ;;  uthread_data    2   39[BANK1 ] struct __uart_thread_str
  1110 ;;  length          1   65[BANK1 ] char 
  1111 ;;  msgtype         1   64[BANK1 ] unsigned char 
  1112 ;;  movingtest      1   55[BANK1 ] unsigned char 
  1113 ;;  msgCount        1   41[BANK1 ] unsigned char 
  1114 ;;  last_reg_rec    1   38[BANK1 ] unsigned char 
  1115 ;; Return value:  Size  Location     Type
  1116 ;;		None               void
  1117 ;; Registers used:
  1118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1124 ;;      Params:         0       0       0       0       0
  1125 ;;      Locals:         0       0      84       0       0
  1126 ;;      Temps:          0       0       2       0       0
  1127 ;;      Totals:         0       0      86       0       0
  1128 ;;Total ram usage:       86 bytes
  1129 ;; Hardware stack levels required when called:   15
  1130 ;; This function calls:
  1131 ;;		_OpenTimer0
  1132 ;;		_OpenUSART
  1133 ;;		_ToMainHigh_recvmsg
  1134 ;;		_ToMainLow_recvmsg
  1135 ;;		_ToMainLow_sendmsg
  1136 ;;		___awdiv
  1137 ;;		_block_on_To_msgqueues
  1138 ;;		_enable_interrupts
  1139 ;;		_i2c_configure_master
  1140 ;;		_i2c_master_recv
  1141 ;;		_init_i2c
  1142 ;;		_init_queues
  1143 ;;		_init_timer0_lthread
  1144 ;;		_init_timer1_lthread
  1145 ;;		_init_uart_recv
  1146 ;;		_timer0_lthread
  1147 ;;		_timer1_lthread
  1148 ;;		_uart_lthread
  1149 ;;		_uart_sendthread
  1150 ;; This function is called by:
  1151 ;;		Startup code after reset
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155                           	psect	text0
  1156  0000C6                     __ptext0:
  1157                           	opt stack 0
  1158  0000C6                     _main:
  1159                           	opt stack 16
  1160                           
  1161                           ;main.c: 195: signed char length;
  1162                           ;main.c: 196: unsigned char msgtype;
  1163                           ;main.c: 197: unsigned char last_reg_recvd;
  1164                           ;main.c: 198: uart_comm uc;
  1165                           ;main.c: 199: i2c_comm ic;
  1166                           ;main.c: 200: unsigned char msgbuffer[10 + 1];
  1167                           ;main.c: 202: uart_thread_struct uthread_data;
  1168                           ;main.c: 203: timer1_thread_struct t1thread_data;
  1169                           ;main.c: 204: timer0_thread_struct t0thread_data;
  1170                           ;main.c: 206: unsigned char movingtest = 0;
  1171                           
  1172                           ;incstack = 0
  1173  0000C6  0101               	movlb	1	; () banked
  1174  0000C8  6FA6               	movwf	??_main& (0+255),b
  1175  0000CA  0E00               	movlw	0
  1176  0000CC  0101               	movlb	1	; () banked
  1177  0000CE  0101               	movlb	1	; () banked
  1178  0000D0  6FB9               	movwf	main@movingtest& (0+255),b
  1179  0000D2  0101               	movlb	1	; () banked
  1180  0000D4  51A6               	movf	??_main& (0+255),w,b
  1181                           
  1182                           ; BSR set to: 1
  1183                           ;main.c: 213: OSCCON = 0x82;
  1184  0000D6  0E82               	movlw	130
  1185  0000D8  6ED3               	movwf	4051,c	;volatile
  1186                           
  1187                           ; BSR set to: 1
  1188                           ;main.c: 214: OSCTUNEbits.PLLEN = 0;
  1189  0000DA  9C9B               	bcf	3995,6,c	;volatile
  1190                           
  1191                           ; BSR set to: 1
  1192                           ;main.c: 232: init_uart_recv(&uc);
  1193  0000DC  0101               	movlb	1	; () banked
  1194  0000DE  0E01               	movlw	high main@uc
  1195  0000E0  0101               	movlb	1	; () banked
  1196  0000E2  0101               	movlb	1	; () banked
  1197  0000E4  6F83               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1198  0000E6  0101               	movlb	1	; () banked
  1199  0000E8  0EC4               	movlw	low main@uc
  1200  0000EA  0101               	movlb	1	; () banked
  1201  0000EC  0101               	movlb	1	; () banked
  1202  0000EE  6F82               	movwf	init_uart_recv@uc& (0+255),b
  1203  0000F0  EC0B  F00D         	call	_init_uart_recv	;wreg free
  1204                           
  1205                           ;main.c: 235: init_i2c(&ic);
  1206  0000F4  0101               	movlb	1	; () banked
  1207  0000F6  0E01               	movlw	high main@ic
  1208  0000F8  0101               	movlb	1	; () banked
  1209  0000FA  0101               	movlb	1	; () banked
  1210  0000FC  6F83               	movwf	(init_i2c@ic+1)& (0+255),b
  1211  0000FE  0101               	movlb	1	; () banked
  1212  000100  0EE0               	movlw	low main@ic
  1213  000102  0101               	movlb	1	; () banked
  1214  000104  0101               	movlb	1	; () banked
  1215  000106  6F82               	movwf	init_i2c@ic& (0+255),b
  1216  000108  ECA1  F00B         	call	_init_i2c	;wreg free
  1217                           
  1218                           ;main.c: 238: init_timer1_lthread(&t1thread_data);
  1219  00010C  0101               	movlb	1	; () banked
  1220  00010E  0E01               	movlw	high main@t1thread_data
  1221  000110  0101               	movlb	1	; () banked
  1222  000112  0101               	movlb	1	; () banked
  1223  000114  6F83               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1224  000116  0101               	movlb	1	; () banked
  1225  000118  0EBE               	movlw	low main@t1thread_data
  1226  00011A  0101               	movlb	1	; () banked
  1227  00011C  0101               	movlb	1	; () banked
  1228  00011E  6F82               	movwf	init_timer1_lthread@tptr& (0+255),b
  1229  000120  EC89  F00E         	call	_init_timer1_lthread	;wreg free
  1230                           
  1231                           ;main.c: 240: init_timer0_lthread(&t0thread_data);
  1232  000124  0101               	movlb	1	; () banked
  1233  000126  0E01               	movlw	high main@t0thread_data
  1234  000128  0101               	movlb	1	; () banked
  1235  00012A  0101               	movlb	1	; () banked
  1236  00012C  6F83               	movwf	(init_timer0_lthread@tptr+1)& (0+255),b
  1237  00012E  0101               	movlb	1	; () banked
  1238  000130  0EC0               	movlw	low main@t0thread_data
  1239  000132  0101               	movlb	1	; () banked
  1240  000134  0101               	movlb	1	; () banked
  1241  000136  6F82               	movwf	init_timer0_lthread@tptr& (0+255),b
  1242  000138  EC92  F00E         	call	_init_timer0_lthread	;wreg free
  1243                           
  1244                           ;main.c: 242: init_queues();
  1245  00013C  EC30  F00B         	call	_init_queues	;wreg free
  1246                           
  1247                           ;main.c: 248: TRISB = 0x0;
  1248  000140  0E00               	movlw	0
  1249  000142  6E93               	movwf	3987,c	;volatile
  1250                           
  1251                           ;main.c: 249: LATB = 0x0;
  1252  000144  0E00               	movlw	0
  1253  000146  6E8A               	movwf	3978,c	;volatile
  1254                           
  1255                           ;main.c: 258: IPR1bits.TXIP = 0;
  1256  000148  989F               	bcf	3999,4,c	;volatile
  1257                           
  1258                           ;main.c: 275: enable_interrupts();
  1259  00014A  ECBF  F00E         	call	_enable_interrupts	;wreg free
  1260                           
  1261                           ;main.c: 280: IPR1bits.TMR1IP = 0;
  1262  00014E  909F               	bcf	3999,0,c	;volatile
  1263                           
  1264                           ;main.c: 282: IPR1bits.RCIP = 0;
  1265  000150  9A9F               	bcf	3999,5,c	;volatile
  1266                           
  1267                           ;main.c: 284: IPR1bits.SSPIP = 1;
  1268  000152  869F               	bsf	3999,3,c	;volatile
  1269                           
  1270                           ;main.c: 286: IPR1bits.ADIP = 1;
  1271  000154  8C9F               	bsf	3999,6,c	;volatile
  1272                           
  1273                           ;main.c: 308: PIE1bits.SSPIE = 1;
  1274  000156  869D               	bsf	3997,3,c	;volatile
  1275                           
  1276                           ;main.c: 320: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1277                           ;main.c: 321: 0b11111111 & 0b11111111, 38);
  1278  000158  0E00               	movlw	0
  1279  00015A  0101               	movlb	1	; () banked
  1280  00015C  0101               	movlb	1	; () banked
  1281  00015E  6F83               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1282  000160  0E26               	movlw	38
  1283  000162  0101               	movlb	1	; () banked
  1284  000164  6F82               	movwf	OpenUSART@spbrg& (0+255),b
  1285  000166  0E7C               	movlw	124
  1286  000168  EC74  F009         	call	_OpenUSART
  1287                           
  1288                           ;main.c: 381: i2c_configure_master();
  1289  00016C  EC37  F00E         	call	_i2c_configure_master	;wreg free
  1290                           
  1291                           ;main.c: 383: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11111111);
  1292  000170  0E9F               	movlw	159
  1293  000172  ECFC  F00D         	call	_OpenTimer0
  1294                           
  1295                           ;main.c: 388: unsigned char msgCount;
  1296                           ;main.c: 398: LATBbits.LATB7 = 1;
  1297  000176  8E8A               	bsf	3978,7,c	;volatile
  1298  000178                     l4499:
  1299                           
  1300                           ;main.c: 419: block_on_To_msgqueues();
  1301  000178  EC2B  F008         	call	_block_on_To_msgqueues	;wreg free
  1302                           
  1303                           ;main.c: 426: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1304  00017C  0101               	movlb	1	; () banked
  1305  00017E  0E01               	movlw	high main@msgtype
  1306  000180  0101               	movlb	1	; () banked
  1307  000182  0101               	movlb	1	; () banked
  1308  000184  6F9B               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1309  000186  0101               	movlb	1	; () banked
  1310  000188  0EC2               	movlw	low main@msgtype
  1311  00018A  0101               	movlb	1	; () banked
  1312  00018C  0101               	movlb	1	; () banked
  1313  00018E  6F9A               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1314  000190  0101               	movlb	1	; () banked
  1315  000192  0E01               	movlw	high main@msgbuffer
  1316  000194  0101               	movlb	1	; () banked
  1317  000196  0101               	movlb	1	; () banked
  1318  000198  6F9D               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1319  00019A  0101               	movlb	1	; () banked
  1320  00019C  0EAE               	movlw	low main@msgbuffer
  1321  00019E  0101               	movlb	1	; () banked
  1322  0001A0  0101               	movlb	1	; () banked
  1323  0001A2  6F9C               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1324  0001A4  0E0A               	movlw	10
  1325  0001A6  ECCA  F00C         	call	_ToMainHigh_recvmsg
  1326  0001AA  0101               	movlb	1	; () banked
  1327  0001AC  0101               	movlb	1	; () banked
  1328  0001AE  6FC3               	movwf	main@length& (0+255),b
  1329                           
  1330                           ; BSR set to: 1
  1331                           ;main.c: 427: if (length < 0) {
  1332  0001B0  0101               	movlb	1	; () banked
  1333  0001B2  0101               	movlb	1	; () banked
  1334  0001B4  BFC3               	btfsc	main@length& (0+255),7,b
  1335  0001B6  D13D               	goto	l4559
  1336  0001B8  D129               	goto	l4557
  1337  0001BA                     l4507:
  1338                           
  1339                           ; BSR set to: 1
  1340                           ;main.c: 435: {
  1341                           ;main.c: 436: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1342  0001BA  0101               	movlb	1	; () banked
  1343  0001BC  0E01               	movlw	high main@t0thread_data
  1344  0001BE  0101               	movlb	1	; () banked
  1345  0001C0  0101               	movlb	1	; () banked
  1346  0001C2  6F9D               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1347  0001C4  0101               	movlb	1	; () banked
  1348  0001C6  0EC0               	movlw	low main@t0thread_data
  1349  0001C8  0101               	movlb	1	; () banked
  1350  0001CA  0101               	movlb	1	; () banked
  1351  0001CC  6F9C               	movwf	timer0_lthread@tptr& (0+255),b
  1352  0001CE  0101               	movlb	1	; () banked
  1353  0001D0  0101               	movlb	1	; () banked
  1354  0001D2  C1C2  F19E         	movff	main@msgtype,timer0_lthread@msgtype
  1355  0001D6  0101               	movlb	1	; () banked
  1356  0001D8  0101               	movlb	1	; () banked
  1357  0001DA  6B9F               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1358  0001DC  0101               	movlb	1	; () banked
  1359  0001DE  0101               	movlb	1	; () banked
  1360  0001E0  51C3               	movf	main@length& (0+255),w,b
  1361  0001E2  0101               	movlb	1	; () banked
  1362  0001E4  0101               	movlb	1	; () banked
  1363  0001E6  6FA0               	movwf	timer0_lthread@length& (0+255),b
  1364  0001E8  0101               	movlb	1	; () banked
  1365  0001EA  6BA1               	clrf	(timer0_lthread@length+1)& (0+255),b
  1366  0001EC  0101               	movlb	1	; () banked
  1367  0001EE  BFA0               	btfsc	timer0_lthread@length& (0+255),7,b
  1368  0001F0  07A1               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1369  0001F2  0101               	movlb	1	; () banked
  1370  0001F4  0E01               	movlw	high main@msgbuffer
  1371  0001F6  0101               	movlb	1	; () banked
  1372  0001F8  0101               	movlb	1	; () banked
  1373  0001FA  6FA3               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1374  0001FC  0101               	movlb	1	; () banked
  1375  0001FE  0EAE               	movlw	low main@msgbuffer
  1376  000200  0101               	movlb	1	; () banked
  1377  000202  0101               	movlb	1	; () banked
  1378  000204  6FA2               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1379  000206  ECF7  F00A         	call	_timer0_lthread	;wreg free
  1380                           
  1381                           ;main.c: 437: break;
  1382  00020A  D113               	goto	l4559
  1383  00020C                     l4509:
  1384                           
  1385                           ;main.c: 440: {
  1386                           ;main.c: 469: LATBbits.LATB6 = !LATBbits.LATB6;
  1387  00020C  BC8A               	btfsc	3978,6,c	;volatile
  1388  00020E  D002               	goto	u3510
  1389  000210  0E01               	movlw	1
  1390  000212  D001               	goto	u3516
  1391  000214                     u3510:
  1392  000214  0E00               	movlw	0
  1393  000216                     u3516:
  1394  000216  0101               	movlb	1	; () banked
  1395  000218  6FA6               	movwf	??_main& (0+255),b
  1396  00021A  0101               	movlb	1	; () banked
  1397  00021C  3BA6               	swapf	??_main& (0+255),f,b
  1398  00021E  47A6               	rlncf	??_main& (0+255),f,b
  1399  000220  47A6               	rlncf	??_main& (0+255),f,b
  1400  000222  508A               	movf	3978,w,c	;volatile
  1401  000224  0101               	movlb	1	; () banked
  1402  000226  19A6               	xorwf	??_main& (0+255),w,b
  1403  000228  0BBF               	andlw	-65
  1404  00022A  19A6               	xorwf	??_main& (0+255),w,b
  1405  00022C  6E8A               	movwf	3978,c	;volatile
  1406                           
  1407                           ; BSR set to: 1
  1408                           ;main.c: 474: i2cMstrMsgState = 2;
  1409  00022E  0101               	movlb	1	; () banked
  1410  000230  6FA6               	movwf	??_main& (0+255),b
  1411  000232  0E02               	movlw	2
  1412  000234  0101               	movlb	1	; () banked
  1413  000236  0101               	movlb	1	; () banked
  1414  000238  6F15               	movwf	_i2cMstrMsgState& (0+255),b
  1415  00023A  0101               	movlb	1	; () banked
  1416  00023C  51A6               	movf	??_main& (0+255),w,b
  1417                           
  1418                           ; BSR set to: 1
  1419                           ;main.c: 475: if ( msgbuffer[0] == 0x01 )
  1420  00023E  0101               	movlb	1	; () banked
  1421  000240  0101               	movlb	1	; () banked
  1422  000242  05AE               	decf	main@msgbuffer& (0+255),w,b
  1423  000244  A4D8               	btfss	status,2,c
  1424  000246  D004               	goto	l4517
  1425                           
  1426                           ; BSR set to: 1
  1427                           ;main.c: 476: movingtest = 1;
  1428  000248  0101               	movlb	1	; () banked
  1429  00024A  6FA6               	movwf	??_main& (0+255),b
  1430  00024C  0E01               	movlw	1
  1431  00024E  D009               	goto	L1
  1432  000250                     l4517:
  1433                           
  1434                           ; BSR set to: 1
  1435                           ;main.c: 477: else if( msgbuffer[0] == 0x05 )
  1436  000250  0101               	movlb	1	; () banked
  1437  000252  0101               	movlb	1	; () banked
  1438  000254  51AE               	movf	main@msgbuffer& (0+255),w,b
  1439  000256  0A05               	xorlw	5
  1440  000258  A4D8               	btfss	status,2,c
  1441  00025A  D008               	goto	l4521
  1442                           
  1443                           ; BSR set to: 1
  1444                           ;main.c: 478: movingtest = 0;
  1445  00025C  0101               	movlb	1	; () banked
  1446  00025E  6FA6               	movwf	??_main& (0+255),b
  1447  000260  0E00               	movlw	0
  1448  000262                     L1:
  1449  000262  0101               	movlb	1	; () banked
  1450  000264  0101               	movlb	1	; () banked
  1451  000266  6FB9               	movwf	main@movingtest& (0+255),b
  1452  000268  0101               	movlb	1	; () banked
  1453  00026A  51A6               	movf	??_main& (0+255),w,b
  1454  00026C                     l4521:
  1455                           
  1456                           ; BSR set to: 1
  1457                           ;main.c: 481: if ( msgbuffer[0] == 0x11 )
  1458  00026C  0101               	movlb	1	; () banked
  1459  00026E  0101               	movlb	1	; () banked
  1460  000270  51AE               	movf	main@msgbuffer& (0+255),w,b
  1461  000272  0A11               	xorlw	17
  1462  000274  A4D8               	btfss	status,2,c
  1463  000276  D014               	goto	l4525
  1464                           
  1465                           ; BSR set to: 1
  1466                           ;main.c: 482: i2c_master_recv(0x0A, 0x05, 0x4E);
  1467  000278  0101               	movlb	1	; () banked
  1468  00027A  6FA6               	movwf	??_main& (0+255),b
  1469  00027C  0E05               	movlw	5
  1470  00027E  0101               	movlb	1	; () banked
  1471  000280  0101               	movlb	1	; () banked
  1472  000282  6F82               	movwf	i2c_master_recv@data& (0+255),b
  1473  000284  0101               	movlb	1	; () banked
  1474  000286  51A6               	movf	??_main& (0+255),w,b
  1475  000288  0101               	movlb	1	; () banked
  1476  00028A  6FA7               	movwf	(??_main+1)& (0+255),b
  1477  00028C  0E4E               	movlw	78
  1478  00028E  0101               	movlb	1	; () banked
  1479  000290  0101               	movlb	1	; () banked
  1480  000292  6F83               	movwf	i2c_master_recv@slave_address& (0+255),b
  1481  000294  0101               	movlb	1	; () banked
  1482  000296  51A7               	movf	(??_main+1)& (0+255),w,b
  1483  000298  0E0A               	movlw	10
  1484  00029A  EC2B  F009         	call	_i2c_master_recv
  1485  00029E  D00D               	goto	l4527
  1486  0002A0                     l4525:
  1487                           
  1488                           ;main.c: 483: else
  1489                           ;main.c: 484: i2c_master_recv(0x0A, msgbuffer[0], 0x4F);
  1490  0002A0  C1AE  F182         	movff	main@msgbuffer,i2c_master_recv@data
  1491  0002A4  0101               	movlb	1	; () banked
  1492  0002A6  6FA6               	movwf	??_main& (0+255),b
  1493  0002A8  0E4F               	movlw	79
  1494  0002AA  0101               	movlb	1	; () banked
  1495  0002AC  0101               	movlb	1	; () banked
  1496  0002AE  6F83               	movwf	i2c_master_recv@slave_address& (0+255),b
  1497  0002B0  0101               	movlb	1	; () banked
  1498  0002B2  51A6               	movf	??_main& (0+255),w,b
  1499  0002B4  0E0A               	movlw	10
  1500  0002B6  EC2B  F009         	call	_i2c_master_recv
  1501  0002BA                     l4527:
  1502                           
  1503                           ;main.c: 488: msgCount = msgbuffer[1];
  1504  0002BA  C1AF  F1AB         	movff	main@msgbuffer+1,main@msgCount
  1505                           
  1506                           ;main.c: 499: break;
  1507  0002BE  D0B9               	goto	l4559
  1508  0002C0                     l386:
  1509                           
  1510                           ; BSR set to: 1
  1511                           ;main.c: 502: {
  1512                           ;main.c: 505: last_reg_recvd = msgbuffer[0];
  1513  0002C0  C1AE  F1A8         	movff	main@msgbuffer,main@last_reg_recvd
  1514                           
  1515                           ;main.c: 506: break;
  1516  0002C4  D0B6               	goto	l4559
  1517  0002C6                     l4529:
  1518                           
  1519                           ; BSR set to: 1
  1520                           ;main.c: 548: {
  1521                           ;main.c: 549: if ( i2cMstrMsgState == 1 ) {
  1522  0002C6  0101               	movlb	1	; () banked
  1523  0002C8  0101               	movlb	1	; () banked
  1524  0002CA  0515               	decf	_i2cMstrMsgState& (0+255),w,b
  1525  0002CC  A4D8               	btfss	status,2,c
  1526  0002CE  D086               	goto	l4553
  1527                           
  1528                           ; BSR set to: 1
  1529                           ;main.c: 559: int length = msgbuffer[0];
  1530  0002D0  0101               	movlb	1	; () banked
  1531  0002D2  0101               	movlb	1	; () banked
  1532  0002D4  C1AE  F1BC         	movff	main@msgbuffer,main@length_1453
  1533  0002D8  0101               	movlb	1	; () banked
  1534  0002DA  0101               	movlb	1	; () banked
  1535  0002DC  6BBD               	clrf	(main@length_1453+1)& (0+255),b
  1536                           
  1537                           ; BSR set to: 1
  1538                           ;main.c: 560: if ( length > 0 ) {
  1539  0002DE  0101               	movlb	1	; () banked
  1540  0002E0  0101               	movlb	1	; () banked
  1541  0002E2  51BD               	movf	(main@length_1453+1)& (0+255),w,b
  1542  0002E4  0A80               	xorlw	128
  1543  0002E6  0F80               	addlw	-128
  1544  0002E8  0E01               	movlw	1
  1545  0002EA  B4D8               	btfsc	status,2,c
  1546  0002EC  5DBC               	subwf	main@length_1453& (0+255),w,b
  1547  0002EE  A0D8               	btfss	status,0,c
  1548  0002F0  D0A0               	goto	l4559
  1549                           
  1550                           ; BSR set to: 1
  1551                           ;main.c: 561: int i;
  1552                           ;main.c: 562: int average;
  1553                           ;main.c: 563: for (i=0; i < length; i++)
  1554  0002F2  0E00               	movlw	0
  1555  0002F4  0101               	movlb	1	; () banked
  1556  0002F6  0101               	movlb	1	; () banked
  1557  0002F8  6FBB               	movwf	(main@i+1)& (0+255),b
  1558  0002FA  0E00               	movlw	0
  1559  0002FC  0101               	movlb	1	; () banked
  1560  0002FE  6FBA               	movwf	main@i& (0+255),b
  1561  000300  D01B               	goto	l4541
  1562  000302                     l4537:
  1563                           
  1564                           ; BSR set to: 1
  1565                           ;main.c: 564: average += msgbuffer[i];
  1566  000302  0101               	movlb	1	; () banked
  1567  000304  0EAE               	movlw	low main@msgbuffer
  1568  000306  0101               	movlb	1	; () banked
  1569  000308  0101               	movlb	1	; () banked
  1570  00030A  25BA               	addwf	main@i& (0+255),w,b
  1571  00030C  6ED9               	movwf	fsr2l,c
  1572  00030E  0101               	movlb	1	; () banked
  1573  000310  0E01               	movlw	high main@msgbuffer
  1574  000312  0101               	movlb	1	; () banked
  1575  000314  0101               	movlb	1	; () banked
  1576  000316  21BB               	addwfc	(main@i+1)& (0+255),w,b
  1577  000318  6EDA               	movwf	fsr2h,c
  1578  00031A  50DF               	movf	indf2,w,c
  1579  00031C  0101               	movlb	1	; () banked
  1580  00031E  6FA6               	movwf	??_main& (0+255),b
  1581  000320  0101               	movlb	1	; () banked
  1582  000322  51A6               	movf	??_main& (0+255),w,b
  1583  000324  0101               	movlb	1	; () banked
  1584  000326  0101               	movlb	1	; () banked
  1585  000328  27AC               	addwf	main@average& (0+255),f,b
  1586  00032A  0E00               	movlw	0
  1587  00032C  0101               	movlb	1	; () banked
  1588  00032E  23AD               	addwfc	(main@average+1)& (0+255),f,b
  1589                           
  1590                           ; BSR set to: 1
  1591  000330  0101               	movlb	1	; () banked
  1592  000332  0101               	movlb	1	; () banked
  1593  000334  4BBA               	infsnz	main@i& (0+255),f,b
  1594  000336  2BBB               	incf	(main@i+1)& (0+255),f,b
  1595  000338                     l4541:
  1596                           
  1597                           ; BSR set to: 1
  1598  000338  0101               	movlb	1	; () banked
  1599  00033A  0101               	movlb	1	; () banked
  1600  00033C  51BB               	movf	(main@i+1)& (0+255),w,b
  1601  00033E  0A80               	xorlw	128
  1602  000340  0101               	movlb	1	; () banked
  1603  000342  6FA6               	movwf	??_main& (0+255),b
  1604  000344  0101               	movlb	1	; () banked
  1605  000346  51BC               	movf	main@length_1453& (0+255),w,b
  1606  000348  0101               	movlb	1	; () banked
  1607  00034A  0101               	movlb	1	; () banked
  1608  00034C  5DBA               	subwf	main@i& (0+255),w,b
  1609  00034E  0101               	movlb	1	; () banked
  1610  000350  0101               	movlb	1	; () banked
  1611  000352  51BD               	movf	(main@length_1453+1)& (0+255),w,b
  1612  000354  0A80               	xorlw	128
  1613  000356  0101               	movlb	1	; () banked
  1614  000358  59A6               	subwfb	??_main& (0+255),w,b
  1615  00035A  A0D8               	btfss	status,0,c
  1616  00035C  D7D2               	goto	l4537
  1617                           
  1618                           ; BSR set to: 1
  1619                           ;main.c: 565: average = average / length;
  1620                           
  1621                           ; BSR set to: 1
  1622  00035E  C1AC  F182         	movff	main@average,___awdiv@dividend
  1623  000362  C1AD  F183         	movff	main@average+1,___awdiv@dividend+1
  1624  000366  C1BC  F184         	movff	main@length_1453,___awdiv@divisor
  1625  00036A  C1BD  F185         	movff	main@length_1453+1,___awdiv@divisor+1
  1626  00036E  EC73  F005         	call	___awdiv	;wreg free
  1627  000372  0101               	movlb	1	; () banked
  1628  000374  C182  F1AC         	movff	?___awdiv,main@average
  1629  000378  0101               	movlb	1	; () banked
  1630  00037A  C183  F1AD         	movff	?___awdiv+1,main@average+1
  1631                           
  1632                           ; BSR set to: 1
  1633                           ;main.c: 566: if ( msgbuffer[1] < 30 ) {
  1634  00037E  0E1E               	movlw	30
  1635  000380  0101               	movlb	1	; () banked
  1636  000382  0101               	movlb	1	; () banked
  1637  000384  5DAF               	subwf	(main@msgbuffer+1)& (0+255),w,b
  1638  000386  B0D8               	btfsc	status,0,c
  1639  000388  D054               	goto	l4559
  1640                           
  1641                           ; BSR set to: 1
  1642                           ;main.c: 567: if ( movingtest == 1) {
  1643  00038A  0101               	movlb	1	; () banked
  1644  00038C  0101               	movlb	1	; () banked
  1645  00038E  05B9               	decf	main@movingtest& (0+255),w,b
  1646  000390  A4D8               	btfss	status,2,c
  1647  000392  D04F               	goto	l4559
  1648                           
  1649                           ; BSR set to: 1
  1650                           ;main.c: 568: i2cMstrMsgState = 2;
  1651  000394  0101               	movlb	1	; () banked
  1652  000396  6FA6               	movwf	??_main& (0+255),b
  1653  000398  0E02               	movlw	2
  1654  00039A  0101               	movlb	1	; () banked
  1655  00039C  0101               	movlb	1	; () banked
  1656  00039E  6F15               	movwf	_i2cMstrMsgState& (0+255),b
  1657  0003A0  0101               	movlb	1	; () banked
  1658  0003A2  51A6               	movf	??_main& (0+255),w,b
  1659                           
  1660                           ;main.c: 569: movingtest = 0;
  1661  0003A4  0101               	movlb	1	; () banked
  1662  0003A6  6FA6               	movwf	??_main& (0+255),b
  1663  0003A8  0E00               	movlw	0
  1664  0003AA  0101               	movlb	1	; () banked
  1665  0003AC  0101               	movlb	1	; () banked
  1666  0003AE  6FB9               	movwf	main@movingtest& (0+255),b
  1667  0003B0  0101               	movlb	1	; () banked
  1668  0003B2  51A6               	movf	??_main& (0+255),w,b
  1669                           
  1670                           ; BSR set to: 1
  1671                           ;main.c: 570: i2c_master_recv(0x0A, 0x05, 0x4F);
  1672  0003B4  0101               	movlb	1	; () banked
  1673  0003B6  6FA6               	movwf	??_main& (0+255),b
  1674  0003B8  0E05               	movlw	5
  1675  0003BA  0101               	movlb	1	; () banked
  1676  0003BC  0101               	movlb	1	; () banked
  1677  0003BE  6F82               	movwf	i2c_master_recv@data& (0+255),b
  1678  0003C0  0101               	movlb	1	; () banked
  1679  0003C2  51A6               	movf	??_main& (0+255),w,b
  1680  0003C4  0101               	movlb	1	; () banked
  1681  0003C6  6FA7               	movwf	(??_main+1)& (0+255),b
  1682  0003C8  0E4F               	movlw	79
  1683  0003CA  0101               	movlb	1	; () banked
  1684  0003CC  0101               	movlb	1	; () banked
  1685  0003CE  6F83               	movwf	i2c_master_recv@slave_address& (0+255),b
  1686  0003D0  0101               	movlb	1	; () banked
  1687  0003D2  51A7               	movf	(??_main+1)& (0+255),w,b
  1688  0003D4  0E0A               	movlw	10
  1689  0003D6  EC2B  F009         	call	_i2c_master_recv
  1690  0003DA  D02B               	goto	l4559
  1691  0003DC                     l4553:
  1692                           
  1693                           ;main.c: 575: ToMainLow_sendmsg(length, 47, msgbuffer );
  1694  0003DC  0101               	movlb	1	; () banked
  1695  0003DE  6FA6               	movwf	??_main& (0+255),b
  1696  0003E0  0E2F               	movlw	47
  1697  0003E2  0101               	movlb	1	; () banked
  1698  0003E4  0101               	movlb	1	; () banked
  1699  0003E6  6F98               	movwf	ToMainLow_sendmsg@msgtype& (0+255),b
  1700  0003E8  0101               	movlb	1	; () banked
  1701  0003EA  51A6               	movf	??_main& (0+255),w,b
  1702  0003EC  0101               	movlb	1	; () banked
  1703  0003EE  0E01               	movlw	high main@msgbuffer
  1704  0003F0  0101               	movlb	1	; () banked
  1705  0003F2  0101               	movlb	1	; () banked
  1706  0003F4  6F9A               	movwf	(ToMainLow_sendmsg@data+1)& (0+255),b
  1707  0003F6  0101               	movlb	1	; () banked
  1708  0003F8  0EAE               	movlw	low main@msgbuffer
  1709  0003FA  0101               	movlb	1	; () banked
  1710  0003FC  0101               	movlb	1	; () banked
  1711  0003FE  6F99               	movwf	ToMainLow_sendmsg@data& (0+255),b
  1712  000400  0101               	movlb	1	; () banked
  1713  000402  0101               	movlb	1	; () banked
  1714  000404  51C3               	movf	main@length& (0+255),w,b
  1715  000406  EC7B  F00D         	call	_ToMainLow_sendmsg
  1716  00040A  D013               	goto	l4559
  1717  00040C                     l4557:
  1718  00040C  0101               	movlb	1	; () banked
  1719  00040E  0101               	movlb	1	; () banked
  1720  000410  51C2               	movf	main@msgtype& (0+255),w,b
  1721                           
  1722                           ; Switch size 1, requested type "space"
  1723                           ; Number of cases is 6, Range of values is 10 to 55
  1724                           ; switch strategies available:
  1725                           ; Name         Instructions Cycles
  1726                           ; simple_byte           19    10 (average)
  1727                           ;	Chosen strategy is simple_byte
  1728  000412  0A0A               	xorlw	10	; case 10
  1729  000414  B4D8               	btfsc	status,2,c
  1730  000416  D6D1               	goto	l4507
  1731  000418  0A22               	xorlw	34	; case 40
  1732  00041A  B4D8               	btfsc	status,2,c
  1733  00041C  D6F7               	goto	l4509
  1734  00041E  0A01               	xorlw	1	; case 41
  1735  000420  B4D8               	btfsc	status,2,c
  1736  000422  D74E               	goto	l386
  1737  000424  0A03               	xorlw	3	; case 42
  1738  000426  B4D8               	btfsc	status,2,c
  1739  000428  D004               	goto	l4559
  1740  00042A  0A07               	xorlw	7	; case 45
  1741  00042C  B4D8               	btfsc	status,2,c
  1742  00042E  D74B               	goto	l4529
  1743  000430  0A1A               	xorlw	26	; case 55
  1744  000432                     l4559:
  1745                           
  1746                           ;main.c: 599: }
  1747                           ;main.c: 602: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1748  000432  0101               	movlb	1	; () banked
  1749  000434  0E01               	movlw	high main@msgtype
  1750  000436  0101               	movlb	1	; () banked
  1751  000438  0101               	movlb	1	; () banked
  1752  00043A  6F9B               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1753  00043C  0101               	movlb	1	; () banked
  1754  00043E  0EC2               	movlw	low main@msgtype
  1755  000440  0101               	movlb	1	; () banked
  1756  000442  0101               	movlb	1	; () banked
  1757  000444  6F9A               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1758  000446  0101               	movlb	1	; () banked
  1759  000448  0E01               	movlw	high main@msgbuffer
  1760  00044A  0101               	movlb	1	; () banked
  1761  00044C  0101               	movlb	1	; () banked
  1762  00044E  6F9D               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1763  000450  0101               	movlb	1	; () banked
  1764  000452  0EAE               	movlw	low main@msgbuffer
  1765  000454  0101               	movlb	1	; () banked
  1766  000456  0101               	movlb	1	; () banked
  1767  000458  6F9C               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1768  00045A  0E0A               	movlw	10
  1769  00045C  ECA9  F00C         	call	_ToMainLow_recvmsg
  1770  000460  0101               	movlb	1	; () banked
  1771  000462  0101               	movlb	1	; () banked
  1772  000464  6FC3               	movwf	main@length& (0+255),b
  1773                           
  1774                           ; BSR set to: 1
  1775                           ;main.c: 603: if (length < 0) {
  1776  000466  0101               	movlb	1	; () banked
  1777  000468  0101               	movlb	1	; () banked
  1778  00046A  BFC3               	btfsc	main@length& (0+255),7,b
  1779  00046C  D685               	goto	l4499
  1780  00046E  D06B               	goto	l4573
  1781  000470                     l4565:
  1782                           
  1783                           ; BSR set to: 1
  1784                           ;main.c: 611: {
  1785                           ;main.c: 612: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1786  000470  0101               	movlb	1	; () banked
  1787  000472  0E01               	movlw	high main@t1thread_data
  1788  000474  0101               	movlb	1	; () banked
  1789  000476  0101               	movlb	1	; () banked
  1790  000478  6F9D               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1791  00047A  0101               	movlb	1	; () banked
  1792  00047C  0EBE               	movlw	low main@t1thread_data
  1793  00047E  0101               	movlb	1	; () banked
  1794  000480  0101               	movlb	1	; () banked
  1795  000482  6F9C               	movwf	timer1_lthread@tptr& (0+255),b
  1796  000484  0101               	movlb	1	; () banked
  1797  000486  0101               	movlb	1	; () banked
  1798  000488  C1C2  F19E         	movff	main@msgtype,timer1_lthread@msgtype
  1799  00048C  0101               	movlb	1	; () banked
  1800  00048E  0101               	movlb	1	; () banked
  1801  000490  6B9F               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1802  000492  0101               	movlb	1	; () banked
  1803  000494  0101               	movlb	1	; () banked
  1804  000496  51C3               	movf	main@length& (0+255),w,b
  1805  000498  0101               	movlb	1	; () banked
  1806  00049A  0101               	movlb	1	; () banked
  1807  00049C  6FA0               	movwf	timer1_lthread@length& (0+255),b
  1808  00049E  0101               	movlb	1	; () banked
  1809  0004A0  6BA1               	clrf	(timer1_lthread@length+1)& (0+255),b
  1810  0004A2  0101               	movlb	1	; () banked
  1811  0004A4  BFA0               	btfsc	timer1_lthread@length& (0+255),7,b
  1812  0004A6  07A1               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1813  0004A8  0101               	movlb	1	; () banked
  1814  0004AA  0E01               	movlw	high main@msgbuffer
  1815  0004AC  0101               	movlb	1	; () banked
  1816  0004AE  0101               	movlb	1	; () banked
  1817  0004B0  6FA3               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1818  0004B2  0101               	movlb	1	; () banked
  1819  0004B4  0EAE               	movlw	low main@msgbuffer
  1820  0004B6  0101               	movlb	1	; () banked
  1821  0004B8  0101               	movlb	1	; () banked
  1822  0004BA  6FA2               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1823  0004BC  ECBE  F00A         	call	_timer1_lthread	;wreg free
  1824                           
  1825                           ;main.c: 613: break;
  1826  0004C0  D65B               	goto	l4499
  1827  0004C2                     l4567:
  1828                           
  1829                           ;main.c: 616: case 47:
  1830                           ;main.c: 617: {
  1831                           ;main.c: 624: uart_sendthread(length, msgbuffer,msgCount);
  1832  0004C2  0101               	movlb	1	; () banked
  1833  0004C4  0101               	movlb	1	; () banked
  1834  0004C6  51C3               	movf	main@length& (0+255),w,b
  1835  0004C8  0101               	movlb	1	; () banked
  1836  0004CA  0101               	movlb	1	; () banked
  1837  0004CC  6F8A               	movwf	uart_sendthread@length& (0+255),b
  1838  0004CE  0101               	movlb	1	; () banked
  1839  0004D0  6B8B               	clrf	(uart_sendthread@length+1)& (0+255),b
  1840  0004D2  0101               	movlb	1	; () banked
  1841  0004D4  BF8A               	btfsc	uart_sendthread@length& (0+255),7,b
  1842  0004D6  078B               	decf	(uart_sendthread@length+1)& (0+255),f,b
  1843  0004D8  0101               	movlb	1	; () banked
  1844  0004DA  0E01               	movlw	high main@msgbuffer
  1845  0004DC  0101               	movlb	1	; () banked
  1846  0004DE  0101               	movlb	1	; () banked
  1847  0004E0  6F8D               	movwf	(uart_sendthread@msgbuffer+1)& (0+255),b
  1848  0004E2  0101               	movlb	1	; () banked
  1849  0004E4  0EAE               	movlw	low main@msgbuffer
  1850  0004E6  0101               	movlb	1	; () banked
  1851  0004E8  0101               	movlb	1	; () banked
  1852  0004EA  6F8C               	movwf	uart_sendthread@msgbuffer& (0+255),b
  1853  0004EC  C1AB  F18E         	movff	main@msgCount,uart_sendthread@count
  1854  0004F0  ECD9  F008         	call	_uart_sendthread	;wreg free
  1855  0004F4                     l4569:
  1856                           
  1857                           ;main.c: 635: {
  1858                           ;main.c: 636: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1859  0004F4  0101               	movlb	1	; () banked
  1860  0004F6  0E01               	movlw	high main@uthread_data
  1861  0004F8  0101               	movlb	1	; () banked
  1862  0004FA  0101               	movlb	1	; () banked
  1863  0004FC  6F9D               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1864  0004FE  0101               	movlb	1	; () banked
  1865  000500  0EA9               	movlw	low main@uthread_data
  1866  000502  0101               	movlb	1	; () banked
  1867  000504  0101               	movlb	1	; () banked
  1868  000506  6F9C               	movwf	uart_lthread@uptr& (0+255),b
  1869  000508  0101               	movlb	1	; () banked
  1870  00050A  0101               	movlb	1	; () banked
  1871  00050C  C1C2  F19E         	movff	main@msgtype,uart_lthread@msgtype
  1872  000510  0101               	movlb	1	; () banked
  1873  000512  0101               	movlb	1	; () banked
  1874  000514  6B9F               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1875  000516  0101               	movlb	1	; () banked
  1876  000518  0101               	movlb	1	; () banked
  1877  00051A  51C3               	movf	main@length& (0+255),w,b
  1878  00051C  0101               	movlb	1	; () banked
  1879  00051E  0101               	movlb	1	; () banked
  1880  000520  6FA0               	movwf	uart_lthread@length& (0+255),b
  1881  000522  0101               	movlb	1	; () banked
  1882  000524  6BA1               	clrf	(uart_lthread@length+1)& (0+255),b
  1883  000526  0101               	movlb	1	; () banked
  1884  000528  BFA0               	btfsc	uart_lthread@length& (0+255),7,b
  1885  00052A  07A1               	decf	(uart_lthread@length+1)& (0+255),f,b
  1886  00052C  0101               	movlb	1	; () banked
  1887  00052E  0E01               	movlw	high main@msgbuffer
  1888  000530  0101               	movlb	1	; () banked
  1889  000532  0101               	movlb	1	; () banked
  1890  000534  6FA3               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1891  000536  0101               	movlb	1	; () banked
  1892  000538  0EAE               	movlw	low main@msgbuffer
  1893  00053A  0101               	movlb	1	; () banked
  1894  00053C  0101               	movlb	1	; () banked
  1895  00053E  6FA2               	movwf	uart_lthread@msgbuffer& (0+255),b
  1896  000540  EC69  F00B         	call	_uart_lthread	;wreg free
  1897                           
  1898                           ;main.c: 637: break;
  1899  000544  D619               	goto	l4499
  1900  000546                     l4573:
  1901  000546  0101               	movlb	1	; () banked
  1902  000548  0101               	movlb	1	; () banked
  1903  00054A  51C2               	movf	main@msgtype& (0+255),w,b
  1904                           
  1905                           ; Switch size 1, requested type "space"
  1906                           ; Number of cases is 4, Range of values is 11 to 47
  1907                           ; switch strategies available:
  1908                           ; Name         Instructions Cycles
  1909                           ; simple_byte           13     7 (average)
  1910                           ;	Chosen strategy is simple_byte
  1911  00054C  0A0B               	xorlw	11	; case 11
  1912  00054E  B4D8               	btfsc	status,2,c
  1913  000550  D78F               	goto	l4565
  1914  000552  0A15               	xorlw	21	; case 30
  1915  000554  B4D8               	btfsc	status,2,c
  1916  000556  D7B5               	goto	l4567
  1917  000558  0A01               	xorlw	1	; case 31
  1918  00055A  B4D8               	btfsc	status,2,c
  1919  00055C  D7CB               	goto	l4569
  1920  00055E  0A30               	xorlw	48	; case 47
  1921  000560  B4D8               	btfsc	status,2,c
  1922  000562  D7AF               	goto	l4567
  1923  000564  D609               	goto	l4499
  1924  000566                     __end_of_main:
  1925                           	opt stack 0
  1926                           tblptru	equ	0xFF8
  1927                           tblptrh	equ	0xFF7
  1928                           tblptrl	equ	0xFF6
  1929                           tablat	equ	0xFF5
  1930                           postinc0	equ	0xFEE
  1931                           wreg	equ	0xFE8
  1932                           postdec1	equ	0xFE5
  1933                           fsr1l	equ	0xFE1
  1934                           indf2	equ	0xFDF
  1935                           fsr2h	equ	0xFDA
  1936                           fsr2l	equ	0xFD9
  1937                           status	equ	0xFD8
  1938                           
  1939 ;; *************** function _uart_sendthread *****************
  1940 ;; Defined at:
  1941 ;;		line 39 in file "../src/uart_thread.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;  length          2    8[BANK1 ] int 
  1944 ;;  msgbuffer       2   10[BANK1 ] PTR unsigned char 
  1945 ;;		 -> main@msgbuffer(11), 
  1946 ;;  count           1   12[BANK1 ] unsigned char 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  buf            11   15[BANK1 ] unsigned char [11]
  1949 ;;  i               2   26[BANK1 ] int 
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  2    8[BANK1 ] int 
  1952 ;; Registers used:
  1953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1959 ;;      Params:         0       0       5       0       0
  1960 ;;      Locals:         0       0      13       0       0
  1961 ;;      Temps:          0       0       2       0       0
  1962 ;;      Totals:         0       0      20       0       0
  1963 ;;Total ram usage:       20 bytes
  1964 ;; Hardware stack levels used:    1
  1965 ;; Hardware stack levels required when called:   12
  1966 ;; This function calls:
  1967 ;;		_uart_send_data
  1968 ;; This function is called by:
  1969 ;;		_main
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text1
  1974  0011B2                     __ptext1:
  1975                           	opt stack 0
  1976  0011B2                     _uart_sendthread:
  1977                           	opt stack 18
  1978                           
  1979                           ;uart_thread.c: 40: unsigned char buf[10+1];
  1980                           ;uart_thread.c: 43: buf[0] = count;
  1981                           
  1982                           ; BSR set to: 1
  1983                           ;incstack = 0
  1984  0011B2  C18E  F191         	movff	uart_sendthread@count,uart_sendthread@buf
  1985                           
  1986                           ;uart_thread.c: 46: int i;
  1987                           ;uart_thread.c: 47: for (i=0; i < 10; i++) {
  1988  0011B6  0E00               	movlw	0
  1989  0011B8  0101               	movlb	1	; () banked
  1990  0011BA  0101               	movlb	1	; () banked
  1991  0011BC  6F9D               	movwf	(uart_sendthread@i+1)& (0+255),b
  1992  0011BE  0E00               	movlw	0
  1993  0011C0  0101               	movlb	1	; () banked
  1994  0011C2  6F9C               	movwf	uart_sendthread@i& (0+255),b
  1995  0011C4                     
  1996                           ; BSR set to: 1
  1997  0011C4  0101               	movlb	1	; () banked
  1998  0011C6  0101               	movlb	1	; () banked
  1999  0011C8  519D               	movf	(uart_sendthread@i+1)& (0+255),w,b
  2000  0011CA  0A80               	xorlw	128
  2001  0011CC  0F80               	addlw	-128
  2002  0011CE  0E0A               	movlw	10
  2003  0011D0  B4D8               	btfsc	status,2,c
  2004  0011D2  5D9C               	subwf	uart_sendthread@i& (0+255),w,b
  2005  0011D4  B0D8               	btfsc	status,0,c
  2006  0011D6  D02B               	goto	l4053
  2007                           
  2008                           ; BSR set to: 1
  2009                           ;uart_thread.c: 48: buf[i+1] = msgbuffer[i];
  2010                           
  2011                           ; BSR set to: 1
  2012                           
  2013                           ; BSR set to: 1
  2014  0011D8  0101               	movlb	1	; () banked
  2015  0011DA  0101               	movlb	1	; () banked
  2016  0011DC  519C               	movf	uart_sendthread@i& (0+255),w,b
  2017  0011DE  0101               	movlb	1	; () banked
  2018  0011E0  0101               	movlb	1	; () banked
  2019  0011E2  258C               	addwf	uart_sendthread@msgbuffer& (0+255),w,b
  2020  0011E4  6ED9               	movwf	fsr2l,c
  2021  0011E6  0101               	movlb	1	; () banked
  2022  0011E8  0101               	movlb	1	; () banked
  2023  0011EA  519D               	movf	(uart_sendthread@i+1)& (0+255),w,b
  2024  0011EC  0101               	movlb	1	; () banked
  2025  0011EE  0101               	movlb	1	; () banked
  2026  0011F0  218D               	addwfc	(uart_sendthread@msgbuffer+1)& (0+255),w,b
  2027  0011F2  6EDA               	movwf	fsr2h,c
  2028  0011F4  0E01               	movlw	1
  2029  0011F6  0101               	movlb	1	; () banked
  2030  0011F8  0101               	movlb	1	; () banked
  2031  0011FA  259C               	addwf	uart_sendthread@i& (0+255),w,b
  2032  0011FC  0101               	movlb	1	; () banked
  2033  0011FE  6F8F               	movwf	??_uart_sendthread& (0+255),b
  2034  001200  0E00               	movlw	0
  2035  001202  0101               	movlb	1	; () banked
  2036  001204  0101               	movlb	1	; () banked
  2037  001206  219D               	addwfc	(uart_sendthread@i+1)& (0+255),w,b
  2038  001208  0101               	movlb	1	; () banked
  2039  00120A  6F90               	movwf	(??_uart_sendthread+1)& (0+255),b
  2040  00120C  0101               	movlb	1	; () banked
  2041  00120E  0E91               	movlw	low uart_sendthread@buf
  2042  001210  0101               	movlb	1	; () banked
  2043  001212  258F               	addwf	??_uart_sendthread& (0+255),w,b
  2044  001214  6EE1               	movwf	fsr1l,c
  2045  001216  0101               	movlb	1	; () banked
  2046  001218  0E01               	movlw	high uart_sendthread@buf
  2047  00121A  0101               	movlb	1	; () banked
  2048  00121C  2190               	addwfc	(??_uart_sendthread+1)& (0+255),w,b
  2049  00121E  6EE2               	movwf	fsr1h,c
  2050  001220  CFDF FFE7          	movff	indf2,indf1
  2051                           
  2052                           ; BSR set to: 1
  2053  001224  0101               	movlb	1	; () banked
  2054  001226  0101               	movlb	1	; () banked
  2055  001228  4B9C               	infsnz	uart_sendthread@i& (0+255),f,b
  2056  00122A  2B9D               	incf	(uart_sendthread@i+1)& (0+255),f,b
  2057  00122C  D7CB               	goto	L2
  2058  00122E                     l4053:
  2059                           
  2060                           ; BSR set to: 1
  2061                           ;uart_thread.c: 49: }
  2062                           ;uart_thread.c: 52: uart_send_data(buf,10+1);
  2063  00122E  0101               	movlb	1	; () banked
  2064  001230  0E01               	movlw	high uart_sendthread@buf
  2065  001232  0101               	movlb	1	; () banked
  2066  001234  0101               	movlb	1	; () banked
  2067  001236  6F83               	movwf	(uart_send_data@data+1)& (0+255),b
  2068  001238  0101               	movlb	1	; () banked
  2069  00123A  0E91               	movlw	low uart_sendthread@buf
  2070  00123C  0101               	movlb	1	; () banked
  2071  00123E  0101               	movlb	1	; () banked
  2072  001240  6F82               	movwf	uart_send_data@data& (0+255),b
  2073  001242  0E00               	movlw	0
  2074  001244  0101               	movlb	1	; () banked
  2075  001246  0101               	movlb	1	; () banked
  2076  001248  6F85               	movwf	(uart_send_data@size+1)& (0+255),b
  2077  00124A  0E0B               	movlw	11
  2078  00124C  0101               	movlb	1	; () banked
  2079  00124E  6F84               	movwf	uart_send_data@size& (0+255),b
  2080  001250  ECAD  F007         	call	_uart_send_data	;wreg free
  2081  001254  0012               	return	
  2082  001256                     __end_of_uart_sendthread:
  2083                           	opt stack 0
  2084                           tblptru	equ	0xFF8
  2085                           tblptrh	equ	0xFF7
  2086                           tblptrl	equ	0xFF6
  2087                           tablat	equ	0xFF5
  2088                           postinc0	equ	0xFEE
  2089                           wreg	equ	0xFE8
  2090                           indf1	equ	0xFE7
  2091                           postdec1	equ	0xFE5
  2092                           fsr1h	equ	0xFE2
  2093                           fsr1l	equ	0xFE1
  2094                           indf2	equ	0xFDF
  2095                           fsr2h	equ	0xFDA
  2096                           fsr2l	equ	0xFD9
  2097                           status	equ	0xFD8
  2098                           
  2099 ;; *************** function _uart_send_data *****************
  2100 ;; Defined at:
  2101 ;;		line 171 in file "../src/my_uart.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  data            2    0[BANK1 ] PTR unsigned char 
  2104 ;;		 -> right2(1), left2(1), back(2), right(2), 
  2105 ;;		 -> forwardHalf(2), left(2), stop(1), forwardSlow(2), 
  2106 ;;		 -> uart_sendthread@buf(11), 
  2107 ;;  size            2    2[BANK1 ] int 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  i               2    6[BANK1 ] int 
  2110 ;; Return value:  Size  Location     Type
  2111 ;;		None               void
  2112 ;; Registers used:
  2113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2119 ;;      Params:         0       0       4       0       0
  2120 ;;      Locals:         0       0       2       0       0
  2121 ;;      Temps:          0       0       2       0       0
  2122 ;;      Totals:         0       0       8       0       0
  2123 ;;Total ram usage:        8 bytes
  2124 ;; Hardware stack levels used:    1
  2125 ;; Hardware stack levels required when called:   11
  2126 ;; This function calls:
  2127 ;;		Nothing
  2128 ;; This function is called by:
  2129 ;;		_uart_sendthread
  2130 ;;		_motor_encode_lthread
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text2
  2135  000F5A                     __ptext2:
  2136                           	opt stack 0
  2137  000F5A                     _uart_send_data:
  2138                           	opt stack 18
  2139                           
  2140                           ;my_uart.c: 181: uc_ptr->sendBuffer[0] = 0x2B;
  2141                           
  2142                           ;incstack = 0
  2143  000F5A  EE20 F010          	lfsr	2,16
  2144  000F5E  5061               	movf	_uc_ptr,w,c
  2145  000F60  26D9               	addwf	fsr2l,f,c
  2146  000F62  5062               	movf	_uc_ptr+1,w,c
  2147  000F64  22DA               	addwfc	fsr2h,f,c
  2148  000F66  0E2B               	movlw	43
  2149  000F68  6EDF               	movwf	indf2,c
  2150                           
  2151                           ;my_uart.c: 182: uc_ptr->sendBuffer[1] = 0x9F;
  2152  000F6A  EE20 F011          	lfsr	2,17
  2153  000F6E  5061               	movf	_uc_ptr,w,c
  2154  000F70  26D9               	addwf	fsr2l,f,c
  2155  000F72  5062               	movf	_uc_ptr+1,w,c
  2156  000F74  22DA               	addwfc	fsr2h,f,c
  2157  000F76  0E9F               	movlw	159
  2158  000F78  6EDF               	movwf	indf2,c
  2159                           
  2160                           ;my_uart.c: 185: int i = 0;
  2161  000F7A  0E00               	movlw	0
  2162  000F7C  0101               	movlb	1	; () banked
  2163  000F7E  0101               	movlb	1	; () banked
  2164  000F80  6F89               	movwf	(uart_send_data@i+1)& (0+255),b
  2165  000F82  0E00               	movlw	0
  2166  000F84  0101               	movlb	1	; () banked
  2167  000F86  6F88               	movwf	uart_send_data@i& (0+255),b
  2168  000F88  D028               	goto	l4063
  2169  000F8A                     l4059:
  2170                           
  2171                           ; BSR set to: 1
  2172                           ;my_uart.c: 187: uc_ptr->sendBuffer[i+2] = data[i];
  2173  000F8A  0101               	movlb	1	; () banked
  2174  000F8C  0101               	movlb	1	; () banked
  2175  000F8E  5188               	movf	uart_send_data@i& (0+255),w,b
  2176  000F90  0101               	movlb	1	; () banked
  2177  000F92  0101               	movlb	1	; () banked
  2178  000F94  2582               	addwf	uart_send_data@data& (0+255),w,b
  2179  000F96  6ED9               	movwf	fsr2l,c
  2180  000F98  0101               	movlb	1	; () banked
  2181  000F9A  0101               	movlb	1	; () banked
  2182  000F9C  5189               	movf	(uart_send_data@i+1)& (0+255),w,b
  2183  000F9E  0101               	movlb	1	; () banked
  2184  000FA0  0101               	movlb	1	; () banked
  2185  000FA2  2183               	addwfc	(uart_send_data@data+1)& (0+255),w,b
  2186  000FA4  6EDA               	movwf	fsr2h,c
  2187  000FA6  0E12               	movlw	18
  2188  000FA8  0101               	movlb	1	; () banked
  2189  000FAA  0101               	movlb	1	; () banked
  2190  000FAC  2588               	addwf	uart_send_data@i& (0+255),w,b
  2191  000FAE  0101               	movlb	1	; () banked
  2192  000FB0  6F86               	movwf	??_uart_send_data& (0+255),b
  2193  000FB2  0E00               	movlw	0
  2194  000FB4  0101               	movlb	1	; () banked
  2195  000FB6  0101               	movlb	1	; () banked
  2196  000FB8  2189               	addwfc	(uart_send_data@i+1)& (0+255),w,b
  2197  000FBA  0101               	movlb	1	; () banked
  2198  000FBC  6F87               	movwf	(??_uart_send_data+1)& (0+255),b
  2199  000FBE  0101               	movlb	1	; () banked
  2200  000FC0  5186               	movf	??_uart_send_data& (0+255),w,b
  2201  000FC2  2461               	addwf	_uc_ptr,w,c
  2202  000FC4  6EE1               	movwf	fsr1l,c
  2203  000FC6  0101               	movlb	1	; () banked
  2204  000FC8  5187               	movf	(??_uart_send_data+1)& (0+255),w,b
  2205  000FCA  2062               	addwfc	_uc_ptr+1,w,c
  2206  000FCC  6EE2               	movwf	fsr1h,c
  2207  000FCE  CFDF FFE7          	movff	indf2,indf1
  2208                           
  2209                           ; BSR set to: 1
  2210  000FD2  0101               	movlb	1	; () banked
  2211  000FD4  0101               	movlb	1	; () banked
  2212  000FD6  4B88               	infsnz	uart_send_data@i& (0+255),f,b
  2213  000FD8  2B89               	incf	(uart_send_data@i+1)& (0+255),f,b
  2214  000FDA                     l4063:
  2215                           
  2216                           ; BSR set to: 1
  2217  000FDA  0101               	movlb	1	; () banked
  2218  000FDC  0101               	movlb	1	; () banked
  2219  000FDE  5189               	movf	(uart_send_data@i+1)& (0+255),w,b
  2220  000FE0  0A80               	xorlw	128
  2221  000FE2  0101               	movlb	1	; () banked
  2222  000FE4  6F86               	movwf	??_uart_send_data& (0+255),b
  2223  000FE6  0101               	movlb	1	; () banked
  2224  000FE8  5184               	movf	uart_send_data@size& (0+255),w,b
  2225  000FEA  0101               	movlb	1	; () banked
  2226  000FEC  0101               	movlb	1	; () banked
  2227  000FEE  5D88               	subwf	uart_send_data@i& (0+255),w,b
  2228  000FF0  0101               	movlb	1	; () banked
  2229  000FF2  0101               	movlb	1	; () banked
  2230  000FF4  5185               	movf	(uart_send_data@size+1)& (0+255),w,b
  2231  000FF6  0A80               	xorlw	128
  2232  000FF8  0101               	movlb	1	; () banked
  2233  000FFA  5986               	subwfb	??_uart_send_data& (0+255),w,b
  2234  000FFC  A0D8               	btfss	status,0,c
  2235  000FFE  D7C5               	goto	l4059
  2236                           
  2237                           ; BSR set to: 1
  2238                           ;my_uart.c: 190: uc_ptr->sendBuffer[i+2] = 0x5C;
  2239                           
  2240                           ; BSR set to: 1
  2241  001000  0E12               	movlw	18
  2242  001002  0101               	movlb	1	; () banked
  2243  001004  0101               	movlb	1	; () banked
  2244  001006  2588               	addwf	uart_send_data@i& (0+255),w,b
  2245  001008  0101               	movlb	1	; () banked
  2246  00100A  6F86               	movwf	??_uart_send_data& (0+255),b
  2247  00100C  0E00               	movlw	0
  2248  00100E  0101               	movlb	1	; () banked
  2249  001010  0101               	movlb	1	; () banked
  2250  001012  2189               	addwfc	(uart_send_data@i+1)& (0+255),w,b
  2251  001014  0101               	movlb	1	; () banked
  2252  001016  6F87               	movwf	(??_uart_send_data+1)& (0+255),b
  2253  001018  0101               	movlb	1	; () banked
  2254  00101A  5186               	movf	??_uart_send_data& (0+255),w,b
  2255  00101C  2461               	addwf	_uc_ptr,w,c
  2256  00101E  6ED9               	movwf	fsr2l,c
  2257  001020  0101               	movlb	1	; () banked
  2258  001022  5187               	movf	(??_uart_send_data+1)& (0+255),w,b
  2259  001024  2062               	addwfc	_uc_ptr+1,w,c
  2260  001026  6EDA               	movwf	fsr2h,c
  2261  001028  0E5C               	movlw	92
  2262  00102A  6EDF               	movwf	indf2,c
  2263                           
  2264                           ;my_uart.c: 193: uc_ptr->sendSize = size+3;
  2265  00102C  EE20 F01A          	lfsr	2,26
  2266  001030  5061               	movf	_uc_ptr,w,c
  2267  001032  26D9               	addwf	fsr2l,f,c
  2268  001034  5062               	movf	_uc_ptr+1,w,c
  2269  001036  22DA               	addwfc	fsr2h,f,c
  2270  001038  0101               	movlb	1	; () banked
  2271  00103A  0101               	movlb	1	; () banked
  2272  00103C  5184               	movf	uart_send_data@size& (0+255),w,b
  2273  00103E  0F03               	addlw	3
  2274  001040  6EDF               	movwf	indf2,c
  2275                           
  2276                           ;my_uart.c: 196: uc_ptr->sendCurrent = 0;
  2277  001042  EE20 F01B          	lfsr	2,27
  2278  001046  5061               	movf	_uc_ptr,w,c
  2279  001048  26D9               	addwf	fsr2l,f,c
  2280  00104A  5062               	movf	_uc_ptr+1,w,c
  2281  00104C  22DA               	addwfc	fsr2h,f,c
  2282  00104E  0E00               	movlw	0
  2283  001050  6EDF               	movwf	indf2,c
  2284                           
  2285                           ; BSR set to: 1
  2286                           ;my_uart.c: 199: PIE1bits.TXIE = 1;
  2287  001052  889D               	bsf	3997,4,c	;volatile
  2288                           
  2289                           ; BSR set to: 1
  2290  001054  0012               	return	
  2291  001056                     __end_of_uart_send_data:
  2292                           	opt stack 0
  2293                           tblptru	equ	0xFF8
  2294                           tblptrh	equ	0xFF7
  2295                           tblptrl	equ	0xFF6
  2296                           tablat	equ	0xFF5
  2297                           postinc0	equ	0xFEE
  2298                           wreg	equ	0xFE8
  2299                           indf1	equ	0xFE7
  2300                           postdec1	equ	0xFE5
  2301                           fsr1h	equ	0xFE2
  2302                           fsr1l	equ	0xFE1
  2303                           indf2	equ	0xFDF
  2304                           fsr2h	equ	0xFDA
  2305                           fsr2l	equ	0xFD9
  2306                           status	equ	0xFD8
  2307                           
  2308 ;; *************** function _uart_lthread *****************
  2309 ;; Defined at:
  2310 ;;		line 17 in file "../src/uart_thread.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;  uptr            2   26[BANK1 ] PTR struct __uart_thread
  2313 ;;		 -> main@uthread_data(2), 
  2314 ;;  msgtype         2   28[BANK1 ] int 
  2315 ;;  length          2   30[BANK1 ] int 
  2316 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  2317 ;;		 -> main@msgbuffer(11), 
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;		None
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  2   26[BANK1 ] int 
  2322 ;; Registers used:
  2323 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2329 ;;      Params:         0       0       8       0       0
  2330 ;;      Locals:         0       0       0       0       0
  2331 ;;      Temps:          0       0       1       0       0
  2332 ;;      Totals:         0       0       9       0       0
  2333 ;;Total ram usage:        9 bytes
  2334 ;; Hardware stack levels used:    1
  2335 ;; Hardware stack levels required when called:   14
  2336 ;; This function calls:
  2337 ;;		_ToMainHigh_sendmsg
  2338 ;; This function is called by:
  2339 ;;		_main
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           	psect	text3
  2344  0016D2                     __ptext3:
  2345                           	opt stack 0
  2346  0016D2                     _uart_lthread:
  2347                           	opt stack 16
  2348                           
  2349                           ;uart_thread.c: 18: if (msgtype == 30) {
  2350                           
  2351                           ; BSR set to: 1
  2352                           ;incstack = 0
  2353  0016D2  0101               	movlb	1	; () banked
  2354  0016D4  0101               	movlb	1	; () banked
  2355  0016D6  519E               	movf	uart_lthread@msgtype& (0+255),w,b
  2356  0016D8  0A1E               	xorlw	30
  2357  0016DA  119F               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  2358  0016DC  B4D8               	btfsc	status,2,c
  2359  0016DE  0012               	return	
  2360                           
  2361                           ; BSR set to: 1
  2362                           
  2363                           ; BSR set to: 1
  2364                           
  2365                           ; BSR set to: 1
  2366                           ;uart_thread.c: 19: } else if (msgtype == 31) {
  2367  0016E0  0101               	movlb	1	; () banked
  2368  0016E2  0101               	movlb	1	; () banked
  2369  0016E4  519E               	movf	uart_lthread@msgtype& (0+255),w,b
  2370  0016E6  0A1F               	xorlw	31
  2371  0016E8  119F               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  2372  0016EA  A4D8               	btfss	status,2,c
  2373  0016EC  0012               	return	
  2374                           
  2375                           ; BSR set to: 1
  2376                           ;uart_thread.c: 22: msgbuffer[length] = '\0';
  2377  0016EE  0101               	movlb	1	; () banked
  2378  0016F0  0101               	movlb	1	; () banked
  2379  0016F2  51A0               	movf	uart_lthread@length& (0+255),w,b
  2380  0016F4  0101               	movlb	1	; () banked
  2381  0016F6  0101               	movlb	1	; () banked
  2382  0016F8  25A2               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  2383  0016FA  6ED9               	movwf	fsr2l,c
  2384  0016FC  0101               	movlb	1	; () banked
  2385  0016FE  0101               	movlb	1	; () banked
  2386  001700  51A1               	movf	(uart_lthread@length+1)& (0+255),w,b
  2387  001702  0101               	movlb	1	; () banked
  2388  001704  0101               	movlb	1	; () banked
  2389  001706  21A3               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  2390  001708  6EDA               	movwf	fsr2h,c
  2391  00170A  0E00               	movlw	0
  2392  00170C  6EDF               	movwf	indf2,c
  2393                           
  2394                           ; BSR set to: 1
  2395                           ;uart_thread.c: 31: ToMainHigh_sendmsg(length, 40, (void *) msgbuffer);
  2396  00170E  0101               	movlb	1	; () banked
  2397  001710  6FA4               	movwf	??_uart_lthread& (0+255),b
  2398  001712  0E28               	movlw	40
  2399  001714  0101               	movlb	1	; () banked
  2400  001716  0101               	movlb	1	; () banked
  2401  001718  6F98               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  2402  00171A  0101               	movlb	1	; () banked
  2403  00171C  51A4               	movf	??_uart_lthread& (0+255),w,b
  2404  00171E  0101               	movlb	1	; () banked
  2405  001720  0101               	movlb	1	; () banked
  2406  001722  C1A3  F19A         	movff	uart_lthread@msgbuffer+1,ToMainHigh_sendmsg@data+1
  2407  001726  0101               	movlb	1	; () banked
  2408  001728  0101               	movlb	1	; () banked
  2409  00172A  C1A2  F199         	movff	uart_lthread@msgbuffer,ToMainHigh_sendmsg@data
  2410  00172E  0101               	movlb	1	; () banked
  2411  001730  0101               	movlb	1	; () banked
  2412  001732  51A0               	movf	uart_lthread@length& (0+255),w,b
  2413  001734  EC2A  F00D         	call	_ToMainHigh_sendmsg
  2414                           
  2415                           ;uart_thread.c: 34: i++;
  2416  001738  0100               	movlb	0	; () banked
  2417  00173A  0100               	movlb	0	; () banked
  2418  00173C  4BD4               	infsnz	_i& (0+255),f,b
  2419  00173E  2BD5               	incf	(_i+1)& (0+255),f,b
  2420  001740  0012               	return	
  2421  001742                     __end_of_uart_lthread:
  2422                           	opt stack 0
  2423                           tblptru	equ	0xFF8
  2424                           tblptrh	equ	0xFF7
  2425                           tblptrl	equ	0xFF6
  2426                           tablat	equ	0xFF5
  2427                           postinc0	equ	0xFEE
  2428                           wreg	equ	0xFE8
  2429                           indf1	equ	0xFE7
  2430                           postdec1	equ	0xFE5
  2431                           fsr1h	equ	0xFE2
  2432                           fsr1l	equ	0xFE1
  2433                           indf2	equ	0xFDF
  2434                           fsr2h	equ	0xFDA
  2435                           fsr2l	equ	0xFD9
  2436                           status	equ	0xFD8
  2437                           
  2438 ;; *************** function _ToMainHigh_sendmsg *****************
  2439 ;; Defined at:
  2440 ;;		line 131 in file "../src/messages.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  length          1    wreg     unsigned char 
  2443 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2444 ;;  data            2   23[BANK1 ] PTR void 
  2445 ;;		 -> main@msgbuffer(11), main@uc(28), i2c_int_handler@error_buf(3), NULL(0), 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  length          1   25[BANK1 ] unsigned char 
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      char 
  2450 ;; Registers used:
  2451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2457 ;;      Params:         0       0       3       0       0
  2458 ;;      Locals:         0       0       1       0       0
  2459 ;;      Temps:          0       0       0       0       0
  2460 ;;      Totals:         0       0       4       0       0
  2461 ;;Total ram usage:        4 bytes
  2462 ;; Hardware stack levels used:    1
  2463 ;; Hardware stack levels required when called:   13
  2464 ;; This function calls:
  2465 ;;		_send_msg
  2466 ;; This function is called by:
  2467 ;;		_uart_lthread
  2468 ;;		_i2c_int_handler
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           	psect	text4
  2473  001A54                     __ptext4:
  2474                           	opt stack 0
  2475  001A54                     _ToMainHigh_sendmsg:
  2476                           	opt stack 16
  2477                           
  2478                           ;incstack = 0
  2479                           ;ToMainHigh_sendmsg@length stored from wreg
  2480  001A54  CFE8 F19B          	movff	wreg,ToMainHigh_sendmsg@length
  2481                           
  2482                           ;messages.c: 137: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  2483                           ;	Return value of _ToMainHigh_sendmsg is never used
  2484  001A58  0101               	movlb	1	; () banked
  2485  001A5A  0E01               	movlw	high _ToMainHigh_MQ
  2486  001A5C  0101               	movlb	1	; () banked
  2487  001A5E  0101               	movlb	1	; () banked
  2488  001A60  6F8D               	movwf	(send_msg@qptr+1)& (0+255),b
  2489  001A62  0101               	movlb	1	; () banked
  2490  001A64  0E16               	movlw	low _ToMainHigh_MQ
  2491  001A66  0101               	movlb	1	; () banked
  2492  001A68  0101               	movlb	1	; () banked
  2493  001A6A  6F8C               	movwf	send_msg@qptr& (0+255),b
  2494  001A6C  C19B  F18E         	movff	ToMainHigh_sendmsg@length,send_msg@length
  2495  001A70  C198  F18F         	movff	ToMainHigh_sendmsg@msgtype,send_msg@msgtype
  2496  001A74  0101               	movlb	1	; () banked
  2497  001A76  0101               	movlb	1	; () banked
  2498  001A78  C19A  F191         	movff	ToMainHigh_sendmsg@data+1,send_msg@data+1
  2499  001A7C  0101               	movlb	1	; () banked
  2500  001A7E  0101               	movlb	1	; () banked
  2501  001A80  C199  F190         	movff	ToMainHigh_sendmsg@data,send_msg@data
  2502  001A84  ECA9  F006         	call	_send_msg	;wreg free
  2503  001A88  0012               	return	
  2504  001A8A                     __end_of_ToMainHigh_sendmsg:
  2505                           	opt stack 0
  2506                           tblptru	equ	0xFF8
  2507                           tblptrh	equ	0xFF7
  2508                           tblptrl	equ	0xFF6
  2509                           tablat	equ	0xFF5
  2510                           postinc0	equ	0xFEE
  2511                           wreg	equ	0xFE8
  2512                           indf1	equ	0xFE7
  2513                           postdec1	equ	0xFE5
  2514                           fsr1h	equ	0xFE2
  2515                           fsr1l	equ	0xFE1
  2516                           indf2	equ	0xFDF
  2517                           fsr2h	equ	0xFDA
  2518                           fsr2l	equ	0xFD9
  2519                           status	equ	0xFD8
  2520                           
  2521 ;; *************** function _timer1_lthread *****************
  2522 ;; Defined at:
  2523 ;;		line 14 in file "../src/timer1_thread.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;  tptr            2   26[BANK1 ] PTR struct __timer1_thre
  2526 ;;		 -> main@t1thread_data(2), 
  2527 ;;  msgtype         2   28[BANK1 ] int 
  2528 ;;  length          2   30[BANK1 ] int 
  2529 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  2530 ;;		 -> main@msgbuffer(11), 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;  retval          1   35[BANK1 ] char 
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  2   26[BANK1 ] int 
  2535 ;; Registers used:
  2536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2542 ;;      Params:         0       0       8       0       0
  2543 ;;      Locals:         0       0       1       0       0
  2544 ;;      Temps:          0       0       1       0       0
  2545 ;;      Totals:         0       0      10       0       0
  2546 ;;Total ram usage:       10 bytes
  2547 ;; Hardware stack levels used:    1
  2548 ;; Hardware stack levels required when called:   14
  2549 ;; This function calls:
  2550 ;;		_FromMainHigh_sendmsg
  2551 ;;		___lwmod
  2552 ;; This function is called by:
  2553 ;;		_main
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           	psect	text5
  2558  00157C                     __ptext5:
  2559                           	opt stack 0
  2560  00157C                     _timer1_lthread:
  2561                           	opt stack 16
  2562                           
  2563                           ;timer1_thread.c: 15: signed char retval;
  2564                           ;timer1_thread.c: 17: tptr->msgcount++;
  2565                           
  2566                           ;incstack = 0
  2567  00157C  C19C  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2568  001580  C19D  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2569  001584  2ADE               	incf	postinc2,f,c
  2570  001586  0E00               	movlw	0
  2571  001588  22DD               	addwfc	postdec2,f,c
  2572                           
  2573                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  2574  00158A  C19C  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2575  00158E  C19D  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2576  001592  0101               	movlb	1	; () banked
  2577  001594  CFDE F182          	movff	postinc2,___lwmod@dividend
  2578  001598  0101               	movlb	1	; () banked
  2579  00159A  CFDD F183          	movff	postdec2,___lwmod@dividend+1
  2580  00159E  0E00               	movlw	0
  2581  0015A0  0101               	movlb	1	; () banked
  2582  0015A2  0101               	movlb	1	; () banked
  2583  0015A4  6F85               	movwf	(___lwmod@divisor+1)& (0+255),b
  2584  0015A6  0E0A               	movlw	10
  2585  0015A8  0101               	movlb	1	; () banked
  2586  0015AA  6F84               	movwf	___lwmod@divisor& (0+255),b
  2587  0015AC  ECBD  F009         	call	___lwmod	;wreg free
  2588  0015B0  0101               	movlb	1	; () banked
  2589  0015B2  0101               	movlb	1	; () banked
  2590  0015B4  5182               	movf	?___lwmod& (0+255),w,b
  2591  0015B6  0A09               	xorlw	9
  2592  0015B8  0101               	movlb	1	; () banked
  2593  0015BA  1183               	iorwf	(?___lwmod+1)& (0+255),w,b
  2594  0015BC  A4D8               	btfss	status,2,c
  2595  0015BE  0012               	return	
  2596                           
  2597                           ; BSR set to: 1
  2598                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  2599  0015C0  0101               	movlb	1	; () banked
  2600  0015C2  6FA4               	movwf	??_timer1_lthread& (0+255),b
  2601  0015C4  0E14               	movlw	20
  2602  0015C6  0101               	movlb	1	; () banked
  2603  0015C8  0101               	movlb	1	; () banked
  2604  0015CA  6F98               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  2605  0015CC  0101               	movlb	1	; () banked
  2606  0015CE  51A4               	movf	??_timer1_lthread& (0+255),w,b
  2607  0015D0  0101               	movlb	1	; () banked
  2608  0015D2  0101               	movlb	1	; () banked
  2609  0015D4  C19D  F19A         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  2610  0015D8  0101               	movlb	1	; () banked
  2611  0015DA  0101               	movlb	1	; () banked
  2612  0015DC  C19C  F199         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  2613  0015E0  0E02               	movlw	2
  2614  0015E2  EC45  F00D         	call	_FromMainHigh_sendmsg
  2615  0015E6  0101               	movlb	1	; () banked
  2616  0015E8  0101               	movlb	1	; () banked
  2617  0015EA  6FA5               	movwf	timer1_lthread@retval& (0+255),b
  2618  0015EC  0012               	return	
  2619  0015EE                     __end_of_timer1_lthread:
  2620                           	opt stack 0
  2621                           tblptru	equ	0xFF8
  2622                           tblptrh	equ	0xFF7
  2623                           tblptrl	equ	0xFF6
  2624                           tablat	equ	0xFF5
  2625                           postinc0	equ	0xFEE
  2626                           wreg	equ	0xFE8
  2627                           indf1	equ	0xFE7
  2628                           postdec1	equ	0xFE5
  2629                           fsr1h	equ	0xFE2
  2630                           fsr1l	equ	0xFE1
  2631                           indf2	equ	0xFDF
  2632                           postinc2	equ	0xFDE
  2633                           postdec2	equ	0xFDD
  2634                           fsr2h	equ	0xFDA
  2635                           fsr2l	equ	0xFD9
  2636                           status	equ	0xFD8
  2637                           
  2638 ;; *************** function _timer0_lthread *****************
  2639 ;; Defined at:
  2640 ;;		line 14 in file "../src/timer0_thread.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;  tptr            2   26[BANK1 ] PTR struct __timer0_thre
  2643 ;;		 -> main@t0thread_data(2), 
  2644 ;;  msgtype         2   28[BANK1 ] int 
  2645 ;;  length          2   30[BANK1 ] int 
  2646 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  2647 ;;		 -> main@msgbuffer(11), 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;  retval          1   35[BANK1 ] char 
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  2   26[BANK1 ] int 
  2652 ;; Registers used:
  2653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2659 ;;      Params:         0       0       8       0       0
  2660 ;;      Locals:         0       0       1       0       0
  2661 ;;      Temps:          0       0       1       0       0
  2662 ;;      Totals:         0       0      10       0       0
  2663 ;;Total ram usage:       10 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; Hardware stack levels required when called:   14
  2666 ;; This function calls:
  2667 ;;		_FromMainHigh_sendmsg
  2668 ;;		___lwmod
  2669 ;; This function is called by:
  2670 ;;		_main
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           	psect	text6
  2675  0015EE                     __ptext6:
  2676                           	opt stack 0
  2677  0015EE                     _timer0_lthread:
  2678                           	opt stack 16
  2679                           
  2680                           ;timer0_thread.c: 19: signed char retval;
  2681                           ;timer0_thread.c: 21: tptr->msgcount++;
  2682                           
  2683                           ; BSR set to: 1
  2684                           ;incstack = 0
  2685  0015EE  C19C  FFD9         	movff	timer0_lthread@tptr,fsr2l
  2686  0015F2  C19D  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  2687  0015F6  2ADE               	incf	postinc2,f,c
  2688  0015F8  0E00               	movlw	0
  2689  0015FA  22DD               	addwfc	postdec2,f,c
  2690                           
  2691                           ;timer0_thread.c: 24: if ((tptr->msgcount % 10) == 9) {
  2692  0015FC  C19C  FFD9         	movff	timer0_lthread@tptr,fsr2l
  2693  001600  C19D  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  2694  001604  0101               	movlb	1	; () banked
  2695  001606  CFDE F182          	movff	postinc2,___lwmod@dividend
  2696  00160A  0101               	movlb	1	; () banked
  2697  00160C  CFDD F183          	movff	postdec2,___lwmod@dividend+1
  2698  001610  0E00               	movlw	0
  2699  001612  0101               	movlb	1	; () banked
  2700  001614  0101               	movlb	1	; () banked
  2701  001616  6F85               	movwf	(___lwmod@divisor+1)& (0+255),b
  2702  001618  0E0A               	movlw	10
  2703  00161A  0101               	movlb	1	; () banked
  2704  00161C  6F84               	movwf	___lwmod@divisor& (0+255),b
  2705  00161E  ECBD  F009         	call	___lwmod	;wreg free
  2706  001622  0101               	movlb	1	; () banked
  2707  001624  0101               	movlb	1	; () banked
  2708  001626  5182               	movf	?___lwmod& (0+255),w,b
  2709  001628  0A09               	xorlw	9
  2710  00162A  0101               	movlb	1	; () banked
  2711  00162C  1183               	iorwf	(?___lwmod+1)& (0+255),w,b
  2712  00162E  A4D8               	btfss	status,2,c
  2713  001630  0012               	return	
  2714                           
  2715                           ; BSR set to: 1
  2716                           ;timer0_thread.c: 25: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  2717  001632  0101               	movlb	1	; () banked
  2718  001634  6FA4               	movwf	??_timer0_lthread& (0+255),b
  2719  001636  0E14               	movlw	20
  2720  001638  0101               	movlb	1	; () banked
  2721  00163A  0101               	movlb	1	; () banked
  2722  00163C  6F98               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  2723  00163E  0101               	movlb	1	; () banked
  2724  001640  51A4               	movf	??_timer0_lthread& (0+255),w,b
  2725  001642  0101               	movlb	1	; () banked
  2726  001644  0101               	movlb	1	; () banked
  2727  001646  C19D  F19A         	movff	timer0_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  2728  00164A  0101               	movlb	1	; () banked
  2729  00164C  0101               	movlb	1	; () banked
  2730  00164E  C19C  F199         	movff	timer0_lthread@tptr,FromMainHigh_sendmsg@data
  2731  001652  0E02               	movlw	2
  2732  001654  EC45  F00D         	call	_FromMainHigh_sendmsg
  2733  001658  0101               	movlb	1	; () banked
  2734  00165A  0101               	movlb	1	; () banked
  2735  00165C  6FA5               	movwf	timer0_lthread@retval& (0+255),b
  2736  00165E  0012               	return	
  2737  001660                     __end_of_timer0_lthread:
  2738                           	opt stack 0
  2739                           tblptru	equ	0xFF8
  2740                           tblptrh	equ	0xFF7
  2741                           tblptrl	equ	0xFF6
  2742                           tablat	equ	0xFF5
  2743                           postinc0	equ	0xFEE
  2744                           wreg	equ	0xFE8
  2745                           indf1	equ	0xFE7
  2746                           postdec1	equ	0xFE5
  2747                           fsr1h	equ	0xFE2
  2748                           fsr1l	equ	0xFE1
  2749                           indf2	equ	0xFDF
  2750                           postinc2	equ	0xFDE
  2751                           postdec2	equ	0xFDD
  2752                           fsr2h	equ	0xFDA
  2753                           fsr2l	equ	0xFD9
  2754                           status	equ	0xFD8
  2755                           
  2756 ;; *************** function ___lwmod *****************
  2757 ;; Defined at:
  2758 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/common/lwmod.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;  dividend        2    0[BANK1 ] unsigned int 
  2761 ;;  divisor         2    2[BANK1 ] unsigned int 
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;  counter         1    5[BANK1 ] unsigned char 
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  2    0[BANK1 ] unsigned int 
  2766 ;; Registers used:
  2767 ;;		wreg, status,2, status,0
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2773 ;;      Params:         0       0       4       0       0
  2774 ;;      Locals:         0       0       1       0       0
  2775 ;;      Temps:          0       0       1       0       0
  2776 ;;      Totals:         0       0       6       0       0
  2777 ;;Total ram usage:        6 bytes
  2778 ;; Hardware stack levels used:    1
  2779 ;; Hardware stack levels required when called:   11
  2780 ;; This function calls:
  2781 ;;		Nothing
  2782 ;; This function is called by:
  2783 ;;		_timer1_lthread
  2784 ;;		_timer0_lthread
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788                           	psect	text7
  2789  00137A                     __ptext7:
  2790                           	opt stack 0
  2791  00137A                     ___lwmod:
  2792                           	opt stack 18
  2793                           
  2794                           ; BSR set to: 1
  2795                           ;incstack = 0
  2796  00137A  0101               	movlb	1	; () banked
  2797  00137C  0101               	movlb	1	; () banked
  2798  00137E  5185               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2799  001380  1184               	iorwf	___lwmod@divisor& (0+255),w,b
  2800  001382  B4D8               	btfsc	status,2,c
  2801  001384  D03A               	goto	l1377
  2802                           
  2803                           ; BSR set to: 1
  2804  001386  0101               	movlb	1	; () banked
  2805  001388  6F86               	movwf	??___lwmod& (0+255),b
  2806  00138A  0E01               	movlw	1
  2807  00138C  0101               	movlb	1	; () banked
  2808  00138E  0101               	movlb	1	; () banked
  2809  001390  6F87               	movwf	___lwmod@counter& (0+255),b
  2810  001392  0101               	movlb	1	; () banked
  2811  001394  5186               	movf	??___lwmod& (0+255),w,b
  2812  001396  D009               	goto	l4943
  2813  001398                     l4941:
  2814                           
  2815                           ; BSR set to: 1
  2816  001398  0101               	movlb	1	; () banked
  2817  00139A  0101               	movlb	1	; () banked
  2818  00139C  0101               	movlb	1	; () banked
  2819  00139E  90D8               	bcf	status,0,c
  2820  0013A0  3784               	rlcf	___lwmod@divisor& (0+255),f,b
  2821  0013A2  3785               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2822  0013A4  0101               	movlb	1	; () banked
  2823  0013A6  0101               	movlb	1	; () banked
  2824  0013A8  2B87               	incf	___lwmod@counter& (0+255),f,b
  2825  0013AA                     l4943:
  2826                           
  2827                           ; BSR set to: 1
  2828  0013AA  0101               	movlb	1	; () banked
  2829  0013AC  0101               	movlb	1	; () banked
  2830  0013AE  AF85               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2831  0013B0  D7F3               	goto	l4941
  2832  0013B2                     l4945:
  2833                           
  2834                           ; BSR set to: 1
  2835  0013B2  0101               	movlb	1	; () banked
  2836  0013B4  0101               	movlb	1	; () banked
  2837  0013B6  5184               	movf	___lwmod@divisor& (0+255),w,b
  2838  0013B8  0101               	movlb	1	; () banked
  2839  0013BA  0101               	movlb	1	; () banked
  2840  0013BC  5D82               	subwf	___lwmod@dividend& (0+255),w,b
  2841  0013BE  0101               	movlb	1	; () banked
  2842  0013C0  0101               	movlb	1	; () banked
  2843  0013C2  5185               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2844  0013C4  0101               	movlb	1	; () banked
  2845  0013C6  0101               	movlb	1	; () banked
  2846  0013C8  5983               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2847  0013CA  A0D8               	btfss	status,0,c
  2848  0013CC  D00C               	goto	l4949
  2849                           
  2850                           ; BSR set to: 1
  2851  0013CE  0101               	movlb	1	; () banked
  2852  0013D0  0101               	movlb	1	; () banked
  2853  0013D2  5184               	movf	___lwmod@divisor& (0+255),w,b
  2854  0013D4  0101               	movlb	1	; () banked
  2855  0013D6  0101               	movlb	1	; () banked
  2856  0013D8  5F82               	subwf	___lwmod@dividend& (0+255),f,b
  2857  0013DA  0101               	movlb	1	; () banked
  2858  0013DC  0101               	movlb	1	; () banked
  2859  0013DE  5185               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2860  0013E0  0101               	movlb	1	; () banked
  2861  0013E2  0101               	movlb	1	; () banked
  2862  0013E4  5B83               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2863  0013E6                     l4949:
  2864                           
  2865                           ; BSR set to: 1
  2866  0013E6  0101               	movlb	1	; () banked
  2867  0013E8  0101               	movlb	1	; () banked
  2868  0013EA  0101               	movlb	1	; () banked
  2869  0013EC  90D8               	bcf	status,0,c
  2870  0013EE  3385               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2871  0013F0  3384               	rrcf	___lwmod@divisor& (0+255),f,b
  2872                           
  2873                           ; BSR set to: 1
  2874  0013F2  0101               	movlb	1	; () banked
  2875  0013F4  0101               	movlb	1	; () banked
  2876  0013F6  2F87               	decfsz	___lwmod@counter& (0+255),f,b
  2877  0013F8  D7DC               	goto	l4945
  2878  0013FA                     l1377:
  2879                           
  2880                           ; BSR set to: 1
  2881  0013FA  C182  F182         	movff	___lwmod@dividend,?___lwmod
  2882  0013FE  C183  F183         	movff	___lwmod@dividend+1,?___lwmod+1
  2883                           
  2884                           ; BSR set to: 1
  2885  001402  0012               	return	
  2886  001404                     __end_of___lwmod:
  2887                           	opt stack 0
  2888                           tblptru	equ	0xFF8
  2889                           tblptrh	equ	0xFF7
  2890                           tblptrl	equ	0xFF6
  2891                           tablat	equ	0xFF5
  2892                           postinc0	equ	0xFEE
  2893                           wreg	equ	0xFE8
  2894                           indf1	equ	0xFE7
  2895                           postdec1	equ	0xFE5
  2896                           fsr1h	equ	0xFE2
  2897                           fsr1l	equ	0xFE1
  2898                           indf2	equ	0xFDF
  2899                           postinc2	equ	0xFDE
  2900                           postdec2	equ	0xFDD
  2901                           fsr2h	equ	0xFDA
  2902                           fsr2l	equ	0xFD9
  2903                           status	equ	0xFD8
  2904                           
  2905 ;; *************** function _FromMainHigh_sendmsg *****************
  2906 ;; Defined at:
  2907 ;;		line 179 in file "../src/messages.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;  length          1    wreg     unsigned char 
  2910 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2911 ;;  data            2   23[BANK1 ] PTR void 
  2912 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  length          1   25[BANK1 ] unsigned char 
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      char 
  2917 ;; Registers used:
  2918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2924 ;;      Params:         0       0       3       0       0
  2925 ;;      Locals:         0       0       1       0       0
  2926 ;;      Temps:          0       0       0       0       0
  2927 ;;      Totals:         0       0       4       0       0
  2928 ;;Total ram usage:        4 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:   13
  2931 ;; This function calls:
  2932 ;;		_send_msg
  2933 ;; This function is called by:
  2934 ;;		_timer1_lthread
  2935 ;;		_timer0_lthread
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939                           	psect	text8
  2940  001A8A                     __ptext8:
  2941                           	opt stack 0
  2942  001A8A                     _FromMainHigh_sendmsg:
  2943                           	opt stack 16
  2944                           
  2945                           ; BSR set to: 1
  2946                           ;incstack = 0
  2947                           ;FromMainHigh_sendmsg@length stored from wreg
  2948  001A8A  CFE8 F19B          	movff	wreg,FromMainHigh_sendmsg@length
  2949                           
  2950                           ;messages.c: 185: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2951  001A8E  0102               	movlb	2	; () banked
  2952  001A90  0E02               	movlw	high _FromMainHigh_MQ
  2953  001A92  0101               	movlb	1	; () banked
  2954  001A94  0101               	movlb	1	; () banked
  2955  001A96  6F8D               	movwf	(send_msg@qptr+1)& (0+255),b
  2956  001A98  0102               	movlb	2	; () banked
  2957  001A9A  0E00               	movlw	low _FromMainHigh_MQ
  2958  001A9C  0101               	movlb	1	; () banked
  2959  001A9E  0101               	movlb	1	; () banked
  2960  001AA0  6F8C               	movwf	send_msg@qptr& (0+255),b
  2961  001AA2  C19B  F18E         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2962  001AA6  C198  F18F         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2963  001AAA  0101               	movlb	1	; () banked
  2964  001AAC  0101               	movlb	1	; () banked
  2965  001AAE  C19A  F191         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2966  001AB2  0101               	movlb	1	; () banked
  2967  001AB4  0101               	movlb	1	; () banked
  2968  001AB6  C199  F190         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2969  001ABA  ECA9  F006         	call	_send_msg	;wreg free
  2970  001ABE  0012               	return	
  2971  001AC0                     __end_of_FromMainHigh_sendmsg:
  2972                           	opt stack 0
  2973                           tblptru	equ	0xFF8
  2974                           tblptrh	equ	0xFF7
  2975                           tblptrl	equ	0xFF6
  2976                           tablat	equ	0xFF5
  2977                           postinc0	equ	0xFEE
  2978                           wreg	equ	0xFE8
  2979                           indf1	equ	0xFE7
  2980                           postdec1	equ	0xFE5
  2981                           fsr1h	equ	0xFE2
  2982                           fsr1l	equ	0xFE1
  2983                           indf2	equ	0xFDF
  2984                           postinc2	equ	0xFDE
  2985                           postdec2	equ	0xFDD
  2986                           fsr2h	equ	0xFDA
  2987                           fsr2l	equ	0xFD9
  2988                           status	equ	0xFD8
  2989                           
  2990 ;; *************** function _init_uart_recv *****************
  2991 ;; Defined at:
  2992 ;;		line 202 in file "../src/my_uart.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;  uc              2    0[BANK1 ] PTR struct __uart_comm
  2995 ;;		 -> main@uc(28), 
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;		None
  2998 ;; Return value:  Size  Location     Type
  2999 ;;		None               void
  3000 ;; Registers used:
  3001 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3007 ;;      Params:         0       0       2       0       0
  3008 ;;      Locals:         0       0       0       0       0
  3009 ;;      Temps:          0       0       0       0       0
  3010 ;;      Totals:         0       0       2       0       0
  3011 ;;Total ram usage:        2 bytes
  3012 ;; Hardware stack levels used:    1
  3013 ;; Hardware stack levels required when called:   11
  3014 ;; This function calls:
  3015 ;;		Nothing
  3016 ;; This function is called by:
  3017 ;;		_main
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           	psect	text9
  3022  001A16                     __ptext9:
  3023                           	opt stack 0
  3024  001A16                     _init_uart_recv:
  3025                           	opt stack 19
  3026                           
  3027                           ;my_uart.c: 203: uc_ptr = uc;
  3028                           
  3029                           ;incstack = 0
  3030  001A16  0101               	movlb	1	; () banked
  3031  001A18  C183  F062         	movff	init_uart_recv@uc+1,_uc_ptr+1
  3032  001A1C  0101               	movlb	1	; () banked
  3033  001A1E  C182  F061         	movff	init_uart_recv@uc,_uc_ptr
  3034                           
  3035                           ; BSR set to: 1
  3036                           ;my_uart.c: 204: uc_ptr->buflen = 0;
  3037  001A22  EE20 F00A          	lfsr	2,10
  3038  001A26  5061               	movf	_uc_ptr,w,c
  3039  001A28  26D9               	addwf	fsr2l,f,c
  3040  001A2A  5062               	movf	_uc_ptr+1,w,c
  3041  001A2C  22DA               	addwfc	fsr2h,f,c
  3042  001A2E  0E00               	movlw	0
  3043  001A30  6EDF               	movwf	indf2,c
  3044                           
  3045                           ; BSR set to: 1
  3046                           ;my_uart.c: 205: uc_ptr->data_read = 0;
  3047  001A32  EE20 F00F          	lfsr	2,15
  3048  001A36  5061               	movf	_uc_ptr,w,c
  3049  001A38  26D9               	addwf	fsr2l,f,c
  3050  001A3A  5062               	movf	_uc_ptr+1,w,c
  3051  001A3C  22DA               	addwfc	fsr2h,f,c
  3052  001A3E  0E00               	movlw	0
  3053  001A40  6EDF               	movwf	indf2,c
  3054                           
  3055                           ; BSR set to: 1
  3056                           ;my_uart.c: 206: uc_ptr->state = 48;
  3057  001A42  EE20 F00B          	lfsr	2,11
  3058  001A46  5061               	movf	_uc_ptr,w,c
  3059  001A48  26D9               	addwf	fsr2l,f,c
  3060  001A4A  5062               	movf	_uc_ptr+1,w,c
  3061  001A4C  22DA               	addwfc	fsr2h,f,c
  3062  001A4E  0E30               	movlw	48
  3063  001A50  6EDF               	movwf	indf2,c
  3064                           
  3065                           ; BSR set to: 1
  3066  001A52  0012               	return	
  3067  001A54                     __end_of_init_uart_recv:
  3068                           	opt stack 0
  3069                           tblptru	equ	0xFF8
  3070                           tblptrh	equ	0xFF7
  3071                           tblptrl	equ	0xFF6
  3072                           tablat	equ	0xFF5
  3073                           postinc0	equ	0xFEE
  3074                           wreg	equ	0xFE8
  3075                           indf1	equ	0xFE7
  3076                           postdec1	equ	0xFE5
  3077                           fsr1h	equ	0xFE2
  3078                           fsr1l	equ	0xFE1
  3079                           indf2	equ	0xFDF
  3080                           postinc2	equ	0xFDE
  3081                           postdec2	equ	0xFDD
  3082                           fsr2h	equ	0xFDA
  3083                           fsr2l	equ	0xFD9
  3084                           status	equ	0xFD8
  3085                           
  3086 ;; *************** function _init_timer1_lthread *****************
  3087 ;; Defined at:
  3088 ;;		line 6 in file "../src/timer1_thread.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  3091 ;;		 -> main@t1thread_data(2), 
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;		None
  3094 ;; Return value:  Size  Location     Type
  3095 ;;		None               void
  3096 ;; Registers used:
  3097 ;;		wreg, fsr2l, fsr2h
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3103 ;;      Params:         0       0       2       0       0
  3104 ;;      Locals:         0       0       0       0       0
  3105 ;;      Temps:          0       0       0       0       0
  3106 ;;      Totals:         0       0       2       0       0
  3107 ;;Total ram usage:        2 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:   11
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_main
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text10
  3118  001D12                     __ptext10:
  3119                           	opt stack 0
  3120  001D12                     _init_timer1_lthread:
  3121                           	opt stack 19
  3122                           
  3123                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  3124                           
  3125                           ; BSR set to: 1
  3126                           ;incstack = 0
  3127  001D12  C182  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  3128  001D16  C183  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  3129  001D1A  0E00               	movlw	0
  3130  001D1C  6EDE               	movwf	postinc2,c
  3131  001D1E  0E00               	movlw	0
  3132  001D20  6EDD               	movwf	postdec2,c
  3133  001D22  0012               	return	
  3134  001D24                     __end_of_init_timer1_lthread:
  3135                           	opt stack 0
  3136                           tblptru	equ	0xFF8
  3137                           tblptrh	equ	0xFF7
  3138                           tblptrl	equ	0xFF6
  3139                           tablat	equ	0xFF5
  3140                           postinc0	equ	0xFEE
  3141                           wreg	equ	0xFE8
  3142                           indf1	equ	0xFE7
  3143                           postdec1	equ	0xFE5
  3144                           fsr1h	equ	0xFE2
  3145                           fsr1l	equ	0xFE1
  3146                           indf2	equ	0xFDF
  3147                           postinc2	equ	0xFDE
  3148                           postdec2	equ	0xFDD
  3149                           fsr2h	equ	0xFDA
  3150                           fsr2l	equ	0xFD9
  3151                           status	equ	0xFD8
  3152                           
  3153 ;; *************** function _init_timer0_lthread *****************
  3154 ;; Defined at:
  3155 ;;		line 10 in file "../src/timer0_thread.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  3158 ;;		 -> main@t0thread_data(2), 
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;		None
  3161 ;; Return value:  Size  Location     Type
  3162 ;;		None               void
  3163 ;; Registers used:
  3164 ;;		wreg, fsr2l, fsr2h
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3170 ;;      Params:         0       0       2       0       0
  3171 ;;      Locals:         0       0       0       0       0
  3172 ;;      Temps:          0       0       0       0       0
  3173 ;;      Totals:         0       0       2       0       0
  3174 ;;Total ram usage:        2 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:   11
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_main
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           	psect	text11
  3185  001D24                     __ptext11:
  3186                           	opt stack 0
  3187  001D24                     _init_timer0_lthread:
  3188                           	opt stack 19
  3189                           
  3190                           ;timer0_thread.c: 11: tptr->msgcount = 0;
  3191                           
  3192                           ;incstack = 0
  3193  001D24  C182  FFD9         	movff	init_timer0_lthread@tptr,fsr2l
  3194  001D28  C183  FFDA         	movff	init_timer0_lthread@tptr+1,fsr2h
  3195  001D2C  0E00               	movlw	0
  3196  001D2E  6EDE               	movwf	postinc2,c
  3197  001D30  0E00               	movlw	0
  3198  001D32  6EDD               	movwf	postdec2,c
  3199  001D34  0012               	return	
  3200  001D36                     __end_of_init_timer0_lthread:
  3201                           	opt stack 0
  3202                           tblptru	equ	0xFF8
  3203                           tblptrh	equ	0xFF7
  3204                           tblptrl	equ	0xFF6
  3205                           tablat	equ	0xFF5
  3206                           postinc0	equ	0xFEE
  3207                           wreg	equ	0xFE8
  3208                           indf1	equ	0xFE7
  3209                           postdec1	equ	0xFE5
  3210                           fsr1h	equ	0xFE2
  3211                           fsr1l	equ	0xFE1
  3212                           indf2	equ	0xFDF
  3213                           postinc2	equ	0xFDE
  3214                           postdec2	equ	0xFDD
  3215                           fsr2h	equ	0xFDA
  3216                           fsr2l	equ	0xFD9
  3217                           status	equ	0xFD8
  3218                           
  3219 ;; *************** function _init_queues *****************
  3220 ;; Defined at:
  3221 ;;		line 199 in file "../src/messages.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;		None
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;		None
  3226 ;; Return value:  Size  Location     Type
  3227 ;;		None               void
  3228 ;; Registers used:
  3229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3235 ;;      Params:         0       0       0       0       0
  3236 ;;      Locals:         0       0       0       0       0
  3237 ;;      Temps:          0       0       1       0       0
  3238 ;;      Totals:         0       0       1       0       0
  3239 ;;Total ram usage:        1 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; Hardware stack levels required when called:   12
  3242 ;; This function calls:
  3243 ;;		_init_queue
  3244 ;; This function is called by:
  3245 ;;		_main
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           	psect	text12
  3250  001660                     __ptext12:
  3251                           	opt stack 0
  3252  001660                     _init_queues:
  3253                           	opt stack 18
  3254                           
  3255                           ;messages.c: 200: MQ_Main_Willing_to_block = 0;
  3256                           
  3257                           ;incstack = 0
  3258  001660  0101               	movlb	1	; () banked
  3259  001662  6F86               	movwf	??_init_queues& (0+255),b
  3260  001664  0E00               	movlw	0
  3261  001666  0100               	movlb	0	; () banked
  3262  001668  0100               	movlb	0	; () banked
  3263  00166A  6FDC               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3264  00166C  0101               	movlb	1	; () banked
  3265  00166E  5186               	movf	??_init_queues& (0+255),w,b
  3266                           
  3267                           ; BSR set to: 1
  3268                           ;messages.c: 201: init_queue(&ToMainLow_MQ);
  3269  001670  0101               	movlb	1	; () banked
  3270  001672  0E01               	movlw	high _ToMainLow_MQ
  3271  001674  0101               	movlb	1	; () banked
  3272  001676  0101               	movlb	1	; () banked
  3273  001678  6F83               	movwf	(init_queue@qptr+1)& (0+255),b
  3274  00167A  0101               	movlb	1	; () banked
  3275  00167C  0E4C               	movlw	low _ToMainLow_MQ
  3276  00167E  0101               	movlb	1	; () banked
  3277  001680  0101               	movlb	1	; () banked
  3278  001682  6F82               	movwf	init_queue@qptr& (0+255),b
  3279  001684  EC81  F00A         	call	_init_queue	;wreg free
  3280                           
  3281                           ;messages.c: 202: init_queue(&ToMainHigh_MQ);
  3282  001688  0101               	movlb	1	; () banked
  3283  00168A  0E01               	movlw	high _ToMainHigh_MQ
  3284  00168C  0101               	movlb	1	; () banked
  3285  00168E  0101               	movlb	1	; () banked
  3286  001690  6F83               	movwf	(init_queue@qptr+1)& (0+255),b
  3287  001692  0101               	movlb	1	; () banked
  3288  001694  0E16               	movlw	low _ToMainHigh_MQ
  3289  001696  0101               	movlb	1	; () banked
  3290  001698  0101               	movlb	1	; () banked
  3291  00169A  6F82               	movwf	init_queue@qptr& (0+255),b
  3292  00169C  EC81  F00A         	call	_init_queue	;wreg free
  3293                           
  3294                           ;messages.c: 203: init_queue(&FromMainLow_MQ);
  3295  0016A0  0102               	movlb	2	; () banked
  3296  0016A2  0E02               	movlw	high _FromMainLow_MQ
  3297  0016A4  0101               	movlb	1	; () banked
  3298  0016A6  0101               	movlb	1	; () banked
  3299  0016A8  6F83               	movwf	(init_queue@qptr+1)& (0+255),b
  3300  0016AA  0102               	movlb	2	; () banked
  3301  0016AC  0E36               	movlw	low _FromMainLow_MQ
  3302  0016AE  0101               	movlb	1	; () banked
  3303  0016B0  0101               	movlb	1	; () banked
  3304  0016B2  6F82               	movwf	init_queue@qptr& (0+255),b
  3305  0016B4  EC81  F00A         	call	_init_queue	;wreg free
  3306                           
  3307                           ;messages.c: 204: init_queue(&FromMainHigh_MQ);
  3308  0016B8  0102               	movlb	2	; () banked
  3309  0016BA  0E02               	movlw	high _FromMainHigh_MQ
  3310  0016BC  0101               	movlb	1	; () banked
  3311  0016BE  0101               	movlb	1	; () banked
  3312  0016C0  6F83               	movwf	(init_queue@qptr+1)& (0+255),b
  3313  0016C2  0102               	movlb	2	; () banked
  3314  0016C4  0E00               	movlw	low _FromMainHigh_MQ
  3315  0016C6  0101               	movlb	1	; () banked
  3316  0016C8  0101               	movlb	1	; () banked
  3317  0016CA  6F82               	movwf	init_queue@qptr& (0+255),b
  3318  0016CC  EC81  F00A         	call	_init_queue	;wreg free
  3319  0016D0  0012               	return	
  3320  0016D2                     __end_of_init_queues:
  3321                           	opt stack 0
  3322                           tblptru	equ	0xFF8
  3323                           tblptrh	equ	0xFF7
  3324                           tblptrl	equ	0xFF6
  3325                           tablat	equ	0xFF5
  3326                           postinc0	equ	0xFEE
  3327                           wreg	equ	0xFE8
  3328                           indf1	equ	0xFE7
  3329                           postdec1	equ	0xFE5
  3330                           fsr1h	equ	0xFE2
  3331                           fsr1l	equ	0xFE1
  3332                           indf2	equ	0xFDF
  3333                           postinc2	equ	0xFDE
  3334                           postdec2	equ	0xFDD
  3335                           fsr2h	equ	0xFDA
  3336                           fsr2l	equ	0xFD9
  3337                           status	equ	0xFD8
  3338                           
  3339 ;; *************** function _init_queue *****************
  3340 ;; Defined at:
  3341 ;;		line 19 in file "../src/messages.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3344 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;  i               1    3[BANK1 ] unsigned char 
  3347 ;; Return value:  Size  Location     Type
  3348 ;;		None               void
  3349 ;; Registers used:
  3350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3356 ;;      Params:         0       0       2       0       0
  3357 ;;      Locals:         0       0       1       0       0
  3358 ;;      Temps:          0       0       1       0       0
  3359 ;;      Totals:         0       0       4       0       0
  3360 ;;Total ram usage:        4 bytes
  3361 ;; Hardware stack levels used:    1
  3362 ;; Hardware stack levels required when called:   11
  3363 ;; This function calls:
  3364 ;;		Nothing
  3365 ;; This function is called by:
  3366 ;;		_init_queues
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           
  3370                           	psect	text13
  3371  001502                     __ptext13:
  3372                           	opt stack 0
  3373  001502                     _init_queue:
  3374                           	opt stack 18
  3375                           
  3376                           ;messages.c: 20: unsigned char i;
  3377                           ;messages.c: 22: qptr->cur_write_ind = 0;
  3378                           
  3379                           ;incstack = 0
  3380  001502  0101               	movlb	1	; () banked
  3381  001504  EE20 F034          	lfsr	2,52
  3382  001508  0101               	movlb	1	; () banked
  3383  00150A  5182               	movf	init_queue@qptr& (0+255),w,b
  3384  00150C  26D9               	addwf	fsr2l,f,c
  3385  00150E  0101               	movlb	1	; () banked
  3386  001510  5183               	movf	(init_queue@qptr+1)& (0+255),w,b
  3387  001512  22DA               	addwfc	fsr2h,f,c
  3388  001514  0E00               	movlw	0
  3389  001516  6EDF               	movwf	indf2,c
  3390                           
  3391                           ;messages.c: 23: qptr->cur_read_ind = 0;
  3392  001518  0101               	movlb	1	; () banked
  3393  00151A  EE20 F035          	lfsr	2,53
  3394  00151E  0101               	movlb	1	; () banked
  3395  001520  5182               	movf	init_queue@qptr& (0+255),w,b
  3396  001522  26D9               	addwf	fsr2l,f,c
  3397  001524  0101               	movlb	1	; () banked
  3398  001526  5183               	movf	(init_queue@qptr+1)& (0+255),w,b
  3399  001528  22DA               	addwfc	fsr2h,f,c
  3400  00152A  0E00               	movlw	0
  3401  00152C  6EDF               	movwf	indf2,c
  3402                           
  3403                           ; BSR set to: 1
  3404                           ;messages.c: 24: for (i = 0; i < 4; i++) {
  3405  00152E  0101               	movlb	1	; () banked
  3406  001530  6F84               	movwf	??_init_queue& (0+255),b
  3407  001532  0E00               	movlw	0
  3408  001534  0101               	movlb	1	; () banked
  3409  001536  0101               	movlb	1	; () banked
  3410  001538  6F85               	movwf	init_queue@i& (0+255),b
  3411  00153A  0101               	movlb	1	; () banked
  3412  00153C  5184               	movf	??_init_queue& (0+255),w,b
  3413                           
  3414                           ; BSR set to: 1
  3415  00153E  0E03               	movlw	3
  3416  001540  0101               	movlb	1	; () banked
  3417  001542  0101               	movlb	1	; () banked
  3418  001544  6585               	cpfsgt	init_queue@i& (0+255),b
  3419  001546  D001               	goto	l4261
  3420  001548  0012               	return	
  3421  00154A                     l4261:
  3422                           
  3423                           ; BSR set to: 1
  3424                           ;messages.c: 25: qptr->queue[i].full = 0;
  3425  00154A  0101               	movlb	1	; () banked
  3426  00154C  0101               	movlb	1	; () banked
  3427  00154E  5185               	movf	init_queue@i& (0+255),w,b
  3428  001550  0D0D               	mullw	13
  3429  001552  50F3               	movf	prodl,w,c
  3430  001554  0101               	movlb	1	; () banked
  3431  001556  0101               	movlb	1	; () banked
  3432  001558  2582               	addwf	init_queue@qptr& (0+255),w,b
  3433  00155A  6ED9               	movwf	fsr2l,c
  3434  00155C  50F4               	movf	prodh,w,c
  3435  00155E  0101               	movlb	1	; () banked
  3436  001560  0101               	movlb	1	; () banked
  3437  001562  2183               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3438  001564  6EDA               	movwf	fsr2h,c
  3439  001566  0E00               	movlw	0
  3440  001568  6EDF               	movwf	indf2,c
  3441                           
  3442                           ; BSR set to: 1
  3443  00156A  0101               	movlb	1	; () banked
  3444  00156C  0101               	movlb	1	; () banked
  3445  00156E  2B85               	incf	init_queue@i& (0+255),f,b
  3446                           
  3447                           ; BSR set to: 1
  3448  001570  0E03               	movlw	3
  3449  001572  0101               	movlb	1	; () banked
  3450  001574  0101               	movlb	1	; () banked
  3451  001576  6585               	cpfsgt	init_queue@i& (0+255),b
  3452  001578  D7E8               	goto	l4261
  3453  00157A  0012               	return	
  3454  00157C                     __end_of_init_queue:
  3455                           	opt stack 0
  3456                           tblptru	equ	0xFF8
  3457                           tblptrh	equ	0xFF7
  3458                           tblptrl	equ	0xFF6
  3459                           tablat	equ	0xFF5
  3460                           prodh	equ	0xFF4
  3461                           prodl	equ	0xFF3
  3462                           postinc0	equ	0xFEE
  3463                           wreg	equ	0xFE8
  3464                           indf1	equ	0xFE7
  3465                           postdec1	equ	0xFE5
  3466                           fsr1h	equ	0xFE2
  3467                           fsr1l	equ	0xFE1
  3468                           indf2	equ	0xFDF
  3469                           postinc2	equ	0xFDE
  3470                           postdec2	equ	0xFDD
  3471                           fsr2h	equ	0xFDA
  3472                           fsr2l	equ	0xFD9
  3473                           status	equ	0xFD8
  3474                           
  3475 ;; *************** function _init_i2c *****************
  3476 ;; Defined at:
  3477 ;;		line 263 in file "../src/my_i2c.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  3480 ;;		 -> main@ic(28), 
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;		None
  3483 ;; Return value:  Size  Location     Type
  3484 ;;		None               void
  3485 ;; Registers used:
  3486 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3487 ;; Tracked objects:
  3488 ;;		On entry : 0/0
  3489 ;;		On exit  : 0/0
  3490 ;;		Unchanged: 0/0
  3491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3492 ;;      Params:         0       0       2       0       0
  3493 ;;      Locals:         0       0       0       0       0
  3494 ;;      Temps:          0       0       0       0       0
  3495 ;;      Totals:         0       0       2       0       0
  3496 ;;Total ram usage:        2 bytes
  3497 ;; Hardware stack levels used:    1
  3498 ;; Hardware stack levels required when called:   11
  3499 ;; This function calls:
  3500 ;;		Nothing
  3501 ;; This function is called by:
  3502 ;;		_main
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506                           	psect	text14
  3507  001742                     __ptext14:
  3508                           	opt stack 0
  3509  001742                     _init_i2c:
  3510                           	opt stack 19
  3511                           
  3512                           ;my_i2c.c: 264: ic_ptr = ic;
  3513                           
  3514                           ; BSR set to: 1
  3515                           ;incstack = 0
  3516  001742  0101               	movlb	1	; () banked
  3517  001744  0100               	movlb	0	; () banked
  3518  001746  C183  F0E0         	movff	init_i2c@ic+1,_ic_ptr+1
  3519  00174A  0101               	movlb	1	; () banked
  3520  00174C  0100               	movlb	0	; () banked
  3521  00174E  C182  F0DF         	movff	init_i2c@ic,_ic_ptr
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;my_i2c.c: 265: ic_ptr->buflen = 0;
  3525  001752  0100               	movlb	0	; () banked
  3526  001754  EE20 F00A          	lfsr	2,10
  3527  001758  0100               	movlb	0	; () banked
  3528  00175A  51DF               	movf	_ic_ptr& (0+255),w,b
  3529  00175C  26D9               	addwf	fsr2l,f,c
  3530  00175E  0100               	movlb	0	; () banked
  3531  001760  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  3532  001762  22DA               	addwfc	fsr2h,f,c
  3533  001764  0E00               	movlw	0
  3534  001766  6EDF               	movwf	indf2,c
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;my_i2c.c: 266: ic_ptr->event_count = 0;
  3538  001768  0100               	movlb	0	; () banked
  3539  00176A  EE20 F00B          	lfsr	2,11
  3540  00176E  0100               	movlb	0	; () banked
  3541  001770  51DF               	movf	_ic_ptr& (0+255),w,b
  3542  001772  26D9               	addwf	fsr2l,f,c
  3543  001774  0100               	movlb	0	; () banked
  3544  001776  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  3545  001778  22DA               	addwfc	fsr2h,f,c
  3546  00177A  0E00               	movlw	0
  3547  00177C  6EDF               	movwf	indf2,c
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;my_i2c.c: 267: ic_ptr->status = 0x5;
  3551  00177E  0100               	movlb	0	; () banked
  3552  001780  EE20 F00C          	lfsr	2,12
  3553  001784  0100               	movlb	0	; () banked
  3554  001786  51DF               	movf	_ic_ptr& (0+255),w,b
  3555  001788  26D9               	addwf	fsr2l,f,c
  3556  00178A  0100               	movlb	0	; () banked
  3557  00178C  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  3558  00178E  22DA               	addwfc	fsr2h,f,c
  3559  001790  0E05               	movlw	5
  3560  001792  6EDF               	movwf	indf2,c
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;my_i2c.c: 268: ic_ptr->error_count = 0;
  3564  001794  0100               	movlb	0	; () banked
  3565  001796  EE20 F00E          	lfsr	2,14
  3566  00179A  0100               	movlb	0	; () banked
  3567  00179C  51DF               	movf	_ic_ptr& (0+255),w,b
  3568  00179E  26D9               	addwf	fsr2l,f,c
  3569  0017A0  0100               	movlb	0	; () banked
  3570  0017A2  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  3571  0017A4  22DA               	addwfc	fsr2h,f,c
  3572  0017A6  0E00               	movlw	0
  3573  0017A8  6EDF               	movwf	indf2,c
  3574                           
  3575                           ; BSR set to: 0
  3576  0017AA  0012               	return	
  3577  0017AC                     __end_of_init_i2c:
  3578                           	opt stack 0
  3579                           tblptru	equ	0xFF8
  3580                           tblptrh	equ	0xFF7
  3581                           tblptrl	equ	0xFF6
  3582                           tablat	equ	0xFF5
  3583                           prodh	equ	0xFF4
  3584                           prodl	equ	0xFF3
  3585                           postinc0	equ	0xFEE
  3586                           wreg	equ	0xFE8
  3587                           indf1	equ	0xFE7
  3588                           postdec1	equ	0xFE5
  3589                           fsr1h	equ	0xFE2
  3590                           fsr1l	equ	0xFE1
  3591                           indf2	equ	0xFDF
  3592                           postinc2	equ	0xFDE
  3593                           postdec2	equ	0xFDD
  3594                           fsr2h	equ	0xFDA
  3595                           fsr2l	equ	0xFD9
  3596                           status	equ	0xFD8
  3597                           
  3598 ;; *************** function _i2c_master_recv *****************
  3599 ;; Defined at:
  3600 ;;		line 98 in file "../src/my_i2c_master.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;  length          1    wreg     unsigned char 
  3603 ;;  data            1    0[BANK1 ] unsigned char 
  3604 ;;  slave_addres    1    1[BANK1 ] unsigned char 
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;  length          1    3[BANK1 ] unsigned char 
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  1    wreg      unsigned char 
  3609 ;; Registers used:
  3610 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3616 ;;      Params:         0       0       2       0       0
  3617 ;;      Locals:         0       0       1       0       0
  3618 ;;      Temps:          0       0       1       0       0
  3619 ;;      Totals:         0       0       4       0       0
  3620 ;;Total ram usage:        4 bytes
  3621 ;; Hardware stack levels used:    1
  3622 ;; Hardware stack levels required when called:   11
  3623 ;; This function calls:
  3624 ;;		Nothing
  3625 ;; This function is called by:
  3626 ;;		_main
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           	psect	text15
  3631  001256                     __ptext15:
  3632                           	opt stack 0
  3633  001256                     _i2c_master_recv:
  3634                           	opt stack 19
  3635                           
  3636                           ; BSR set to: 0
  3637                           ;incstack = 0
  3638                           ;i2c_master_recv@length stored from wreg
  3639  001256  CFE8 F185          	movff	wreg,i2c_master_recv@length
  3640                           
  3641                           ;my_i2c_master.c: 101: if ( ic_ptr->state != IDLE) {
  3642  00125A  C0DA  FFD9         	movff	my_i2c_master@ic_ptr,fsr2l
  3643  00125E  C0DB  FFDA         	movff	my_i2c_master@ic_ptr+1,fsr2h
  3644  001262  50DF               	movf	indf2,w,c
  3645  001264  A4D8               	btfss	status,2,c
  3646  001266  0012               	return	
  3647                           
  3648                           ;my_i2c_master.c: 103: }
  3649                           ;my_i2c_master.c: 105: mode = MASTER_READ;
  3650                           
  3651                           ;my_i2c_master.c: 102: return 0;
  3652                           ;	Return value of _i2c_master_recv is never used
  3653  001268  0101               	movlb	1	; () banked
  3654  00126A  6F84               	movwf	??_i2c_master_recv& (0+255),b
  3655  00126C  0E02               	movlw	2
  3656  00126E  6E40               	movwf	_mode,c
  3657  001270  0101               	movlb	1	; () banked
  3658  001272  5184               	movf	??_i2c_master_recv& (0+255),w,b
  3659                           
  3660                           ; BSR set to: 1
  3661                           ;my_i2c_master.c: 107: ic_ptr->buffer_length = length;
  3662  001274  0100               	movlb	0	; () banked
  3663  001276  EE20 F00B          	lfsr	2,11
  3664  00127A  0100               	movlb	0	; () banked
  3665  00127C  51DA               	movf	my_i2c_master@ic_ptr& (0+255),w,b
  3666  00127E  26D9               	addwf	fsr2l,f,c
  3667  001280  0100               	movlb	0	; () banked
  3668  001282  51DB               	movf	(my_i2c_master@ic_ptr+1)& (0+255),w,b
  3669  001284  22DA               	addwfc	fsr2h,f,c
  3670  001286  0101               	movlb	1	; () banked
  3671  001288  C185  FFDF         	movff	i2c_master_recv@length,indf2
  3672                           
  3673                           ; BSR set to: 1
  3674                           ;my_i2c_master.c: 108: ic_ptr->buffer_index = 0;
  3675  00128C  0100               	movlb	0	; () banked
  3676  00128E  EE20 F00C          	lfsr	2,12
  3677  001292  0100               	movlb	0	; () banked
  3678  001294  51DA               	movf	my_i2c_master@ic_ptr& (0+255),w,b
  3679  001296  26D9               	addwf	fsr2l,f,c
  3680  001298  0100               	movlb	0	; () banked
  3681  00129A  51DB               	movf	(my_i2c_master@ic_ptr+1)& (0+255),w,b
  3682  00129C  22DA               	addwfc	fsr2h,f,c
  3683  00129E  0E00               	movlw	0
  3684  0012A0  6EDF               	movwf	indf2,c
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;my_i2c_master.c: 109: ic_ptr->slave_address = slave_address << 1;
  3688  0012A2  0100               	movlb	0	; () banked
  3689  0012A4  EE20 F00E          	lfsr	2,14
  3690  0012A8  0100               	movlb	0	; () banked
  3691  0012AA  51DA               	movf	my_i2c_master@ic_ptr& (0+255),w,b
  3692  0012AC  26D9               	addwf	fsr2l,f,c
  3693  0012AE  0100               	movlb	0	; () banked
  3694  0012B0  51DB               	movf	(my_i2c_master@ic_ptr+1)& (0+255),w,b
  3695  0012B2  22DA               	addwfc	fsr2h,f,c
  3696  0012B4  0101               	movlb	1	; () banked
  3697  0012B6  0101               	movlb	1	; () banked
  3698  0012B8  5183               	movf	i2c_master_recv@slave_address& (0+255),w,b
  3699  0012BA  0101               	movlb	1	; () banked
  3700  0012BC  2583               	addwf	i2c_master_recv@slave_address& (0+255),w,b
  3701  0012BE  6EDF               	movwf	indf2,c
  3702                           
  3703                           ; BSR set to: 1
  3704                           ;my_i2c_master.c: 110: ic_ptr->address = data;
  3705  0012C0  0100               	movlb	0	; () banked
  3706  0012C2  EE20 F00D          	lfsr	2,13
  3707  0012C6  0100               	movlb	0	; () banked
  3708  0012C8  51DA               	movf	my_i2c_master@ic_ptr& (0+255),w,b
  3709  0012CA  26D9               	addwf	fsr2l,f,c
  3710  0012CC  0100               	movlb	0	; () banked
  3711  0012CE  51DB               	movf	(my_i2c_master@ic_ptr+1)& (0+255),w,b
  3712  0012D0  22DA               	addwfc	fsr2h,f,c
  3713  0012D2  0101               	movlb	1	; () banked
  3714  0012D4  C182  FFDF         	movff	i2c_master_recv@data,indf2
  3715                           
  3716                           ; BSR set to: 1
  3717                           ;my_i2c_master.c: 111: SSP1CON2bits.SEN = 1;
  3718  0012D8  80C5               	bsf	4037,0,c	;volatile
  3719                           
  3720                           ; BSR set to: 1
  3721                           ;my_i2c_master.c: 112: ic_ptr->state = START_BIT;
  3722  0012DA  C0DA  FFD9         	movff	my_i2c_master@ic_ptr,fsr2l
  3723  0012DE  C0DB  FFDA         	movff	my_i2c_master@ic_ptr+1,fsr2h
  3724  0012E2  0E01               	movlw	1
  3725  0012E4  6EDF               	movwf	indf2,c
  3726  0012E6  0012               	return	
  3727  0012E8                     __end_of_i2c_master_recv:
  3728                           	opt stack 0
  3729                           tblptru	equ	0xFF8
  3730                           tblptrh	equ	0xFF7
  3731                           tblptrl	equ	0xFF6
  3732                           tablat	equ	0xFF5
  3733                           prodh	equ	0xFF4
  3734                           prodl	equ	0xFF3
  3735                           postinc0	equ	0xFEE
  3736                           wreg	equ	0xFE8
  3737                           indf1	equ	0xFE7
  3738                           postdec1	equ	0xFE5
  3739                           fsr1h	equ	0xFE2
  3740                           fsr1l	equ	0xFE1
  3741                           indf2	equ	0xFDF
  3742                           postinc2	equ	0xFDE
  3743                           postdec2	equ	0xFDD
  3744                           fsr2h	equ	0xFDA
  3745                           fsr2l	equ	0xFD9
  3746                           status	equ	0xFD8
  3747                           
  3748 ;; *************** function _i2c_configure_master *****************
  3749 ;; Defined at:
  3750 ;;		line 28 in file "../src/my_i2c_master.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;		None
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;		None
  3755 ;; Return value:  Size  Location     Type
  3756 ;;		None               void
  3757 ;; Registers used:
  3758 ;;		wreg, fsr2l, fsr2h, status,2
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3764 ;;      Params:         0       0       0       0       0
  3765 ;;      Locals:         0       0       0       0       0
  3766 ;;      Temps:          0       0       0       0       0
  3767 ;;      Totals:         0       0       0       0       0
  3768 ;;Total ram usage:        0 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; Hardware stack levels required when called:   11
  3771 ;; This function calls:
  3772 ;;		Nothing
  3773 ;; This function is called by:
  3774 ;;		_main
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778                           	psect	text16
  3779  001C6E                     __ptext16:
  3780                           	opt stack 0
  3781  001C6E                     _i2c_configure_master:
  3782                           	opt stack 19
  3783                           
  3784                           ;my_i2c_master.c: 34: TRISCbits.TRISC3 = 1;
  3785                           
  3786                           ;incstack = 0
  3787  001C6E  8694               	bsf	3988,3,c	;volatile
  3788                           
  3789                           ;my_i2c_master.c: 35: TRISCbits.TRISC4 = 1;
  3790  001C70  8894               	bsf	3988,4,c	;volatile
  3791                           
  3792                           ;my_i2c_master.c: 41: SSP1STATbits.SMP = 1;
  3793  001C72  8EC7               	bsf	4039,7,c	;volatile
  3794                           
  3795                           ;my_i2c_master.c: 42: SSP1STATbits.CKE = 0;
  3796  001C74  9CC7               	bcf	4039,6,c	;volatile
  3797                           
  3798                           ;my_i2c_master.c: 45: SSP1ADD = 29;
  3799  001C76  0E1D               	movlw	29
  3800  001C78  6EC8               	movwf	4040,c	;volatile
  3801                           
  3802                           ;my_i2c_master.c: 48: SSP1CON1 = 0x8;
  3803  001C7A  0E08               	movlw	8
  3804  001C7C  6EC6               	movwf	4038,c	;volatile
  3805                           
  3806                           ;my_i2c_master.c: 49: SSP1CON2 = 0;
  3807  001C7E  0E00               	movlw	0
  3808  001C80  6EC5               	movwf	4037,c	;volatile
  3809                           
  3810                           ;my_i2c_master.c: 52: SSP1CON1bits.SSPEN = 1;
  3811  001C82  8AC6               	bsf	4038,5,c	;volatile
  3812                           
  3813                           ;my_i2c_master.c: 54: ic_ptr->state = IDLE;
  3814  001C84  C0DA  FFD9         	movff	my_i2c_master@ic_ptr,fsr2l
  3815  001C88  C0DB  FFDA         	movff	my_i2c_master@ic_ptr+1,fsr2h
  3816  001C8C  0E00               	movlw	0
  3817  001C8E  6EDF               	movwf	indf2,c
  3818  001C90  0012               	return	
  3819  001C92                     __end_of_i2c_configure_master:
  3820                           	opt stack 0
  3821                           tblptru	equ	0xFF8
  3822                           tblptrh	equ	0xFF7
  3823                           tblptrl	equ	0xFF6
  3824                           tablat	equ	0xFF5
  3825                           prodh	equ	0xFF4
  3826                           prodl	equ	0xFF3
  3827                           postinc0	equ	0xFEE
  3828                           wreg	equ	0xFE8
  3829                           indf1	equ	0xFE7
  3830                           postdec1	equ	0xFE5
  3831                           fsr1h	equ	0xFE2
  3832                           fsr1l	equ	0xFE1
  3833                           indf2	equ	0xFDF
  3834                           postinc2	equ	0xFDE
  3835                           postdec2	equ	0xFDD
  3836                           fsr2h	equ	0xFDA
  3837                           fsr2l	equ	0xFD9
  3838                           status	equ	0xFD8
  3839                           
  3840 ;; *************** function _enable_interrupts *****************
  3841 ;; Defined at:
  3842 ;;		line 96 in file "../src/interrupts.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;		None
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;		None
  3847 ;; Return value:  Size  Location     Type
  3848 ;;		None               void
  3849 ;; Registers used:
  3850 ;;		None
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3856 ;;      Params:         0       0       0       0       0
  3857 ;;      Locals:         0       0       0       0       0
  3858 ;;      Temps:          0       0       0       0       0
  3859 ;;      Totals:         0       0       0       0       0
  3860 ;;Total ram usage:        0 bytes
  3861 ;; Hardware stack levels used:    1
  3862 ;; Hardware stack levels required when called:   11
  3863 ;; This function calls:
  3864 ;;		Nothing
  3865 ;; This function is called by:
  3866 ;;		_main
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           	psect	text17
  3871  001D7E                     __ptext17:
  3872                           	opt stack 0
  3873  001D7E                     _enable_interrupts:
  3874                           	opt stack 19
  3875                           
  3876                           ;interrupts.c: 99: RCONbits.IPEN = 1;
  3877                           
  3878                           ;incstack = 0
  3879  001D7E  8ED0               	bsf	4048,7,c	;volatile
  3880                           
  3881                           ;interrupts.c: 100: INTCONbits.GIEH = 1;
  3882  001D80  8EF2               	bsf	intcon,7,c	;volatile
  3883                           
  3884                           ;interrupts.c: 101: INTCONbits.GIEL = 1;
  3885  001D82  8CF2               	bsf	intcon,6,c	;volatile
  3886                           
  3887                           ;interrupts.c: 103: INTCONbits.TMR0IE = 1;
  3888  001D84  8AF2               	bsf	intcon,5,c	;volatile
  3889                           
  3890                           ;interrupts.c: 105: INTCON2bits.TMR0IP = 1;
  3891  001D86  84F1               	bsf	intcon2,2,c	;volatile
  3892  001D88  0012               	return	
  3893  001D8A                     __end_of_enable_interrupts:
  3894                           	opt stack 0
  3895                           tblptru	equ	0xFF8
  3896                           tblptrh	equ	0xFF7
  3897                           tblptrl	equ	0xFF6
  3898                           tablat	equ	0xFF5
  3899                           prodh	equ	0xFF4
  3900                           prodl	equ	0xFF3
  3901                           intcon	equ	0xFF2
  3902                           intcon2	equ	0xFF1
  3903                           postinc0	equ	0xFEE
  3904                           wreg	equ	0xFE8
  3905                           indf1	equ	0xFE7
  3906                           postdec1	equ	0xFE5
  3907                           fsr1h	equ	0xFE2
  3908                           fsr1l	equ	0xFE1
  3909                           indf2	equ	0xFDF
  3910                           postinc2	equ	0xFDE
  3911                           postdec2	equ	0xFDD
  3912                           fsr2h	equ	0xFDA
  3913                           fsr2l	equ	0xFD9
  3914                           status	equ	0xFD8
  3915                           
  3916 ;; *************** function _block_on_To_msgqueues *****************
  3917 ;; Defined at:
  3918 ;;		line 263 in file "../src/messages.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;		None
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;		None
  3923 ;; Return value:  Size  Location     Type
  3924 ;;		None               void
  3925 ;; Registers used:
  3926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3932 ;;      Params:         0       0       0       0       0
  3933 ;;      Locals:         0       0       0       0       0
  3934 ;;      Temps:          0       0       1       0       0
  3935 ;;      Totals:         0       0       1       0       0
  3936 ;;Total ram usage:        1 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; Hardware stack levels required when called:   14
  3939 ;; This function calls:
  3940 ;;		_Delay1KTCYx
  3941 ;;		_check_msg
  3942 ;;		_in_main
  3943 ;; This function is called by:
  3944 ;;		_main
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           	psect	text18
  3949  001056                     __ptext18:
  3950                           	opt stack 0
  3951  001056                     _block_on_To_msgqueues:
  3952                           	opt stack 16
  3953                           
  3954                           ;messages.c: 264: if (!in_main()) {
  3955                           
  3956                           ;incstack = 0
  3957  001056  EC87  F00C         	call	_in_main	;wreg free
  3958  00105A  0101               	movlb	1	; () banked
  3959  00105C  0101               	movlb	1	; () banked
  3960  00105E  5187               	movf	(?_in_main+1)& (0+255),w,b
  3961  001060  0101               	movlb	1	; () banked
  3962  001062  1186               	iorwf	?_in_main& (0+255),w,b
  3963  001064  B4D8               	btfsc	status,2,c
  3964  001066  0012               	return	
  3965                           
  3966                           ; BSR set to: 1
  3967                           ;messages.c: 266: }
  3968                           ;messages.c: 267: LATBbits.LATB3 = 1;
  3969                           
  3970                           ; BSR set to: 1
  3971                           ;messages.c: 265: return;
  3972  001068  868A               	bsf	3978,3,c	;volatile
  3973                           
  3974                           ; BSR set to: 1
  3975                           ;messages.c: 268: MQ_Main_Willing_to_block = 1;
  3976  00106A  0101               	movlb	1	; () banked
  3977  00106C  6F88               	movwf	??_block_on_To_msgqueues& (0+255),b
  3978  00106E  0E01               	movlw	1
  3979  001070  0100               	movlb	0	; () banked
  3980  001072  0100               	movlb	0	; () banked
  3981  001074  6FDC               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3982  001076  0101               	movlb	1	; () banked
  3983  001078  5188               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3984  00107A                     l4419:
  3985                           
  3986                           ; BSR set to: 1
  3987                           ;messages.c: 270: if (check_msg(&ToMainHigh_MQ)) {
  3988  00107A  0101               	movlb	1	; () banked
  3989  00107C  0E01               	movlw	high _ToMainHigh_MQ
  3990  00107E  0101               	movlb	1	; () banked
  3991  001080  0101               	movlb	1	; () banked
  3992  001082  6F83               	movwf	(check_msg@qptr+1)& (0+255),b
  3993  001084  0101               	movlb	1	; () banked
  3994  001086  0E16               	movlw	low _ToMainHigh_MQ
  3995  001088  0101               	movlb	1	; () banked
  3996  00108A  0101               	movlb	1	; () banked
  3997  00108C  6F82               	movwf	check_msg@qptr& (0+255),b
  3998  00108E  EC60  F00D         	call	_check_msg	;wreg free
  3999  001092  0900               	iorlw	0
  4000  001094  B4D8               	btfsc	status,2,c
  4001  001096  D00A               	goto	l4427
  4002                           
  4003                           ;messages.c: 271: MQ_Main_Willing_to_block = 0;
  4004  001098  0101               	movlb	1	; () banked
  4005  00109A  6F88               	movwf	??_block_on_To_msgqueues& (0+255),b
  4006  00109C  0E00               	movlw	0
  4007  00109E  0100               	movlb	0	; () banked
  4008  0010A0  0100               	movlb	0	; () banked
  4009  0010A2  6FDC               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  4010  0010A4  0101               	movlb	1	; () banked
  4011  0010A6  5188               	movf	??_block_on_To_msgqueues& (0+255),w,b
  4012                           
  4013                           ; BSR set to: 1
  4014                           ;messages.c: 272: LATBbits.LATB3 = 0;
  4015  0010A8  968A               	bcf	3978,3,c	;volatile
  4016  0010AA  0012               	return	
  4017  0010AC                     l4427:
  4018                           
  4019                           ;messages.c: 274: }
  4020                           ;messages.c: 275: if (check_msg(&ToMainLow_MQ)) {
  4021  0010AC  0101               	movlb	1	; () banked
  4022  0010AE  0E01               	movlw	high _ToMainLow_MQ
  4023  0010B0  0101               	movlb	1	; () banked
  4024  0010B2  0101               	movlb	1	; () banked
  4025  0010B4  6F83               	movwf	(check_msg@qptr+1)& (0+255),b
  4026  0010B6  0101               	movlb	1	; () banked
  4027  0010B8  0E4C               	movlw	low _ToMainLow_MQ
  4028  0010BA  0101               	movlb	1	; () banked
  4029  0010BC  0101               	movlb	1	; () banked
  4030  0010BE  6F82               	movwf	check_msg@qptr& (0+255),b
  4031  0010C0  EC60  F00D         	call	_check_msg	;wreg free
  4032  0010C4  0900               	iorlw	0
  4033  0010C6  B4D8               	btfsc	status,2,c
  4034  0010C8  D00A               	goto	l4435
  4035                           
  4036                           ;messages.c: 276: MQ_Main_Willing_to_block = 0;
  4037  0010CA  0101               	movlb	1	; () banked
  4038  0010CC  6F88               	movwf	??_block_on_To_msgqueues& (0+255),b
  4039  0010CE  0E00               	movlw	0
  4040  0010D0  0100               	movlb	0	; () banked
  4041  0010D2  0100               	movlb	0	; () banked
  4042  0010D4  6FDC               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  4043  0010D6  0101               	movlb	1	; () banked
  4044  0010D8  5188               	movf	??_block_on_To_msgqueues& (0+255),w,b
  4045                           
  4046                           ; BSR set to: 1
  4047                           ;messages.c: 277: LATBbits.LATB3 = 0;
  4048  0010DA  968A               	bcf	3978,3,c	;volatile
  4049  0010DC  0012               	return	
  4050  0010DE                     l4435:
  4051                           
  4052                           ;messages.c: 279: }
  4053                           ;messages.c: 280: Delay1KTCYx(10);
  4054  0010DE  0E0A               	movlw	10
  4055  0010E0  EC69  F00E         	call	_Delay1KTCYx
  4056                           
  4057                           ;messages.c: 281: LATBbits.LATB3 = !LATBbits.LATB3;
  4058  0010E4  B68A               	btfsc	3978,3,c	;volatile
  4059  0010E6  D002               	goto	u3470
  4060  0010E8  0E01               	movlw	1
  4061  0010EA  D001               	goto	u3476
  4062  0010EC                     u3470:
  4063  0010EC  0E00               	movlw	0
  4064  0010EE                     u3476:
  4065  0010EE  0101               	movlb	1	; () banked
  4066  0010F0  6F88               	movwf	??_block_on_To_msgqueues& (0+255),b
  4067  0010F2  0101               	movlb	1	; () banked
  4068  0010F4  4788               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  4069  0010F6  4788               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  4070  0010F8  4788               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  4071  0010FA  508A               	movf	3978,w,c	;volatile
  4072  0010FC  0101               	movlb	1	; () banked
  4073  0010FE  1988               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  4074  001100  0BF7               	andlw	-9
  4075  001102  1988               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  4076  001104  6E8A               	movwf	3978,c	;volatile
  4077  001106  D7B9               	goto	l4419
  4078  001108                     __end_of_block_on_To_msgqueues:
  4079                           	opt stack 0
  4080                           tblptru	equ	0xFF8
  4081                           tblptrh	equ	0xFF7
  4082                           tblptrl	equ	0xFF6
  4083                           tablat	equ	0xFF5
  4084                           prodh	equ	0xFF4
  4085                           prodl	equ	0xFF3
  4086                           intcon	equ	0xFF2
  4087                           intcon2	equ	0xFF1
  4088                           postinc0	equ	0xFEE
  4089                           wreg	equ	0xFE8
  4090                           indf1	equ	0xFE7
  4091                           postdec1	equ	0xFE5
  4092                           fsr1h	equ	0xFE2
  4093                           fsr1l	equ	0xFE1
  4094                           indf2	equ	0xFDF
  4095                           postinc2	equ	0xFDE
  4096                           postdec2	equ	0xFDD
  4097                           fsr2h	equ	0xFDA
  4098                           fsr2l	equ	0xFD9
  4099                           status	equ	0xFD8
  4100                           
  4101 ;; *************** function _in_main *****************
  4102 ;; Defined at:
  4103 ;;		line 126 in file "../src/interrupts.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;		None
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;		None
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  2    4[BANK1 ] int 
  4110 ;; Registers used:
  4111 ;;		wreg, status,2, status,0, cstack
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4117 ;;      Params:         0       0       2       0       0
  4118 ;;      Locals:         0       0       0       0       0
  4119 ;;      Temps:          0       0       0       0       0
  4120 ;;      Totals:         0       0       2       0       0
  4121 ;;Total ram usage:        2 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; Hardware stack levels required when called:   13
  4124 ;; This function calls:
  4125 ;;		_in_high_int
  4126 ;;		_in_low_int
  4127 ;; This function is called by:
  4128 ;;		_block_on_To_msgqueues
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	text19
  4133  00190E                     __ptext19:
  4134                           	opt stack 0
  4135  00190E                     _in_main:
  4136                           	opt stack 16
  4137                           
  4138                           ;interrupts.c: 127: if ((!in_low_int()) && (!in_high_int())) {
  4139                           
  4140                           ; BSR set to: 1
  4141                           ;incstack = 0
  4142  00190E  EC64  F00C         	call	_in_low_int	;wreg free
  4143  001912  0101               	movlb	1	; () banked
  4144  001914  0101               	movlb	1	; () banked
  4145  001916  5185               	movf	(?_in_low_int+1)& (0+255),w,b
  4146  001918  0101               	movlb	1	; () banked
  4147  00191A  1184               	iorwf	?_in_low_int& (0+255),w,b
  4148  00191C  A4D8               	btfss	status,2,c
  4149  00191E  D011               	goto	l4449
  4150                           
  4151                           ; BSR set to: 1
  4152  001920  EC9B  F00E         	call	_in_high_int	;wreg free
  4153  001924  0101               	movlb	1	; () banked
  4154  001926  0101               	movlb	1	; () banked
  4155  001928  5183               	movf	(?_in_high_int+1)& (0+255),w,b
  4156  00192A  0101               	movlb	1	; () banked
  4157  00192C  1182               	iorwf	?_in_high_int& (0+255),w,b
  4158  00192E  A4D8               	btfss	status,2,c
  4159  001930  D008               	goto	l4449
  4160                           
  4161                           ; BSR set to: 1
  4162                           ;interrupts.c: 128: return (1);
  4163  001932  0E00               	movlw	0
  4164  001934  0101               	movlb	1	; () banked
  4165  001936  0101               	movlb	1	; () banked
  4166  001938  6F87               	movwf	(?_in_main+1)& (0+255),b
  4167  00193A  0E01               	movlw	1
  4168  00193C  0101               	movlb	1	; () banked
  4169  00193E  6F86               	movwf	?_in_main& (0+255),b
  4170  001940  0012               	return	
  4171  001942                     l4449:
  4172                           
  4173                           ; BSR set to: 1
  4174                           ;interrupts.c: 130: return (0);
  4175  001942  0E00               	movlw	0
  4176  001944  0101               	movlb	1	; () banked
  4177  001946  0101               	movlb	1	; () banked
  4178  001948  6F87               	movwf	(?_in_main+1)& (0+255),b
  4179  00194A  0E00               	movlw	0
  4180  00194C  0101               	movlb	1	; () banked
  4181  00194E  6F86               	movwf	?_in_main& (0+255),b
  4182  001950  0012               	return	
  4183  001952                     __end_of_in_main:
  4184                           	opt stack 0
  4185                           tblptru	equ	0xFF8
  4186                           tblptrh	equ	0xFF7
  4187                           tblptrl	equ	0xFF6
  4188                           tablat	equ	0xFF5
  4189                           prodh	equ	0xFF4
  4190                           prodl	equ	0xFF3
  4191                           intcon	equ	0xFF2
  4192                           intcon2	equ	0xFF1
  4193                           postinc0	equ	0xFEE
  4194                           wreg	equ	0xFE8
  4195                           indf1	equ	0xFE7
  4196                           postdec1	equ	0xFE5
  4197                           fsr1h	equ	0xFE2
  4198                           fsr1l	equ	0xFE1
  4199                           indf2	equ	0xFDF
  4200                           postinc2	equ	0xFDE
  4201                           postdec2	equ	0xFDD
  4202                           fsr2h	equ	0xFDA
  4203                           fsr2l	equ	0xFD9
  4204                           status	equ	0xFD8
  4205                           
  4206 ;; *************** function _in_low_int *****************
  4207 ;; Defined at:
  4208 ;;		line 116 in file "../src/interrupts.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;		None
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;		None
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  2    2[BANK1 ] int 
  4215 ;; Registers used:
  4216 ;;		wreg, status,2, status,0, cstack
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4222 ;;      Params:         0       0       2       0       0
  4223 ;;      Locals:         0       0       0       0       0
  4224 ;;      Temps:          0       0       0       0       0
  4225 ;;      Totals:         0       0       2       0       0
  4226 ;;Total ram usage:        2 bytes
  4227 ;; Hardware stack levels used:    1
  4228 ;; Hardware stack levels required when called:   12
  4229 ;; This function calls:
  4230 ;;		_in_high_int
  4231 ;; This function is called by:
  4232 ;;		_in_main
  4233 ;;		_SleepIfOkay
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           	psect	text20
  4238  0018C8                     __ptext20:
  4239                           	opt stack 0
  4240  0018C8                     _in_low_int:
  4241                           	opt stack 16
  4242                           
  4243                           ;interrupts.c: 117: if (INTCONbits.GIEL == 1) {
  4244                           
  4245                           ; BSR set to: 1
  4246                           ;incstack = 0
  4247  0018C8  ACF2               	btfss	intcon,6,c	;volatile
  4248  0018CA  D008               	goto	l4397
  4249                           
  4250                           ;interrupts.c: 118: return (0);
  4251  0018CC  0E00               	movlw	0
  4252  0018CE  0101               	movlb	1	; () banked
  4253  0018D0  0101               	movlb	1	; () banked
  4254  0018D2  6F85               	movwf	(?_in_low_int+1)& (0+255),b
  4255  0018D4  0E00               	movlw	0
  4256  0018D6  0101               	movlb	1	; () banked
  4257  0018D8  6F84               	movwf	?_in_low_int& (0+255),b
  4258  0018DA  0012               	return	
  4259  0018DC                     l4397:
  4260  0018DC  EC9B  F00E         	call	_in_high_int	;wreg free
  4261  0018E0  0101               	movlb	1	; () banked
  4262  0018E2  0101               	movlb	1	; () banked
  4263  0018E4  5183               	movf	(?_in_high_int+1)& (0+255),w,b
  4264  0018E6  0101               	movlb	1	; () banked
  4265  0018E8  1182               	iorwf	?_in_high_int& (0+255),w,b
  4266  0018EA  B4D8               	btfsc	status,2,c
  4267  0018EC  D008               	goto	l4405
  4268                           
  4269                           ; BSR set to: 1
  4270                           ;interrupts.c: 120: return (0);
  4271  0018EE  0E00               	movlw	0
  4272  0018F0  0101               	movlb	1	; () banked
  4273  0018F2  0101               	movlb	1	; () banked
  4274  0018F4  6F85               	movwf	(?_in_low_int+1)& (0+255),b
  4275  0018F6  0E00               	movlw	0
  4276  0018F8  0101               	movlb	1	; () banked
  4277  0018FA  6F84               	movwf	?_in_low_int& (0+255),b
  4278  0018FC  0012               	return	
  4279  0018FE                     l4405:
  4280                           
  4281                           ; BSR set to: 1
  4282                           ;interrupts.c: 122: return (1);
  4283  0018FE  0E00               	movlw	0
  4284  001900  0101               	movlb	1	; () banked
  4285  001902  0101               	movlb	1	; () banked
  4286  001904  6F85               	movwf	(?_in_low_int+1)& (0+255),b
  4287  001906  0E01               	movlw	1
  4288  001908  0101               	movlb	1	; () banked
  4289  00190A  6F84               	movwf	?_in_low_int& (0+255),b
  4290  00190C  0012               	return	
  4291  00190E                     __end_of_in_low_int:
  4292                           	opt stack 0
  4293                           tblptru	equ	0xFF8
  4294                           tblptrh	equ	0xFF7
  4295                           tblptrl	equ	0xFF6
  4296                           tablat	equ	0xFF5
  4297                           prodh	equ	0xFF4
  4298                           prodl	equ	0xFF3
  4299                           intcon	equ	0xFF2
  4300                           intcon2	equ	0xFF1
  4301                           postinc0	equ	0xFEE
  4302                           wreg	equ	0xFE8
  4303                           indf1	equ	0xFE7
  4304                           postdec1	equ	0xFE5
  4305                           fsr1h	equ	0xFE2
  4306                           fsr1l	equ	0xFE1
  4307                           indf2	equ	0xFDF
  4308                           postinc2	equ	0xFDE
  4309                           postdec2	equ	0xFDD
  4310                           fsr2h	equ	0xFDA
  4311                           fsr2l	equ	0xFD9
  4312                           status	equ	0xFD8
  4313                           
  4314 ;; *************** function _in_high_int *****************
  4315 ;; Defined at:
  4316 ;;		line 108 in file "../src/interrupts.c"
  4317 ;; Parameters:    Size  Location     Type
  4318 ;;		None
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;		None
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  2    0[BANK1 ] int 
  4323 ;; Registers used:
  4324 ;;		wreg, status,2
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4330 ;;      Params:         0       0       2       0       0
  4331 ;;      Locals:         0       0       0       0       0
  4332 ;;      Temps:          0       0       0       0       0
  4333 ;;      Totals:         0       0       2       0       0
  4334 ;;Total ram usage:        2 bytes
  4335 ;; Hardware stack levels used:    1
  4336 ;; Hardware stack levels required when called:   11
  4337 ;; This function calls:
  4338 ;;		Nothing
  4339 ;; This function is called by:
  4340 ;;		_in_low_int
  4341 ;;		_in_main
  4342 ;;		_SleepIfOkay
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           
  4346                           	psect	text21
  4347  001D36                     __ptext21:
  4348                           	opt stack 0
  4349  001D36                     _in_high_int:
  4350                           	opt stack 16
  4351                           
  4352                           ;interrupts.c: 109: return (!INTCONbits.GIEH);
  4353                           
  4354                           ; BSR set to: 1
  4355                           ;incstack = 0
  4356  001D36  0E00               	movlw	0
  4357  001D38  AEF2               	btfss	intcon,7,c	;volatile
  4358  001D3A  0E01               	movlw	1
  4359  001D3C  0101               	movlb	1	; () banked
  4360  001D3E  0101               	movlb	1	; () banked
  4361  001D40  6F82               	movwf	?_in_high_int& (0+255),b
  4362  001D42  0101               	movlb	1	; () banked
  4363  001D44  6B83               	clrf	(?_in_high_int+1)& (0+255),b
  4364  001D46  0012               	return	
  4365  001D48                     __end_of_in_high_int:
  4366                           	opt stack 0
  4367                           tblptru	equ	0xFF8
  4368                           tblptrh	equ	0xFF7
  4369                           tblptrl	equ	0xFF6
  4370                           tablat	equ	0xFF5
  4371                           prodh	equ	0xFF4
  4372                           prodl	equ	0xFF3
  4373                           intcon	equ	0xFF2
  4374                           intcon2	equ	0xFF1
  4375                           postinc0	equ	0xFEE
  4376                           wreg	equ	0xFE8
  4377                           indf1	equ	0xFE7
  4378                           postdec1	equ	0xFE5
  4379                           fsr1h	equ	0xFE2
  4380                           fsr1l	equ	0xFE1
  4381                           indf2	equ	0xFDF
  4382                           postinc2	equ	0xFDE
  4383                           postdec2	equ	0xFDD
  4384                           fsr2h	equ	0xFDA
  4385                           fsr2l	equ	0xFD9
  4386                           status	equ	0xFD8
  4387                           
  4388 ;; *************** function _check_msg *****************
  4389 ;; Defined at:
  4390 ;;		line 227 in file "../src/messages.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  4393 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;		None
  4396 ;; Return value:  Size  Location     Type
  4397 ;;                  1    wreg      unsigned char 
  4398 ;; Registers used:
  4399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4405 ;;      Params:         0       0       2       0       0
  4406 ;;      Locals:         0       0       0       0       0
  4407 ;;      Temps:          0       0       1       0       0
  4408 ;;      Totals:         0       0       3       0       0
  4409 ;;Total ram usage:        3 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:   11
  4412 ;; This function calls:
  4413 ;;		Nothing
  4414 ;; This function is called by:
  4415 ;;		_block_on_To_msgqueues
  4416 ;;		_SleepIfOkay
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           	psect	text22
  4421  001AC0                     __ptext22:
  4422                           	opt stack 0
  4423  001AC0                     _check_msg:
  4424                           	opt stack 18
  4425                           
  4426                           ;messages.c: 228: return (qptr->queue[qptr->cur_read_ind].full);
  4427                           
  4428                           ; BSR set to: 1
  4429                           ;incstack = 0
  4430  001AC0  0101               	movlb	1	; () banked
  4431  001AC2  EE20 F035          	lfsr	2,53
  4432  001AC6  0101               	movlb	1	; () banked
  4433  001AC8  5182               	movf	check_msg@qptr& (0+255),w,b
  4434  001ACA  26D9               	addwf	fsr2l,f,c
  4435  001ACC  0101               	movlb	1	; () banked
  4436  001ACE  5183               	movf	(check_msg@qptr+1)& (0+255),w,b
  4437  001AD0  22DA               	addwfc	fsr2h,f,c
  4438  001AD2  50DF               	movf	indf2,w,c
  4439  001AD4  0101               	movlb	1	; () banked
  4440  001AD6  6F84               	movwf	??_check_msg& (0+255),b
  4441  001AD8  0101               	movlb	1	; () banked
  4442  001ADA  5184               	movf	??_check_msg& (0+255),w,b
  4443  001ADC  0D0D               	mullw	13
  4444  001ADE  50F3               	movf	prodl,w,c
  4445  001AE0  0101               	movlb	1	; () banked
  4446  001AE2  0101               	movlb	1	; () banked
  4447  001AE4  2582               	addwf	check_msg@qptr& (0+255),w,b
  4448  001AE6  6ED9               	movwf	fsr2l,c
  4449  001AE8  50F4               	movf	prodh,w,c
  4450  001AEA  0101               	movlb	1	; () banked
  4451  001AEC  0101               	movlb	1	; () banked
  4452  001AEE  2183               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4453  001AF0  6EDA               	movwf	fsr2h,c
  4454  001AF2  50DF               	movf	indf2,w,c
  4455  001AF4  0012               	return	
  4456  001AF6                     __end_of_check_msg:
  4457                           	opt stack 0
  4458                           tblptru	equ	0xFF8
  4459                           tblptrh	equ	0xFF7
  4460                           tblptrl	equ	0xFF6
  4461                           tablat	equ	0xFF5
  4462                           prodh	equ	0xFF4
  4463                           prodl	equ	0xFF3
  4464                           intcon	equ	0xFF2
  4465                           intcon2	equ	0xFF1
  4466                           postinc0	equ	0xFEE
  4467                           wreg	equ	0xFE8
  4468                           indf1	equ	0xFE7
  4469                           postdec1	equ	0xFE5
  4470                           fsr1h	equ	0xFE2
  4471                           fsr1l	equ	0xFE1
  4472                           indf2	equ	0xFDF
  4473                           postinc2	equ	0xFDE
  4474                           postdec2	equ	0xFDD
  4475                           fsr2h	equ	0xFDA
  4476                           fsr2l	equ	0xFD9
  4477                           status	equ	0xFD8
  4478                           
  4479 ;; *************** function _Delay1KTCYx *****************
  4480 ;; Defined at:
  4481 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/pic18/d1ktcyx.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;  unit            1    wreg     unsigned char 
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;  unit            1    0[BANK1 ] unsigned char 
  4486 ;; Return value:  Size  Location     Type
  4487 ;;		None               void
  4488 ;; Registers used:
  4489 ;;		wreg
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4495 ;;      Params:         0       0       0       0       0
  4496 ;;      Locals:         0       0       1       0       0
  4497 ;;      Temps:          0       0       0       0       0
  4498 ;;      Totals:         0       0       1       0       0
  4499 ;;Total ram usage:        1 bytes
  4500 ;; Hardware stack levels used:    1
  4501 ;; Hardware stack levels required when called:   11
  4502 ;; This function calls:
  4503 ;;		Nothing
  4504 ;; This function is called by:
  4505 ;;		_block_on_To_msgqueues
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           	psect	text23
  4510  001CD2                     __ptext23:
  4511                           	opt stack 0
  4512  001CD2                     _Delay1KTCYx:
  4513                           	opt stack 18
  4514                           
  4515                           ; BSR set to: 1
  4516                           ;incstack = 0
  4517                           ;Delay1KTCYx@unit stored from wreg
  4518  001CD2  CFE8 F182          	movff	wreg,Delay1KTCYx@unit
  4519  001CD6                     l1065:
  4520  001CD6  0EFA               	movlw	250
  4521  001CD8                     u4177:
  4522  001CD8  F000               	nop	
  4523  001CDA  2EE8               	decfsz	wreg,f,c
  4524  001CDC  D7FD               	goto	u4177
  4525  001CDE  0101               	movlb	1	; () banked
  4526  001CE0  0101               	movlb	1	; () banked
  4527  001CE2  2F82               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4528  001CE4  D7F8               	goto	l1065
  4529  001CE6  0012               	return	
  4530  001CE8                     __end_of_Delay1KTCYx:
  4531                           	opt stack 0
  4532                           tblptru	equ	0xFF8
  4533                           tblptrh	equ	0xFF7
  4534                           tblptrl	equ	0xFF6
  4535                           tablat	equ	0xFF5
  4536                           prodh	equ	0xFF4
  4537                           prodl	equ	0xFF3
  4538                           intcon	equ	0xFF2
  4539                           intcon2	equ	0xFF1
  4540                           postinc0	equ	0xFEE
  4541                           wreg	equ	0xFE8
  4542                           indf1	equ	0xFE7
  4543                           postdec1	equ	0xFE5
  4544                           fsr1h	equ	0xFE2
  4545                           fsr1l	equ	0xFE1
  4546                           indf2	equ	0xFDF
  4547                           postinc2	equ	0xFDE
  4548                           postdec2	equ	0xFDD
  4549                           fsr2h	equ	0xFDA
  4550                           fsr2l	equ	0xFD9
  4551                           status	equ	0xFD8
  4552                           
  4553 ;; *************** function ___awdiv *****************
  4554 ;; Defined at:
  4555 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/common/awdiv.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;  dividend        2    0[BANK1 ] int 
  4558 ;;  divisor         2    2[BANK1 ] int 
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;  quotient        2    7[BANK1 ] int 
  4561 ;;  sign            1    6[BANK1 ] unsigned char 
  4562 ;;  counter         1    5[BANK1 ] unsigned char 
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  2    0[BANK1 ] int 
  4565 ;; Registers used:
  4566 ;;		wreg, status,2, status,0, prodl
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4572 ;;      Params:         0       0       4       0       0
  4573 ;;      Locals:         0       0       4       0       0
  4574 ;;      Temps:          0       0       1       0       0
  4575 ;;      Totals:         0       0       9       0       0
  4576 ;;Total ram usage:        9 bytes
  4577 ;; Hardware stack levels used:    1
  4578 ;; Hardware stack levels required when called:   11
  4579 ;; This function calls:
  4580 ;;		Nothing
  4581 ;; This function is called by:
  4582 ;;		_main
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text24
  4587  000AE6                     __ptext24:
  4588                           	opt stack 0
  4589  000AE6                     ___awdiv:
  4590                           	opt stack 19
  4591                           
  4592                           ; BSR set to: 1
  4593                           ;incstack = 0
  4594  000AE6  0101               	movlb	1	; () banked
  4595  000AE8  6F86               	movwf	??___awdiv& (0+255),b
  4596  000AEA  0E00               	movlw	0
  4597  000AEC  0101               	movlb	1	; () banked
  4598  000AEE  0101               	movlb	1	; () banked
  4599  000AF0  6F88               	movwf	___awdiv@sign& (0+255),b
  4600  000AF2  0101               	movlb	1	; () banked
  4601  000AF4  5186               	movf	??___awdiv& (0+255),w,b
  4602                           
  4603                           ; BSR set to: 1
  4604  000AF6  0101               	movlb	1	; () banked
  4605  000AF8  0101               	movlb	1	; () banked
  4606  000AFA  5185               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4607  000AFC  0A80               	xorlw	128
  4608  000AFE  6EF3               	movwf	prodl,c
  4609  000B00  0E80               	movlw	128
  4610  000B02  5CF3               	subwf	prodl,w,c
  4611  000B04  0E00               	movlw	0
  4612  000B06  B4D8               	btfsc	status,2,c
  4613  000B08  5D84               	subwf	___awdiv@divisor& (0+255),w,b
  4614  000B0A  B0D8               	btfsc	status,0,c
  4615  000B0C  D00F               	goto	l4901
  4616                           
  4617                           ; BSR set to: 1
  4618  000B0E  0101               	movlb	1	; () banked
  4619  000B10  0101               	movlb	1	; () banked
  4620  000B12  6D84               	negf	___awdiv@divisor& (0+255),b
  4621  000B14  0101               	movlb	1	; () banked
  4622  000B16  1F85               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4623  000B18  B0D8               	btfsc	status,0,c
  4624  000B1A  2B85               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4625                           
  4626                           ; BSR set to: 1
  4627  000B1C  0101               	movlb	1	; () banked
  4628  000B1E  6F86               	movwf	??___awdiv& (0+255),b
  4629  000B20  0E01               	movlw	1
  4630  000B22  0101               	movlb	1	; () banked
  4631  000B24  0101               	movlb	1	; () banked
  4632  000B26  6F88               	movwf	___awdiv@sign& (0+255),b
  4633  000B28  0101               	movlb	1	; () banked
  4634  000B2A  5186               	movf	??___awdiv& (0+255),w,b
  4635  000B2C                     l4901:
  4636                           
  4637                           ; BSR set to: 1
  4638  000B2C  0101               	movlb	1	; () banked
  4639  000B2E  0101               	movlb	1	; () banked
  4640  000B30  5183               	movf	(___awdiv@dividend+1)& (0+255),w,b
  4641  000B32  0A80               	xorlw	128
  4642  000B34  6EF3               	movwf	prodl,c
  4643  000B36  0E80               	movlw	128
  4644  000B38  5CF3               	subwf	prodl,w,c
  4645  000B3A  0E00               	movlw	0
  4646  000B3C  B4D8               	btfsc	status,2,c
  4647  000B3E  5D82               	subwf	___awdiv@dividend& (0+255),w,b
  4648  000B40  B0D8               	btfsc	status,0,c
  4649  000B42  D00B               	goto	l4907
  4650                           
  4651                           ; BSR set to: 1
  4652  000B44  0101               	movlb	1	; () banked
  4653  000B46  0101               	movlb	1	; () banked
  4654  000B48  6D82               	negf	___awdiv@dividend& (0+255),b
  4655  000B4A  0101               	movlb	1	; () banked
  4656  000B4C  1F83               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4657  000B4E  B0D8               	btfsc	status,0,c
  4658  000B50  2B83               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4659                           
  4660                           ; BSR set to: 1
  4661  000B52  0E01               	movlw	1
  4662  000B54  0101               	movlb	1	; () banked
  4663  000B56  0101               	movlb	1	; () banked
  4664  000B58  1B88               	xorwf	___awdiv@sign& (0+255),f,b
  4665  000B5A                     l4907:
  4666                           
  4667                           ; BSR set to: 1
  4668  000B5A  0E00               	movlw	0
  4669  000B5C  0101               	movlb	1	; () banked
  4670  000B5E  0101               	movlb	1	; () banked
  4671  000B60  6F8A               	movwf	(___awdiv@quotient+1)& (0+255),b
  4672  000B62  0E00               	movlw	0
  4673  000B64  0101               	movlb	1	; () banked
  4674  000B66  6F89               	movwf	___awdiv@quotient& (0+255),b
  4675                           
  4676                           ; BSR set to: 1
  4677  000B68  0101               	movlb	1	; () banked
  4678  000B6A  0101               	movlb	1	; () banked
  4679  000B6C  5185               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4680  000B6E  1184               	iorwf	___awdiv@divisor& (0+255),w,b
  4681  000B70  B4D8               	btfsc	status,2,c
  4682  000B72  D043               	goto	l4929
  4683                           
  4684                           ; BSR set to: 1
  4685  000B74  0101               	movlb	1	; () banked
  4686  000B76  6F86               	movwf	??___awdiv& (0+255),b
  4687  000B78  0E01               	movlw	1
  4688  000B7A  0101               	movlb	1	; () banked
  4689  000B7C  0101               	movlb	1	; () banked
  4690  000B7E  6F87               	movwf	___awdiv@counter& (0+255),b
  4691  000B80  0101               	movlb	1	; () banked
  4692  000B82  5186               	movf	??___awdiv& (0+255),w,b
  4693  000B84  D009               	goto	l4915
  4694  000B86                     l4913:
  4695                           
  4696                           ; BSR set to: 1
  4697  000B86  0101               	movlb	1	; () banked
  4698  000B88  0101               	movlb	1	; () banked
  4699  000B8A  0101               	movlb	1	; () banked
  4700  000B8C  90D8               	bcf	status,0,c
  4701  000B8E  3784               	rlcf	___awdiv@divisor& (0+255),f,b
  4702  000B90  3785               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4703  000B92  0101               	movlb	1	; () banked
  4704  000B94  0101               	movlb	1	; () banked
  4705  000B96  2B87               	incf	___awdiv@counter& (0+255),f,b
  4706  000B98                     l4915:
  4707                           
  4708                           ; BSR set to: 1
  4709  000B98  0101               	movlb	1	; () banked
  4710  000B9A  0101               	movlb	1	; () banked
  4711  000B9C  AF85               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4712  000B9E  D7F3               	goto	l4913
  4713  000BA0                     l4917:
  4714                           
  4715                           ; BSR set to: 1
  4716  000BA0  0101               	movlb	1	; () banked
  4717  000BA2  0101               	movlb	1	; () banked
  4718  000BA4  0101               	movlb	1	; () banked
  4719  000BA6  90D8               	bcf	status,0,c
  4720  000BA8  3789               	rlcf	___awdiv@quotient& (0+255),f,b
  4721  000BAA  378A               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4722                           
  4723                           ; BSR set to: 1
  4724  000BAC  0101               	movlb	1	; () banked
  4725  000BAE  0101               	movlb	1	; () banked
  4726  000BB0  5184               	movf	___awdiv@divisor& (0+255),w,b
  4727  000BB2  0101               	movlb	1	; () banked
  4728  000BB4  0101               	movlb	1	; () banked
  4729  000BB6  5D82               	subwf	___awdiv@dividend& (0+255),w,b
  4730  000BB8  0101               	movlb	1	; () banked
  4731  000BBA  0101               	movlb	1	; () banked
  4732  000BBC  5185               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4733  000BBE  0101               	movlb	1	; () banked
  4734  000BC0  0101               	movlb	1	; () banked
  4735  000BC2  5983               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4736  000BC4  A0D8               	btfss	status,0,c
  4737  000BC6  D00F               	goto	l4925
  4738                           
  4739                           ; BSR set to: 1
  4740  000BC8  0101               	movlb	1	; () banked
  4741  000BCA  0101               	movlb	1	; () banked
  4742  000BCC  5184               	movf	___awdiv@divisor& (0+255),w,b
  4743  000BCE  0101               	movlb	1	; () banked
  4744  000BD0  0101               	movlb	1	; () banked
  4745  000BD2  5F82               	subwf	___awdiv@dividend& (0+255),f,b
  4746  000BD4  0101               	movlb	1	; () banked
  4747  000BD6  0101               	movlb	1	; () banked
  4748  000BD8  5185               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4749  000BDA  0101               	movlb	1	; () banked
  4750  000BDC  0101               	movlb	1	; () banked
  4751  000BDE  5B83               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4752                           
  4753                           ; BSR set to: 1
  4754  000BE0  0101               	movlb	1	; () banked
  4755  000BE2  0101               	movlb	1	; () banked
  4756  000BE4  8189               	bsf	___awdiv@quotient& (0+255),0,b
  4757  000BE6                     l4925:
  4758                           
  4759                           ; BSR set to: 1
  4760  000BE6  0101               	movlb	1	; () banked
  4761  000BE8  0101               	movlb	1	; () banked
  4762  000BEA  0101               	movlb	1	; () banked
  4763  000BEC  90D8               	bcf	status,0,c
  4764  000BEE  3385               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4765  000BF0  3384               	rrcf	___awdiv@divisor& (0+255),f,b
  4766                           
  4767                           ; BSR set to: 1
  4768  000BF2  0101               	movlb	1	; () banked
  4769  000BF4  0101               	movlb	1	; () banked
  4770  000BF6  2F87               	decfsz	___awdiv@counter& (0+255),f,b
  4771  000BF8  D7D3               	goto	l4917
  4772  000BFA                     l4929:
  4773                           
  4774                           ; BSR set to: 1
  4775  000BFA  0101               	movlb	1	; () banked
  4776  000BFC  0101               	movlb	1	; () banked
  4777  000BFE  5188               	movf	___awdiv@sign& (0+255),w,b
  4778  000C00  B4D8               	btfsc	status,2,c
  4779  000C02  D007               	goto	l4933
  4780                           
  4781                           ; BSR set to: 1
  4782  000C04  0101               	movlb	1	; () banked
  4783  000C06  0101               	movlb	1	; () banked
  4784  000C08  6D89               	negf	___awdiv@quotient& (0+255),b
  4785  000C0A  0101               	movlb	1	; () banked
  4786  000C0C  1F8A               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4787  000C0E  B0D8               	btfsc	status,0,c
  4788  000C10  2B8A               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4789  000C12                     l4933:
  4790                           
  4791                           ; BSR set to: 1
  4792  000C12  C189  F182         	movff	___awdiv@quotient,?___awdiv
  4793  000C16  C18A  F183         	movff	___awdiv@quotient+1,?___awdiv+1
  4794  000C1A  0012               	return	
  4795  000C1C                     __end_of___awdiv:
  4796                           	opt stack 0
  4797                           tblptru	equ	0xFF8
  4798                           tblptrh	equ	0xFF7
  4799                           tblptrl	equ	0xFF6
  4800                           tablat	equ	0xFF5
  4801                           prodh	equ	0xFF4
  4802                           prodl	equ	0xFF3
  4803                           intcon	equ	0xFF2
  4804                           intcon2	equ	0xFF1
  4805                           postinc0	equ	0xFEE
  4806                           wreg	equ	0xFE8
  4807                           indf1	equ	0xFE7
  4808                           postdec1	equ	0xFE5
  4809                           fsr1h	equ	0xFE2
  4810                           fsr1l	equ	0xFE1
  4811                           indf2	equ	0xFDF
  4812                           postinc2	equ	0xFDE
  4813                           postdec2	equ	0xFDD
  4814                           fsr2h	equ	0xFDA
  4815                           fsr2l	equ	0xFD9
  4816                           status	equ	0xFD8
  4817                           
  4818 ;; *************** function _ToMainLow_sendmsg *****************
  4819 ;; Defined at:
  4820 ;;		line 108 in file "../src/messages.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;  length          1    wreg     unsigned char 
  4823 ;;  msgtype         1   22[BANK1 ] unsigned char 
  4824 ;;  data            2   23[BANK1 ] PTR void 
  4825 ;;		 -> main@msgbuffer(11), NULL(0), 
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;  length          1   25[BANK1 ] unsigned char 
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  1    wreg      char 
  4830 ;; Registers used:
  4831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4837 ;;      Params:         0       0       3       0       0
  4838 ;;      Locals:         0       0       1       0       0
  4839 ;;      Temps:          0       0       0       0       0
  4840 ;;      Totals:         0       0       4       0       0
  4841 ;;Total ram usage:        4 bytes
  4842 ;; Hardware stack levels used:    1
  4843 ;; Hardware stack levels required when called:   13
  4844 ;; This function calls:
  4845 ;;		_send_msg
  4846 ;; This function is called by:
  4847 ;;		_main
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           	psect	text25
  4852  001AF6                     __ptext25:
  4853                           	opt stack 0
  4854  001AF6                     _ToMainLow_sendmsg:
  4855                           	opt stack 17
  4856                           
  4857                           ; BSR set to: 1
  4858                           ;incstack = 0
  4859                           ;ToMainLow_sendmsg@length stored from wreg
  4860  001AF6  CFE8 F19B          	movff	wreg,ToMainLow_sendmsg@length
  4861                           
  4862                           ;messages.c: 114: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  4863                           ;	Return value of _ToMainLow_sendmsg is never used
  4864  001AFA  0101               	movlb	1	; () banked
  4865  001AFC  0E01               	movlw	high _ToMainLow_MQ
  4866  001AFE  0101               	movlb	1	; () banked
  4867  001B00  0101               	movlb	1	; () banked
  4868  001B02  6F8D               	movwf	(send_msg@qptr+1)& (0+255),b
  4869  001B04  0101               	movlb	1	; () banked
  4870  001B06  0E4C               	movlw	low _ToMainLow_MQ
  4871  001B08  0101               	movlb	1	; () banked
  4872  001B0A  0101               	movlb	1	; () banked
  4873  001B0C  6F8C               	movwf	send_msg@qptr& (0+255),b
  4874  001B0E  C19B  F18E         	movff	ToMainLow_sendmsg@length,send_msg@length
  4875  001B12  C198  F18F         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  4876  001B16  0101               	movlb	1	; () banked
  4877  001B18  0101               	movlb	1	; () banked
  4878  001B1A  C19A  F191         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  4879  001B1E  0101               	movlb	1	; () banked
  4880  001B20  0101               	movlb	1	; () banked
  4881  001B22  C199  F190         	movff	ToMainLow_sendmsg@data,send_msg@data
  4882  001B26  ECA9  F006         	call	_send_msg	;wreg free
  4883  001B2A  0012               	return	
  4884  001B2C                     __end_of_ToMainLow_sendmsg:
  4885                           	opt stack 0
  4886                           tblptru	equ	0xFF8
  4887                           tblptrh	equ	0xFF7
  4888                           tblptrl	equ	0xFF6
  4889                           tablat	equ	0xFF5
  4890                           prodh	equ	0xFF4
  4891                           prodl	equ	0xFF3
  4892                           intcon	equ	0xFF2
  4893                           intcon2	equ	0xFF1
  4894                           postinc0	equ	0xFEE
  4895                           wreg	equ	0xFE8
  4896                           indf1	equ	0xFE7
  4897                           postdec1	equ	0xFE5
  4898                           fsr1h	equ	0xFE2
  4899                           fsr1l	equ	0xFE1
  4900                           indf2	equ	0xFDF
  4901                           postinc2	equ	0xFDE
  4902                           postdec2	equ	0xFDD
  4903                           fsr2h	equ	0xFDA
  4904                           fsr2l	equ	0xFD9
  4905                           status	equ	0xFD8
  4906                           
  4907 ;; *************** function _send_msg *****************
  4908 ;; Defined at:
  4909 ;;		line 29 in file "../src/messages.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  4912 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4913 ;;  length          1   12[BANK1 ] unsigned char 
  4914 ;;  msgtype         1   13[BANK1 ] unsigned char 
  4915 ;;  data            2   14[BANK1 ] PTR void 
  4916 ;;		 -> main@msgbuffer(11), main@t0thread_data(2), main@t1thread_data(2), main@uc(28), 
  4917 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), 
  4918 ;; Auto vars:     Size  Location     Type
  4919 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  4920 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4921 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4922 ;;  tlength         2   17[BANK1 ] unsigned int 
  4923 ;;  slot            1   19[BANK1 ] unsigned char 
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  1    wreg      char 
  4926 ;; Registers used:
  4927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 0/0
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4933 ;;      Params:         0       0       6       0       0
  4934 ;;      Locals:         0       0       5       0       0
  4935 ;;      Temps:          0       0       1       0       0
  4936 ;;      Totals:         0       0      12       0       0
  4937 ;;Total ram usage:       12 bytes
  4938 ;; Hardware stack levels used:    1
  4939 ;; Hardware stack levels required when called:   12
  4940 ;; This function calls:
  4941 ;;		_memcpy
  4942 ;; This function is called by:
  4943 ;;		_ToMainLow_sendmsg
  4944 ;;		_ToMainHigh_sendmsg
  4945 ;;		_FromMainHigh_sendmsg
  4946 ;;		_FromMainLow_sendmsg
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           	psect	text26
  4951  000D52                     __ptext26:
  4952                           	opt stack 0
  4953  000D52                     _send_msg:
  4954                           	opt stack 16
  4955                           
  4956                           ;messages.c: 30: unsigned char slot;
  4957                           ;messages.c: 32: msg *qmsg;
  4958                           ;messages.c: 33: size_t tlength = length;
  4959                           
  4960                           ;incstack = 0
  4961  000D52  0101               	movlb	1	; () banked
  4962  000D54  0101               	movlb	1	; () banked
  4963  000D56  C18E  F193         	movff	send_msg@length,send_msg@tlength
  4964  000D5A  0101               	movlb	1	; () banked
  4965  000D5C  0101               	movlb	1	; () banked
  4966  000D5E  6B94               	clrf	(send_msg@tlength+1)& (0+255),b
  4967                           
  4968                           ; BSR set to: 1
  4969                           ;messages.c: 43: slot = qptr->cur_write_ind;
  4970  000D60  0101               	movlb	1	; () banked
  4971  000D62  EE20 F034          	lfsr	2,52
  4972  000D66  0101               	movlb	1	; () banked
  4973  000D68  518C               	movf	send_msg@qptr& (0+255),w,b
  4974  000D6A  26D9               	addwf	fsr2l,f,c
  4975  000D6C  0101               	movlb	1	; () banked
  4976  000D6E  518D               	movf	(send_msg@qptr+1)& (0+255),w,b
  4977  000D70  22DA               	addwfc	fsr2h,f,c
  4978  000D72  50DF               	movf	indf2,w,c
  4979  000D74  0101               	movlb	1	; () banked
  4980  000D76  0101               	movlb	1	; () banked
  4981  000D78  6F95               	movwf	send_msg@slot& (0+255),b
  4982                           
  4983                           ; BSR set to: 1
  4984                           ;messages.c: 44: qmsg = &(qptr->queue[slot]);
  4985  000D7A  0101               	movlb	1	; () banked
  4986  000D7C  0101               	movlb	1	; () banked
  4987  000D7E  5195               	movf	send_msg@slot& (0+255),w,b
  4988  000D80  0D0D               	mullw	13
  4989  000D82  50F3               	movf	prodl,w,c
  4990  000D84  0101               	movlb	1	; () banked
  4991  000D86  0101               	movlb	1	; () banked
  4992  000D88  258C               	addwf	send_msg@qptr& (0+255),w,b
  4993  000D8A  0101               	movlb	1	; () banked
  4994  000D8C  0101               	movlb	1	; () banked
  4995  000D8E  6F96               	movwf	send_msg@qmsg& (0+255),b
  4996  000D90  50F4               	movf	prodh,w,c
  4997  000D92  0101               	movlb	1	; () banked
  4998  000D94  0101               	movlb	1	; () banked
  4999  000D96  218D               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  5000  000D98  0101               	movlb	1	; () banked
  5001  000D9A  6F97               	movwf	(send_msg@qmsg+1)& (0+255),b
  5002                           
  5003                           ; BSR set to: 1
  5004                           ;messages.c: 46: if (qmsg->full != 0) {
  5005  000D9C  C196  FFD9         	movff	send_msg@qmsg,fsr2l
  5006  000DA0  C197  FFDA         	movff	send_msg@qmsg+1,fsr2h
  5007  000DA4  50DF               	movf	indf2,w,c
  5008  000DA6  B4D8               	btfsc	status,2,c
  5009  000DA8  D002               	goto	l4279
  5010                           
  5011                           ; BSR set to: 1
  5012                           ;messages.c: 47: return (-1);
  5013  000DAA  0EFF               	movlw	255
  5014  000DAC  0012               	return	
  5015  000DAE                     l4279:
  5016                           
  5017                           ; BSR set to: 1
  5018                           ;messages.c: 48: }
  5019                           ;messages.c: 51: qmsg->length = length;
  5020  000DAE  0101               	movlb	1	; () banked
  5021  000DB0  EE20 F001          	lfsr	2,1
  5022  000DB4  0101               	movlb	1	; () banked
  5023  000DB6  5196               	movf	send_msg@qmsg& (0+255),w,b
  5024  000DB8  26D9               	addwf	fsr2l,f,c
  5025  000DBA  0101               	movlb	1	; () banked
  5026  000DBC  5197               	movf	(send_msg@qmsg+1)& (0+255),w,b
  5027  000DBE  22DA               	addwfc	fsr2h,f,c
  5028  000DC0  0101               	movlb	1	; () banked
  5029  000DC2  C18E  FFDF         	movff	send_msg@length,indf2
  5030                           
  5031                           ;messages.c: 52: qmsg->msgtype = msgtype;
  5032  000DC6  0101               	movlb	1	; () banked
  5033  000DC8  EE20 F002          	lfsr	2,2
  5034  000DCC  0101               	movlb	1	; () banked
  5035  000DCE  5196               	movf	send_msg@qmsg& (0+255),w,b
  5036  000DD0  26D9               	addwf	fsr2l,f,c
  5037  000DD2  0101               	movlb	1	; () banked
  5038  000DD4  5197               	movf	(send_msg@qmsg+1)& (0+255),w,b
  5039  000DD6  22DA               	addwfc	fsr2h,f,c
  5040  000DD8  0101               	movlb	1	; () banked
  5041  000DDA  C18F  FFDF         	movff	send_msg@msgtype,indf2
  5042                           
  5043                           ; BSR set to: 1
  5044                           ;messages.c: 60: memcpy(qmsg->data, data, tlength);
  5045  000DDE  0E03               	movlw	3
  5046  000DE0  0101               	movlb	1	; () banked
  5047  000DE2  0101               	movlb	1	; () banked
  5048  000DE4  2596               	addwf	send_msg@qmsg& (0+255),w,b
  5049  000DE6  0101               	movlb	1	; () banked
  5050  000DE8  0101               	movlb	1	; () banked
  5051  000DEA  6F82               	movwf	memcpy@d1& (0+255),b
  5052  000DEC  0E00               	movlw	0
  5053  000DEE  0101               	movlb	1	; () banked
  5054  000DF0  0101               	movlb	1	; () banked
  5055  000DF2  2197               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  5056  000DF4  0101               	movlb	1	; () banked
  5057  000DF6  6F83               	movwf	(memcpy@d1+1)& (0+255),b
  5058  000DF8  0101               	movlb	1	; () banked
  5059  000DFA  0101               	movlb	1	; () banked
  5060  000DFC  C191  F185         	movff	send_msg@data+1,memcpy@s1+1
  5061  000E00  0101               	movlb	1	; () banked
  5062  000E02  0101               	movlb	1	; () banked
  5063  000E04  C190  F184         	movff	send_msg@data,memcpy@s1
  5064  000E08  C193  F186         	movff	send_msg@tlength,memcpy@n
  5065  000E0C  C194  F187         	movff	send_msg@tlength+1,memcpy@n+1
  5066  000E10  EC06  F00C         	call	_memcpy	;wreg free
  5067                           
  5068                           ;messages.c: 61: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5069  000E14  0101               	movlb	1	; () banked
  5070  000E16  EE20 F034          	lfsr	2,52
  5071  000E1A  0101               	movlb	1	; () banked
  5072  000E1C  518C               	movf	send_msg@qptr& (0+255),w,b
  5073  000E1E  26D9               	addwf	fsr2l,f,c
  5074  000E20  0101               	movlb	1	; () banked
  5075  000E22  518D               	movf	(send_msg@qptr+1)& (0+255),w,b
  5076  000E24  22DA               	addwfc	fsr2h,f,c
  5077  000E26  0101               	movlb	1	; () banked
  5078  000E28  EE10 F034          	lfsr	1,52
  5079  000E2C  0101               	movlb	1	; () banked
  5080  000E2E  518C               	movf	send_msg@qptr& (0+255),w,b
  5081  000E30  26E1               	addwf	fsr1l,f,c
  5082  000E32  0101               	movlb	1	; () banked
  5083  000E34  518D               	movf	(send_msg@qptr+1)& (0+255),w,b
  5084  000E36  22E2               	addwfc	fsr1h,f,c
  5085  000E38  50E7               	movf	indf1,w,c
  5086  000E3A  0101               	movlb	1	; () banked
  5087  000E3C  6F92               	movwf	??_send_msg& (0+255),b
  5088  000E3E  0101               	movlb	1	; () banked
  5089  000E40  2992               	incf	??_send_msg& (0+255),w,b
  5090  000E42  0B03               	andlw	3
  5091  000E44  6EDF               	movwf	indf2,c
  5092                           
  5093                           ; BSR set to: 1
  5094                           ;messages.c: 64: qmsg->full = 1;
  5095  000E46  C196  FFD9         	movff	send_msg@qmsg,fsr2l
  5096  000E4A  C197  FFDA         	movff	send_msg@qmsg+1,fsr2h
  5097  000E4E  0E01               	movlw	1
  5098  000E50  6EDF               	movwf	indf2,c
  5099                           
  5100                           ; BSR set to: 1
  5101                           ;messages.c: 65: return (1);
  5102  000E52  0E01               	movlw	1
  5103  000E54  0012               	return	
  5104  000E56                     __end_of_send_msg:
  5105                           	opt stack 0
  5106                           tblptru	equ	0xFF8
  5107                           tblptrh	equ	0xFF7
  5108                           tblptrl	equ	0xFF6
  5109                           tablat	equ	0xFF5
  5110                           prodh	equ	0xFF4
  5111                           prodl	equ	0xFF3
  5112                           intcon	equ	0xFF2
  5113                           intcon2	equ	0xFF1
  5114                           postinc0	equ	0xFEE
  5115                           wreg	equ	0xFE8
  5116                           indf1	equ	0xFE7
  5117                           postdec1	equ	0xFE5
  5118                           fsr1h	equ	0xFE2
  5119                           fsr1l	equ	0xFE1
  5120                           indf2	equ	0xFDF
  5121                           postinc2	equ	0xFDE
  5122                           postdec2	equ	0xFDD
  5123                           fsr2h	equ	0xFDA
  5124                           fsr2l	equ	0xFD9
  5125                           status	equ	0xFD8
  5126                           
  5127 ;; *************** function _ToMainLow_recvmsg *****************
  5128 ;; Defined at:
  5129 ;;		line 117 in file "../src/messages.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;  maxlength       1    wreg     unsigned char 
  5132 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  5133 ;;		 -> main@msgtype(1), 
  5134 ;;  data            2   26[BANK1 ] PTR void 
  5135 ;;		 -> main@msgbuffer(11), 
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;  maxlength       1   28[BANK1 ] unsigned char 
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      char 
  5140 ;; Registers used:
  5141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5147 ;;      Params:         0       0       4       0       0
  5148 ;;      Locals:         0       0       1       0       0
  5149 ;;      Temps:          0       0       0       0       0
  5150 ;;      Totals:         0       0       5       0       0
  5151 ;;Total ram usage:        5 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; Hardware stack levels required when called:   13
  5154 ;; This function calls:
  5155 ;;		_recv_msg
  5156 ;; This function is called by:
  5157 ;;		_main
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161                           	psect	text27
  5162  001952                     __ptext27:
  5163                           	opt stack 0
  5164  001952                     _ToMainLow_recvmsg:
  5165                           	opt stack 17
  5166                           
  5167                           ; BSR set to: 1
  5168                           ;incstack = 0
  5169                           ;ToMainLow_recvmsg@maxlength stored from wreg
  5170  001952  CFE8 F19E          	movff	wreg,ToMainLow_recvmsg@maxlength
  5171                           
  5172                           ;messages.c: 123: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  5173  001956  0101               	movlb	1	; () banked
  5174  001958  0E01               	movlw	high _ToMainLow_MQ
  5175  00195A  0101               	movlb	1	; () banked
  5176  00195C  0101               	movlb	1	; () banked
  5177  00195E  6F8D               	movwf	(recv_msg@qptr+1)& (0+255),b
  5178  001960  0101               	movlb	1	; () banked
  5179  001962  0E4C               	movlw	low _ToMainLow_MQ
  5180  001964  0101               	movlb	1	; () banked
  5181  001966  0101               	movlb	1	; () banked
  5182  001968  6F8C               	movwf	recv_msg@qptr& (0+255),b
  5183  00196A  C19E  F18E         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  5184  00196E  0101               	movlb	1	; () banked
  5185  001970  0101               	movlb	1	; () banked
  5186  001972  C19B  F190         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  5187  001976  0101               	movlb	1	; () banked
  5188  001978  0101               	movlb	1	; () banked
  5189  00197A  C19A  F18F         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  5190  00197E  0101               	movlb	1	; () banked
  5191  001980  0101               	movlb	1	; () banked
  5192  001982  C19D  F192         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  5193  001986  0101               	movlb	1	; () banked
  5194  001988  0101               	movlb	1	; () banked
  5195  00198A  C19C  F191         	movff	ToMainLow_recvmsg@data,recv_msg@data
  5196  00198E  EC0E  F006         	call	_recv_msg	;wreg free
  5197  001992  0012               	return	
  5198  001994                     __end_of_ToMainLow_recvmsg:
  5199                           	opt stack 0
  5200                           tblptru	equ	0xFF8
  5201                           tblptrh	equ	0xFF7
  5202                           tblptrl	equ	0xFF6
  5203                           tablat	equ	0xFF5
  5204                           prodh	equ	0xFF4
  5205                           prodl	equ	0xFF3
  5206                           intcon	equ	0xFF2
  5207                           intcon2	equ	0xFF1
  5208                           postinc0	equ	0xFEE
  5209                           wreg	equ	0xFE8
  5210                           indf1	equ	0xFE7
  5211                           postdec1	equ	0xFE5
  5212                           fsr1h	equ	0xFE2
  5213                           fsr1l	equ	0xFE1
  5214                           indf2	equ	0xFDF
  5215                           postinc2	equ	0xFDE
  5216                           postdec2	equ	0xFDD
  5217                           fsr2h	equ	0xFDA
  5218                           fsr2l	equ	0xFD9
  5219                           status	equ	0xFD8
  5220                           
  5221 ;; *************** function _ToMainHigh_recvmsg *****************
  5222 ;; Defined at:
  5223 ;;		line 140 in file "../src/messages.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;  maxlength       1    wreg     unsigned char 
  5226 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  5227 ;;		 -> main@msgtype(1), 
  5228 ;;  data            2   26[BANK1 ] PTR void 
  5229 ;;		 -> main@msgbuffer(11), 
  5230 ;; Auto vars:     Size  Location     Type
  5231 ;;  maxlength       1   28[BANK1 ] unsigned char 
  5232 ;; Return value:  Size  Location     Type
  5233 ;;                  1    wreg      char 
  5234 ;; Registers used:
  5235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5236 ;; Tracked objects:
  5237 ;;		On entry : 0/0
  5238 ;;		On exit  : 0/0
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5241 ;;      Params:         0       0       4       0       0
  5242 ;;      Locals:         0       0       1       0       0
  5243 ;;      Temps:          0       0       0       0       0
  5244 ;;      Totals:         0       0       5       0       0
  5245 ;;Total ram usage:        5 bytes
  5246 ;; Hardware stack levels used:    1
  5247 ;; Hardware stack levels required when called:   13
  5248 ;; This function calls:
  5249 ;;		_recv_msg
  5250 ;; This function is called by:
  5251 ;;		_main
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           	psect	text28
  5256  001994                     __ptext28:
  5257                           	opt stack 0
  5258  001994                     _ToMainHigh_recvmsg:
  5259                           	opt stack 17
  5260                           
  5261                           ;incstack = 0
  5262                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  5263  001994  CFE8 F19E          	movff	wreg,ToMainHigh_recvmsg@maxlength
  5264                           
  5265                           ;messages.c: 146: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  5266  001998  0101               	movlb	1	; () banked
  5267  00199A  0E01               	movlw	high _ToMainHigh_MQ
  5268  00199C  0101               	movlb	1	; () banked
  5269  00199E  0101               	movlb	1	; () banked
  5270  0019A0  6F8D               	movwf	(recv_msg@qptr+1)& (0+255),b
  5271  0019A2  0101               	movlb	1	; () banked
  5272  0019A4  0E16               	movlw	low _ToMainHigh_MQ
  5273  0019A6  0101               	movlb	1	; () banked
  5274  0019A8  0101               	movlb	1	; () banked
  5275  0019AA  6F8C               	movwf	recv_msg@qptr& (0+255),b
  5276  0019AC  C19E  F18E         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  5277  0019B0  0101               	movlb	1	; () banked
  5278  0019B2  0101               	movlb	1	; () banked
  5279  0019B4  C19B  F190         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  5280  0019B8  0101               	movlb	1	; () banked
  5281  0019BA  0101               	movlb	1	; () banked
  5282  0019BC  C19A  F18F         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  5283  0019C0  0101               	movlb	1	; () banked
  5284  0019C2  0101               	movlb	1	; () banked
  5285  0019C4  C19D  F192         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  5286  0019C8  0101               	movlb	1	; () banked
  5287  0019CA  0101               	movlb	1	; () banked
  5288  0019CC  C19C  F191         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  5289  0019D0  EC0E  F006         	call	_recv_msg	;wreg free
  5290  0019D4  0012               	return	
  5291  0019D6                     __end_of_ToMainHigh_recvmsg:
  5292                           	opt stack 0
  5293                           tblptru	equ	0xFF8
  5294                           tblptrh	equ	0xFF7
  5295                           tblptrl	equ	0xFF6
  5296                           tablat	equ	0xFF5
  5297                           prodh	equ	0xFF4
  5298                           prodl	equ	0xFF3
  5299                           intcon	equ	0xFF2
  5300                           intcon2	equ	0xFF1
  5301                           postinc0	equ	0xFEE
  5302                           wreg	equ	0xFE8
  5303                           indf1	equ	0xFE7
  5304                           postdec1	equ	0xFE5
  5305                           fsr1h	equ	0xFE2
  5306                           fsr1l	equ	0xFE1
  5307                           indf2	equ	0xFDF
  5308                           postinc2	equ	0xFDE
  5309                           postdec2	equ	0xFDD
  5310                           fsr2h	equ	0xFDA
  5311                           fsr2l	equ	0xFD9
  5312                           status	equ	0xFD8
  5313                           
  5314 ;; *************** function _recv_msg *****************
  5315 ;; Defined at:
  5316 ;;		line 68 in file "../src/messages.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  5319 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5320 ;;  maxlength       1   12[BANK1 ] unsigned char 
  5321 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  5322 ;;		 -> main@msgtype(1), 
  5323 ;;  data            2   15[BANK1 ] PTR void 
  5324 ;;		 -> main@msgbuffer(11), 
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  5327 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5328 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5329 ;;  tlength         2   20[BANK1 ] unsigned int 
  5330 ;;  slot            1   19[BANK1 ] unsigned char 
  5331 ;; Return value:  Size  Location     Type
  5332 ;;                  1    wreg      char 
  5333 ;; Registers used:
  5334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5335 ;; Tracked objects:
  5336 ;;		On entry : 0/0
  5337 ;;		On exit  : 0/0
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5340 ;;      Params:         0       0       7       0       0
  5341 ;;      Locals:         0       0       5       0       0
  5342 ;;      Temps:          0       0       2       0       0
  5343 ;;      Totals:         0       0      14       0       0
  5344 ;;Total ram usage:       14 bytes
  5345 ;; Hardware stack levels used:    1
  5346 ;; Hardware stack levels required when called:   12
  5347 ;; This function calls:
  5348 ;;		_memcpy
  5349 ;; This function is called by:
  5350 ;;		_ToMainLow_recvmsg
  5351 ;;		_ToMainHigh_recvmsg
  5352 ;;		_FromMainLow_recvmsg
  5353 ;;		_FromMainHigh_recvmsg
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           	psect	text29
  5358  000C1C                     __ptext29:
  5359                           	opt stack 0
  5360  000C1C                     _recv_msg:
  5361                           	opt stack 17
  5362                           
  5363                           ;messages.c: 69: unsigned char slot;
  5364                           ;messages.c: 73: msg *qmsg;
  5365                           ;messages.c: 74: size_t tlength;
  5366                           ;messages.c: 77: slot = qptr->cur_read_ind;
  5367                           
  5368                           ;incstack = 0
  5369  000C1C  0101               	movlb	1	; () banked
  5370  000C1E  EE20 F035          	lfsr	2,53
  5371  000C22  0101               	movlb	1	; () banked
  5372  000C24  518C               	movf	recv_msg@qptr& (0+255),w,b
  5373  000C26  26D9               	addwf	fsr2l,f,c
  5374  000C28  0101               	movlb	1	; () banked
  5375  000C2A  518D               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5376  000C2C  22DA               	addwfc	fsr2h,f,c
  5377  000C2E  50DF               	movf	indf2,w,c
  5378  000C30  0101               	movlb	1	; () banked
  5379  000C32  0101               	movlb	1	; () banked
  5380  000C34  6F95               	movwf	recv_msg@slot& (0+255),b
  5381                           
  5382                           ; BSR set to: 1
  5383                           ;messages.c: 78: qmsg = &(qptr->queue[slot]);
  5384  000C36  0101               	movlb	1	; () banked
  5385  000C38  0101               	movlb	1	; () banked
  5386  000C3A  5195               	movf	recv_msg@slot& (0+255),w,b
  5387  000C3C  0D0D               	mullw	13
  5388  000C3E  50F3               	movf	prodl,w,c
  5389  000C40  0101               	movlb	1	; () banked
  5390  000C42  0101               	movlb	1	; () banked
  5391  000C44  258C               	addwf	recv_msg@qptr& (0+255),w,b
  5392  000C46  0101               	movlb	1	; () banked
  5393  000C48  0101               	movlb	1	; () banked
  5394  000C4A  6F98               	movwf	recv_msg@qmsg& (0+255),b
  5395  000C4C  50F4               	movf	prodh,w,c
  5396  000C4E  0101               	movlb	1	; () banked
  5397  000C50  0101               	movlb	1	; () banked
  5398  000C52  218D               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  5399  000C54  0101               	movlb	1	; () banked
  5400  000C56  6F99               	movwf	(recv_msg@qmsg+1)& (0+255),b
  5401                           
  5402                           ; BSR set to: 1
  5403                           ;messages.c: 79: if (qmsg->full == 1) {
  5404  000C58  0E01               	movlw	1
  5405  000C5A  C198  FFD9         	movff	recv_msg@qmsg,fsr2l
  5406  000C5E  C199  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  5407  000C62  62DF               	cpfseq	indf2,c
  5408  000C64  D074               	goto	l4329
  5409                           
  5410                           ; BSR set to: 1
  5411                           ;messages.c: 81: if (qmsg->length > maxlength) {
  5412  000C66  0101               	movlb	1	; () banked
  5413  000C68  EE20 F001          	lfsr	2,1
  5414  000C6C  0101               	movlb	1	; () banked
  5415  000C6E  5198               	movf	recv_msg@qmsg& (0+255),w,b
  5416  000C70  26D9               	addwf	fsr2l,f,c
  5417  000C72  0101               	movlb	1	; () banked
  5418  000C74  5199               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5419  000C76  22DA               	addwfc	fsr2h,f,c
  5420  000C78  50DF               	movf	indf2,w,c
  5421  000C7A  0101               	movlb	1	; () banked
  5422  000C7C  0101               	movlb	1	; () banked
  5423  000C7E  5D8E               	subwf	recv_msg@maxlength& (0+255),w,b
  5424  000C80  B0D8               	btfsc	status,0,c
  5425  000C82  D002               	goto	l4313
  5426                           
  5427                           ; BSR set to: 1
  5428                           ;messages.c: 82: return (-3);
  5429  000C84  0EFD               	movlw	253
  5430  000C86  0012               	return	
  5431  000C88                     l4313:
  5432                           
  5433                           ; BSR set to: 1
  5434                           ;messages.c: 83: }
  5435                           ;messages.c: 85: tlength = qmsg->length;
  5436  000C88  0101               	movlb	1	; () banked
  5437  000C8A  EE20 F001          	lfsr	2,1
  5438  000C8E  0101               	movlb	1	; () banked
  5439  000C90  5198               	movf	recv_msg@qmsg& (0+255),w,b
  5440  000C92  26D9               	addwf	fsr2l,f,c
  5441  000C94  0101               	movlb	1	; () banked
  5442  000C96  5199               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5443  000C98  22DA               	addwfc	fsr2h,f,c
  5444  000C9A  50DF               	movf	indf2,w,c
  5445  000C9C  0101               	movlb	1	; () banked
  5446  000C9E  6F93               	movwf	??_recv_msg& (0+255),b
  5447  000CA0  0101               	movlb	1	; () banked
  5448  000CA2  5193               	movf	??_recv_msg& (0+255),w,b
  5449  000CA4  0101               	movlb	1	; () banked
  5450  000CA6  0101               	movlb	1	; () banked
  5451  000CA8  6F96               	movwf	recv_msg@tlength& (0+255),b
  5452  000CAA  0101               	movlb	1	; () banked
  5453  000CAC  6B97               	clrf	(recv_msg@tlength+1)& (0+255),b
  5454                           
  5455                           ; BSR set to: 1
  5456                           ;messages.c: 86: memcpy(data, qmsg->data, tlength);
  5457  000CAE  0101               	movlb	1	; () banked
  5458  000CB0  0101               	movlb	1	; () banked
  5459  000CB2  C192  F183         	movff	recv_msg@data+1,memcpy@d1+1
  5460  000CB6  0101               	movlb	1	; () banked
  5461  000CB8  0101               	movlb	1	; () banked
  5462  000CBA  C191  F182         	movff	recv_msg@data,memcpy@d1
  5463  000CBE  0E03               	movlw	3
  5464  000CC0  0101               	movlb	1	; () banked
  5465  000CC2  0101               	movlb	1	; () banked
  5466  000CC4  2598               	addwf	recv_msg@qmsg& (0+255),w,b
  5467  000CC6  0101               	movlb	1	; () banked
  5468  000CC8  6F93               	movwf	??_recv_msg& (0+255),b
  5469  000CCA  0E00               	movlw	0
  5470  000CCC  0101               	movlb	1	; () banked
  5471  000CCE  0101               	movlb	1	; () banked
  5472  000CD0  2199               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  5473  000CD2  0101               	movlb	1	; () banked
  5474  000CD4  6F94               	movwf	(??_recv_msg+1)& (0+255),b
  5475  000CD6  C193  F184         	movff	??_recv_msg,memcpy@s1
  5476  000CDA  C194  F185         	movff	??_recv_msg+1,memcpy@s1+1
  5477  000CDE  C196  F186         	movff	recv_msg@tlength,memcpy@n
  5478  000CE2  C197  F187         	movff	recv_msg@tlength+1,memcpy@n+1
  5479  000CE6  EC06  F00C         	call	_memcpy	;wreg free
  5480                           
  5481                           ;messages.c: 92: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5482  000CEA  0101               	movlb	1	; () banked
  5483  000CEC  EE20 F035          	lfsr	2,53
  5484  000CF0  0101               	movlb	1	; () banked
  5485  000CF2  518C               	movf	recv_msg@qptr& (0+255),w,b
  5486  000CF4  26D9               	addwf	fsr2l,f,c
  5487  000CF6  0101               	movlb	1	; () banked
  5488  000CF8  518D               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5489  000CFA  22DA               	addwfc	fsr2h,f,c
  5490  000CFC  0101               	movlb	1	; () banked
  5491  000CFE  EE10 F035          	lfsr	1,53
  5492  000D02  0101               	movlb	1	; () banked
  5493  000D04  518C               	movf	recv_msg@qptr& (0+255),w,b
  5494  000D06  26E1               	addwf	fsr1l,f,c
  5495  000D08  0101               	movlb	1	; () banked
  5496  000D0A  518D               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5497  000D0C  22E2               	addwfc	fsr1h,f,c
  5498  000D0E  50E7               	movf	indf1,w,c
  5499  000D10  0101               	movlb	1	; () banked
  5500  000D12  6F93               	movwf	??_recv_msg& (0+255),b
  5501  000D14  0101               	movlb	1	; () banked
  5502  000D16  2993               	incf	??_recv_msg& (0+255),w,b
  5503  000D18  0B03               	andlw	3
  5504  000D1A  6EDF               	movwf	indf2,c
  5505                           
  5506                           ; BSR set to: 1
  5507                           ;messages.c: 94: (*msgtype) = qmsg->msgtype;
  5508  000D1C  0101               	movlb	1	; () banked
  5509  000D1E  EE20 F002          	lfsr	2,2
  5510  000D22  0101               	movlb	1	; () banked
  5511  000D24  5198               	movf	recv_msg@qmsg& (0+255),w,b
  5512  000D26  26D9               	addwf	fsr2l,f,c
  5513  000D28  0101               	movlb	1	; () banked
  5514  000D2A  5199               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5515  000D2C  22DA               	addwfc	fsr2h,f,c
  5516  000D2E  C18F  FFE1         	movff	recv_msg@msgtype,fsr1l
  5517  000D32  C190  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  5518  000D36  CFDF FFE7          	movff	indf2,indf1
  5519                           
  5520                           ; BSR set to: 1
  5521                           ;messages.c: 96: qmsg->full = 0;
  5522  000D3A  C198  FFD9         	movff	recv_msg@qmsg,fsr2l
  5523  000D3E  C199  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  5524  000D42  0E00               	movlw	0
  5525  000D44  6EDF               	movwf	indf2,c
  5526                           
  5527                           ; BSR set to: 1
  5528                           ;messages.c: 97: return (tlength);
  5529  000D46  0101               	movlb	1	; () banked
  5530  000D48  0101               	movlb	1	; () banked
  5531  000D4A  5196               	movf	recv_msg@tlength& (0+255),w,b
  5532  000D4C  0012               	return	
  5533  000D4E                     l4329:
  5534                           
  5535                           ; BSR set to: 1
  5536                           ;messages.c: 99: return (-4);
  5537  000D4E  0EFC               	movlw	252
  5538  000D50  0012               	return	
  5539  000D52                     __end_of_recv_msg:
  5540                           	opt stack 0
  5541                           tblptru	equ	0xFF8
  5542                           tblptrh	equ	0xFF7
  5543                           tblptrl	equ	0xFF6
  5544                           tablat	equ	0xFF5
  5545                           prodh	equ	0xFF4
  5546                           prodl	equ	0xFF3
  5547                           intcon	equ	0xFF2
  5548                           intcon2	equ	0xFF1
  5549                           postinc0	equ	0xFEE
  5550                           wreg	equ	0xFE8
  5551                           indf1	equ	0xFE7
  5552                           postdec1	equ	0xFE5
  5553                           fsr1h	equ	0xFE2
  5554                           fsr1l	equ	0xFE1
  5555                           indf2	equ	0xFDF
  5556                           postinc2	equ	0xFDE
  5557                           postdec2	equ	0xFDD
  5558                           fsr2h	equ	0xFDA
  5559                           fsr2l	equ	0xFD9
  5560                           status	equ	0xFD8
  5561                           
  5562 ;; *************** function _memcpy *****************
  5563 ;; Defined at:
  5564 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  5565 ;; Parameters:    Size  Location     Type
  5566 ;;  d1              2    0[BANK1 ] PTR void 
  5567 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5568 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5569 ;;		 -> ToMainLow_MQ(54), NULL(0), 
  5570 ;;  s1              2    2[BANK1 ] PTR const void 
  5571 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5572 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5573 ;;		 -> main@msgbuffer(11), main@t0thread_data(2), main@t1thread_data(2), main@uc(28), 
  5574 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5575 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), 
  5576 ;;  n               2    4[BANK1 ] unsigned int 
  5577 ;; Auto vars:     Size  Location     Type
  5578 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  5579 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5580 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5581 ;;		 -> main@msgbuffer(11), main@t0thread_data(2), main@t1thread_data(2), main@uc(28), 
  5582 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5583 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), 
  5584 ;;  d               2    6[BANK1 ] PTR unsigned char 
  5585 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5586 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5587 ;;		 -> ToMainLow_MQ(54), NULL(0), 
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  2    0[BANK1 ] PTR void 
  5590 ;; Registers used:
  5591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5597 ;;      Params:         0       0       6       0       0
  5598 ;;      Locals:         0       0       4       0       0
  5599 ;;      Temps:          0       0       0       0       0
  5600 ;;      Totals:         0       0      10       0       0
  5601 ;;Total ram usage:       10 bytes
  5602 ;; Hardware stack levels used:    1
  5603 ;; Hardware stack levels required when called:   11
  5604 ;; This function calls:
  5605 ;;		Nothing
  5606 ;; This function is called by:
  5607 ;;		_send_msg
  5608 ;;		_recv_msg
  5609 ;;		_i2c_master_send
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613                           	psect	text30
  5614  00180C                     __ptext30:
  5615                           	opt stack 0
  5616  00180C                     _memcpy:
  5617                           	opt stack 16
  5618                           
  5619                           ; BSR set to: 1
  5620                           ;incstack = 0
  5621  00180C  0101               	movlb	1	; () banked
  5622  00180E  0101               	movlb	1	; () banked
  5623  001810  C185  F18B         	movff	memcpy@s1+1,memcpy@s+1
  5624  001814  0101               	movlb	1	; () banked
  5625  001816  0101               	movlb	1	; () banked
  5626  001818  C184  F18A         	movff	memcpy@s1,memcpy@s
  5627  00181C  0101               	movlb	1	; () banked
  5628  00181E  0101               	movlb	1	; () banked
  5629  001820  C183  F189         	movff	memcpy@d1+1,memcpy@d+1
  5630  001824  0101               	movlb	1	; () banked
  5631  001826  0101               	movlb	1	; () banked
  5632  001828  C182  F188         	movff	memcpy@d1,memcpy@d
  5633  00182C  D012               	goto	l4299
  5634  00182E                     l4293:
  5635                           
  5636                           ; BSR set to: 1
  5637  00182E  C18A  FFD9         	movff	memcpy@s,fsr2l
  5638  001832  C18B  FFDA         	movff	memcpy@s+1,fsr2h
  5639  001836  C188  FFE1         	movff	memcpy@d,fsr1l
  5640  00183A  C189  FFE2         	movff	memcpy@d+1,fsr1h
  5641  00183E  CFDF FFE7          	movff	indf2,indf1
  5642                           
  5643                           ; BSR set to: 1
  5644  001842  0101               	movlb	1	; () banked
  5645  001844  0101               	movlb	1	; () banked
  5646  001846  4B8A               	infsnz	memcpy@s& (0+255),f,b
  5647  001848  2B8B               	incf	(memcpy@s+1)& (0+255),f,b
  5648                           
  5649                           ; BSR set to: 1
  5650  00184A  0101               	movlb	1	; () banked
  5651  00184C  0101               	movlb	1	; () banked
  5652  00184E  4B88               	infsnz	memcpy@d& (0+255),f,b
  5653  001850  2B89               	incf	(memcpy@d+1)& (0+255),f,b
  5654  001852                     l4299:
  5655                           
  5656                           ; BSR set to: 1
  5657  001852  0101               	movlb	1	; () banked
  5658  001854  0101               	movlb	1	; () banked
  5659  001856  0786               	decf	memcpy@n& (0+255),f,b
  5660  001858  A0D8               	btfss	status,0,c
  5661  00185A  0787               	decf	(memcpy@n+1)& (0+255),f,b
  5662  00185C  0101               	movlb	1	; () banked
  5663  00185E  2986               	incf	memcpy@n& (0+255),w,b
  5664  001860  B4D8               	btfsc	status,2,c
  5665  001862  2987               	incf	(memcpy@n+1)& (0+255),w,b
  5666  001864  B4D8               	btfsc	status,2,c
  5667                           
  5668                           ; BSR set to: 1
  5669                           
  5670                           ; BSR set to: 1
  5671                           ;	Return value of _memcpy is never used
  5672  001866  0012               	return	
  5673  001868  D7E2               	goto	l4293
  5674  00186A                     __end_of_memcpy:
  5675                           	opt stack 0
  5676                           tblptru	equ	0xFF8
  5677                           tblptrh	equ	0xFF7
  5678                           tblptrl	equ	0xFF6
  5679                           tablat	equ	0xFF5
  5680                           prodh	equ	0xFF4
  5681                           prodl	equ	0xFF3
  5682                           intcon	equ	0xFF2
  5683                           intcon2	equ	0xFF1
  5684                           postinc0	equ	0xFEE
  5685                           wreg	equ	0xFE8
  5686                           indf1	equ	0xFE7
  5687                           postdec1	equ	0xFE5
  5688                           fsr1h	equ	0xFE2
  5689                           fsr1l	equ	0xFE1
  5690                           indf2	equ	0xFDF
  5691                           postinc2	equ	0xFDE
  5692                           postdec2	equ	0xFDD
  5693                           fsr2h	equ	0xFDA
  5694                           fsr2l	equ	0xFD9
  5695                           status	equ	0xFD8
  5696                           
  5697 ;; *************** function _OpenUSART *****************
  5698 ;; Defined at:
  5699 ;;		line 73 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uopen.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;  config          1    wreg     unsigned char 
  5702 ;;  spbrg           2    0[BANK1 ] unsigned int 
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;  config          1    5[BANK1 ] unsigned char 
  5705 ;; Return value:  Size  Location     Type
  5706 ;;		None               void
  5707 ;; Registers used:
  5708 ;;		wreg, status,2
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5714 ;;      Params:         0       0       2       0       0
  5715 ;;      Locals:         0       0       1       0       0
  5716 ;;      Temps:          0       0       3       0       0
  5717 ;;      Totals:         0       0       6       0       0
  5718 ;;Total ram usage:        6 bytes
  5719 ;; Hardware stack levels used:    1
  5720 ;; Hardware stack levels required when called:   11
  5721 ;; This function calls:
  5722 ;;		Nothing
  5723 ;; This function is called by:
  5724 ;;		_main
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           	psect	text31
  5729  0012E8                     __ptext31:
  5730                           	opt stack 0
  5731  0012E8                     _OpenUSART:
  5732                           	opt stack 19
  5733                           
  5734                           ; BSR set to: 1
  5735                           ;incstack = 0
  5736                           ;OpenUSART@config stored from wreg
  5737  0012E8  CFE8 F187          	movff	wreg,OpenUSART@config
  5738  0012EC  0E00               	movlw	0
  5739  0012EE  6EAC               	movwf	4012,c	;volatile
  5740  0012F0  0E00               	movlw	0
  5741  0012F2  6EAB               	movwf	4011,c	;volatile
  5742  0012F4  0101               	movlb	1	; () banked
  5743  0012F6  0101               	movlb	1	; () banked
  5744  0012F8  B187               	btfsc	OpenUSART@config& (0+255),0,b
  5745                           
  5746                           ; BSR set to: 1
  5747  0012FA  88AC               	bsf	4012,4,c	;volatile
  5748                           
  5749                           ; BSR set to: 1
  5750                           
  5751                           ; BSR set to: 1
  5752  0012FC  0101               	movlb	1	; () banked
  5753  0012FE  0101               	movlb	1	; () banked
  5754  001300  A387               	btfss	OpenUSART@config& (0+255),1,b
  5755  001302  D002               	goto	l4587
  5756                           
  5757                           ; BSR set to: 1
  5758  001304  8CAC               	bsf	4012,6,c	;volatile
  5759  001306  8CAB               	bsf	4011,6,c	;volatile
  5760  001308                     l4587:
  5761                           
  5762                           ; BSR set to: 1
  5763  001308  0101               	movlb	1	; () banked
  5764  00130A  0101               	movlb	1	; () banked
  5765  00130C  B587               	btfsc	OpenUSART@config& (0+255),2,b
  5766                           
  5767                           ; BSR set to: 1
  5768  00130E  8EAC               	bsf	4012,7,c	;volatile
  5769                           
  5770                           ; BSR set to: 1
  5771                           
  5772                           ; BSR set to: 1
  5773  001310  0101               	movlb	1	; () banked
  5774  001312  0101               	movlb	1	; () banked
  5775  001314  A787               	btfss	OpenUSART@config& (0+255),3,b
  5776  001316  D002               	goto	l821
  5777                           
  5778                           ; BSR set to: 1
  5779  001318  88AB               	bsf	4011,4,c	;volatile
  5780  00131A  D001               	goto	l4595
  5781  00131C                     l821:
  5782                           
  5783                           ; BSR set to: 1
  5784  00131C  8AAB               	bsf	4011,5,c	;volatile
  5785  00131E                     l4595:
  5786                           
  5787                           ; BSR set to: 1
  5788  00131E  0101               	movlb	1	; () banked
  5789  001320  0101               	movlb	1	; () banked
  5790  001322  B987               	btfsc	OpenUSART@config& (0+255),4,b
  5791                           
  5792                           ; BSR set to: 1
  5793  001324  84AC               	bsf	4012,2,c	;volatile
  5794                           
  5795                           ; BSR set to: 1
  5796  001326  989E               	bcf	3998,4,c	;volatile
  5797                           
  5798                           ; BSR set to: 1
  5799  001328  0101               	movlb	1	; () banked
  5800  00132A  0101               	movlb	1	; () banked
  5801  00132C  BB87               	btfsc	OpenUSART@config& (0+255),5,b
  5802                           
  5803                           ; BSR set to: 1
  5804  00132E  86AB               	bsf	4011,3,c	;volatile
  5805                           
  5806                           ; BSR set to: 1
  5807                           
  5808                           ; BSR set to: 1
  5809  001330  0101               	movlb	1	; () banked
  5810  001332  0101               	movlb	1	; () banked
  5811  001334  AD87               	btfss	OpenUSART@config& (0+255),6,b
  5812  001336  D002               	goto	l825
  5813                           
  5814                           ; BSR set to: 1
  5815  001338  8A9D               	bsf	3997,5,c	;volatile
  5816  00133A  D001               	goto	l826
  5817  00133C                     l825:
  5818                           
  5819                           ; BSR set to: 1
  5820  00133C  9A9D               	bcf	3997,5,c	;volatile
  5821  00133E                     l826:
  5822                           
  5823                           ; BSR set to: 1
  5824  00133E  9A9E               	bcf	3998,5,c	;volatile
  5825                           
  5826                           ; BSR set to: 1
  5827  001340  0101               	movlb	1	; () banked
  5828  001342  0101               	movlb	1	; () banked
  5829  001344  AF87               	btfss	OpenUSART@config& (0+255),7,b
  5830  001346  D002               	goto	l827
  5831                           
  5832                           ; BSR set to: 1
  5833  001348  889D               	bsf	3997,4,c	;volatile
  5834  00134A  D001               	goto	l828
  5835  00134C                     l827:
  5836                           
  5837                           ; BSR set to: 1
  5838  00134C  989D               	bcf	3997,4,c	;volatile
  5839  00134E                     l828:
  5840                           
  5841                           ; BSR set to: 1
  5842  00134E  C182  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5843                           
  5844                           ; BSR set to: 1
  5845  001352  0101               	movlb	1	; () banked
  5846  001354  C183  F184         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5847  001358  C184  F185         	movff	??_OpenUSART,??_OpenUSART+1
  5848  00135C  0101               	movlb	1	; () banked
  5849  00135E  6B86               	clrf	(??_OpenUSART+2)& (0+255),b
  5850  001360  0101               	movlb	1	; () banked
  5851  001362  5185               	movf	(??_OpenUSART+1)& (0+255),w,b
  5852  001364  6EB0               	movwf	4016,c	;volatile
  5853                           
  5854                           ; BSR set to: 1
  5855  001366  8AAC               	bsf	4012,5,c	;volatile
  5856                           
  5857                           ; BSR set to: 1
  5858  001368  8EAB               	bsf	4011,7,c	;volatile
  5859                           
  5860                           ; BSR set to: 1
  5861  00136A  9C94               	bcf	3988,6,c	;volatile
  5862                           
  5863                           ; BSR set to: 1
  5864  00136C  8E94               	bsf	3988,7,c	;volatile
  5865                           
  5866                           ; BSR set to: 1
  5867  00136E  A8AC               	btfss	4012,4,c	;volatile
  5868  001370  0012               	return	
  5869                           
  5870                           ; BSR set to: 1
  5871  001372  BEAC               	btfsc	4012,7,c	;volatile
  5872  001374  0012               	return	
  5873                           
  5874                           ; BSR set to: 1
  5875  001376  8C94               	bsf	3988,6,c	;volatile
  5876  001378  0012               	return	
  5877  00137A                     __end_of_OpenUSART:
  5878                           	opt stack 0
  5879                           tblptru	equ	0xFF8
  5880                           tblptrh	equ	0xFF7
  5881                           tblptrl	equ	0xFF6
  5882                           tablat	equ	0xFF5
  5883                           prodh	equ	0xFF4
  5884                           prodl	equ	0xFF3
  5885                           intcon	equ	0xFF2
  5886                           intcon2	equ	0xFF1
  5887                           postinc0	equ	0xFEE
  5888                           wreg	equ	0xFE8
  5889                           indf1	equ	0xFE7
  5890                           postdec1	equ	0xFE5
  5891                           fsr1h	equ	0xFE2
  5892                           fsr1l	equ	0xFE1
  5893                           indf2	equ	0xFDF
  5894                           postinc2	equ	0xFDE
  5895                           postdec2	equ	0xFDD
  5896                           fsr2h	equ	0xFDA
  5897                           fsr2l	equ	0xFD9
  5898                           status	equ	0xFD8
  5899                           
  5900 ;; *************** function _OpenTimer0 *****************
  5901 ;; Defined at:
  5902 ;;		line 18 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0open.c"
  5903 ;; Parameters:    Size  Location     Type
  5904 ;;  config          1    wreg     unsigned char 
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;  config          1    0[BANK1 ] unsigned char 
  5907 ;; Return value:  Size  Location     Type
  5908 ;;		None               void
  5909 ;; Registers used:
  5910 ;;		wreg, status,2, status,0
  5911 ;; Tracked objects:
  5912 ;;		On entry : 0/0
  5913 ;;		On exit  : 0/0
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5916 ;;      Params:         0       0       0       0       0
  5917 ;;      Locals:         0       0       1       0       0
  5918 ;;      Temps:          0       0       0       0       0
  5919 ;;      Totals:         0       0       1       0       0
  5920 ;;Total ram usage:        1 bytes
  5921 ;; Hardware stack levels used:    1
  5922 ;; Hardware stack levels required when called:   11
  5923 ;; This function calls:
  5924 ;;		Nothing
  5925 ;; This function is called by:
  5926 ;;		_main
  5927 ;; This function uses a non-reentrant model
  5928 ;;
  5929                           
  5930                           	psect	text32
  5931  001BF8                     __ptext32:
  5932                           	opt stack 0
  5933  001BF8                     _OpenTimer0:
  5934                           	opt stack 19
  5935                           
  5936                           ; BSR set to: 1
  5937                           ;incstack = 0
  5938                           ;OpenTimer0@config stored from wreg
  5939  001BF8  CFE8 F182          	movff	wreg,OpenTimer0@config
  5940  001BFC  0101               	movlb	1	; () banked
  5941  001BFE  0101               	movlb	1	; () banked
  5942  001C00  5182               	movf	OpenTimer0@config& (0+255),w,b
  5943  001C02  0B7F               	andlw	127
  5944  001C04  6ED5               	movwf	4053,c	;volatile
  5945                           
  5946                           ; BSR set to: 1
  5947  001C06  0E00               	movlw	0
  5948  001C08  6ED7               	movwf	4055,c	;volatile
  5949                           
  5950                           ; BSR set to: 1
  5951  001C0A  0E00               	movlw	0
  5952  001C0C  6ED6               	movwf	4054,c	;volatile
  5953                           
  5954                           ; BSR set to: 1
  5955  001C0E  94F2               	bcf	intcon,2,c	;volatile
  5956                           
  5957                           ; BSR set to: 1
  5958  001C10  0101               	movlb	1	; () banked
  5959  001C12  0101               	movlb	1	; () banked
  5960  001C14  AF82               	btfss	OpenTimer0@config& (0+255),7,b
  5961  001C16  D002               	goto	l772
  5962                           
  5963                           ; BSR set to: 1
  5964  001C18  8AF2               	bsf	intcon,5,c	;volatile
  5965  001C1A  D001               	goto	l773
  5966  001C1C                     l772:
  5967                           
  5968                           ; BSR set to: 1
  5969  001C1C  9AF2               	bcf	intcon,5,c	;volatile
  5970  001C1E                     l773:
  5971                           
  5972                           ; BSR set to: 1
  5973  001C1E  8ED5               	bsf	4053,7,c	;volatile
  5974                           
  5975                           ; BSR set to: 1
  5976  001C20  0012               	return	
  5977  001C22                     __end_of_OpenTimer0:
  5978                           	opt stack 0
  5979                           tblptru	equ	0xFF8
  5980                           tblptrh	equ	0xFF7
  5981                           tblptrl	equ	0xFF6
  5982                           tablat	equ	0xFF5
  5983                           prodh	equ	0xFF4
  5984                           prodl	equ	0xFF3
  5985                           intcon	equ	0xFF2
  5986                           intcon2	equ	0xFF1
  5987                           postinc0	equ	0xFEE
  5988                           wreg	equ	0xFE8
  5989                           indf1	equ	0xFE7
  5990                           postdec1	equ	0xFE5
  5991                           fsr1h	equ	0xFE2
  5992                           fsr1l	equ	0xFE1
  5993                           indf2	equ	0xFDF
  5994                           postinc2	equ	0xFDE
  5995                           postdec2	equ	0xFDD
  5996                           fsr2h	equ	0xFDA
  5997                           fsr2l	equ	0xFD9
  5998                           status	equ	0xFD8
  5999                           
  6000 ;; *************** function _InterruptHandlerLow *****************
  6001 ;; Defined at:
  6002 ;;		line 331 in file "../src/interrupts.c"
  6003 ;; Parameters:    Size  Location     Type
  6004 ;;		None
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;		None
  6007 ;; Return value:  Size  Location     Type
  6008 ;;		None               void
  6009 ;; Registers used:
  6010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6011 ;; Tracked objects:
  6012 ;;		On entry : 0/0
  6013 ;;		On exit  : 0/0
  6014 ;;		Unchanged: 0/0
  6015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6016 ;;      Params:         0       0       0       0       0
  6017 ;;      Locals:         0       0       0       0       0
  6018 ;;      Temps:         17       0       0       0       0
  6019 ;;      Totals:        17       0       0       0       0
  6020 ;;Total ram usage:       17 bytes
  6021 ;; Hardware stack levels used:    1
  6022 ;; Hardware stack levels required when called:   10
  6023 ;; This function calls:
  6024 ;;		_timer1_int_handler
  6025 ;;		_uart_recv_int_handler
  6026 ;;		_uart_send_int_handler
  6027 ;; This function is called by:
  6028 ;;		Interrupt level 1
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           
  6032                           	psect	intcodelo
  6033  000018                     __pintcodelo:
  6034                           	opt stack 0
  6035  000018                     _InterruptHandlerLow:
  6036                           	opt stack 16
  6037                           
  6038                           ; BSR set to: 1
  6039                           ;incstack = 0
  6040  000018  CFD8 F01F          	movff	status,??_InterruptHandlerLow
  6041  00001C  CFE8 F020          	movff	wreg,??_InterruptHandlerLow+1
  6042  000020  CFE0 F021          	movff	bsr,??_InterruptHandlerLow+2
  6043  000024  CFFA F022          	movff	pclath,??_InterruptHandlerLow+3
  6044  000028  CFFB F023          	movff	pclatu,??_InterruptHandlerLow+4
  6045  00002C  CFE9 F024          	movff	fsr0l,??_InterruptHandlerLow+5
  6046  000030  CFEA F025          	movff	fsr0h,??_InterruptHandlerLow+6
  6047  000034  CFE1 F026          	movff	fsr1l,??_InterruptHandlerLow+7
  6048  000038  CFE2 F027          	movff	fsr1h,??_InterruptHandlerLow+8
  6049  00003C  CFD9 F028          	movff	fsr2l,??_InterruptHandlerLow+9
  6050  000040  CFDA F029          	movff	fsr2h,??_InterruptHandlerLow+10
  6051  000044  CFF3 F02A          	movff	prodl,??_InterruptHandlerLow+11
  6052  000048  CFF4 F02B          	movff	prodh,??_InterruptHandlerLow+12
  6053  00004C  CFF6 F02C          	movff	tblptrl,??_InterruptHandlerLow+13
  6054  000050  CFF7 F02D          	movff	tblptrh,??_InterruptHandlerLow+14
  6055  000054  CFF8 F02E          	movff	tblptru,??_InterruptHandlerLow+15
  6056  000058  CFF5 F02F          	movff	tablat,??_InterruptHandlerLow+16
  6057                           
  6058                           ;interrupts.c: 333: if (PIR1bits.TMR1IF) {
  6059  00005C  A09E               	btfss	3998,0,c	;volatile
  6060  00005E  D003               	goto	i1l3997
  6061                           
  6062                           ;interrupts.c: 334: PIR1bits.TMR1IF = 0;
  6063  000060  909E               	bcf	3998,0,c	;volatile
  6064                           
  6065                           ;interrupts.c: 335: timer1_int_handler();
  6066  000062  ECCC  F00D         	call	_timer1_int_handler	;wreg free
  6067  000066                     i1l3997:
  6068                           
  6069                           ;interrupts.c: 336: }
  6070                           ;interrupts.c: 339: if (PIR1bits.RCIF) {
  6071  000066  AA9E               	btfss	3998,5,c	;volatile
  6072  000068  D003               	goto	i1l4003
  6073                           
  6074                           ;interrupts.c: 340: PIR1bits.RCIF = 0;
  6075  00006A  9A9E               	bcf	3998,5,c	;volatile
  6076                           
  6077                           ;interrupts.c: 341: uart_recv_int_handler();
  6078  00006C  ECE6  F00D         	call	_uart_recv_int_handler	;wreg free
  6079  000070                     i1l4003:
  6080                           
  6081                           ;interrupts.c: 342: }
  6082                           ;interrupts.c: 345: if ( PIE1bits.TXIE && PIR1bits.TX1IF ) {
  6083  000070  B89D               	btfsc	3997,4,c	;volatile
  6084  000072  A89E               	btfss	3998,4,c	;volatile
  6085  000074  D003               	goto	i1l503
  6086                           
  6087                           ;interrupts.c: 347: PIE1bits.TXIE = 0;
  6088  000076  989D               	bcf	3997,4,c	;volatile
  6089                           
  6090                           ;interrupts.c: 350: uart_send_int_handler();
  6091  000078  ECD6  F00B         	call	_uart_send_int_handler	;wreg free
  6092  00007C                     i1l503:
  6093  00007C  C02F  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  6094  000080  C02E  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  6095  000084  C02D  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  6096  000088  C02C  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  6097  00008C  C02B  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  6098  000090  C02A  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  6099  000094  C029  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  6100  000098  C028  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  6101  00009C  C027  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  6102  0000A0  C026  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  6103  0000A4  C025  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  6104  0000A8  C024  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  6105  0000AC  C023  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  6106  0000B0  C022  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  6107  0000B4  C021  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  6108  0000B8  C020  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  6109  0000BC  C01F  FFD8         	movff	??_InterruptHandlerLow,status
  6110  0000C0  0010               	retfie	
  6111  0000C2                     __end_of_InterruptHandlerLow:
  6112                           	opt stack 0
  6113                           pclatu	equ	0xFFB
  6114                           pclath	equ	0xFFA
  6115                           tblptru	equ	0xFF8
  6116                           tblptrh	equ	0xFF7
  6117                           tblptrl	equ	0xFF6
  6118                           tablat	equ	0xFF5
  6119                           prodh	equ	0xFF4
  6120                           prodl	equ	0xFF3
  6121                           intcon	equ	0xFF2
  6122                           intcon2	equ	0xFF1
  6123                           postinc0	equ	0xFEE
  6124                           fsr0h	equ	0xFEA
  6125                           fsr0l	equ	0xFE9
  6126                           wreg	equ	0xFE8
  6127                           indf1	equ	0xFE7
  6128                           postdec1	equ	0xFE5
  6129                           fsr1h	equ	0xFE2
  6130                           fsr1l	equ	0xFE1
  6131                           bsr	equ	0xFE0
  6132                           indf2	equ	0xFDF
  6133                           postinc2	equ	0xFDE
  6134                           postdec2	equ	0xFDD
  6135                           fsr2h	equ	0xFDA
  6136                           fsr2l	equ	0xFD9
  6137                           status	equ	0xFD8
  6138                           
  6139 ;; *************** function _uart_send_int_handler *****************
  6140 ;; Defined at:
  6141 ;;		line 150 in file "../src/my_uart.c"
  6142 ;; Parameters:    Size  Location     Type
  6143 ;;		None
  6144 ;; Auto vars:     Size  Location     Type
  6145 ;;		None
  6146 ;; Return value:  Size  Location     Type
  6147 ;;		None               void
  6148 ;; Registers used:
  6149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6150 ;; Tracked objects:
  6151 ;;		On entry : 0/0
  6152 ;;		On exit  : 0/0
  6153 ;;		Unchanged: 0/0
  6154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6155 ;;      Params:         0       0       0       0       0
  6156 ;;      Locals:         0       0       0       0       0
  6157 ;;      Temps:          1       0       0       0       0
  6158 ;;      Totals:         1       0       0       0       0
  6159 ;;Total ram usage:        1 bytes
  6160 ;; Hardware stack levels used:    1
  6161 ;; Hardware stack levels required when called:    6
  6162 ;; This function calls:
  6163 ;;		_WriteUSART
  6164 ;; This function is called by:
  6165 ;;		_InterruptHandlerLow
  6166 ;; This function uses a non-reentrant model
  6167 ;;
  6168                           
  6169                           	psect	text34
  6170  0017AC                     __ptext34:
  6171                           	opt stack 0
  6172  0017AC                     _uart_send_int_handler:
  6173                           	opt stack 19
  6174                           
  6175                           ;my_uart.c: 153: if(uc_ptr->sendSize > 0) {
  6176                           
  6177                           ;incstack = 0
  6178  0017AC  EE20 F01A          	lfsr	2,26
  6179  0017B0  5061               	movf	_uc_ptr,w,c
  6180  0017B2  26D9               	addwf	fsr2l,f,c
  6181  0017B4  5062               	movf	_uc_ptr+1,w,c
  6182  0017B6  22DA               	addwfc	fsr2h,f,c
  6183  0017B8  50DF               	movf	indf2,w,c
  6184  0017BA  B4D8               	btfsc	status,2,c
  6185  0017BC  0012               	return	
  6186                           
  6187                           ;my_uart.c: 157: WriteUSART(uc_ptr->sendBuffer[uc_ptr->sendCurrent]);
  6188  0017BE  EE20 F01B          	lfsr	2,27
  6189  0017C2  5061               	movf	_uc_ptr,w,c
  6190  0017C4  26D9               	addwf	fsr2l,f,c
  6191  0017C6  5062               	movf	_uc_ptr+1,w,c
  6192  0017C8  22DA               	addwfc	fsr2h,f,c
  6193  0017CA  50DF               	movf	indf2,w,c
  6194  0017CC  6E02               	movwf	??_uart_send_int_handler& (0+255),c
  6195  0017CE  5002               	movf	??_uart_send_int_handler,w,c
  6196  0017D0  0D01               	mullw	1
  6197  0017D2  0E10               	movlw	16
  6198  0017D4  26F3               	addwf	prodl,f,c
  6199  0017D6  0E00               	movlw	0
  6200  0017D8  22F4               	addwfc	prodh,f,c
  6201  0017DA  50F3               	movf	prodl,w,c
  6202  0017DC  2461               	addwf	_uc_ptr,w,c
  6203  0017DE  6ED9               	movwf	fsr2l,c
  6204  0017E0  50F4               	movf	prodh,w,c
  6205  0017E2  2062               	addwfc	_uc_ptr+1,w,c
  6206  0017E4  6EDA               	movwf	fsr2h,c
  6207  0017E6  50DF               	movf	indf2,w,c
  6208  0017E8  EC7F  F00E         	call	_WriteUSART
  6209                           
  6210                           ;my_uart.c: 163: PIE1bits.TXIE = 1;
  6211  0017EC  889D               	bsf	3997,4,c	;volatile
  6212                           
  6213                           ;my_uart.c: 166: uc_ptr->sendCurrent++;
  6214  0017EE  EE20 F01B          	lfsr	2,27
  6215  0017F2  5061               	movf	_uc_ptr,w,c
  6216  0017F4  26D9               	addwf	fsr2l,f,c
  6217  0017F6  5062               	movf	_uc_ptr+1,w,c
  6218  0017F8  22DA               	addwfc	fsr2h,f,c
  6219  0017FA  2ADF               	incf	indf2,f,c
  6220                           
  6221                           ;my_uart.c: 167: uc_ptr->sendSize--;
  6222  0017FC  EE20 F01A          	lfsr	2,26
  6223  001800  5061               	movf	_uc_ptr,w,c
  6224  001802  26D9               	addwf	fsr2l,f,c
  6225  001804  5062               	movf	_uc_ptr+1,w,c
  6226  001806  22DA               	addwfc	fsr2h,f,c
  6227  001808  06DF               	decf	indf2,f,c
  6228  00180A  0012               	return	
  6229  00180C                     __end_of_uart_send_int_handler:
  6230                           	opt stack 0
  6231                           pclatu	equ	0xFFB
  6232                           pclath	equ	0xFFA
  6233                           tblptru	equ	0xFF8
  6234                           tblptrh	equ	0xFF7
  6235                           tblptrl	equ	0xFF6
  6236                           tablat	equ	0xFF5
  6237                           prodh	equ	0xFF4
  6238                           prodl	equ	0xFF3
  6239                           intcon	equ	0xFF2
  6240                           intcon2	equ	0xFF1
  6241                           postinc0	equ	0xFEE
  6242                           fsr0h	equ	0xFEA
  6243                           fsr0l	equ	0xFE9
  6244                           wreg	equ	0xFE8
  6245                           indf1	equ	0xFE7
  6246                           postdec1	equ	0xFE5
  6247                           fsr1h	equ	0xFE2
  6248                           fsr1l	equ	0xFE1
  6249                           bsr	equ	0xFE0
  6250                           indf2	equ	0xFDF
  6251                           postinc2	equ	0xFDE
  6252                           postdec2	equ	0xFDD
  6253                           fsr2h	equ	0xFDA
  6254                           fsr2l	equ	0xFD9
  6255                           status	equ	0xFD8
  6256                           
  6257 ;; *************** function _WriteUSART *****************
  6258 ;; Defined at:
  6259 ;;		line 13 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uwrite.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;  data            1    wreg     unsigned char 
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;  data            1    0[COMRAM] unsigned char 
  6264 ;; Return value:  Size  Location     Type
  6265 ;;		None               void
  6266 ;; Registers used:
  6267 ;;		wreg
  6268 ;; Tracked objects:
  6269 ;;		On entry : 0/0
  6270 ;;		On exit  : 0/0
  6271 ;;		Unchanged: 0/0
  6272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6273 ;;      Params:         0       0       0       0       0
  6274 ;;      Locals:         1       0       0       0       0
  6275 ;;      Temps:          0       0       0       0       0
  6276 ;;      Totals:         1       0       0       0       0
  6277 ;;Total ram usage:        1 bytes
  6278 ;; Hardware stack levels used:    1
  6279 ;; Hardware stack levels required when called:    5
  6280 ;; This function calls:
  6281 ;;		Nothing
  6282 ;; This function is called by:
  6283 ;;		_uart_send_int_handler
  6284 ;; This function uses a non-reentrant model
  6285 ;;
  6286                           
  6287                           	psect	text35
  6288  001CFE                     __ptext35:
  6289                           	opt stack 0
  6290  001CFE                     _WriteUSART:
  6291                           	opt stack 19
  6292                           
  6293                           ;incstack = 0
  6294                           ;WriteUSART@data stored from wreg
  6295  001CFE  CFE8 F001          	movff	wreg,WriteUSART@data
  6296  001D02  ACAC               	btfss	4012,6,c	;volatile
  6297  001D04  D003               	goto	i1l2947
  6298  001D06  90AC               	bcf	4012,0,c	;volatile
  6299  001D08  B23C               	btfsc	_USART_Status,1,c
  6300  001D0A  80AC               	bsf	4012,0,c	;volatile
  6301  001D0C                     i1l2947:
  6302  001D0C  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  6303  001D10  0012               	return	
  6304  001D12                     __end_of_WriteUSART:
  6305                           	opt stack 0
  6306                           pclatu	equ	0xFFB
  6307                           pclath	equ	0xFFA
  6308                           tblptru	equ	0xFF8
  6309                           tblptrh	equ	0xFF7
  6310                           tblptrl	equ	0xFF6
  6311                           tablat	equ	0xFF5
  6312                           prodh	equ	0xFF4
  6313                           prodl	equ	0xFF3
  6314                           intcon	equ	0xFF2
  6315                           intcon2	equ	0xFF1
  6316                           postinc0	equ	0xFEE
  6317                           fsr0h	equ	0xFEA
  6318                           fsr0l	equ	0xFE9
  6319                           wreg	equ	0xFE8
  6320                           indf1	equ	0xFE7
  6321                           postdec1	equ	0xFE5
  6322                           fsr1h	equ	0xFE2
  6323                           fsr1l	equ	0xFE1
  6324                           bsr	equ	0xFE0
  6325                           indf2	equ	0xFDF
  6326                           postinc2	equ	0xFDE
  6327                           postdec2	equ	0xFDD
  6328                           fsr2h	equ	0xFDA
  6329                           fsr2l	equ	0xFD9
  6330                           status	equ	0xFD8
  6331                           
  6332 ;; *************** function _uart_recv_int_handler *****************
  6333 ;; Defined at:
  6334 ;;		line 121 in file "../src/my_uart.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;		None
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;		None
  6339 ;; Return value:  Size  Location     Type
  6340 ;;		None               void
  6341 ;; Registers used:
  6342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6343 ;; Tracked objects:
  6344 ;;		On entry : 0/0
  6345 ;;		On exit  : 0/0
  6346 ;;		Unchanged: 0/0
  6347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6348 ;;      Params:         0       0       0       0       0
  6349 ;;      Locals:         0       0       0       0       0
  6350 ;;      Temps:          1       0       0       0       0
  6351 ;;      Totals:         1       0       0       0       0
  6352 ;;Total ram usage:        1 bytes
  6353 ;; Hardware stack levels used:    1
  6354 ;; Hardware stack levels required when called:    9
  6355 ;; This function calls:
  6356 ;;		_ReadUSART
  6357 ;;		_uart_recv_state
  6358 ;;		i1_ToMainLow_sendmsg
  6359 ;; This function is called by:
  6360 ;;		_InterruptHandlerLow
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364                           	psect	text36
  6365  001BCC                     __ptext36:
  6366                           	opt stack 0
  6367  001BCC                     _uart_recv_int_handler:
  6368                           	opt stack 16
  6369                           
  6370                           ;my_uart.c: 135: if ((PIR1bits.RCIF)) {
  6371                           
  6372                           ;incstack = 0
  6373  001BCC  AA9E               	btfss	3998,5,c	;volatile
  6374  001BCE  D004               	goto	i1l3985
  6375                           
  6376                           ;my_uart.c: 137: uart_recv_state(ReadUSART());
  6377  001BD0  EC5A  F00E         	call	_ReadUSART	;wreg free
  6378  001BD4  EC4C  F004         	call	_uart_recv_state
  6379  001BD8                     i1l3985:
  6380                           
  6381                           ;my_uart.c: 138: }
  6382                           ;my_uart.c: 139: if (USART_Status.OVERRUN_ERROR == 1) {
  6383  001BD8  A63C               	btfss	_USART_Status,3,c
  6384  001BDA  0012               	return	
  6385                           
  6386                           ;my_uart.c: 142: RCSTAbits.CREN = 0;
  6387  001BDC  98AB               	bcf	4011,4,c	;volatile
  6388                           
  6389                           ;my_uart.c: 143: RCSTAbits.CREN = 1;
  6390  001BDE  88AB               	bsf	4011,4,c	;volatile
  6391                           
  6392                           ;my_uart.c: 144: ToMainLow_sendmsg(0, 30, (void *) 0);
  6393  001BE0  6E1E               	movwf	??_uart_recv_int_handler& (0+255),c
  6394  001BE2  0E1E               	movlw	30
  6395  001BE4  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6396  001BE6  501E               	movf	??_uart_recv_int_handler& (0+255),w,c
  6397  001BE8  0E00               	movlw	0
  6398  001BEA  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  6399  001BEC  0E00               	movlw	0
  6400  001BEE  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  6401  001BF0  0E00               	movlw	0
  6402  001BF2  EC11  F00E         	call	i1_ToMainLow_sendmsg
  6403  001BF6  0012               	return	
  6404  001BF8                     __end_of_uart_recv_int_handler:
  6405                           	opt stack 0
  6406                           pclatu	equ	0xFFB
  6407                           pclath	equ	0xFFA
  6408                           tblptru	equ	0xFF8
  6409                           tblptrh	equ	0xFF7
  6410                           tblptrl	equ	0xFF6
  6411                           tablat	equ	0xFF5
  6412                           prodh	equ	0xFF4
  6413                           prodl	equ	0xFF3
  6414                           intcon	equ	0xFF2
  6415                           intcon2	equ	0xFF1
  6416                           postinc0	equ	0xFEE
  6417                           fsr0h	equ	0xFEA
  6418                           fsr0l	equ	0xFE9
  6419                           wreg	equ	0xFE8
  6420                           indf1	equ	0xFE7
  6421                           postdec1	equ	0xFE5
  6422                           fsr1h	equ	0xFE2
  6423                           fsr1l	equ	0xFE1
  6424                           bsr	equ	0xFE0
  6425                           indf2	equ	0xFDF
  6426                           postinc2	equ	0xFDE
  6427                           postdec2	equ	0xFDD
  6428                           fsr2h	equ	0xFDA
  6429                           fsr2l	equ	0xFD9
  6430                           status	equ	0xFD8
  6431                           
  6432 ;; *************** function i1_ToMainLow_sendmsg *****************
  6433 ;; Defined at:
  6434 ;;		line 108 in file "../src/messages.c"
  6435 ;; Parameters:    Size  Location     Type
  6436 ;;  length          1    wreg     unsigned char 
  6437 ;;  msgtype         1   22[COMRAM] unsigned char 
  6438 ;;  data            2   23[COMRAM] PTR void 
  6439 ;;		 -> main@msgbuffer(11), NULL(0), 
  6440 ;; Auto vars:     Size  Location     Type
  6441 ;;  length          1   25[COMRAM] unsigned char 
  6442 ;; Return value:  Size  Location     Type
  6443 ;;                  1    wreg      char 
  6444 ;; Registers used:
  6445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6446 ;; Tracked objects:
  6447 ;;		On entry : 0/0
  6448 ;;		On exit  : 0/0
  6449 ;;		Unchanged: 0/0
  6450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6451 ;;      Params:         3       0       0       0       0
  6452 ;;      Locals:         1       0       0       0       0
  6453 ;;      Temps:          0       0       0       0       0
  6454 ;;      Totals:         4       0       0       0       0
  6455 ;;Total ram usage:        4 bytes
  6456 ;; Hardware stack levels used:    1
  6457 ;; Hardware stack levels required when called:    7
  6458 ;; This function calls:
  6459 ;;		i1_send_msg
  6460 ;; This function is called by:
  6461 ;;		_uart_recv_int_handler
  6462 ;; This function uses a non-reentrant model
  6463 ;;
  6464                           
  6465                           	psect	text37
  6466  001C22                     __ptext37:
  6467                           	opt stack 0
  6468  001C22                     i1_ToMainLow_sendmsg:
  6469                           	opt stack 17
  6470                           
  6471                           ;incstack = 0
  6472                           ;i1ToMainLow_sendmsg@length stored from wreg
  6473  001C22  CFE8 F01A          	movff	wreg,i1ToMainLow_sendmsg@length
  6474                           
  6475                           ;messages.c: 114: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6476                           ;	Return value of i1_ToMainLow_sendmsg is never used
  6477  001C26  0101               	movlb	1	; () banked
  6478  001C28  0E01               	movlw	high _ToMainLow_MQ
  6479  001C2A  6E0C               	movwf	i1send_msg@qptr+1,c
  6480  001C2C  0101               	movlb	1	; () banked
  6481  001C2E  0E4C               	movlw	low _ToMainLow_MQ
  6482  001C30  6E0B               	movwf	i1send_msg@qptr,c
  6483  001C32  C01A  F00D         	movff	i1ToMainLow_sendmsg@length,i1send_msg@length
  6484  001C36  C017  F00E         	movff	i1ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6485  001C3A  C019  F010         	movff	i1ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6486  001C3E  C018  F00F         	movff	i1ToMainLow_sendmsg@data,i1send_msg@data
  6487  001C42  EC84  F008         	call	i1_send_msg	;wreg free
  6488  001C46  0012               	return	
  6489  001C48                     __end_ofi1_ToMainLow_sendmsg:
  6490                           	opt stack 0
  6491                           pclatu	equ	0xFFB
  6492                           pclath	equ	0xFFA
  6493                           tblptru	equ	0xFF8
  6494                           tblptrh	equ	0xFF7
  6495                           tblptrl	equ	0xFF6
  6496                           tablat	equ	0xFF5
  6497                           prodh	equ	0xFF4
  6498                           prodl	equ	0xFF3
  6499                           intcon	equ	0xFF2
  6500                           intcon2	equ	0xFF1
  6501                           postinc0	equ	0xFEE
  6502                           fsr0h	equ	0xFEA
  6503                           fsr0l	equ	0xFE9
  6504                           wreg	equ	0xFE8
  6505                           indf1	equ	0xFE7
  6506                           postdec1	equ	0xFE5
  6507                           fsr1h	equ	0xFE2
  6508                           fsr1l	equ	0xFE1
  6509                           bsr	equ	0xFE0
  6510                           indf2	equ	0xFDF
  6511                           postinc2	equ	0xFDE
  6512                           postdec2	equ	0xFDD
  6513                           fsr2h	equ	0xFDA
  6514                           fsr2l	equ	0xFD9
  6515                           status	equ	0xFD8
  6516                           
  6517 ;; *************** function _uart_recv_state *****************
  6518 ;; Defined at:
  6519 ;;		line 14 in file "../src/my_uart.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;  byte            1    wreg     unsigned char 
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;  byte            1   28[COMRAM] unsigned char 
  6524 ;; Return value:  Size  Location     Type
  6525 ;;		None               void
  6526 ;; Registers used:
  6527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6533 ;;      Params:         0       0       0       0       0
  6534 ;;      Locals:         1       0       0       0       0
  6535 ;;      Temps:          2       0       0       0       0
  6536 ;;      Totals:         3       0       0       0       0
  6537 ;;Total ram usage:        3 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; Hardware stack levels required when called:    8
  6540 ;; This function calls:
  6541 ;;		_i2c_master_busy
  6542 ;;		i1_ToMainHigh_sendmsg
  6543 ;; This function is called by:
  6544 ;;		_uart_recv_int_handler
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           
  6548                           	psect	text38
  6549  000898                     __ptext38:
  6550                           	opt stack 0
  6551  000898                     _uart_recv_state:
  6552                           	opt stack 16
  6553                           
  6554                           ;incstack = 0
  6555                           ;uart_recv_state@byte stored from wreg
  6556  000898  CFE8 F01D          	movff	wreg,uart_recv_state@byte
  6557                           
  6558                           ;my_uart.c: 16: switch (uc_ptr->state) {
  6559  00089C  D107               	goto	i1l3979
  6560  00089E                     i1l3941:
  6561                           
  6562                           ;my_uart.c: 19: if ( byte == 0x2B) {
  6563  00089E  501D               	movf	uart_recv_state@byte,w,c
  6564  0008A0  0A2B               	xorlw	43
  6565  0008A2  A4D8               	btfss	status,2,c
  6566  0008A4  0012               	return	
  6567                           
  6568                           ;my_uart.c: 21: uc_ptr->state = 53;
  6569  0008A6  EE20 F00B          	lfsr	2,11
  6570  0008AA  5061               	movf	_uc_ptr,w,c
  6571  0008AC  26D9               	addwf	fsr2l,f,c
  6572  0008AE  5062               	movf	_uc_ptr+1,w,c
  6573  0008B0  22DA               	addwfc	fsr2h,f,c
  6574  0008B2  0E35               	movlw	53
  6575  0008B4  6EDF               	movwf	indf2,c
  6576  0008B6  0012               	return	
  6577  0008B8                     i1l3945:
  6578                           
  6579                           ;my_uart.c: 26: if ( byte == 0x9F ) {
  6580  0008B8  501D               	movf	uart_recv_state@byte,w,c
  6581  0008BA  0A9F               	xorlw	159
  6582  0008BC  A4D8               	btfss	status,2,c
  6583  0008BE  D009               	goto	i1l3949
  6584                           
  6585                           ;my_uart.c: 31: uc_ptr->state = 49;
  6586  0008C0  EE20 F00B          	lfsr	2,11
  6587  0008C4  5061               	movf	_uc_ptr,w,c
  6588  0008C6  26D9               	addwf	fsr2l,f,c
  6589  0008C8  5062               	movf	_uc_ptr+1,w,c
  6590  0008CA  22DA               	addwfc	fsr2h,f,c
  6591  0008CC  0E31               	movlw	49
  6592  0008CE  6EDF               	movwf	indf2,c
  6593                           
  6594                           ;my_uart.c: 33: }
  6595  0008D0  0012               	return	
  6596  0008D2                     i1l3949:
  6597                           
  6598                           ;my_uart.c: 34: else {
  6599                           ;my_uart.c: 35: uc_ptr->state = 48;
  6600  0008D2  EE20 F00B          	lfsr	2,11
  6601  0008D6  5061               	movf	_uc_ptr,w,c
  6602  0008D8  26D9               	addwf	fsr2l,f,c
  6603  0008DA  5062               	movf	_uc_ptr+1,w,c
  6604  0008DC  22DA               	addwfc	fsr2h,f,c
  6605  0008DE  0E30               	movlw	48
  6606  0008E0  6EDF               	movwf	indf2,c
  6607  0008E2  0012               	return	
  6608  0008E4                     i1l3951:
  6609                           
  6610                           ;my_uart.c: 40: uc_ptr->buflen = 0;
  6611  0008E4  EE20 F00A          	lfsr	2,10
  6612  0008E8  5061               	movf	_uc_ptr,w,c
  6613  0008EA  26D9               	addwf	fsr2l,f,c
  6614  0008EC  5062               	movf	_uc_ptr+1,w,c
  6615  0008EE  22DA               	addwfc	fsr2h,f,c
  6616  0008F0  0E00               	movlw	0
  6617  0008F2  6EDF               	movwf	indf2,c
  6618                           
  6619                           ;my_uart.c: 41: uc_ptr->data_read = 0;
  6620  0008F4  EE20 F00F          	lfsr	2,15
  6621  0008F8  5061               	movf	_uc_ptr,w,c
  6622  0008FA  26D9               	addwf	fsr2l,f,c
  6623  0008FC  5062               	movf	_uc_ptr+1,w,c
  6624  0008FE  22DA               	addwfc	fsr2h,f,c
  6625  000900  0E00               	movlw	0
  6626  000902  6EDF               	movwf	indf2,c
  6627                           
  6628                           ;my_uart.c: 43: uc_ptr->msgtype = byte;
  6629  000904  EE20 F00C          	lfsr	2,12
  6630  000908  5061               	movf	_uc_ptr,w,c
  6631  00090A  26D9               	addwf	fsr2l,f,c
  6632  00090C  5062               	movf	_uc_ptr+1,w,c
  6633  00090E  22DA               	addwfc	fsr2h,f,c
  6634  000910  C01D  FFDF         	movff	uart_recv_state@byte,indf2
  6635                           
  6636                           ;my_uart.c: 44: uc_ptr->buffer[0] = byte;
  6637  000914  C061  FFD9         	movff	_uc_ptr,fsr2l
  6638  000918  C062  FFDA         	movff	_uc_ptr+1,fsr2h
  6639  00091C  C01D  FFDF         	movff	uart_recv_state@byte,indf2
  6640                           
  6641                           ;my_uart.c: 45: uc_ptr->state = 54;
  6642  000920  EE20 F00B          	lfsr	2,11
  6643  000924  5061               	movf	_uc_ptr,w,c
  6644  000926  26D9               	addwf	fsr2l,f,c
  6645  000928  5062               	movf	_uc_ptr+1,w,c
  6646  00092A  22DA               	addwfc	fsr2h,f,c
  6647  00092C  0E36               	movlw	54
  6648  00092E  6EDF               	movwf	indf2,c
  6649                           
  6650                           ;my_uart.c: 46: break;
  6651  000930  0012               	return	
  6652  000932                     i1l3957:
  6653                           
  6654                           ;my_uart.c: 50: uc_ptr->count = byte;
  6655  000932  EE20 F00E          	lfsr	2,14
  6656  000936  5061               	movf	_uc_ptr,w,c
  6657  000938  26D9               	addwf	fsr2l,f,c
  6658  00093A  5062               	movf	_uc_ptr+1,w,c
  6659  00093C  22DA               	addwfc	fsr2h,f,c
  6660  00093E  C01D  FFDF         	movff	uart_recv_state@byte,indf2
  6661                           
  6662                           ;my_uart.c: 55: uc_ptr->buffer[1] = byte;
  6663  000942  EE20 F001          	lfsr	2,1
  6664  000946  5061               	movf	_uc_ptr,w,c
  6665  000948  26D9               	addwf	fsr2l,f,c
  6666  00094A  5062               	movf	_uc_ptr+1,w,c
  6667  00094C  22DA               	addwfc	fsr2h,f,c
  6668  00094E  C01D  FFDF         	movff	uart_recv_state@byte,indf2
  6669                           
  6670                           ;my_uart.c: 56: uc_ptr->state = 52;
  6671  000952  EE20 F00B          	lfsr	2,11
  6672  000956  5061               	movf	_uc_ptr,w,c
  6673  000958  26D9               	addwf	fsr2l,f,c
  6674  00095A  5062               	movf	_uc_ptr+1,w,c
  6675  00095C  22DA               	addwfc	fsr2h,f,c
  6676  00095E  0E34               	movlw	52
  6677  000960  6EDF               	movwf	indf2,c
  6678                           
  6679                           ;my_uart.c: 58: break;
  6680  000962  0012               	return	
  6681  000964                     i1l3959:
  6682                           
  6683                           ;my_uart.c: 62: uc_ptr->buffer[1] = byte;
  6684  000964  EE20 F001          	lfsr	2,1
  6685  000968  5061               	movf	_uc_ptr,w,c
  6686  00096A  26D9               	addwf	fsr2l,f,c
  6687  00096C  5062               	movf	_uc_ptr+1,w,c
  6688  00096E  22DA               	addwfc	fsr2h,f,c
  6689  000970  C01D  FFDF         	movff	uart_recv_state@byte,indf2
  6690                           
  6691                           ;my_uart.c: 63: uc_ptr->data_length = byte;
  6692  000974  EE20 F00D          	lfsr	2,13
  6693  000978  5061               	movf	_uc_ptr,w,c
  6694  00097A  26D9               	addwf	fsr2l,f,c
  6695  00097C  5062               	movf	_uc_ptr+1,w,c
  6696  00097E  22DA               	addwfc	fsr2h,f,c
  6697  000980  C01D  FFDF         	movff	uart_recv_state@byte,indf2
  6698                           
  6699                           ;my_uart.c: 64: uc_ptr->buflen = 0;
  6700  000984  EE20 F00A          	lfsr	2,10
  6701  000988  5061               	movf	_uc_ptr,w,c
  6702  00098A  26D9               	addwf	fsr2l,f,c
  6703  00098C  5062               	movf	_uc_ptr+1,w,c
  6704  00098E  22DA               	addwfc	fsr2h,f,c
  6705  000990  0E00               	movlw	0
  6706  000992  6EDF               	movwf	indf2,c
  6707                           
  6708                           ;my_uart.c: 65: uc_ptr->data_read = 0;
  6709  000994  EE20 F00F          	lfsr	2,15
  6710  000998  5061               	movf	_uc_ptr,w,c
  6711  00099A  26D9               	addwf	fsr2l,f,c
  6712  00099C  5062               	movf	_uc_ptr+1,w,c
  6713  00099E  22DA               	addwfc	fsr2h,f,c
  6714  0009A0  0E00               	movlw	0
  6715  0009A2  6EDF               	movwf	indf2,c
  6716                           
  6717                           ;my_uart.c: 66: uc_ptr->state = 51;
  6718  0009A4  EE20 F00B          	lfsr	2,11
  6719  0009A8  5061               	movf	_uc_ptr,w,c
  6720  0009AA  26D9               	addwf	fsr2l,f,c
  6721  0009AC  5062               	movf	_uc_ptr+1,w,c
  6722  0009AE  22DA               	addwfc	fsr2h,f,c
  6723  0009B0  0E33               	movlw	51
  6724  0009B2  6EDF               	movwf	indf2,c
  6725                           
  6726                           ;my_uart.c: 67: break;
  6727  0009B4  0012               	return	
  6728  0009B6                     i1l3961:
  6729                           
  6730                           ;my_uart.c: 73: if ( uc_ptr->data_read + 2 < 10 ) {
  6731  0009B6  EE20 F00F          	lfsr	2,15
  6732  0009BA  5061               	movf	_uc_ptr,w,c
  6733  0009BC  26D9               	addwf	fsr2l,f,c
  6734  0009BE  5062               	movf	_uc_ptr+1,w,c
  6735  0009C0  22DA               	addwfc	fsr2h,f,c
  6736  0009C2  50DF               	movf	indf2,w,c
  6737  0009C4  6E1B               	movwf	??_uart_recv_state& (0+255),c
  6738  0009C6  6A1C               	clrf	(??_uart_recv_state+1)& (0+255),c
  6739  0009C8  0E02               	movlw	2
  6740  0009CA  261B               	addwf	??_uart_recv_state,f,c
  6741  0009CC  0E00               	movlw	0
  6742  0009CE  221C               	addwfc	??_uart_recv_state+1,f,c
  6743  0009D0  501C               	movf	??_uart_recv_state+1,w,c
  6744  0009D2  0A80               	xorlw	128
  6745  0009D4  6EF3               	movwf	prodl,c
  6746  0009D6  0E80               	movlw	128
  6747  0009D8  5CF3               	subwf	prodl,w,c
  6748  0009DA  0E0A               	movlw	10
  6749  0009DC  B4D8               	btfsc	status,2,c
  6750  0009DE  5C1B               	subwf	??_uart_recv_state,w,c
  6751  0009E0  B0D8               	btfsc	status,0,c
  6752  0009E2  D015               	goto	i1l99
  6753                           
  6754                           ;my_uart.c: 74: uc_ptr->buffer[uc_ptr->data_read+2] = byte;
  6755  0009E4  EE20 F00F          	lfsr	2,15
  6756  0009E8  5061               	movf	_uc_ptr,w,c
  6757  0009EA  26D9               	addwf	fsr2l,f,c
  6758  0009EC  5062               	movf	_uc_ptr+1,w,c
  6759  0009EE  22DA               	addwfc	fsr2h,f,c
  6760  0009F0  50DF               	movf	indf2,w,c
  6761  0009F2  6E1B               	movwf	??_uart_recv_state& (0+255),c
  6762  0009F4  6A1C               	clrf	(??_uart_recv_state+1)& (0+255),c
  6763  0009F6  0E02               	movlw	2
  6764  0009F8  261B               	addwf	??_uart_recv_state,f,c
  6765  0009FA  0E00               	movlw	0
  6766  0009FC  221C               	addwfc	??_uart_recv_state+1,f,c
  6767  0009FE  501B               	movf	??_uart_recv_state,w,c
  6768  000A00  2461               	addwf	_uc_ptr,w,c
  6769  000A02  6ED9               	movwf	fsr2l,c
  6770  000A04  501C               	movf	??_uart_recv_state+1,w,c
  6771  000A06  2062               	addwfc	_uc_ptr+1,w,c
  6772  000A08  6EDA               	movwf	fsr2h,c
  6773  000A0A  C01D  FFDF         	movff	uart_recv_state@byte,indf2
  6774  000A0E                     i1l99:
  6775                           
  6776                           ;my_uart.c: 75: }
  6777                           ;my_uart.c: 78: uc_ptr->data_read += 1;
  6778  000A0E  EE20 F00F          	lfsr	2,15
  6779  000A12  5061               	movf	_uc_ptr,w,c
  6780  000A14  26D9               	addwf	fsr2l,f,c
  6781  000A16  5062               	movf	_uc_ptr+1,w,c
  6782  000A18  22DA               	addwfc	fsr2h,f,c
  6783  000A1A  2ADF               	incf	indf2,f,c
  6784                           
  6785                           ;my_uart.c: 81: if(9 == uc_ptr->data_read) {
  6786  000A1C  EE20 F00F          	lfsr	2,15
  6787  000A20  5061               	movf	_uc_ptr,w,c
  6788  000A22  26D9               	addwf	fsr2l,f,c
  6789  000A24  5062               	movf	_uc_ptr+1,w,c
  6790  000A26  22DA               	addwfc	fsr2h,f,c
  6791  000A28  0E09               	movlw	9
  6792  000A2A  62DF               	cpfseq	indf2,c
  6793  000A2C  0012               	return	
  6794                           
  6795                           ;my_uart.c: 82: uc_ptr->state = 52;
  6796  000A2E  EE20 F00B          	lfsr	2,11
  6797  000A32  5061               	movf	_uc_ptr,w,c
  6798  000A34  26D9               	addwf	fsr2l,f,c
  6799  000A36  5062               	movf	_uc_ptr+1,w,c
  6800  000A38  22DA               	addwfc	fsr2h,f,c
  6801  000A3A  0E34               	movlw	52
  6802  000A3C  6EDF               	movwf	indf2,c
  6803  000A3E  0012               	return	
  6804  000A40                     i1l3967:
  6805                           
  6806                           ;my_uart.c: 88: if ( byte == 0x5C ) {
  6807  000A40  501D               	movf	uart_recv_state@byte,w,c
  6808  000A42  0A5C               	xorlw	92
  6809  000A44  A4D8               	btfss	status,2,c
  6810  000A46  D019               	goto	i1l3975
  6811                           
  6812                           ;my_uart.c: 90: uc_ptr->state = 48;
  6813  000A48  EE20 F00B          	lfsr	2,11
  6814  000A4C  5061               	movf	_uc_ptr,w,c
  6815  000A4E  26D9               	addwf	fsr2l,f,c
  6816  000A50  5062               	movf	_uc_ptr+1,w,c
  6817  000A52  22DA               	addwfc	fsr2h,f,c
  6818  000A54  0E30               	movlw	48
  6819  000A56  6EDF               	movwf	indf2,c
  6820  000A58                     i1l3971:
  6821  000A58  EC74  F00E         	call	_i2c_master_busy	;wreg free
  6822  000A5C  0900               	iorlw	0
  6823  000A5E  A4D8               	btfss	status,2,c
  6824  000A60  D7FB               	goto	i1l3971
  6825                           
  6826                           ;my_uart.c: 106: ToMainHigh_sendmsg(2, 40, (void *) uc_ptr->buffer);
  6827  000A62  6E1B               	movwf	??_uart_recv_state& (0+255),c
  6828  000A64  0E28               	movlw	40
  6829  000A66  6E17               	movwf	i1ToMainHigh_sendmsg@msgtype,c
  6830  000A68  501B               	movf	??_uart_recv_state& (0+255),w,c
  6831  000A6A  C062  F019         	movff	_uc_ptr+1,i1ToMainHigh_sendmsg@data+1
  6832  000A6E  C061  F018         	movff	_uc_ptr,i1ToMainHigh_sendmsg@data
  6833  000A72  0E02               	movlw	2
  6834  000A74  EC24  F00E         	call	i1_ToMainHigh_sendmsg
  6835                           
  6836                           ;my_uart.c: 108: }
  6837  000A78  D008               	goto	i1l106
  6838  000A7A                     i1l3975:
  6839                           
  6840                           ;my_uart.c: 109: else {
  6841                           ;my_uart.c: 110: uc_ptr->state = 48;
  6842  000A7A  EE20 F00B          	lfsr	2,11
  6843  000A7E  5061               	movf	_uc_ptr,w,c
  6844  000A80  26D9               	addwf	fsr2l,f,c
  6845  000A82  5062               	movf	_uc_ptr+1,w,c
  6846  000A84  22DA               	addwfc	fsr2h,f,c
  6847  000A86  0E30               	movlw	48
  6848  000A88  6EDF               	movwf	indf2,c
  6849  000A8A                     i1l106:
  6850                           
  6851                           ;my_uart.c: 111: }
  6852                           ;my_uart.c: 112: uc_ptr->buflen = 0;
  6853  000A8A  EE20 F00A          	lfsr	2,10
  6854  000A8E  5061               	movf	_uc_ptr,w,c
  6855  000A90  26D9               	addwf	fsr2l,f,c
  6856  000A92  5062               	movf	_uc_ptr+1,w,c
  6857  000A94  22DA               	addwfc	fsr2h,f,c
  6858  000A96  0E00               	movlw	0
  6859  000A98  6EDF               	movwf	indf2,c
  6860                           
  6861                           ;my_uart.c: 113: uc_ptr->data_read = 0;
  6862  000A9A  EE20 F00F          	lfsr	2,15
  6863  000A9E  5061               	movf	_uc_ptr,w,c
  6864  000AA0  26D9               	addwf	fsr2l,f,c
  6865  000AA2  5062               	movf	_uc_ptr+1,w,c
  6866  000AA4  22DA               	addwfc	fsr2h,f,c
  6867  000AA6  0E00               	movlw	0
  6868  000AA8  6EDF               	movwf	indf2,c
  6869                           
  6870                           ;my_uart.c: 114: break;
  6871  000AAA  0012               	return	
  6872  000AAC                     i1l3979:
  6873  000AAC  EE20 F00B          	lfsr	2,11
  6874  000AB0  5061               	movf	_uc_ptr,w,c
  6875  000AB2  26D9               	addwf	fsr2l,f,c
  6876  000AB4  5062               	movf	_uc_ptr+1,w,c
  6877  000AB6  22DA               	addwfc	fsr2h,f,c
  6878  000AB8  50DF               	movf	indf2,w,c
  6879                           
  6880                           ; Switch size 1, requested type "space"
  6881                           ; Number of cases is 7, Range of values is 48 to 54
  6882                           ; switch strategies available:
  6883                           ; Name         Instructions Cycles
  6884                           ; simple_byte           22    12 (average)
  6885                           ;	Chosen strategy is simple_byte
  6886  000ABA  0A30               	xorlw	48	; case 48
  6887  000ABC  B4D8               	btfsc	status,2,c
  6888  000ABE  D6EF               	goto	i1l3941
  6889  000AC0  0A01               	xorlw	1	; case 49
  6890  000AC2  B4D8               	btfsc	status,2,c
  6891  000AC4  D70F               	goto	i1l3951
  6892  000AC6  0A03               	xorlw	3	; case 50
  6893  000AC8  B4D8               	btfsc	status,2,c
  6894  000ACA  D74C               	goto	i1l3959
  6895  000ACC  0A01               	xorlw	1	; case 51
  6896  000ACE  B4D8               	btfsc	status,2,c
  6897  000AD0  D772               	goto	i1l3961
  6898  000AD2  0A07               	xorlw	7	; case 52
  6899  000AD4  B4D8               	btfsc	status,2,c
  6900  000AD6  D7B4               	goto	i1l3967
  6901  000AD8  0A01               	xorlw	1	; case 53
  6902  000ADA  B4D8               	btfsc	status,2,c
  6903  000ADC  D6ED               	goto	i1l3945
  6904  000ADE  0A03               	xorlw	3	; case 54
  6905  000AE0  A4D8               	btfss	status,2,c
  6906  000AE2  0012               	return	
  6907  000AE4  D726               	goto	i1l3957
  6908  000AE6                     __end_of_uart_recv_state:
  6909                           	opt stack 0
  6910                           pclatu	equ	0xFFB
  6911                           pclath	equ	0xFFA
  6912                           tblptru	equ	0xFF8
  6913                           tblptrh	equ	0xFF7
  6914                           tblptrl	equ	0xFF6
  6915                           tablat	equ	0xFF5
  6916                           prodh	equ	0xFF4
  6917                           prodl	equ	0xFF3
  6918                           intcon	equ	0xFF2
  6919                           intcon2	equ	0xFF1
  6920                           postinc0	equ	0xFEE
  6921                           fsr0h	equ	0xFEA
  6922                           fsr0l	equ	0xFE9
  6923                           wreg	equ	0xFE8
  6924                           indf1	equ	0xFE7
  6925                           postdec1	equ	0xFE5
  6926                           fsr1h	equ	0xFE2
  6927                           fsr1l	equ	0xFE1
  6928                           bsr	equ	0xFE0
  6929                           indf2	equ	0xFDF
  6930                           postinc2	equ	0xFDE
  6931                           postdec2	equ	0xFDD
  6932                           fsr2h	equ	0xFDA
  6933                           fsr2l	equ	0xFD9
  6934                           status	equ	0xFD8
  6935                           
  6936 ;; *************** function i1_ToMainHigh_sendmsg *****************
  6937 ;; Defined at:
  6938 ;;		line 131 in file "../src/messages.c"
  6939 ;; Parameters:    Size  Location     Type
  6940 ;;  length          1    wreg     unsigned char 
  6941 ;;  msgtype         1   22[COMRAM] unsigned char 
  6942 ;;  data            2   23[COMRAM] PTR void 
  6943 ;;		 -> main@msgbuffer(11), main@uc(28), i2c_int_handler@error_buf(3), NULL(0), 
  6944 ;; Auto vars:     Size  Location     Type
  6945 ;;  length          1   25[COMRAM] unsigned char 
  6946 ;; Return value:  Size  Location     Type
  6947 ;;                  1    wreg      char 
  6948 ;; Registers used:
  6949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6950 ;; Tracked objects:
  6951 ;;		On entry : 0/0
  6952 ;;		On exit  : 0/0
  6953 ;;		Unchanged: 0/0
  6954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6955 ;;      Params:         3       0       0       0       0
  6956 ;;      Locals:         1       0       0       0       0
  6957 ;;      Temps:          0       0       0       0       0
  6958 ;;      Totals:         4       0       0       0       0
  6959 ;;Total ram usage:        4 bytes
  6960 ;; Hardware stack levels used:    1
  6961 ;; Hardware stack levels required when called:    7
  6962 ;; This function calls:
  6963 ;;		i1_send_msg
  6964 ;; This function is called by:
  6965 ;;		_uart_recv_state
  6966 ;; This function uses a non-reentrant model
  6967 ;;
  6968                           
  6969                           	psect	text39
  6970  001C48                     __ptext39:
  6971                           	opt stack 0
  6972  001C48                     i1_ToMainHigh_sendmsg:
  6973                           	opt stack 16
  6974                           
  6975                           ;incstack = 0
  6976                           ;i1ToMainHigh_sendmsg@length stored from wreg
  6977  001C48  CFE8 F01A          	movff	wreg,i1ToMainHigh_sendmsg@length
  6978                           
  6979                           ;messages.c: 137: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  6980                           ;	Return value of i1_ToMainHigh_sendmsg is never used
  6981  001C4C  0101               	movlb	1	; () banked
  6982  001C4E  0E01               	movlw	high _ToMainHigh_MQ
  6983  001C50  6E0C               	movwf	i1send_msg@qptr+1,c
  6984  001C52  0101               	movlb	1	; () banked
  6985  001C54  0E16               	movlw	low _ToMainHigh_MQ
  6986  001C56  6E0B               	movwf	i1send_msg@qptr,c
  6987  001C58  C01A  F00D         	movff	i1ToMainHigh_sendmsg@length,i1send_msg@length
  6988  001C5C  C017  F00E         	movff	i1ToMainHigh_sendmsg@msgtype,i1send_msg@msgtype
  6989  001C60  C019  F010         	movff	i1ToMainHigh_sendmsg@data+1,i1send_msg@data+1
  6990  001C64  C018  F00F         	movff	i1ToMainHigh_sendmsg@data,i1send_msg@data
  6991  001C68  EC84  F008         	call	i1_send_msg	;wreg free
  6992  001C6C  0012               	return	
  6993  001C6E                     __end_ofi1_ToMainHigh_sendmsg:
  6994                           	opt stack 0
  6995                           pclatu	equ	0xFFB
  6996                           pclath	equ	0xFFA
  6997                           tblptru	equ	0xFF8
  6998                           tblptrh	equ	0xFF7
  6999                           tblptrl	equ	0xFF6
  7000                           tablat	equ	0xFF5
  7001                           prodh	equ	0xFF4
  7002                           prodl	equ	0xFF3
  7003                           intcon	equ	0xFF2
  7004                           intcon2	equ	0xFF1
  7005                           postinc0	equ	0xFEE
  7006                           fsr0h	equ	0xFEA
  7007                           fsr0l	equ	0xFE9
  7008                           wreg	equ	0xFE8
  7009                           indf1	equ	0xFE7
  7010                           postdec1	equ	0xFE5
  7011                           fsr1h	equ	0xFE2
  7012                           fsr1l	equ	0xFE1
  7013                           bsr	equ	0xFE0
  7014                           indf2	equ	0xFDF
  7015                           postinc2	equ	0xFDE
  7016                           postdec2	equ	0xFDD
  7017                           fsr2h	equ	0xFDA
  7018                           fsr2l	equ	0xFD9
  7019                           status	equ	0xFD8
  7020                           
  7021 ;; *************** function i1_send_msg *****************
  7022 ;; Defined at:
  7023 ;;		line 29 in file "../src/messages.c"
  7024 ;; Parameters:    Size  Location     Type
  7025 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  7026 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7027 ;;  length          1   12[COMRAM] unsigned char 
  7028 ;;  msgtype         1   13[COMRAM] unsigned char 
  7029 ;;  data            2   14[COMRAM] PTR void 
  7030 ;;		 -> main@msgbuffer(11), main@t0thread_data(2), main@t1thread_data(2), main@uc(28), 
  7031 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), 
  7032 ;; Auto vars:     Size  Location     Type
  7033 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  7034 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7035 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7036 ;;  send_msg        2   17[COMRAM] unsigned int 
  7037 ;;  send_msg        1   19[COMRAM] unsigned char 
  7038 ;; Return value:  Size  Location     Type
  7039 ;;                  1    wreg      char 
  7040 ;; Registers used:
  7041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7042 ;; Tracked objects:
  7043 ;;		On entry : 0/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7047 ;;      Params:         6       0       0       0       0
  7048 ;;      Locals:         5       0       0       0       0
  7049 ;;      Temps:          1       0       0       0       0
  7050 ;;      Totals:        12       0       0       0       0
  7051 ;;Total ram usage:       12 bytes
  7052 ;; Hardware stack levels used:    1
  7053 ;; Hardware stack levels required when called:    6
  7054 ;; This function calls:
  7055 ;;		i1_memcpy
  7056 ;; This function is called by:
  7057 ;;		i1_ToMainLow_sendmsg
  7058 ;;		i1_ToMainHigh_sendmsg
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           	psect	text40
  7063  001108                     __ptext40:
  7064                           	opt stack 0
  7065  001108                     i1_send_msg:
  7066                           	opt stack 17
  7067                           
  7068                           ;messages.c: 30: unsigned char slot;
  7069                           ;messages.c: 32: msg *qmsg;
  7070                           ;messages.c: 33: size_t tlength = length;
  7071                           
  7072                           ;incstack = 0
  7073  001108  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  7074  00110C  6A13               	clrf	i1send_msg@tlength+1,c
  7075                           
  7076                           ;messages.c: 43: slot = qptr->cur_write_ind;
  7077  00110E  EE20 F034          	lfsr	2,52
  7078  001112  500B               	movf	i1send_msg@qptr,w,c
  7079  001114  26D9               	addwf	fsr2l,f,c
  7080  001116  500C               	movf	i1send_msg@qptr+1,w,c
  7081  001118  22DA               	addwfc	fsr2h,f,c
  7082  00111A  50DF               	movf	indf2,w,c
  7083  00111C  6E14               	movwf	i1send_msg@slot,c
  7084                           
  7085                           ;messages.c: 44: qmsg = &(qptr->queue[slot]);
  7086  00111E  5014               	movf	i1send_msg@slot,w,c
  7087  001120  0D0D               	mullw	13
  7088  001122  50F3               	movf	prodl,w,c
  7089  001124  240B               	addwf	i1send_msg@qptr,w,c
  7090  001126  6E15               	movwf	i1send_msg@qmsg,c
  7091  001128  50F4               	movf	prodh,w,c
  7092  00112A  200C               	addwfc	i1send_msg@qptr+1,w,c
  7093  00112C  6E16               	movwf	i1send_msg@qmsg+1,c
  7094                           
  7095                           ;messages.c: 46: if (qmsg->full != 0) {
  7096  00112E  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  7097  001132  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  7098  001136  50DF               	movf	indf2,w,c
  7099  001138  B4D8               	btfsc	status,2,c
  7100  00113A  D002               	goto	i1l3919
  7101                           
  7102                           ;messages.c: 47: return (-1);
  7103  00113C  0EFF               	movlw	255
  7104  00113E  0012               	return	
  7105  001140                     i1l3919:
  7106                           
  7107                           ;messages.c: 48: }
  7108                           ;messages.c: 51: qmsg->length = length;
  7109  001140  EE20 F001          	lfsr	2,1
  7110  001144  5015               	movf	i1send_msg@qmsg,w,c
  7111  001146  26D9               	addwf	fsr2l,f,c
  7112  001148  5016               	movf	i1send_msg@qmsg+1,w,c
  7113  00114A  22DA               	addwfc	fsr2h,f,c
  7114  00114C  C00D  FFDF         	movff	i1send_msg@length,indf2
  7115                           
  7116                           ;messages.c: 52: qmsg->msgtype = msgtype;
  7117  001150  EE20 F002          	lfsr	2,2
  7118  001154  5015               	movf	i1send_msg@qmsg,w,c
  7119  001156  26D9               	addwf	fsr2l,f,c
  7120  001158  5016               	movf	i1send_msg@qmsg+1,w,c
  7121  00115A  22DA               	addwfc	fsr2h,f,c
  7122  00115C  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  7123                           
  7124                           ;messages.c: 60: memcpy(qmsg->data, data, tlength);
  7125  001160  0E03               	movlw	3
  7126  001162  2415               	addwf	i1send_msg@qmsg,w,c
  7127  001164  6E01               	movwf	i1memcpy@d1,c
  7128  001166  0E00               	movlw	0
  7129  001168  2016               	addwfc	i1send_msg@qmsg+1,w,c
  7130  00116A  6E02               	movwf	i1memcpy@d1+1,c
  7131  00116C  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  7132  001170  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  7133  001174  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  7134  001178  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  7135  00117C  ECEB  F00C         	call	i1_memcpy	;wreg free
  7136                           
  7137                           ;messages.c: 61: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7138  001180  EE20 F034          	lfsr	2,52
  7139  001184  500B               	movf	i1send_msg@qptr,w,c
  7140  001186  26D9               	addwf	fsr2l,f,c
  7141  001188  500C               	movf	i1send_msg@qptr+1,w,c
  7142  00118A  22DA               	addwfc	fsr2h,f,c
  7143  00118C  EE10 F034          	lfsr	1,52
  7144  001190  500B               	movf	i1send_msg@qptr,w,c
  7145  001192  26E1               	addwf	fsr1l,f,c
  7146  001194  500C               	movf	i1send_msg@qptr+1,w,c
  7147  001196  22E2               	addwfc	fsr1h,f,c
  7148  001198  50E7               	movf	indf1,w,c
  7149  00119A  6E11               	movwf	??i1_send_msg& (0+255),c
  7150  00119C  2811               	incf	??i1_send_msg,w,c
  7151  00119E  0B03               	andlw	3
  7152  0011A0  6EDF               	movwf	indf2,c
  7153                           
  7154                           ;messages.c: 64: qmsg->full = 1;
  7155  0011A2  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  7156  0011A6  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  7157  0011AA  0E01               	movlw	1
  7158  0011AC  6EDF               	movwf	indf2,c
  7159                           
  7160                           ;messages.c: 65: return (1);
  7161  0011AE  0E01               	movlw	1
  7162  0011B0  0012               	return	
  7163  0011B2                     __end_ofi1_send_msg:
  7164                           	opt stack 0
  7165                           pclatu	equ	0xFFB
  7166                           pclath	equ	0xFFA
  7167                           tblptru	equ	0xFF8
  7168                           tblptrh	equ	0xFF7
  7169                           tblptrl	equ	0xFF6
  7170                           tablat	equ	0xFF5
  7171                           prodh	equ	0xFF4
  7172                           prodl	equ	0xFF3
  7173                           intcon	equ	0xFF2
  7174                           intcon2	equ	0xFF1
  7175                           postinc0	equ	0xFEE
  7176                           fsr0h	equ	0xFEA
  7177                           fsr0l	equ	0xFE9
  7178                           wreg	equ	0xFE8
  7179                           indf1	equ	0xFE7
  7180                           postdec1	equ	0xFE5
  7181                           fsr1h	equ	0xFE2
  7182                           fsr1l	equ	0xFE1
  7183                           bsr	equ	0xFE0
  7184                           indf2	equ	0xFDF
  7185                           postinc2	equ	0xFDE
  7186                           postdec2	equ	0xFDD
  7187                           fsr2h	equ	0xFDA
  7188                           fsr2l	equ	0xFD9
  7189                           status	equ	0xFD8
  7190                           
  7191 ;; *************** function i1_memcpy *****************
  7192 ;; Defined at:
  7193 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  7194 ;; Parameters:    Size  Location     Type
  7195 ;;  d1              2    0[COMRAM] PTR void 
  7196 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7197 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7198 ;;		 -> ToMainLow_MQ(54), NULL(0), 
  7199 ;;  s1              2    2[COMRAM] PTR const void 
  7200 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7201 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7202 ;;		 -> main@msgbuffer(11), main@t0thread_data(2), main@t1thread_data(2), main@uc(28), 
  7203 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7204 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), 
  7205 ;;  n               2    4[COMRAM] unsigned int 
  7206 ;; Auto vars:     Size  Location     Type
  7207 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  7208 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7209 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7210 ;;		 -> main@msgbuffer(11), main@t0thread_data(2), main@t1thread_data(2), main@uc(28), 
  7211 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7212 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), 
  7213 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  7214 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7215 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7216 ;;		 -> ToMainLow_MQ(54), NULL(0), 
  7217 ;; Return value:  Size  Location     Type
  7218 ;;                  2    0[COMRAM] PTR void 
  7219 ;; Registers used:
  7220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7221 ;; Tracked objects:
  7222 ;;		On entry : 0/0
  7223 ;;		On exit  : 0/0
  7224 ;;		Unchanged: 0/0
  7225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7226 ;;      Params:         6       0       0       0       0
  7227 ;;      Locals:         4       0       0       0       0
  7228 ;;      Temps:          0       0       0       0       0
  7229 ;;      Totals:        10       0       0       0       0
  7230 ;;Total ram usage:       10 bytes
  7231 ;; Hardware stack levels used:    1
  7232 ;; Hardware stack levels required when called:    5
  7233 ;; This function calls:
  7234 ;;		Nothing
  7235 ;; This function is called by:
  7236 ;;		i1_send_msg
  7237 ;; This function uses a non-reentrant model
  7238 ;;
  7239                           
  7240                           	psect	text41
  7241  0019D6                     __ptext41:
  7242                           	opt stack 0
  7243  0019D6                     i1_memcpy:
  7244                           	opt stack 17
  7245                           
  7246                           ;incstack = 0
  7247  0019D6  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  7248  0019DA  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  7249  0019DE  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  7250  0019E2  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  7251  0019E6  D00E               	goto	i1l3885
  7252  0019E8                     i1l3879:
  7253  0019E8  C009  FFD9         	movff	i1memcpy@s,fsr2l
  7254  0019EC  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  7255  0019F0  C007  FFE1         	movff	i1memcpy@d,fsr1l
  7256  0019F4  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  7257  0019F8  CFDF FFE7          	movff	indf2,indf1
  7258  0019FC  4A09               	infsnz	i1memcpy@s,f,c
  7259  0019FE  2A0A               	incf	i1memcpy@s+1,f,c
  7260  001A00  4A07               	infsnz	i1memcpy@d,f,c
  7261  001A02  2A08               	incf	i1memcpy@d+1,f,c
  7262  001A04                     i1l3885:
  7263  001A04  0605               	decf	i1memcpy@n,f,c
  7264  001A06  A0D8               	btfss	status,0,c
  7265  001A08  0606               	decf	i1memcpy@n+1,f,c
  7266  001A0A  2805               	incf	i1memcpy@n& (0+255),w,c
  7267  001A0C  B4D8               	btfsc	status,2,c
  7268  001A0E  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  7269  001A10  B4D8               	btfsc	status,2,c
  7270                           
  7271                           ;	Return value of i1_memcpy is never used
  7272  001A12  0012               	return	
  7273  001A14  D7E9               	goto	i1l3879
  7274  001A16                     __end_ofi1_memcpy:
  7275                           	opt stack 0
  7276                           pclatu	equ	0xFFB
  7277                           pclath	equ	0xFFA
  7278                           tblptru	equ	0xFF8
  7279                           tblptrh	equ	0xFF7
  7280                           tblptrl	equ	0xFF6
  7281                           tablat	equ	0xFF5
  7282                           prodh	equ	0xFF4
  7283                           prodl	equ	0xFF3
  7284                           intcon	equ	0xFF2
  7285                           intcon2	equ	0xFF1
  7286                           postinc0	equ	0xFEE
  7287                           fsr0h	equ	0xFEA
  7288                           fsr0l	equ	0xFE9
  7289                           wreg	equ	0xFE8
  7290                           indf1	equ	0xFE7
  7291                           postdec1	equ	0xFE5
  7292                           fsr1h	equ	0xFE2
  7293                           fsr1l	equ	0xFE1
  7294                           bsr	equ	0xFE0
  7295                           indf2	equ	0xFDF
  7296                           postinc2	equ	0xFDE
  7297                           postdec2	equ	0xFDD
  7298                           fsr2h	equ	0xFDA
  7299                           fsr2l	equ	0xFD9
  7300                           status	equ	0xFD8
  7301                           
  7302 ;; *************** function _i2c_master_busy *****************
  7303 ;; Defined at:
  7304 ;;		line 525 in file "../src/my_i2c_master.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;		None
  7307 ;; Auto vars:     Size  Location     Type
  7308 ;;		None
  7309 ;; Return value:  Size  Location     Type
  7310 ;;                  1    wreg      unsigned char 
  7311 ;; Registers used:
  7312 ;;		wreg, fsr2l, fsr2h, status,2
  7313 ;; Tracked objects:
  7314 ;;		On entry : 0/0
  7315 ;;		On exit  : 0/0
  7316 ;;		Unchanged: 0/0
  7317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7318 ;;      Params:         0       0       0       0       0
  7319 ;;      Locals:         0       0       0       0       0
  7320 ;;      Temps:          0       0       0       0       0
  7321 ;;      Totals:         0       0       0       0       0
  7322 ;;Total ram usage:        0 bytes
  7323 ;; Hardware stack levels used:    1
  7324 ;; Hardware stack levels required when called:    5
  7325 ;; This function calls:
  7326 ;;		Nothing
  7327 ;; This function is called by:
  7328 ;;		_uart_recv_state
  7329 ;; This function uses a non-reentrant model
  7330 ;;
  7331                           
  7332                           	psect	text42
  7333  001CE8                     __ptext42:
  7334                           	opt stack 0
  7335  001CE8                     _i2c_master_busy:
  7336                           	opt stack 18
  7337                           
  7338                           ;my_i2c_master.c: 526: if( ic_ptr->state == IDLE ) {
  7339                           
  7340                           ;incstack = 0
  7341  001CE8  C0DA  FFD9         	movff	my_i2c_master@ic_ptr,fsr2l
  7342  001CEC  C0DB  FFDA         	movff	my_i2c_master@ic_ptr+1,fsr2h
  7343  001CF0  50DF               	movf	indf2,w,c
  7344  001CF2  A4D8               	btfss	status,2,c
  7345  001CF4  D002               	goto	i1l2933
  7346                           
  7347                           ;my_i2c_master.c: 527: return 0;
  7348  001CF6  0E00               	movlw	0
  7349  001CF8  0012               	return	
  7350  001CFA                     i1l2933:
  7351                           
  7352                           ;my_i2c_master.c: 529: else {
  7353                           ;my_i2c_master.c: 530: return 1;
  7354  001CFA  0E01               	movlw	1
  7355  001CFC  0012               	return	
  7356  001CFE                     __end_of_i2c_master_busy:
  7357                           	opt stack 0
  7358                           pclatu	equ	0xFFB
  7359                           pclath	equ	0xFFA
  7360                           tblptru	equ	0xFF8
  7361                           tblptrh	equ	0xFF7
  7362                           tblptrl	equ	0xFF6
  7363                           tablat	equ	0xFF5
  7364                           prodh	equ	0xFF4
  7365                           prodl	equ	0xFF3
  7366                           intcon	equ	0xFF2
  7367                           intcon2	equ	0xFF1
  7368                           postinc0	equ	0xFEE
  7369                           fsr0h	equ	0xFEA
  7370                           fsr0l	equ	0xFE9
  7371                           wreg	equ	0xFE8
  7372                           indf1	equ	0xFE7
  7373                           postdec1	equ	0xFE5
  7374                           fsr1h	equ	0xFE2
  7375                           fsr1l	equ	0xFE1
  7376                           bsr	equ	0xFE0
  7377                           indf2	equ	0xFDF
  7378                           postinc2	equ	0xFDE
  7379                           postdec2	equ	0xFDD
  7380                           fsr2h	equ	0xFDA
  7381                           fsr2l	equ	0xFD9
  7382                           status	equ	0xFD8
  7383                           
  7384 ;; *************** function _ReadUSART *****************
  7385 ;; Defined at:
  7386 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uread.c"
  7387 ;; Parameters:    Size  Location     Type
  7388 ;;		None
  7389 ;; Auto vars:     Size  Location     Type
  7390 ;;  data            1    0[COMRAM] unsigned char 
  7391 ;; Return value:  Size  Location     Type
  7392 ;;                  1    wreg      unsigned char 
  7393 ;; Registers used:
  7394 ;;		wreg, status,2, status,0
  7395 ;; Tracked objects:
  7396 ;;		On entry : 0/0
  7397 ;;		On exit  : 0/0
  7398 ;;		Unchanged: 0/0
  7399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7400 ;;      Params:         0       0       0       0       0
  7401 ;;      Locals:         1       0       0       0       0
  7402 ;;      Temps:          0       0       0       0       0
  7403 ;;      Totals:         1       0       0       0       0
  7404 ;;Total ram usage:        1 bytes
  7405 ;; Hardware stack levels used:    1
  7406 ;; Hardware stack levels required when called:    5
  7407 ;; This function calls:
  7408 ;;		Nothing
  7409 ;; This function is called by:
  7410 ;;		_uart_recv_int_handler
  7411 ;; This function uses a non-reentrant model
  7412 ;;
  7413                           
  7414                           	psect	text43
  7415  001CB4                     __ptext43:
  7416                           	opt stack 0
  7417  001CB4                     _ReadUSART:
  7418                           	opt stack 19
  7419                           
  7420                           ;incstack = 0
  7421  001CB4  0EF2               	movlw	242
  7422  001CB6  163C               	andwf	_USART_Status,f,c
  7423  001CB8  ACAB               	btfss	4011,6,c	;volatile
  7424  001CBA  D003               	goto	i1l839
  7425  001CBC  903C               	bcf	_USART_Status,0,c
  7426  001CBE  B0AB               	btfsc	4011,0,c	;volatile
  7427  001CC0  803C               	bsf	_USART_Status,0,c
  7428  001CC2                     i1l839:
  7429  001CC2  B4AB               	btfsc	4011,2,c	;volatile
  7430  001CC4  843C               	bsf	_USART_Status,2,c
  7431  001CC6  B2AB               	btfsc	4011,1,c	;volatile
  7432  001CC8  863C               	bsf	_USART_Status,3,c
  7433  001CCA  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  7434  001CCE  5001               	movf	ReadUSART@data,w,c
  7435  001CD0  0012               	return	
  7436  001CD2                     __end_of_ReadUSART:
  7437                           	opt stack 0
  7438                           pclatu	equ	0xFFB
  7439                           pclath	equ	0xFFA
  7440                           tblptru	equ	0xFF8
  7441                           tblptrh	equ	0xFF7
  7442                           tblptrl	equ	0xFF6
  7443                           tablat	equ	0xFF5
  7444                           prodh	equ	0xFF4
  7445                           prodl	equ	0xFF3
  7446                           intcon	equ	0xFF2
  7447                           intcon2	equ	0xFF1
  7448                           postinc0	equ	0xFEE
  7449                           fsr0h	equ	0xFEA
  7450                           fsr0l	equ	0xFE9
  7451                           wreg	equ	0xFE8
  7452                           indf1	equ	0xFE7
  7453                           postdec1	equ	0xFE5
  7454                           fsr1h	equ	0xFE2
  7455                           fsr1l	equ	0xFE1
  7456                           bsr	equ	0xFE0
  7457                           indf2	equ	0xFDF
  7458                           postinc2	equ	0xFDE
  7459                           postdec2	equ	0xFDD
  7460                           fsr2h	equ	0xFDA
  7461                           fsr2l	equ	0xFD9
  7462                           status	equ	0xFD8
  7463                           
  7464 ;; *************** function _timer1_int_handler *****************
  7465 ;; Defined at:
  7466 ;;		line 42 in file "../src/user_interrupts.c"
  7467 ;; Parameters:    Size  Location     Type
  7468 ;;		None
  7469 ;; Auto vars:     Size  Location     Type
  7470 ;;  result          2    5[COMRAM] unsigned int 
  7471 ;; Return value:  Size  Location     Type
  7472 ;;		None               void
  7473 ;; Registers used:
  7474 ;;		wreg, status,2, status,0, cstack
  7475 ;; Tracked objects:
  7476 ;;		On entry : 0/0
  7477 ;;		On exit  : 0/0
  7478 ;;		Unchanged: 0/0
  7479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7480 ;;      Params:         0       0       0       0       0
  7481 ;;      Locals:         2       0       0       0       0
  7482 ;;      Temps:          1       0       0       0       0
  7483 ;;      Totals:         3       0       0       0       0
  7484 ;;Total ram usage:        3 bytes
  7485 ;; Hardware stack levels used:    1
  7486 ;; Hardware stack levels required when called:    6
  7487 ;; This function calls:
  7488 ;;		_ReadTimer1
  7489 ;;		_WriteTimer1
  7490 ;; This function is called by:
  7491 ;;		_InterruptHandlerLow
  7492 ;; This function uses a non-reentrant model
  7493 ;;
  7494                           
  7495                           	psect	text44
  7496  001B98                     __ptext44:
  7497                           	opt stack 0
  7498  001B98                     _timer1_int_handler:
  7499                           	opt stack 19
  7500                           
  7501                           ;user_interrupts.c: 43: unsigned int result;
  7502                           ;user_interrupts.c: 46: LATBbits.LATB7 = !LATBbits.LATB7;
  7503                           
  7504                           ;incstack = 0
  7505  001B98  BE8A               	btfsc	3978,7,c	;volatile
  7506  001B9A  D002               	goto	i1u140_20
  7507  001B9C  0E01               	movlw	1
  7508  001B9E  D001               	goto	i1u140_26
  7509  001BA0                     i1u140_20:
  7510  001BA0  0E00               	movlw	0
  7511  001BA2                     i1u140_26:
  7512  001BA2  6E05               	movwf	??_timer1_int_handler& (0+255),c
  7513  001BA4  3205               	rrcf	??_timer1_int_handler,f,c
  7514  001BA6  3205               	rrcf	??_timer1_int_handler,f,c
  7515  001BA8  508A               	movf	3978,w,c	;volatile
  7516  001BAA  1805               	xorwf	??_timer1_int_handler,w,c
  7517  001BAC  0B7F               	andlw	-129
  7518  001BAE  1805               	xorwf	??_timer1_int_handler,w,c
  7519  001BB0  6E8A               	movwf	3978,c	;volatile
  7520                           
  7521                           ;user_interrupts.c: 47: result = ReadTimer1();
  7522  001BB2  ECAD  F00E         	call	_ReadTimer1	;wreg free
  7523  001BB6  C001  F006         	movff	?_ReadTimer1,timer1_int_handler@result
  7524  001BBA  C002  F007         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  7525                           
  7526                           ;user_interrupts.c: 57: WriteTimer1(0);
  7527  001BBE  0E00               	movlw	0
  7528  001BC0  6E02               	movwf	WriteTimer1@timer1+1,c
  7529  001BC2  0E00               	movlw	0
  7530  001BC4  6E01               	movwf	WriteTimer1@timer1,c
  7531  001BC6  ECA4  F00E         	call	_WriteTimer1	;wreg free
  7532  001BCA  0012               	return	
  7533  001BCC                     __end_of_timer1_int_handler:
  7534                           	opt stack 0
  7535                           pclatu	equ	0xFFB
  7536                           pclath	equ	0xFFA
  7537                           tblptru	equ	0xFF8
  7538                           tblptrh	equ	0xFF7
  7539                           tblptrl	equ	0xFF6
  7540                           tablat	equ	0xFF5
  7541                           prodh	equ	0xFF4
  7542                           prodl	equ	0xFF3
  7543                           intcon	equ	0xFF2
  7544                           intcon2	equ	0xFF1
  7545                           postinc0	equ	0xFEE
  7546                           fsr0h	equ	0xFEA
  7547                           fsr0l	equ	0xFE9
  7548                           wreg	equ	0xFE8
  7549                           indf1	equ	0xFE7
  7550                           postdec1	equ	0xFE5
  7551                           fsr1h	equ	0xFE2
  7552                           fsr1l	equ	0xFE1
  7553                           bsr	equ	0xFE0
  7554                           indf2	equ	0xFDF
  7555                           postinc2	equ	0xFDE
  7556                           postdec2	equ	0xFDD
  7557                           fsr2h	equ	0xFDA
  7558                           fsr2l	equ	0xFD9
  7559                           status	equ	0xFD8
  7560                           
  7561 ;; *************** function _WriteTimer1 *****************
  7562 ;; Defined at:
  7563 ;;		line 14 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1write.c"
  7564 ;; Parameters:    Size  Location     Type
  7565 ;;  timer1          2    0[COMRAM] unsigned int 
  7566 ;; Auto vars:     Size  Location     Type
  7567 ;;  timer           2    2[COMRAM] struct Timers
  7568 ;; Return value:  Size  Location     Type
  7569 ;;		None               void
  7570 ;; Registers used:
  7571 ;;		None
  7572 ;; Tracked objects:
  7573 ;;		On entry : 0/0
  7574 ;;		On exit  : 0/0
  7575 ;;		Unchanged: 0/0
  7576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7577 ;;      Params:         2       0       0       0       0
  7578 ;;      Locals:         2       0       0       0       0
  7579 ;;      Temps:          0       0       0       0       0
  7580 ;;      Totals:         4       0       0       0       0
  7581 ;;Total ram usage:        4 bytes
  7582 ;; Hardware stack levels used:    1
  7583 ;; Hardware stack levels required when called:    5
  7584 ;; This function calls:
  7585 ;;		Nothing
  7586 ;; This function is called by:
  7587 ;;		_timer1_int_handler
  7588 ;; This function uses a non-reentrant model
  7589 ;;
  7590                           
  7591                           	psect	text45
  7592  001D48                     __ptext45:
  7593                           	opt stack 0
  7594  001D48                     _WriteTimer1:
  7595                           	opt stack 19
  7596                           
  7597                           ;incstack = 0
  7598  001D48  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  7599  001D4C  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  7600  001D50  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  7601  001D54  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  7602  001D58  0012               	return	
  7603  001D5A                     __end_of_WriteTimer1:
  7604                           	opt stack 0
  7605                           pclatu	equ	0xFFB
  7606                           pclath	equ	0xFFA
  7607                           tblptru	equ	0xFF8
  7608                           tblptrh	equ	0xFF7
  7609                           tblptrl	equ	0xFF6
  7610                           tablat	equ	0xFF5
  7611                           prodh	equ	0xFF4
  7612                           prodl	equ	0xFF3
  7613                           intcon	equ	0xFF2
  7614                           intcon2	equ	0xFF1
  7615                           postinc0	equ	0xFEE
  7616                           fsr0h	equ	0xFEA
  7617                           fsr0l	equ	0xFE9
  7618                           wreg	equ	0xFE8
  7619                           indf1	equ	0xFE7
  7620                           postdec1	equ	0xFE5
  7621                           fsr1h	equ	0xFE2
  7622                           fsr1l	equ	0xFE1
  7623                           bsr	equ	0xFE0
  7624                           indf2	equ	0xFDF
  7625                           postinc2	equ	0xFDE
  7626                           postdec2	equ	0xFDD
  7627                           fsr2h	equ	0xFDA
  7628                           fsr2l	equ	0xFD9
  7629                           status	equ	0xFD8
  7630                           
  7631 ;; *************** function _ReadTimer1 *****************
  7632 ;; Defined at:
  7633 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1read.c"
  7634 ;; Parameters:    Size  Location     Type
  7635 ;;		None
  7636 ;; Auto vars:     Size  Location     Type
  7637 ;;  timer           2    2[COMRAM] struct Timers
  7638 ;; Return value:  Size  Location     Type
  7639 ;;                  2    0[COMRAM] unsigned int 
  7640 ;; Registers used:
  7641 ;;		None
  7642 ;; Tracked objects:
  7643 ;;		On entry : 0/0
  7644 ;;		On exit  : 0/0
  7645 ;;		Unchanged: 0/0
  7646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7647 ;;      Params:         2       0       0       0       0
  7648 ;;      Locals:         2       0       0       0       0
  7649 ;;      Temps:          0       0       0       0       0
  7650 ;;      Totals:         4       0       0       0       0
  7651 ;;Total ram usage:        4 bytes
  7652 ;; Hardware stack levels used:    1
  7653 ;; Hardware stack levels required when called:    5
  7654 ;; This function calls:
  7655 ;;		Nothing
  7656 ;; This function is called by:
  7657 ;;		_timer1_int_handler
  7658 ;; This function uses a non-reentrant model
  7659 ;;
  7660                           
  7661                           	psect	text46
  7662  001D5A                     __ptext46:
  7663                           	opt stack 0
  7664  001D5A                     _ReadTimer1:
  7665                           	opt stack 19
  7666                           
  7667                           ;incstack = 0
  7668  001D5A  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  7669  001D5E  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  7670  001D62  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  7671  001D66  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  7672  001D6A  0012               	return	
  7673  001D6C                     __end_of_ReadTimer1:
  7674                           	opt stack 0
  7675                           pclatu	equ	0xFFB
  7676                           pclath	equ	0xFFA
  7677                           tblptru	equ	0xFF8
  7678                           tblptrh	equ	0xFF7
  7679                           tblptrl	equ	0xFF6
  7680                           tablat	equ	0xFF5
  7681                           prodh	equ	0xFF4
  7682                           prodl	equ	0xFF3
  7683                           intcon	equ	0xFF2
  7684                           intcon2	equ	0xFF1
  7685                           postinc0	equ	0xFEE
  7686                           fsr0h	equ	0xFEA
  7687                           fsr0l	equ	0xFE9
  7688                           wreg	equ	0xFE8
  7689                           indf1	equ	0xFE7
  7690                           postdec1	equ	0xFE5
  7691                           fsr1h	equ	0xFE2
  7692                           fsr1l	equ	0xFE1
  7693                           bsr	equ	0xFE0
  7694                           indf2	equ	0xFDF
  7695                           postinc2	equ	0xFDE
  7696                           postdec2	equ	0xFDD
  7697                           fsr2h	equ	0xFDA
  7698                           fsr2l	equ	0xFD9
  7699                           status	equ	0xFD8
  7700                           
  7701 ;; *************** function _InterruptHandlerHigh *****************
  7702 ;; Defined at:
  7703 ;;		line 169 in file "../src/interrupts.c"
  7704 ;; Parameters:    Size  Location     Type
  7705 ;;		None
  7706 ;; Auto vars:     Size  Location     Type
  7707 ;;		None
  7708 ;; Return value:  Size  Location     Type
  7709 ;;		None               void
  7710 ;; Registers used:
  7711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7712 ;; Tracked objects:
  7713 ;;		On entry : 0/0
  7714 ;;		On exit  : 0/0
  7715 ;;		Unchanged: 0/0
  7716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7717 ;;      Params:         0       0       0       0       0
  7718 ;;      Locals:         0       0       0       0       0
  7719 ;;      Temps:          0      14       0       0       0
  7720 ;;      Totals:         0      14       0       0       0
  7721 ;;Total ram usage:       14 bytes
  7722 ;; Hardware stack levels used:    1
  7723 ;; Hardware stack levels required when called:    4
  7724 ;; This function calls:
  7725 ;;		_i2c_master_handler
  7726 ;;		_timer0_int_handler
  7727 ;; This function is called by:
  7728 ;;		Interrupt level 2
  7729 ;; This function uses a non-reentrant model
  7730 ;;
  7731                           
  7732                           	psect	intcode
  7733  000008                     __pintcode:
  7734                           	opt stack 0
  7735  000008                     _InterruptHandlerHigh:
  7736                           	opt stack 16
  7737                           
  7738                           ;incstack = 0
  7739  000008  CFFA F09B          	movff	pclath,??_InterruptHandlerHigh
  7740  00000C  CFFB F09C          	movff	pclatu,??_InterruptHandlerHigh+1
  7741  000010  EF02  F00A         	goto	int_func
  7742                           pclatu	equ	0xFFB
  7743                           pclath	equ	0xFFA
  7744                           tblptru	equ	0xFF8
  7745                           tblptrh	equ	0xFF7
  7746                           tblptrl	equ	0xFF6
  7747                           tablat	equ	0xFF5
  7748                           prodh	equ	0xFF4
  7749                           prodl	equ	0xFF3
  7750                           intcon	equ	0xFF2
  7751                           intcon2	equ	0xFF1
  7752                           postinc0	equ	0xFEE
  7753                           fsr0h	equ	0xFEA
  7754                           fsr0l	equ	0xFE9
  7755                           wreg	equ	0xFE8
  7756                           indf1	equ	0xFE7
  7757                           postdec1	equ	0xFE5
  7758                           fsr1h	equ	0xFE2
  7759                           fsr1l	equ	0xFE1
  7760                           bsr	equ	0xFE0
  7761                           indf2	equ	0xFDF
  7762                           postinc2	equ	0xFDE
  7763                           postdec2	equ	0xFDD
  7764                           fsr2h	equ	0xFDA
  7765                           fsr2l	equ	0xFD9
  7766                           status	equ	0xFD8
  7767                           
  7768                           	psect	intcode_body
  7769  001404                     __pintcode_body:
  7770                           	opt stack 16
  7771  001404                     int_func:
  7772                           	opt stack 16
  7773  001404  CFE9 F09D          	movff	fsr0l,??_InterruptHandlerHigh+2
  7774  001408  CFEA F09E          	movff	fsr0h,??_InterruptHandlerHigh+3
  7775  00140C  CFE1 F09F          	movff	fsr1l,??_InterruptHandlerHigh+4
  7776  001410  CFE2 F0A0          	movff	fsr1h,??_InterruptHandlerHigh+5
  7777  001414  CFD9 F0A1          	movff	fsr2l,??_InterruptHandlerHigh+6
  7778  001418  CFDA F0A2          	movff	fsr2h,??_InterruptHandlerHigh+7
  7779  00141C  CFF3 F0A3          	movff	prodl,??_InterruptHandlerHigh+8
  7780  001420  CFF4 F0A4          	movff	prodh,??_InterruptHandlerHigh+9
  7781  001424  CFF6 F0A5          	movff	tblptrl,??_InterruptHandlerHigh+10
  7782  001428  CFF7 F0A6          	movff	tblptrh,??_InterruptHandlerHigh+11
  7783  00142C  CFF8 F0A7          	movff	tblptru,??_InterruptHandlerHigh+12
  7784  001430  CFF5 F0A8          	movff	tablat,??_InterruptHandlerHigh+13
  7785                           
  7786                           ;interrupts.c: 174: if (PIR1bits.SSPIF) {
  7787  001434  A69E               	btfss	3998,3,c	;volatile
  7788  001436  D003               	goto	i2l4673
  7789                           
  7790                           ;interrupts.c: 176: PIR1bits.SSPIF = 0;
  7791  001438  969E               	bcf	3998,3,c	;volatile
  7792                           
  7793                           ;interrupts.c: 179: {
  7794                           ;interrupts.c: 180: i2c_master_handler();
  7795  00143A  ECB3  F002         	call	_i2c_master_handler	;wreg free
  7796  00143E                     i2l4673:
  7797                           
  7798                           ;interrupts.c: 181: }
  7799                           ;interrupts.c: 187: }
  7800                           ;interrupts.c: 190: if ( PIR1bits.TMR2IF ) {
  7801  00143E  B29E               	btfsc	3998,1,c	;volatile
  7802                           
  7803                           ;interrupts.c: 192: PIR1bits.TMR2IF = 0;
  7804  001440  929E               	bcf	3998,1,c	;volatile
  7805                           
  7806                           ;interrupts.c: 217: }
  7807                           ;interrupts.c: 220: if (INTCONbits.TMR0IF) {
  7808  001442  A4F2               	btfss	intcon,2,c	;volatile
  7809  001444  D003               	goto	i2l4681
  7810                           
  7811                           ;interrupts.c: 222: INTCONbits.TMR0IF = 0;
  7812  001446  94F2               	bcf	intcon,2,c	;volatile
  7813                           
  7814                           ;interrupts.c: 224: timer0_int_handler();
  7815  001448  EC96  F00D         	call	_timer0_int_handler	;wreg free
  7816  00144C                     i2l4681:
  7817                           
  7818                           ;interrupts.c: 252: }
  7819                           ;interrupts.c: 273: }
  7820                           ;interrupts.c: 278: if(PIR1bits.ADIF == 1)
  7821  00144C  509E               	movf	3998,w,c	;volatile
  7822                           
  7823                           ;interrupts.c: 279: {
  7824  00144E  C0A8  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  7825  001452  C0A7  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  7826  001456  C0A6  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  7827  00145A  C0A5  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  7828  00145E  C0A4  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  7829  001462  C0A3  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  7830  001466  C0A2  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  7831  00146A  C0A1  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  7832  00146E  C0A0  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  7833  001472  C09F  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  7834  001476  C09E  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  7835  00147A  C09D  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  7836  00147E  C09C  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  7837  001482  C09B  FFFA         	movff	??_InterruptHandlerHigh,pclath
  7838  001486  0011               	retfie		f
  7839  001488                     __end_of_InterruptHandlerHigh:
  7840                           	opt stack 0
  7841                           pclatu	equ	0xFFB
  7842                           pclath	equ	0xFFA
  7843                           tblptru	equ	0xFF8
  7844                           tblptrh	equ	0xFF7
  7845                           tblptrl	equ	0xFF6
  7846                           tablat	equ	0xFF5
  7847                           prodh	equ	0xFF4
  7848                           prodl	equ	0xFF3
  7849                           intcon	equ	0xFF2
  7850                           intcon2	equ	0xFF1
  7851                           postinc0	equ	0xFEE
  7852                           fsr0h	equ	0xFEA
  7853                           fsr0l	equ	0xFE9
  7854                           wreg	equ	0xFE8
  7855                           indf1	equ	0xFE7
  7856                           postdec1	equ	0xFE5
  7857                           fsr1h	equ	0xFE2
  7858                           fsr1l	equ	0xFE1
  7859                           bsr	equ	0xFE0
  7860                           indf2	equ	0xFDF
  7861                           postinc2	equ	0xFDE
  7862                           postdec2	equ	0xFDD
  7863                           fsr2h	equ	0xFDA
  7864                           fsr2l	equ	0xFD9
  7865                           status	equ	0xFD8
  7866                           
  7867 ;; *************** function _timer0_int_handler *****************
  7868 ;; Defined at:
  7869 ;;		line 17 in file "../src/user_interrupts.c"
  7870 ;; Parameters:    Size  Location     Type
  7871 ;;		None
  7872 ;; Auto vars:     Size  Location     Type
  7873 ;;  msgtype         2    0        int 
  7874 ;;  length          2    0        int 
  7875 ;;  val             2    0        unsigned int 
  7876 ;; Return value:  Size  Location     Type
  7877 ;;		None               void
  7878 ;; Registers used:
  7879 ;;		wreg, status,2, status,0, cstack
  7880 ;; Tracked objects:
  7881 ;;		On entry : 0/0
  7882 ;;		On exit  : 0/0
  7883 ;;		Unchanged: 0/0
  7884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7885 ;;      Params:         0       0       0       0       0
  7886 ;;      Locals:         0       0       0       0       0
  7887 ;;      Temps:          0       1       0       0       0
  7888 ;;      Totals:         0       1       0       0       0
  7889 ;;Total ram usage:        1 bytes
  7890 ;; Hardware stack levels used:    1
  7891 ;; Hardware stack levels required when called:    1
  7892 ;; This function calls:
  7893 ;;		_WriteTimer0
  7894 ;; This function is called by:
  7895 ;;		_InterruptHandlerHigh
  7896 ;; This function uses a non-reentrant model
  7897 ;;
  7898                           
  7899                           	psect	text48
  7900  001B2C                     __ptext48:
  7901                           	opt stack 0
  7902  001B2C                     _timer0_int_handler:
  7903                           	opt stack 18
  7904                           
  7905                           ;user_interrupts.c: 18: unsigned int val;
  7906                           ;user_interrupts.c: 19: int length, msgtype;
  7907                           ;user_interrupts.c: 20: LATBbits.LATB6 = !LATBbits.LATB6;
  7908                           
  7909                           ;incstack = 0
  7910  001B2C  BC8A               	btfsc	3978,6,c	;volatile
  7911  001B2E  D002               	goto	i2u297_40
  7912  001B30  0E01               	movlw	1
  7913  001B32  D001               	goto	i2u297_46
  7914  001B34                     i2u297_40:
  7915  001B34  0E00               	movlw	0
  7916  001B36                     i2u297_46:
  7917  001B36  0100               	movlb	0	; () banked
  7918  001B38  6F84               	movwf	??_timer0_int_handler& (0+255),b
  7919  001B3A  0100               	movlb	0	; () banked
  7920  001B3C  3B84               	swapf	??_timer0_int_handler& (0+255),f,b
  7921  001B3E  4784               	rlncf	??_timer0_int_handler& (0+255),f,b
  7922  001B40  4784               	rlncf	??_timer0_int_handler& (0+255),f,b
  7923  001B42  508A               	movf	3978,w,c	;volatile
  7924  001B44  0100               	movlb	0	; () banked
  7925  001B46  1984               	xorwf	??_timer0_int_handler& (0+255),w,b
  7926  001B48  0BBF               	andlw	-65
  7927  001B4A  1984               	xorwf	??_timer0_int_handler& (0+255),w,b
  7928  001B4C  6E8A               	movwf	3978,c	;volatile
  7929                           
  7930                           ; BSR set to: 0
  7931                           ;user_interrupts.c: 29: WriteTimer0(0);
  7932  001B4E  0E00               	movlw	0
  7933  001B50  0100               	movlb	0	; () banked
  7934  001B52  0100               	movlb	0	; () banked
  7935  001B54  6F81               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  7936  001B56  0E00               	movlw	0
  7937  001B58  0100               	movlb	0	; () banked
  7938  001B5A  6F80               	movwf	WriteTimer0@timer0& (0+255),b
  7939  001B5C  ECB6  F00E         	call	_WriteTimer0	;wreg free
  7940  001B60  0012               	return	
  7941  001B62                     __end_of_timer0_int_handler:
  7942                           	opt stack 0
  7943                           pclatu	equ	0xFFB
  7944                           pclath	equ	0xFFA
  7945                           tblptru	equ	0xFF8
  7946                           tblptrh	equ	0xFF7
  7947                           tblptrl	equ	0xFF6
  7948                           tablat	equ	0xFF5
  7949                           prodh	equ	0xFF4
  7950                           prodl	equ	0xFF3
  7951                           intcon	equ	0xFF2
  7952                           intcon2	equ	0xFF1
  7953                           postinc0	equ	0xFEE
  7954                           fsr0h	equ	0xFEA
  7955                           fsr0l	equ	0xFE9
  7956                           wreg	equ	0xFE8
  7957                           indf1	equ	0xFE7
  7958                           postdec1	equ	0xFE5
  7959                           fsr1h	equ	0xFE2
  7960                           fsr1l	equ	0xFE1
  7961                           bsr	equ	0xFE0
  7962                           indf2	equ	0xFDF
  7963                           postinc2	equ	0xFDE
  7964                           postdec2	equ	0xFDD
  7965                           fsr2h	equ	0xFDA
  7966                           fsr2l	equ	0xFD9
  7967                           status	equ	0xFD8
  7968                           
  7969 ;; *************** function _WriteTimer0 *****************
  7970 ;; Defined at:
  7971 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0write.c"
  7972 ;; Parameters:    Size  Location     Type
  7973 ;;  timer0          2    0[BANK0 ] unsigned int 
  7974 ;; Auto vars:     Size  Location     Type
  7975 ;;  timer           2    2[BANK0 ] struct Timers
  7976 ;; Return value:  Size  Location     Type
  7977 ;;		None               void
  7978 ;; Registers used:
  7979 ;;		None
  7980 ;; Tracked objects:
  7981 ;;		On entry : 0/0
  7982 ;;		On exit  : 0/0
  7983 ;;		Unchanged: 0/0
  7984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7985 ;;      Params:         0       2       0       0       0
  7986 ;;      Locals:         0       2       0       0       0
  7987 ;;      Temps:          0       0       0       0       0
  7988 ;;      Totals:         0       4       0       0       0
  7989 ;;Total ram usage:        4 bytes
  7990 ;; Hardware stack levels used:    1
  7991 ;; This function calls:
  7992 ;;		Nothing
  7993 ;; This function is called by:
  7994 ;;		_timer0_int_handler
  7995 ;; This function uses a non-reentrant model
  7996 ;;
  7997                           
  7998                           	psect	text49
  7999  001D6C                     __ptext49:
  8000                           	opt stack 0
  8001  001D6C                     _WriteTimer0:
  8002                           	opt stack 18
  8003                           
  8004                           ;incstack = 0
  8005  001D6C  C080  F082         	movff	WriteTimer0@timer0,WriteTimer0@timer
  8006  001D70  C081  F083         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  8007  001D74  C083  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  8008  001D78  C082  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  8009  001D7C  0012               	return	
  8010  001D7E                     __end_of_WriteTimer0:
  8011                           	opt stack 0
  8012                           pclatu	equ	0xFFB
  8013                           pclath	equ	0xFFA
  8014                           tblptru	equ	0xFF8
  8015                           tblptrh	equ	0xFF7
  8016                           tblptrl	equ	0xFF6
  8017                           tablat	equ	0xFF5
  8018                           prodh	equ	0xFF4
  8019                           prodl	equ	0xFF3
  8020                           intcon	equ	0xFF2
  8021                           intcon2	equ	0xFF1
  8022                           postinc0	equ	0xFEE
  8023                           fsr0h	equ	0xFEA
  8024                           fsr0l	equ	0xFE9
  8025                           wreg	equ	0xFE8
  8026                           indf1	equ	0xFE7
  8027                           postdec1	equ	0xFE5
  8028                           fsr1h	equ	0xFE2
  8029                           fsr1l	equ	0xFE1
  8030                           bsr	equ	0xFE0
  8031                           indf2	equ	0xFDF
  8032                           postinc2	equ	0xFDE
  8033                           postdec2	equ	0xFDD
  8034                           fsr2h	equ	0xFDA
  8035                           fsr2l	equ	0xFD9
  8036                           status	equ	0xFD8
  8037                           
  8038 ;; *************** function _i2c_master_handler *****************
  8039 ;; Defined at:
  8040 ;;		line 117 in file "../src/my_i2c_master.c"
  8041 ;; Parameters:    Size  Location     Type
  8042 ;;		None
  8043 ;; Auto vars:     Size  Location     Type
  8044 ;;		None
  8045 ;; Return value:  Size  Location     Type
  8046 ;;		None               void
  8047 ;; Registers used:
  8048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8049 ;; Tracked objects:
  8050 ;;		On entry : 0/0
  8051 ;;		On exit  : 0/0
  8052 ;;		Unchanged: 0/0
  8053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8054 ;;      Params:         0       0       0       0       0
  8055 ;;      Locals:         0       0       0       0       0
  8056 ;;      Temps:          0       1       0       0       0
  8057 ;;      Totals:         0       1       0       0       0
  8058 ;;Total ram usage:        1 bytes
  8059 ;; Hardware stack levels used:    1
  8060 ;; Hardware stack levels required when called:    3
  8061 ;; This function calls:
  8062 ;;		i2_ToMainHigh_sendmsg
  8063 ;; This function is called by:
  8064 ;;		_InterruptHandlerHigh
  8065 ;; This function uses a non-reentrant model
  8066 ;;
  8067                           
  8068                           	psect	text50
  8069  000566                     __ptext50:
  8070                           	opt stack 0
  8071  000566                     _i2c_master_handler:
  8072                           	opt stack 16
  8073                           
  8074                           ;my_i2c_master.c: 119: switch (ic_ptr->state)
  8075                           
  8076                           ;incstack = 0
  8077  000566  D177               	goto	i2l4759
  8078  000568                     i2l4685:
  8079                           
  8080                           ;my_i2c_master.c: 122: {
  8081                           ;my_i2c_master.c: 124: SSPBUF = (ic_ptr->slave_address);
  8082  000568  0100               	movlb	0	; () banked
  8083  00056A  EE20 F00E          	lfsr	2,14
  8084  00056E  0100               	movlb	0	; () banked
  8085  000570  51DA               	movf	my_i2c_master@ic_ptr& (0+255),w,b
  8086  000572  26D9               	addwf	fsr2l,f,c
  8087  000574  0100               	movlb	0	; () banked
  8088  000576  51DB               	movf	(my_i2c_master@ic_ptr+1)& (0+255),w,b
  8089  000578  22DA               	addwfc	fsr2h,f,c
  8090  00057A  50DF               	movf	indf2,w,c
  8091  00057C  6EC9               	movwf	4041,c	;volatile
  8092                           
  8093                           ; BSR set to: 0
  8094                           ;my_i2c_master.c: 125: ic_ptr->state = WRITE_ADDRESS;
  8095  00057E  C0DA  FFD9         	movff	my_i2c_master@ic_ptr,fsr2l
  8096  000582  C0DB  FFDA         	movff	my_i2c_master@ic_ptr+1,fsr2h
  8097  000586  0E03               	movlw	3
  8098  000588  6EDF               	movwf	indf2,c
  8099                           
  8100                           ;my_i2c_master.c: 126: break;
  8101  00058A  0012               	return	
  8102  00058C                     i2l574:
  8103                           
  8104                           ;my_i2c_master.c: 130: {
  8105                           ;my_i2c_master.c: 131: if (1 == SSPCON2bits.ACKSTAT)
  8106  00058C  BCC5               	btfsc	4037,6,c	;volatile
  8107  00058E  0012               	return	
  8108                           
  8109                           ;my_i2c_master.c: 135: else
  8110                           ;my_i2c_master.c: 136: {
  8111                           ;my_i2c_master.c: 137: if (mode == MASTER_WRITE )
  8112                           
  8113                           ;my_i2c_master.c: 132: {
  8114                           ;my_i2c_master.c: 134: }
  8115  000590  0440               	decf	_mode,w,c
  8116  000592  A4D8               	btfss	status,2,c
  8117  000594  D01E               	goto	i2l4695
  8118                           
  8119                           ;my_i2c_master.c: 138: {
  8120                           ;my_i2c_master.c: 139: SSPBUF = ic_ptr->buffer[ic_ptr->buffer_index];
  8121  000596  0100               	movlb	0	; () banked
  8122  000598  EE20 F00C          	lfsr	2,12
  8123  00059C  0100               	movlb	0	; () banked
  8124  00059E  51DA               	movf	my_i2c_master@ic_ptr& (0+255),w,b
  8125  0005A0  26D9               	addwf	fsr2l,f,c
  8126  0005A2  0100               	movlb	0	; () banked
  8127  0005A4  51DB               	movf	(my_i2c_master@ic_ptr+1)& (0+255),w,b
  8128  0005A6  22DA               	addwfc	fsr2h,f,c
  8129  0005A8  50DF               	movf	indf2,w,c
  8130  0005AA  0100               	movlb	0	; () banked
  8131  0005AC  6F9A               	movwf	??_i2c_master_handler& (0+255),b
  8132  0005AE  0100               	movlb	0	; () banked
  8133  0005B0  519A               	movf	??_i2c_master_handler& (0+255),w,b
  8134  0005B2  0D01               	mullw	1
  8135  0005B4  0E01               	movlw	1
  8136  0005B6  26F3               	addwf	prodl,f,c
  8137  0005B8  0E00               	movlw	0
  8138  0005BA  22F4               	addwfc	prodh,f,c
  8139  0005BC  50F3               	movf	prodl,w,c
  8140  0005BE  0100               	movlb	0	; () banked
  8141  0005C0  0100               	movlb	0	; () banked
  8142  0005C2  25DA               	addwf	my_i2c_master@ic_ptr& (0+255),w,b
  8143  0005C4  6ED9               	movwf	fsr2l,c
  8144  0005C6  50F4               	movf	prodh,w,c
  8145  0005C8  0100               	movlb	0	; () banked
  8146  0005CA  0100               	movlb	0	; () banked
  8147  0005CC  21DB               	addwfc	(my_i2c_master@ic_ptr+1)& (0+255),w,b
  8148  0005CE  6EDA               	movwf	fsr2h,c
  8149  0005D0  D00D               	goto	L3
  8150  0005D2                     i2l4695:
  8151                           
  8152                           ;my_i2c_master.c: 141: else if (mode == MASTER_READ )
  8153  0005D2  5040               	movf	_mode,w,c
  8154  0005D4  0A02               	xorlw	2
  8155  0005D6  A4D8               	btfss	status,2,c
  8156  0005D8  D00B               	goto	i2l4699
  8157                           
  8158                           ;my_i2c_master.c: 142: {
  8159                           ;my_i2c_master.c: 143: SSPBUF = ic_ptr->address;
  8160  0005DA  0100               	movlb	0	; () banked
  8161  0005DC  EE20 F00D          	lfsr	2,13
  8162  0005E0  0100               	movlb	0	; () banked
  8163  0005E2  51DA               	movf	my_i2c_master@ic_ptr& (0+255),w,b
  8164  0005E4  26D9               	addwf	fsr2l,f,c
  8165  0005E6  0100               	movlb	0	; () banked
  8166  0005E8  51DB               	movf	(my_i2c_master@ic_ptr+1)& (0+255),w,b
  8167  0005EA  22DA               	addwfc	fsr2h,f,c
  8168  0005EC                     L3:
  8169  0005EC  50DF               	movf	indf2,w,c
  8170  0005EE  6EC9               	movwf	4041,c	;volatile
  8171  0005F0                     i2l4699:
  8172                           
  8173                           ;my_i2c_master.c: 144: }
  8174                           ;my_i2c_master.c: 145: ic_ptr->state = DATA;
  8175  0005F0  C0DA  FFD9         	movff	my_i2c_master@ic_ptr,fsr2l
  8176  0005F4  C0DB  FFDA         	movff	my_i2c_master@ic_ptr+1,fsr2h
  8177  0005F8  0E05               	movlw	5
  8178  0005FA  6EDF               	movwf	indf2,c
  8179  0005FC  0012               	return	
  8180  0005FE                     i2l580:
  8181                           
  8182                           ;my_i2c_master.c: 151: {
  8183                           ;my_i2c_master.c: 153: if (1 == SSPCON2bits.ACKSTAT)
  8184  0005FE  BCC5               	btfsc	4037,6,c	;volatile
  8185  000600  0012               	return	
  8186                           
  8187                           ;my_i2c_master.c: 157: else
  8188                           ;my_i2c_master.c: 158: {
  8189                           ;my_i2c_master.c: 159: if (mode == MASTER_WRITE )
  8190                           
  8191                           ;my_i2c_master.c: 154: {
  8192                           ;my_i2c_master.c: 156: }
  8193  000602  0440               	decf	_mode,w,c
  8194  000604  A4D8               	btfss	status,2,c
  8195  000606  D052               	goto	i2l4713
  8196                           
  8197                           ;my_i2c_master.c: 160: {
  8198                           ;my_i2c_master.c: 162: ic_ptr->buffer_index++;
  8199  000608  0100               	movlb	0	; () banked
  8200  00060A  EE20 F00C          	lfsr	2,12
  8201  00060E  0100               	movlb	0	; () banked
  8202  000610  51DA               	movf	my_i2c_master@ic_ptr& (0+255),w,b
  8203  000612  26D9               	addwf	fsr2l,f,c
  8204  000614  0100               	movlb	0	; () banked
  8205  000616  51DB               	movf	(my_i2c_master@ic_ptr+1)& (0+255),w,b
  8206  000618  22DA               	addwfc	fsr2h,f,c
  8207  00061A  2ADF               	incf	indf2,f,c
  8208                           
  8209                           ;my_i2c_master.c: 164: if (ic_ptr->buffer_index < ic_ptr->buffer_length)
  8210  00061C  0100               	movlb	0	; () banked
  8211  00061E  EE20 F00C          	lfsr	2,12
  8212  000622  0100               	movlb	0	; () banked
  8213  000624  51DA               	movf	my_i2c_master@ic_ptr& (0+255),w,b
  8214  000626  26D9               	addwf	fsr2l,f,c
  8215  000628  0100               	movlb	0	; () banked
  8216  00062A  51DB               	movf	(my_i2c_master@ic_ptr+1)& (0+255),w,b
  8217  00062C  22DA               	addwfc	fsr2h,f,c
  8218  00062E  50DF               	movf	indf2,w,c
  8219  000630  0100               	movlb	0	; () banked
  8220  000632  6F9A               	movwf	??_i2c_master_handler& (0+255),b
  8221  000634  0100               	movlb	0	; () banked
  8222  000636  EE20 F00B          	lfsr	2,11
  8223  00063A  0100               	movlb	0	; () banked
  8224  00063C  51DA               	movf	my_i2c_master@ic_ptr& (0+255),w,b
  8225  00063E  26D9               	addwf	fsr2l,f,c
  8226  000640  0100               	movlb	0	; () banked
  8227  000642  51DB               	movf	(my_i2c_master@ic_ptr+1)& (0+255),w,b
  8228  000644  22DA               	addwfc	fsr2h,f,c
  8229  000646  50DF               	movf	indf2,w,c
  8230  000648  0100               	movlb	0	; () banked
  8231  00064A  5D9A               	subwf	??_i2c_master_handler& (0+255),w,b
  8232  00064C  B0D8               	btfsc	status,0,c
  8233  00064E  D026               	goto	i2l584
  8234                           
  8235                           ; BSR set to: 0
  8236                           ;my_i2c_master.c: 165: {
  8237                           ;my_i2c_master.c: 166: SSPBUF = ic_ptr->buffer[ic_ptr->buffer_index];
  8238  000650  0100               	movlb	0	; () banked
  8239  000652  EE20 F00C          	lfsr	2,12
  8240  000656  0100               	movlb	0	; () banked
  8241  000658  51DA               	movf	my_i2c_master@ic_ptr& (0+255),w,b
  8242  00065A  26D9               	addwf	fsr2l,f,c
  8243  00065C  0100               	movlb	0	; () banked
  8244  00065E  51DB               	movf	(my_i2c_master@ic_ptr+1)& (0+255),w,b
  8245  000660  22DA               	addwfc	fsr2h,f,c
  8246  000662  50DF               	movf	indf2,w,c
  8247  000664  0100               	movlb	0	; () banked
  8248  000666  6F9A               	movwf	??_i2c_master_handler& (0+255),b
  8249  000668  0100               	movlb	0	; () banked
  8250  00066A  519A               	movf	??_i2c_master_handler& (0+255),w,b
  8251  00066C  0D01               	mullw	1
  8252  00066E  0E01               	movlw	1
  8253  000670  26F3               	addwf	prodl,f,c
  8254  000672  0E00               	movlw	0
  8255  000674  22F4               	addwfc	prodh,f,c
  8256  000676  50F3               	movf	prodl,w,c
  8257  000678  0100               	movlb	0	; () banked
  8258  00067A  0100               	movlb	0	; () banked
  8259  00067C  25DA               	addwf	my_i2c_master@ic_ptr& (0+255),w,b
  8260  00067E  6ED9               	movwf	fsr2l,c
  8261  000680  50F4               	movf	prodh,w,c
  8262  000682  0100               	movlb	0	; () banked
  8263  000684  0100               	movlb	0	; () banked
  8264  000686  21DB               	addwfc	(my_i2c_master@ic_ptr+1)& (0+255),w,b
  8265  000688  6EDA               	movwf	fsr2h,c
  8266  00068A  50DF               	movf	indf2,w,c
  8267  00068C  6EC9               	movwf	4041,c	;volatile
  8268                           
  8269                           ; BSR set to: 0
  8270                           ;my_i2c_master.c: 167: ic_ptr->state = DATA;
  8271  00068E  C0DA  FFD9         	movff	my_i2c_master@ic_ptr,fsr2l
  8272  000692  C0DB  FFDA         	movff	my_i2c_master@ic_ptr+1,fsr2h
  8273  000696  0E05               	movlw	5
  8274  000698  6EDF               	movwf	indf2,c
  8275                           
  8276                           ;my_i2c_master.c: 168: }
  8277  00069A  0012               	return	
  8278  00069C                     i2l584:
  8279                           
  8280                           ; BSR set to: 0
  8281                           ;my_i2c_master.c: 169: else
  8282                           ;my_i2c_master.c: 170: {
  8283                           ;my_i2c_master.c: 171: SSPCON2bits.PEN = 1;
  8284  00069C  84C5               	bsf	4037,2,c	;volatile
  8285                           
  8286                           ; BSR set to: 0
  8287                           ;my_i2c_master.c: 172: ic_ptr->state = STOP_MESSAGE;
  8288  00069E  C0DA  FFD9         	movff	my_i2c_master@ic_ptr,fsr2l
  8289  0006A2  C0DB  FFDA         	movff	my_i2c_master@ic_ptr+1,fsr2h
  8290  0006A6  0E09               	movlw	9
  8291  0006A8  6EDF               	movwf	indf2,c
  8292  0006AA  0012               	return	
  8293  0006AC                     i2l4713:
  8294                           
  8295                           ;my_i2c_master.c: 175: else if (mode == MASTER_READ )
  8296  0006AC  5040               	movf	_mode,w,c
  8297  0006AE  0A02               	xorlw	2
  8298  0006B0  A4D8               	btfss	status,2,c
  8299  0006B2  0012               	return	
  8300                           
  8301                           ;my_i2c_master.c: 176: {
  8302                           ;my_i2c_master.c: 177: SSPCON2bits.RSEN = 1;
  8303  0006B4  82C5               	bsf	4037,1,c	;volatile
  8304                           
  8305                           ;my_i2c_master.c: 178: ic_ptr->state = RESTART;
  8306  0006B6  C0DA  FFD9         	movff	my_i2c_master@ic_ptr,fsr2l
  8307  0006BA  C0DB  FFDA         	movff	my_i2c_master@ic_ptr+1,fsr2h
  8308  0006BE  0E02               	movlw	2
  8309  0006C0  6EDF               	movwf	indf2,c
  8310  0006C2  0012               	return	
  8311  0006C4                     i2l4719:
  8312                           
  8313                           ;my_i2c_master.c: 186: {
  8314                           ;my_i2c_master.c: 187: SSPBUF = (ic_ptr->slave_address) | 0x01;
  8315  0006C4  0100               	movlb	0	; () banked
  8316  0006C6  EE20 F00E          	lfsr	2,14
  8317  0006CA  0100               	movlb	0	; () banked
  8318  0006CC  51DA               	movf	my_i2c_master@ic_ptr& (0+255),w,b
  8319  0006CE  26D9               	addwf	fsr2l,f,c
  8320  0006D0  0100               	movlb	0	; () banked
  8321  0006D2  51DB               	movf	(my_i2c_master@ic_ptr+1)& (0+255),w,b
  8322  0006D4  22DA               	addwfc	fsr2h,f,c
  8323  0006D6  50DF               	movf	indf2,w,c
  8324  0006D8  0901               	iorlw	1
  8325  0006DA  6EC9               	movwf	4041,c	;volatile
  8326                           
  8327                           ; BSR set to: 0
  8328                           ;my_i2c_master.c: 188: ic_ptr->state = READ_ADDRESS;
  8329  0006DC  C0DA  FFD9         	movff	my_i2c_master@ic_ptr,fsr2l
  8330  0006E0  C0DB  FFDA         	movff	my_i2c_master@ic_ptr+1,fsr2h
  8331  0006E4  0E04               	movlw	4
  8332  0006E6  6EDF               	movwf	indf2,c
  8333                           
  8334                           ;my_i2c_master.c: 189: break;
  8335  0006E8  0012               	return	
  8336  0006EA                     i2l589:
  8337                           
  8338                           ;my_i2c_master.c: 193: {
  8339                           ;my_i2c_master.c: 194: if (1 == SSPCON2bits.ACKSTAT)
  8340  0006EA  BCC5               	btfsc	4037,6,c	;volatile
  8341  0006EC  0012               	return	
  8342                           
  8343                           ;my_i2c_master.c: 198: {
  8344                           ;my_i2c_master.c: 199: SSPCON2bits.RCEN = 1;
  8345                           
  8346                           ;my_i2c_master.c: 195: {
  8347                           ;my_i2c_master.c: 197: } else
  8348  0006EE  86C5               	bsf	4037,3,c	;volatile
  8349                           
  8350                           ;my_i2c_master.c: 200: ic_ptr->state = SLAVE_RESPONSE;
  8351  0006F0  C0DA  FFD9         	movff	my_i2c_master@ic_ptr,fsr2l
  8352  0006F4  C0DB  FFDA         	movff	my_i2c_master@ic_ptr+1,fsr2h
  8353  0006F8  0E06               	movlw	6
  8354  0006FA  6EDF               	movwf	indf2,c
  8355  0006FC  0012               	return	
  8356  0006FE                     i2l4727:
  8357                           
  8358                           ;my_i2c_master.c: 205: {
  8359                           ;my_i2c_master.c: 206: ic_ptr->buffer[ic_ptr->buffer_index] = SSPBUF;
  8360  0006FE  0100               	movlb	0	; () banked
  8361  000700  EE20 F00C          	lfsr	2,12
  8362  000704  0100               	movlb	0	; () banked
  8363  000706  51DA               	movf	my_i2c_master@ic_ptr& (0+255),w,b
  8364  000708  26D9               	addwf	fsr2l,f,c
  8365  00070A  0100               	movlb	0	; () banked
  8366  00070C  51DB               	movf	(my_i2c_master@ic_ptr+1)& (0+255),w,b
  8367  00070E  22DA               	addwfc	fsr2h,f,c
  8368  000710  50DF               	movf	indf2,w,c
  8369  000712  0100               	movlb	0	; () banked
  8370  000714  6F9A               	movwf	??_i2c_master_handler& (0+255),b
  8371  000716  0100               	movlb	0	; () banked
  8372  000718  519A               	movf	??_i2c_master_handler& (0+255),w,b
  8373  00071A  0D01               	mullw	1
  8374  00071C  0E01               	movlw	1
  8375  00071E  26F3               	addwf	prodl,f,c
  8376  000720  0E00               	movlw	0
  8377  000722  22F4               	addwfc	prodh,f,c
  8378  000724  50F3               	movf	prodl,w,c
  8379  000726  0100               	movlb	0	; () banked
  8380  000728  0100               	movlb	0	; () banked
  8381  00072A  25DA               	addwf	my_i2c_master@ic_ptr& (0+255),w,b
  8382  00072C  6ED9               	movwf	fsr2l,c
  8383  00072E  50F4               	movf	prodh,w,c
  8384  000730  0100               	movlb	0	; () banked
  8385  000732  0100               	movlb	0	; () banked
  8386  000734  21DB               	addwfc	(my_i2c_master@ic_ptr+1)& (0+255),w,b
  8387  000736  6EDA               	movwf	fsr2h,c
  8388  000738  CFC9 FFDF          	movff	4041,indf2	;volatile
  8389                           
  8390                           ; BSR set to: 0
  8391                           ;my_i2c_master.c: 209: ic_ptr->buffer_index++;
  8392  00073C  0100               	movlb	0	; () banked
  8393  00073E  EE20 F00C          	lfsr	2,12
  8394  000742  0100               	movlb	0	; () banked
  8395  000744  51DA               	movf	my_i2c_master@ic_ptr& (0+255),w,b
  8396  000746  26D9               	addwf	fsr2l,f,c
  8397  000748  0100               	movlb	0	; () banked
  8398  00074A  51DB               	movf	(my_i2c_master@ic_ptr+1)& (0+255),w,b
  8399  00074C  22DA               	addwfc	fsr2h,f,c
  8400  00074E  2ADF               	incf	indf2,f,c
  8401                           
  8402                           ; BSR set to: 0
  8403                           ;my_i2c_master.c: 210: if (ic_ptr->buffer_index < ic_ptr->buffer_length)
  8404  000750  0100               	movlb	0	; () banked
  8405  000752  EE20 F00C          	lfsr	2,12
  8406  000756  0100               	movlb	0	; () banked
  8407  000758  51DA               	movf	my_i2c_master@ic_ptr& (0+255),w,b
  8408  00075A  26D9               	addwf	fsr2l,f,c
  8409  00075C  0100               	movlb	0	; () banked
  8410  00075E  51DB               	movf	(my_i2c_master@ic_ptr+1)& (0+255),w,b
  8411  000760  22DA               	addwfc	fsr2h,f,c
  8412  000762  50DF               	movf	indf2,w,c
  8413  000764  0100               	movlb	0	; () banked
  8414  000766  6F9A               	movwf	??_i2c_master_handler& (0+255),b
  8415  000768  0100               	movlb	0	; () banked
  8416  00076A  EE20 F00B          	lfsr	2,11
  8417  00076E  0100               	movlb	0	; () banked
  8418  000770  51DA               	movf	my_i2c_master@ic_ptr& (0+255),w,b
  8419  000772  26D9               	addwf	fsr2l,f,c
  8420  000774  0100               	movlb	0	; () banked
  8421  000776  51DB               	movf	(my_i2c_master@ic_ptr+1)& (0+255),w,b
  8422  000778  22DA               	addwfc	fsr2h,f,c
  8423  00077A  50DF               	movf	indf2,w,c
  8424  00077C  0100               	movlb	0	; () banked
  8425  00077E  5D9A               	subwf	??_i2c_master_handler& (0+255),w,b
  8426  000780  B0D8               	btfsc	status,0,c
  8427  000782  D007               	goto	i2l593
  8428                           
  8429                           ; BSR set to: 0
  8430                           ;my_i2c_master.c: 211: {
  8431                           ;my_i2c_master.c: 212: SSPCON2bits.ACKDT = 0;
  8432  000784  9AC5               	bcf	4037,5,c	;volatile
  8433                           
  8434                           ; BSR set to: 0
  8435                           ;my_i2c_master.c: 213: ic_ptr->state = ACK;
  8436  000786  C0DA  FFD9         	movff	my_i2c_master@ic_ptr,fsr2l
  8437  00078A  C0DB  FFDA         	movff	my_i2c_master@ic_ptr+1,fsr2h
  8438  00078E  0E07               	movlw	7
  8439  000790  D006               	goto	L4
  8440  000792                     i2l593:
  8441                           
  8442                           ; BSR set to: 0
  8443                           ;my_i2c_master.c: 216: else
  8444                           ;my_i2c_master.c: 217: {
  8445                           ;my_i2c_master.c: 218: SSPCON2bits.ACKDT = 1;
  8446  000792  8AC5               	bsf	4037,5,c	;volatile
  8447                           
  8448                           ; BSR set to: 0
  8449                           ;my_i2c_master.c: 219: ic_ptr->state = NACK;
  8450  000794  C0DA  FFD9         	movff	my_i2c_master@ic_ptr,fsr2l
  8451  000798  C0DB  FFDA         	movff	my_i2c_master@ic_ptr+1,fsr2h
  8452  00079C  0E08               	movlw	8
  8453  00079E                     L4:
  8454  00079E  6EDF               	movwf	indf2,c
  8455                           
  8456                           ; BSR set to: 0
  8457                           ;my_i2c_master.c: 220: }
  8458                           ;my_i2c_master.c: 221: SSPCON2bits.ACKEN = 1;
  8459                           
  8460                           ; BSR set to: 0
  8461  0007A0  88C5               	bsf	4037,4,c	;volatile
  8462                           
  8463                           ;my_i2c_master.c: 222: break;
  8464  0007A2  0012               	return	
  8465  0007A4                     i2l595:
  8466                           
  8467                           ;my_i2c_master.c: 226: {
  8468                           ;my_i2c_master.c: 227: SSPCON2bits.RCEN = 1;
  8469  0007A4  86C5               	bsf	4037,3,c	;volatile
  8470                           
  8471                           ;my_i2c_master.c: 228: ic_ptr->state = SLAVE_RESPONSE;
  8472  0007A6  C0DA  FFD9         	movff	my_i2c_master@ic_ptr,fsr2l
  8473  0007AA  C0DB  FFDA         	movff	my_i2c_master@ic_ptr+1,fsr2h
  8474  0007AE  0E06               	movlw	6
  8475  0007B0  6EDF               	movwf	indf2,c
  8476                           
  8477                           ;my_i2c_master.c: 229: break;
  8478  0007B2  0012               	return	
  8479  0007B4                     i2l596:
  8480                           
  8481                           ;my_i2c_master.c: 232: {
  8482                           ;my_i2c_master.c: 233: SSPCON2bits.PEN = 1;
  8483  0007B4  84C5               	bsf	4037,2,c	;volatile
  8484                           
  8485                           ;my_i2c_master.c: 234: ic_ptr->state = STOP_MESSAGE;
  8486  0007B6  C0DA  FFD9         	movff	my_i2c_master@ic_ptr,fsr2l
  8487  0007BA  C0DB  FFDA         	movff	my_i2c_master@ic_ptr+1,fsr2h
  8488  0007BE  0E09               	movlw	9
  8489  0007C0  6EDF               	movwf	indf2,c
  8490                           
  8491                           ;my_i2c_master.c: 235: break;
  8492  0007C2  0012               	return	
  8493  0007C4                     i2l4745:
  8494                           
  8495                           ;my_i2c_master.c: 239: {
  8496                           ;my_i2c_master.c: 240: if ( mode == MASTER_WRITE )
  8497  0007C4  0440               	decf	_mode,w,c
  8498  0007C6  A4D8               	btfss	status,2,c
  8499  0007C8  D014               	goto	i2l4749
  8500                           
  8501                           ;my_i2c_master.c: 241: {
  8502                           ;my_i2c_master.c: 242: ToMainHigh_sendmsg(0, 43, 0);
  8503  0007CA  0100               	movlb	0	; () banked
  8504  0007CC  6F9A               	movwf	??_i2c_master_handler& (0+255),b
  8505  0007CE  0E2B               	movlw	43
  8506  0007D0  0100               	movlb	0	; () banked
  8507  0007D2  0100               	movlb	0	; () banked
  8508  0007D4  6F96               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  8509  0007D6  0100               	movlb	0	; () banked
  8510  0007D8  519A               	movf	??_i2c_master_handler& (0+255),w,b
  8511  0007DA  0E00               	movlw	0
  8512  0007DC  0100               	movlb	0	; () banked
  8513  0007DE  0100               	movlb	0	; () banked
  8514  0007E0  6F98               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  8515  0007E2  0E00               	movlw	0
  8516  0007E4  0100               	movlb	0	; () banked
  8517  0007E6  0100               	movlb	0	; () banked
  8518  0007E8  6F97               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  8519  0007EA  0E00               	movlw	0
  8520  0007EC  ECB1  F00D         	call	i2_ToMainHigh_sendmsg
  8521                           
  8522                           ;my_i2c_master.c: 243: } else if (mode == MASTER_READ )
  8523  0007F0  D025               	goto	i2l4753
  8524  0007F2                     i2l4749:
  8525  0007F2  5040               	movf	_mode,w,c
  8526  0007F4  0A02               	xorlw	2
  8527  0007F6  A4D8               	btfss	status,2,c
  8528  0007F8  D021               	goto	i2l4753
  8529                           
  8530                           ;my_i2c_master.c: 244: {
  8531                           ;my_i2c_master.c: 245: ToMainHigh_sendmsg(ic_ptr->buffer_index, 45, ic_ptr->buffer);
  8532  0007FA  0100               	movlb	0	; () banked
  8533  0007FC  6F9A               	movwf	??_i2c_master_handler& (0+255),b
  8534  0007FE  0E2D               	movlw	45
  8535  000800  0100               	movlb	0	; () banked
  8536  000802  0100               	movlb	0	; () banked
  8537  000804  6F96               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  8538  000806  0100               	movlb	0	; () banked
  8539  000808  519A               	movf	??_i2c_master_handler& (0+255),w,b
  8540  00080A  0E01               	movlw	1
  8541  00080C  0100               	movlb	0	; () banked
  8542  00080E  0100               	movlb	0	; () banked
  8543  000810  25DA               	addwf	my_i2c_master@ic_ptr& (0+255),w,b
  8544  000812  0100               	movlb	0	; () banked
  8545  000814  0100               	movlb	0	; () banked
  8546  000816  6F97               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  8547  000818  0E00               	movlw	0
  8548  00081A  0100               	movlb	0	; () banked
  8549  00081C  0100               	movlb	0	; () banked
  8550  00081E  21DB               	addwfc	(my_i2c_master@ic_ptr+1)& (0+255),w,b
  8551  000820  0100               	movlb	0	; () banked
  8552  000822  6F98               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  8553  000824  0100               	movlb	0	; () banked
  8554  000826  EE20 F00C          	lfsr	2,12
  8555  00082A  0100               	movlb	0	; () banked
  8556  00082C  51DA               	movf	my_i2c_master@ic_ptr& (0+255),w,b
  8557  00082E  26D9               	addwf	fsr2l,f,c
  8558  000830  0100               	movlb	0	; () banked
  8559  000832  51DB               	movf	(my_i2c_master@ic_ptr+1)& (0+255),w,b
  8560  000834  22DA               	addwfc	fsr2h,f,c
  8561  000836  50DF               	movf	indf2,w,c
  8562  000838  ECB1  F00D         	call	i2_ToMainHigh_sendmsg
  8563  00083C                     i2l4753:
  8564                           
  8565                           ;my_i2c_master.c: 246: }
  8566                           ;my_i2c_master.c: 248: mode = MASTER_IDLE;
  8567  00083C  0100               	movlb	0	; () banked
  8568  00083E  6F9A               	movwf	??_i2c_master_handler& (0+255),b
  8569  000840  0E00               	movlw	0
  8570  000842  6E40               	movwf	_mode,c
  8571  000844  0100               	movlb	0	; () banked
  8572  000846  519A               	movf	??_i2c_master_handler& (0+255),w,b
  8573                           
  8574                           ; BSR set to: 0
  8575                           ;my_i2c_master.c: 249: ic_ptr->state = IDLE;
  8576  000848  C0DA  FFD9         	movff	my_i2c_master@ic_ptr,fsr2l
  8577  00084C  C0DB  FFDA         	movff	my_i2c_master@ic_ptr+1,fsr2h
  8578  000850  0E00               	movlw	0
  8579  000852  6EDF               	movwf	indf2,c
  8580                           
  8581                           ;my_i2c_master.c: 250: break;
  8582  000854  0012               	return	
  8583  000856                     i2l4759:
  8584  000856  C0DA  FFD9         	movff	my_i2c_master@ic_ptr,fsr2l
  8585  00085A  C0DB  FFDA         	movff	my_i2c_master@ic_ptr+1,fsr2h
  8586  00085E  50DF               	movf	indf2,w,c
  8587                           
  8588                           ; Switch size 1, requested type "space"
  8589                           ; Number of cases is 9, Range of values is 1 to 9
  8590                           ; switch strategies available:
  8591                           ; Name         Instructions Cycles
  8592                           ; simple_byte           28    15 (average)
  8593                           ;	Chosen strategy is simple_byte
  8594  000860  0A01               	xorlw	1	; case 1
  8595  000862  B4D8               	btfsc	status,2,c
  8596  000864  D681               	goto	i2l4685
  8597  000866  0A03               	xorlw	3	; case 2
  8598  000868  B4D8               	btfsc	status,2,c
  8599  00086A  D72C               	goto	i2l4719
  8600  00086C  0A01               	xorlw	1	; case 3
  8601  00086E  B4D8               	btfsc	status,2,c
  8602  000870  D68D               	goto	i2l574
  8603  000872  0A07               	xorlw	7	; case 4
  8604  000874  B4D8               	btfsc	status,2,c
  8605  000876  D739               	goto	i2l589
  8606  000878  0A01               	xorlw	1	; case 5
  8607  00087A  B4D8               	btfsc	status,2,c
  8608  00087C  D6C0               	goto	i2l580
  8609  00087E  0A03               	xorlw	3	; case 6
  8610  000880  B4D8               	btfsc	status,2,c
  8611  000882  D73D               	goto	i2l4727
  8612  000884  0A01               	xorlw	1	; case 7
  8613  000886  B4D8               	btfsc	status,2,c
  8614  000888  D78D               	goto	i2l595
  8615  00088A  0A0F               	xorlw	15	; case 8
  8616  00088C  B4D8               	btfsc	status,2,c
  8617  00088E  D792               	goto	i2l596
  8618  000890  0A01               	xorlw	1	; case 9
  8619  000892  A4D8               	btfss	status,2,c
  8620  000894  0012               	return	
  8621  000896  D796               	goto	i2l4745
  8622  000898                     __end_of_i2c_master_handler:
  8623                           	opt stack 0
  8624                           pclatu	equ	0xFFB
  8625                           pclath	equ	0xFFA
  8626                           tblptru	equ	0xFF8
  8627                           tblptrh	equ	0xFF7
  8628                           tblptrl	equ	0xFF6
  8629                           tablat	equ	0xFF5
  8630                           prodh	equ	0xFF4
  8631                           prodl	equ	0xFF3
  8632                           intcon	equ	0xFF2
  8633                           intcon2	equ	0xFF1
  8634                           postinc0	equ	0xFEE
  8635                           fsr0h	equ	0xFEA
  8636                           fsr0l	equ	0xFE9
  8637                           wreg	equ	0xFE8
  8638                           indf1	equ	0xFE7
  8639                           postdec1	equ	0xFE5
  8640                           fsr1h	equ	0xFE2
  8641                           fsr1l	equ	0xFE1
  8642                           bsr	equ	0xFE0
  8643                           indf2	equ	0xFDF
  8644                           postinc2	equ	0xFDE
  8645                           postdec2	equ	0xFDD
  8646                           fsr2h	equ	0xFDA
  8647                           fsr2l	equ	0xFD9
  8648                           status	equ	0xFD8
  8649                           
  8650 ;; *************** function i2_ToMainHigh_sendmsg *****************
  8651 ;; Defined at:
  8652 ;;		line 131 in file "../src/messages.c"
  8653 ;; Parameters:    Size  Location     Type
  8654 ;;  length          1    wreg     unsigned char 
  8655 ;;  msgtype         1   22[BANK0 ] unsigned char 
  8656 ;;  data            2   23[BANK0 ] PTR void 
  8657 ;;		 -> main@msgbuffer(11), main@uc(28), i2c_int_handler@error_buf(3), NULL(0), 
  8658 ;; Auto vars:     Size  Location     Type
  8659 ;;  length          1   25[BANK0 ] unsigned char 
  8660 ;; Return value:  Size  Location     Type
  8661 ;;                  1    wreg      char 
  8662 ;; Registers used:
  8663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8664 ;; Tracked objects:
  8665 ;;		On entry : 0/0
  8666 ;;		On exit  : 0/0
  8667 ;;		Unchanged: 0/0
  8668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8669 ;;      Params:         0       3       0       0       0
  8670 ;;      Locals:         0       1       0       0       0
  8671 ;;      Temps:          0       0       0       0       0
  8672 ;;      Totals:         0       4       0       0       0
  8673 ;;Total ram usage:        4 bytes
  8674 ;; Hardware stack levels used:    1
  8675 ;; Hardware stack levels required when called:    2
  8676 ;; This function calls:
  8677 ;;		i2_send_msg
  8678 ;; This function is called by:
  8679 ;;		_i2c_master_handler
  8680 ;; This function uses a non-reentrant model
  8681 ;;
  8682                           
  8683                           	psect	text51
  8684  001B62                     __ptext51:
  8685                           	opt stack 0
  8686  001B62                     i2_ToMainHigh_sendmsg:
  8687                           	opt stack 16
  8688                           
  8689                           ;incstack = 0
  8690                           ;i2ToMainHigh_sendmsg@length stored from wreg
  8691  001B62  CFE8 F099          	movff	wreg,i2ToMainHigh_sendmsg@length
  8692                           
  8693                           ;messages.c: 137: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8694                           ;	Return value of i2_ToMainHigh_sendmsg is never used
  8695  001B66  0101               	movlb	1	; () banked
  8696  001B68  0E01               	movlw	high _ToMainHigh_MQ
  8697  001B6A  0100               	movlb	0	; () banked
  8698  001B6C  0100               	movlb	0	; () banked
  8699  001B6E  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8700  001B70  0101               	movlb	1	; () banked
  8701  001B72  0E16               	movlw	low _ToMainHigh_MQ
  8702  001B74  0100               	movlb	0	; () banked
  8703  001B76  0100               	movlb	0	; () banked
  8704  001B78  6F8A               	movwf	i2send_msg@qptr& (0+255),b
  8705  001B7A  C099  F08C         	movff	i2ToMainHigh_sendmsg@length,i2send_msg@length
  8706  001B7E  C096  F08D         	movff	i2ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8707  001B82  0100               	movlb	0	; () banked
  8708  001B84  0100               	movlb	0	; () banked
  8709  001B86  C098  F08F         	movff	i2ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8710  001B8A  0100               	movlb	0	; () banked
  8711  001B8C  0100               	movlb	0	; () banked
  8712  001B8E  C097  F08E         	movff	i2ToMainHigh_sendmsg@data,i2send_msg@data
  8713  001B92  EC2B  F007         	call	i2_send_msg	;wreg free
  8714  001B96  0012               	return	
  8715  001B98                     __end_ofi2_ToMainHigh_sendmsg:
  8716                           	opt stack 0
  8717                           pclatu	equ	0xFFB
  8718                           pclath	equ	0xFFA
  8719                           tblptru	equ	0xFF8
  8720                           tblptrh	equ	0xFF7
  8721                           tblptrl	equ	0xFF6
  8722                           tablat	equ	0xFF5
  8723                           prodh	equ	0xFF4
  8724                           prodl	equ	0xFF3
  8725                           intcon	equ	0xFF2
  8726                           intcon2	equ	0xFF1
  8727                           postinc0	equ	0xFEE
  8728                           fsr0h	equ	0xFEA
  8729                           fsr0l	equ	0xFE9
  8730                           wreg	equ	0xFE8
  8731                           indf1	equ	0xFE7
  8732                           postdec1	equ	0xFE5
  8733                           fsr1h	equ	0xFE2
  8734                           fsr1l	equ	0xFE1
  8735                           bsr	equ	0xFE0
  8736                           indf2	equ	0xFDF
  8737                           postinc2	equ	0xFDE
  8738                           postdec2	equ	0xFDD
  8739                           fsr2h	equ	0xFDA
  8740                           fsr2l	equ	0xFD9
  8741                           status	equ	0xFD8
  8742                           
  8743 ;; *************** function i2_send_msg *****************
  8744 ;; Defined at:
  8745 ;;		line 29 in file "../src/messages.c"
  8746 ;; Parameters:    Size  Location     Type
  8747 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8748 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8749 ;;  length          1   12[BANK0 ] unsigned char 
  8750 ;;  msgtype         1   13[BANK0 ] unsigned char 
  8751 ;;  data            2   14[BANK0 ] PTR void 
  8752 ;;		 -> main@msgbuffer(11), main@t0thread_data(2), main@t1thread_data(2), main@uc(28), 
  8753 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), 
  8754 ;; Auto vars:     Size  Location     Type
  8755 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  8756 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8757 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8758 ;;  send_msg        2   17[BANK0 ] unsigned int 
  8759 ;;  send_msg        1   19[BANK0 ] unsigned char 
  8760 ;; Return value:  Size  Location     Type
  8761 ;;                  1    wreg      char 
  8762 ;; Registers used:
  8763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8764 ;; Tracked objects:
  8765 ;;		On entry : 0/0
  8766 ;;		On exit  : 0/0
  8767 ;;		Unchanged: 0/0
  8768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8769 ;;      Params:         0       6       0       0       0
  8770 ;;      Locals:         0       5       0       0       0
  8771 ;;      Temps:          0       1       0       0       0
  8772 ;;      Totals:         0      12       0       0       0
  8773 ;;Total ram usage:       12 bytes
  8774 ;; Hardware stack levels used:    1
  8775 ;; Hardware stack levels required when called:    1
  8776 ;; This function calls:
  8777 ;;		i2_memcpy
  8778 ;; This function is called by:
  8779 ;;		i2_ToMainHigh_sendmsg
  8780 ;; This function uses a non-reentrant model
  8781 ;;
  8782                           
  8783                           	psect	text52
  8784  000E56                     __ptext52:
  8785                           	opt stack 0
  8786  000E56                     i2_send_msg:
  8787                           	opt stack 16
  8788                           
  8789                           ;messages.c: 30: unsigned char slot;
  8790                           ;messages.c: 32: msg *qmsg;
  8791                           ;messages.c: 33: size_t tlength = length;
  8792                           
  8793                           ;incstack = 0
  8794  000E56  0100               	movlb	0	; () banked
  8795  000E58  0100               	movlb	0	; () banked
  8796  000E5A  C08C  F091         	movff	i2send_msg@length,i2send_msg@tlength
  8797  000E5E  0100               	movlb	0	; () banked
  8798  000E60  0100               	movlb	0	; () banked
  8799  000E62  6B92               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8800                           
  8801                           ; BSR set to: 0
  8802                           ;messages.c: 43: slot = qptr->cur_write_ind;
  8803  000E64  0100               	movlb	0	; () banked
  8804  000E66  EE20 F034          	lfsr	2,52
  8805  000E6A  0100               	movlb	0	; () banked
  8806  000E6C  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8807  000E6E  26D9               	addwf	fsr2l,f,c
  8808  000E70  0100               	movlb	0	; () banked
  8809  000E72  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8810  000E74  22DA               	addwfc	fsr2h,f,c
  8811  000E76  50DF               	movf	indf2,w,c
  8812  000E78  0100               	movlb	0	; () banked
  8813  000E7A  0100               	movlb	0	; () banked
  8814  000E7C  6F93               	movwf	i2send_msg@slot& (0+255),b
  8815                           
  8816                           ; BSR set to: 0
  8817                           ;messages.c: 44: qmsg = &(qptr->queue[slot]);
  8818  000E7E  0100               	movlb	0	; () banked
  8819  000E80  0100               	movlb	0	; () banked
  8820  000E82  5193               	movf	i2send_msg@slot& (0+255),w,b
  8821  000E84  0D0D               	mullw	13
  8822  000E86  50F3               	movf	prodl,w,c
  8823  000E88  0100               	movlb	0	; () banked
  8824  000E8A  0100               	movlb	0	; () banked
  8825  000E8C  258A               	addwf	i2send_msg@qptr& (0+255),w,b
  8826  000E8E  0100               	movlb	0	; () banked
  8827  000E90  0100               	movlb	0	; () banked
  8828  000E92  6F94               	movwf	i2send_msg@qmsg& (0+255),b
  8829  000E94  50F4               	movf	prodh,w,c
  8830  000E96  0100               	movlb	0	; () banked
  8831  000E98  0100               	movlb	0	; () banked
  8832  000E9A  218B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8833  000E9C  0100               	movlb	0	; () banked
  8834  000E9E  6F95               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8835                           
  8836                           ; BSR set to: 0
  8837                           ;messages.c: 46: if (qmsg->full != 0) {
  8838  000EA0  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8839  000EA4  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8840  000EA8  50DF               	movf	indf2,w,c
  8841  000EAA  B4D8               	btfsc	status,2,c
  8842  000EAC  D002               	goto	i2l4965
  8843                           
  8844                           ; BSR set to: 0
  8845                           ;messages.c: 47: return (-1);
  8846  000EAE  0EFF               	movlw	255
  8847  000EB0  0012               	return	
  8848  000EB2                     i2l4965:
  8849                           
  8850                           ; BSR set to: 0
  8851                           ;messages.c: 48: }
  8852                           ;messages.c: 51: qmsg->length = length;
  8853  000EB2  0100               	movlb	0	; () banked
  8854  000EB4  EE20 F001          	lfsr	2,1
  8855  000EB8  0100               	movlb	0	; () banked
  8856  000EBA  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  8857  000EBC  26D9               	addwf	fsr2l,f,c
  8858  000EBE  0100               	movlb	0	; () banked
  8859  000EC0  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8860  000EC2  22DA               	addwfc	fsr2h,f,c
  8861  000EC4  0100               	movlb	0	; () banked
  8862  000EC6  C08C  FFDF         	movff	i2send_msg@length,indf2
  8863                           
  8864                           ;messages.c: 52: qmsg->msgtype = msgtype;
  8865  000ECA  0100               	movlb	0	; () banked
  8866  000ECC  EE20 F002          	lfsr	2,2
  8867  000ED0  0100               	movlb	0	; () banked
  8868  000ED2  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  8869  000ED4  26D9               	addwf	fsr2l,f,c
  8870  000ED6  0100               	movlb	0	; () banked
  8871  000ED8  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8872  000EDA  22DA               	addwfc	fsr2h,f,c
  8873  000EDC  0100               	movlb	0	; () banked
  8874  000EDE  C08D  FFDF         	movff	i2send_msg@msgtype,indf2
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;messages.c: 60: memcpy(qmsg->data, data, tlength);
  8878  000EE2  0E03               	movlw	3
  8879  000EE4  0100               	movlb	0	; () banked
  8880  000EE6  0100               	movlb	0	; () banked
  8881  000EE8  2594               	addwf	i2send_msg@qmsg& (0+255),w,b
  8882  000EEA  0100               	movlb	0	; () banked
  8883  000EEC  0100               	movlb	0	; () banked
  8884  000EEE  6F80               	movwf	i2memcpy@d1& (0+255),b
  8885  000EF0  0E00               	movlw	0
  8886  000EF2  0100               	movlb	0	; () banked
  8887  000EF4  0100               	movlb	0	; () banked
  8888  000EF6  2195               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8889  000EF8  0100               	movlb	0	; () banked
  8890  000EFA  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
  8891  000EFC  0100               	movlb	0	; () banked
  8892  000EFE  0100               	movlb	0	; () banked
  8893  000F00  C08F  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8894  000F04  0100               	movlb	0	; () banked
  8895  000F06  0100               	movlb	0	; () banked
  8896  000F08  C08E  F082         	movff	i2send_msg@data,i2memcpy@s1
  8897  000F0C  C091  F084         	movff	i2send_msg@tlength,i2memcpy@n
  8898  000F10  C092  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8899  000F14  EC35  F00C         	call	i2_memcpy	;wreg free
  8900                           
  8901                           ;messages.c: 61: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8902  000F18  0100               	movlb	0	; () banked
  8903  000F1A  EE20 F034          	lfsr	2,52
  8904  000F1E  0100               	movlb	0	; () banked
  8905  000F20  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8906  000F22  26D9               	addwf	fsr2l,f,c
  8907  000F24  0100               	movlb	0	; () banked
  8908  000F26  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8909  000F28  22DA               	addwfc	fsr2h,f,c
  8910  000F2A  0100               	movlb	0	; () banked
  8911  000F2C  EE10 F034          	lfsr	1,52
  8912  000F30  0100               	movlb	0	; () banked
  8913  000F32  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8914  000F34  26E1               	addwf	fsr1l,f,c
  8915  000F36  0100               	movlb	0	; () banked
  8916  000F38  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8917  000F3A  22E2               	addwfc	fsr1h,f,c
  8918  000F3C  50E7               	movf	indf1,w,c
  8919  000F3E  0100               	movlb	0	; () banked
  8920  000F40  6F90               	movwf	??i2_send_msg& (0+255),b
  8921  000F42  0100               	movlb	0	; () banked
  8922  000F44  2990               	incf	??i2_send_msg& (0+255),w,b
  8923  000F46  0B03               	andlw	3
  8924  000F48  6EDF               	movwf	indf2,c
  8925                           
  8926                           ; BSR set to: 0
  8927                           ;messages.c: 64: qmsg->full = 1;
  8928  000F4A  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8929  000F4E  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8930  000F52  0E01               	movlw	1
  8931  000F54  6EDF               	movwf	indf2,c
  8932                           
  8933                           ; BSR set to: 0
  8934                           ;messages.c: 65: return (1);
  8935  000F56  0E01               	movlw	1
  8936  000F58  0012               	return	
  8937  000F5A                     __end_ofi2_send_msg:
  8938                           	opt stack 0
  8939                           pclatu	equ	0xFFB
  8940                           pclath	equ	0xFFA
  8941                           tblptru	equ	0xFF8
  8942                           tblptrh	equ	0xFF7
  8943                           tblptrl	equ	0xFF6
  8944                           tablat	equ	0xFF5
  8945                           prodh	equ	0xFF4
  8946                           prodl	equ	0xFF3
  8947                           intcon	equ	0xFF2
  8948                           intcon2	equ	0xFF1
  8949                           postinc0	equ	0xFEE
  8950                           fsr0h	equ	0xFEA
  8951                           fsr0l	equ	0xFE9
  8952                           wreg	equ	0xFE8
  8953                           indf1	equ	0xFE7
  8954                           postdec1	equ	0xFE5
  8955                           fsr1h	equ	0xFE2
  8956                           fsr1l	equ	0xFE1
  8957                           bsr	equ	0xFE0
  8958                           indf2	equ	0xFDF
  8959                           postinc2	equ	0xFDE
  8960                           postdec2	equ	0xFDD
  8961                           fsr2h	equ	0xFDA
  8962                           fsr2l	equ	0xFD9
  8963                           status	equ	0xFD8
  8964                           
  8965 ;; *************** function i2_memcpy *****************
  8966 ;; Defined at:
  8967 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  8968 ;; Parameters:    Size  Location     Type
  8969 ;;  d1              2    0[BANK0 ] PTR void 
  8970 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8971 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8972 ;;		 -> ToMainLow_MQ(54), NULL(0), 
  8973 ;;  s1              2    2[BANK0 ] PTR const void 
  8974 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8975 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8976 ;;		 -> main@msgbuffer(11), main@t0thread_data(2), main@t1thread_data(2), main@uc(28), 
  8977 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8978 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), 
  8979 ;;  n               2    4[BANK0 ] unsigned int 
  8980 ;; Auto vars:     Size  Location     Type
  8981 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  8982 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8983 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8984 ;;		 -> main@msgbuffer(11), main@t0thread_data(2), main@t1thread_data(2), main@uc(28), 
  8985 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8986 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), 
  8987 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  8988 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8989 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8990 ;;		 -> ToMainLow_MQ(54), NULL(0), 
  8991 ;; Return value:  Size  Location     Type
  8992 ;;                  2    0[BANK0 ] PTR void 
  8993 ;; Registers used:
  8994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8995 ;; Tracked objects:
  8996 ;;		On entry : 0/0
  8997 ;;		On exit  : 0/0
  8998 ;;		Unchanged: 0/0
  8999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9000 ;;      Params:         0       6       0       0       0
  9001 ;;      Locals:         0       4       0       0       0
  9002 ;;      Temps:          0       0       0       0       0
  9003 ;;      Totals:         0      10       0       0       0
  9004 ;;Total ram usage:       10 bytes
  9005 ;; Hardware stack levels used:    1
  9006 ;; This function calls:
  9007 ;;		Nothing
  9008 ;; This function is called by:
  9009 ;;		i2_send_msg
  9010 ;; This function uses a non-reentrant model
  9011 ;;
  9012                           
  9013                           	psect	text53
  9014  00186A                     __ptext53:
  9015                           	opt stack 0
  9016  00186A                     i2_memcpy:
  9017                           	opt stack 16
  9018                           
  9019                           ; BSR set to: 0
  9020                           ;incstack = 0
  9021  00186A  0100               	movlb	0	; () banked
  9022  00186C  0100               	movlb	0	; () banked
  9023  00186E  C083  F089         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9024  001872  0100               	movlb	0	; () banked
  9025  001874  0100               	movlb	0	; () banked
  9026  001876  C082  F088         	movff	i2memcpy@s1,i2memcpy@s
  9027  00187A  0100               	movlb	0	; () banked
  9028  00187C  0100               	movlb	0	; () banked
  9029  00187E  C081  F087         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9030  001882  0100               	movlb	0	; () banked
  9031  001884  0100               	movlb	0	; () banked
  9032  001886  C080  F086         	movff	i2memcpy@d1,i2memcpy@d
  9033  00188A  D012               	goto	i2l4989
  9034  00188C                     i2l4983:
  9035                           
  9036                           ; BSR set to: 0
  9037  00188C  C088  FFD9         	movff	i2memcpy@s,fsr2l
  9038  001890  C089  FFDA         	movff	i2memcpy@s+1,fsr2h
  9039  001894  C086  FFE1         	movff	i2memcpy@d,fsr1l
  9040  001898  C087  FFE2         	movff	i2memcpy@d+1,fsr1h
  9041  00189C  CFDF FFE7          	movff	indf2,indf1
  9042                           
  9043                           ; BSR set to: 0
  9044  0018A0  0100               	movlb	0	; () banked
  9045  0018A2  0100               	movlb	0	; () banked
  9046  0018A4  4B88               	infsnz	i2memcpy@s& (0+255),f,b
  9047  0018A6  2B89               	incf	(i2memcpy@s+1)& (0+255),f,b
  9048                           
  9049                           ; BSR set to: 0
  9050  0018A8  0100               	movlb	0	; () banked
  9051  0018AA  0100               	movlb	0	; () banked
  9052  0018AC  4B86               	infsnz	i2memcpy@d& (0+255),f,b
  9053  0018AE  2B87               	incf	(i2memcpy@d+1)& (0+255),f,b
  9054  0018B0                     i2l4989:
  9055                           
  9056                           ; BSR set to: 0
  9057  0018B0  0100               	movlb	0	; () banked
  9058  0018B2  0100               	movlb	0	; () banked
  9059  0018B4  0784               	decf	i2memcpy@n& (0+255),f,b
  9060  0018B6  A0D8               	btfss	status,0,c
  9061  0018B8  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
  9062  0018BA  0100               	movlb	0	; () banked
  9063  0018BC  2984               	incf	i2memcpy@n& (0+255),w,b
  9064  0018BE  B4D8               	btfsc	status,2,c
  9065  0018C0  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
  9066  0018C2  B4D8               	btfsc	status,2,c
  9067                           
  9068                           ; BSR set to: 0
  9069                           
  9070                           ; BSR set to: 0
  9071                           ;	Return value of i2_memcpy is never used
  9072  0018C4  0012               	return	
  9073  0018C6  D7E2               	goto	i2l4983
  9074  0018C8                     __end_ofi2_memcpy:
  9075                           	opt stack 0
  9076  0000                     pclatu	equ	0xFFB
  9077                           pclath	equ	0xFFA
  9078                           tblptru	equ	0xFF8
  9079                           tblptrh	equ	0xFF7
  9080                           tblptrl	equ	0xFF6
  9081                           tablat	equ	0xFF5
  9082                           prodh	equ	0xFF4
  9083                           prodl	equ	0xFF3
  9084                           intcon	equ	0xFF2
  9085                           intcon2	equ	0xFF1
  9086                           postinc0	equ	0xFEE
  9087                           fsr0h	equ	0xFEA
  9088                           fsr0l	equ	0xFE9
  9089                           wreg	equ	0xFE8
  9090                           indf1	equ	0xFE7
  9091                           postdec1	equ	0xFE5
  9092                           fsr1h	equ	0xFE2
  9093                           fsr1l	equ	0xFE1
  9094                           bsr	equ	0xFE0
  9095                           indf2	equ	0xFDF
  9096                           postinc2	equ	0xFDE
  9097                           postdec2	equ	0xFDD
  9098                           fsr2h	equ	0xFDA
  9099                           fsr2l	equ	0xFD9
  9100                           status	equ	0xFD8
  9101                           pclatu	equ	0xFFB
  9102                           pclath	equ	0xFFA
  9103                           tblptru	equ	0xFF8
  9104                           tblptrh	equ	0xFF7
  9105                           tblptrl	equ	0xFF6
  9106                           tablat	equ	0xFF5
  9107                           prodh	equ	0xFF4
  9108                           prodl	equ	0xFF3
  9109                           intcon	equ	0xFF2
  9110                           intcon2	equ	0xFF1
  9111                           postinc0	equ	0xFEE
  9112                           fsr0h	equ	0xFEA
  9113                           fsr0l	equ	0xFE9
  9114                           wreg	equ	0xFE8
  9115                           indf1	equ	0xFE7
  9116                           postdec1	equ	0xFE5
  9117                           fsr1h	equ	0xFE2
  9118                           fsr1l	equ	0xFE1
  9119                           bsr	equ	0xFE0
  9120                           indf2	equ	0xFDF
  9121                           postinc2	equ	0xFDE
  9122                           postdec2	equ	0xFDD
  9123                           fsr2h	equ	0xFDA
  9124                           fsr2l	equ	0xFD9
  9125                           status	equ	0xFD8
  9126                           
  9127                           	psect	param0
  9128  0000                     pclatu	equ	0xFFB
  9129                           pclath	equ	0xFFA
  9130                           tblptru	equ	0xFF8
  9131                           tblptrh	equ	0xFF7
  9132                           tblptrl	equ	0xFF6
  9133                           tablat	equ	0xFF5
  9134                           prodh	equ	0xFF4
  9135                           prodl	equ	0xFF3
  9136                           intcon	equ	0xFF2
  9137                           intcon2	equ	0xFF1
  9138                           postinc0	equ	0xFEE
  9139                           fsr0h	equ	0xFEA
  9140                           fsr0l	equ	0xFE9
  9141                           wreg	equ	0xFE8
  9142                           indf1	equ	0xFE7
  9143                           postdec1	equ	0xFE5
  9144                           fsr1h	equ	0xFE2
  9145                           fsr1l	equ	0xFE1
  9146                           bsr	equ	0xFE0
  9147                           indf2	equ	0xFDF
  9148                           postinc2	equ	0xFDE
  9149                           postdec2	equ	0xFDD
  9150                           fsr2h	equ	0xFDA
  9151                           fsr2l	equ	0xFD9
  9152                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        39
    BSS         302
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     47      98
    BANK0           128     41      97
    BANK1           256    122     252
    BANK2           256      0     108
    BANK3           256      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    i2c_q	PTR struct i2c_queue size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK1[11]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK1[11]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> main@msgbuffer(BANK1[11]), main@t0thread_data(BANK1[2]), main@t1thread_data(BANK1[2]), main@uc(BANK1[28]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> i2c_int_handler@error_buf(COMRAM[3]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> main@msgbuffer(BANK1[11]), main@t0thread_data(BANK1[2]), main@t1thread_data(BANK1[2]), main@uc(BANK1[28]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> i2c_int_handler@error_buf(COMRAM[3]), NULL(NULL[0]), 

    isEmpty@queue.elements	PTR unsigned char  size(2) Largest target is 0

    getQueue@queue.elements	PTR unsigned char  size(2) Largest target is 0

    putQueue@queue.elements	PTR unsigned char  size(2) Largest target is 0

    S188i2c_queue$elements	PTR unsigned char  size(2) Largest target is 0

    createQueue@queue.elements	PTR unsigned char  size(2) Largest target is 0

    my_i2c_master@ic_ptr	PTR struct __i2c_master_comm size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__motorTickValue	PTR unsigned char  size(2) Largest target is 10
		 -> motorArrayRight(COMRAM[10]), motorArrayLeft(COMRAM[10]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> main@msgbuffer(BANK1[11]), main@uc(BANK1[28]), i2c_int_handler@error_buf(COMRAM[3]), NULL(NULL[0]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK1[11]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), NULL(NULL[0]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> main@msgbuffer(BANK1[11]), main@t0thread_data(BANK1[2]), main@t1thread_data(BANK1[2]), main@uc(BANK1[28]), 
		 -> i2c_int_handler@error_buf(COMRAM[3]), NULL(NULL[0]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), NULL(NULL[0]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 28
		 -> main@uc(BANK1[28]), 

    uart_send_data@data	PTR unsigned char  size(2) Largest target is 11
		 -> right2(BANK0[1]), left2(BANK0[1]), back(BANK0[2]), right(BANK0[2]), 
		 -> forwardHalf(BANK0[2]), left(BANK0[2]), stop(BANK0[1]), forwardSlow(BANK0[2]), 
		 -> uart_sendthread@buf(BANK1[11]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 28
		 -> main@uc(BANK1[28]), NULL(NULL[0]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    init_timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    uart_sendthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_send_int_handler->_WriteUSART
    _uart_recv_int_handler->_uart_recv_state
    i1_ToMainLow_sendmsg->i1_send_msg
    _uart_recv_state->i1_ToMainHigh_sendmsg
    i1_ToMainHigh_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _timer1_int_handler->_ReadTimer1
    _timer1_int_handler->_WriteTimer1

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_master_handler
    _timer0_int_handler->_WriteTimer0
    _i2c_master_handler->i2_ToMainHigh_sendmsg
    i2_ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer0_lthread
    _main->_timer1_lthread
    _uart_sendthread->_uart_send_data
    _uart_lthread->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->_send_msg
    _timer1_lthread->_FromMainHigh_sendmsg
    _timer0_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                86    86      0   30066
                                             36 BANK1     86    86      0
                         _OpenTimer0
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                  _ToMainLow_sendmsg
                            ___awdiv
              _block_on_To_msgqueues
                  _enable_interrupts
               _i2c_configure_master
                    _i2c_master_recv
                           _init_i2c
                        _init_queues
                _init_timer0_lthread
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
                    _uart_sendthread
 ---------------------------------------------------------------------------------
 (1) _uart_sendthread                                     20    15      5    5032
                                              8 BANK1     20    15      5
                     _uart_send_data
 ---------------------------------------------------------------------------------
 (2) _uart_send_data                                       8     4      4    4535
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         9     1      8    3720
                                             26 BANK1      9     1      8
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (2) _ToMainHigh_sendmsg                                   4     1      3    3226
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    3781
                                             26 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8    3781
                                             26 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     372
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2974
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2     108
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2     108
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer0_lthread                                  2     0      2     108
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     500
                                              4 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     500
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2     108
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_master_recv                                      4     2      2     555
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_master                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     401
                                              6 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     370
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     599
                                              0 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_sendmsg                                    4     1      3    2904
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2573
                                             10 BANK1     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2851
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2851
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2604
                                             10 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     867
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     387
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    5953
                                             30 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
              _uart_send_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_send_int_handler                                1     1      0      22
                                              1 COMRAM     1     1      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (7) _WriteUSART                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    5803
                                             29 COMRAM     1     1      0
                          _ReadUSART
                    _uart_recv_state
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) i1_ToMainLow_sendmsg                                  4     1      3    2784
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (7) _uart_recv_state                                      3     3      0    3004
                                             26 COMRAM     3     3      0
                    _i2c_master_busy
               i1_ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (8) i1_ToMainHigh_sendmsg                                 4     1      3    2784
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2475
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (8) _i2c_master_busy                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0     128
                                              4 COMRAM     3     3      0
                         _ReadTimer1
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0    3159
                                             27 BANK0     14    14      0
                 _i2c_master_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (12) _timer0_int_handler                                  7     7      0     132
                                              4 BANK0      1     1      0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (13) _WriteTimer0                                         4     2      2     132
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (12) _i2c_master_handler                                  1     1      0    3027
                                             26 BANK0      1     1      0
               i2_ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (13) i2_ToMainHigh_sendmsg                                4     1      3    3027
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    2547
                                             10 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     796
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_sendmsg
     _send_msg
       _memcpy
   ___awdiv
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_master
   _i2c_master_recv
   _init_i2c
   _init_queues
     _init_queue
   _init_timer0_lthread
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread
     _ToMainHigh_sendmsg
       _send_msg
         _memcpy
   _uart_sendthread
     _uart_send_data

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _uart_recv_state
       _i2c_master_busy
       i1_ToMainHigh_sendmsg
         i1_send_msg
           i1_memcpy
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_send_int_handler
     _WriteUSART

 _InterruptHandlerHigh (ROOT)
   _i2c_master_handler
     i2_ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
   _timer0_int_handler
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      6C       8       42.2%
BITBANK1           100      0       0       5        0.0%
BANK1              100     7A      FC       6       98.4%
BITBANK0            80      0       0       3        0.0%
BANK0               80     29      61       4       75.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2F      62       1       77.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     22B      11        0.0%
DATA                 0      0     22B      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Mar 24 17:18:24 2014

              main@uthread_data 01A9                               _i 00D4                               _w 0046  
      _MQ_Main_Willing_to_block 00DC           ?i2_ToMainHigh_sendmsg 0096                     _SSPSTATbits 000FC7  
     __end_of_ToMainLow_recvmsg 1994                    ___awdiv@sign 0188                              bsr 000FE0  
     __end_of_ToMainLow_sendmsg 1B2C                    __CFG_CP0$OFF 000000                             l386 02C0  
                           l821 131C                             l825 133C                             l826 133E  
                           l827 134C                             l772 1C1C                             l828 134E  
                           l773 1C1E            __size_of_WriteTimer0 0012            __size_of_WriteTimer1 0012  
                _FromMainLow_MQ 0236                             wreg 000FE8                    __CFG_IESO$ON 000000  
                  ?_in_high_int 0182                ??_init_uart_recv 0184     __size_of_i2c_master_handler 0332  
               ReadTimer1@timer 0003                     main@average 01AC                            l1065 1CD6  
                          l1377 13FA                            l4053 122E                            l4063 0FDA  
                          l4313 0C88                            l4059 0F8A                            l4405 18FE  
                          l4261 154A                            l4329 0D4E                            l4521 026C  
                          l4435 10DE                            l4427 10AC                            l4419 107A  
                          l4507 01BA                            l4293 182E                            l4541 0338  
                          l4525 02A0                            l4517 0250                            l4509 020C  
                          l4279 0DAE                            l4527 02BA                            l4449 1942  
                          l4537 0302                            l4553 03DC                            l4529 02C6  
                          l4299 1852                            l4901 0B2C                            l4397 18DC  
                          l4565 0470                            l4573 0546                            l4557 040C  
                          l4567 04C2                            l4559 0432                            l4913 0B86  
                          l4569 04F4                            l4595 131E                            l4587 1308  
                          l4915 0B98                            l4907 0B5A                            l4499 0178  
                          l4933 0C12                            l4925 0BE6                            l4917 0BA0  
                          l4941 1398                            l4943 13AA                            l4929 0BFA  
                          l4945 13B2                            l4949 13E6                            _LATB 000F8A  
               _motorArrayRight 0051                            u3510 0214                            u3516 0216  
                          u3470 10EC                            u4177 1CD8                            u3476 10EE  
                          i1l99 0A0E                 _FromMainHigh_MQ 0200                   __CFG_FCMEN$ON 000000  
                          _add1 003D                            _back 00BE                            _data 003E  
        ?_block_on_To_msgqueues 0001                            _main 00C6                            _left 00C4  
                          _mode 0040                            _slew 0042                            fsr0h 000FEA  
                          fsr1h 000FE2                            fsr0l 000FE9                            fsr2h 000FDA  
                          indf1 000FE7                            fsr1l 000FE1                            indf2 000FDF  
                          fsr2l 000FD9                            _stop 00DE                     main@msgtype 01C2  
                    i1_send_msg 1108                            pclat 000FFA                            prodh 000FF4  
                          prodl 000FF3                            start 00C2                   __CFG_FOSC2$ON 000000  
                    i2_send_msg 0E56   __size_of_i2c_configure_master 0024       ToMainHigh_recvmsg@msgtype 019A  
              ??_uart_send_data 0186                  send_msg@length 018E     __size_of_timer0_int_handler 0036  
                   _Delay1KTCYx 1CD2                           ?_main 0001                 __end_of___awdiv 0C1C  
  __size_ofi1_ToMainLow_sendmsg 0026                           _T0CON 000FD5                 ___awdiv@divisor 0184  
                         i1l106 0A8A                           i1l503 007C                 __end_of___lwmod 1404  
                    i1memcpy@d1 0001                           i1l839 1CC2                           i2l580 05FE  
                         i2l574 058C                           i2l584 069C                      i1memcpy@s1 0003  
                         i2l593 0792                           i2l595 07A4                           i2l596 07B4  
                         i2l589 06EA                 ___awdiv@counter 0187                           _RCREG 000FAE  
                         _RCSTA 000FAB                           _TMR0H 000FD7                           _TMR1H 000FCF  
                         _TMR0L 000FD6                           _TMR1L 000FCE                           _SPBRG 000FAF  
                         _TRISB 000F93                           _TXREG 000FAD                           _TXSTA 000FAC  
                  main@msgCount 01AB                           _i2c_q 0030                      i2memcpy@d1 0080  
                    i2memcpy@s1 0082                    ?_init_queues 0001                 __end_of_in_main 1952  
                         _left2 00C8    __end_ofi1_ToMainHigh_sendmsg 1C6E    i2c_master_recv@slave_address 0183  
    ToMainLow_recvmsg@maxlength 019E                           _right 00C6                 _timer2_extender 0045  
                         main@i 01BA         timer0_lthread@msgbuffer 01A2                           tablat 000FF5  
                         status 000FD8        i2ToMainHigh_sendmsg@data 0097                __end_ofi1_memcpy 1A16  
              __end_ofi2_memcpy 18C8               ??_uart_recv_state 001B                  WriteUSART@data 0001  
               __initialization 1488          ??i2_ToMainHigh_sendmsg 0099                    __end_of_main 0566  
                    _ReadTimer1 1D5A     __size_of_timer1_int_handler 0034      __size_of_ToMainLow_recvmsg 0042  
    __size_of_ToMainLow_sendmsg 0036   __size_of_FromMainHigh_sendmsg 0036               ??_uart_sendthread 018F  
                        ??_main 01A6                 send_msg@msgtype 018F                   __activetblptr 000002  
               send_msg@tlength 0193                          _ADCON0 000FC2                          _ADCON1 000FC1  
                        _ADCON2 000FC0                ___awdiv@dividend 0182         ??_uart_recv_int_handler 001E  
      uart_sendthread@msgbuffer 018C                          i1l4003 0070                          i1l2933 1CFA  
                        i1l2947 1D0C                          i1l3941 089E                          i1l3919 1140  
                        i1l3951 08E4                          i1l3961 09B6                          i1l3945 08B8  
                    _OpenTimer0 1BF8                          i1l3971 0A58                          i1l3885 1A04  
                        i1l3957 0932                          i1l3949 08D2                  __CFG_WDTEN$OFF 000000  
                        i1l3879 19E8                          i1l3975 0A7A                          i1l3967 0A40  
                        i1l3959 0964                          i1l3985 1BD8                          i1l3979 0AAC  
                        i1l3997 0066                          i2l4713 06AC                          i2l4727 06FE  
                        i2l4719 06C4                          i2l4753 083C                          i2l4745 07C4  
                        i2l4681 144C                          i2l4673 143E                          i2l4749 07F2  
                        i2l4685 0568                          i2l4695 05D2                          i2l4759 0856  
                        i2l4699 05F0                          i2l4965 0EB2                          i2l4983 188C  
                        i2l4989 18B0              __size_of_ReadUSART 001E                          _OSCCON 000FD3  
                        _SPBRGH 000FB0                          _SSPADD 000FC8                          _SSPBUF 000FC9  
                   ?i1_send_msg 000B              timer0_lthread@tptr 019C                     ?i2_send_msg 008A  
                __CFG_XINST$OFF 000000              __size_of_OpenUSART 0092                       ??___awdiv 0186  
               _i2c_master_busy 1CE8                 _i2c_master_recv 1256                OpenTimer0@config 0182  
                        _ic_ptr 00DF                       ??___lwmod 0186                   main@msgbuffer 01AE  
              __end_of_init_i2c 17AC                          _length 003F                          _memcpy 180C  
                        clear_0 148E                          clear_1 149A                          clear_2 14A6  
                        clear_3 14B2                ___awdiv@quotient 0189                          _right2 00C9  
                        _uc_ptr 0061                          main@ic 01E0                          _status 0043  
                        main@uc 01C4                __end_of_recv_msg 0D52                       ??_in_main 0188  
              __end_of_send_msg 0E56                    __pdataCOMRAM 005B                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                     init_queue@i 0185  
      ToMainLow_recvmsg@msgtype 019A            __size_of_in_high_int 0012                 __CFG_FOSC$HSPLL 000000  
                    __accesstop 0080         __end_of__initialization 14F8      __end_of_ToMainHigh_recvmsg 19D6  
    __end_of_ToMainHigh_sendmsg 1A8A  __size_of_uart_send_int_handler 0060     __end_of_init_timer0_lthread 1D36  
 __end_of_uart_send_int_handler 180C             uart_recv_state@byte 001D     __end_of_init_timer1_lthread 1D24  
                    _WriteUSART 1CFE                  __pcstackCOMRAM 0001                    __pidataBANK0 1C92  
                   ?_ReadTimer1 0001              __size_of_check_msg 0036            i1_ToMainHigh_sendmsg 1C48  
             __end_of_ReadUSART 1CD2             __size_ofi1_send_msg 00AA                       ?i1_memcpy 0001  
 __size_of_InterruptHandlerHigh 1480     __end_of_InterruptHandlerLow 00C2                       ?i2_memcpy 0080  
                 _ToMainHigh_MQ 0116             __size_ofi2_send_msg 0104            timer1_lthread@length 01A0  
                 ReadUSART@data 0001               __end_of_OpenUSART 137A                   check_msg@qptr 0182  
          timer1_lthread@retval 01A5         ??_block_on_To_msgqueues 0188            __size_of_init_queues 0072  
                    __pbssBANK0 00CA                      __pbssBANK1 0100                      __pbssBANK2 0200  
                   ?_OpenTimer0 0001                      __pnvCOMRAM 0061             i1_ToMainLow_sendmsg 1C22  
       __end_of_i2c_master_busy 1CFE         __end_of_i2c_master_recv 12E8              timer1_lthread@tptr 019C  
         ?i1_ToMainHigh_sendmsg 0017               recv_msg@maxlength 018E                 recv_msg@msgtype 018F  
               recv_msg@tlength 0196                    ?_Delay1KTCYx 0001                WriteTimer0@timer 0082  
                       ?_memcpy 0182                WriteTimer1@timer 0003                   ??_WriteTimer0 0082  
                 ??_WriteTimer1 0003         __size_of_timer0_lthread 0072            ?i1_ToMainLow_sendmsg 0017  
       __size_of_timer1_lthread 0072      __end_of_i2c_master_handler 0898    __end_of_i2c_configure_master 1C92  
                    ??i1_memcpy 0007                      ??i2_memcpy 0086                i1send_msg@length 000D  
                       _SSP1ADD 000FC8                         _SSPCON1 000FC6                         _SSPCON2 000FC5  
               _uart_recv_state 0898                         _SSPSTAT 000FC7             __size_of_ReadTimer1 0012  
             __end_of_check_msg 1AF6                       ?_init_i2c 0182                       ?_recv_msg 018C  
                    _in_low_int 18C8                 _uart_sendthread 11B2                         __Hparam 0000  
                     ?_send_msg 018C                         __Lparam 0000      __end_of_timer0_int_handler 1B62  
                   ?_WriteUSART 0001                init_uart_recv@uc 0182                         ___awdiv 0AE6  
                       ___lwmod 137A                 __CFG_STVREN$OFF 000000                         __pcinit 1488  
               __size_of_memcpy 005E                      _init_queue 1502                         __ramtop 0400  
         ??i1_ToMainLow_sendmsg 001A             __size_of_OpenTimer0 002A                         __ptext0 00C6  
                       __ptext1 11B2                         __ptext2 0F5A                         __ptext3 16D2  
                       __ptext4 1A54                         __ptext5 157C                         __ptext6 15EE  
                       __ptext7 137A                         __ptext8 1A8A                         __ptext9 1A16  
                     _T0CONbits 000FD5                         _in_main 190E             __end_of_WriteTimer0 1D7E  
           __end_of_WriteTimer1 1D5A                  main@movingtest 01B9                  __pintcode_body 1404  
          end_of_initialization 14F8         timer1_lthread@msgbuffer 01A2    __end_of_FromMainHigh_sendmsg 1AC0  
__size_of_uart_recv_int_handler 002C      FromMainHigh_sendmsg@length 019B                         memcpy@d 0188  
                       memcpy@n 0186                         memcpy@s 018A        i1ToMainHigh_sendmsg@data 0018  
 __end_of_uart_recv_int_handler 1BF8                      ??_init_i2c 0184                   __Lmediumconst 0000  
                       int_func 1404                    ??i1_send_msg 0011                   ?_uart_lthread 019C  
       __size_of_init_uart_recv 003E                ?_i2c_master_busy 0001                ?_i2c_master_recv 0182  
                    ??_recv_msg 0193                    ??i2_send_msg 0090                      ??_send_msg 0192  
    __end_of_timer1_int_handler 1BCC                       _RCSTAbits 000FAB          ??i1_ToMainHigh_sendmsg 001A  
                    _ticks_left 0038                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE       ToMainHigh_sendmsg@msgtype 0198  
 __size_ofi2_ToMainHigh_sendmsg 0036         __end_of_uart_recv_state 0AE6         __size_of_uart_send_data 00FC  
            __end_ofi1_send_msg 11B2     FromMainHigh_sendmsg@msgtype 0198                       _TRISCbits 000F94  
                     _TRISDbits 000F95              __end_ofi2_send_msg 0F5A             __size_of_WriteUSART 0014  
       __end_of_uart_sendthread 1256        timer1_int_handler@result 0006                  ??_uart_lthread 01A4  
                _motorArrayLeft 0047                       _TXSTAbits 000FAC                      main@length 01C3  
                   ?_in_low_int 0184           timer0_lthread@msgtype 019E            _i2c_configure_master 1C6E  
                  ??_ReadTimer1 0003              _ToMainHigh_recvmsg 1994                       i1memcpy@d 0007  
            _ToMainHigh_sendmsg 1A54                       i1memcpy@n 0005                       i1memcpy@s 0009  
                 __pidataCOMRAM 1D8A                  _timer0_lthread 15EE                     ?_init_queue 0182  
                     i2memcpy@d 0086                     _WriteTimer0 1D6C                     _WriteTimer1 1D48  
                     i2memcpy@n 0084                       i2memcpy@s 0088                  _timer1_lthread 157C  
                __end_of_memcpy 186A               _enable_interrupts 1D7E            __size_of_Delay1KTCYx 0016  
           ?_ToMainHigh_recvmsg 019A             ?_ToMainHigh_sendmsg 0198         i1ToMainLow_sendmsg@data 0018  
            ?_enable_interrupts 0001             start_initialization 1488                   ??_in_high_int 0184  
                     _ReadUSART 1CB4               __size_ofi1_memcpy 0040     i1ToMainHigh_sendmsg@msgtype 0017  
             __size_ofi2_memcpy 005E             ??_enable_interrupts 0182                    ??_OpenTimer0 0182  
__size_of_block_on_To_msgqueues 00B2              __end_of_ReadTimer1 1D6C   __end_of_block_on_To_msgqueues 1108  
                     _OpenUSART 12E8    __end_of_InterruptHandlerHigh 1488                      init_i2c@ic 0182  
          ??_ToMainHigh_recvmsg 019E            ??_ToMainHigh_sendmsg 019B           ?_i2c_configure_master 0001  
         _uart_send_int_handler 17AC          __end_of_timer0_lthread 1660                     __pdataBANK0 00A9  
        __end_of_timer1_lthread 15EE       __end_of_enable_interrupts 1D8A                        ??_memcpy 0188  
         timer1_lthread@msgtype 019E    __size_of_init_timer0_lthread 0012            _FromMainHigh_sendmsg 1A8A  
  __size_of_init_timer1_lthread 0012              __end_of_OpenTimer0 1C22                ?_uart_recv_state 0001  
                   __pbssCOMRAM 0030                      ?_ReadUSART 0001                   ??_init_queues 0186  
                 __pcstackBANK0 0080                   __pcstackBANK1 0182             __size_of_in_low_int 0046  
           __CFG_CCP2MX$DEFAULT 000000           uart_sendthread@length 018A                 Delay1KTCYx@unit 0182  
      ToMainLow_sendmsg@msgtype 0198                ?_uart_sendthread 018A    __size_of_InterruptHandlerLow 00AA  
           __end_of_in_high_int 1D48                      ?_OpenUSART 0182              _i2c_master_handler 0566  
         ToMainLow_recvmsg@data 019C                    _ToMainLow_MQ 014C             __size_of_init_queue 007A  
                _init_uart_recv 1A16                       _check_msg 1AC0                       __pnvBANK0 00DF  
             __size_of_init_i2c 006A                    recv_msg@data 0191                    ??_WriteUSART 0001  
           ?_i2c_master_handler 0001                    recv_msg@qmsg 0198                    recv_msg@slot 0195  
                  recv_msg@qptr 018C      i2ToMainHigh_sendmsg@length 0099               __size_of_recv_msg 0136  
                     __pintcode 0008               __size_of_send_msg 0104                        ?___awdiv 0182  
               ?_timer0_lthread 019C                        ?___lwmod 0182                 ?_timer1_lthread 019C  
         ?_FromMainHigh_sendmsg 0198                     __pintcodelo 0018          ToMainHigh_recvmsg@data 019C  
          __end_of_uart_lthread 1742                        ?_in_main 0186                  _uart_send_data 0F5A  
             WriteTimer0@timer0 0080              _timer0_int_handler 1B2C               WriteTimer1@timer1 0001  
    i1ToMainLow_sendmsg@msgtype 0017                        _I2C_Recv 0100                        _I2C_Send 00A9  
           uart_lthread@msgtype 019E         init_timer0_lthread@tptr 0182            ??_i2c_master_handler 009A  
         ToMainLow_sendmsg@data 0199             ?_timer0_int_handler 0001              __end_of_WriteUSART 1D12  
              uart_lthread@uptr 019C          __end_of_init_uart_recv 1A54             __end_of_init_queues 16D2  
         i2c_master_recv@length 0185                        _LATBbits 000F8A                        _LATDbits 000F8C  
        ??_i2c_configure_master 0182                      ?_check_msg 0182                        _IPR1bits 000F9F  
                      _PIE1bits 000F9D                        i1u140_20 1BA0                        i1u140_26 1BA2  
                     _semaphore 0034                        _PIR1bits 000F9E                 main@length_1453 01BC  
        ?_uart_send_int_handler 0001          ToMainHigh_sendmsg@data 0199                        i2u297_40 1B34  
                      i2u297_46 1B36              uart_send_data@data 0182     __end_ofi1_ToMainLow_sendmsg 1C48  
                      _RCONbits 000FD0                       _motorSend 00CA                __CFG_WDTPS$32768 000000  
            uart_send_data@size 0184                uart_sendthread@i 019C                        _SSP1CON1 000FC6  
                      _SSP1CON2 000FC5            ??_timer0_int_handler 0084      __size_of_enable_interrupts 000C  
             i1send_msg@msgtype 000E               i1send_msg@tlength 0012          __end_of_uart_send_data 1056  
                    _ADCON0bits 000FC2            timer0_lthread@length 01A0              _timer1_int_handler 1B98  
                      i1_memcpy 19D6            _InterruptHandlerHigh 0008                     ??_ReadUSART 0001  
                      i2_memcpy 186A            timer0_lthread@retval 01A5                     _in_high_int 1D36  
                  send_msg@data 0190                       _sync_mode 0044                    send_msg@qmsg 0196  
                  send_msg@slot 0195                    send_msg@qptr 018C    __end_ofi2_ToMainHigh_sendmsg 1B98  
                 _ticks_right_C 00D8                     _INTCON2bits 000FF1           uart_lthread@msgbuffer 01A2  
                     copy_data0 14CC                       copy_data1 14EC             ?_timer1_int_handler 0001  
               _i2cMstrMsgState 0115                 ?_init_uart_recv 0182                     ??_OpenUSART 0184  
               OpenUSART@config 0187                   _slave_address 0041                        __Hparam0 0000  
         _uart_recv_int_handler 1BCC                    ??_in_low_int 0186                        __Lparam0 0000  
        ??_FromMainHigh_sendmsg 019B            ??_timer1_int_handler 0005   __size_ofi1_ToMainHigh_sendmsg 0026  
              __size_of___awdiv 0136        __size_of_i2c_master_busy 0016        __size_of_i2c_master_recv 0092  
              __size_of___lwmod 008A                    ??_init_queue 0184                    ?_WriteTimer0 0080  
                  ?_WriteTimer1 0001        FromMainHigh_sendmsg@data 0199                 ?_uart_send_data 0182  
       ToMainLow_sendmsg@length 019B            uart_sendthread@count 018E               main@t0thread_data 01C0  
         ?_InterruptHandlerHigh 0001                __size_of_in_main 0044                     _forwardHalf 00C0  
                   _forwardFull 005B               i2send_msg@msgtype 008D     ToMainHigh_recvmsg@maxlength 019E  
                   _forwardSlow 00C2               i2send_msg@tlength 0091         init_timer1_lthread@tptr 0182  
                   _init_queues 1660              __end_of_in_low_int 190E             my_i2c_master@ic_ptr 00DA  
                      __ptext10 1D12                        __ptext11 1D24                        __ptext20 18C8  
                      __ptext12 1660                        __ptext21 1D36                        __ptext13 1502  
                      __ptext30 180C                        __ptext22 1AC0                        __ptext14 1742  
                      __ptext31 12E8                        __ptext23 1CD2                        __ptext15 1256  
                      __ptext40 1108                        __ptext32 1BF8                        __ptext24 0AE6  
                      __ptext16 1C6E                        __ptext41 19D6                        __ptext25 1AF6  
                      __ptext17 1D7E                        __ptext50 0566                        __ptext42 1CE8  
                      __ptext34 17AC                        __ptext26 0D52                        __ptext18 1056  
                      __ptext51 1B62                        __ptext43 1CB4                        __ptext35 1CFE  
                      __ptext27 1952                        __ptext19 190E                        __ptext52 0E56  
                      __ptext44 1B98                        __ptext36 1BCC                        __ptext28 1994  
                      __ptext53 186A                        __ptext45 1D48                        __ptext37 1C22  
                      __ptext29 0C1C                        __ptext46 1D5A                        __ptext38 0898  
                      __ptext39 1C48                        __ptext48 1B2C                        __ptext49 1D6C  
                  _SSP1CON1bits 000FC6                    _SSP1CON2bits 000FC5                  i1send_msg@data 000F  
               uart_send_data@i 0188       i1ToMainLow_sendmsg@length 001A                  i1send_msg@qmsg 0015  
                i1send_msg@slot 0014                  i1send_msg@qptr 000B              uart_lthread@length 01A0  
           _init_timer0_lthread 1D24                        _init_i2c 1742             _init_timer1_lthread 1D12  
                 __size_of_main 04A0               main@t1thread_data 01BE                     ??_check_msg 0184  
            __end_of_init_queue 157C                        _recv_msg 0C1C                        _send_msg 0D52  
                init_queue@qptr 0182           __size_of_uart_lthread 0070                   ??_Delay1KTCYx 0182  
          ?_init_timer0_lthread 0182                    _SSP1STATbits 000FC7             _InterruptHandlerLow 0018  
                  _ticks_left_C 00D6            ?_init_timer1_lthread 0182                     _OSCTUNEbits 000F9B  
                    _INTCONbits 000FF2                  OpenUSART@spbrg 0182                        memcpy@d1 0182  
                      memcpy@s1 0184                i2send_msg@length 008C                        intlevel1 0000  
                      intlevel2 0000            ?_InterruptHandlerLow 0001                    _sensor_count 0036  
                  _sensor_value 005F                ___lwmod@dividend 0182          ?_uart_recv_int_handler 0001  
                  _uart_lthread 16D2           _block_on_To_msgqueues 1056                ??_timer0_lthread 01A4  
   __size_of_ToMainHigh_recvmsg 0042             i2c_master_recv@data 0182     __size_of_ToMainHigh_sendmsg 0036  
                    _OSCCONbits 000FD3                ??_timer1_lthread 01A4     i2ToMainHigh_sendmsg@msgtype 0096  
      ToMainHigh_sendmsg@length 019B                     _ticks_right 003A           ??_init_timer0_lthread 0184  
          i2_ToMainHigh_sendmsg 1B62           ??_init_timer1_lthread 0184                     _motor_index 005D  
        ??_InterruptHandlerHigh 009B               _ToMainLow_recvmsg 1952              uart_sendthread@buf 0191  
             _ToMainLow_sendmsg 1AF6                     _motor_value 0032                     _motor_state 00DD  
            main@last_reg_recvd 01A8                 ___lwmod@divisor 0184              ?_ToMainLow_recvmsg 019A  
           __end_of_Delay1KTCYx 1CE8                 ___lwmod@counter 0187              ?_ToMainLow_sendmsg 0198  
             ??_i2c_master_busy 0001               ??_i2c_master_recv 0184                     _SSPCON1bits 000FC6  
                   _SSPCON2bits 000FC5                  i2send_msg@data 008E           ??_InterruptHandlerLow 001F  
           ??_ToMainLow_recvmsg 019E                  i2send_msg@qmsg 0094                  i2send_msg@slot 0093  
                i2send_msg@qptr 008A             ??_ToMainLow_sendmsg 019B        __size_of_uart_recv_state 024E  
    i1ToMainHigh_sendmsg@length 001A         ??_uart_send_int_handler 0002                    _USART_Status 003C  
      __size_of_uart_sendthread 00A4  

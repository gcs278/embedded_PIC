

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Sat Feb  8 22:36:58 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           	psect	idataBANK0
    80  001CF2                     __pidataBANK0:
    81                           	opt stack 0
    82                           
    83                           ;initializer for _ADCValue
    84  001CF2  0002               	dw	2
    85  0000                     _ADCON0	set	4034
    86  0000                     _ADCON0bits	set	4034
    87  0000                     _ADCON1	set	4033
    88  0000                     _ADCON2	set	4032
    89  0000                     _ADRESH	set	4036
    90  0000                     _ADRESL	set	4035
    91  0000                     _INTCONbits	set	4082
    92  0000                     _IPR1bits	set	3999
    93  0000                     _LATB	set	3978
    94  0000                     _LATBbits	set	3978
    95  0000                     _OSCCON	set	4051
    96  0000                     _OSCCONbits	set	4051
    97  0000                     _OSCTUNEbits	set	3995
    98  0000                     _PIE1bits	set	3997
    99  0000                     _PIR1bits	set	3998
   100  0000                     _RCONbits	set	4048
   101  0000                     _RCREG	set	4014
   102  0000                     _RCSTA	set	4011
   103  0000                     _RCSTAbits	set	4011
   104  0000                     _SPBRG	set	4015
   105  0000                     _SPBRGH	set	4016
   106  0000                     _SSPADD	set	4040
   107  0000                     _SSPBUF	set	4041
   108  0000                     _SSPCON1	set	4038
   109  0000                     _SSPCON1bits	set	4038
   110  0000                     _SSPCON2	set	4037
   111  0000                     _SSPCON2bits	set	4037
   112  0000                     _SSPSTAT	set	4039
   113  0000                     _SSPSTATbits	set	4039
   114  0000                     _T0CON	set	4053
   115  0000                     _T0CONbits	set	4053
   116  0000                     _TMR0H	set	4055
   117  0000                     _TMR0L	set	4054
   118  0000                     _TMR1H	set	4047
   119  0000                     _TMR1L	set	4046
   120  0000                     _TRISB	set	3987
   121  0000                     _TRISCbits	set	3988
   122  0000                     _TXSTA	set	4012
   123  0000                     _TXSTAbits	set	4012
   124                           
   125                           	psect	nvCOMRAM
   126  00004D                     __pnvCOMRAM:
   127                           	opt stack 0
   128  00004D                     _uc_ptr:
   129                           	opt stack 0
   130  00004D                     	ds	2
   131                           
   132                           	psect	nvBANK0
   133  0000CD                     __pnvBANK0:
   134                           	opt stack 0
   135  0000CD                     _ic_ptr:
   136                           	opt stack 0
   137  0000CD                     	ds	2
   138                           
   139                           ; #config settings
   140  0000                     
   141                           	psect	cinit
   142  0019D8                     __pcinit:
   143                           	opt stack 0
   144  0019D8                     start_initialization:
   145                           	opt stack 0
   146  0019D8                     __initialization:
   147                           	opt stack 0
   148                           
   149                           ; Clear objects allocated to BANK2 (54 bytes)
   150  0019D8  EE02  F000         	lfsr	0,__pbssBANK2
   151  0019DC  0E36               	movlw	54
   152  0019DE                     clear_0:
   153  0019DE  6AEE               	clrf	postinc0,c
   154  0019E0  06E8               	decf	wreg,f,c
   155  0019E2  E1FD               	bnz	clear_0
   156                           
   157                           ; Clear objects allocated to BANK1 (162 bytes)
   158  0019E4  EE01  F000         	lfsr	0,__pbssBANK1
   159  0019E8  0EA2               	movlw	162
   160  0019EA                     clear_1:
   161  0019EA  6AEE               	clrf	postinc0,c
   162  0019EC  06E8               	decf	wreg,f,c
   163  0019EE  E1FD               	bnz	clear_1
   164                           
   165                           ; Clear objects allocated to COMRAM (2 bytes)
   166  0019F0  6A50               	clrf	(__pbssCOMRAM+1)& (0+255),c
   167  0019F2  6A4F               	clrf	__pbssCOMRAM& (0+255),c
   168                           
   169                           ; Initialize objects allocated to BANK0 (2 bytes)
   170                           ; load TBLPTR registers with __pidataBANK0
   171  0019F4  0EF2               	movlw	low __pidataBANK0
   172  0019F6  6EF6               	movwf	tblptrl,c
   173  0019F8  0E1C               	movlw	high __pidataBANK0
   174  0019FA  6EF7               	movwf	tblptrh,c
   175  0019FC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   176  0019FE  6EF8               	movwf	tblptru,c
   177  001A00  0009               	tblrd		*+	;fetch initializer
   178  001A02  CFF5 F0CF          	movff	tablat,__pdataBANK0
   179  001A06  0009               	tblrd		*+	;fetch initializer
   180  001A08  CFF5 F0D0          	movff	tablat,__pdataBANK0+1
   181  001A0C                     end_of_initialization:
   182                           	opt stack 0
   183  001A0C                     __end_of__initialization:
   184                           	opt stack 0
   185  001A0C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   186  001A0E  6EF8               	movwf	tblptru,c
   187  001A10  0100               	movlb	0
   188  001A12  EF5F  F003         	goto	_main	;jump to C main() function
   189                           tblptru	equ	0xFF8
   190                           tblptrh	equ	0xFF7
   191                           tblptrl	equ	0xFF6
   192                           tablat	equ	0xFF5
   193                           postinc0	equ	0xFEE
   194                           wreg	equ	0xFE8
   195                           
   196                           	psect	bssCOMRAM
   197  00004F                     __pbssCOMRAM:
   198                           	opt stack 0
   199  00004F                     _MQ_Main_Willing_to_block:
   200                           	opt stack 0
   201  00004F                     	ds	1
   202  000050                     _USART_Status:
   203                           	opt stack 0
   204  000050                     	ds	1
   205                           tblptru	equ	0xFF8
   206                           tblptrh	equ	0xFF7
   207                           tblptrl	equ	0xFF6
   208                           tablat	equ	0xFF5
   209                           postinc0	equ	0xFEE
   210                           wreg	equ	0xFE8
   211                           
   212                           	psect	dataBANK0
   213  0000CF                     __pdataBANK0:
   214                           	opt stack 0
   215  0000CF                     _ADCValue:
   216                           	opt stack 0
   217  0000CF                     	ds	2
   218                           tblptru	equ	0xFF8
   219                           tblptrh	equ	0xFF7
   220                           tblptrl	equ	0xFF6
   221                           tablat	equ	0xFF5
   222                           postinc0	equ	0xFEE
   223                           wreg	equ	0xFE8
   224                           
   225                           	psect	bssBANK1
   226  000100                     __pbssBANK1:
   227                           	opt stack 0
   228  000100                     _FromMainLow_MQ:
   229                           	opt stack 0
   230  000100                     	ds	54
   231  000136                     _ToMainHigh_MQ:
   232                           	opt stack 0
   233  000136                     	ds	54
   234  00016C                     _ToMainLow_MQ:
   235                           	opt stack 0
   236  00016C                     	ds	54
   237                           tblptru	equ	0xFF8
   238                           tblptrh	equ	0xFF7
   239                           tblptrl	equ	0xFF6
   240                           tablat	equ	0xFF5
   241                           postinc0	equ	0xFEE
   242                           wreg	equ	0xFE8
   243                           
   244                           	psect	bssBANK2
   245  000200                     __pbssBANK2:
   246                           	opt stack 0
   247  000200                     _FromMainHigh_MQ:
   248                           	opt stack 0
   249  000200                     	ds	54
   250                           tblptru	equ	0xFF8
   251                           tblptrh	equ	0xFF7
   252                           tblptrl	equ	0xFF6
   253                           tablat	equ	0xFF5
   254                           postinc0	equ	0xFEE
   255                           wreg	equ	0xFE8
   256                           
   257                           	psect	cstackBANK1
   258  0001A2                     __pcstackBANK1:
   259                           	opt stack 0
   260  0001A2                     main@msgbuffer:
   261                           	opt stack 0
   262                           
   263                           ; 11 bytes @ 0x0
   264  0001A2                     	ds	11
   265  0001AD                     main@uthread_data:
   266                           	opt stack 0
   267                           
   268                           ; 2 bytes @ 0xB
   269  0001AD                     	ds	2
   270  0001AF                     main@last_reg_recvd:
   271                           	opt stack 0
   272                           
   273                           ; 1 bytes @ 0xD
   274  0001AF                     	ds	1
   275  0001B0                     main@t0thread_data:
   276                           	opt stack 0
   277                           
   278                           ; 2 bytes @ 0xE
   279  0001B0                     	ds	2
   280  0001B2                     main@t1thread_data:
   281                           	opt stack 0
   282                           
   283                           ; 2 bytes @ 0x10
   284  0001B2                     	ds	2
   285  0001B4                     main@uc:
   286                           	opt stack 0
   287                           
   288                           ; 5 bytes @ 0x12
   289  0001B4                     	ds	5
   290  0001B9                     main@msgtype:
   291                           	opt stack 0
   292                           
   293                           ; 1 bytes @ 0x17
   294  0001B9                     	ds	1
   295  0001BA                     main@length:
   296                           	opt stack 0
   297                           
   298                           ; 1 bytes @ 0x18
   299  0001BA                     	ds	1
   300  0001BB                     main@ic:
   301                           	opt stack 0
   302                           
   303                           ; 28 bytes @ 0x19
   304  0001BB                     	ds	28
   305                           tblptru	equ	0xFF8
   306                           tblptrh	equ	0xFF7
   307                           tblptrl	equ	0xFF6
   308                           tablat	equ	0xFF5
   309                           postinc0	equ	0xFEE
   310                           wreg	equ	0xFE8
   311                           
   312                           	psect	cstackBANK0
   313  000080                     __pcstackBANK0:
   314                           	opt stack 0
   315  000080                     timer0_int_handler@length:
   316                           	opt stack 0
   317  000080                     i2c_int_handler@msgbuffer:
   318                           	opt stack 0
   319                           
   320                           ; 11 bytes @ 0x0
   321  000080                     	ds	2
   322  000082                     timer0_int_handler@msgtype:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0x2
   326  000082                     	ds	2
   327  000084                     timer0_int_handler@val:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0x4
   331  000084                     	ds	7
   332  00008B                     i2c_int_handler@length:
   333                           	opt stack 0
   334                           
   335                           ; 2 bytes @ 0xB
   336  00008B                     	ds	2
   337  00008D                     i2c_int_handler@error_buf:
   338                           	opt stack 0
   339                           
   340                           ; 3 bytes @ 0xD
   341  00008D                     	ds	3
   342  000090                     i2c_int_handler@data_written:
   343                           	opt stack 0
   344                           
   345                           ; 1 bytes @ 0x10
   346  000090                     	ds	1
   347  000091                     i2c_int_handler@overrun_error:
   348                           	opt stack 0
   349                           
   350                           ; 1 bytes @ 0x11
   351  000091                     	ds	1
   352  000092                     i2c_int_handler@i2c_data:
   353                           	opt stack 0
   354                           
   355                           ; 1 bytes @ 0x12
   356  000092                     	ds	1
   357  000093                     i2c_int_handler@msg_to_send:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0x13
   361  000093                     	ds	1
   362  000094                     i2c_int_handler@msg_ready:
   363                           	opt stack 0
   364                           
   365                           ; 1 bytes @ 0x14
   366  000094                     	ds	1
   367  000095                     i2c_int_handler@data_read:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0x15
   371  000095                     	ds	1
   372  000096                     ??_InterruptHandlerHigh:
   373                           
   374                           ; 0 bytes @ 0x16
   375  000096                     	ds	16
   376  0000A6                     InterruptHandlerHigh@pureADCValue:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0x26
   380  0000A6                     	ds	2
   381  0000A8                     ?_returnADCValue:
   382                           	opt stack 0
   383  0000A8                     ?_in_high_int:
   384                           	opt stack 0
   385  0000A8                     ?___lwmod:
   386                           	opt stack 0
   387  0000A8                     i2c_configure_slave@addr:
   388                           	opt stack 0
   389  0000A8                     OpenADC@config2:
   390                           	opt stack 0
   391  0000A8                     OpenTimer0@config:
   392                           	opt stack 0
   393  0000A8                     Delay1KTCYx@unit:
   394                           	opt stack 0
   395  0000A8                     uart_lthread@uptr:
   396                           	opt stack 0
   397  0000A8                     init_timer1_lthread@tptr:
   398                           	opt stack 0
   399  0000A8                     init_uart_recv@uc:
   400                           	opt stack 0
   401  0000A8                     start_i2c_slave_reply@msg:
   402                           	opt stack 0
   403  0000A8                     init_i2c@ic:
   404                           	opt stack 0
   405  0000A8                     init_queue@qptr:
   406                           	opt stack 0
   407  0000A8                     check_msg@qptr:
   408                           	opt stack 0
   409  0000A8                     OpenUSART@spbrg:
   410                           	opt stack 0
   411  0000A8                     ___lwmod@dividend:
   412                           	opt stack 0
   413  0000A8                     memcpy@d1:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0x28
   417  0000A8                     	ds	1
   418  0000A9                     OpenADC@portconfig:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0x29
   422  0000A9                     	ds	1
   423  0000AA                     ??_OpenADC:
   424  0000AA                     ??_OpenUSART:
   425  0000AA                     ??_start_i2c_slave_reply:
   426  0000AA                     ??_init_queue:
   427  0000AA                     ??_check_msg:
   428  0000AA                     ?_in_low_int:
   429                           	opt stack 0
   430  0000AA                     uart_lthread@msgtype:
   431                           	opt stack 0
   432  0000AA                     returnADCValue@returnVal:
   433                           	opt stack 0
   434  0000AA                     ___lwmod@divisor:
   435                           	opt stack 0
   436  0000AA                     memcpy@s1:
   437                           	opt stack 0
   438                           
   439                           ; 2 bytes @ 0x2A
   440  0000AA                     	ds	1
   441  0000AB                     init_queue@i:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0x2B
   445  0000AB                     	ds	1
   446  0000AC                     ??_init_queues:
   447  0000AC                     ??___lwmod:
   448  0000AC                     ?_in_main:
   449                           	opt stack 0
   450  0000AC                     start_i2c_slave_reply@length:
   451                           	opt stack 0
   452  0000AC                     OpenADC@config:
   453                           	opt stack 0
   454  0000AC                     uart_lthread@length:
   455                           	opt stack 0
   456  0000AC                     memcpy@n:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0x2C
   460  0000AC                     	ds	1
   461  0000AD                     ??_initADC:
   462  0000AD                     OpenUSART@config:
   463                           	opt stack 0
   464  0000AD                     ___lwmod@counter:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0x2D
   468  0000AD                     	ds	1
   469  0000AE                     ??_block_on_To_msgqueues:
   470  0000AE                     uart_lthread@msgbuffer:
   471                           	opt stack 0
   472  0000AE                     memcpy@d:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x2E
   476  0000AE                     	ds	1
   477  0000AF                     initADC@ADCValue:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x2F
   481  0000AF                     	ds	1
   482  0000B0                     memcpy@s:
   483                           	opt stack 0
   484                           
   485                           ; 2 bytes @ 0x30
   486  0000B0                     	ds	2
   487  0000B2                     send_msg@qptr:
   488                           	opt stack 0
   489  0000B2                     recv_msg@qptr:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0x32
   493  0000B2                     	ds	2
   494  0000B4                     send_msg@length:
   495                           	opt stack 0
   496  0000B4                     recv_msg@maxlength:
   497                           	opt stack 0
   498                           
   499                           ; 1 bytes @ 0x34
   500  0000B4                     	ds	1
   501  0000B5                     send_msg@msgtype:
   502                           	opt stack 0
   503  0000B5                     recv_msg@msgtype:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x35
   507  0000B5                     	ds	1
   508  0000B6                     send_msg@data:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x36
   512  0000B6                     	ds	1
   513  0000B7                     recv_msg@data:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x37
   517  0000B7                     	ds	1
   518  0000B8                     ??_send_msg:
   519                           
   520                           ; 0 bytes @ 0x38
   521  0000B8                     	ds	1
   522  0000B9                     ??_recv_msg:
   523  0000B9                     send_msg@tlength:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x39
   527  0000B9                     	ds	2
   528  0000BB                     send_msg@slot:
   529                           	opt stack 0
   530  0000BB                     recv_msg@slot:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0x3B
   534  0000BB                     	ds	1
   535  0000BC                     send_msg@qmsg:
   536                           	opt stack 0
   537  0000BC                     recv_msg@tlength:
   538                           	opt stack 0
   539                           
   540                           ; 2 bytes @ 0x3C
   541  0000BC                     	ds	2
   542  0000BE                     FromMainHigh_sendmsg@msgtype:
   543                           	opt stack 0
   544  0000BE                     recv_msg@qmsg:
   545                           	opt stack 0
   546                           
   547                           ; 2 bytes @ 0x3E
   548  0000BE                     	ds	1
   549  0000BF                     FromMainHigh_sendmsg@data:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0x3F
   553  0000BF                     	ds	1
   554  0000C0                     ToMainLow_recvmsg@msgtype:
   555                           	opt stack 0
   556  0000C0                     ToMainHigh_recvmsg@msgtype:
   557                           	opt stack 0
   558                           
   559                           ; 2 bytes @ 0x40
   560  0000C0                     	ds	1
   561  0000C1                     FromMainHigh_sendmsg@length:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0x41
   565  0000C1                     	ds	1
   566  0000C2                     timer1_lthread@tptr:
   567                           	opt stack 0
   568  0000C2                     timer0_lthread@tptr:
   569                           	opt stack 0
   570  0000C2                     ToMainLow_recvmsg@data:
   571                           	opt stack 0
   572  0000C2                     ToMainHigh_recvmsg@data:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0x42
   576  0000C2                     	ds	2
   577  0000C4                     ToMainLow_recvmsg@maxlength:
   578                           	opt stack 0
   579  0000C4                     ToMainHigh_recvmsg@maxlength:
   580                           	opt stack 0
   581  0000C4                     timer1_lthread@msgtype:
   582                           	opt stack 0
   583  0000C4                     timer0_lthread@msgtype:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x44
   587  0000C4                     	ds	2
   588  0000C6                     timer1_lthread@length:
   589                           	opt stack 0
   590  0000C6                     timer0_lthread@length:
   591                           	opt stack 0
   592                           
   593                           ; 2 bytes @ 0x46
   594  0000C6                     	ds	2
   595  0000C8                     timer1_lthread@msgbuffer:
   596                           	opt stack 0
   597  0000C8                     timer0_lthread@msgbuffer:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x48
   601  0000C8                     	ds	2
   602  0000CA                     ??_timer1_lthread:
   603  0000CA                     ??_timer0_lthread:
   604                           
   605                           ; 0 bytes @ 0x4A
   606  0000CA                     	ds	1
   607  0000CB                     timer1_lthread@retval:
   608                           	opt stack 0
   609  0000CB                     timer0_lthread@retval:
   610                           	opt stack 0
   611                           
   612                           ; 1 bytes @ 0x4B
   613  0000CB                     	ds	1
   614  0000CC                     ??_main:
   615                           
   616                           ; 0 bytes @ 0x4C
   617  0000CC                     	ds	1
   618                           tblptru	equ	0xFF8
   619                           tblptrh	equ	0xFF7
   620                           tblptrl	equ	0xFF6
   621                           tablat	equ	0xFF5
   622                           postinc0	equ	0xFEE
   623                           wreg	equ	0xFE8
   624                           
   625                           	psect	cstackCOMRAM
   626  000001                     __pcstackCOMRAM:
   627                           	opt stack 0
   628  000001                     ?_ReadTimer1:
   629                           	opt stack 0
   630  000001                     ReadUSART@data:
   631                           	opt stack 0
   632  000001                     WriteTimer1@timer1:
   633                           	opt stack 0
   634  000001                     i1memcpy@d1:
   635                           	opt stack 0
   636                           
   637                           ; 2 bytes @ 0x0
   638  000001                     	ds	2
   639  000003                     ReadTimer1@timer:
   640                           	opt stack 0
   641  000003                     WriteTimer1@timer:
   642                           	opt stack 0
   643  000003                     i1memcpy@s1:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x2
   647  000003                     	ds	2
   648  000005                     i1memcpy@n:
   649                           	opt stack 0
   650                           
   651                           ; 2 bytes @ 0x4
   652  000005                     	ds	2
   653  000007                     i1memcpy@d:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x6
   657  000007                     	ds	2
   658  000009                     i1memcpy@s:
   659                           	opt stack 0
   660                           
   661                           ; 2 bytes @ 0x8
   662  000009                     	ds	2
   663  00000B                     i1send_msg@qptr:
   664                           	opt stack 0
   665                           
   666                           ; 2 bytes @ 0xA
   667  00000B                     	ds	2
   668  00000D                     i1send_msg@length:
   669                           	opt stack 0
   670                           
   671                           ; 1 bytes @ 0xC
   672  00000D                     	ds	1
   673  00000E                     i1send_msg@msgtype:
   674                           	opt stack 0
   675                           
   676                           ; 1 bytes @ 0xD
   677  00000E                     	ds	1
   678  00000F                     i1send_msg@data:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0xE
   682  00000F                     	ds	2
   683  000011                     ??i1_send_msg:
   684                           
   685                           ; 0 bytes @ 0x10
   686  000011                     	ds	1
   687  000012                     i1send_msg@tlength:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0x11
   691  000012                     	ds	2
   692  000014                     i1send_msg@slot:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0x13
   696  000014                     	ds	1
   697  000015                     i1send_msg@qmsg:
   698                           	opt stack 0
   699                           
   700                           ; 2 bytes @ 0x14
   701  000015                     	ds	2
   702  000017                     ToMainLow_sendmsg@msgtype:
   703                           	opt stack 0
   704                           
   705                           ; 1 bytes @ 0x16
   706  000017                     	ds	1
   707  000018                     ToMainLow_sendmsg@data:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x17
   711  000018                     	ds	2
   712  00001A                     ToMainLow_sendmsg@length:
   713                           	opt stack 0
   714                           
   715                           ; 1 bytes @ 0x19
   716  00001A                     	ds	1
   717  00001B                     ??_timer1_int_handler:
   718  00001B                     ??_uart_recv_int_handler:
   719                           
   720                           ; 0 bytes @ 0x1A
   721  00001B                     	ds	1
   722  00001C                     timer1_int_handler@result:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0x1B
   726  00001C                     	ds	2
   727  00001E                     ??_InterruptHandlerLow:
   728                           
   729                           ; 0 bytes @ 0x1D
   730  00001E                     	ds	17
   731  00002F                     ?_ReadADC:
   732                           	opt stack 0
   733  00002F                     ?i2_returnADCValue:
   734                           	opt stack 0
   735  00002F                     ?i2_in_high_int:
   736                           	opt stack 0
   737  00002F                     handle_start@data_read:
   738                           	opt stack 0
   739  00002F                     WriteTimer0@timer0:
   740                           	opt stack 0
   741  00002F                     i2start_i2c_slave_reply@msg:
   742                           	opt stack 0
   743  00002F                     i2check_msg@qptr:
   744                           	opt stack 0
   745  00002F                     i2memcpy@d1:
   746                           	opt stack 0
   747                           
   748                           ; 2 bytes @ 0x2E
   749  00002F                     	ds	2
   750  000031                     ??i2_start_i2c_slave_reply:
   751  000031                     ??i2_check_msg:
   752  000031                     ?i2_in_low_int:
   753                           	opt stack 0
   754  000031                     WriteTimer0@timer:
   755                           	opt stack 0
   756  000031                     i2returnADCValue@returnVal:
   757                           	opt stack 0
   758  000031                     i2memcpy@s1:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x30
   762  000031                     	ds	2
   763  000033                     i2start_i2c_slave_reply@length:
   764                           	opt stack 0
   765  000033                     i2memcpy@n:
   766                           	opt stack 0
   767                           
   768                           ; 2 bytes @ 0x32
   769  000033                     	ds	2
   770  000035                     i2memcpy@d:
   771                           	opt stack 0
   772                           
   773                           ; 2 bytes @ 0x34
   774  000035                     	ds	2
   775  000037                     i2memcpy@s:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0x36
   779  000037                     	ds	2
   780  000039                     i2send_msg@qptr:
   781                           	opt stack 0
   782  000039                     i2recv_msg@qptr:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0x38
   786  000039                     	ds	2
   787  00003B                     i2send_msg@length:
   788                           	opt stack 0
   789  00003B                     i2recv_msg@maxlength:
   790                           	opt stack 0
   791                           
   792                           ; 1 bytes @ 0x3A
   793  00003B                     	ds	1
   794  00003C                     i2send_msg@msgtype:
   795                           	opt stack 0
   796  00003C                     i2recv_msg@msgtype:
   797                           	opt stack 0
   798                           
   799                           ; 2 bytes @ 0x3B
   800  00003C                     	ds	1
   801  00003D                     i2send_msg@data:
   802                           	opt stack 0
   803                           
   804                           ; 2 bytes @ 0x3C
   805  00003D                     	ds	1
   806  00003E                     i2recv_msg@data:
   807                           	opt stack 0
   808                           
   809                           ; 2 bytes @ 0x3D
   810  00003E                     	ds	1
   811  00003F                     ??i2_send_msg:
   812                           
   813                           ; 0 bytes @ 0x3E
   814  00003F                     	ds	1
   815  000040                     ??i2_recv_msg:
   816  000040                     i2send_msg@tlength:
   817                           	opt stack 0
   818                           
   819                           ; 2 bytes @ 0x3F
   820  000040                     	ds	2
   821  000042                     i2send_msg@slot:
   822                           	opt stack 0
   823  000042                     i2recv_msg@slot:
   824                           	opt stack 0
   825                           
   826                           ; 1 bytes @ 0x41
   827  000042                     	ds	1
   828  000043                     i2send_msg@qmsg:
   829                           	opt stack 0
   830  000043                     i2recv_msg@tlength:
   831                           	opt stack 0
   832                           
   833                           ; 2 bytes @ 0x42
   834  000043                     	ds	2
   835  000045                     ToMainHigh_sendmsg@msgtype:
   836                           	opt stack 0
   837  000045                     i2recv_msg@qmsg:
   838                           	opt stack 0
   839                           
   840                           ; 2 bytes @ 0x44
   841  000045                     	ds	1
   842  000046                     ToMainHigh_sendmsg@data:
   843                           	opt stack 0
   844                           
   845                           ; 2 bytes @ 0x45
   846  000046                     	ds	1
   847  000047                     FromMainHigh_recvmsg@msgtype:
   848                           	opt stack 0
   849                           
   850                           ; 2 bytes @ 0x46
   851  000047                     	ds	1
   852  000048                     ToMainHigh_sendmsg@length:
   853                           	opt stack 0
   854                           
   855                           ; 1 bytes @ 0x47
   856  000048                     	ds	1
   857  000049                     ??_i2c_int_handler:
   858  000049                     FromMainHigh_recvmsg@data:
   859                           	opt stack 0
   860                           
   861                           ; 2 bytes @ 0x48
   862  000049                     	ds	2
   863  00004B                     FromMainHigh_recvmsg@maxlength:
   864                           	opt stack 0
   865                           
   866                           ; 1 bytes @ 0x4A
   867  00004B                     	ds	1
   868  00004C                     ??_timer0_int_handler:
   869                           
   870                           ; 0 bytes @ 0x4B
   871  00004C                     	ds	1
   872                           tblptru	equ	0xFF8
   873                           tblptrh	equ	0xFF7
   874                           tblptrl	equ	0xFF6
   875                           tablat	equ	0xFF5
   876                           postinc0	equ	0xFEE
   877                           wreg	equ	0xFE8
   878                           
   879 ;;
   880 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   881 ;;
   882 ;; *************** function _main *****************
   883 ;; Defined at:
   884 ;;		line 111 in file "../src/main.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;		None
   887 ;; Auto vars:     Size  Location     Type
   888 ;;  ic             28   25[BANK1 ] struct __i2c_comm
   889 ;;  msgbuffer      11    0[BANK1 ] unsigned char [11]
   890 ;;  uc              5   18[BANK1 ] struct __uart_comm
   891 ;;  t1thread_dat    2   16[BANK1 ] struct __timer1_thread_s
   892 ;;  t0thread_dat    2   14[BANK1 ] struct __timer0_thread_s
   893 ;;  uthread_data    2   11[BANK1 ] struct __uart_thread_str
   894 ;;  length          1   24[BANK1 ] char 
   895 ;;  msgtype         1   23[BANK1 ] unsigned char 
   896 ;;  last_reg_rec    1   13[BANK1 ] unsigned char 
   897 ;;  i               1    0        unsigned char 
   898 ;;  c               1    0        unsigned char 
   899 ;; Return value:  Size  Location     Type
   900 ;;		None               void
   901 ;; Registers used:
   902 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   908 ;;      Params:         0       0       0       0       0
   909 ;;      Locals:         0       0      53       0       0
   910 ;;      Temps:          0       1       0       0       0
   911 ;;      Totals:         0       1      53       0       0
   912 ;;Total ram usage:       54 bytes
   913 ;; Hardware stack levels required when called:   14
   914 ;; This function calls:
   915 ;;		_OpenTimer0
   916 ;;		_OpenUSART
   917 ;;		_ToMainHigh_recvmsg
   918 ;;		_ToMainLow_recvmsg
   919 ;;		_block_on_To_msgqueues
   920 ;;		_enable_interrupts
   921 ;;		_i2c_configure_slave
   922 ;;		_initADC
   923 ;;		_init_i2c
   924 ;;		_init_queues
   925 ;;		_init_timer1_lthread
   926 ;;		_init_uart_recv
   927 ;;		_returnADCValue
   928 ;;		_start_i2c_slave_reply
   929 ;;		_timer0_lthread
   930 ;;		_timer1_lthread
   931 ;;		_uart_lthread
   932 ;; This function is called by:
   933 ;;		Startup code after reset
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text0
   938  0006BE                     __ptext0:
   939                           	opt stack 0
   940  0006BE                     _main:
   941                           	opt stack 17
   942                           
   943                           ;main.c: 116: char c;
   944                           ;main.c: 117: signed char length;
   945                           ;main.c: 118: unsigned char msgtype;
   946                           ;main.c: 119: unsigned char last_reg_recvd;
   947                           ;main.c: 120: uart_comm uc;
   948                           ;main.c: 121: i2c_comm ic;
   949                           ;main.c: 122: unsigned char msgbuffer[10 + 1];
   950                           ;main.c: 123: unsigned char i;
   951                           ;main.c: 124: uart_thread_struct uthread_data;
   952                           ;main.c: 125: timer1_thread_struct t1thread_data;
   953                           ;main.c: 126: timer0_thread_struct t0thread_data;
   954                           ;main.c: 133: OSCCON = 0x82;
   955                           
   956                           ;incstack = 0
   957  0006BE  0E82               	movlw	130
   958  0006C0  6ED3               	movwf	4051,c	;volatile
   959                           
   960                           ;main.c: 134: OSCTUNEbits.PLLEN = 0;
   961  0006C2  9C9B               	bcf	3995,6,c	;volatile
   962                           
   963                           ;main.c: 138: init_uart_recv(&uc);
   964  0006C4  0101               	movlb	1	; () banked
   965  0006C6  0E01               	movlw	high main@uc
   966  0006C8  0100               	movlb	0	; () banked
   967  0006CA  0100               	movlb	0	; () banked
   968  0006CC  6FA9               	movwf	(init_uart_recv@uc+1)& (0+255),b
   969  0006CE  0101               	movlb	1	; () banked
   970  0006D0  0EB4               	movlw	low main@uc
   971  0006D2  0100               	movlb	0	; () banked
   972  0006D4  0100               	movlb	0	; () banked
   973  0006D6  6FA8               	movwf	init_uart_recv@uc& (0+255),b
   974  0006D8  EC0D  F00E         	call	_init_uart_recv	;wreg free
   975                           
   976                           ;main.c: 141: init_i2c(&ic);
   977  0006DC  0101               	movlb	1	; () banked
   978  0006DE  0E01               	movlw	high main@ic
   979  0006E0  0100               	movlb	0	; () banked
   980  0006E2  0100               	movlb	0	; () banked
   981  0006E4  6FA9               	movwf	(init_i2c@ic+1)& (0+255),b
   982  0006E6  0101               	movlb	1	; () banked
   983  0006E8  0EBB               	movlw	low main@ic
   984  0006EA  0100               	movlb	0	; () banked
   985  0006EC  0100               	movlb	0	; () banked
   986  0006EE  6FA8               	movwf	init_i2c@ic& (0+255),b
   987  0006F0  EC55  F00B         	call	_init_i2c	;wreg free
   988                           
   989                           ;main.c: 144: init_timer1_lthread(&t1thread_data);
   990  0006F4  0101               	movlb	1	; () banked
   991  0006F6  0E01               	movlw	high main@t1thread_data
   992  0006F8  0100               	movlb	0	; () banked
   993  0006FA  0100               	movlb	0	; () banked
   994  0006FC  6FA9               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   995  0006FE  0101               	movlb	1	; () banked
   996  000700  0EB2               	movlw	low main@t1thread_data
   997  000702  0100               	movlb	0	; () banked
   998  000704  0100               	movlb	0	; () banked
   999  000706  6FA8               	movwf	init_timer1_lthread@tptr& (0+255),b
  1000  000708  EC36  F00E         	call	_init_timer1_lthread	;wreg free
  1001                           
  1002                           ;main.c: 147: init_queues();
  1003  00070C  EC1E  F00B         	call	_init_queues	;wreg free
  1004                           
  1005                           ;main.c: 149: initADC();
  1006  000710  EC49  F00C         	call	_initADC	;wreg free
  1007                           
  1008                           ;main.c: 152: TRISB = 0x0;
  1009  000714  0E00               	movlw	0
  1010  000716  6E93               	movwf	3987,c	;volatile
  1011                           
  1012                           ;main.c: 153: LATB = 0x0;
  1013  000718  0E00               	movlw	0
  1014  00071A  6E8A               	movwf	3978,c	;volatile
  1015                           
  1016                           ;main.c: 166: OpenTimer0(0b11111111 & 0b11001111 & 0b10111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1017  00071C  0E85               	movlw	133
  1018  00071E  EC77  F00D         	call	_OpenTimer0
  1019                           
  1020                           ;main.c: 171: enable_interrupts();
  1021  000722  EC6E  F00E         	call	_enable_interrupts	;wreg free
  1022                           
  1023                           ;main.c: 176: IPR1bits.TMR1IP = 0;
  1024  000726  909F               	bcf	3999,0,c	;volatile
  1025                           
  1026                           ;main.c: 178: IPR1bits.RCIP = 0;
  1027  000728  9A9F               	bcf	3999,5,c	;volatile
  1028                           
  1029                           ;main.c: 180: IPR1bits.SSPIP = 1;
  1030  00072A  869F               	bsf	3999,3,c	;volatile
  1031                           
  1032                           ;main.c: 182: IPR1bits.ADIP = 1;
  1033  00072C  8C9F               	bsf	3999,6,c	;volatile
  1034                           
  1035                           ;main.c: 191: i2c_configure_slave(0x9E);
  1036  00072E  0E9E               	movlw	158
  1037  000730  ECA1  F00D         	call	_i2c_configure_slave
  1038                           
  1039                           ;main.c: 204: PIE1bits.SSPIE = 1;
  1040  000734  869D               	bsf	3997,3,c	;volatile
  1041                           
  1042                           ;main.c: 207: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1043                           ;main.c: 208: 0b11111111 & 0b11101111, 0x19);
  1044  000736  0E00               	movlw	0
  1045  000738  0100               	movlb	0	; () banked
  1046  00073A  0100               	movlb	0	; () banked
  1047  00073C  6FA9               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1048  00073E  0E19               	movlw	25
  1049  000740  0100               	movlb	0	; () banked
  1050  000742  6FA8               	movwf	OpenUSART@spbrg& (0+255),b
  1051  000744  0E6C               	movlw	108
  1052  000746  EC62  F009         	call	_OpenUSART
  1053  00074A                     l2752:
  1054                           
  1055                           ;main.c: 232: block_on_To_msgqueues();
  1056  00074A  ECC1  F008         	call	_block_on_To_msgqueues	;wreg free
  1057                           
  1058                           ;main.c: 239: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1059  00074E  0101               	movlb	1	; () banked
  1060  000750  0E01               	movlw	high main@msgtype
  1061  000752  0100               	movlb	0	; () banked
  1062  000754  0100               	movlb	0	; () banked
  1063  000756  6FC1               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1064  000758  0101               	movlb	1	; () banked
  1065  00075A  0EB9               	movlw	low main@msgtype
  1066  00075C  0100               	movlb	0	; () banked
  1067  00075E  0100               	movlb	0	; () banked
  1068  000760  6FC0               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1069  000762  0101               	movlb	1	; () banked
  1070  000764  0E01               	movlw	high main@msgbuffer
  1071  000766  0100               	movlb	0	; () banked
  1072  000768  0100               	movlb	0	; () banked
  1073  00076A  6FC3               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1074  00076C  0101               	movlb	1	; () banked
  1075  00076E  0EA2               	movlw	low main@msgbuffer
  1076  000770  0100               	movlb	0	; () banked
  1077  000772  0100               	movlb	0	; () banked
  1078  000774  6FC2               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1079  000776  0E0A               	movlw	10
  1080  000778  EC8B  F00C         	call	_ToMainHigh_recvmsg
  1081  00077C  0101               	movlb	1	; () banked
  1082  00077E  0101               	movlb	1	; () banked
  1083  000780  6FBA               	movwf	main@length& (0+255),b
  1084                           
  1085                           ; BSR set to: 1
  1086                           ;main.c: 240: if (length < 0) {
  1087  000782  0101               	movlb	1	; () banked
  1088  000784  0101               	movlb	1	; () banked
  1089  000786  BFBA               	btfsc	main@length& (0+255),7,b
  1090  000788  D08D               	goto	l2786
  1091  00078A  D07D               	goto	l2784
  1092  00078C                     l2760:
  1093                           
  1094                           ; BSR set to: 1
  1095                           ;main.c: 248: {
  1096                           ;main.c: 249: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1097  00078C  0101               	movlb	1	; () banked
  1098  00078E  0E01               	movlw	high main@t0thread_data
  1099  000790  0100               	movlb	0	; () banked
  1100  000792  0100               	movlb	0	; () banked
  1101  000794  6FC3               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1102  000796  0101               	movlb	1	; () banked
  1103  000798  0EB0               	movlw	low main@t0thread_data
  1104  00079A  0100               	movlb	0	; () banked
  1105  00079C  0100               	movlb	0	; () banked
  1106  00079E  6FC2               	movwf	timer0_lthread@tptr& (0+255),b
  1107  0007A0  0101               	movlb	1	; () banked
  1108  0007A2  0100               	movlb	0	; () banked
  1109  0007A4  C1B9  F0C4         	movff	main@msgtype,timer0_lthread@msgtype
  1110  0007A8  0100               	movlb	0	; () banked
  1111  0007AA  0100               	movlb	0	; () banked
  1112  0007AC  6BC5               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1113  0007AE  0101               	movlb	1	; () banked
  1114  0007B0  0101               	movlb	1	; () banked
  1115  0007B2  51BA               	movf	main@length& (0+255),w,b
  1116  0007B4  0100               	movlb	0	; () banked
  1117  0007B6  0100               	movlb	0	; () banked
  1118  0007B8  6FC6               	movwf	timer0_lthread@length& (0+255),b
  1119  0007BA  0100               	movlb	0	; () banked
  1120  0007BC  6BC7               	clrf	(timer0_lthread@length+1)& (0+255),b
  1121  0007BE  0100               	movlb	0	; () banked
  1122  0007C0  BFC6               	btfsc	timer0_lthread@length& (0+255),7,b
  1123  0007C2  07C7               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1124  0007C4  0101               	movlb	1	; () banked
  1125  0007C6  0E01               	movlw	high main@msgbuffer
  1126  0007C8  0100               	movlb	0	; () banked
  1127  0007CA  0100               	movlb	0	; () banked
  1128  0007CC  6FC9               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1129  0007CE  0101               	movlb	1	; () banked
  1130  0007D0  0EA2               	movlw	low main@msgbuffer
  1131  0007D2  0100               	movlb	0	; () banked
  1132  0007D4  0100               	movlb	0	; () banked
  1133  0007D6  6FC8               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1134  0007D8  ECE5  F00A         	call	_timer0_lthread	;wreg free
  1135                           
  1136                           ;main.c: 250: break;
  1137  0007DC  D063               	goto	l2786
  1138  0007DE                     l325:
  1139                           
  1140                           ;main.c: 253: case 41:
  1141                           ;main.c: 254: {
  1142                           ;main.c: 257: last_reg_recvd = msgbuffer[0];
  1143  0007DE  C1A2  F1AF         	movff	main@msgbuffer,main@last_reg_recvd
  1144                           
  1145                           ;main.c: 258: break;
  1146  0007E2  D060               	goto	l2786
  1147  0007E4                     l2762:
  1148                           
  1149                           ;main.c: 271: {
  1150                           ;main.c: 272: length = 2;
  1151  0007E4  0100               	movlb	0	; () banked
  1152  0007E6  6FCC               	movwf	??_main& (0+255),b
  1153  0007E8  0E02               	movlw	2
  1154  0007EA  0101               	movlb	1	; () banked
  1155  0007EC  0101               	movlb	1	; () banked
  1156  0007EE  6FBA               	movwf	main@length& (0+255),b
  1157  0007F0  0100               	movlb	0	; () banked
  1158  0007F2  51CC               	movf	??_main& (0+255),w,b
  1159                           
  1160                           ; BSR set to: 0
  1161                           ;main.c: 274: msgbuffer[0] = returnADCValue();
  1162  0007F4  ECED  F00D         	call	_returnADCValue	;wreg free
  1163  0007F8  0100               	movlb	0	; () banked
  1164  0007FA  0100               	movlb	0	; () banked
  1165  0007FC  51A8               	movf	?_returnADCValue& (0+255),w,b
  1166  0007FE  0101               	movlb	1	; () banked
  1167  000800  0101               	movlb	1	; () banked
  1168  000802  6FA2               	movwf	main@msgbuffer& (0+255),b
  1169                           
  1170                           ; BSR set to: 1
  1171                           ;main.c: 275: msgbuffer[1] = 0xAA;
  1172  000804  0100               	movlb	0	; () banked
  1173  000806  6FCC               	movwf	??_main& (0+255),b
  1174  000808  0EAA               	movlw	170
  1175  00080A  0101               	movlb	1	; () banked
  1176  00080C  0101               	movlb	1	; () banked
  1177  00080E  6FA3               	movwf	(main@msgbuffer+1)& (0+255),b
  1178  000810  0100               	movlb	0	; () banked
  1179  000812  51CC               	movf	??_main& (0+255),w,b
  1180                           
  1181                           ;main.c: 276: break;
  1182  000814  D028               	goto	l2780
  1183  000816                     l2768:
  1184                           
  1185                           ;main.c: 279: {
  1186                           ;main.c: 280: length = 1;
  1187  000816  0100               	movlb	0	; () banked
  1188  000818  6FCC               	movwf	??_main& (0+255),b
  1189  00081A  0E01               	movlw	1
  1190  00081C  0101               	movlb	1	; () banked
  1191  00081E  0101               	movlb	1	; () banked
  1192  000820  6FBA               	movwf	main@length& (0+255),b
  1193  000822  0100               	movlb	0	; () banked
  1194  000824  51CC               	movf	??_main& (0+255),w,b
  1195                           
  1196                           ; BSR set to: 0
  1197                           ;main.c: 282: msgbuffer[0] = returnADCValue();
  1198  000826  ECED  F00D         	call	_returnADCValue	;wreg free
  1199  00082A  D00A               	goto	L1
  1200  00082C                     l2772:
  1201                           
  1202                           ; BSR set to: 1
  1203                           ;main.c: 286: {
  1204                           ;main.c: 287: length = 1;
  1205  00082C  0100               	movlb	0	; () banked
  1206  00082E  6FCC               	movwf	??_main& (0+255),b
  1207  000830  0E01               	movlw	1
  1208  000832  0101               	movlb	1	; () banked
  1209  000834  0101               	movlb	1	; () banked
  1210  000836  6FBA               	movwf	main@length& (0+255),b
  1211  000838  0100               	movlb	0	; () banked
  1212  00083A  51CC               	movf	??_main& (0+255),w,b
  1213                           
  1214                           ; BSR set to: 0
  1215                           ;main.c: 289: msgbuffer[0] = returnADCValue();
  1216  00083C  ECED  F00D         	call	_returnADCValue	;wreg free
  1217  000840                     L1:
  1218  000840  0100               	movlb	0	; () banked
  1219  000842  0100               	movlb	0	; () banked
  1220  000844  51A8               	movf	?_returnADCValue& (0+255),w,b
  1221  000846  0101               	movlb	1	; () banked
  1222  000848  0101               	movlb	1	; () banked
  1223  00084A  6FA2               	movwf	main@msgbuffer& (0+255),b
  1224                           
  1225                           ;main.c: 290: break;
  1226  00084C  D00C               	goto	l2780
  1227  00084E                     l2778:
  1228  00084E  0101               	movlb	1	; () banked
  1229  000850  0101               	movlb	1	; () banked
  1230  000852  51AF               	movf	main@last_reg_recvd& (0+255),w,b
  1231                           
  1232                           ; Switch size 1, requested type "space"
  1233                           ; Number of cases is 3, Range of values is 168 to 170
  1234                           ; switch strategies available:
  1235                           ; Name         Instructions Cycles
  1236                           ; simple_byte           10     6 (average)
  1237                           ;	Chosen strategy is simple_byte
  1238  000854  0AA8               	xorlw	168	; case 168
  1239  000856  B4D8               	btfsc	status,2,c
  1240  000858  D7DE               	goto	l2768
  1241  00085A  0A01               	xorlw	1	; case 169
  1242  00085C  B4D8               	btfsc	status,2,c
  1243  00085E  D7E6               	goto	l2772
  1244  000860  0A03               	xorlw	3	; case 170
  1245  000862  B4D8               	btfsc	status,2,c
  1246  000864  D7BF               	goto	l2762
  1247  000866                     l2780:
  1248                           
  1249                           ;main.c: 293: start_i2c_slave_reply(length, msgbuffer);
  1250  000866  0101               	movlb	1	; () banked
  1251  000868  0E01               	movlw	high main@msgbuffer
  1252  00086A  0100               	movlb	0	; () banked
  1253  00086C  0100               	movlb	0	; () banked
  1254  00086E  6FA9               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1255  000870  0101               	movlb	1	; () banked
  1256  000872  0EA2               	movlw	low main@msgbuffer
  1257  000874  0100               	movlb	0	; () banked
  1258  000876  0100               	movlb	0	; () banked
  1259  000878  6FA8               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1260  00087A  0101               	movlb	1	; () banked
  1261  00087C  0101               	movlb	1	; () banked
  1262  00087E  51BA               	movf	main@length& (0+255),w,b
  1263  000880  EC6B  F005         	call	_start_i2c_slave_reply
  1264                           
  1265                           ;main.c: 294: break;
  1266  000884  D00F               	goto	l2786
  1267  000886                     l2784:
  1268  000886  0101               	movlb	1	; () banked
  1269  000888  0101               	movlb	1	; () banked
  1270  00088A  51B9               	movf	main@msgtype& (0+255),w,b
  1271                           
  1272                           ; Switch size 1, requested type "space"
  1273                           ; Number of cases is 4, Range of values is 10 to 42
  1274                           ; switch strategies available:
  1275                           ; Name         Instructions Cycles
  1276                           ; simple_byte           13     7 (average)
  1277                           ;	Chosen strategy is simple_byte
  1278  00088C  0A0A               	xorlw	10	; case 10
  1279  00088E  B4D8               	btfsc	status,2,c
  1280  000890  D77D               	goto	l2760
  1281  000892  0A22               	xorlw	34	; case 40
  1282  000894  B4D8               	btfsc	status,2,c
  1283  000896  D7A3               	goto	l325
  1284  000898  0A01               	xorlw	1	; case 41
  1285  00089A  B4D8               	btfsc	status,2,c
  1286  00089C  D7A0               	goto	l325
  1287  00089E  0A03               	xorlw	3	; case 42
  1288  0008A0  B4D8               	btfsc	status,2,c
  1289  0008A2  D7D5               	goto	l2778
  1290  0008A4                     l2786:
  1291                           
  1292                           ;main.c: 302: }
  1293                           ;main.c: 305: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1294  0008A4  0101               	movlb	1	; () banked
  1295  0008A6  0E01               	movlw	high main@msgtype
  1296  0008A8  0100               	movlb	0	; () banked
  1297  0008AA  0100               	movlb	0	; () banked
  1298  0008AC  6FC1               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1299  0008AE  0101               	movlb	1	; () banked
  1300  0008B0  0EB9               	movlw	low main@msgtype
  1301  0008B2  0100               	movlb	0	; () banked
  1302  0008B4  0100               	movlb	0	; () banked
  1303  0008B6  6FC0               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1304  0008B8  0101               	movlb	1	; () banked
  1305  0008BA  0E01               	movlw	high main@msgbuffer
  1306  0008BC  0100               	movlb	0	; () banked
  1307  0008BE  0100               	movlb	0	; () banked
  1308  0008C0  6FC3               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1309  0008C2  0101               	movlb	1	; () banked
  1310  0008C4  0EA2               	movlw	low main@msgbuffer
  1311  0008C6  0100               	movlb	0	; () banked
  1312  0008C8  0100               	movlb	0	; () banked
  1313  0008CA  6FC2               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1314  0008CC  0E0A               	movlw	10
  1315  0008CE  EC6A  F00C         	call	_ToMainLow_recvmsg
  1316  0008D2  0101               	movlb	1	; () banked
  1317  0008D4  0101               	movlb	1	; () banked
  1318  0008D6  6FBA               	movwf	main@length& (0+255),b
  1319                           
  1320                           ; BSR set to: 1
  1321                           ;main.c: 306: if (length < 0) {
  1322  0008D8  0101               	movlb	1	; () banked
  1323  0008DA  0101               	movlb	1	; () banked
  1324  0008DC  BFBA               	btfsc	main@length& (0+255),7,b
  1325  0008DE  D735               	goto	l2752
  1326  0008E0  D052               	goto	l2798
  1327  0008E2                     l2792:
  1328                           
  1329                           ; BSR set to: 1
  1330                           ;main.c: 314: {
  1331                           ;main.c: 315: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1332  0008E2  0101               	movlb	1	; () banked
  1333  0008E4  0E01               	movlw	high main@t1thread_data
  1334  0008E6  0100               	movlb	0	; () banked
  1335  0008E8  0100               	movlb	0	; () banked
  1336  0008EA  6FC3               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1337  0008EC  0101               	movlb	1	; () banked
  1338  0008EE  0EB2               	movlw	low main@t1thread_data
  1339  0008F0  0100               	movlb	0	; () banked
  1340  0008F2  0100               	movlb	0	; () banked
  1341  0008F4  6FC2               	movwf	timer1_lthread@tptr& (0+255),b
  1342  0008F6  0101               	movlb	1	; () banked
  1343  0008F8  0100               	movlb	0	; () banked
  1344  0008FA  C1B9  F0C4         	movff	main@msgtype,timer1_lthread@msgtype
  1345  0008FE  0100               	movlb	0	; () banked
  1346  000900  0100               	movlb	0	; () banked
  1347  000902  6BC5               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1348  000904  0101               	movlb	1	; () banked
  1349  000906  0101               	movlb	1	; () banked
  1350  000908  51BA               	movf	main@length& (0+255),w,b
  1351  00090A  0100               	movlb	0	; () banked
  1352  00090C  0100               	movlb	0	; () banked
  1353  00090E  6FC6               	movwf	timer1_lthread@length& (0+255),b
  1354  000910  0100               	movlb	0	; () banked
  1355  000912  6BC7               	clrf	(timer1_lthread@length+1)& (0+255),b
  1356  000914  0100               	movlb	0	; () banked
  1357  000916  BFC6               	btfsc	timer1_lthread@length& (0+255),7,b
  1358  000918  07C7               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1359  00091A  0101               	movlb	1	; () banked
  1360  00091C  0E01               	movlw	high main@msgbuffer
  1361  00091E  0100               	movlb	0	; () banked
  1362  000920  0100               	movlb	0	; () banked
  1363  000922  6FC9               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1364  000924  0101               	movlb	1	; () banked
  1365  000926  0EA2               	movlw	low main@msgbuffer
  1366  000928  0100               	movlb	0	; () banked
  1367  00092A  0100               	movlb	0	; () banked
  1368  00092C  6FC8               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1369  00092E  ECAC  F00A         	call	_timer1_lthread	;wreg free
  1370                           
  1371                           ;main.c: 316: break;
  1372  000932  D70B               	goto	l2752
  1373  000934                     l2794:
  1374                           
  1375                           ;main.c: 319: case 31:
  1376                           ;main.c: 320: {
  1377                           ;main.c: 321: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1378  000934  0101               	movlb	1	; () banked
  1379  000936  0E01               	movlw	high main@uthread_data
  1380  000938  0100               	movlb	0	; () banked
  1381  00093A  0100               	movlb	0	; () banked
  1382  00093C  6FA9               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1383  00093E  0101               	movlb	1	; () banked
  1384  000940  0EAD               	movlw	low main@uthread_data
  1385  000942  0100               	movlb	0	; () banked
  1386  000944  0100               	movlb	0	; () banked
  1387  000946  6FA8               	movwf	uart_lthread@uptr& (0+255),b
  1388  000948  0101               	movlb	1	; () banked
  1389  00094A  0100               	movlb	0	; () banked
  1390  00094C  C1B9  F0AA         	movff	main@msgtype,uart_lthread@msgtype
  1391  000950  0100               	movlb	0	; () banked
  1392  000952  0100               	movlb	0	; () banked
  1393  000954  6BAB               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1394  000956  0101               	movlb	1	; () banked
  1395  000958  0101               	movlb	1	; () banked
  1396  00095A  51BA               	movf	main@length& (0+255),w,b
  1397  00095C  0100               	movlb	0	; () banked
  1398  00095E  0100               	movlb	0	; () banked
  1399  000960  6FAC               	movwf	uart_lthread@length& (0+255),b
  1400  000962  0100               	movlb	0	; () banked
  1401  000964  6BAD               	clrf	(uart_lthread@length+1)& (0+255),b
  1402  000966  0100               	movlb	0	; () banked
  1403  000968  BFAC               	btfsc	uart_lthread@length& (0+255),7,b
  1404  00096A  07AD               	decf	(uart_lthread@length+1)& (0+255),f,b
  1405  00096C  0101               	movlb	1	; () banked
  1406  00096E  0E01               	movlw	high main@msgbuffer
  1407  000970  0100               	movlb	0	; () banked
  1408  000972  0100               	movlb	0	; () banked
  1409  000974  6FAF               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1410  000976  0101               	movlb	1	; () banked
  1411  000978  0EA2               	movlw	low main@msgbuffer
  1412  00097A  0100               	movlb	0	; () banked
  1413  00097C  0100               	movlb	0	; () banked
  1414  00097E  6FAE               	movwf	uart_lthread@msgbuffer& (0+255),b
  1415  000980  EC0B  F00D         	call	_uart_lthread	;wreg free
  1416                           
  1417                           ;main.c: 322: break;
  1418  000984  D6E2               	goto	l2752
  1419  000986                     l2798:
  1420  000986  0101               	movlb	1	; () banked
  1421  000988  0101               	movlb	1	; () banked
  1422  00098A  51B9               	movf	main@msgtype& (0+255),w,b
  1423                           
  1424                           ; Switch size 1, requested type "space"
  1425                           ; Number of cases is 3, Range of values is 11 to 31
  1426                           ; switch strategies available:
  1427                           ; Name         Instructions Cycles
  1428                           ; simple_byte           10     6 (average)
  1429                           ;	Chosen strategy is simple_byte
  1430  00098C  0A0B               	xorlw	11	; case 11
  1431  00098E  B4D8               	btfsc	status,2,c
  1432  000990  D7A8               	goto	l2792
  1433  000992  0A15               	xorlw	21	; case 30
  1434  000994  B4D8               	btfsc	status,2,c
  1435  000996  D7CE               	goto	l2794
  1436  000998  0A01               	xorlw	1	; case 31
  1437  00099A  B4D8               	btfsc	status,2,c
  1438  00099C  D7CB               	goto	l2794
  1439  00099E  D6D5               	goto	l2752
  1440  0009A0                     __end_of_main:
  1441                           	opt stack 0
  1442                           tblptru	equ	0xFF8
  1443                           tblptrh	equ	0xFF7
  1444                           tblptrl	equ	0xFF6
  1445                           tablat	equ	0xFF5
  1446                           postinc0	equ	0xFEE
  1447                           wreg	equ	0xFE8
  1448                           status	equ	0xFD8
  1449                           
  1450 ;; *************** function _uart_lthread *****************
  1451 ;; Defined at:
  1452 ;;		line 9 in file "../src/uart_thread.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;  uptr            2   40[BANK0 ] PTR struct __uart_thread
  1455 ;;		 -> main@uthread_data(2), 
  1456 ;;  msgtype         2   42[BANK0 ] int 
  1457 ;;  length          2   44[BANK0 ] int 
  1458 ;;  msgbuffer       2   46[BANK0 ] PTR unsigned char 
  1459 ;;		 -> main@msgbuffer(11), 
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;		None
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  2   40[BANK0 ] int 
  1464 ;; Registers used:
  1465 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1471 ;;      Params:         0       8       0       0       0
  1472 ;;      Locals:         0       0       0       0       0
  1473 ;;      Temps:          0       0       0       0       0
  1474 ;;      Totals:         0       8       0       0       0
  1475 ;;Total ram usage:        8 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; Hardware stack levels required when called:   10
  1478 ;; This function calls:
  1479 ;;		Nothing
  1480 ;; This function is called by:
  1481 ;;		_main
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           	psect	text1
  1486  001A16                     __ptext1:
  1487                           	opt stack 0
  1488  001A16                     _uart_lthread:
  1489                           	opt stack 20
  1490                           
  1491                           ;uart_thread.c: 10: if (msgtype == 30) {
  1492                           
  1493                           ; BSR set to: 1
  1494                           ;incstack = 0
  1495  001A16  0100               	movlb	0	; () banked
  1496  001A18  0100               	movlb	0	; () banked
  1497  001A1A  51AA               	movf	uart_lthread@msgtype& (0+255),w,b
  1498  001A1C  0A1E               	xorlw	30
  1499  001A1E  11AB               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1500  001A20  B4D8               	btfsc	status,2,c
  1501  001A22  0012               	return	
  1502                           
  1503                           ; BSR set to: 0
  1504                           
  1505                           ; BSR set to: 0
  1506                           
  1507                           ; BSR set to: 0
  1508                           ;uart_thread.c: 11: } else if (msgtype == 31) {
  1509  001A24  0100               	movlb	0	; () banked
  1510  001A26  0100               	movlb	0	; () banked
  1511  001A28  51AA               	movf	uart_lthread@msgtype& (0+255),w,b
  1512  001A2A  0A1F               	xorlw	31
  1513  001A2C  11AB               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1514  001A2E  A4D8               	btfss	status,2,c
  1515  001A30  0012               	return	
  1516                           
  1517                           ; BSR set to: 0
  1518                           ;uart_thread.c: 14: msgbuffer[length] = '\0';
  1519  001A32  0100               	movlb	0	; () banked
  1520  001A34  0100               	movlb	0	; () banked
  1521  001A36  51AC               	movf	uart_lthread@length& (0+255),w,b
  1522  001A38  0100               	movlb	0	; () banked
  1523  001A3A  0100               	movlb	0	; () banked
  1524  001A3C  25AE               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1525  001A3E  6ED9               	movwf	fsr2l,c
  1526  001A40  0100               	movlb	0	; () banked
  1527  001A42  0100               	movlb	0	; () banked
  1528  001A44  51AD               	movf	(uart_lthread@length+1)& (0+255),w,b
  1529  001A46  0100               	movlb	0	; () banked
  1530  001A48  0100               	movlb	0	; () banked
  1531  001A4A  21AF               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1532  001A4C  6EDA               	movwf	fsr2h,c
  1533  001A4E  0E00               	movlw	0
  1534  001A50  6EDF               	movwf	indf2,c
  1535  001A52  0012               	return	
  1536  001A54                     __end_of_uart_lthread:
  1537                           	opt stack 0
  1538                           tblptru	equ	0xFF8
  1539                           tblptrh	equ	0xFF7
  1540                           tblptrl	equ	0xFF6
  1541                           tablat	equ	0xFF5
  1542                           postinc0	equ	0xFEE
  1543                           wreg	equ	0xFE8
  1544                           indf2	equ	0xFDF
  1545                           fsr2h	equ	0xFDA
  1546                           fsr2l	equ	0xFD9
  1547                           status	equ	0xFD8
  1548                           
  1549 ;; *************** function _timer1_lthread *****************
  1550 ;; Defined at:
  1551 ;;		line 14 in file "../src/timer1_thread.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;  tptr            2   66[BANK0 ] PTR struct __timer1_thre
  1554 ;;		 -> main@t1thread_data(2), 
  1555 ;;  msgtype         2   68[BANK0 ] int 
  1556 ;;  length          2   70[BANK0 ] int 
  1557 ;;  msgbuffer       2   72[BANK0 ] PTR unsigned char 
  1558 ;;		 -> main@msgbuffer(11), 
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;  retval          1   75[BANK0 ] char 
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  2   66[BANK0 ] int 
  1563 ;; Registers used:
  1564 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1570 ;;      Params:         0       8       0       0       0
  1571 ;;      Locals:         0       1       0       0       0
  1572 ;;      Temps:          0       1       0       0       0
  1573 ;;      Totals:         0      10       0       0       0
  1574 ;;Total ram usage:       10 bytes
  1575 ;; Hardware stack levels used:    1
  1576 ;; Hardware stack levels required when called:   13
  1577 ;; This function calls:
  1578 ;;		_FromMainHigh_sendmsg
  1579 ;;		___lwmod
  1580 ;; This function is called by:
  1581 ;;		_main
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           	psect	text2
  1586  001558                     __ptext2:
  1587                           	opt stack 0
  1588  001558                     _timer1_lthread:
  1589                           	opt stack 17
  1590                           
  1591                           ;timer1_thread.c: 15: signed char retval;
  1592                           ;timer1_thread.c: 17: tptr->msgcount++;
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;incstack = 0
  1596  001558  C0C2  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1597  00155C  C0C3  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1598  001560  2ADE               	incf	postinc2,f,c
  1599  001562  0E00               	movlw	0
  1600  001564  22DD               	addwfc	postdec2,f,c
  1601                           
  1602                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1603  001566  C0C2  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1604  00156A  C0C3  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1605  00156E  0100               	movlb	0	; () banked
  1606  001570  CFDE F0A8          	movff	postinc2,___lwmod@dividend
  1607  001574  0100               	movlb	0	; () banked
  1608  001576  CFDD F0A9          	movff	postdec2,___lwmod@dividend+1
  1609  00157A  0E00               	movlw	0
  1610  00157C  0100               	movlb	0	; () banked
  1611  00157E  0100               	movlb	0	; () banked
  1612  001580  6FAB               	movwf	(___lwmod@divisor+1)& (0+255),b
  1613  001582  0E0A               	movlw	10
  1614  001584  0100               	movlb	0	; () banked
  1615  001586  6FAA               	movwf	___lwmod@divisor& (0+255),b
  1616  001588  ECAB  F009         	call	___lwmod	;wreg free
  1617  00158C  0100               	movlb	0	; () banked
  1618  00158E  0100               	movlb	0	; () banked
  1619  001590  51A8               	movf	?___lwmod& (0+255),w,b
  1620  001592  0A09               	xorlw	9
  1621  001594  0100               	movlb	0	; () banked
  1622  001596  11A9               	iorwf	(?___lwmod+1)& (0+255),w,b
  1623  001598  A4D8               	btfss	status,2,c
  1624  00159A  0012               	return	
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1628  00159C  0100               	movlb	0	; () banked
  1629  00159E  6FCA               	movwf	??_timer1_lthread& (0+255),b
  1630  0015A0  0E14               	movlw	20
  1631  0015A2  0100               	movlb	0	; () banked
  1632  0015A4  0100               	movlb	0	; () banked
  1633  0015A6  6FBE               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1634  0015A8  0100               	movlb	0	; () banked
  1635  0015AA  51CA               	movf	??_timer1_lthread& (0+255),w,b
  1636  0015AC  0100               	movlb	0	; () banked
  1637  0015AE  0100               	movlb	0	; () banked
  1638  0015B0  C0C3  F0C0         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1639  0015B4  0100               	movlb	0	; () banked
  1640  0015B6  0100               	movlb	0	; () banked
  1641  0015B8  C0C2  F0BF         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1642  0015BC  0E02               	movlw	2
  1643  0015BE  EC2A  F00D         	call	_FromMainHigh_sendmsg
  1644  0015C2  0100               	movlb	0	; () banked
  1645  0015C4  0100               	movlb	0	; () banked
  1646  0015C6  6FCB               	movwf	timer1_lthread@retval& (0+255),b
  1647  0015C8  0012               	return	
  1648  0015CA                     __end_of_timer1_lthread:
  1649                           	opt stack 0
  1650                           tblptru	equ	0xFF8
  1651                           tblptrh	equ	0xFF7
  1652                           tblptrl	equ	0xFF6
  1653                           tablat	equ	0xFF5
  1654                           postinc0	equ	0xFEE
  1655                           wreg	equ	0xFE8
  1656                           indf2	equ	0xFDF
  1657                           postinc2	equ	0xFDE
  1658                           postdec2	equ	0xFDD
  1659                           fsr2h	equ	0xFDA
  1660                           fsr2l	equ	0xFD9
  1661                           status	equ	0xFD8
  1662                           
  1663 ;; *************** function _timer0_lthread *****************
  1664 ;; Defined at:
  1665 ;;		line 14 in file "../src/timer0_thread.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  tptr            2   66[BANK0 ] PTR struct __timer0_thre
  1668 ;;		 -> main@t0thread_data(2), 
  1669 ;;  msgtype         2   68[BANK0 ] int 
  1670 ;;  length          2   70[BANK0 ] int 
  1671 ;;  msgbuffer       2   72[BANK0 ] PTR unsigned char 
  1672 ;;		 -> main@msgbuffer(11), 
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;  retval          1   75[BANK0 ] char 
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  2   66[BANK0 ] int 
  1677 ;; Registers used:
  1678 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1684 ;;      Params:         0       8       0       0       0
  1685 ;;      Locals:         0       1       0       0       0
  1686 ;;      Temps:          0       1       0       0       0
  1687 ;;      Totals:         0      10       0       0       0
  1688 ;;Total ram usage:       10 bytes
  1689 ;; Hardware stack levels used:    1
  1690 ;; Hardware stack levels required when called:   13
  1691 ;; This function calls:
  1692 ;;		_FromMainHigh_sendmsg
  1693 ;;		___lwmod
  1694 ;; This function is called by:
  1695 ;;		_main
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           	psect	text3
  1700  0015CA                     __ptext3:
  1701                           	opt stack 0
  1702  0015CA                     _timer0_lthread:
  1703                           	opt stack 17
  1704                           
  1705                           ;timer0_thread.c: 19: signed char retval;
  1706                           ;timer0_thread.c: 21: tptr->msgcount++;
  1707                           
  1708                           ; BSR set to: 0
  1709                           ;incstack = 0
  1710  0015CA  C0C2  FFD9         	movff	timer0_lthread@tptr,fsr2l
  1711  0015CE  C0C3  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  1712  0015D2  2ADE               	incf	postinc2,f,c
  1713  0015D4  0E00               	movlw	0
  1714  0015D6  22DD               	addwfc	postdec2,f,c
  1715                           
  1716                           ;timer0_thread.c: 24: if ((tptr->msgcount % 10) == 9) {
  1717  0015D8  C0C2  FFD9         	movff	timer0_lthread@tptr,fsr2l
  1718  0015DC  C0C3  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  1719  0015E0  0100               	movlb	0	; () banked
  1720  0015E2  CFDE F0A8          	movff	postinc2,___lwmod@dividend
  1721  0015E6  0100               	movlb	0	; () banked
  1722  0015E8  CFDD F0A9          	movff	postdec2,___lwmod@dividend+1
  1723  0015EC  0E00               	movlw	0
  1724  0015EE  0100               	movlb	0	; () banked
  1725  0015F0  0100               	movlb	0	; () banked
  1726  0015F2  6FAB               	movwf	(___lwmod@divisor+1)& (0+255),b
  1727  0015F4  0E0A               	movlw	10
  1728  0015F6  0100               	movlb	0	; () banked
  1729  0015F8  6FAA               	movwf	___lwmod@divisor& (0+255),b
  1730  0015FA  ECAB  F009         	call	___lwmod	;wreg free
  1731  0015FE  0100               	movlb	0	; () banked
  1732  001600  0100               	movlb	0	; () banked
  1733  001602  51A8               	movf	?___lwmod& (0+255),w,b
  1734  001604  0A09               	xorlw	9
  1735  001606  0100               	movlb	0	; () banked
  1736  001608  11A9               	iorwf	(?___lwmod+1)& (0+255),w,b
  1737  00160A  A4D8               	btfss	status,2,c
  1738  00160C  0012               	return	
  1739                           
  1740                           ; BSR set to: 0
  1741                           ;timer0_thread.c: 25: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1742  00160E  0100               	movlb	0	; () banked
  1743  001610  6FCA               	movwf	??_timer0_lthread& (0+255),b
  1744  001612  0E14               	movlw	20
  1745  001614  0100               	movlb	0	; () banked
  1746  001616  0100               	movlb	0	; () banked
  1747  001618  6FBE               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1748  00161A  0100               	movlb	0	; () banked
  1749  00161C  51CA               	movf	??_timer0_lthread& (0+255),w,b
  1750  00161E  0100               	movlb	0	; () banked
  1751  001620  0100               	movlb	0	; () banked
  1752  001622  C0C3  F0C0         	movff	timer0_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1753  001626  0100               	movlb	0	; () banked
  1754  001628  0100               	movlb	0	; () banked
  1755  00162A  C0C2  F0BF         	movff	timer0_lthread@tptr,FromMainHigh_sendmsg@data
  1756  00162E  0E02               	movlw	2
  1757  001630  EC2A  F00D         	call	_FromMainHigh_sendmsg
  1758  001634  0100               	movlb	0	; () banked
  1759  001636  0100               	movlb	0	; () banked
  1760  001638  6FCB               	movwf	timer0_lthread@retval& (0+255),b
  1761  00163A  0012               	return	
  1762  00163C                     __end_of_timer0_lthread:
  1763                           	opt stack 0
  1764                           tblptru	equ	0xFF8
  1765                           tblptrh	equ	0xFF7
  1766                           tblptrl	equ	0xFF6
  1767                           tablat	equ	0xFF5
  1768                           postinc0	equ	0xFEE
  1769                           wreg	equ	0xFE8
  1770                           indf2	equ	0xFDF
  1771                           postinc2	equ	0xFDE
  1772                           postdec2	equ	0xFDD
  1773                           fsr2h	equ	0xFDA
  1774                           fsr2l	equ	0xFD9
  1775                           status	equ	0xFD8
  1776                           
  1777 ;; *************** function ___lwmod *****************
  1778 ;; Defined at:
  1779 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/common/lwmod.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;  dividend        2   40[BANK0 ] unsigned int 
  1782 ;;  divisor         2   42[BANK0 ] unsigned int 
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;  counter         1   45[BANK0 ] unsigned char 
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  2   40[BANK0 ] unsigned int 
  1787 ;; Registers used:
  1788 ;;		wreg, status,2, status,0
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1794 ;;      Params:         0       4       0       0       0
  1795 ;;      Locals:         0       1       0       0       0
  1796 ;;      Temps:          0       1       0       0       0
  1797 ;;      Totals:         0       6       0       0       0
  1798 ;;Total ram usage:        6 bytes
  1799 ;; Hardware stack levels used:    1
  1800 ;; Hardware stack levels required when called:   10
  1801 ;; This function calls:
  1802 ;;		Nothing
  1803 ;; This function is called by:
  1804 ;;		_timer1_lthread
  1805 ;;		_timer0_lthread
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           	psect	text4
  1810  001356                     __ptext4:
  1811                           	opt stack 0
  1812  001356                     ___lwmod:
  1813                           	opt stack 19
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;incstack = 0
  1817  001356  0100               	movlb	0	; () banked
  1818  001358  0100               	movlb	0	; () banked
  1819  00135A  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1820  00135C  11AA               	iorwf	___lwmod@divisor& (0+255),w,b
  1821  00135E  B4D8               	btfsc	status,2,c
  1822  001360  D03A               	goto	l1038
  1823                           
  1824                           ; BSR set to: 0
  1825  001362  0100               	movlb	0	; () banked
  1826  001364  6FAC               	movwf	??___lwmod& (0+255),b
  1827  001366  0E01               	movlw	1
  1828  001368  0100               	movlb	0	; () banked
  1829  00136A  0100               	movlb	0	; () banked
  1830  00136C  6FAD               	movwf	___lwmod@counter& (0+255),b
  1831  00136E  0100               	movlb	0	; () banked
  1832  001370  51AC               	movf	??___lwmod& (0+255),w,b
  1833  001372  D009               	goto	l2896
  1834  001374                     l2894:
  1835                           
  1836                           ; BSR set to: 0
  1837  001374  0100               	movlb	0	; () banked
  1838  001376  0100               	movlb	0	; () banked
  1839  001378  0100               	movlb	0	; () banked
  1840  00137A  90D8               	bcf	status,0,c
  1841  00137C  37AA               	rlcf	___lwmod@divisor& (0+255),f,b
  1842  00137E  37AB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1843  001380  0100               	movlb	0	; () banked
  1844  001382  0100               	movlb	0	; () banked
  1845  001384  2BAD               	incf	___lwmod@counter& (0+255),f,b
  1846  001386                     l2896:
  1847                           
  1848                           ; BSR set to: 0
  1849  001386  0100               	movlb	0	; () banked
  1850  001388  0100               	movlb	0	; () banked
  1851  00138A  AFAB               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1852  00138C  D7F3               	goto	l2894
  1853  00138E                     l2898:
  1854                           
  1855                           ; BSR set to: 0
  1856  00138E  0100               	movlb	0	; () banked
  1857  001390  0100               	movlb	0	; () banked
  1858  001392  51AA               	movf	___lwmod@divisor& (0+255),w,b
  1859  001394  0100               	movlb	0	; () banked
  1860  001396  0100               	movlb	0	; () banked
  1861  001398  5DA8               	subwf	___lwmod@dividend& (0+255),w,b
  1862  00139A  0100               	movlb	0	; () banked
  1863  00139C  0100               	movlb	0	; () banked
  1864  00139E  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1865  0013A0  0100               	movlb	0	; () banked
  1866  0013A2  0100               	movlb	0	; () banked
  1867  0013A4  59A9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1868  0013A6  A0D8               	btfss	status,0,c
  1869  0013A8  D00C               	goto	l2902
  1870                           
  1871                           ; BSR set to: 0
  1872  0013AA  0100               	movlb	0	; () banked
  1873  0013AC  0100               	movlb	0	; () banked
  1874  0013AE  51AA               	movf	___lwmod@divisor& (0+255),w,b
  1875  0013B0  0100               	movlb	0	; () banked
  1876  0013B2  0100               	movlb	0	; () banked
  1877  0013B4  5FA8               	subwf	___lwmod@dividend& (0+255),f,b
  1878  0013B6  0100               	movlb	0	; () banked
  1879  0013B8  0100               	movlb	0	; () banked
  1880  0013BA  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1881  0013BC  0100               	movlb	0	; () banked
  1882  0013BE  0100               	movlb	0	; () banked
  1883  0013C0  5BA9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1884  0013C2                     l2902:
  1885                           
  1886                           ; BSR set to: 0
  1887  0013C2  0100               	movlb	0	; () banked
  1888  0013C4  0100               	movlb	0	; () banked
  1889  0013C6  0100               	movlb	0	; () banked
  1890  0013C8  90D8               	bcf	status,0,c
  1891  0013CA  33AB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1892  0013CC  33AA               	rrcf	___lwmod@divisor& (0+255),f,b
  1893                           
  1894                           ; BSR set to: 0
  1895  0013CE  0100               	movlb	0	; () banked
  1896  0013D0  0100               	movlb	0	; () banked
  1897  0013D2  2FAD               	decfsz	___lwmod@counter& (0+255),f,b
  1898  0013D4  D7DC               	goto	l2898
  1899  0013D6                     l1038:
  1900                           
  1901                           ; BSR set to: 0
  1902  0013D6  C0A8  F0A8         	movff	___lwmod@dividend,?___lwmod
  1903  0013DA  C0A9  F0A9         	movff	___lwmod@dividend+1,?___lwmod+1
  1904                           
  1905                           ; BSR set to: 0
  1906  0013DE  0012               	return	
  1907  0013E0                     __end_of___lwmod:
  1908                           	opt stack 0
  1909                           tblptru	equ	0xFF8
  1910                           tblptrh	equ	0xFF7
  1911                           tblptrl	equ	0xFF6
  1912                           tablat	equ	0xFF5
  1913                           postinc0	equ	0xFEE
  1914                           wreg	equ	0xFE8
  1915                           indf2	equ	0xFDF
  1916                           postinc2	equ	0xFDE
  1917                           postdec2	equ	0xFDD
  1918                           fsr2h	equ	0xFDA
  1919                           fsr2l	equ	0xFD9
  1920                           status	equ	0xFD8
  1921                           
  1922 ;; *************** function _FromMainHigh_sendmsg *****************
  1923 ;; Defined at:
  1924 ;;		line 174 in file "../src/messages.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;  length          1    wreg     unsigned char 
  1927 ;;  msgtype         1   62[BANK0 ] unsigned char 
  1928 ;;  data            2   63[BANK0 ] PTR void 
  1929 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), 
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;  length          1   65[BANK0 ] unsigned char 
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  1    wreg      char 
  1934 ;; Registers used:
  1935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1941 ;;      Params:         0       3       0       0       0
  1942 ;;      Locals:         0       1       0       0       0
  1943 ;;      Temps:          0       0       0       0       0
  1944 ;;      Totals:         0       4       0       0       0
  1945 ;;Total ram usage:        4 bytes
  1946 ;; Hardware stack levels used:    1
  1947 ;; Hardware stack levels required when called:   12
  1948 ;; This function calls:
  1949 ;;		_send_msg
  1950 ;; This function is called by:
  1951 ;;		_timer1_lthread
  1952 ;;		_timer0_lthread
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           	psect	text5
  1957  001A54                     __ptext5:
  1958                           	opt stack 0
  1959  001A54                     _FromMainHigh_sendmsg:
  1960                           	opt stack 17
  1961                           
  1962                           ; BSR set to: 0
  1963                           ;incstack = 0
  1964                           ;FromMainHigh_sendmsg@length stored from wreg
  1965  001A54  CFE8 F0C1          	movff	wreg,FromMainHigh_sendmsg@length
  1966                           
  1967                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1968  001A58  0102               	movlb	2	; () banked
  1969  001A5A  0E02               	movlw	high _FromMainHigh_MQ
  1970  001A5C  0100               	movlb	0	; () banked
  1971  001A5E  0100               	movlb	0	; () banked
  1972  001A60  6FB3               	movwf	(send_msg@qptr+1)& (0+255),b
  1973  001A62  0102               	movlb	2	; () banked
  1974  001A64  0E00               	movlw	low _FromMainHigh_MQ
  1975  001A66  0100               	movlb	0	; () banked
  1976  001A68  0100               	movlb	0	; () banked
  1977  001A6A  6FB2               	movwf	send_msg@qptr& (0+255),b
  1978  001A6C  C0C1  F0B4         	movff	FromMainHigh_sendmsg@length,send_msg@length
  1979  001A70  C0BE  F0B5         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  1980  001A74  0100               	movlb	0	; () banked
  1981  001A76  0100               	movlb	0	; () banked
  1982  001A78  C0C0  F0B7         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  1983  001A7C  0100               	movlb	0	; () banked
  1984  001A7E  0100               	movlb	0	; () banked
  1985  001A80  C0BF  F0B6         	movff	FromMainHigh_sendmsg@data,send_msg@data
  1986  001A84  ECF2  F005         	call	_send_msg	;wreg free
  1987  001A88  0012               	return	
  1988  001A8A                     __end_of_FromMainHigh_sendmsg:
  1989                           	opt stack 0
  1990                           tblptru	equ	0xFF8
  1991                           tblptrh	equ	0xFF7
  1992                           tblptrl	equ	0xFF6
  1993                           tablat	equ	0xFF5
  1994                           postinc0	equ	0xFEE
  1995                           wreg	equ	0xFE8
  1996                           indf2	equ	0xFDF
  1997                           postinc2	equ	0xFDE
  1998                           postdec2	equ	0xFDD
  1999                           fsr2h	equ	0xFDA
  2000                           fsr2l	equ	0xFD9
  2001                           status	equ	0xFD8
  2002                           
  2003 ;; *************** function _send_msg *****************
  2004 ;; Defined at:
  2005 ;;		line 24 in file "../src/messages.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  qptr            2   50[BANK0 ] PTR struct __msg_queue
  2008 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2009 ;;  length          1   52[BANK0 ] unsigned char 
  2010 ;;  msgtype         1   53[BANK0 ] unsigned char 
  2011 ;;  data            2   54[BANK0 ] PTR void 
  2012 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  2013 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  qmsg            2   60[BANK0 ] PTR struct __msg
  2016 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2017 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2018 ;;  tlength         2   57[BANK0 ] unsigned int 
  2019 ;;  slot            1   59[BANK0 ] unsigned char 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  1    wreg      char 
  2022 ;; Registers used:
  2023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2029 ;;      Params:         0       6       0       0       0
  2030 ;;      Locals:         0       5       0       0       0
  2031 ;;      Temps:          0       1       0       0       0
  2032 ;;      Totals:         0      12       0       0       0
  2033 ;;Total ram usage:       12 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; Hardware stack levels required when called:   11
  2036 ;; This function calls:
  2037 ;;		_memcpy
  2038 ;; This function is called by:
  2039 ;;		_FromMainHigh_sendmsg
  2040 ;;		_FromMainLow_sendmsg
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           	psect	text6
  2045  000BE4                     __ptext6:
  2046                           	opt stack 0
  2047  000BE4                     _send_msg:
  2048                           	opt stack 17
  2049                           
  2050                           ;messages.c: 25: unsigned char slot;
  2051                           ;messages.c: 27: msg *qmsg;
  2052                           ;messages.c: 28: size_t tlength = length;
  2053                           
  2054                           ;incstack = 0
  2055  000BE4  0100               	movlb	0	; () banked
  2056  000BE6  0100               	movlb	0	; () banked
  2057  000BE8  C0B4  F0B9         	movff	send_msg@length,send_msg@tlength
  2058  000BEC  0100               	movlb	0	; () banked
  2059  000BEE  0100               	movlb	0	; () banked
  2060  000BF0  6BBA               	clrf	(send_msg@tlength+1)& (0+255),b
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2064  000BF2  0100               	movlb	0	; () banked
  2065  000BF4  EE20 F034          	lfsr	2,52
  2066  000BF8  0100               	movlb	0	; () banked
  2067  000BFA  51B2               	movf	send_msg@qptr& (0+255),w,b
  2068  000BFC  26D9               	addwf	fsr2l,f,c
  2069  000BFE  0100               	movlb	0	; () banked
  2070  000C00  51B3               	movf	(send_msg@qptr+1)& (0+255),w,b
  2071  000C02  22DA               	addwfc	fsr2h,f,c
  2072  000C04  50DF               	movf	indf2,w,c
  2073  000C06  0100               	movlb	0	; () banked
  2074  000C08  0100               	movlb	0	; () banked
  2075  000C0A  6FBB               	movwf	send_msg@slot& (0+255),b
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2079  000C0C  0100               	movlb	0	; () banked
  2080  000C0E  0100               	movlb	0	; () banked
  2081  000C10  51BB               	movf	send_msg@slot& (0+255),w,b
  2082  000C12  0D0D               	mullw	13
  2083  000C14  50F3               	movf	prodl,w,c
  2084  000C16  0100               	movlb	0	; () banked
  2085  000C18  0100               	movlb	0	; () banked
  2086  000C1A  25B2               	addwf	send_msg@qptr& (0+255),w,b
  2087  000C1C  0100               	movlb	0	; () banked
  2088  000C1E  0100               	movlb	0	; () banked
  2089  000C20  6FBC               	movwf	send_msg@qmsg& (0+255),b
  2090  000C22  50F4               	movf	prodh,w,c
  2091  000C24  0100               	movlb	0	; () banked
  2092  000C26  0100               	movlb	0	; () banked
  2093  000C28  21B3               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2094  000C2A  0100               	movlb	0	; () banked
  2095  000C2C  6FBD               	movwf	(send_msg@qmsg+1)& (0+255),b
  2096                           
  2097                           ; BSR set to: 0
  2098                           ;messages.c: 41: if (qmsg->full != 0) {
  2099  000C2E  C0BC  FFD9         	movff	send_msg@qmsg,fsr2l
  2100  000C32  C0BD  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2101  000C36  50DF               	movf	indf2,w,c
  2102  000C38  B4D8               	btfsc	status,2,c
  2103  000C3A  D002               	goto	l2512
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;messages.c: 42: return (-1);
  2107  000C3C  0EFF               	movlw	255
  2108  000C3E  0012               	return	
  2109  000C40                     l2512:
  2110                           
  2111                           ; BSR set to: 0
  2112                           ;messages.c: 43: }
  2113                           ;messages.c: 46: qmsg->length = length;
  2114  000C40  0100               	movlb	0	; () banked
  2115  000C42  EE20 F001          	lfsr	2,1
  2116  000C46  0100               	movlb	0	; () banked
  2117  000C48  51BC               	movf	send_msg@qmsg& (0+255),w,b
  2118  000C4A  26D9               	addwf	fsr2l,f,c
  2119  000C4C  0100               	movlb	0	; () banked
  2120  000C4E  51BD               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2121  000C50  22DA               	addwfc	fsr2h,f,c
  2122  000C52  0100               	movlb	0	; () banked
  2123  000C54  C0B4  FFDF         	movff	send_msg@length,indf2
  2124                           
  2125                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2126  000C58  0100               	movlb	0	; () banked
  2127  000C5A  EE20 F002          	lfsr	2,2
  2128  000C5E  0100               	movlb	0	; () banked
  2129  000C60  51BC               	movf	send_msg@qmsg& (0+255),w,b
  2130  000C62  26D9               	addwf	fsr2l,f,c
  2131  000C64  0100               	movlb	0	; () banked
  2132  000C66  51BD               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2133  000C68  22DA               	addwfc	fsr2h,f,c
  2134  000C6A  0100               	movlb	0	; () banked
  2135  000C6C  C0B5  FFDF         	movff	send_msg@msgtype,indf2
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2139  000C70  0E03               	movlw	3
  2140  000C72  0100               	movlb	0	; () banked
  2141  000C74  0100               	movlb	0	; () banked
  2142  000C76  25BC               	addwf	send_msg@qmsg& (0+255),w,b
  2143  000C78  0100               	movlb	0	; () banked
  2144  000C7A  0100               	movlb	0	; () banked
  2145  000C7C  6FA8               	movwf	memcpy@d1& (0+255),b
  2146  000C7E  0E00               	movlw	0
  2147  000C80  0100               	movlb	0	; () banked
  2148  000C82  0100               	movlb	0	; () banked
  2149  000C84  21BD               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2150  000C86  0100               	movlb	0	; () banked
  2151  000C88  6FA9               	movwf	(memcpy@d1+1)& (0+255),b
  2152  000C8A  0100               	movlb	0	; () banked
  2153  000C8C  0100               	movlb	0	; () banked
  2154  000C8E  C0B7  F0AB         	movff	send_msg@data+1,memcpy@s1+1
  2155  000C92  0100               	movlb	0	; () banked
  2156  000C94  0100               	movlb	0	; () banked
  2157  000C96  C0B6  F0AA         	movff	send_msg@data,memcpy@s1
  2158  000C9A  C0B9  F0AC         	movff	send_msg@tlength,memcpy@n
  2159  000C9E  C0BA  F0AD         	movff	send_msg@tlength+1,memcpy@n+1
  2160  000CA2  EC8A  F00B         	call	_memcpy	;wreg free
  2161                           
  2162                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2163  000CA6  0100               	movlb	0	; () banked
  2164  000CA8  EE20 F034          	lfsr	2,52
  2165  000CAC  0100               	movlb	0	; () banked
  2166  000CAE  51B2               	movf	send_msg@qptr& (0+255),w,b
  2167  000CB0  26D9               	addwf	fsr2l,f,c
  2168  000CB2  0100               	movlb	0	; () banked
  2169  000CB4  51B3               	movf	(send_msg@qptr+1)& (0+255),w,b
  2170  000CB6  22DA               	addwfc	fsr2h,f,c
  2171  000CB8  0100               	movlb	0	; () banked
  2172  000CBA  EE10 F034          	lfsr	1,52
  2173  000CBE  0100               	movlb	0	; () banked
  2174  000CC0  51B2               	movf	send_msg@qptr& (0+255),w,b
  2175  000CC2  26E1               	addwf	fsr1l,f,c
  2176  000CC4  0100               	movlb	0	; () banked
  2177  000CC6  51B3               	movf	(send_msg@qptr+1)& (0+255),w,b
  2178  000CC8  22E2               	addwfc	fsr1h,f,c
  2179  000CCA  50E7               	movf	indf1,w,c
  2180  000CCC  0100               	movlb	0	; () banked
  2181  000CCE  6FB8               	movwf	??_send_msg& (0+255),b
  2182  000CD0  0100               	movlb	0	; () banked
  2183  000CD2  29B8               	incf	??_send_msg& (0+255),w,b
  2184  000CD4  0B03               	andlw	3
  2185  000CD6  6EDF               	movwf	indf2,c
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;messages.c: 59: qmsg->full = 1;
  2189  000CD8  C0BC  FFD9         	movff	send_msg@qmsg,fsr2l
  2190  000CDC  C0BD  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2191  000CE0  0E01               	movlw	1
  2192  000CE2  6EDF               	movwf	indf2,c
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;messages.c: 60: return (1);
  2196  000CE4  0E01               	movlw	1
  2197  000CE6  0012               	return	
  2198  000CE8                     __end_of_send_msg:
  2199                           	opt stack 0
  2200                           tblptru	equ	0xFF8
  2201                           tblptrh	equ	0xFF7
  2202                           tblptrl	equ	0xFF6
  2203                           tablat	equ	0xFF5
  2204                           prodh	equ	0xFF4
  2205                           prodl	equ	0xFF3
  2206                           postinc0	equ	0xFEE
  2207                           wreg	equ	0xFE8
  2208                           indf1	equ	0xFE7
  2209                           fsr1h	equ	0xFE2
  2210                           fsr1l	equ	0xFE1
  2211                           indf2	equ	0xFDF
  2212                           postinc2	equ	0xFDE
  2213                           postdec2	equ	0xFDD
  2214                           fsr2h	equ	0xFDA
  2215                           fsr2l	equ	0xFD9
  2216                           status	equ	0xFD8
  2217                           
  2218 ;; *************** function _start_i2c_slave_reply *****************
  2219 ;; Defined at:
  2220 ;;		line 53 in file "../src/my_i2c.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;  length          1    wreg     unsigned char 
  2223 ;;  msg             2   40[BANK0 ] PTR unsigned char 
  2224 ;;		 -> main@msgbuffer(11), i2c_int_handler@msgbuffer(11), 
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;  length          1   44[BANK0 ] unsigned char 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;		None               void
  2229 ;; Registers used:
  2230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2236 ;;      Params:         0       2       0       0       0
  2237 ;;      Locals:         0       1       0       0       0
  2238 ;;      Temps:          0       2       0       0       0
  2239 ;;      Totals:         0       5       0       0       0
  2240 ;;Total ram usage:        5 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:   10
  2243 ;; This function calls:
  2244 ;;		Nothing
  2245 ;; This function is called by:
  2246 ;;		_main
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text7
  2251  000AD6                     __ptext7:
  2252                           	opt stack 0
  2253  000AD6                     _start_i2c_slave_reply:
  2254                           	opt stack 20
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;incstack = 0
  2258                           ;start_i2c_slave_reply@length stored from wreg
  2259  000AD6  CFE8 F0AC          	movff	wreg,start_i2c_slave_reply@length
  2260                           
  2261                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2262  000ADA  0100               	movlb	0	; () banked
  2263  000ADC  EE20 F019          	lfsr	2,25
  2264  000AE0  0100               	movlb	0	; () banked
  2265  000AE2  51CD               	movf	_ic_ptr& (0+255),w,b
  2266  000AE4  26D9               	addwf	fsr2l,f,c
  2267  000AE6  0100               	movlb	0	; () banked
  2268  000AE8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2269  000AEA  22DA               	addwfc	fsr2h,f,c
  2270  000AEC  0E00               	movlw	0
  2271  000AEE  6EDF               	movwf	indf2,c
  2272  000AF0  D042               	goto	l2278
  2273  000AF2                     l2274:
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2277  000AF2  0100               	movlb	0	; () banked
  2278  000AF4  EE20 F019          	lfsr	2,25
  2279  000AF8  0100               	movlb	0	; () banked
  2280  000AFA  51CD               	movf	_ic_ptr& (0+255),w,b
  2281  000AFC  26D9               	addwf	fsr2l,f,c
  2282  000AFE  0100               	movlb	0	; () banked
  2283  000B00  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2284  000B02  22DA               	addwfc	fsr2h,f,c
  2285  000B04  50DF               	movf	indf2,w,c
  2286  000B06  0100               	movlb	0	; () banked
  2287  000B08  6FAA               	movwf	??_start_i2c_slave_reply& (0+255),b
  2288  000B0A  0100               	movlb	0	; () banked
  2289  000B0C  51AA               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2290  000B0E  0D01               	mullw	1
  2291  000B10  50F3               	movf	prodl,w,c
  2292  000B12  0100               	movlb	0	; () banked
  2293  000B14  0100               	movlb	0	; () banked
  2294  000B16  25A8               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2295  000B18  6ED9               	movwf	fsr2l,c
  2296  000B1A  50F4               	movf	prodh,w,c
  2297  000B1C  0100               	movlb	0	; () banked
  2298  000B1E  0100               	movlb	0	; () banked
  2299  000B20  21A9               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2300  000B22  6EDA               	movwf	fsr2h,c
  2301  000B24  0100               	movlb	0	; () banked
  2302  000B26  EE10 F019          	lfsr	1,25
  2303  000B2A  0100               	movlb	0	; () banked
  2304  000B2C  51CD               	movf	_ic_ptr& (0+255),w,b
  2305  000B2E  26E1               	addwf	fsr1l,f,c
  2306  000B30  0100               	movlb	0	; () banked
  2307  000B32  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2308  000B34  22E2               	addwfc	fsr1h,f,c
  2309  000B36  50E7               	movf	indf1,w,c
  2310  000B38  0100               	movlb	0	; () banked
  2311  000B3A  6FAB               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2312  000B3C  0100               	movlb	0	; () banked
  2313  000B3E  51AB               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2314  000B40  0D01               	mullw	1
  2315  000B42  0E0F               	movlw	15
  2316  000B44  26F3               	addwf	prodl,f,c
  2317  000B46  0E00               	movlw	0
  2318  000B48  22F4               	addwfc	prodh,f,c
  2319  000B4A  50F3               	movf	prodl,w,c
  2320  000B4C  0100               	movlb	0	; () banked
  2321  000B4E  0100               	movlb	0	; () banked
  2322  000B50  25CD               	addwf	_ic_ptr& (0+255),w,b
  2323  000B52  6EE1               	movwf	fsr1l,c
  2324  000B54  50F4               	movf	prodh,w,c
  2325  000B56  0100               	movlb	0	; () banked
  2326  000B58  0100               	movlb	0	; () banked
  2327  000B5A  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2328  000B5C  6EE2               	movwf	fsr1h,c
  2329  000B5E  CFDF FFE7          	movff	indf2,indf1
  2330                           
  2331                           ; BSR set to: 0
  2332  000B62  0100               	movlb	0	; () banked
  2333  000B64  EE20 F019          	lfsr	2,25
  2334  000B68  0100               	movlb	0	; () banked
  2335  000B6A  51CD               	movf	_ic_ptr& (0+255),w,b
  2336  000B6C  26D9               	addwf	fsr2l,f,c
  2337  000B6E  0100               	movlb	0	; () banked
  2338  000B70  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2339  000B72  22DA               	addwfc	fsr2h,f,c
  2340  000B74  2ADF               	incf	indf2,f,c
  2341  000B76                     l2278:
  2342                           
  2343                           ; BSR set to: 0
  2344  000B76  0100               	movlb	0	; () banked
  2345  000B78  EE20 F019          	lfsr	2,25
  2346  000B7C  0100               	movlb	0	; () banked
  2347  000B7E  51CD               	movf	_ic_ptr& (0+255),w,b
  2348  000B80  26D9               	addwf	fsr2l,f,c
  2349  000B82  0100               	movlb	0	; () banked
  2350  000B84  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2351  000B86  22DA               	addwfc	fsr2h,f,c
  2352  000B88  50DF               	movf	indf2,w,c
  2353  000B8A  0100               	movlb	0	; () banked
  2354  000B8C  6FAA               	movwf	??_start_i2c_slave_reply& (0+255),b
  2355  000B8E  0100               	movlb	0	; () banked
  2356  000B90  0100               	movlb	0	; () banked
  2357  000B92  51AC               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2358  000B94  0100               	movlb	0	; () banked
  2359  000B96  5DAA               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2360  000B98  A0D8               	btfss	status,0,c
  2361  000B9A  D7AB               	goto	l2274
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;my_i2c.c: 57: }
  2365                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2366                           
  2367                           ; BSR set to: 0
  2368  000B9C  0100               	movlb	0	; () banked
  2369  000B9E  EE20 F019          	lfsr	2,25
  2370  000BA2  0100               	movlb	0	; () banked
  2371  000BA4  51CD               	movf	_ic_ptr& (0+255),w,b
  2372  000BA6  26D9               	addwf	fsr2l,f,c
  2373  000BA8  0100               	movlb	0	; () banked
  2374  000BAA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2375  000BAC  22DA               	addwfc	fsr2h,f,c
  2376  000BAE  0100               	movlb	0	; () banked
  2377  000BB0  C0AC  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2378                           
  2379                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2380  000BB4  0100               	movlb	0	; () banked
  2381  000BB6  EE20 F01A          	lfsr	2,26
  2382  000BBA  0100               	movlb	0	; () banked
  2383  000BBC  51CD               	movf	_ic_ptr& (0+255),w,b
  2384  000BBE  26D9               	addwf	fsr2l,f,c
  2385  000BC0  0100               	movlb	0	; () banked
  2386  000BC2  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2387  000BC4  22DA               	addwfc	fsr2h,f,c
  2388  000BC6  0E01               	movlw	1
  2389  000BC8  6EDF               	movwf	indf2,c
  2390                           
  2391                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2392  000BCA  0100               	movlb	0	; () banked
  2393  000BCC  EE20 F00F          	lfsr	2,15
  2394  000BD0  0100               	movlb	0	; () banked
  2395  000BD2  51CD               	movf	_ic_ptr& (0+255),w,b
  2396  000BD4  26D9               	addwf	fsr2l,f,c
  2397  000BD6  0100               	movlb	0	; () banked
  2398  000BD8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2399  000BDA  22DA               	addwfc	fsr2h,f,c
  2400  000BDC  50DF               	movf	indf2,w,c
  2401  000BDE  6EC9               	movwf	4041,c	;volatile
  2402                           
  2403                           ; BSR set to: 0
  2404                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2405  000BE0  88C6               	bsf	4038,4,c	;volatile
  2406                           
  2407                           ; BSR set to: 0
  2408  000BE2  0012               	return	
  2409  000BE4                     __end_of_start_i2c_slave_reply:
  2410                           	opt stack 0
  2411                           tblptru	equ	0xFF8
  2412                           tblptrh	equ	0xFF7
  2413                           tblptrl	equ	0xFF6
  2414                           tablat	equ	0xFF5
  2415                           prodh	equ	0xFF4
  2416                           prodl	equ	0xFF3
  2417                           postinc0	equ	0xFEE
  2418                           wreg	equ	0xFE8
  2419                           indf1	equ	0xFE7
  2420                           fsr1h	equ	0xFE2
  2421                           fsr1l	equ	0xFE1
  2422                           indf2	equ	0xFDF
  2423                           postinc2	equ	0xFDE
  2424                           postdec2	equ	0xFDD
  2425                           fsr2h	equ	0xFDA
  2426                           fsr2l	equ	0xFD9
  2427                           status	equ	0xFD8
  2428                           
  2429 ;; *************** function _returnADCValue *****************
  2430 ;; Defined at:
  2431 ;;		line 16 in file "../src/interrupts.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;		None
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;  returnVal       2   42[BANK0 ] int 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  2   40[BANK0 ] int 
  2438 ;; Registers used:
  2439 ;;		wreg, status,2
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2445 ;;      Params:         0       2       0       0       0
  2446 ;;      Locals:         0       2       0       0       0
  2447 ;;      Temps:          0       0       0       0       0
  2448 ;;      Totals:         0       4       0       0       0
  2449 ;;Total ram usage:        4 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; Hardware stack levels required when called:   10
  2452 ;; This function calls:
  2453 ;;		Nothing
  2454 ;; This function is called by:
  2455 ;;		_main
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           	psect	text8
  2460  001BDA                     __ptext8:
  2461                           	opt stack 0
  2462  001BDA                     _returnADCValue:
  2463                           	opt stack 20
  2464                           
  2465                           ;interrupts.c: 18: int returnVal = ADCValue;
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;incstack = 0
  2469  001BDA  C0CF  F0AA         	movff	_ADCValue,returnADCValue@returnVal
  2470  001BDE  C0D0  F0AB         	movff	_ADCValue+1,returnADCValue@returnVal+1
  2471                           
  2472                           ;interrupts.c: 19: ADCValue = 1;
  2473  001BE2  0E00               	movlw	0
  2474  001BE4  0100               	movlb	0	; () banked
  2475  001BE6  0100               	movlb	0	; () banked
  2476  001BE8  6FD0               	movwf	(_ADCValue+1)& (0+255),b
  2477  001BEA  0E01               	movlw	1
  2478  001BEC  0100               	movlb	0	; () banked
  2479  001BEE  6FCF               	movwf	_ADCValue& (0+255),b
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;interrupts.c: 20: return returnVal;
  2483  001BF0  C0AA  F0A8         	movff	returnADCValue@returnVal,?_returnADCValue
  2484  001BF4  C0AB  F0A9         	movff	returnADCValue@returnVal+1,?_returnADCValue+1
  2485  001BF8  0012               	return	
  2486  001BFA                     __end_of_returnADCValue:
  2487                           	opt stack 0
  2488                           tblptru	equ	0xFF8
  2489                           tblptrh	equ	0xFF7
  2490                           tblptrl	equ	0xFF6
  2491                           tablat	equ	0xFF5
  2492                           prodh	equ	0xFF4
  2493                           prodl	equ	0xFF3
  2494                           postinc0	equ	0xFEE
  2495                           wreg	equ	0xFE8
  2496                           indf1	equ	0xFE7
  2497                           fsr1h	equ	0xFE2
  2498                           fsr1l	equ	0xFE1
  2499                           indf2	equ	0xFDF
  2500                           postinc2	equ	0xFDE
  2501                           postdec2	equ	0xFDD
  2502                           fsr2h	equ	0xFDA
  2503                           fsr2l	equ	0xFD9
  2504                           status	equ	0xFD8
  2505                           
  2506 ;; *************** function _init_uart_recv *****************
  2507 ;; Defined at:
  2508 ;;		line 30 in file "../src/my_uart.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;  uc              2   40[BANK0 ] PTR struct __uart_comm
  2511 ;;		 -> main@uc(5), 
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;		None
  2514 ;; Return value:  Size  Location     Type
  2515 ;;		None               void
  2516 ;; Registers used:
  2517 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2523 ;;      Params:         0       2       0       0       0
  2524 ;;      Locals:         0       0       0       0       0
  2525 ;;      Temps:          0       0       0       0       0
  2526 ;;      Totals:         0       2       0       0       0
  2527 ;;Total ram usage:        2 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; Hardware stack levels required when called:   10
  2530 ;; This function calls:
  2531 ;;		Nothing
  2532 ;; This function is called by:
  2533 ;;		_main
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           	psect	text9
  2538  001C1A                     __ptext9:
  2539                           	opt stack 0
  2540  001C1A                     _init_uart_recv:
  2541                           	opt stack 20
  2542                           
  2543                           ;my_uart.c: 31: uc_ptr = uc;
  2544                           
  2545                           ; BSR set to: 0
  2546                           ;incstack = 0
  2547  001C1A  0100               	movlb	0	; () banked
  2548  001C1C  C0A9  F04E         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2549  001C20  0100               	movlb	0	; () banked
  2550  001C22  C0A8  F04D         	movff	init_uart_recv@uc,_uc_ptr
  2551                           
  2552                           ; BSR set to: 0
  2553                           ;my_uart.c: 32: uc_ptr->buflen = 0;
  2554  001C26  EE20 F004          	lfsr	2,4
  2555  001C2A  504D               	movf	_uc_ptr,w,c
  2556  001C2C  26D9               	addwf	fsr2l,f,c
  2557  001C2E  504E               	movf	_uc_ptr+1,w,c
  2558  001C30  22DA               	addwfc	fsr2h,f,c
  2559  001C32  0E00               	movlw	0
  2560  001C34  6EDF               	movwf	indf2,c
  2561                           
  2562                           ; BSR set to: 0
  2563  001C36  0012               	return	
  2564  001C38                     __end_of_init_uart_recv:
  2565                           	opt stack 0
  2566                           tblptru	equ	0xFF8
  2567                           tblptrh	equ	0xFF7
  2568                           tblptrl	equ	0xFF6
  2569                           tablat	equ	0xFF5
  2570                           prodh	equ	0xFF4
  2571                           prodl	equ	0xFF3
  2572                           postinc0	equ	0xFEE
  2573                           wreg	equ	0xFE8
  2574                           indf1	equ	0xFE7
  2575                           fsr1h	equ	0xFE2
  2576                           fsr1l	equ	0xFE1
  2577                           indf2	equ	0xFDF
  2578                           postinc2	equ	0xFDE
  2579                           postdec2	equ	0xFDD
  2580                           fsr2h	equ	0xFDA
  2581                           fsr2l	equ	0xFD9
  2582                           status	equ	0xFD8
  2583                           
  2584 ;; *************** function _init_timer1_lthread *****************
  2585 ;; Defined at:
  2586 ;;		line 6 in file "../src/timer1_thread.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  tptr            2   40[BANK0 ] PTR struct __timer1_thre
  2589 ;;		 -> main@t1thread_data(2), 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;		None               void
  2594 ;; Registers used:
  2595 ;;		wreg, fsr2l, fsr2h
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2601 ;;      Params:         0       2       0       0       0
  2602 ;;      Locals:         0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0
  2604 ;;      Totals:         0       2       0       0       0
  2605 ;;Total ram usage:        2 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; Hardware stack levels required when called:   10
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_main
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text10
  2616  001C6C                     __ptext10:
  2617                           	opt stack 0
  2618  001C6C                     _init_timer1_lthread:
  2619                           	opt stack 20
  2620                           
  2621                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;incstack = 0
  2625  001C6C  C0A8  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2626  001C70  C0A9  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2627  001C74  0E00               	movlw	0
  2628  001C76  6EDE               	movwf	postinc2,c
  2629  001C78  0E00               	movlw	0
  2630  001C7A  6EDD               	movwf	postdec2,c
  2631  001C7C  0012               	return	
  2632  001C7E                     __end_of_init_timer1_lthread:
  2633                           	opt stack 0
  2634                           tblptru	equ	0xFF8
  2635                           tblptrh	equ	0xFF7
  2636                           tblptrl	equ	0xFF6
  2637                           tablat	equ	0xFF5
  2638                           prodh	equ	0xFF4
  2639                           prodl	equ	0xFF3
  2640                           postinc0	equ	0xFEE
  2641                           wreg	equ	0xFE8
  2642                           indf1	equ	0xFE7
  2643                           fsr1h	equ	0xFE2
  2644                           fsr1l	equ	0xFE1
  2645                           indf2	equ	0xFDF
  2646                           postinc2	equ	0xFDE
  2647                           postdec2	equ	0xFDD
  2648                           fsr2h	equ	0xFDA
  2649                           fsr2l	equ	0xFD9
  2650                           status	equ	0xFD8
  2651                           
  2652 ;; *************** function _init_queues *****************
  2653 ;; Defined at:
  2654 ;;		line 194 in file "../src/messages.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;		None
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;		None
  2659 ;; Return value:  Size  Location     Type
  2660 ;;		None               void
  2661 ;; Registers used:
  2662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2668 ;;      Params:         0       0       0       0       0
  2669 ;;      Locals:         0       0       0       0       0
  2670 ;;      Temps:          0       1       0       0       0
  2671 ;;      Totals:         0       1       0       0       0
  2672 ;;Total ram usage:        1 bytes
  2673 ;; Hardware stack levels used:    1
  2674 ;; Hardware stack levels required when called:   11
  2675 ;; This function calls:
  2676 ;;		_init_queue
  2677 ;; This function is called by:
  2678 ;;		_main
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text11
  2683  00163C                     __ptext11:
  2684                           	opt stack 0
  2685  00163C                     _init_queues:
  2686                           	opt stack 19
  2687                           
  2688                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2689                           
  2690                           ;incstack = 0
  2691  00163C  0100               	movlb	0	; () banked
  2692  00163E  6FAC               	movwf	??_init_queues& (0+255),b
  2693  001640  0E00               	movlw	0
  2694  001642  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  2695  001644  0100               	movlb	0	; () banked
  2696  001646  51AC               	movf	??_init_queues& (0+255),w,b
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2700  001648  0101               	movlb	1	; () banked
  2701  00164A  0E01               	movlw	high _ToMainLow_MQ
  2702  00164C  0100               	movlb	0	; () banked
  2703  00164E  0100               	movlb	0	; () banked
  2704  001650  6FA9               	movwf	(init_queue@qptr+1)& (0+255),b
  2705  001652  0101               	movlb	1	; () banked
  2706  001654  0E6C               	movlw	low _ToMainLow_MQ
  2707  001656  0100               	movlb	0	; () banked
  2708  001658  0100               	movlb	0	; () banked
  2709  00165A  6FA8               	movwf	init_queue@qptr& (0+255),b
  2710  00165C  EC32  F00A         	call	_init_queue	;wreg free
  2711                           
  2712                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2713  001660  0101               	movlb	1	; () banked
  2714  001662  0E01               	movlw	high _ToMainHigh_MQ
  2715  001664  0100               	movlb	0	; () banked
  2716  001666  0100               	movlb	0	; () banked
  2717  001668  6FA9               	movwf	(init_queue@qptr+1)& (0+255),b
  2718  00166A  0101               	movlb	1	; () banked
  2719  00166C  0E36               	movlw	low _ToMainHigh_MQ
  2720  00166E  0100               	movlb	0	; () banked
  2721  001670  0100               	movlb	0	; () banked
  2722  001672  6FA8               	movwf	init_queue@qptr& (0+255),b
  2723  001674  EC32  F00A         	call	_init_queue	;wreg free
  2724                           
  2725                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2726  001678  0101               	movlb	1	; () banked
  2727  00167A  0E01               	movlw	high _FromMainLow_MQ
  2728  00167C  0100               	movlb	0	; () banked
  2729  00167E  0100               	movlb	0	; () banked
  2730  001680  6FA9               	movwf	(init_queue@qptr+1)& (0+255),b
  2731  001682  0101               	movlb	1	; () banked
  2732  001684  0E00               	movlw	low _FromMainLow_MQ
  2733  001686  0100               	movlb	0	; () banked
  2734  001688  0100               	movlb	0	; () banked
  2735  00168A  6FA8               	movwf	init_queue@qptr& (0+255),b
  2736  00168C  EC32  F00A         	call	_init_queue	;wreg free
  2737                           
  2738                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2739  001690  0102               	movlb	2	; () banked
  2740  001692  0E02               	movlw	high _FromMainHigh_MQ
  2741  001694  0100               	movlb	0	; () banked
  2742  001696  0100               	movlb	0	; () banked
  2743  001698  6FA9               	movwf	(init_queue@qptr+1)& (0+255),b
  2744  00169A  0102               	movlb	2	; () banked
  2745  00169C  0E00               	movlw	low _FromMainHigh_MQ
  2746  00169E  0100               	movlb	0	; () banked
  2747  0016A0  0100               	movlb	0	; () banked
  2748  0016A2  6FA8               	movwf	init_queue@qptr& (0+255),b
  2749  0016A4  EC32  F00A         	call	_init_queue	;wreg free
  2750  0016A8  0012               	return	
  2751  0016AA                     __end_of_init_queues:
  2752                           	opt stack 0
  2753                           tblptru	equ	0xFF8
  2754                           tblptrh	equ	0xFF7
  2755                           tblptrl	equ	0xFF6
  2756                           tablat	equ	0xFF5
  2757                           prodh	equ	0xFF4
  2758                           prodl	equ	0xFF3
  2759                           postinc0	equ	0xFEE
  2760                           wreg	equ	0xFE8
  2761                           indf1	equ	0xFE7
  2762                           fsr1h	equ	0xFE2
  2763                           fsr1l	equ	0xFE1
  2764                           indf2	equ	0xFDF
  2765                           postinc2	equ	0xFDE
  2766                           postdec2	equ	0xFDD
  2767                           fsr2h	equ	0xFDA
  2768                           fsr2l	equ	0xFD9
  2769                           status	equ	0xFD8
  2770                           
  2771 ;; *************** function _init_queue *****************
  2772 ;; Defined at:
  2773 ;;		line 14 in file "../src/messages.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;  qptr            2   40[BANK0 ] PTR struct __msg_queue
  2776 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;  i               1   43[BANK0 ] unsigned char 
  2779 ;; Return value:  Size  Location     Type
  2780 ;;		None               void
  2781 ;; Registers used:
  2782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2788 ;;      Params:         0       2       0       0       0
  2789 ;;      Locals:         0       1       0       0       0
  2790 ;;      Temps:          0       1       0       0       0
  2791 ;;      Totals:         0       4       0       0       0
  2792 ;;Total ram usage:        4 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:   10
  2795 ;; This function calls:
  2796 ;;		Nothing
  2797 ;; This function is called by:
  2798 ;;		_init_queues
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text12
  2803  001464                     __ptext12:
  2804                           	opt stack 0
  2805  001464                     _init_queue:
  2806                           	opt stack 19
  2807                           
  2808                           ;messages.c: 15: unsigned char i;
  2809                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2810                           
  2811                           ;incstack = 0
  2812  001464  0100               	movlb	0	; () banked
  2813  001466  EE20 F034          	lfsr	2,52
  2814  00146A  0100               	movlb	0	; () banked
  2815  00146C  51A8               	movf	init_queue@qptr& (0+255),w,b
  2816  00146E  26D9               	addwf	fsr2l,f,c
  2817  001470  0100               	movlb	0	; () banked
  2818  001472  51A9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2819  001474  22DA               	addwfc	fsr2h,f,c
  2820  001476  0E00               	movlw	0
  2821  001478  6EDF               	movwf	indf2,c
  2822                           
  2823                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2824  00147A  0100               	movlb	0	; () banked
  2825  00147C  EE20 F035          	lfsr	2,53
  2826  001480  0100               	movlb	0	; () banked
  2827  001482  51A8               	movf	init_queue@qptr& (0+255),w,b
  2828  001484  26D9               	addwf	fsr2l,f,c
  2829  001486  0100               	movlb	0	; () banked
  2830  001488  51A9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2831  00148A  22DA               	addwfc	fsr2h,f,c
  2832  00148C  0E00               	movlw	0
  2833  00148E  6EDF               	movwf	indf2,c
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2837  001490  0100               	movlb	0	; () banked
  2838  001492  6FAA               	movwf	??_init_queue& (0+255),b
  2839  001494  0E00               	movlw	0
  2840  001496  0100               	movlb	0	; () banked
  2841  001498  0100               	movlb	0	; () banked
  2842  00149A  6FAB               	movwf	init_queue@i& (0+255),b
  2843  00149C  0100               	movlb	0	; () banked
  2844  00149E  51AA               	movf	??_init_queue& (0+255),w,b
  2845                           
  2846                           ; BSR set to: 0
  2847  0014A0  0E03               	movlw	3
  2848  0014A2  0100               	movlb	0	; () banked
  2849  0014A4  0100               	movlb	0	; () banked
  2850  0014A6  65AB               	cpfsgt	init_queue@i& (0+255),b
  2851  0014A8  D001               	goto	l2494
  2852  0014AA  0012               	return	
  2853  0014AC                     l2494:
  2854                           
  2855                           ; BSR set to: 0
  2856                           ;messages.c: 20: qptr->queue[i].full = 0;
  2857  0014AC  0100               	movlb	0	; () banked
  2858  0014AE  0100               	movlb	0	; () banked
  2859  0014B0  51AB               	movf	init_queue@i& (0+255),w,b
  2860  0014B2  0D0D               	mullw	13
  2861  0014B4  50F3               	movf	prodl,w,c
  2862  0014B6  0100               	movlb	0	; () banked
  2863  0014B8  0100               	movlb	0	; () banked
  2864  0014BA  25A8               	addwf	init_queue@qptr& (0+255),w,b
  2865  0014BC  6ED9               	movwf	fsr2l,c
  2866  0014BE  50F4               	movf	prodh,w,c
  2867  0014C0  0100               	movlb	0	; () banked
  2868  0014C2  0100               	movlb	0	; () banked
  2869  0014C4  21A9               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2870  0014C6  6EDA               	movwf	fsr2h,c
  2871  0014C8  0E00               	movlw	0
  2872  0014CA  6EDF               	movwf	indf2,c
  2873                           
  2874                           ; BSR set to: 0
  2875  0014CC  0100               	movlb	0	; () banked
  2876  0014CE  0100               	movlb	0	; () banked
  2877  0014D0  2BAB               	incf	init_queue@i& (0+255),f,b
  2878                           
  2879                           ; BSR set to: 0
  2880  0014D2  0E03               	movlw	3
  2881  0014D4  0100               	movlb	0	; () banked
  2882  0014D6  0100               	movlb	0	; () banked
  2883  0014D8  65AB               	cpfsgt	init_queue@i& (0+255),b
  2884  0014DA  D7E8               	goto	l2494
  2885  0014DC  0012               	return	
  2886  0014DE                     __end_of_init_queue:
  2887                           	opt stack 0
  2888                           tblptru	equ	0xFF8
  2889                           tblptrh	equ	0xFF7
  2890                           tblptrl	equ	0xFF6
  2891                           tablat	equ	0xFF5
  2892                           prodh	equ	0xFF4
  2893                           prodl	equ	0xFF3
  2894                           postinc0	equ	0xFEE
  2895                           wreg	equ	0xFE8
  2896                           indf1	equ	0xFE7
  2897                           fsr1h	equ	0xFE2
  2898                           fsr1l	equ	0xFE1
  2899                           indf2	equ	0xFDF
  2900                           postinc2	equ	0xFDE
  2901                           postdec2	equ	0xFDD
  2902                           fsr2h	equ	0xFDA
  2903                           fsr2l	equ	0xFD9
  2904                           status	equ	0xFD8
  2905                           
  2906 ;; *************** function _init_i2c *****************
  2907 ;; Defined at:
  2908 ;;		line 300 in file "../src/my_i2c.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;  ic              2   40[BANK0 ] PTR struct __i2c_comm
  2911 ;;		 -> main@ic(28), 
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;		None
  2914 ;; Return value:  Size  Location     Type
  2915 ;;		None               void
  2916 ;; Registers used:
  2917 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2923 ;;      Params:         0       2       0       0       0
  2924 ;;      Locals:         0       0       0       0       0
  2925 ;;      Temps:          0       0       0       0       0
  2926 ;;      Totals:         0       2       0       0       0
  2927 ;;Total ram usage:        2 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; Hardware stack levels required when called:   10
  2930 ;; This function calls:
  2931 ;;		Nothing
  2932 ;; This function is called by:
  2933 ;;		_main
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           	psect	text13
  2938  0016AA                     __ptext13:
  2939                           	opt stack 0
  2940  0016AA                     _init_i2c:
  2941                           	opt stack 20
  2942                           
  2943                           ;my_i2c.c: 301: ic_ptr = ic;
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;incstack = 0
  2947  0016AA  0100               	movlb	0	; () banked
  2948  0016AC  0100               	movlb	0	; () banked
  2949  0016AE  C0A9  F0CE         	movff	init_i2c@ic+1,_ic_ptr+1
  2950  0016B2  0100               	movlb	0	; () banked
  2951  0016B4  0100               	movlb	0	; () banked
  2952  0016B6  C0A8  F0CD         	movff	init_i2c@ic,_ic_ptr
  2953                           
  2954                           ; BSR set to: 0
  2955                           ;my_i2c.c: 302: ic_ptr->buflen = 0;
  2956  0016BA  0100               	movlb	0	; () banked
  2957  0016BC  EE20 F00A          	lfsr	2,10
  2958  0016C0  0100               	movlb	0	; () banked
  2959  0016C2  51CD               	movf	_ic_ptr& (0+255),w,b
  2960  0016C4  26D9               	addwf	fsr2l,f,c
  2961  0016C6  0100               	movlb	0	; () banked
  2962  0016C8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2963  0016CA  22DA               	addwfc	fsr2h,f,c
  2964  0016CC  0E00               	movlw	0
  2965  0016CE  6EDF               	movwf	indf2,c
  2966                           
  2967                           ; BSR set to: 0
  2968                           ;my_i2c.c: 303: ic_ptr->event_count = 0;
  2969  0016D0  0100               	movlb	0	; () banked
  2970  0016D2  EE20 F00B          	lfsr	2,11
  2971  0016D6  0100               	movlb	0	; () banked
  2972  0016D8  51CD               	movf	_ic_ptr& (0+255),w,b
  2973  0016DA  26D9               	addwf	fsr2l,f,c
  2974  0016DC  0100               	movlb	0	; () banked
  2975  0016DE  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2976  0016E0  22DA               	addwfc	fsr2h,f,c
  2977  0016E2  0E00               	movlw	0
  2978  0016E4  6EDF               	movwf	indf2,c
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;my_i2c.c: 304: ic_ptr->status = 0x5;
  2982  0016E6  0100               	movlb	0	; () banked
  2983  0016E8  EE20 F00C          	lfsr	2,12
  2984  0016EC  0100               	movlb	0	; () banked
  2985  0016EE  51CD               	movf	_ic_ptr& (0+255),w,b
  2986  0016F0  26D9               	addwf	fsr2l,f,c
  2987  0016F2  0100               	movlb	0	; () banked
  2988  0016F4  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2989  0016F6  22DA               	addwfc	fsr2h,f,c
  2990  0016F8  0E05               	movlw	5
  2991  0016FA  6EDF               	movwf	indf2,c
  2992                           
  2993                           ; BSR set to: 0
  2994                           ;my_i2c.c: 305: ic_ptr->error_count = 0;
  2995  0016FC  0100               	movlb	0	; () banked
  2996  0016FE  EE20 F00E          	lfsr	2,14
  2997  001702  0100               	movlb	0	; () banked
  2998  001704  51CD               	movf	_ic_ptr& (0+255),w,b
  2999  001706  26D9               	addwf	fsr2l,f,c
  3000  001708  0100               	movlb	0	; () banked
  3001  00170A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  3002  00170C  22DA               	addwfc	fsr2h,f,c
  3003  00170E  0E00               	movlw	0
  3004  001710  6EDF               	movwf	indf2,c
  3005                           
  3006                           ; BSR set to: 0
  3007  001712  0012               	return	
  3008  001714                     __end_of_init_i2c:
  3009                           	opt stack 0
  3010                           tblptru	equ	0xFF8
  3011                           tblptrh	equ	0xFF7
  3012                           tblptrl	equ	0xFF6
  3013                           tablat	equ	0xFF5
  3014                           prodh	equ	0xFF4
  3015                           prodl	equ	0xFF3
  3016                           postinc0	equ	0xFEE
  3017                           wreg	equ	0xFE8
  3018                           indf1	equ	0xFE7
  3019                           fsr1h	equ	0xFE2
  3020                           fsr1l	equ	0xFE1
  3021                           indf2	equ	0xFDF
  3022                           postinc2	equ	0xFDE
  3023                           postdec2	equ	0xFDD
  3024                           fsr2h	equ	0xFDA
  3025                           fsr2l	equ	0xFD9
  3026                           status	equ	0xFD8
  3027                           
  3028 ;; *************** function _initADC *****************
  3029 ;; Defined at:
  3030 ;;		line 98 in file "../src/main.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;		None
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;  ADCValue        2   47[BANK0 ] int 
  3035 ;; Return value:  Size  Location     Type
  3036 ;;		None               void
  3037 ;; Registers used:
  3038 ;;		wreg, status,2, status,0, cstack
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3044 ;;      Params:         0       0       0       0       0
  3045 ;;      Locals:         0       2       0       0       0
  3046 ;;      Temps:          0       2       0       0       0
  3047 ;;      Totals:         0       4       0       0       0
  3048 ;;Total ram usage:        4 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; Hardware stack levels required when called:   11
  3051 ;; This function calls:
  3052 ;;		_ConvertADC
  3053 ;;		_OpenADC
  3054 ;; This function is called by:
  3055 ;;		_main
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text14
  3060  001892                     __ptext14:
  3061                           	opt stack 0
  3062  001892                     _initADC:
  3063                           	opt stack 19
  3064                           
  3065                           ;main.c: 100: int ADCValue = 0;
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;incstack = 0
  3069  001892  0E00               	movlw	0
  3070  001894  0100               	movlb	0	; () banked
  3071  001896  0100               	movlb	0	; () banked
  3072  001898  6FB0               	movwf	(initADC@ADCValue+1)& (0+255),b
  3073  00189A  0E00               	movlw	0
  3074  00189C  0100               	movlb	0	; () banked
  3075  00189E  6FAF               	movwf	initADC@ADCValue& (0+255),b
  3076                           
  3077                           ; BSR set to: 0
  3078                           ;main.c: 102: OpenADC(0b10001111 & 0b11111111 & 0b11111111, 0b10000111 & 0b11111111 & 0b
      +                          11111110 & 0b11111101, 0b11111111);
  3079  0018A0  0100               	movlb	0	; () banked
  3080  0018A2  6FAD               	movwf	??_initADC& (0+255),b
  3081  0018A4  0E84               	movlw	132
  3082  0018A6  0100               	movlb	0	; () banked
  3083  0018A8  0100               	movlb	0	; () banked
  3084  0018AA  6FA8               	movwf	OpenADC@config2& (0+255),b
  3085  0018AC  0100               	movlb	0	; () banked
  3086  0018AE  51AD               	movf	??_initADC& (0+255),w,b
  3087  0018B0  0100               	movlb	0	; () banked
  3088  0018B2  6FAE               	movwf	(??_initADC+1)& (0+255),b
  3089  0018B4  0EFF               	movlw	255
  3090  0018B6  0100               	movlb	0	; () banked
  3091  0018B8  0100               	movlb	0	; () banked
  3092  0018BA  6FA9               	movwf	OpenADC@portconfig& (0+255),b
  3093  0018BC  0100               	movlb	0	; () banked
  3094  0018BE  51AE               	movf	(??_initADC+1)& (0+255),w,b
  3095  0018C0  0E8F               	movlw	143
  3096  0018C2  ECF0  F009         	call	_OpenADC
  3097                           
  3098                           ;main.c: 103: (PIR1bits.ADIF=0,INTCONbits.PEIE=1,PIE1bits.ADIE=1);
  3099  0018C6  9C9E               	bcf	3998,6,c	;volatile
  3100  0018C8  8CF2               	bsf	intcon,6,c	;volatile
  3101  0018CA  8C9D               	bsf	3997,6,c	;volatile
  3102                           
  3103                           ;main.c: 104: (INTCONbits.GIE = 1);
  3104  0018CC  8EF2               	bsf	intcon,7,c	;volatile
  3105                           
  3106                           ;main.c: 105: ConvertADC();
  3107  0018CE  EC75  F00E         	call	_ConvertADC	;wreg free
  3108  0018D2  0012               	return	
  3109  0018D4                     __end_of_initADC:
  3110                           	opt stack 0
  3111                           tblptru	equ	0xFF8
  3112                           tblptrh	equ	0xFF7
  3113                           tblptrl	equ	0xFF6
  3114                           tablat	equ	0xFF5
  3115                           prodh	equ	0xFF4
  3116                           prodl	equ	0xFF3
  3117                           intcon	equ	0xFF2
  3118                           postinc0	equ	0xFEE
  3119                           wreg	equ	0xFE8
  3120                           indf1	equ	0xFE7
  3121                           fsr1h	equ	0xFE2
  3122                           fsr1l	equ	0xFE1
  3123                           indf2	equ	0xFDF
  3124                           postinc2	equ	0xFDE
  3125                           postdec2	equ	0xFDD
  3126                           fsr2h	equ	0xFDA
  3127                           fsr2l	equ	0xFD9
  3128                           status	equ	0xFD8
  3129                           
  3130 ;; *************** function _OpenADC *****************
  3131 ;; Defined at:
  3132 ;;		line 68 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcopen.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;  config          1    wreg     unsigned char 
  3135 ;;  config2         1   40[BANK0 ] unsigned char 
  3136 ;;  portconfig      1   41[BANK0 ] unsigned char 
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;  config          1   44[BANK0 ] unsigned char 
  3139 ;; Return value:  Size  Location     Type
  3140 ;;		None               void
  3141 ;; Registers used:
  3142 ;;		wreg, status,2, status,0
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3148 ;;      Params:         0       2       0       0       0
  3149 ;;      Locals:         0       1       0       0       0
  3150 ;;      Temps:          0       2       0       0       0
  3151 ;;      Totals:         0       5       0       0       0
  3152 ;;Total ram usage:        5 bytes
  3153 ;; Hardware stack levels used:    1
  3154 ;; Hardware stack levels required when called:   10
  3155 ;; This function calls:
  3156 ;;		Nothing
  3157 ;; This function is called by:
  3158 ;;		_initADC
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           	psect	text15
  3163  0013E0                     __ptext15:
  3164                           	opt stack 0
  3165  0013E0                     _OpenADC:
  3166                           	opt stack 19
  3167                           
  3168                           ;incstack = 0
  3169                           ;OpenADC@config stored from wreg
  3170  0013E0  CFE8 F0AC          	movff	wreg,OpenADC@config
  3171  0013E4  0E00               	movlw	0
  3172  0013E6  6EC2               	movwf	4034,c	;volatile
  3173  0013E8  0E00               	movlw	0
  3174  0013EA  6EC0               	movwf	4032,c	;volatile
  3175  0013EC  0100               	movlb	0	; () banked
  3176  0013EE  0100               	movlb	0	; () banked
  3177  0013F0  90D8               	bcf	status,0,c
  3178  0013F2  31A8               	rrcf	OpenADC@config2& (0+255),w,b
  3179  0013F4  0B3C               	andlw	60
  3180  0013F6  6EC2               	movwf	4034,c	;volatile
  3181                           
  3182                           ; BSR set to: 0
  3183  0013F8  C0A8  F0AA         	movff	OpenADC@config2,??_OpenADC
  3184  0013FC  0100               	movlb	0	; () banked
  3185  0013FE  3BAA               	swapf	??_OpenADC& (0+255),f,b
  3186  001400  0EF0               	movlw	240
  3187  001402  17AA               	andwf	??_OpenADC& (0+255),f,b
  3188  001404  0E30               	movlw	48
  3189  001406  0100               	movlb	0	; () banked
  3190  001408  17AA               	andwf	??_OpenADC& (0+255),f,b
  3191  00140A  0100               	movlb	0	; () banked
  3192  00140C  0100               	movlb	0	; () banked
  3193  00140E  51A9               	movf	OpenADC@portconfig& (0+255),w,b
  3194  001410  0B0F               	andlw	15
  3195  001412  0100               	movlb	0	; () banked
  3196  001414  11AA               	iorwf	??_OpenADC& (0+255),w,b
  3197  001416  6EC1               	movwf	4033,c	;volatile
  3198                           
  3199                           ; BSR set to: 0
  3200  001418  C0AC  F0AA         	movff	OpenADC@config,??_OpenADC
  3201  00141C  0100               	movlb	0	; () banked
  3202  00141E  90D8               	bcf	status,0,c
  3203  001420  37AA               	rlcf	??_OpenADC& (0+255),f,b
  3204  001422  0100               	movlb	0	; () banked
  3205  001424  90D8               	bcf	status,0,c
  3206  001426  37AA               	rlcf	??_OpenADC& (0+255),f,b
  3207  001428  0E38               	movlw	56
  3208  00142A  0100               	movlb	0	; () banked
  3209  00142C  17AA               	andwf	??_OpenADC& (0+255),f,b
  3210  00142E  C0AC  F0AB         	movff	OpenADC@config,??_OpenADC+1
  3211  001432  0100               	movlb	0	; () banked
  3212  001434  3BAB               	swapf	(??_OpenADC+1)& (0+255),f,b
  3213  001436  0E0F               	movlw	15
  3214  001438  17AB               	andwf	(??_OpenADC+1)& (0+255),f,b
  3215  00143A  0E07               	movlw	7
  3216  00143C  0100               	movlb	0	; () banked
  3217  00143E  17AB               	andwf	(??_OpenADC+1)& (0+255),f,b
  3218  001440  0100               	movlb	0	; () banked
  3219  001442  0100               	movlb	0	; () banked
  3220  001444  51AC               	movf	OpenADC@config& (0+255),w,b
  3221  001446  0B80               	andlw	128
  3222  001448  0100               	movlb	0	; () banked
  3223  00144A  11AB               	iorwf	(??_OpenADC+1)& (0+255),w,b
  3224  00144C  0100               	movlb	0	; () banked
  3225  00144E  11AA               	iorwf	??_OpenADC& (0+255),w,b
  3226  001450  6EC0               	movwf	4032,c	;volatile
  3227                           
  3228                           ; BSR set to: 0
  3229  001452  0100               	movlb	0	; () banked
  3230  001454  0100               	movlb	0	; () banked
  3231  001456  AFA8               	btfss	OpenADC@config2& (0+255),7,b
  3232  001458  D003               	goto	l423
  3233                           
  3234                           ; BSR set to: 0
  3235  00145A  9C9E               	bcf	3998,6,c	;volatile
  3236  00145C  8C9D               	bsf	3997,6,c	;volatile
  3237  00145E  8CF2               	bsf	intcon,6,c	;volatile
  3238  001460                     l423:
  3239                           
  3240                           ; BSR set to: 0
  3241  001460  80C2               	bsf	4034,0,c	;volatile
  3242                           
  3243                           ; BSR set to: 0
  3244  001462  0012               	return	
  3245  001464                     __end_of_OpenADC:
  3246                           	opt stack 0
  3247                           tblptru	equ	0xFF8
  3248                           tblptrh	equ	0xFF7
  3249                           tblptrl	equ	0xFF6
  3250                           tablat	equ	0xFF5
  3251                           prodh	equ	0xFF4
  3252                           prodl	equ	0xFF3
  3253                           intcon	equ	0xFF2
  3254                           postinc0	equ	0xFEE
  3255                           wreg	equ	0xFE8
  3256                           indf1	equ	0xFE7
  3257                           fsr1h	equ	0xFE2
  3258                           fsr1l	equ	0xFE1
  3259                           indf2	equ	0xFDF
  3260                           postinc2	equ	0xFDE
  3261                           postdec2	equ	0xFDD
  3262                           fsr2h	equ	0xFDA
  3263                           fsr2l	equ	0xFD9
  3264                           status	equ	0xFD8
  3265                           
  3266 ;; *************** function _ConvertADC *****************
  3267 ;; Defined at:
  3268 ;;		line 22 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcconv.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;		None
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;		None
  3273 ;; Return value:  Size  Location     Type
  3274 ;;		None               void
  3275 ;; Registers used:
  3276 ;;		None
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3282 ;;      Params:         0       0       0       0       0
  3283 ;;      Locals:         0       0       0       0       0
  3284 ;;      Temps:          0       0       0       0       0
  3285 ;;      Totals:         0       0       0       0       0
  3286 ;;Total ram usage:        0 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; Hardware stack levels required when called:   10
  3289 ;; This function calls:
  3290 ;;		Nothing
  3291 ;; This function is called by:
  3292 ;;		_initADC
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           	psect	text16
  3297  001CEA                     __ptext16:
  3298                           	opt stack 0
  3299  001CEA                     _ConvertADC:
  3300                           	opt stack 19
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;incstack = 0
  3304  001CEA  82C2               	bsf	4034,1,c	;volatile
  3305  001CEC  0012               	return	
  3306  001CEE                     __end_of_ConvertADC:
  3307                           	opt stack 0
  3308                           tblptru	equ	0xFF8
  3309                           tblptrh	equ	0xFF7
  3310                           tblptrl	equ	0xFF6
  3311                           tablat	equ	0xFF5
  3312                           prodh	equ	0xFF4
  3313                           prodl	equ	0xFF3
  3314                           intcon	equ	0xFF2
  3315                           postinc0	equ	0xFEE
  3316                           wreg	equ	0xFE8
  3317                           indf1	equ	0xFE7
  3318                           fsr1h	equ	0xFE2
  3319                           fsr1l	equ	0xFE1
  3320                           indf2	equ	0xFDF
  3321                           postinc2	equ	0xFDE
  3322                           postdec2	equ	0xFDD
  3323                           fsr2h	equ	0xFDA
  3324                           fsr2l	equ	0xFD9
  3325                           status	equ	0xFD8
  3326                           
  3327 ;; *************** function _i2c_configure_slave *****************
  3328 ;; Defined at:
  3329 ;;		line 311 in file "../src/my_i2c.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;  addr            1    wreg     unsigned char 
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;  addr            1   40[BANK0 ] unsigned char 
  3334 ;; Return value:  Size  Location     Type
  3335 ;;		None               void
  3336 ;; Registers used:
  3337 ;;		wreg, status,2, status,0
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3343 ;;      Params:         0       0       0       0       0
  3344 ;;      Locals:         0       1       0       0       0
  3345 ;;      Temps:          0       0       0       0       0
  3346 ;;      Totals:         0       1       0       0       0
  3347 ;;Total ram usage:        1 bytes
  3348 ;; Hardware stack levels used:    1
  3349 ;; Hardware stack levels required when called:   10
  3350 ;; This function calls:
  3351 ;;		Nothing
  3352 ;; This function is called by:
  3353 ;;		_main
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text17
  3358  001B42                     __ptext17:
  3359                           	opt stack 0
  3360  001B42                     _i2c_configure_slave:
  3361                           	opt stack 20
  3362                           
  3363                           ;incstack = 0
  3364                           ;i2c_configure_slave@addr stored from wreg
  3365  001B42  CFE8 F0A8          	movff	wreg,i2c_configure_slave@addr
  3366                           
  3367                           ;my_i2c.c: 314: TRISCbits.TRISC3 = 1;
  3368  001B46  8694               	bsf	3988,3,c	;volatile
  3369                           
  3370                           ;my_i2c.c: 315: TRISCbits.TRISC4 = 1;
  3371  001B48  8894               	bsf	3988,4,c	;volatile
  3372                           
  3373                           ;my_i2c.c: 317: SSPADD = addr;
  3374  001B4A  C0A8  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3375                           
  3376                           ;my_i2c.c: 319: SSPSTAT = 0x0;
  3377  001B4E  0E00               	movlw	0
  3378  001B50  6EC7               	movwf	4039,c	;volatile
  3379                           
  3380                           ;my_i2c.c: 320: SSPCON1 = 0x0;
  3381  001B52  0E00               	movlw	0
  3382  001B54  6EC6               	movwf	4038,c	;volatile
  3383                           
  3384                           ;my_i2c.c: 321: SSPCON2 = 0x0;
  3385  001B56  0E00               	movlw	0
  3386  001B58  6EC5               	movwf	4037,c	;volatile
  3387                           
  3388                           ;my_i2c.c: 322: SSPCON1 |= 0x0E;
  3389  001B5A  0E0E               	movlw	14
  3390  001B5C  12C6               	iorwf	4038,f,c	;volatile
  3391                           
  3392                           ;my_i2c.c: 323: SSPSTAT |= 0b10000000;
  3393  001B5E  8EC7               	bsf	4039,7,c	;volatile
  3394                           
  3395                           ;my_i2c.c: 325: TRISCbits.TRISC3 = 1;
  3396  001B60  8694               	bsf	3988,3,c	;volatile
  3397                           
  3398                           ;my_i2c.c: 326: TRISCbits.TRISC4 = 1;
  3399  001B62  8894               	bsf	3988,4,c	;volatile
  3400                           
  3401                           ;my_i2c.c: 336: SSPCON2bits.SEN = 1;
  3402  001B64  80C5               	bsf	4037,0,c	;volatile
  3403                           
  3404                           ;my_i2c.c: 337: SSPCON1 |= 0b00100000;
  3405  001B66  8AC6               	bsf	4038,5,c	;volatile
  3406  001B68  0012               	return	
  3407  001B6A                     __end_of_i2c_configure_slave:
  3408                           	opt stack 0
  3409                           tblptru	equ	0xFF8
  3410                           tblptrh	equ	0xFF7
  3411                           tblptrl	equ	0xFF6
  3412                           tablat	equ	0xFF5
  3413                           prodh	equ	0xFF4
  3414                           prodl	equ	0xFF3
  3415                           intcon	equ	0xFF2
  3416                           postinc0	equ	0xFEE
  3417                           wreg	equ	0xFE8
  3418                           indf1	equ	0xFE7
  3419                           fsr1h	equ	0xFE2
  3420                           fsr1l	equ	0xFE1
  3421                           indf2	equ	0xFDF
  3422                           postinc2	equ	0xFDE
  3423                           postdec2	equ	0xFDD
  3424                           fsr2h	equ	0xFDA
  3425                           fsr2l	equ	0xFD9
  3426                           status	equ	0xFD8
  3427                           
  3428 ;; *************** function _enable_interrupts *****************
  3429 ;; Defined at:
  3430 ;;		line 23 in file "../src/interrupts.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;		None
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;		None               void
  3437 ;; Registers used:
  3438 ;;		None
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3444 ;;      Params:         0       0       0       0       0
  3445 ;;      Locals:         0       0       0       0       0
  3446 ;;      Temps:          0       0       0       0       0
  3447 ;;      Totals:         0       0       0       0       0
  3448 ;;Total ram usage:        0 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:   10
  3451 ;; This function calls:
  3452 ;;		Nothing
  3453 ;; This function is called by:
  3454 ;;		_main
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text18
  3459  001CDC                     __ptext18:
  3460                           	opt stack 0
  3461  001CDC                     _enable_interrupts:
  3462                           	opt stack 20
  3463                           
  3464                           ;interrupts.c: 26: RCONbits.IPEN = 1;
  3465                           
  3466                           ;incstack = 0
  3467  001CDC  8ED0               	bsf	4048,7,c	;volatile
  3468                           
  3469                           ;interrupts.c: 27: INTCONbits.GIEH = 1;
  3470  001CDE  8EF2               	bsf	intcon,7,c	;volatile
  3471                           
  3472                           ;interrupts.c: 28: INTCONbits.GIEL = 1;
  3473  001CE0  8CF2               	bsf	intcon,6,c	;volatile
  3474  001CE2  0012               	return	
  3475  001CE4                     __end_of_enable_interrupts:
  3476                           	opt stack 0
  3477                           tblptru	equ	0xFF8
  3478                           tblptrh	equ	0xFF7
  3479                           tblptrl	equ	0xFF6
  3480                           tablat	equ	0xFF5
  3481                           prodh	equ	0xFF4
  3482                           prodl	equ	0xFF3
  3483                           intcon	equ	0xFF2
  3484                           postinc0	equ	0xFEE
  3485                           wreg	equ	0xFE8
  3486                           indf1	equ	0xFE7
  3487                           fsr1h	equ	0xFE2
  3488                           fsr1l	equ	0xFE1
  3489                           indf2	equ	0xFDF
  3490                           postinc2	equ	0xFDE
  3491                           postdec2	equ	0xFDD
  3492                           fsr2h	equ	0xFDA
  3493                           fsr2l	equ	0xFD9
  3494                           status	equ	0xFD8
  3495                           
  3496 ;; *************** function _block_on_To_msgqueues *****************
  3497 ;; Defined at:
  3498 ;;		line 258 in file "../src/messages.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;		None
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;		None
  3503 ;; Return value:  Size  Location     Type
  3504 ;;		None               void
  3505 ;; Registers used:
  3506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3512 ;;      Params:         0       0       0       0       0
  3513 ;;      Locals:         0       0       0       0       0
  3514 ;;      Temps:          0       1       0       0       0
  3515 ;;      Totals:         0       1       0       0       0
  3516 ;;Total ram usage:        1 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:   13
  3519 ;; This function calls:
  3520 ;;		_Delay1KTCYx
  3521 ;;		_check_msg
  3522 ;;		_in_main
  3523 ;; This function is called by:
  3524 ;;		_main
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           	psect	text19
  3529  001182                     __ptext19:
  3530                           	opt stack 0
  3531  001182                     _block_on_To_msgqueues:
  3532                           	opt stack 17
  3533                           
  3534                           ;messages.c: 259: if (!in_main()) {
  3535                           
  3536                           ;incstack = 0
  3537  001182  EC27  F00C         	call	_in_main	;wreg free
  3538  001186  0100               	movlb	0	; () banked
  3539  001188  0100               	movlb	0	; () banked
  3540  00118A  51AD               	movf	(?_in_main+1)& (0+255),w,b
  3541  00118C  0100               	movlb	0	; () banked
  3542  00118E  11AC               	iorwf	?_in_main& (0+255),w,b
  3543  001190  B4D8               	btfsc	status,2,c
  3544  001192  0012               	return	
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;messages.c: 261: }
  3548                           ;messages.c: 262: LATBbits.LATB3 = 1;
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;messages.c: 260: return;
  3552  001194  868A               	bsf	3978,3,c	;volatile
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3556  001196  0100               	movlb	0	; () banked
  3557  001198  6FAE               	movwf	??_block_on_To_msgqueues& (0+255),b
  3558  00119A  0E01               	movlw	1
  3559  00119C  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  3560  00119E  0100               	movlb	0	; () banked
  3561  0011A0  51AE               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3562  0011A2                     l2650:
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3566  0011A2  0101               	movlb	1	; () banked
  3567  0011A4  0E01               	movlw	high _ToMainHigh_MQ
  3568  0011A6  0100               	movlb	0	; () banked
  3569  0011A8  0100               	movlb	0	; () banked
  3570  0011AA  6FA9               	movwf	(check_msg@qptr+1)& (0+255),b
  3571  0011AC  0101               	movlb	1	; () banked
  3572  0011AE  0E36               	movlw	low _ToMainHigh_MQ
  3573  0011B0  0100               	movlb	0	; () banked
  3574  0011B2  0100               	movlb	0	; () banked
  3575  0011B4  6FA8               	movwf	check_msg@qptr& (0+255),b
  3576  0011B6  EC45  F00D         	call	_check_msg	;wreg free
  3577  0011BA  0900               	iorlw	0
  3578  0011BC  B4D8               	btfsc	status,2,c
  3579  0011BE  D008               	goto	l2658
  3580                           
  3581                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3582  0011C0  0100               	movlb	0	; () banked
  3583  0011C2  6FAE               	movwf	??_block_on_To_msgqueues& (0+255),b
  3584  0011C4  0E00               	movlw	0
  3585  0011C6  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  3586  0011C8  0100               	movlb	0	; () banked
  3587  0011CA  51AE               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;messages.c: 267: LATBbits.LATB3 = 0;
  3591  0011CC  968A               	bcf	3978,3,c	;volatile
  3592  0011CE  0012               	return	
  3593  0011D0                     l2658:
  3594                           
  3595                           ;messages.c: 269: }
  3596                           ;messages.c: 270: if (check_msg(&ToMainLow_MQ)) {
  3597  0011D0  0101               	movlb	1	; () banked
  3598  0011D2  0E01               	movlw	high _ToMainLow_MQ
  3599  0011D4  0100               	movlb	0	; () banked
  3600  0011D6  0100               	movlb	0	; () banked
  3601  0011D8  6FA9               	movwf	(check_msg@qptr+1)& (0+255),b
  3602  0011DA  0101               	movlb	1	; () banked
  3603  0011DC  0E6C               	movlw	low _ToMainLow_MQ
  3604  0011DE  0100               	movlb	0	; () banked
  3605  0011E0  0100               	movlb	0	; () banked
  3606  0011E2  6FA8               	movwf	check_msg@qptr& (0+255),b
  3607  0011E4  EC45  F00D         	call	_check_msg	;wreg free
  3608  0011E8  0900               	iorlw	0
  3609  0011EA  B4D8               	btfsc	status,2,c
  3610  0011EC  D008               	goto	l2666
  3611                           
  3612                           ;messages.c: 271: MQ_Main_Willing_to_block = 0;
  3613  0011EE  0100               	movlb	0	; () banked
  3614  0011F0  6FAE               	movwf	??_block_on_To_msgqueues& (0+255),b
  3615  0011F2  0E00               	movlw	0
  3616  0011F4  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  3617  0011F6  0100               	movlb	0	; () banked
  3618  0011F8  51AE               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;messages.c: 272: LATBbits.LATB3 = 0;
  3622  0011FA  968A               	bcf	3978,3,c	;volatile
  3623  0011FC  0012               	return	
  3624  0011FE                     l2666:
  3625                           
  3626                           ;messages.c: 274: }
  3627                           ;messages.c: 275: Delay1KTCYx(10);
  3628  0011FE  0E0A               	movlw	10
  3629  001200  EC2B  F00E         	call	_Delay1KTCYx
  3630                           
  3631                           ;messages.c: 276: LATBbits.LATB3 = !LATBbits.LATB3;
  3632  001204  B68A               	btfsc	3978,3,c	;volatile
  3633  001206  D002               	goto	u1600
  3634  001208  0E01               	movlw	1
  3635  00120A  D001               	goto	u1606
  3636  00120C                     u1600:
  3637  00120C  0E00               	movlw	0
  3638  00120E                     u1606:
  3639  00120E  0100               	movlb	0	; () banked
  3640  001210  6FAE               	movwf	??_block_on_To_msgqueues& (0+255),b
  3641  001212  0100               	movlb	0	; () banked
  3642  001214  47AE               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3643  001216  47AE               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3644  001218  47AE               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3645  00121A  508A               	movf	3978,w,c	;volatile
  3646  00121C  0100               	movlb	0	; () banked
  3647  00121E  19AE               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  3648  001220  0BF7               	andlw	-9
  3649  001222  19AE               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  3650  001224  6E8A               	movwf	3978,c	;volatile
  3651  001226  D7BD               	goto	l2650
  3652  001228                     __end_of_block_on_To_msgqueues:
  3653                           	opt stack 0
  3654                           tblptru	equ	0xFF8
  3655                           tblptrh	equ	0xFF7
  3656                           tblptrl	equ	0xFF6
  3657                           tablat	equ	0xFF5
  3658                           prodh	equ	0xFF4
  3659                           prodl	equ	0xFF3
  3660                           intcon	equ	0xFF2
  3661                           postinc0	equ	0xFEE
  3662                           wreg	equ	0xFE8
  3663                           indf1	equ	0xFE7
  3664                           fsr1h	equ	0xFE2
  3665                           fsr1l	equ	0xFE1
  3666                           indf2	equ	0xFDF
  3667                           postinc2	equ	0xFDE
  3668                           postdec2	equ	0xFDD
  3669                           fsr2h	equ	0xFDA
  3670                           fsr2l	equ	0xFD9
  3671                           status	equ	0xFD8
  3672                           
  3673 ;; *************** function _in_main *****************
  3674 ;; Defined at:
  3675 ;;		line 49 in file "../src/interrupts.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;		None
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;		None
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  2   44[BANK0 ] int 
  3682 ;; Registers used:
  3683 ;;		wreg, status,2, status,0, cstack
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3689 ;;      Params:         0       2       0       0       0
  3690 ;;      Locals:         0       0       0       0       0
  3691 ;;      Temps:          0       0       0       0       0
  3692 ;;      Totals:         0       2       0       0       0
  3693 ;;Total ram usage:        2 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:   12
  3696 ;; This function calls:
  3697 ;;		_in_high_int
  3698 ;;		_in_low_int
  3699 ;; This function is called by:
  3700 ;;		_block_on_To_msgqueues
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           	psect	text20
  3705  00184E                     __ptext20:
  3706                           	opt stack 0
  3707  00184E                     _in_main:
  3708                           	opt stack 17
  3709                           
  3710                           ;interrupts.c: 50: if ((!in_low_int()) && (!in_high_int())) {
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;incstack = 0
  3714  00184E  EC04  F00C         	call	_in_low_int	;wreg free
  3715  001852  0100               	movlb	0	; () banked
  3716  001854  0100               	movlb	0	; () banked
  3717  001856  51AB               	movf	(?_in_low_int+1)& (0+255),w,b
  3718  001858  0100               	movlb	0	; () banked
  3719  00185A  11AA               	iorwf	?_in_low_int& (0+255),w,b
  3720  00185C  A4D8               	btfss	status,2,c
  3721  00185E  D011               	goto	l2680
  3722                           
  3723                           ; BSR set to: 0
  3724  001860  EC3F  F00E         	call	_in_high_int	;wreg free
  3725  001864  0100               	movlb	0	; () banked
  3726  001866  0100               	movlb	0	; () banked
  3727  001868  51A9               	movf	(?_in_high_int+1)& (0+255),w,b
  3728  00186A  0100               	movlb	0	; () banked
  3729  00186C  11A8               	iorwf	?_in_high_int& (0+255),w,b
  3730  00186E  A4D8               	btfss	status,2,c
  3731  001870  D008               	goto	l2680
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;interrupts.c: 51: return (1);
  3735  001872  0E00               	movlw	0
  3736  001874  0100               	movlb	0	; () banked
  3737  001876  0100               	movlb	0	; () banked
  3738  001878  6FAD               	movwf	(?_in_main+1)& (0+255),b
  3739  00187A  0E01               	movlw	1
  3740  00187C  0100               	movlb	0	; () banked
  3741  00187E  6FAC               	movwf	?_in_main& (0+255),b
  3742  001880  0012               	return	
  3743  001882                     l2680:
  3744                           
  3745                           ; BSR set to: 0
  3746                           ;interrupts.c: 53: return (0);
  3747  001882  0E00               	movlw	0
  3748  001884  0100               	movlb	0	; () banked
  3749  001886  0100               	movlb	0	; () banked
  3750  001888  6FAD               	movwf	(?_in_main+1)& (0+255),b
  3751  00188A  0E00               	movlw	0
  3752  00188C  0100               	movlb	0	; () banked
  3753  00188E  6FAC               	movwf	?_in_main& (0+255),b
  3754  001890  0012               	return	
  3755  001892                     __end_of_in_main:
  3756                           	opt stack 0
  3757                           tblptru	equ	0xFF8
  3758                           tblptrh	equ	0xFF7
  3759                           tblptrl	equ	0xFF6
  3760                           tablat	equ	0xFF5
  3761                           prodh	equ	0xFF4
  3762                           prodl	equ	0xFF3
  3763                           intcon	equ	0xFF2
  3764                           postinc0	equ	0xFEE
  3765                           wreg	equ	0xFE8
  3766                           indf1	equ	0xFE7
  3767                           fsr1h	equ	0xFE2
  3768                           fsr1l	equ	0xFE1
  3769                           indf2	equ	0xFDF
  3770                           postinc2	equ	0xFDE
  3771                           postdec2	equ	0xFDD
  3772                           fsr2h	equ	0xFDA
  3773                           fsr2l	equ	0xFD9
  3774                           status	equ	0xFD8
  3775                           
  3776 ;; *************** function _in_low_int *****************
  3777 ;; Defined at:
  3778 ;;		line 39 in file "../src/interrupts.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;		None
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;		None
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  2   42[BANK0 ] int 
  3785 ;; Registers used:
  3786 ;;		wreg, status,2, status,0, cstack
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3792 ;;      Params:         0       2       0       0       0
  3793 ;;      Locals:         0       0       0       0       0
  3794 ;;      Temps:          0       0       0       0       0
  3795 ;;      Totals:         0       2       0       0       0
  3796 ;;Total ram usage:        2 bytes
  3797 ;; Hardware stack levels used:    1
  3798 ;; Hardware stack levels required when called:   11
  3799 ;; This function calls:
  3800 ;;		_in_high_int
  3801 ;; This function is called by:
  3802 ;;		_in_main
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806                           	psect	text21
  3807  001808                     __ptext21:
  3808                           	opt stack 0
  3809  001808                     _in_low_int:
  3810                           	opt stack 17
  3811                           
  3812                           ;interrupts.c: 40: if (INTCONbits.GIEL == 1) {
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;incstack = 0
  3816  001808  ACF2               	btfss	intcon,6,c	;volatile
  3817  00180A  D008               	goto	l2628
  3818                           
  3819                           ;interrupts.c: 41: return (0);
  3820  00180C  0E00               	movlw	0
  3821  00180E  0100               	movlb	0	; () banked
  3822  001810  0100               	movlb	0	; () banked
  3823  001812  6FAB               	movwf	(?_in_low_int+1)& (0+255),b
  3824  001814  0E00               	movlw	0
  3825  001816  0100               	movlb	0	; () banked
  3826  001818  6FAA               	movwf	?_in_low_int& (0+255),b
  3827  00181A  0012               	return	
  3828  00181C                     l2628:
  3829  00181C  EC3F  F00E         	call	_in_high_int	;wreg free
  3830  001820  0100               	movlb	0	; () banked
  3831  001822  0100               	movlb	0	; () banked
  3832  001824  51A9               	movf	(?_in_high_int+1)& (0+255),w,b
  3833  001826  0100               	movlb	0	; () banked
  3834  001828  11A8               	iorwf	?_in_high_int& (0+255),w,b
  3835  00182A  B4D8               	btfsc	status,2,c
  3836  00182C  D008               	goto	l2636
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;interrupts.c: 43: return (0);
  3840  00182E  0E00               	movlw	0
  3841  001830  0100               	movlb	0	; () banked
  3842  001832  0100               	movlb	0	; () banked
  3843  001834  6FAB               	movwf	(?_in_low_int+1)& (0+255),b
  3844  001836  0E00               	movlw	0
  3845  001838  0100               	movlb	0	; () banked
  3846  00183A  6FAA               	movwf	?_in_low_int& (0+255),b
  3847  00183C  0012               	return	
  3848  00183E                     l2636:
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;interrupts.c: 45: return (1);
  3852  00183E  0E00               	movlw	0
  3853  001840  0100               	movlb	0	; () banked
  3854  001842  0100               	movlb	0	; () banked
  3855  001844  6FAB               	movwf	(?_in_low_int+1)& (0+255),b
  3856  001846  0E01               	movlw	1
  3857  001848  0100               	movlb	0	; () banked
  3858  00184A  6FAA               	movwf	?_in_low_int& (0+255),b
  3859  00184C  0012               	return	
  3860  00184E                     __end_of_in_low_int:
  3861                           	opt stack 0
  3862                           tblptru	equ	0xFF8
  3863                           tblptrh	equ	0xFF7
  3864                           tblptrl	equ	0xFF6
  3865                           tablat	equ	0xFF5
  3866                           prodh	equ	0xFF4
  3867                           prodl	equ	0xFF3
  3868                           intcon	equ	0xFF2
  3869                           postinc0	equ	0xFEE
  3870                           wreg	equ	0xFE8
  3871                           indf1	equ	0xFE7
  3872                           fsr1h	equ	0xFE2
  3873                           fsr1l	equ	0xFE1
  3874                           indf2	equ	0xFDF
  3875                           postinc2	equ	0xFDE
  3876                           postdec2	equ	0xFDD
  3877                           fsr2h	equ	0xFDA
  3878                           fsr2l	equ	0xFD9
  3879                           status	equ	0xFD8
  3880                           
  3881 ;; *************** function _in_high_int *****************
  3882 ;; Defined at:
  3883 ;;		line 31 in file "../src/interrupts.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;		None
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;		None
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  2   40[BANK0 ] int 
  3890 ;; Registers used:
  3891 ;;		wreg, status,2
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3897 ;;      Params:         0       2       0       0       0
  3898 ;;      Locals:         0       0       0       0       0
  3899 ;;      Temps:          0       0       0       0       0
  3900 ;;      Totals:         0       2       0       0       0
  3901 ;;Total ram usage:        2 bytes
  3902 ;; Hardware stack levels used:    1
  3903 ;; Hardware stack levels required when called:   10
  3904 ;; This function calls:
  3905 ;;		Nothing
  3906 ;; This function is called by:
  3907 ;;		_in_low_int
  3908 ;;		_in_main
  3909 ;; This function uses a non-reentrant model
  3910 ;;
  3911                           
  3912                           	psect	text22
  3913  001C7E                     __ptext22:
  3914                           	opt stack 0
  3915  001C7E                     _in_high_int:
  3916                           	opt stack 17
  3917                           
  3918                           ;interrupts.c: 32: return (!INTCONbits.GIEH);
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;incstack = 0
  3922  001C7E  0E00               	movlw	0
  3923  001C80  AEF2               	btfss	intcon,7,c	;volatile
  3924  001C82  0E01               	movlw	1
  3925  001C84  0100               	movlb	0	; () banked
  3926  001C86  0100               	movlb	0	; () banked
  3927  001C88  6FA8               	movwf	?_in_high_int& (0+255),b
  3928  001C8A  0100               	movlb	0	; () banked
  3929  001C8C  6BA9               	clrf	(?_in_high_int+1)& (0+255),b
  3930  001C8E  0012               	return	
  3931  001C90                     __end_of_in_high_int:
  3932                           	opt stack 0
  3933                           tblptru	equ	0xFF8
  3934                           tblptrh	equ	0xFF7
  3935                           tblptrl	equ	0xFF6
  3936                           tablat	equ	0xFF5
  3937                           prodh	equ	0xFF4
  3938                           prodl	equ	0xFF3
  3939                           intcon	equ	0xFF2
  3940                           postinc0	equ	0xFEE
  3941                           wreg	equ	0xFE8
  3942                           indf1	equ	0xFE7
  3943                           fsr1h	equ	0xFE2
  3944                           fsr1l	equ	0xFE1
  3945                           indf2	equ	0xFDF
  3946                           postinc2	equ	0xFDE
  3947                           postdec2	equ	0xFDD
  3948                           fsr2h	equ	0xFDA
  3949                           fsr2l	equ	0xFD9
  3950                           status	equ	0xFD8
  3951                           
  3952 ;; *************** function _check_msg *****************
  3953 ;; Defined at:
  3954 ;;		line 222 in file "../src/messages.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  qptr            2   40[BANK0 ] PTR struct __msg_queue
  3957 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;		None
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  1    wreg      unsigned char 
  3962 ;; Registers used:
  3963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3969 ;;      Params:         0       2       0       0       0
  3970 ;;      Locals:         0       0       0       0       0
  3971 ;;      Temps:          0       1       0       0       0
  3972 ;;      Totals:         0       3       0       0       0
  3973 ;;Total ram usage:        3 bytes
  3974 ;; Hardware stack levels used:    1
  3975 ;; Hardware stack levels required when called:   10
  3976 ;; This function calls:
  3977 ;;		Nothing
  3978 ;; This function is called by:
  3979 ;;		_block_on_To_msgqueues
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           	psect	text23
  3984  001A8A                     __ptext23:
  3985                           	opt stack 0
  3986  001A8A                     _check_msg:
  3987                           	opt stack 19
  3988                           
  3989                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;incstack = 0
  3993  001A8A  0100               	movlb	0	; () banked
  3994  001A8C  EE20 F035          	lfsr	2,53
  3995  001A90  0100               	movlb	0	; () banked
  3996  001A92  51A8               	movf	check_msg@qptr& (0+255),w,b
  3997  001A94  26D9               	addwf	fsr2l,f,c
  3998  001A96  0100               	movlb	0	; () banked
  3999  001A98  51A9               	movf	(check_msg@qptr+1)& (0+255),w,b
  4000  001A9A  22DA               	addwfc	fsr2h,f,c
  4001  001A9C  50DF               	movf	indf2,w,c
  4002  001A9E  0100               	movlb	0	; () banked
  4003  001AA0  6FAA               	movwf	??_check_msg& (0+255),b
  4004  001AA2  0100               	movlb	0	; () banked
  4005  001AA4  51AA               	movf	??_check_msg& (0+255),w,b
  4006  001AA6  0D0D               	mullw	13
  4007  001AA8  50F3               	movf	prodl,w,c
  4008  001AAA  0100               	movlb	0	; () banked
  4009  001AAC  0100               	movlb	0	; () banked
  4010  001AAE  25A8               	addwf	check_msg@qptr& (0+255),w,b
  4011  001AB0  6ED9               	movwf	fsr2l,c
  4012  001AB2  50F4               	movf	prodh,w,c
  4013  001AB4  0100               	movlb	0	; () banked
  4014  001AB6  0100               	movlb	0	; () banked
  4015  001AB8  21A9               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4016  001ABA  6EDA               	movwf	fsr2h,c
  4017  001ABC  50DF               	movf	indf2,w,c
  4018  001ABE  0012               	return	
  4019  001AC0                     __end_of_check_msg:
  4020                           	opt stack 0
  4021                           tblptru	equ	0xFF8
  4022                           tblptrh	equ	0xFF7
  4023                           tblptrl	equ	0xFF6
  4024                           tablat	equ	0xFF5
  4025                           prodh	equ	0xFF4
  4026                           prodl	equ	0xFF3
  4027                           intcon	equ	0xFF2
  4028                           postinc0	equ	0xFEE
  4029                           wreg	equ	0xFE8
  4030                           indf1	equ	0xFE7
  4031                           fsr1h	equ	0xFE2
  4032                           fsr1l	equ	0xFE1
  4033                           indf2	equ	0xFDF
  4034                           postinc2	equ	0xFDE
  4035                           postdec2	equ	0xFDD
  4036                           fsr2h	equ	0xFDA
  4037                           fsr2l	equ	0xFD9
  4038                           status	equ	0xFD8
  4039                           
  4040 ;; *************** function _Delay1KTCYx *****************
  4041 ;; Defined at:
  4042 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/pic18/d1ktcyx.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;  unit            1    wreg     unsigned char 
  4045 ;; Auto vars:     Size  Location     Type
  4046 ;;  unit            1   40[BANK0 ] unsigned char 
  4047 ;; Return value:  Size  Location     Type
  4048 ;;		None               void
  4049 ;; Registers used:
  4050 ;;		wreg
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4056 ;;      Params:         0       0       0       0       0
  4057 ;;      Locals:         0       1       0       0       0
  4058 ;;      Temps:          0       0       0       0       0
  4059 ;;      Totals:         0       1       0       0       0
  4060 ;;Total ram usage:        1 bytes
  4061 ;; Hardware stack levels used:    1
  4062 ;; Hardware stack levels required when called:   10
  4063 ;; This function calls:
  4064 ;;		Nothing
  4065 ;; This function is called by:
  4066 ;;		_block_on_To_msgqueues
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070                           	psect	text24
  4071  001C56                     __ptext24:
  4072                           	opt stack 0
  4073  001C56                     _Delay1KTCYx:
  4074                           	opt stack 19
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;incstack = 0
  4078                           ;Delay1KTCYx@unit stored from wreg
  4079  001C56  CFE8 F0A8          	movff	wreg,Delay1KTCYx@unit
  4080  001C5A                     l726:
  4081  001C5A  0EFA               	movlw	250
  4082  001C5C                     u2447:
  4083  001C5C  F000               	nop	
  4084  001C5E  2EE8               	decfsz	wreg,f,c
  4085  001C60  D7FD               	goto	u2447
  4086  001C62  0100               	movlb	0	; () banked
  4087  001C64  0100               	movlb	0	; () banked
  4088  001C66  2FA8               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4089  001C68  D7F8               	goto	l726
  4090  001C6A  0012               	return	
  4091  001C6C                     __end_of_Delay1KTCYx:
  4092                           	opt stack 0
  4093                           tblptru	equ	0xFF8
  4094                           tblptrh	equ	0xFF7
  4095                           tblptrl	equ	0xFF6
  4096                           tablat	equ	0xFF5
  4097                           prodh	equ	0xFF4
  4098                           prodl	equ	0xFF3
  4099                           intcon	equ	0xFF2
  4100                           postinc0	equ	0xFEE
  4101                           wreg	equ	0xFE8
  4102                           indf1	equ	0xFE7
  4103                           fsr1h	equ	0xFE2
  4104                           fsr1l	equ	0xFE1
  4105                           indf2	equ	0xFDF
  4106                           postinc2	equ	0xFDE
  4107                           postdec2	equ	0xFDD
  4108                           fsr2h	equ	0xFDA
  4109                           fsr2l	equ	0xFD9
  4110                           status	equ	0xFD8
  4111                           
  4112 ;; *************** function _ToMainLow_recvmsg *****************
  4113 ;; Defined at:
  4114 ;;		line 112 in file "../src/messages.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;  maxlength       1    wreg     unsigned char 
  4117 ;;  msgtype         2   64[BANK0 ] PTR unsigned char 
  4118 ;;		 -> main@msgtype(1), 
  4119 ;;  data            2   66[BANK0 ] PTR void 
  4120 ;;		 -> main@msgbuffer(11), 
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;  maxlength       1   68[BANK0 ] unsigned char 
  4123 ;; Return value:  Size  Location     Type
  4124 ;;                  1    wreg      char 
  4125 ;; Registers used:
  4126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4127 ;; Tracked objects:
  4128 ;;		On entry : 0/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4132 ;;      Params:         0       4       0       0       0
  4133 ;;      Locals:         0       1       0       0       0
  4134 ;;      Temps:          0       0       0       0       0
  4135 ;;      Totals:         0       5       0       0       0
  4136 ;;Total ram usage:        5 bytes
  4137 ;; Hardware stack levels used:    1
  4138 ;; Hardware stack levels required when called:   12
  4139 ;; This function calls:
  4140 ;;		_recv_msg
  4141 ;; This function is called by:
  4142 ;;		_main
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           	psect	text25
  4147  0018D4                     __ptext25:
  4148                           	opt stack 0
  4149  0018D4                     _ToMainLow_recvmsg:
  4150                           	opt stack 18
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;incstack = 0
  4154                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4155  0018D4  CFE8 F0C4          	movff	wreg,ToMainLow_recvmsg@maxlength
  4156                           
  4157                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4158  0018D8  0101               	movlb	1	; () banked
  4159  0018DA  0E01               	movlw	high _ToMainLow_MQ
  4160  0018DC  0100               	movlb	0	; () banked
  4161  0018DE  0100               	movlb	0	; () banked
  4162  0018E0  6FB3               	movwf	(recv_msg@qptr+1)& (0+255),b
  4163  0018E2  0101               	movlb	1	; () banked
  4164  0018E4  0E6C               	movlw	low _ToMainLow_MQ
  4165  0018E6  0100               	movlb	0	; () banked
  4166  0018E8  0100               	movlb	0	; () banked
  4167  0018EA  6FB2               	movwf	recv_msg@qptr& (0+255),b
  4168  0018EC  C0C4  F0B4         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4169  0018F0  0100               	movlb	0	; () banked
  4170  0018F2  0100               	movlb	0	; () banked
  4171  0018F4  C0C1  F0B6         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4172  0018F8  0100               	movlb	0	; () banked
  4173  0018FA  0100               	movlb	0	; () banked
  4174  0018FC  C0C0  F0B5         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4175  001900  0100               	movlb	0	; () banked
  4176  001902  0100               	movlb	0	; () banked
  4177  001904  C0C3  F0B8         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4178  001908  0100               	movlb	0	; () banked
  4179  00190A  0100               	movlb	0	; () banked
  4180  00190C  C0C2  F0B7         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4181  001910  ECD0  F004         	call	_recv_msg	;wreg free
  4182  001914  0012               	return	
  4183  001916                     __end_of_ToMainLow_recvmsg:
  4184                           	opt stack 0
  4185                           tblptru	equ	0xFF8
  4186                           tblptrh	equ	0xFF7
  4187                           tblptrl	equ	0xFF6
  4188                           tablat	equ	0xFF5
  4189                           prodh	equ	0xFF4
  4190                           prodl	equ	0xFF3
  4191                           intcon	equ	0xFF2
  4192                           postinc0	equ	0xFEE
  4193                           wreg	equ	0xFE8
  4194                           indf1	equ	0xFE7
  4195                           fsr1h	equ	0xFE2
  4196                           fsr1l	equ	0xFE1
  4197                           indf2	equ	0xFDF
  4198                           postinc2	equ	0xFDE
  4199                           postdec2	equ	0xFDD
  4200                           fsr2h	equ	0xFDA
  4201                           fsr2l	equ	0xFD9
  4202                           status	equ	0xFD8
  4203                           
  4204 ;; *************** function _ToMainHigh_recvmsg *****************
  4205 ;; Defined at:
  4206 ;;		line 135 in file "../src/messages.c"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;  maxlength       1    wreg     unsigned char 
  4209 ;;  msgtype         2   64[BANK0 ] PTR unsigned char 
  4210 ;;		 -> main@msgtype(1), 
  4211 ;;  data            2   66[BANK0 ] PTR void 
  4212 ;;		 -> main@msgbuffer(11), 
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;  maxlength       1   68[BANK0 ] unsigned char 
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  1    wreg      char 
  4217 ;; Registers used:
  4218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4224 ;;      Params:         0       4       0       0       0
  4225 ;;      Locals:         0       1       0       0       0
  4226 ;;      Temps:          0       0       0       0       0
  4227 ;;      Totals:         0       5       0       0       0
  4228 ;;Total ram usage:        5 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; Hardware stack levels required when called:   12
  4231 ;; This function calls:
  4232 ;;		_recv_msg
  4233 ;; This function is called by:
  4234 ;;		_main
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           	psect	text26
  4239  001916                     __ptext26:
  4240                           	opt stack 0
  4241  001916                     _ToMainHigh_recvmsg:
  4242                           	opt stack 18
  4243                           
  4244                           ;incstack = 0
  4245                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4246  001916  CFE8 F0C4          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4247                           
  4248                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4249  00191A  0101               	movlb	1	; () banked
  4250  00191C  0E01               	movlw	high _ToMainHigh_MQ
  4251  00191E  0100               	movlb	0	; () banked
  4252  001920  0100               	movlb	0	; () banked
  4253  001922  6FB3               	movwf	(recv_msg@qptr+1)& (0+255),b
  4254  001924  0101               	movlb	1	; () banked
  4255  001926  0E36               	movlw	low _ToMainHigh_MQ
  4256  001928  0100               	movlb	0	; () banked
  4257  00192A  0100               	movlb	0	; () banked
  4258  00192C  6FB2               	movwf	recv_msg@qptr& (0+255),b
  4259  00192E  C0C4  F0B4         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4260  001932  0100               	movlb	0	; () banked
  4261  001934  0100               	movlb	0	; () banked
  4262  001936  C0C1  F0B6         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4263  00193A  0100               	movlb	0	; () banked
  4264  00193C  0100               	movlb	0	; () banked
  4265  00193E  C0C0  F0B5         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4266  001942  0100               	movlb	0	; () banked
  4267  001944  0100               	movlb	0	; () banked
  4268  001946  C0C3  F0B8         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4269  00194A  0100               	movlb	0	; () banked
  4270  00194C  0100               	movlb	0	; () banked
  4271  00194E  C0C2  F0B7         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4272  001952  ECD0  F004         	call	_recv_msg	;wreg free
  4273  001956  0012               	return	
  4274  001958                     __end_of_ToMainHigh_recvmsg:
  4275                           	opt stack 0
  4276                           tblptru	equ	0xFF8
  4277                           tblptrh	equ	0xFF7
  4278                           tblptrl	equ	0xFF6
  4279                           tablat	equ	0xFF5
  4280                           prodh	equ	0xFF4
  4281                           prodl	equ	0xFF3
  4282                           intcon	equ	0xFF2
  4283                           postinc0	equ	0xFEE
  4284                           wreg	equ	0xFE8
  4285                           indf1	equ	0xFE7
  4286                           fsr1h	equ	0xFE2
  4287                           fsr1l	equ	0xFE1
  4288                           indf2	equ	0xFDF
  4289                           postinc2	equ	0xFDE
  4290                           postdec2	equ	0xFDD
  4291                           fsr2h	equ	0xFDA
  4292                           fsr2l	equ	0xFD9
  4293                           status	equ	0xFD8
  4294                           
  4295 ;; *************** function _recv_msg *****************
  4296 ;; Defined at:
  4297 ;;		line 63 in file "../src/messages.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;  qptr            2   50[BANK0 ] PTR struct __msg_queue
  4300 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4301 ;;  maxlength       1   52[BANK0 ] unsigned char 
  4302 ;;  msgtype         2   53[BANK0 ] PTR unsigned char 
  4303 ;;		 -> main@msgtype(1), timer0_int_handler@msgtype(2), 
  4304 ;;  data            2   55[BANK0 ] PTR void 
  4305 ;;		 -> main@msgbuffer(11), timer0_int_handler@val(2), 
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;  qmsg            2   62[BANK0 ] PTR struct __msg
  4308 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4309 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4310 ;;  tlength         2   60[BANK0 ] unsigned int 
  4311 ;;  slot            1   59[BANK0 ] unsigned char 
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  1    wreg      char 
  4314 ;; Registers used:
  4315 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4321 ;;      Params:         0       7       0       0       0
  4322 ;;      Locals:         0       5       0       0       0
  4323 ;;      Temps:          0       2       0       0       0
  4324 ;;      Totals:         0      14       0       0       0
  4325 ;;Total ram usage:       14 bytes
  4326 ;; Hardware stack levels used:    1
  4327 ;; Hardware stack levels required when called:   11
  4328 ;; This function calls:
  4329 ;;		_memcpy
  4330 ;; This function is called by:
  4331 ;;		_ToMainLow_recvmsg
  4332 ;;		_ToMainHigh_recvmsg
  4333 ;;		_FromMainLow_recvmsg
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           	psect	text27
  4338  0009A0                     __ptext27:
  4339                           	opt stack 0
  4340  0009A0                     _recv_msg:
  4341                           	opt stack 18
  4342                           
  4343                           ;messages.c: 64: unsigned char slot;
  4344                           ;messages.c: 68: msg *qmsg;
  4345                           ;messages.c: 69: size_t tlength;
  4346                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4347                           
  4348                           ;incstack = 0
  4349  0009A0  0100               	movlb	0	; () banked
  4350  0009A2  EE20 F035          	lfsr	2,53
  4351  0009A6  0100               	movlb	0	; () banked
  4352  0009A8  51B2               	movf	recv_msg@qptr& (0+255),w,b
  4353  0009AA  26D9               	addwf	fsr2l,f,c
  4354  0009AC  0100               	movlb	0	; () banked
  4355  0009AE  51B3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4356  0009B0  22DA               	addwfc	fsr2h,f,c
  4357  0009B2  50DF               	movf	indf2,w,c
  4358  0009B4  0100               	movlb	0	; () banked
  4359  0009B6  0100               	movlb	0	; () banked
  4360  0009B8  6FBB               	movwf	recv_msg@slot& (0+255),b
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4364  0009BA  0100               	movlb	0	; () banked
  4365  0009BC  0100               	movlb	0	; () banked
  4366  0009BE  51BB               	movf	recv_msg@slot& (0+255),w,b
  4367  0009C0  0D0D               	mullw	13
  4368  0009C2  50F3               	movf	prodl,w,c
  4369  0009C4  0100               	movlb	0	; () banked
  4370  0009C6  0100               	movlb	0	; () banked
  4371  0009C8  25B2               	addwf	recv_msg@qptr& (0+255),w,b
  4372  0009CA  0100               	movlb	0	; () banked
  4373  0009CC  0100               	movlb	0	; () banked
  4374  0009CE  6FBE               	movwf	recv_msg@qmsg& (0+255),b
  4375  0009D0  50F4               	movf	prodh,w,c
  4376  0009D2  0100               	movlb	0	; () banked
  4377  0009D4  0100               	movlb	0	; () banked
  4378  0009D6  21B3               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4379  0009D8  0100               	movlb	0	; () banked
  4380  0009DA  6FBF               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;messages.c: 74: if (qmsg->full == 1) {
  4384  0009DC  0E01               	movlw	1
  4385  0009DE  C0BE  FFD9         	movff	recv_msg@qmsg,fsr2l
  4386  0009E2  C0BF  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4387  0009E6  62DF               	cpfseq	indf2,c
  4388  0009E8  D074               	goto	l2562
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4392  0009EA  0100               	movlb	0	; () banked
  4393  0009EC  EE20 F001          	lfsr	2,1
  4394  0009F0  0100               	movlb	0	; () banked
  4395  0009F2  51BE               	movf	recv_msg@qmsg& (0+255),w,b
  4396  0009F4  26D9               	addwf	fsr2l,f,c
  4397  0009F6  0100               	movlb	0	; () banked
  4398  0009F8  51BF               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4399  0009FA  22DA               	addwfc	fsr2h,f,c
  4400  0009FC  50DF               	movf	indf2,w,c
  4401  0009FE  0100               	movlb	0	; () banked
  4402  000A00  0100               	movlb	0	; () banked
  4403  000A02  5DB4               	subwf	recv_msg@maxlength& (0+255),w,b
  4404  000A04  B0D8               	btfsc	status,0,c
  4405  000A06  D002               	goto	l2546
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;messages.c: 77: return (-3);
  4409  000A08  0EFD               	movlw	253
  4410  000A0A  0012               	return	
  4411  000A0C                     l2546:
  4412                           
  4413                           ; BSR set to: 0
  4414                           ;messages.c: 78: }
  4415                           ;messages.c: 80: tlength = qmsg->length;
  4416  000A0C  0100               	movlb	0	; () banked
  4417  000A0E  EE20 F001          	lfsr	2,1
  4418  000A12  0100               	movlb	0	; () banked
  4419  000A14  51BE               	movf	recv_msg@qmsg& (0+255),w,b
  4420  000A16  26D9               	addwf	fsr2l,f,c
  4421  000A18  0100               	movlb	0	; () banked
  4422  000A1A  51BF               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4423  000A1C  22DA               	addwfc	fsr2h,f,c
  4424  000A1E  50DF               	movf	indf2,w,c
  4425  000A20  0100               	movlb	0	; () banked
  4426  000A22  6FB9               	movwf	??_recv_msg& (0+255),b
  4427  000A24  0100               	movlb	0	; () banked
  4428  000A26  51B9               	movf	??_recv_msg& (0+255),w,b
  4429  000A28  0100               	movlb	0	; () banked
  4430  000A2A  0100               	movlb	0	; () banked
  4431  000A2C  6FBC               	movwf	recv_msg@tlength& (0+255),b
  4432  000A2E  0100               	movlb	0	; () banked
  4433  000A30  6BBD               	clrf	(recv_msg@tlength+1)& (0+255),b
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4437  000A32  0100               	movlb	0	; () banked
  4438  000A34  0100               	movlb	0	; () banked
  4439  000A36  C0B8  F0A9         	movff	recv_msg@data+1,memcpy@d1+1
  4440  000A3A  0100               	movlb	0	; () banked
  4441  000A3C  0100               	movlb	0	; () banked
  4442  000A3E  C0B7  F0A8         	movff	recv_msg@data,memcpy@d1
  4443  000A42  0E03               	movlw	3
  4444  000A44  0100               	movlb	0	; () banked
  4445  000A46  0100               	movlb	0	; () banked
  4446  000A48  25BE               	addwf	recv_msg@qmsg& (0+255),w,b
  4447  000A4A  0100               	movlb	0	; () banked
  4448  000A4C  6FB9               	movwf	??_recv_msg& (0+255),b
  4449  000A4E  0E00               	movlw	0
  4450  000A50  0100               	movlb	0	; () banked
  4451  000A52  0100               	movlb	0	; () banked
  4452  000A54  21BF               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4453  000A56  0100               	movlb	0	; () banked
  4454  000A58  6FBA               	movwf	(??_recv_msg+1)& (0+255),b
  4455  000A5A  C0B9  F0AA         	movff	??_recv_msg,memcpy@s1
  4456  000A5E  C0BA  F0AB         	movff	??_recv_msg+1,memcpy@s1+1
  4457  000A62  C0BC  F0AC         	movff	recv_msg@tlength,memcpy@n
  4458  000A66  C0BD  F0AD         	movff	recv_msg@tlength+1,memcpy@n+1
  4459  000A6A  EC8A  F00B         	call	_memcpy	;wreg free
  4460                           
  4461                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4462  000A6E  0100               	movlb	0	; () banked
  4463  000A70  EE20 F035          	lfsr	2,53
  4464  000A74  0100               	movlb	0	; () banked
  4465  000A76  51B2               	movf	recv_msg@qptr& (0+255),w,b
  4466  000A78  26D9               	addwf	fsr2l,f,c
  4467  000A7A  0100               	movlb	0	; () banked
  4468  000A7C  51B3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4469  000A7E  22DA               	addwfc	fsr2h,f,c
  4470  000A80  0100               	movlb	0	; () banked
  4471  000A82  EE10 F035          	lfsr	1,53
  4472  000A86  0100               	movlb	0	; () banked
  4473  000A88  51B2               	movf	recv_msg@qptr& (0+255),w,b
  4474  000A8A  26E1               	addwf	fsr1l,f,c
  4475  000A8C  0100               	movlb	0	; () banked
  4476  000A8E  51B3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4477  000A90  22E2               	addwfc	fsr1h,f,c
  4478  000A92  50E7               	movf	indf1,w,c
  4479  000A94  0100               	movlb	0	; () banked
  4480  000A96  6FB9               	movwf	??_recv_msg& (0+255),b
  4481  000A98  0100               	movlb	0	; () banked
  4482  000A9A  29B9               	incf	??_recv_msg& (0+255),w,b
  4483  000A9C  0B03               	andlw	3
  4484  000A9E  6EDF               	movwf	indf2,c
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4488  000AA0  0100               	movlb	0	; () banked
  4489  000AA2  EE20 F002          	lfsr	2,2
  4490  000AA6  0100               	movlb	0	; () banked
  4491  000AA8  51BE               	movf	recv_msg@qmsg& (0+255),w,b
  4492  000AAA  26D9               	addwf	fsr2l,f,c
  4493  000AAC  0100               	movlb	0	; () banked
  4494  000AAE  51BF               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4495  000AB0  22DA               	addwfc	fsr2h,f,c
  4496  000AB2  C0B5  FFE1         	movff	recv_msg@msgtype,fsr1l
  4497  000AB6  C0B6  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4498  000ABA  CFDF FFE7          	movff	indf2,indf1
  4499                           
  4500                           ; BSR set to: 0
  4501                           ;messages.c: 91: qmsg->full = 0;
  4502  000ABE  C0BE  FFD9         	movff	recv_msg@qmsg,fsr2l
  4503  000AC2  C0BF  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4504  000AC6  0E00               	movlw	0
  4505  000AC8  6EDF               	movwf	indf2,c
  4506                           
  4507                           ; BSR set to: 0
  4508                           ;messages.c: 92: return (tlength);
  4509  000ACA  0100               	movlb	0	; () banked
  4510  000ACC  0100               	movlb	0	; () banked
  4511  000ACE  51BC               	movf	recv_msg@tlength& (0+255),w,b
  4512  000AD0  0012               	return	
  4513  000AD2                     l2562:
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;messages.c: 94: return (-4);
  4517  000AD2  0EFC               	movlw	252
  4518  000AD4  0012               	return	
  4519  000AD6                     __end_of_recv_msg:
  4520                           	opt stack 0
  4521                           tblptru	equ	0xFF8
  4522                           tblptrh	equ	0xFF7
  4523                           tblptrl	equ	0xFF6
  4524                           tablat	equ	0xFF5
  4525                           prodh	equ	0xFF4
  4526                           prodl	equ	0xFF3
  4527                           intcon	equ	0xFF2
  4528                           postinc0	equ	0xFEE
  4529                           wreg	equ	0xFE8
  4530                           indf1	equ	0xFE7
  4531                           fsr1h	equ	0xFE2
  4532                           fsr1l	equ	0xFE1
  4533                           indf2	equ	0xFDF
  4534                           postinc2	equ	0xFDE
  4535                           postdec2	equ	0xFDD
  4536                           fsr2h	equ	0xFDA
  4537                           fsr2l	equ	0xFD9
  4538                           status	equ	0xFD8
  4539                           
  4540 ;; *************** function _memcpy *****************
  4541 ;; Defined at:
  4542 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  d1              2   40[BANK0 ] PTR void 
  4545 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4546 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4547 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  4548 ;;  s1              2   42[BANK0 ] PTR const void 
  4549 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4550 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4551 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  4552 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4553 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  4554 ;;  n               2   44[BANK0 ] unsigned int 
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;  s               2   48[BANK0 ] PTR const unsigned char 
  4557 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4558 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4559 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  4560 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4561 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  4562 ;;  d               2   46[BANK0 ] PTR unsigned char 
  4563 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4564 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4565 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  2   40[BANK0 ] PTR void 
  4568 ;; Registers used:
  4569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4575 ;;      Params:         0       6       0       0       0
  4576 ;;      Locals:         0       4       0       0       0
  4577 ;;      Temps:          0       0       0       0       0
  4578 ;;      Totals:         0      10       0       0       0
  4579 ;;Total ram usage:       10 bytes
  4580 ;; Hardware stack levels used:    1
  4581 ;; Hardware stack levels required when called:   10
  4582 ;; This function calls:
  4583 ;;		Nothing
  4584 ;; This function is called by:
  4585 ;;		_send_msg
  4586 ;;		_recv_msg
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           	psect	text28
  4591  001714                     __ptext28:
  4592                           	opt stack 0
  4593  001714                     _memcpy:
  4594                           	opt stack 17
  4595                           
  4596                           ; BSR set to: 0
  4597                           ;incstack = 0
  4598  001714  0100               	movlb	0	; () banked
  4599  001716  0100               	movlb	0	; () banked
  4600  001718  C0AB  F0B1         	movff	memcpy@s1+1,memcpy@s+1
  4601  00171C  0100               	movlb	0	; () banked
  4602  00171E  0100               	movlb	0	; () banked
  4603  001720  C0AA  F0B0         	movff	memcpy@s1,memcpy@s
  4604  001724  0100               	movlb	0	; () banked
  4605  001726  0100               	movlb	0	; () banked
  4606  001728  C0A9  F0AF         	movff	memcpy@d1+1,memcpy@d+1
  4607  00172C  0100               	movlb	0	; () banked
  4608  00172E  0100               	movlb	0	; () banked
  4609  001730  C0A8  F0AE         	movff	memcpy@d1,memcpy@d
  4610  001734  D012               	goto	l2532
  4611  001736                     l2526:
  4612                           
  4613                           ; BSR set to: 0
  4614  001736  C0B0  FFD9         	movff	memcpy@s,fsr2l
  4615  00173A  C0B1  FFDA         	movff	memcpy@s+1,fsr2h
  4616  00173E  C0AE  FFE1         	movff	memcpy@d,fsr1l
  4617  001742  C0AF  FFE2         	movff	memcpy@d+1,fsr1h
  4618  001746  CFDF FFE7          	movff	indf2,indf1
  4619                           
  4620                           ; BSR set to: 0
  4621  00174A  0100               	movlb	0	; () banked
  4622  00174C  0100               	movlb	0	; () banked
  4623  00174E  4BB0               	infsnz	memcpy@s& (0+255),f,b
  4624  001750  2BB1               	incf	(memcpy@s+1)& (0+255),f,b
  4625                           
  4626                           ; BSR set to: 0
  4627  001752  0100               	movlb	0	; () banked
  4628  001754  0100               	movlb	0	; () banked
  4629  001756  4BAE               	infsnz	memcpy@d& (0+255),f,b
  4630  001758  2BAF               	incf	(memcpy@d+1)& (0+255),f,b
  4631  00175A                     l2532:
  4632                           
  4633                           ; BSR set to: 0
  4634  00175A  0100               	movlb	0	; () banked
  4635  00175C  0100               	movlb	0	; () banked
  4636  00175E  07AC               	decf	memcpy@n& (0+255),f,b
  4637  001760  A0D8               	btfss	status,0,c
  4638  001762  07AD               	decf	(memcpy@n+1)& (0+255),f,b
  4639  001764  0100               	movlb	0	; () banked
  4640  001766  29AC               	incf	memcpy@n& (0+255),w,b
  4641  001768  B4D8               	btfsc	status,2,c
  4642  00176A  29AD               	incf	(memcpy@n+1)& (0+255),w,b
  4643  00176C  B4D8               	btfsc	status,2,c
  4644                           
  4645                           ; BSR set to: 0
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;	Return value of _memcpy is never used
  4649  00176E  0012               	return	
  4650  001770  D7E2               	goto	l2526
  4651  001772                     __end_of_memcpy:
  4652                           	opt stack 0
  4653                           tblptru	equ	0xFF8
  4654                           tblptrh	equ	0xFF7
  4655                           tblptrl	equ	0xFF6
  4656                           tablat	equ	0xFF5
  4657                           prodh	equ	0xFF4
  4658                           prodl	equ	0xFF3
  4659                           intcon	equ	0xFF2
  4660                           postinc0	equ	0xFEE
  4661                           wreg	equ	0xFE8
  4662                           indf1	equ	0xFE7
  4663                           fsr1h	equ	0xFE2
  4664                           fsr1l	equ	0xFE1
  4665                           indf2	equ	0xFDF
  4666                           postinc2	equ	0xFDE
  4667                           postdec2	equ	0xFDD
  4668                           fsr2h	equ	0xFDA
  4669                           fsr2l	equ	0xFD9
  4670                           status	equ	0xFD8
  4671                           
  4672 ;; *************** function _OpenUSART *****************
  4673 ;; Defined at:
  4674 ;;		line 73 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uopen.c"
  4675 ;; Parameters:    Size  Location     Type
  4676 ;;  config          1    wreg     unsigned char 
  4677 ;;  spbrg           2   40[BANK0 ] unsigned int 
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;  config          1   45[BANK0 ] unsigned char 
  4680 ;; Return value:  Size  Location     Type
  4681 ;;		None               void
  4682 ;; Registers used:
  4683 ;;		wreg, status,2
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4689 ;;      Params:         0       2       0       0       0
  4690 ;;      Locals:         0       1       0       0       0
  4691 ;;      Temps:          0       3       0       0       0
  4692 ;;      Totals:         0       6       0       0       0
  4693 ;;Total ram usage:        6 bytes
  4694 ;; Hardware stack levels used:    1
  4695 ;; Hardware stack levels required when called:   10
  4696 ;; This function calls:
  4697 ;;		Nothing
  4698 ;; This function is called by:
  4699 ;;		_main
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           	psect	text29
  4704  0012C4                     __ptext29:
  4705                           	opt stack 0
  4706  0012C4                     _OpenUSART:
  4707                           	opt stack 20
  4708                           
  4709                           ; BSR set to: 0
  4710                           ;incstack = 0
  4711                           ;OpenUSART@config stored from wreg
  4712  0012C4  CFE8 F0AD          	movff	wreg,OpenUSART@config
  4713  0012C8  0E00               	movlw	0
  4714  0012CA  6EAC               	movwf	4012,c	;volatile
  4715  0012CC  0E00               	movlw	0
  4716  0012CE  6EAB               	movwf	4011,c	;volatile
  4717  0012D0  0100               	movlb	0	; () banked
  4718  0012D2  0100               	movlb	0	; () banked
  4719  0012D4  B1AD               	btfsc	OpenUSART@config& (0+255),0,b
  4720                           
  4721                           ; BSR set to: 0
  4722  0012D6  88AC               	bsf	4012,4,c	;volatile
  4723                           
  4724                           ; BSR set to: 0
  4725                           
  4726                           ; BSR set to: 0
  4727  0012D8  0100               	movlb	0	; () banked
  4728  0012DA  0100               	movlb	0	; () banked
  4729  0012DC  A3AD               	btfss	OpenUSART@config& (0+255),1,b
  4730  0012DE  D002               	goto	l2824
  4731                           
  4732                           ; BSR set to: 0
  4733  0012E0  8CAC               	bsf	4012,6,c	;volatile
  4734  0012E2  8CAB               	bsf	4011,6,c	;volatile
  4735  0012E4                     l2824:
  4736                           
  4737                           ; BSR set to: 0
  4738  0012E4  0100               	movlb	0	; () banked
  4739  0012E6  0100               	movlb	0	; () banked
  4740  0012E8  B5AD               	btfsc	OpenUSART@config& (0+255),2,b
  4741                           
  4742                           ; BSR set to: 0
  4743  0012EA  8EAC               	bsf	4012,7,c	;volatile
  4744                           
  4745                           ; BSR set to: 0
  4746                           
  4747                           ; BSR set to: 0
  4748  0012EC  0100               	movlb	0	; () banked
  4749  0012EE  0100               	movlb	0	; () banked
  4750  0012F0  A7AD               	btfss	OpenUSART@config& (0+255),3,b
  4751  0012F2  D002               	goto	l493
  4752                           
  4753                           ; BSR set to: 0
  4754  0012F4  88AB               	bsf	4011,4,c	;volatile
  4755  0012F6  D001               	goto	l2832
  4756  0012F8                     l493:
  4757                           
  4758                           ; BSR set to: 0
  4759  0012F8  8AAB               	bsf	4011,5,c	;volatile
  4760  0012FA                     l2832:
  4761                           
  4762                           ; BSR set to: 0
  4763  0012FA  0100               	movlb	0	; () banked
  4764  0012FC  0100               	movlb	0	; () banked
  4765  0012FE  B9AD               	btfsc	OpenUSART@config& (0+255),4,b
  4766                           
  4767                           ; BSR set to: 0
  4768  001300  84AC               	bsf	4012,2,c	;volatile
  4769                           
  4770                           ; BSR set to: 0
  4771  001302  989E               	bcf	3998,4,c	;volatile
  4772                           
  4773                           ; BSR set to: 0
  4774  001304  0100               	movlb	0	; () banked
  4775  001306  0100               	movlb	0	; () banked
  4776  001308  BBAD               	btfsc	OpenUSART@config& (0+255),5,b
  4777                           
  4778                           ; BSR set to: 0
  4779  00130A  86AB               	bsf	4011,3,c	;volatile
  4780                           
  4781                           ; BSR set to: 0
  4782                           
  4783                           ; BSR set to: 0
  4784  00130C  0100               	movlb	0	; () banked
  4785  00130E  0100               	movlb	0	; () banked
  4786  001310  ADAD               	btfss	OpenUSART@config& (0+255),6,b
  4787  001312  D002               	goto	l497
  4788                           
  4789                           ; BSR set to: 0
  4790  001314  8A9D               	bsf	3997,5,c	;volatile
  4791  001316  D001               	goto	l498
  4792  001318                     l497:
  4793                           
  4794                           ; BSR set to: 0
  4795  001318  9A9D               	bcf	3997,5,c	;volatile
  4796  00131A                     l498:
  4797                           
  4798                           ; BSR set to: 0
  4799  00131A  9A9E               	bcf	3998,5,c	;volatile
  4800                           
  4801                           ; BSR set to: 0
  4802  00131C  0100               	movlb	0	; () banked
  4803  00131E  0100               	movlb	0	; () banked
  4804  001320  AFAD               	btfss	OpenUSART@config& (0+255),7,b
  4805  001322  D002               	goto	l499
  4806                           
  4807                           ; BSR set to: 0
  4808  001324  889D               	bsf	3997,4,c	;volatile
  4809  001326  D001               	goto	l500
  4810  001328                     l499:
  4811                           
  4812                           ; BSR set to: 0
  4813  001328  989D               	bcf	3997,4,c	;volatile
  4814  00132A                     l500:
  4815                           
  4816                           ; BSR set to: 0
  4817  00132A  C0A8  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4818                           
  4819                           ; BSR set to: 0
  4820  00132E  0100               	movlb	0	; () banked
  4821  001330  C0A9  F0AA         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4822  001334  C0AA  F0AB         	movff	??_OpenUSART,??_OpenUSART+1
  4823  001338  0100               	movlb	0	; () banked
  4824  00133A  6BAC               	clrf	(??_OpenUSART+2)& (0+255),b
  4825  00133C  0100               	movlb	0	; () banked
  4826  00133E  51AB               	movf	(??_OpenUSART+1)& (0+255),w,b
  4827  001340  6EB0               	movwf	4016,c	;volatile
  4828                           
  4829                           ; BSR set to: 0
  4830  001342  8AAC               	bsf	4012,5,c	;volatile
  4831                           
  4832                           ; BSR set to: 0
  4833  001344  8EAB               	bsf	4011,7,c	;volatile
  4834                           
  4835                           ; BSR set to: 0
  4836  001346  9C94               	bcf	3988,6,c	;volatile
  4837                           
  4838                           ; BSR set to: 0
  4839  001348  8E94               	bsf	3988,7,c	;volatile
  4840                           
  4841                           ; BSR set to: 0
  4842  00134A  A8AC               	btfss	4012,4,c	;volatile
  4843  00134C  0012               	return	
  4844                           
  4845                           ; BSR set to: 0
  4846  00134E  BEAC               	btfsc	4012,7,c	;volatile
  4847  001350  0012               	return	
  4848                           
  4849                           ; BSR set to: 0
  4850  001352  8C94               	bsf	3988,6,c	;volatile
  4851  001354  0012               	return	
  4852  001356                     __end_of_OpenUSART:
  4853                           	opt stack 0
  4854                           tblptru	equ	0xFF8
  4855                           tblptrh	equ	0xFF7
  4856                           tblptrl	equ	0xFF6
  4857                           tablat	equ	0xFF5
  4858                           prodh	equ	0xFF4
  4859                           prodl	equ	0xFF3
  4860                           intcon	equ	0xFF2
  4861                           postinc0	equ	0xFEE
  4862                           wreg	equ	0xFE8
  4863                           indf1	equ	0xFE7
  4864                           fsr1h	equ	0xFE2
  4865                           fsr1l	equ	0xFE1
  4866                           indf2	equ	0xFDF
  4867                           postinc2	equ	0xFDE
  4868                           postdec2	equ	0xFDD
  4869                           fsr2h	equ	0xFDA
  4870                           fsr2l	equ	0xFD9
  4871                           status	equ	0xFD8
  4872                           
  4873 ;; *************** function _OpenTimer0 *****************
  4874 ;; Defined at:
  4875 ;;		line 18 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0open.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;  config          1    wreg     unsigned char 
  4878 ;; Auto vars:     Size  Location     Type
  4879 ;;  config          1   40[BANK0 ] unsigned char 
  4880 ;; Return value:  Size  Location     Type
  4881 ;;		None               void
  4882 ;; Registers used:
  4883 ;;		wreg, status,2, status,0
  4884 ;; Tracked objects:
  4885 ;;		On entry : 0/0
  4886 ;;		On exit  : 0/0
  4887 ;;		Unchanged: 0/0
  4888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4889 ;;      Params:         0       0       0       0       0
  4890 ;;      Locals:         0       1       0       0       0
  4891 ;;      Temps:          0       0       0       0       0
  4892 ;;      Totals:         0       1       0       0       0
  4893 ;;Total ram usage:        1 bytes
  4894 ;; Hardware stack levels used:    1
  4895 ;; Hardware stack levels required when called:   10
  4896 ;; This function calls:
  4897 ;;		Nothing
  4898 ;; This function is called by:
  4899 ;;		_main
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902                           
  4903                           	psect	text30
  4904  001AEE                     __ptext30:
  4905                           	opt stack 0
  4906  001AEE                     _OpenTimer0:
  4907                           	opt stack 20
  4908                           
  4909                           ; BSR set to: 0
  4910                           ;incstack = 0
  4911                           ;OpenTimer0@config stored from wreg
  4912  001AEE  CFE8 F0A8          	movff	wreg,OpenTimer0@config
  4913  001AF2  0100               	movlb	0	; () banked
  4914  001AF4  0100               	movlb	0	; () banked
  4915  001AF6  51A8               	movf	OpenTimer0@config& (0+255),w,b
  4916  001AF8  0B7F               	andlw	127
  4917  001AFA  6ED5               	movwf	4053,c	;volatile
  4918                           
  4919                           ; BSR set to: 0
  4920  001AFC  0E00               	movlw	0
  4921  001AFE  6ED7               	movwf	4055,c	;volatile
  4922                           
  4923                           ; BSR set to: 0
  4924  001B00  0E00               	movlw	0
  4925  001B02  6ED6               	movwf	4054,c	;volatile
  4926                           
  4927                           ; BSR set to: 0
  4928  001B04  94F2               	bcf	intcon,2,c	;volatile
  4929                           
  4930                           ; BSR set to: 0
  4931  001B06  0100               	movlb	0	; () banked
  4932  001B08  0100               	movlb	0	; () banked
  4933  001B0A  AFA8               	btfss	OpenTimer0@config& (0+255),7,b
  4934  001B0C  D002               	goto	l444
  4935                           
  4936                           ; BSR set to: 0
  4937  001B0E  8AF2               	bsf	intcon,5,c	;volatile
  4938  001B10  D001               	goto	l445
  4939  001B12                     l444:
  4940                           
  4941                           ; BSR set to: 0
  4942  001B12  9AF2               	bcf	intcon,5,c	;volatile
  4943  001B14                     l445:
  4944                           
  4945                           ; BSR set to: 0
  4946  001B14  8ED5               	bsf	4053,7,c	;volatile
  4947                           
  4948                           ; BSR set to: 0
  4949  001B16  0012               	return	
  4950  001B18                     __end_of_OpenTimer0:
  4951                           	opt stack 0
  4952                           tblptru	equ	0xFF8
  4953                           tblptrh	equ	0xFF7
  4954                           tblptrl	equ	0xFF6
  4955                           tablat	equ	0xFF5
  4956                           prodh	equ	0xFF4
  4957                           prodl	equ	0xFF3
  4958                           intcon	equ	0xFF2
  4959                           postinc0	equ	0xFEE
  4960                           wreg	equ	0xFE8
  4961                           indf1	equ	0xFE7
  4962                           fsr1h	equ	0xFE2
  4963                           fsr1l	equ	0xFE1
  4964                           indf2	equ	0xFDF
  4965                           postinc2	equ	0xFDE
  4966                           postdec2	equ	0xFDD
  4967                           fsr2h	equ	0xFDA
  4968                           fsr2l	equ	0xFD9
  4969                           status	equ	0xFD8
  4970                           
  4971 ;; *************** function _InterruptHandlerLow *****************
  4972 ;; Defined at:
  4973 ;;		line 142 in file "../src/interrupts.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;		None
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;		None
  4978 ;; Return value:  Size  Location     Type
  4979 ;;		None               void
  4980 ;; Registers used:
  4981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4987 ;;      Params:         0       0       0       0       0
  4988 ;;      Locals:         0       0       0       0       0
  4989 ;;      Temps:         17       0       0       0       0
  4990 ;;      Totals:        17       0       0       0       0
  4991 ;;Total ram usage:       17 bytes
  4992 ;; Hardware stack levels used:    1
  4993 ;; Hardware stack levels required when called:    9
  4994 ;; This function calls:
  4995 ;;		_timer1_int_handler
  4996 ;;		_uart_recv_int_handler
  4997 ;;		i1_ConvertADC
  4998 ;; This function is called by:
  4999 ;;		Interrupt level 1
  5000 ;; This function uses a non-reentrant model
  5001 ;;
  5002                           
  5003                           	psect	intcodelo
  5004  000018                     __pintcodelo:
  5005                           	opt stack 0
  5006  000018                     _InterruptHandlerLow:
  5007                           	opt stack 17
  5008                           
  5009                           ; BSR set to: 0
  5010                           ;incstack = 0
  5011  000018  CFD8 F01E          	movff	status,??_InterruptHandlerLow
  5012  00001C  CFE8 F01F          	movff	wreg,??_InterruptHandlerLow+1
  5013  000020  CFE0 F020          	movff	bsr,??_InterruptHandlerLow+2
  5014  000024  CFFA F021          	movff	pclath,??_InterruptHandlerLow+3
  5015  000028  CFFB F022          	movff	pclatu,??_InterruptHandlerLow+4
  5016  00002C  CFE9 F023          	movff	fsr0l,??_InterruptHandlerLow+5
  5017  000030  CFEA F024          	movff	fsr0h,??_InterruptHandlerLow+6
  5018  000034  CFE1 F025          	movff	fsr1l,??_InterruptHandlerLow+7
  5019  000038  CFE2 F026          	movff	fsr1h,??_InterruptHandlerLow+8
  5020  00003C  CFD9 F027          	movff	fsr2l,??_InterruptHandlerLow+9
  5021  000040  CFDA F028          	movff	fsr2h,??_InterruptHandlerLow+10
  5022  000044  CFF3 F029          	movff	prodl,??_InterruptHandlerLow+11
  5023  000048  CFF4 F02A          	movff	prodh,??_InterruptHandlerLow+12
  5024  00004C  CFF6 F02B          	movff	tblptrl,??_InterruptHandlerLow+13
  5025  000050  CFF7 F02C          	movff	tblptrh,??_InterruptHandlerLow+14
  5026  000054  CFF8 F02D          	movff	tblptru,??_InterruptHandlerLow+15
  5027  000058  CFF5 F02E          	movff	tablat,??_InterruptHandlerLow+16
  5028                           
  5029                           ;interrupts.c: 144: if (PIR1bits.TMR1IF) {
  5030  00005C  A09E               	btfss	3998,0,c	;volatile
  5031  00005E  D005               	goto	i1l3092
  5032                           
  5033                           ;interrupts.c: 145: PIR1bits.TMR1IF = 0;
  5034  000060  909E               	bcf	3998,0,c	;volatile
  5035                           
  5036                           ;interrupts.c: 146: ConvertADC();
  5037  000062  EC77  F00E         	call	i1_ConvertADC	;wreg free
  5038                           
  5039                           ;interrupts.c: 147: timer1_int_handler();
  5040  000066  ECE0  F00B         	call	_timer1_int_handler	;wreg free
  5041  00006A                     i1l3092:
  5042                           
  5043                           ;interrupts.c: 148: }
  5044                           ;interrupts.c: 151: if (PIR1bits.RCIF) {
  5045  00006A  AA9E               	btfss	3998,5,c	;volatile
  5046  00006C  D003               	goto	i1l401
  5047                           
  5048                           ;interrupts.c: 152: PIR1bits.RCIF = 0;
  5049  00006E  9A9E               	bcf	3998,5,c	;volatile
  5050                           
  5051                           ;interrupts.c: 153: uart_recv_int_handler();
  5052  000070  EC14  F009         	call	_uart_recv_int_handler	;wreg free
  5053  000074                     i1l401:
  5054  000074  C02E  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5055  000078  C02D  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5056  00007C  C02C  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5057  000080  C02B  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5058  000084  C02A  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5059  000088  C029  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5060  00008C  C028  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5061  000090  C027  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5062  000094  C026  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5063  000098  C025  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5064  00009C  C024  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5065  0000A0  C023  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5066  0000A4  C022  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5067  0000A8  C021  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5068  0000AC  C020  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5069  0000B0  C01F  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5070  0000B4  C01E  FFD8         	movff	??_InterruptHandlerLow,status
  5071  0000B8  0010               	retfie	
  5072  0000BA                     __end_of_InterruptHandlerLow:
  5073                           	opt stack 0
  5074                           pclatu	equ	0xFFB
  5075                           pclath	equ	0xFFA
  5076                           tblptru	equ	0xFF8
  5077                           tblptrh	equ	0xFF7
  5078                           tblptrl	equ	0xFF6
  5079                           tablat	equ	0xFF5
  5080                           prodh	equ	0xFF4
  5081                           prodl	equ	0xFF3
  5082                           intcon	equ	0xFF2
  5083                           postinc0	equ	0xFEE
  5084                           fsr0h	equ	0xFEA
  5085                           fsr0l	equ	0xFE9
  5086                           wreg	equ	0xFE8
  5087                           indf1	equ	0xFE7
  5088                           fsr1h	equ	0xFE2
  5089                           fsr1l	equ	0xFE1
  5090                           bsr	equ	0xFE0
  5091                           indf2	equ	0xFDF
  5092                           postinc2	equ	0xFDE
  5093                           postdec2	equ	0xFDD
  5094                           fsr2h	equ	0xFDA
  5095                           fsr2l	equ	0xFD9
  5096                           status	equ	0xFD8
  5097                           
  5098 ;; *************** function i1_ConvertADC *****************
  5099 ;; Defined at:
  5100 ;;		line 22 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcconv.c"
  5101 ;; Parameters:    Size  Location     Type
  5102 ;;		None
  5103 ;; Auto vars:     Size  Location     Type
  5104 ;;		None
  5105 ;; Return value:  Size  Location     Type
  5106 ;;		None               void
  5107 ;; Registers used:
  5108 ;;		None
  5109 ;; Tracked objects:
  5110 ;;		On entry : 0/0
  5111 ;;		On exit  : 0/0
  5112 ;;		Unchanged: 0/0
  5113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5114 ;;      Params:         0       0       0       0       0
  5115 ;;      Locals:         0       0       0       0       0
  5116 ;;      Temps:          0       0       0       0       0
  5117 ;;      Totals:         0       0       0       0       0
  5118 ;;Total ram usage:        0 bytes
  5119 ;; Hardware stack levels used:    1
  5120 ;; Hardware stack levels required when called:    5
  5121 ;; This function calls:
  5122 ;;		Nothing
  5123 ;; This function is called by:
  5124 ;;		_InterruptHandlerLow
  5125 ;; This function uses a non-reentrant model
  5126 ;;
  5127                           
  5128                           	psect	text32
  5129  001CEE                     __ptext32:
  5130                           	opt stack 0
  5131  001CEE                     i1_ConvertADC:
  5132                           	opt stack 20
  5133                           
  5134                           ;incstack = 0
  5135  001CEE  82C2               	bsf	4034,1,c	;volatile
  5136  001CF0  0012               	return	
  5137  001CF2                     __end_ofi1_ConvertADC:
  5138                           	opt stack 0
  5139                           pclatu	equ	0xFFB
  5140                           pclath	equ	0xFFA
  5141                           tblptru	equ	0xFF8
  5142                           tblptrh	equ	0xFF7
  5143                           tblptrl	equ	0xFF6
  5144                           tablat	equ	0xFF5
  5145                           prodh	equ	0xFF4
  5146                           prodl	equ	0xFF3
  5147                           intcon	equ	0xFF2
  5148                           postinc0	equ	0xFEE
  5149                           fsr0h	equ	0xFEA
  5150                           fsr0l	equ	0xFE9
  5151                           wreg	equ	0xFE8
  5152                           indf1	equ	0xFE7
  5153                           fsr1h	equ	0xFE2
  5154                           fsr1l	equ	0xFE1
  5155                           bsr	equ	0xFE0
  5156                           indf2	equ	0xFDF
  5157                           postinc2	equ	0xFDE
  5158                           postdec2	equ	0xFDD
  5159                           fsr2h	equ	0xFDA
  5160                           fsr2l	equ	0xFD9
  5161                           status	equ	0xFD8
  5162                           
  5163 ;; *************** function _uart_recv_int_handler *****************
  5164 ;; Defined at:
  5165 ;;		line 11 in file "../src/my_uart.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;		None
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;		None
  5170 ;; Return value:  Size  Location     Type
  5171 ;;		None               void
  5172 ;; Registers used:
  5173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5179 ;;      Params:         0       0       0       0       0
  5180 ;;      Locals:         0       0       0       0       0
  5181 ;;      Temps:          1       0       0       0       0
  5182 ;;      Totals:         1       0       0       0       0
  5183 ;;Total ram usage:        1 bytes
  5184 ;; Hardware stack levels used:    1
  5185 ;; Hardware stack levels required when called:    8
  5186 ;; This function calls:
  5187 ;;		_ReadUSART
  5188 ;;		_ToMainLow_sendmsg
  5189 ;; This function is called by:
  5190 ;;		_InterruptHandlerLow
  5191 ;; This function uses a non-reentrant model
  5192 ;;
  5193                           
  5194                           	psect	text33
  5195  001228                     __ptext33:
  5196                           	opt stack 0
  5197  001228                     _uart_recv_int_handler:
  5198                           	opt stack 17
  5199                           
  5200                           ;my_uart.c: 12: if ((PIR1bits.RCIF)) {
  5201                           
  5202                           ;incstack = 0
  5203  001228  AA9E               	btfss	3998,5,c	;volatile
  5204  00122A  D03C               	goto	i1l3078
  5205                           
  5206                           ;my_uart.c: 13: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5207  00122C  EE20 F004          	lfsr	2,4
  5208  001230  504D               	movf	_uc_ptr,w,c
  5209  001232  26D9               	addwf	fsr2l,f,c
  5210  001234  504E               	movf	_uc_ptr+1,w,c
  5211  001236  22DA               	addwfc	fsr2h,f,c
  5212  001238  50DF               	movf	indf2,w,c
  5213  00123A  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5214  00123C  501B               	movf	??_uart_recv_int_handler,w,c
  5215  00123E  0D01               	mullw	1
  5216  001240  50F3               	movf	prodl,w,c
  5217  001242  244D               	addwf	_uc_ptr,w,c
  5218  001244  6ED9               	movwf	fsr2l,c
  5219  001246  50F4               	movf	prodh,w,c
  5220  001248  204E               	addwfc	_uc_ptr+1,w,c
  5221  00124A  6EDA               	movwf	fsr2h,c
  5222  00124C  EC1C  F00E         	call	_ReadUSART	;wreg free
  5223  001250  6EDF               	movwf	indf2,c
  5224                           
  5225                           ;my_uart.c: 14: uc_ptr->buflen++;
  5226  001252  EE20 F004          	lfsr	2,4
  5227  001256  504D               	movf	_uc_ptr,w,c
  5228  001258  26D9               	addwf	fsr2l,f,c
  5229  00125A  504E               	movf	_uc_ptr+1,w,c
  5230  00125C  22DA               	addwfc	fsr2h,f,c
  5231  00125E  2ADF               	incf	indf2,f,c
  5232                           
  5233                           ;my_uart.c: 16: if (uc_ptr->buflen == 4) {
  5234  001260  EE20 F004          	lfsr	2,4
  5235  001264  504D               	movf	_uc_ptr,w,c
  5236  001266  26D9               	addwf	fsr2l,f,c
  5237  001268  504E               	movf	_uc_ptr+1,w,c
  5238  00126A  22DA               	addwfc	fsr2h,f,c
  5239  00126C  0E04               	movlw	4
  5240  00126E  62DF               	cpfseq	indf2,c
  5241  001270  D019               	goto	i1l3078
  5242                           
  5243                           ;my_uart.c: 17: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5244  001272  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5245  001274  0E1F               	movlw	31
  5246  001276  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5247  001278  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5248  00127A  C04E  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5249  00127E  C04D  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5250  001282  EE20 F004          	lfsr	2,4
  5251  001286  504D               	movf	_uc_ptr,w,c
  5252  001288  26D9               	addwf	fsr2l,f,c
  5253  00128A  504E               	movf	_uc_ptr+1,w,c
  5254  00128C  22DA               	addwfc	fsr2h,f,c
  5255  00128E  50DF               	movf	indf2,w,c
  5256  001290  ECB5  F00D         	call	_ToMainLow_sendmsg
  5257                           
  5258                           ;my_uart.c: 18: uc_ptr->buflen = 0;
  5259  001294  EE20 F004          	lfsr	2,4
  5260  001298  504D               	movf	_uc_ptr,w,c
  5261  00129A  26D9               	addwf	fsr2l,f,c
  5262  00129C  504E               	movf	_uc_ptr+1,w,c
  5263  00129E  22DA               	addwfc	fsr2h,f,c
  5264  0012A0  0E00               	movlw	0
  5265  0012A2  6EDF               	movwf	indf2,c
  5266  0012A4                     i1l3078:
  5267                           
  5268                           ;my_uart.c: 19: }
  5269                           ;my_uart.c: 20: }
  5270                           ;my_uart.c: 21: if (USART_Status.OVERRUN_ERROR == 1) {
  5271  0012A4  A650               	btfss	_USART_Status,3,c
  5272  0012A6  0012               	return	
  5273                           
  5274                           ;my_uart.c: 24: RCSTAbits.CREN = 0;
  5275  0012A8  98AB               	bcf	4011,4,c	;volatile
  5276                           
  5277                           ;my_uart.c: 25: RCSTAbits.CREN = 1;
  5278  0012AA  88AB               	bsf	4011,4,c	;volatile
  5279                           
  5280                           ;my_uart.c: 26: ToMainLow_sendmsg(0, 30, (void *) 0);
  5281  0012AC  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5282  0012AE  0E1E               	movlw	30
  5283  0012B0  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5284  0012B2  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5285  0012B4  0E00               	movlw	0
  5286  0012B6  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5287  0012B8  0E00               	movlw	0
  5288  0012BA  6E18               	movwf	ToMainLow_sendmsg@data,c
  5289  0012BC  0E00               	movlw	0
  5290  0012BE  ECB5  F00D         	call	_ToMainLow_sendmsg
  5291  0012C2  0012               	return	
  5292  0012C4                     __end_of_uart_recv_int_handler:
  5293                           	opt stack 0
  5294                           pclatu	equ	0xFFB
  5295                           pclath	equ	0xFFA
  5296                           tblptru	equ	0xFF8
  5297                           tblptrh	equ	0xFF7
  5298                           tblptrl	equ	0xFF6
  5299                           tablat	equ	0xFF5
  5300                           prodh	equ	0xFF4
  5301                           prodl	equ	0xFF3
  5302                           intcon	equ	0xFF2
  5303                           postinc0	equ	0xFEE
  5304                           fsr0h	equ	0xFEA
  5305                           fsr0l	equ	0xFE9
  5306                           wreg	equ	0xFE8
  5307                           indf1	equ	0xFE7
  5308                           fsr1h	equ	0xFE2
  5309                           fsr1l	equ	0xFE1
  5310                           bsr	equ	0xFE0
  5311                           indf2	equ	0xFDF
  5312                           postinc2	equ	0xFDE
  5313                           postdec2	equ	0xFDD
  5314                           fsr2h	equ	0xFDA
  5315                           fsr2l	equ	0xFD9
  5316                           status	equ	0xFD8
  5317                           
  5318 ;; *************** function _ReadUSART *****************
  5319 ;; Defined at:
  5320 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uread.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;		None
  5323 ;; Auto vars:     Size  Location     Type
  5324 ;;  data            1    0[COMRAM] unsigned char 
  5325 ;; Return value:  Size  Location     Type
  5326 ;;                  1    wreg      unsigned char 
  5327 ;; Registers used:
  5328 ;;		wreg, status,2, status,0
  5329 ;; Tracked objects:
  5330 ;;		On entry : 0/0
  5331 ;;		On exit  : 0/0
  5332 ;;		Unchanged: 0/0
  5333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5334 ;;      Params:         0       0       0       0       0
  5335 ;;      Locals:         1       0       0       0       0
  5336 ;;      Temps:          0       0       0       0       0
  5337 ;;      Totals:         1       0       0       0       0
  5338 ;;Total ram usage:        1 bytes
  5339 ;; Hardware stack levels used:    1
  5340 ;; Hardware stack levels required when called:    5
  5341 ;; This function calls:
  5342 ;;		Nothing
  5343 ;; This function is called by:
  5344 ;;		_uart_recv_int_handler
  5345 ;; This function uses a non-reentrant model
  5346 ;;
  5347                           
  5348                           	psect	text34
  5349  001C38                     __ptext34:
  5350                           	opt stack 0
  5351  001C38                     _ReadUSART:
  5352                           	opt stack 19
  5353                           
  5354                           ;incstack = 0
  5355  001C38  0EF2               	movlw	242
  5356  001C3A  1650               	andwf	_USART_Status,f,c
  5357  001C3C  ACAB               	btfss	4011,6,c	;volatile
  5358  001C3E  D003               	goto	i1l511
  5359  001C40  9050               	bcf	_USART_Status,0,c
  5360  001C42  B0AB               	btfsc	4011,0,c	;volatile
  5361  001C44  8050               	bsf	_USART_Status,0,c
  5362  001C46                     i1l511:
  5363  001C46  B4AB               	btfsc	4011,2,c	;volatile
  5364  001C48  8450               	bsf	_USART_Status,2,c
  5365  001C4A  B2AB               	btfsc	4011,1,c	;volatile
  5366  001C4C  8650               	bsf	_USART_Status,3,c
  5367  001C4E  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5368  001C52  5001               	movf	ReadUSART@data,w,c
  5369  001C54  0012               	return	
  5370  001C56                     __end_of_ReadUSART:
  5371                           	opt stack 0
  5372                           pclatu	equ	0xFFB
  5373                           pclath	equ	0xFFA
  5374                           tblptru	equ	0xFF8
  5375                           tblptrh	equ	0xFF7
  5376                           tblptrl	equ	0xFF6
  5377                           tablat	equ	0xFF5
  5378                           prodh	equ	0xFF4
  5379                           prodl	equ	0xFF3
  5380                           intcon	equ	0xFF2
  5381                           postinc0	equ	0xFEE
  5382                           fsr0h	equ	0xFEA
  5383                           fsr0l	equ	0xFE9
  5384                           wreg	equ	0xFE8
  5385                           indf1	equ	0xFE7
  5386                           fsr1h	equ	0xFE2
  5387                           fsr1l	equ	0xFE1
  5388                           bsr	equ	0xFE0
  5389                           indf2	equ	0xFDF
  5390                           postinc2	equ	0xFDE
  5391                           postdec2	equ	0xFDD
  5392                           fsr2h	equ	0xFDA
  5393                           fsr2l	equ	0xFD9
  5394                           status	equ	0xFD8
  5395                           
  5396 ;; *************** function _timer1_int_handler *****************
  5397 ;; Defined at:
  5398 ;;		line 34 in file "../src/user_interrupts.c"
  5399 ;; Parameters:    Size  Location     Type
  5400 ;;		None
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;  result          2   27[COMRAM] unsigned int 
  5403 ;; Return value:  Size  Location     Type
  5404 ;;		None               void
  5405 ;; Registers used:
  5406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5407 ;; Tracked objects:
  5408 ;;		On entry : 0/0
  5409 ;;		On exit  : 0/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5412 ;;      Params:         0       0       0       0       0
  5413 ;;      Locals:         2       0       0       0       0
  5414 ;;      Temps:          1       0       0       0       0
  5415 ;;      Totals:         3       0       0       0       0
  5416 ;;Total ram usage:        3 bytes
  5417 ;; Hardware stack levels used:    1
  5418 ;; Hardware stack levels required when called:    8
  5419 ;; This function calls:
  5420 ;;		_ReadTimer1
  5421 ;;		_ToMainLow_sendmsg
  5422 ;;		_WriteTimer1
  5423 ;; This function is called by:
  5424 ;;		_InterruptHandlerLow
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           	psect	text35
  5429  0017C0                     __ptext35:
  5430                           	opt stack 0
  5431  0017C0                     _timer1_int_handler:
  5432                           	opt stack 17
  5433                           
  5434                           ;user_interrupts.c: 35: unsigned int result;
  5435                           ;user_interrupts.c: 38: LATBbits.LATB1 = !LATBbits.LATB1;
  5436                           
  5437                           ;incstack = 0
  5438  0017C0  B28A               	btfsc	3978,1,c	;volatile
  5439  0017C2  D002               	goto	i1u192_20
  5440  0017C4  0E01               	movlw	1
  5441  0017C6  D001               	goto	i1u192_26
  5442  0017C8                     i1u192_20:
  5443  0017C8  0E00               	movlw	0
  5444  0017CA                     i1u192_26:
  5445  0017CA  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  5446  0017CC  461B               	rlncf	??_timer1_int_handler,f,c
  5447  0017CE  508A               	movf	3978,w,c	;volatile
  5448  0017D0  181B               	xorwf	??_timer1_int_handler,w,c
  5449  0017D2  0BFD               	andlw	-3
  5450  0017D4  181B               	xorwf	??_timer1_int_handler,w,c
  5451  0017D6  6E8A               	movwf	3978,c	;volatile
  5452                           
  5453                           ;user_interrupts.c: 39: result = ReadTimer1();
  5454  0017D8  EC51  F00E         	call	_ReadTimer1	;wreg free
  5455  0017DC  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  5456  0017E0  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5457                           
  5458                           ;user_interrupts.c: 40: ToMainLow_sendmsg(0, 11, (void *) 0);
  5459  0017E4  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  5460  0017E6  0E0B               	movlw	11
  5461  0017E8  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5462  0017EA  501B               	movf	??_timer1_int_handler& (0+255),w,c
  5463  0017EC  0E00               	movlw	0
  5464  0017EE  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5465  0017F0  0E00               	movlw	0
  5466  0017F2  6E18               	movwf	ToMainLow_sendmsg@data,c
  5467  0017F4  0E00               	movlw	0
  5468  0017F6  ECB5  F00D         	call	_ToMainLow_sendmsg
  5469                           
  5470                           ;user_interrupts.c: 43: WriteTimer1(0);
  5471  0017FA  0E00               	movlw	0
  5472  0017FC  6E02               	movwf	WriteTimer1@timer1+1,c
  5473  0017FE  0E00               	movlw	0
  5474  001800  6E01               	movwf	WriteTimer1@timer1,c
  5475  001802  EC48  F00E         	call	_WriteTimer1	;wreg free
  5476  001806  0012               	return	
  5477  001808                     __end_of_timer1_int_handler:
  5478                           	opt stack 0
  5479                           pclatu	equ	0xFFB
  5480                           pclath	equ	0xFFA
  5481                           tblptru	equ	0xFF8
  5482                           tblptrh	equ	0xFF7
  5483                           tblptrl	equ	0xFF6
  5484                           tablat	equ	0xFF5
  5485                           prodh	equ	0xFF4
  5486                           prodl	equ	0xFF3
  5487                           intcon	equ	0xFF2
  5488                           postinc0	equ	0xFEE
  5489                           fsr0h	equ	0xFEA
  5490                           fsr0l	equ	0xFE9
  5491                           wreg	equ	0xFE8
  5492                           indf1	equ	0xFE7
  5493                           fsr1h	equ	0xFE2
  5494                           fsr1l	equ	0xFE1
  5495                           bsr	equ	0xFE0
  5496                           indf2	equ	0xFDF
  5497                           postinc2	equ	0xFDE
  5498                           postdec2	equ	0xFDD
  5499                           fsr2h	equ	0xFDA
  5500                           fsr2l	equ	0xFD9
  5501                           status	equ	0xFD8
  5502                           
  5503 ;; *************** function _WriteTimer1 *****************
  5504 ;; Defined at:
  5505 ;;		line 14 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1write.c"
  5506 ;; Parameters:    Size  Location     Type
  5507 ;;  timer1          2    0[COMRAM] unsigned int 
  5508 ;; Auto vars:     Size  Location     Type
  5509 ;;  timer           2    2[COMRAM] struct Timers
  5510 ;; Return value:  Size  Location     Type
  5511 ;;		None               void
  5512 ;; Registers used:
  5513 ;;		None
  5514 ;; Tracked objects:
  5515 ;;		On entry : 0/0
  5516 ;;		On exit  : 0/0
  5517 ;;		Unchanged: 0/0
  5518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5519 ;;      Params:         2       0       0       0       0
  5520 ;;      Locals:         2       0       0       0       0
  5521 ;;      Temps:          0       0       0       0       0
  5522 ;;      Totals:         4       0       0       0       0
  5523 ;;Total ram usage:        4 bytes
  5524 ;; Hardware stack levels used:    1
  5525 ;; Hardware stack levels required when called:    5
  5526 ;; This function calls:
  5527 ;;		Nothing
  5528 ;; This function is called by:
  5529 ;;		_timer1_int_handler
  5530 ;; This function uses a non-reentrant model
  5531 ;;
  5532                           
  5533                           	psect	text36
  5534  001C90                     __ptext36:
  5535                           	opt stack 0
  5536  001C90                     _WriteTimer1:
  5537                           	opt stack 19
  5538                           
  5539                           ;incstack = 0
  5540  001C90  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5541  001C94  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5542  001C98  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5543  001C9C  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5544  001CA0  0012               	return	
  5545  001CA2                     __end_of_WriteTimer1:
  5546                           	opt stack 0
  5547                           pclatu	equ	0xFFB
  5548                           pclath	equ	0xFFA
  5549                           tblptru	equ	0xFF8
  5550                           tblptrh	equ	0xFF7
  5551                           tblptrl	equ	0xFF6
  5552                           tablat	equ	0xFF5
  5553                           prodh	equ	0xFF4
  5554                           prodl	equ	0xFF3
  5555                           intcon	equ	0xFF2
  5556                           postinc0	equ	0xFEE
  5557                           fsr0h	equ	0xFEA
  5558                           fsr0l	equ	0xFE9
  5559                           wreg	equ	0xFE8
  5560                           indf1	equ	0xFE7
  5561                           fsr1h	equ	0xFE2
  5562                           fsr1l	equ	0xFE1
  5563                           bsr	equ	0xFE0
  5564                           indf2	equ	0xFDF
  5565                           postinc2	equ	0xFDE
  5566                           postdec2	equ	0xFDD
  5567                           fsr2h	equ	0xFDA
  5568                           fsr2l	equ	0xFD9
  5569                           status	equ	0xFD8
  5570                           
  5571 ;; *************** function _ToMainLow_sendmsg *****************
  5572 ;; Defined at:
  5573 ;;		line 103 in file "../src/messages.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;  length          1    wreg     unsigned char 
  5576 ;;  msgtype         1   22[COMRAM] unsigned char 
  5577 ;;  data            2   23[COMRAM] PTR void 
  5578 ;;		 -> main@uc(5), NULL(0), 
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;  length          1   25[COMRAM] unsigned char 
  5581 ;; Return value:  Size  Location     Type
  5582 ;;                  1    wreg      char 
  5583 ;; Registers used:
  5584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5585 ;; Tracked objects:
  5586 ;;		On entry : 0/0
  5587 ;;		On exit  : 0/0
  5588 ;;		Unchanged: 0/0
  5589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5590 ;;      Params:         3       0       0       0       0
  5591 ;;      Locals:         1       0       0       0       0
  5592 ;;      Temps:          0       0       0       0       0
  5593 ;;      Totals:         4       0       0       0       0
  5594 ;;Total ram usage:        4 bytes
  5595 ;; Hardware stack levels used:    1
  5596 ;; Hardware stack levels required when called:    7
  5597 ;; This function calls:
  5598 ;;		i1_send_msg
  5599 ;; This function is called by:
  5600 ;;		_timer1_int_handler
  5601 ;;		_uart_recv_int_handler
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605                           	psect	text37
  5606  001B6A                     __ptext37:
  5607                           	opt stack 0
  5608  001B6A                     _ToMainLow_sendmsg:
  5609                           	opt stack 17
  5610                           
  5611                           ;incstack = 0
  5612                           ;ToMainLow_sendmsg@length stored from wreg
  5613  001B6A  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5614                           
  5615                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5616                           ;	Return value of _ToMainLow_sendmsg is never used
  5617  001B6E  0101               	movlb	1	; () banked
  5618  001B70  0E01               	movlw	high _ToMainLow_MQ
  5619  001B72  6E0C               	movwf	i1send_msg@qptr+1,c
  5620  001B74  0101               	movlb	1	; () banked
  5621  001B76  0E6C               	movlw	low _ToMainLow_MQ
  5622  001B78  6E0B               	movwf	i1send_msg@qptr,c
  5623  001B7A  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5624  001B7E  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5625  001B82  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5626  001B86  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5627  001B8A  EC17  F008         	call	i1_send_msg	;wreg free
  5628  001B8E  0012               	return	
  5629  001B90                     __end_of_ToMainLow_sendmsg:
  5630                           	opt stack 0
  5631                           pclatu	equ	0xFFB
  5632                           pclath	equ	0xFFA
  5633                           tblptru	equ	0xFF8
  5634                           tblptrh	equ	0xFF7
  5635                           tblptrl	equ	0xFF6
  5636                           tablat	equ	0xFF5
  5637                           prodh	equ	0xFF4
  5638                           prodl	equ	0xFF3
  5639                           intcon	equ	0xFF2
  5640                           postinc0	equ	0xFEE
  5641                           fsr0h	equ	0xFEA
  5642                           fsr0l	equ	0xFE9
  5643                           wreg	equ	0xFE8
  5644                           indf1	equ	0xFE7
  5645                           fsr1h	equ	0xFE2
  5646                           fsr1l	equ	0xFE1
  5647                           bsr	equ	0xFE0
  5648                           indf2	equ	0xFDF
  5649                           postinc2	equ	0xFDE
  5650                           postdec2	equ	0xFDD
  5651                           fsr2h	equ	0xFDA
  5652                           fsr2l	equ	0xFD9
  5653                           status	equ	0xFD8
  5654                           
  5655 ;; *************** function i1_send_msg *****************
  5656 ;; Defined at:
  5657 ;;		line 24 in file "../src/messages.c"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5660 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5661 ;;  length          1   12[COMRAM] unsigned char 
  5662 ;;  msgtype         1   13[COMRAM] unsigned char 
  5663 ;;  data            2   14[COMRAM] PTR void 
  5664 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  5665 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5668 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5669 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5670 ;;  send_msg        2   17[COMRAM] unsigned int 
  5671 ;;  send_msg        1   19[COMRAM] unsigned char 
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  1    wreg      char 
  5674 ;; Registers used:
  5675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5681 ;;      Params:         6       0       0       0       0
  5682 ;;      Locals:         5       0       0       0       0
  5683 ;;      Temps:          1       0       0       0       0
  5684 ;;      Totals:        12       0       0       0       0
  5685 ;;Total ram usage:       12 bytes
  5686 ;; Hardware stack levels used:    1
  5687 ;; Hardware stack levels required when called:    6
  5688 ;; This function calls:
  5689 ;;		i1_memcpy
  5690 ;; This function is called by:
  5691 ;;		_ToMainLow_sendmsg
  5692 ;; This function uses a non-reentrant model
  5693 ;;
  5694                           
  5695                           	psect	text38
  5696  00102E                     __ptext38:
  5697                           	opt stack 0
  5698  00102E                     i1_send_msg:
  5699                           	opt stack 17
  5700                           
  5701                           ;messages.c: 25: unsigned char slot;
  5702                           ;messages.c: 27: msg *qmsg;
  5703                           ;messages.c: 28: size_t tlength = length;
  5704                           
  5705                           ;incstack = 0
  5706  00102E  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5707  001032  6A13               	clrf	i1send_msg@tlength+1,c
  5708                           
  5709                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5710  001034  EE20 F034          	lfsr	2,52
  5711  001038  500B               	movf	i1send_msg@qptr,w,c
  5712  00103A  26D9               	addwf	fsr2l,f,c
  5713  00103C  500C               	movf	i1send_msg@qptr+1,w,c
  5714  00103E  22DA               	addwfc	fsr2h,f,c
  5715  001040  50DF               	movf	indf2,w,c
  5716  001042  6E14               	movwf	i1send_msg@slot,c
  5717                           
  5718                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5719  001044  5014               	movf	i1send_msg@slot,w,c
  5720  001046  0D0D               	mullw	13
  5721  001048  50F3               	movf	prodl,w,c
  5722  00104A  240B               	addwf	i1send_msg@qptr,w,c
  5723  00104C  6E15               	movwf	i1send_msg@qmsg,c
  5724  00104E  50F4               	movf	prodh,w,c
  5725  001050  200C               	addwfc	i1send_msg@qptr+1,w,c
  5726  001052  6E16               	movwf	i1send_msg@qmsg+1,c
  5727                           
  5728                           ;messages.c: 41: if (qmsg->full != 0) {
  5729  001054  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5730  001058  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5731  00105C  50DF               	movf	indf2,w,c
  5732  00105E  B4D8               	btfsc	status,2,c
  5733  001060  D002               	goto	i1l3042
  5734                           
  5735                           ;messages.c: 42: return (-1);
  5736  001062  0EFF               	movlw	255
  5737  001064  0012               	return	
  5738  001066                     i1l3042:
  5739                           
  5740                           ;messages.c: 43: }
  5741                           ;messages.c: 46: qmsg->length = length;
  5742  001066  EE20 F001          	lfsr	2,1
  5743  00106A  5015               	movf	i1send_msg@qmsg,w,c
  5744  00106C  26D9               	addwf	fsr2l,f,c
  5745  00106E  5016               	movf	i1send_msg@qmsg+1,w,c
  5746  001070  22DA               	addwfc	fsr2h,f,c
  5747  001072  C00D  FFDF         	movff	i1send_msg@length,indf2
  5748                           
  5749                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5750  001076  EE20 F002          	lfsr	2,2
  5751  00107A  5015               	movf	i1send_msg@qmsg,w,c
  5752  00107C  26D9               	addwf	fsr2l,f,c
  5753  00107E  5016               	movf	i1send_msg@qmsg+1,w,c
  5754  001080  22DA               	addwfc	fsr2h,f,c
  5755  001082  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5756                           
  5757                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5758  001086  0E03               	movlw	3
  5759  001088  2415               	addwf	i1send_msg@qmsg,w,c
  5760  00108A  6E01               	movwf	i1memcpy@d1,c
  5761  00108C  0E00               	movlw	0
  5762  00108E  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5763  001090  6E02               	movwf	i1memcpy@d1+1,c
  5764  001092  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5765  001096  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5766  00109A  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5767  00109E  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5768  0010A2  ECAC  F00C         	call	i1_memcpy	;wreg free
  5769                           
  5770                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5771  0010A6  EE20 F034          	lfsr	2,52
  5772  0010AA  500B               	movf	i1send_msg@qptr,w,c
  5773  0010AC  26D9               	addwf	fsr2l,f,c
  5774  0010AE  500C               	movf	i1send_msg@qptr+1,w,c
  5775  0010B0  22DA               	addwfc	fsr2h,f,c
  5776  0010B2  EE10 F034          	lfsr	1,52
  5777  0010B6  500B               	movf	i1send_msg@qptr,w,c
  5778  0010B8  26E1               	addwf	fsr1l,f,c
  5779  0010BA  500C               	movf	i1send_msg@qptr+1,w,c
  5780  0010BC  22E2               	addwfc	fsr1h,f,c
  5781  0010BE  50E7               	movf	indf1,w,c
  5782  0010C0  6E11               	movwf	??i1_send_msg& (0+255),c
  5783  0010C2  2811               	incf	??i1_send_msg,w,c
  5784  0010C4  0B03               	andlw	3
  5785  0010C6  6EDF               	movwf	indf2,c
  5786                           
  5787                           ;messages.c: 59: qmsg->full = 1;
  5788  0010C8  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5789  0010CC  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5790  0010D0  0E01               	movlw	1
  5791  0010D2  6EDF               	movwf	indf2,c
  5792                           
  5793                           ;messages.c: 60: return (1);
  5794  0010D4  0E01               	movlw	1
  5795  0010D6  0012               	return	
  5796  0010D8                     __end_ofi1_send_msg:
  5797                           	opt stack 0
  5798                           pclatu	equ	0xFFB
  5799                           pclath	equ	0xFFA
  5800                           tblptru	equ	0xFF8
  5801                           tblptrh	equ	0xFF7
  5802                           tblptrl	equ	0xFF6
  5803                           tablat	equ	0xFF5
  5804                           prodh	equ	0xFF4
  5805                           prodl	equ	0xFF3
  5806                           intcon	equ	0xFF2
  5807                           postinc0	equ	0xFEE
  5808                           fsr0h	equ	0xFEA
  5809                           fsr0l	equ	0xFE9
  5810                           wreg	equ	0xFE8
  5811                           indf1	equ	0xFE7
  5812                           fsr1h	equ	0xFE2
  5813                           fsr1l	equ	0xFE1
  5814                           bsr	equ	0xFE0
  5815                           indf2	equ	0xFDF
  5816                           postinc2	equ	0xFDE
  5817                           postdec2	equ	0xFDD
  5818                           fsr2h	equ	0xFDA
  5819                           fsr2l	equ	0xFD9
  5820                           status	equ	0xFD8
  5821                           
  5822 ;; *************** function i1_memcpy *****************
  5823 ;; Defined at:
  5824 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;  d1              2    0[COMRAM] PTR void 
  5827 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5828 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5829 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  5830 ;;  s1              2    2[COMRAM] PTR const void 
  5831 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5832 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5833 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  5834 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5835 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  5836 ;;  n               2    4[COMRAM] unsigned int 
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5839 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5840 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5841 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  5842 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5843 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  5844 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5845 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5846 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5847 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  5848 ;; Return value:  Size  Location     Type
  5849 ;;                  2    0[COMRAM] PTR void 
  5850 ;; Registers used:
  5851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5852 ;; Tracked objects:
  5853 ;;		On entry : 0/0
  5854 ;;		On exit  : 0/0
  5855 ;;		Unchanged: 0/0
  5856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5857 ;;      Params:         6       0       0       0       0
  5858 ;;      Locals:         4       0       0       0       0
  5859 ;;      Temps:          0       0       0       0       0
  5860 ;;      Totals:        10       0       0       0       0
  5861 ;;Total ram usage:       10 bytes
  5862 ;; Hardware stack levels used:    1
  5863 ;; Hardware stack levels required when called:    5
  5864 ;; This function calls:
  5865 ;;		Nothing
  5866 ;; This function is called by:
  5867 ;;		i1_send_msg
  5868 ;; This function uses a non-reentrant model
  5869 ;;
  5870                           
  5871                           	psect	text39
  5872  001958                     __ptext39:
  5873                           	opt stack 0
  5874  001958                     i1_memcpy:
  5875                           	opt stack 17
  5876                           
  5877                           ;incstack = 0
  5878  001958  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5879  00195C  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5880  001960  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5881  001964  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5882  001968  D00E               	goto	i1l3018
  5883  00196A                     i1l3012:
  5884  00196A  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5885  00196E  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5886  001972  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5887  001976  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5888  00197A  CFDF FFE7          	movff	indf2,indf1
  5889  00197E  4A09               	infsnz	i1memcpy@s,f,c
  5890  001980  2A0A               	incf	i1memcpy@s+1,f,c
  5891  001982  4A07               	infsnz	i1memcpy@d,f,c
  5892  001984  2A08               	incf	i1memcpy@d+1,f,c
  5893  001986                     i1l3018:
  5894  001986  0605               	decf	i1memcpy@n,f,c
  5895  001988  A0D8               	btfss	status,0,c
  5896  00198A  0606               	decf	i1memcpy@n+1,f,c
  5897  00198C  2805               	incf	i1memcpy@n& (0+255),w,c
  5898  00198E  B4D8               	btfsc	status,2,c
  5899  001990  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5900  001992  B4D8               	btfsc	status,2,c
  5901                           
  5902                           ;	Return value of i1_memcpy is never used
  5903  001994  0012               	return	
  5904  001996  D7E9               	goto	i1l3012
  5905  001998                     __end_ofi1_memcpy:
  5906                           	opt stack 0
  5907                           pclatu	equ	0xFFB
  5908                           pclath	equ	0xFFA
  5909                           tblptru	equ	0xFF8
  5910                           tblptrh	equ	0xFF7
  5911                           tblptrl	equ	0xFF6
  5912                           tablat	equ	0xFF5
  5913                           prodh	equ	0xFF4
  5914                           prodl	equ	0xFF3
  5915                           intcon	equ	0xFF2
  5916                           postinc0	equ	0xFEE
  5917                           fsr0h	equ	0xFEA
  5918                           fsr0l	equ	0xFE9
  5919                           wreg	equ	0xFE8
  5920                           indf1	equ	0xFE7
  5921                           fsr1h	equ	0xFE2
  5922                           fsr1l	equ	0xFE1
  5923                           bsr	equ	0xFE0
  5924                           indf2	equ	0xFDF
  5925                           postinc2	equ	0xFDE
  5926                           postdec2	equ	0xFDD
  5927                           fsr2h	equ	0xFDA
  5928                           fsr2l	equ	0xFD9
  5929                           status	equ	0xFD8
  5930                           
  5931 ;; *************** function _ReadTimer1 *****************
  5932 ;; Defined at:
  5933 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1read.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;		None
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;  timer           2    2[COMRAM] struct Timers
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  2    0[COMRAM] unsigned int 
  5940 ;; Registers used:
  5941 ;;		None
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5947 ;;      Params:         2       0       0       0       0
  5948 ;;      Locals:         2       0       0       0       0
  5949 ;;      Temps:          0       0       0       0       0
  5950 ;;      Totals:         4       0       0       0       0
  5951 ;;Total ram usage:        4 bytes
  5952 ;; Hardware stack levels used:    1
  5953 ;; Hardware stack levels required when called:    5
  5954 ;; This function calls:
  5955 ;;		Nothing
  5956 ;; This function is called by:
  5957 ;;		_timer1_int_handler
  5958 ;; This function uses a non-reentrant model
  5959 ;;
  5960                           
  5961                           	psect	text40
  5962  001CA2                     __ptext40:
  5963                           	opt stack 0
  5964  001CA2                     _ReadTimer1:
  5965                           	opt stack 19
  5966                           
  5967                           ;incstack = 0
  5968  001CA2  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  5969  001CA6  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  5970  001CAA  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  5971  001CAE  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  5972  001CB2  0012               	return	
  5973  001CB4                     __end_of_ReadTimer1:
  5974                           	opt stack 0
  5975                           pclatu	equ	0xFFB
  5976                           pclath	equ	0xFFA
  5977                           tblptru	equ	0xFF8
  5978                           tblptrh	equ	0xFF7
  5979                           tblptrl	equ	0xFF6
  5980                           tablat	equ	0xFF5
  5981                           prodh	equ	0xFF4
  5982                           prodl	equ	0xFF3
  5983                           intcon	equ	0xFF2
  5984                           postinc0	equ	0xFEE
  5985                           fsr0h	equ	0xFEA
  5986                           fsr0l	equ	0xFE9
  5987                           wreg	equ	0xFE8
  5988                           indf1	equ	0xFE7
  5989                           fsr1h	equ	0xFE2
  5990                           fsr1l	equ	0xFE1
  5991                           bsr	equ	0xFE0
  5992                           indf2	equ	0xFDF
  5993                           postinc2	equ	0xFDE
  5994                           postdec2	equ	0xFDD
  5995                           fsr2h	equ	0xFDA
  5996                           fsr2l	equ	0xFD9
  5997                           status	equ	0xFD8
  5998                           
  5999 ;; *************** function _InterruptHandlerHigh *****************
  6000 ;; Defined at:
  6001 ;;		line 92 in file "../src/interrupts.c"
  6002 ;; Parameters:    Size  Location     Type
  6003 ;;		None
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;  pureADCValue    2   38[BANK0 ] int 
  6006 ;; Return value:  Size  Location     Type
  6007 ;;		None               void
  6008 ;; Registers used:
  6009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6010 ;; Tracked objects:
  6011 ;;		On entry : 0/0
  6012 ;;		On exit  : 0/0
  6013 ;;		Unchanged: 0/0
  6014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6015 ;;      Params:         0       0       0       0       0
  6016 ;;      Locals:         0       2       0       0       0
  6017 ;;      Temps:          0      16       0       0       0
  6018 ;;      Totals:         0      18       0       0       0
  6019 ;;Total ram usage:       18 bytes
  6020 ;; Hardware stack levels used:    1
  6021 ;; Hardware stack levels required when called:    4
  6022 ;; This function calls:
  6023 ;;		_ReadADC
  6024 ;;		_SleepIfOkay
  6025 ;;		_i2c_int_handler
  6026 ;;		_timer0_int_handler
  6027 ;; This function is called by:
  6028 ;;		Interrupt level 2
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           
  6032                           	psect	intcode
  6033  000008                     __pintcode:
  6034                           	opt stack 0
  6035  000008                     _InterruptHandlerHigh:
  6036                           	opt stack 17
  6037                           
  6038                           ;incstack = 0
  6039  000008  CFFA F098          	movff	pclath,??_InterruptHandlerHigh+2
  6040  00000C  CFFB F099          	movff	pclatu,??_InterruptHandlerHigh+3
  6041  000010  EFBB  F007         	goto	int_func
  6042                           pclatu	equ	0xFFB
  6043                           pclath	equ	0xFFA
  6044                           tblptru	equ	0xFF8
  6045                           tblptrh	equ	0xFF7
  6046                           tblptrl	equ	0xFF6
  6047                           tablat	equ	0xFF5
  6048                           prodh	equ	0xFF4
  6049                           prodl	equ	0xFF3
  6050                           intcon	equ	0xFF2
  6051                           postinc0	equ	0xFEE
  6052                           fsr0h	equ	0xFEA
  6053                           fsr0l	equ	0xFE9
  6054                           wreg	equ	0xFE8
  6055                           indf1	equ	0xFE7
  6056                           fsr1h	equ	0xFE2
  6057                           fsr1l	equ	0xFE1
  6058                           bsr	equ	0xFE0
  6059                           indf2	equ	0xFDF
  6060                           postinc2	equ	0xFDE
  6061                           postdec2	equ	0xFDD
  6062                           fsr2h	equ	0xFDA
  6063                           fsr2l	equ	0xFD9
  6064                           status	equ	0xFD8
  6065                           
  6066                           	psect	intcode_body
  6067  000F76                     __pintcode_body:
  6068                           	opt stack 17
  6069  000F76                     int_func:
  6070                           	opt stack 17
  6071  000F76  CFE9 F09A          	movff	fsr0l,??_InterruptHandlerHigh+4
  6072  000F7A  CFEA F09B          	movff	fsr0h,??_InterruptHandlerHigh+5
  6073  000F7E  CFE1 F09C          	movff	fsr1l,??_InterruptHandlerHigh+6
  6074  000F82  CFE2 F09D          	movff	fsr1h,??_InterruptHandlerHigh+7
  6075  000F86  CFD9 F09E          	movff	fsr2l,??_InterruptHandlerHigh+8
  6076  000F8A  CFDA F09F          	movff	fsr2h,??_InterruptHandlerHigh+9
  6077  000F8E  CFF3 F0A0          	movff	prodl,??_InterruptHandlerHigh+10
  6078  000F92  CFF4 F0A1          	movff	prodh,??_InterruptHandlerHigh+11
  6079  000F96  CFF6 F0A2          	movff	tblptrl,??_InterruptHandlerHigh+12
  6080  000F9A  CFF7 F0A3          	movff	tblptrh,??_InterruptHandlerHigh+13
  6081  000F9E  CFF8 F0A4          	movff	tblptru,??_InterruptHandlerHigh+14
  6082  000FA2  CFF5 F0A5          	movff	tablat,??_InterruptHandlerHigh+15
  6083                           
  6084                           ;interrupts.c: 97: if (PIR1bits.SSPIF) {
  6085  000FA6  A69E               	btfss	3998,3,c	;volatile
  6086  000FA8  D003               	goto	i2l3310
  6087                           
  6088                           ;interrupts.c: 99: PIR1bits.SSPIF = 0;
  6089  000FAA  969E               	bcf	3998,3,c	;volatile
  6090                           
  6091                           ;interrupts.c: 101: i2c_int_handler();
  6092  000FAC  EC5F  F000         	call	_i2c_int_handler	;wreg free
  6093  000FB0                     i2l3310:
  6094                           
  6095                           ;interrupts.c: 102: }
  6096                           ;interrupts.c: 105: if (INTCONbits.TMR0IF) {
  6097  000FB0  A4F2               	btfss	intcon,2,c	;volatile
  6098  000FB2  D003               	goto	i2l3316
  6099                           
  6100                           ;interrupts.c: 106: INTCONbits.TMR0IF = 0;
  6101  000FB4  94F2               	bcf	intcon,2,c	;volatile
  6102                           
  6103                           ;interrupts.c: 108: timer0_int_handler();
  6104  000FB6  EC6F  F00A         	call	_timer0_int_handler	;wreg free
  6105  000FBA                     i2l3316:
  6106                           
  6107                           ;interrupts.c: 109: }
  6108                           ;interrupts.c: 114: if(PIR1bits.ADIF == 1)
  6109  000FBA  AC9E               	btfss	3998,6,c	;volatile
  6110  000FBC  D019               	goto	i2l3324
  6111                           
  6112                           ;interrupts.c: 115: {
  6113                           ;interrupts.c: 118: PIR1bits.ADIF = 0;
  6114  000FBE  9C9E               	bcf	3998,6,c	;volatile
  6115                           
  6116                           ;interrupts.c: 119: int pureADCValue = ReadADC();
  6117  000FC0  EC69  F00E         	call	_ReadADC	;wreg free
  6118  000FC4  C02F  F0A6         	movff	?_ReadADC,InterruptHandlerHigh@pureADCValue
  6119  000FC8  C030  F0A7         	movff	?_ReadADC+1,InterruptHandlerHigh@pureADCValue+1
  6120                           
  6121                           ;interrupts.c: 120: ADCValue = pureADCValue >> 2;
  6122  000FCC  0100               	movlb	0	; () banked
  6123  000FCE  C0A6  F096         	movff	InterruptHandlerHigh@pureADCValue,??_InterruptHandlerHigh
  6124  000FD2  0100               	movlb	0	; () banked
  6125  000FD4  C0A7  F097         	movff	InterruptHandlerHigh@pureADCValue+1,??_InterruptHandlerHigh+1
  6126  000FD8  0100               	movlb	0	; () banked
  6127  000FDA  3597               	rlcf	(??_InterruptHandlerHigh+1)& (0+255),w,b
  6128  000FDC  3397               	rrcf	(??_InterruptHandlerHigh+1)& (0+255),f,b
  6129  000FDE  3396               	rrcf	??_InterruptHandlerHigh& (0+255),f,b
  6130  000FE0  0100               	movlb	0	; () banked
  6131  000FE2  3597               	rlcf	(??_InterruptHandlerHigh+1)& (0+255),w,b
  6132  000FE4  3397               	rrcf	(??_InterruptHandlerHigh+1)& (0+255),f,b
  6133  000FE6  3396               	rrcf	??_InterruptHandlerHigh& (0+255),f,b
  6134  000FE8  C096  F0CF         	movff	??_InterruptHandlerHigh,_ADCValue
  6135  000FEC  C097  F0D0         	movff	??_InterruptHandlerHigh+1,_ADCValue+1
  6136  000FF0                     i2l3324:
  6137                           
  6138                           ;interrupts.c: 123: }
  6139                           ;interrupts.c: 129: SleepIfOkay();
  6140  000FF0  ECB9  F00B         	call	_SleepIfOkay	;wreg free
  6141  000FF4  C0A5  FFF5         	movff	??_InterruptHandlerHigh+15,tablat
  6142  000FF8  C0A4  FFF8         	movff	??_InterruptHandlerHigh+14,tblptru
  6143  000FFC  C0A3  FFF7         	movff	??_InterruptHandlerHigh+13,tblptrh
  6144  001000  C0A2  FFF6         	movff	??_InterruptHandlerHigh+12,tblptrl
  6145  001004  C0A1  FFF4         	movff	??_InterruptHandlerHigh+11,prodh
  6146  001008  C0A0  FFF3         	movff	??_InterruptHandlerHigh+10,prodl
  6147  00100C  C09F  FFDA         	movff	??_InterruptHandlerHigh+9,fsr2h
  6148  001010  C09E  FFD9         	movff	??_InterruptHandlerHigh+8,fsr2l
  6149  001014  C09D  FFE2         	movff	??_InterruptHandlerHigh+7,fsr1h
  6150  001018  C09C  FFE1         	movff	??_InterruptHandlerHigh+6,fsr1l
  6151  00101C  C09B  FFEA         	movff	??_InterruptHandlerHigh+5,fsr0h
  6152  001020  C09A  FFE9         	movff	??_InterruptHandlerHigh+4,fsr0l
  6153  001024  C099  FFFB         	movff	??_InterruptHandlerHigh+3,pclatu
  6154  001028  C098  FFFA         	movff	??_InterruptHandlerHigh+2,pclath
  6155  00102C  0011               	retfie		f
  6156  00102E                     __end_of_InterruptHandlerHigh:
  6157                           	opt stack 0
  6158                           pclatu	equ	0xFFB
  6159                           pclath	equ	0xFFA
  6160                           tblptru	equ	0xFF8
  6161                           tblptrh	equ	0xFF7
  6162                           tblptrl	equ	0xFF6
  6163                           tablat	equ	0xFF5
  6164                           prodh	equ	0xFF4
  6165                           prodl	equ	0xFF3
  6166                           intcon	equ	0xFF2
  6167                           postinc0	equ	0xFEE
  6168                           fsr0h	equ	0xFEA
  6169                           fsr0l	equ	0xFE9
  6170                           wreg	equ	0xFE8
  6171                           indf1	equ	0xFE7
  6172                           fsr1h	equ	0xFE2
  6173                           fsr1l	equ	0xFE1
  6174                           bsr	equ	0xFE0
  6175                           indf2	equ	0xFDF
  6176                           postinc2	equ	0xFDE
  6177                           postdec2	equ	0xFDD
  6178                           fsr2h	equ	0xFDA
  6179                           fsr2l	equ	0xFD9
  6180                           status	equ	0xFD8
  6181                           
  6182 ;; *************** function _timer0_int_handler *****************
  6183 ;; Defined at:
  6184 ;;		line 16 in file "../src/user_interrupts.c"
  6185 ;; Parameters:    Size  Location     Type
  6186 ;;		None
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;  val             2    4[BANK0 ] unsigned int 
  6189 ;;  msgtype         2    2[BANK0 ] int 
  6190 ;;  length          2    0[BANK0 ] int 
  6191 ;; Return value:  Size  Location     Type
  6192 ;;		None               void
  6193 ;; Registers used:
  6194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6195 ;; Tracked objects:
  6196 ;;		On entry : 0/0
  6197 ;;		On exit  : 0/0
  6198 ;;		Unchanged: 0/0
  6199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6200 ;;      Params:         0       0       0       0       0
  6201 ;;      Locals:         0       6       0       0       0
  6202 ;;      Temps:          1       0       0       0       0
  6203 ;;      Totals:         1       6       0       0       0
  6204 ;;Total ram usage:        7 bytes
  6205 ;; Hardware stack levels used:    1
  6206 ;; Hardware stack levels required when called:    3
  6207 ;; This function calls:
  6208 ;;		_FromMainHigh_recvmsg
  6209 ;;		_ToMainHigh_sendmsg
  6210 ;;		_WriteTimer0
  6211 ;; This function is called by:
  6212 ;;		_InterruptHandlerHigh
  6213 ;; This function uses a non-reentrant model
  6214 ;;
  6215                           
  6216                           	psect	text42
  6217  0014DE                     __ptext42:
  6218                           	opt stack 0
  6219  0014DE                     _timer0_int_handler:
  6220                           	opt stack 17
  6221                           
  6222                           ;user_interrupts.c: 17: unsigned int val;
  6223                           ;user_interrupts.c: 18: int length, msgtype;
  6224                           ;user_interrupts.c: 21: LATBbits.LATB0 = !LATBbits.LATB0;
  6225                           
  6226                           ;incstack = 0
  6227  0014DE  B08A               	btfsc	3978,0,c	;volatile
  6228  0014E0  D002               	goto	i2u198_40
  6229  0014E2  0E01               	movlw	1
  6230  0014E4  D001               	goto	i2u198_46
  6231  0014E6                     i2u198_40:
  6232  0014E6  0E00               	movlw	0
  6233  0014E8                     i2u198_46:
  6234  0014E8  6E4C               	movwf	??_timer0_int_handler& (0+255),c
  6235  0014EA  508A               	movf	3978,w,c	;volatile
  6236  0014EC  184C               	xorwf	??_timer0_int_handler,w,c
  6237  0014EE  0BFE               	andlw	-2
  6238  0014F0  184C               	xorwf	??_timer0_int_handler,w,c
  6239  0014F2  6E8A               	movwf	3978,c	;volatile
  6240                           
  6241                           ;user_interrupts.c: 23: WriteTimer0(0);
  6242  0014F4  0E00               	movlw	0
  6243  0014F6  6E30               	movwf	WriteTimer0@timer0+1,c
  6244  0014F8  0E00               	movlw	0
  6245  0014FA  6E2F               	movwf	WriteTimer0@timer0,c
  6246  0014FC  EC5A  F00E         	call	_WriteTimer0	;wreg free
  6247                           
  6248                           ;user_interrupts.c: 25: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6249  001500  0100               	movlb	0	; () banked
  6250  001502  0E00               	movlw	high timer0_int_handler@msgtype
  6251  001504  6E48               	movwf	FromMainHigh_recvmsg@msgtype+1,c
  6252  001506  0100               	movlb	0	; () banked
  6253  001508  0E82               	movlw	low timer0_int_handler@msgtype
  6254  00150A  6E47               	movwf	FromMainHigh_recvmsg@msgtype,c
  6255  00150C  0100               	movlb	0	; () banked
  6256  00150E  0E00               	movlw	high timer0_int_handler@val
  6257  001510  6E4A               	movwf	FromMainHigh_recvmsg@data+1,c
  6258  001512  0100               	movlb	0	; () banked
  6259  001514  0E84               	movlw	low timer0_int_handler@val
  6260  001516  6E49               	movwf	FromMainHigh_recvmsg@data,c
  6261  001518  0E02               	movlw	2
  6262  00151A  EC8C  F00D         	call	_FromMainHigh_recvmsg
  6263  00151E  0100               	movlb	0	; () banked
  6264  001520  0100               	movlb	0	; () banked
  6265  001522  6F80               	movwf	timer0_int_handler@length& (0+255),b
  6266  001524  0100               	movlb	0	; () banked
  6267  001526  6B81               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6268  001528  0100               	movlb	0	; () banked
  6269  00152A  BF80               	btfsc	timer0_int_handler@length& (0+255),7,b
  6270  00152C  0781               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6271                           
  6272                           ; BSR set to: 0
  6273                           ;user_interrupts.c: 26: if (length == sizeof (val)) {
  6274  00152E  0100               	movlb	0	; () banked
  6275  001530  0100               	movlb	0	; () banked
  6276  001532  5180               	movf	timer0_int_handler@length& (0+255),w,b
  6277  001534  0A02               	xorlw	2
  6278  001536  1181               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6279  001538  A4D8               	btfss	status,2,c
  6280  00153A  0012               	return	
  6281                           
  6282                           ; BSR set to: 0
  6283                           ;user_interrupts.c: 27: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6284  00153C  6E4C               	movwf	??_timer0_int_handler& (0+255),c
  6285  00153E  0E0A               	movlw	10
  6286  001540  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  6287  001542  504C               	movf	??_timer0_int_handler& (0+255),w,c
  6288  001544  0100               	movlb	0	; () banked
  6289  001546  0E00               	movlw	high timer0_int_handler@val
  6290  001548  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  6291  00154A  0100               	movlb	0	; () banked
  6292  00154C  0E84               	movlw	low timer0_int_handler@val
  6293  00154E  6E46               	movwf	ToMainHigh_sendmsg@data,c
  6294  001550  0E02               	movlw	2
  6295  001552  ECC8  F00D         	call	_ToMainHigh_sendmsg
  6296  001556  0012               	return	
  6297  001558                     __end_of_timer0_int_handler:
  6298                           	opt stack 0
  6299                           pclatu	equ	0xFFB
  6300                           pclath	equ	0xFFA
  6301                           tblptru	equ	0xFF8
  6302                           tblptrh	equ	0xFF7
  6303                           tblptrl	equ	0xFF6
  6304                           tablat	equ	0xFF5
  6305                           prodh	equ	0xFF4
  6306                           prodl	equ	0xFF3
  6307                           intcon	equ	0xFF2
  6308                           postinc0	equ	0xFEE
  6309                           fsr0h	equ	0xFEA
  6310                           fsr0l	equ	0xFE9
  6311                           wreg	equ	0xFE8
  6312                           indf1	equ	0xFE7
  6313                           fsr1h	equ	0xFE2
  6314                           fsr1l	equ	0xFE1
  6315                           bsr	equ	0xFE0
  6316                           indf2	equ	0xFDF
  6317                           postinc2	equ	0xFDE
  6318                           postdec2	equ	0xFDD
  6319                           fsr2h	equ	0xFDA
  6320                           fsr2l	equ	0xFD9
  6321                           status	equ	0xFD8
  6322                           
  6323 ;; *************** function _WriteTimer0 *****************
  6324 ;; Defined at:
  6325 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0write.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;  timer0          2   46[COMRAM] unsigned int 
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;  timer           2   48[COMRAM] struct Timers
  6330 ;; Return value:  Size  Location     Type
  6331 ;;		None               void
  6332 ;; Registers used:
  6333 ;;		None
  6334 ;; Tracked objects:
  6335 ;;		On entry : 0/0
  6336 ;;		On exit  : 0/0
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6339 ;;      Params:         2       0       0       0       0
  6340 ;;      Locals:         2       0       0       0       0
  6341 ;;      Temps:          0       0       0       0       0
  6342 ;;      Totals:         4       0       0       0       0
  6343 ;;Total ram usage:        4 bytes
  6344 ;; Hardware stack levels used:    1
  6345 ;; This function calls:
  6346 ;;		Nothing
  6347 ;; This function is called by:
  6348 ;;		_timer0_int_handler
  6349 ;; This function uses a non-reentrant model
  6350 ;;
  6351                           
  6352                           	psect	text43
  6353  001CB4                     __ptext43:
  6354                           	opt stack 0
  6355  001CB4                     _WriteTimer0:
  6356                           	opt stack 19
  6357                           
  6358                           ;incstack = 0
  6359  001CB4  C02F  F031         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6360  001CB8  C030  F032         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6361  001CBC  C032  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6362  001CC0  C031  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6363  001CC4  0012               	return	
  6364  001CC6                     __end_of_WriteTimer0:
  6365                           	opt stack 0
  6366                           pclatu	equ	0xFFB
  6367                           pclath	equ	0xFFA
  6368                           tblptru	equ	0xFF8
  6369                           tblptrh	equ	0xFF7
  6370                           tblptrl	equ	0xFF6
  6371                           tablat	equ	0xFF5
  6372                           prodh	equ	0xFF4
  6373                           prodl	equ	0xFF3
  6374                           intcon	equ	0xFF2
  6375                           postinc0	equ	0xFEE
  6376                           fsr0h	equ	0xFEA
  6377                           fsr0l	equ	0xFE9
  6378                           wreg	equ	0xFE8
  6379                           indf1	equ	0xFE7
  6380                           fsr1h	equ	0xFE2
  6381                           fsr1l	equ	0xFE1
  6382                           bsr	equ	0xFE0
  6383                           indf2	equ	0xFDF
  6384                           postinc2	equ	0xFDE
  6385                           postdec2	equ	0xFDD
  6386                           fsr2h	equ	0xFDA
  6387                           fsr2l	equ	0xFD9
  6388                           status	equ	0xFD8
  6389                           
  6390 ;; *************** function _FromMainHigh_recvmsg *****************
  6391 ;; Defined at:
  6392 ;;		line 183 in file "../src/messages.c"
  6393 ;; Parameters:    Size  Location     Type
  6394 ;;  maxlength       1    wreg     unsigned char 
  6395 ;;  msgtype         2   70[COMRAM] PTR unsigned char 
  6396 ;;		 -> timer0_int_handler@msgtype(2), 
  6397 ;;  data            2   72[COMRAM] PTR void 
  6398 ;;		 -> timer0_int_handler@val(2), 
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;  maxlength       1   74[COMRAM] unsigned char 
  6401 ;; Return value:  Size  Location     Type
  6402 ;;                  1    wreg      char 
  6403 ;; Registers used:
  6404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6405 ;; Tracked objects:
  6406 ;;		On entry : 0/0
  6407 ;;		On exit  : 0/0
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6410 ;;      Params:         4       0       0       0       0
  6411 ;;      Locals:         1       0       0       0       0
  6412 ;;      Temps:          0       0       0       0       0
  6413 ;;      Totals:         5       0       0       0       0
  6414 ;;Total ram usage:        5 bytes
  6415 ;; Hardware stack levels used:    1
  6416 ;; Hardware stack levels required when called:    2
  6417 ;; This function calls:
  6418 ;;		i2_recv_msg
  6419 ;; This function is called by:
  6420 ;;		_timer0_int_handler
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424                           	psect	text44
  6425  001B18                     __ptext44:
  6426                           	opt stack 0
  6427  001B18                     _FromMainHigh_recvmsg:
  6428                           	opt stack 17
  6429                           
  6430                           ;incstack = 0
  6431                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  6432  001B18  CFE8 F04B          	movff	wreg,FromMainHigh_recvmsg@maxlength
  6433                           
  6434                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  6435  001B1C  0102               	movlb	2	; () banked
  6436  001B1E  0E02               	movlw	high _FromMainHigh_MQ
  6437  001B20  6E3A               	movwf	i2recv_msg@qptr+1,c
  6438  001B22  0102               	movlb	2	; () banked
  6439  001B24  0E00               	movlw	low _FromMainHigh_MQ
  6440  001B26  6E39               	movwf	i2recv_msg@qptr,c
  6441  001B28  C04B  F03B         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  6442  001B2C  C048  F03D         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  6443  001B30  C047  F03C         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  6444  001B34  C04A  F03F         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  6445  001B38  C049  F03E         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  6446  001B3C  ECEE  F006         	call	i2_recv_msg	;wreg free
  6447  001B40  0012               	return	
  6448  001B42                     __end_of_FromMainHigh_recvmsg:
  6449                           	opt stack 0
  6450                           pclatu	equ	0xFFB
  6451                           pclath	equ	0xFFA
  6452                           tblptru	equ	0xFF8
  6453                           tblptrh	equ	0xFF7
  6454                           tblptrl	equ	0xFF6
  6455                           tablat	equ	0xFF5
  6456                           prodh	equ	0xFF4
  6457                           prodl	equ	0xFF3
  6458                           intcon	equ	0xFF2
  6459                           postinc0	equ	0xFEE
  6460                           fsr0h	equ	0xFEA
  6461                           fsr0l	equ	0xFE9
  6462                           wreg	equ	0xFE8
  6463                           indf1	equ	0xFE7
  6464                           fsr1h	equ	0xFE2
  6465                           fsr1l	equ	0xFE1
  6466                           bsr	equ	0xFE0
  6467                           indf2	equ	0xFDF
  6468                           postinc2	equ	0xFDE
  6469                           postdec2	equ	0xFDD
  6470                           fsr2h	equ	0xFDA
  6471                           fsr2l	equ	0xFD9
  6472                           status	equ	0xFD8
  6473                           
  6474 ;; *************** function i2_recv_msg *****************
  6475 ;; Defined at:
  6476 ;;		line 63 in file "../src/messages.c"
  6477 ;; Parameters:    Size  Location     Type
  6478 ;;  qptr            2   56[COMRAM] PTR struct __msg_queue
  6479 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6480 ;;  maxlength       1   58[COMRAM] unsigned char 
  6481 ;;  msgtype         2   59[COMRAM] PTR unsigned char 
  6482 ;;		 -> main@msgtype(1), timer0_int_handler@msgtype(2), 
  6483 ;;  data            2   61[COMRAM] PTR void 
  6484 ;;		 -> main@msgbuffer(11), timer0_int_handler@val(2), 
  6485 ;; Auto vars:     Size  Location     Type
  6486 ;;  recv_msg        2   68[COMRAM] PTR struct __msg
  6487 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6488 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6489 ;;  recv_msg        2   66[COMRAM] unsigned int 
  6490 ;;  recv_msg        1   65[COMRAM] unsigned char 
  6491 ;; Return value:  Size  Location     Type
  6492 ;;                  1    wreg      char 
  6493 ;; Registers used:
  6494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6495 ;; Tracked objects:
  6496 ;;		On entry : 0/0
  6497 ;;		On exit  : 0/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6500 ;;      Params:         7       0       0       0       0
  6501 ;;      Locals:         5       0       0       0       0
  6502 ;;      Temps:          2       0       0       0       0
  6503 ;;      Totals:        14       0       0       0       0
  6504 ;;Total ram usage:       14 bytes
  6505 ;; Hardware stack levels used:    1
  6506 ;; Hardware stack levels required when called:    1
  6507 ;; This function calls:
  6508 ;;		i2_memcpy
  6509 ;; This function is called by:
  6510 ;;		_FromMainHigh_recvmsg
  6511 ;; This function uses a non-reentrant model
  6512 ;;
  6513                           
  6514                           	psect	text45
  6515  000DDC                     __ptext45:
  6516                           	opt stack 0
  6517  000DDC                     i2_recv_msg:
  6518                           	opt stack 17
  6519                           
  6520                           ;messages.c: 64: unsigned char slot;
  6521                           ;messages.c: 68: msg *qmsg;
  6522                           ;messages.c: 69: size_t tlength;
  6523                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6524                           
  6525                           ;incstack = 0
  6526  000DDC  EE20 F035          	lfsr	2,53
  6527  000DE0  5039               	movf	i2recv_msg@qptr,w,c
  6528  000DE2  26D9               	addwf	fsr2l,f,c
  6529  000DE4  503A               	movf	i2recv_msg@qptr+1,w,c
  6530  000DE6  22DA               	addwfc	fsr2h,f,c
  6531  000DE8  50DF               	movf	indf2,w,c
  6532  000DEA  6E42               	movwf	i2recv_msg@slot,c
  6533                           
  6534                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6535  000DEC  5042               	movf	i2recv_msg@slot,w,c
  6536  000DEE  0D0D               	mullw	13
  6537  000DF0  50F3               	movf	prodl,w,c
  6538  000DF2  2439               	addwf	i2recv_msg@qptr,w,c
  6539  000DF4  6E45               	movwf	i2recv_msg@qmsg,c
  6540  000DF6  50F4               	movf	prodh,w,c
  6541  000DF8  203A               	addwfc	i2recv_msg@qptr+1,w,c
  6542  000DFA  6E46               	movwf	i2recv_msg@qmsg+1,c
  6543                           
  6544                           ;messages.c: 74: if (qmsg->full == 1) {
  6545  000DFC  0E01               	movlw	1
  6546  000DFE  C045  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6547  000E02  C046  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6548  000E06  62DF               	cpfseq	indf2,c
  6549  000E08  D050               	goto	i2l3394
  6550                           
  6551                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6552  000E0A  EE20 F001          	lfsr	2,1
  6553  000E0E  5045               	movf	i2recv_msg@qmsg,w,c
  6554  000E10  26D9               	addwf	fsr2l,f,c
  6555  000E12  5046               	movf	i2recv_msg@qmsg+1,w,c
  6556  000E14  22DA               	addwfc	fsr2h,f,c
  6557  000E16  50DF               	movf	indf2,w,c
  6558  000E18  5C3B               	subwf	i2recv_msg@maxlength,w,c
  6559  000E1A  B0D8               	btfsc	status,0,c
  6560  000E1C  D002               	goto	i2l3378
  6561                           
  6562                           ;messages.c: 77: return (-3);
  6563  000E1E  0EFD               	movlw	253
  6564  000E20  0012               	return	
  6565  000E22                     i2l3378:
  6566                           
  6567                           ;messages.c: 78: }
  6568                           ;messages.c: 80: tlength = qmsg->length;
  6569  000E22  EE20 F001          	lfsr	2,1
  6570  000E26  5045               	movf	i2recv_msg@qmsg,w,c
  6571  000E28  26D9               	addwf	fsr2l,f,c
  6572  000E2A  5046               	movf	i2recv_msg@qmsg+1,w,c
  6573  000E2C  22DA               	addwfc	fsr2h,f,c
  6574  000E2E  50DF               	movf	indf2,w,c
  6575  000E30  6E40               	movwf	??i2_recv_msg& (0+255),c
  6576  000E32  5040               	movf	??i2_recv_msg,w,c
  6577  000E34  6E43               	movwf	i2recv_msg@tlength,c
  6578  000E36  6A44               	clrf	i2recv_msg@tlength+1,c
  6579                           
  6580                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6581  000E38  C03F  F030         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  6582  000E3C  C03E  F02F         	movff	i2recv_msg@data,i2memcpy@d1
  6583  000E40  0E03               	movlw	3
  6584  000E42  2445               	addwf	i2recv_msg@qmsg,w,c
  6585  000E44  6E40               	movwf	??i2_recv_msg& (0+255),c
  6586  000E46  0E00               	movlw	0
  6587  000E48  2046               	addwfc	i2recv_msg@qmsg+1,w,c
  6588  000E4A  6E41               	movwf	(??i2_recv_msg+1)& (0+255),c
  6589  000E4C  C040  F031         	movff	??i2_recv_msg,i2memcpy@s1
  6590  000E50  C041  F032         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  6591  000E54  C043  F033         	movff	i2recv_msg@tlength,i2memcpy@n
  6592  000E58  C044  F034         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  6593  000E5C  ECCC  F00C         	call	i2_memcpy	;wreg free
  6594                           
  6595                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6596  000E60  EE20 F035          	lfsr	2,53
  6597  000E64  5039               	movf	i2recv_msg@qptr,w,c
  6598  000E66  26D9               	addwf	fsr2l,f,c
  6599  000E68  503A               	movf	i2recv_msg@qptr+1,w,c
  6600  000E6A  22DA               	addwfc	fsr2h,f,c
  6601  000E6C  EE10 F035          	lfsr	1,53
  6602  000E70  5039               	movf	i2recv_msg@qptr,w,c
  6603  000E72  26E1               	addwf	fsr1l,f,c
  6604  000E74  503A               	movf	i2recv_msg@qptr+1,w,c
  6605  000E76  22E2               	addwfc	fsr1h,f,c
  6606  000E78  50E7               	movf	indf1,w,c
  6607  000E7A  6E40               	movwf	??i2_recv_msg& (0+255),c
  6608  000E7C  2840               	incf	??i2_recv_msg,w,c
  6609  000E7E  0B03               	andlw	3
  6610  000E80  6EDF               	movwf	indf2,c
  6611                           
  6612                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6613  000E82  EE20 F002          	lfsr	2,2
  6614  000E86  5045               	movf	i2recv_msg@qmsg,w,c
  6615  000E88  26D9               	addwf	fsr2l,f,c
  6616  000E8A  5046               	movf	i2recv_msg@qmsg+1,w,c
  6617  000E8C  22DA               	addwfc	fsr2h,f,c
  6618  000E8E  C03C  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  6619  000E92  C03D  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  6620  000E96  CFDF FFE7          	movff	indf2,indf1
  6621                           
  6622                           ;messages.c: 91: qmsg->full = 0;
  6623  000E9A  C045  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6624  000E9E  C046  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6625  000EA2  0E00               	movlw	0
  6626  000EA4  6EDF               	movwf	indf2,c
  6627                           
  6628                           ;messages.c: 92: return (tlength);
  6629  000EA6  5043               	movf	i2recv_msg@tlength,w,c
  6630  000EA8  0012               	return	
  6631  000EAA                     i2l3394:
  6632                           
  6633                           ;messages.c: 94: return (-4);
  6634  000EAA  0EFC               	movlw	252
  6635  000EAC  0012               	return	
  6636  000EAE                     __end_ofi2_recv_msg:
  6637                           	opt stack 0
  6638                           pclatu	equ	0xFFB
  6639                           pclath	equ	0xFFA
  6640                           tblptru	equ	0xFF8
  6641                           tblptrh	equ	0xFF7
  6642                           tblptrl	equ	0xFF6
  6643                           tablat	equ	0xFF5
  6644                           prodh	equ	0xFF4
  6645                           prodl	equ	0xFF3
  6646                           intcon	equ	0xFF2
  6647                           postinc0	equ	0xFEE
  6648                           fsr0h	equ	0xFEA
  6649                           fsr0l	equ	0xFE9
  6650                           wreg	equ	0xFE8
  6651                           indf1	equ	0xFE7
  6652                           fsr1h	equ	0xFE2
  6653                           fsr1l	equ	0xFE1
  6654                           bsr	equ	0xFE0
  6655                           indf2	equ	0xFDF
  6656                           postinc2	equ	0xFDE
  6657                           postdec2	equ	0xFDD
  6658                           fsr2h	equ	0xFDA
  6659                           fsr2l	equ	0xFD9
  6660                           status	equ	0xFD8
  6661                           
  6662 ;; *************** function _i2c_int_handler *****************
  6663 ;; Defined at:
  6664 ;;		line 100 in file "../src/my_i2c.c"
  6665 ;; Parameters:    Size  Location     Type
  6666 ;;		None
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;  msgbuffer      11    0[BANK0 ] unsigned char [11]
  6669 ;;  length          2   11[BANK0 ] int 
  6670 ;;  error_buf       3   13[BANK0 ] unsigned char [3]
  6671 ;;  data_read       1   21[BANK0 ] unsigned char 
  6672 ;;  msg_ready       1   20[BANK0 ] unsigned char 
  6673 ;;  msg_to_send     1   19[BANK0 ] unsigned char 
  6674 ;;  i2c_data        1   18[BANK0 ] unsigned char 
  6675 ;;  overrun_erro    1   17[BANK0 ] unsigned char 
  6676 ;;  data_written    1   16[BANK0 ] unsigned char 
  6677 ;; Return value:  Size  Location     Type
  6678 ;;		None               void
  6679 ;; Registers used:
  6680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6686 ;;      Params:         0       0       0       0       0
  6687 ;;      Locals:         0      22       0       0       0
  6688 ;;      Temps:          2       0       0       0       0
  6689 ;;      Totals:         2      22       0       0       0
  6690 ;;Total ram usage:       24 bytes
  6691 ;; Hardware stack levels used:    1
  6692 ;; Hardware stack levels required when called:    3
  6693 ;; This function calls:
  6694 ;;		_ToMainHigh_sendmsg
  6695 ;;		_handle_start
  6696 ;;		i2_returnADCValue
  6697 ;;		i2_start_i2c_slave_reply
  6698 ;; This function is called by:
  6699 ;;		_InterruptHandlerHigh
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           	psect	text46
  6704  0000BE                     __ptext46:
  6705                           	opt stack 0
  6706  0000BE                     _i2c_int_handler:
  6707                           	opt stack 17
  6708                           
  6709                           ;my_i2c.c: 101: unsigned char i2c_data;
  6710                           ;my_i2c.c: 102: unsigned char data_read = 0;
  6711                           
  6712                           ;incstack = 0
  6713  0000BE  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6714  0000C0  0E00               	movlw	0
  6715  0000C2  0100               	movlb	0	; () banked
  6716  0000C4  0100               	movlb	0	; () banked
  6717  0000C6  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  6718  0000C8  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6719                           
  6720                           ;my_i2c.c: 103: unsigned char data_written = 0;
  6721  0000CA  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6722  0000CC  0E00               	movlw	0
  6723  0000CE  0100               	movlb	0	; () banked
  6724  0000D0  0100               	movlb	0	; () banked
  6725  0000D2  6F90               	movwf	i2c_int_handler@data_written& (0+255),b
  6726  0000D4  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6727                           
  6728                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  6729  0000D6  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6730  0000D8  0E00               	movlw	0
  6731  0000DA  0100               	movlb	0	; () banked
  6732  0000DC  0100               	movlb	0	; () banked
  6733  0000DE  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6734  0000E0  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6735                           
  6736                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  6737  0000E2  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6738  0000E4  0E00               	movlw	0
  6739  0000E6  0100               	movlb	0	; () banked
  6740  0000E8  0100               	movlb	0	; () banked
  6741  0000EA  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6742  0000EC  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6743                           
  6744                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  6745  0000EE  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6746  0000F0  0E00               	movlw	0
  6747  0000F2  0100               	movlb	0	; () banked
  6748  0000F4  0100               	movlb	0	; () banked
  6749  0000F6  6F91               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6750  0000F8  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6751                           
  6752                           ; BSR set to: 0
  6753                           ;my_i2c.c: 107: unsigned char error_buf[3];
  6754                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  6755  0000FA  ACC6               	btfss	4038,6,c	;volatile
  6756  0000FC  D027               	goto	i2l3146
  6757                           
  6758                           ; BSR set to: 0
  6759                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  6760  0000FE  9CC6               	bcf	4038,6,c	;volatile
  6761                           
  6762                           ; BSR set to: 0
  6763                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  6764  000100  0100               	movlb	0	; () banked
  6765  000102  EE20 F00C          	lfsr	2,12
  6766  000106  0100               	movlb	0	; () banked
  6767  000108  51CD               	movf	_ic_ptr& (0+255),w,b
  6768  00010A  26D9               	addwf	fsr2l,f,c
  6769  00010C  0100               	movlb	0	; () banked
  6770  00010E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6771  000110  22DA               	addwfc	fsr2h,f,c
  6772  000112  0E05               	movlw	5
  6773  000114  6EDF               	movwf	indf2,c
  6774                           
  6775                           ; BSR set to: 0
  6776                           ;my_i2c.c: 116: overrun_error = 1;
  6777  000116  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6778  000118  0E01               	movlw	1
  6779  00011A  0100               	movlb	0	; () banked
  6780  00011C  0100               	movlb	0	; () banked
  6781  00011E  6F91               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6782  000120  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6783                           
  6784                           ; BSR set to: 0
  6785                           ;my_i2c.c: 117: ic_ptr->error_count++;
  6786  000122  0100               	movlb	0	; () banked
  6787  000124  EE20 F00E          	lfsr	2,14
  6788  000128  0100               	movlb	0	; () banked
  6789  00012A  51CD               	movf	_ic_ptr& (0+255),w,b
  6790  00012C  26D9               	addwf	fsr2l,f,c
  6791  00012E  0100               	movlb	0	; () banked
  6792  000130  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6793  000132  22DA               	addwfc	fsr2h,f,c
  6794  000134  2ADF               	incf	indf2,f,c
  6795                           
  6796                           ; BSR set to: 0
  6797                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  6798  000136  0100               	movlb	0	; () banked
  6799  000138  EE20 F00D          	lfsr	2,13
  6800  00013C  0100               	movlb	0	; () banked
  6801  00013E  51CD               	movf	_ic_ptr& (0+255),w,b
  6802  000140  26D9               	addwf	fsr2l,f,c
  6803  000142  0100               	movlb	0	; () banked
  6804  000144  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6805  000146  22DA               	addwfc	fsr2h,f,c
  6806  000148  0E04               	movlw	4
  6807  00014A  6EDF               	movwf	indf2,c
  6808  00014C                     i2l3146:
  6809                           
  6810                           ; BSR set to: 0
  6811                           ;my_i2c.c: 119: }
  6812                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  6813  00014C  A0C7               	btfss	4039,0,c	;volatile
  6814  00014E  D008               	goto	i2l3152
  6815                           
  6816                           ; BSR set to: 0
  6817                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  6818  000150  CFC9 F092          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6819                           
  6820                           ; BSR set to: 0
  6821                           ;my_i2c.c: 123: data_read = 1;
  6822  000154  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6823  000156  0E01               	movlw	1
  6824  000158  0100               	movlb	0	; () banked
  6825  00015A  0100               	movlb	0	; () banked
  6826  00015C  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  6827  00015E  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6828  000160                     i2l3152:
  6829                           
  6830                           ; BSR set to: 0
  6831                           ;my_i2c.c: 124: }
  6832                           ;my_i2c.c: 129: if (!overrun_error) {
  6833  000160  0100               	movlb	0	; () banked
  6834  000162  0100               	movlb	0	; () banked
  6835  000164  6791               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6836  000166  D1B8               	goto	i2l121
  6837  000168  D1A1               	goto	i2l3240
  6838  00016A                     i2l123:
  6839                           
  6840                           ; BSR set to: 0
  6841                           ;my_i2c.c: 132: {
  6842                           ;my_i2c.c: 134: if (SSPSTATbits.S == 1) {
  6843  00016A  A6C7               	btfss	4039,3,c	;volatile
  6844  00016C  D1B5               	goto	i2l121
  6845                           
  6846                           ; BSR set to: 0
  6847                           ;my_i2c.c: 135: handle_start(data_read);
  6848  00016E  0100               	movlb	0	; () banked
  6849  000170  0100               	movlb	0	; () banked
  6850  000172  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6851  000174  EC57  F007         	call	_handle_start
  6852                           
  6853                           ;my_i2c.c: 137: if (ic_ptr->status == 0x8) {
  6854  000178  0100               	movlb	0	; () banked
  6855  00017A  EE20 F00C          	lfsr	2,12
  6856  00017E  0100               	movlb	0	; () banked
  6857  000180  51CD               	movf	_ic_ptr& (0+255),w,b
  6858  000182  26D9               	addwf	fsr2l,f,c
  6859  000184  0100               	movlb	0	; () banked
  6860  000186  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6861  000188  22DA               	addwfc	fsr2h,f,c
  6862  00018A  0E08               	movlw	8
  6863  00018C  62DF               	cpfseq	indf2,c
  6864  00018E  D1A4               	goto	i2l121
  6865                           
  6866                           ; BSR set to: 0
  6867                           ;my_i2c.c: 138: data_read = 0;
  6868  000190  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6869  000192  0E00               	movlw	0
  6870  000194  0100               	movlb	0	; () banked
  6871  000196  0100               	movlb	0	; () banked
  6872  000198  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  6873  00019A  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6874                           
  6875                           ;my_i2c.c: 139: msg_to_send = 1;
  6876  00019C  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6877  00019E  0E01               	movlw	1
  6878  0001A0  0100               	movlb	0	; () banked
  6879  0001A2  0100               	movlb	0	; () banked
  6880  0001A4  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6881  0001A6  D175               	goto	L7
  6882  0001A8                     i2l127:
  6883                           
  6884                           ; BSR set to: 0
  6885                           ;my_i2c.c: 145: {
  6886                           ;my_i2c.c: 147: if (SSPSTATbits.P == 1) {
  6887  0001A8  A8C7               	btfss	4039,4,c	;volatile
  6888  0001AA  D02E               	goto	i2l3172
  6889                           
  6890                           ; BSR set to: 0
  6891                           ;my_i2c.c: 150: ic_ptr->event_count++;
  6892  0001AC  0100               	movlb	0	; () banked
  6893  0001AE  EE20 F00B          	lfsr	2,11
  6894  0001B2  0100               	movlb	0	; () banked
  6895  0001B4  51CD               	movf	_ic_ptr& (0+255),w,b
  6896  0001B6  26D9               	addwf	fsr2l,f,c
  6897  0001B8  0100               	movlb	0	; () banked
  6898  0001BA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6899  0001BC  22DA               	addwfc	fsr2h,f,c
  6900  0001BE  2ADF               	incf	indf2,f,c
  6901                           
  6902                           ; BSR set to: 0
  6903                           ;my_i2c.c: 151: if (data_read) {
  6904  0001C0  0100               	movlb	0	; () banked
  6905  0001C2  0100               	movlb	0	; () banked
  6906  0001C4  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6907  0001C6  B4D8               	btfsc	status,2,c
  6908  0001C8  D166               	goto	L9
  6909                           
  6910                           ; BSR set to: 0
  6911                           ;my_i2c.c: 152: if (SSPSTATbits.D_A == 0) {
  6912  0001CA  BAC7               	btfsc	4039,5,c	;volatile
  6913  0001CC  D007               	goto	i2l3170
  6914                           
  6915                           ; BSR set to: 0
  6916                           ;my_i2c.c: 153: msg_ready = 1;
  6917  0001CE  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6918  0001D0  0E01               	movlw	1
  6919  0001D2  0100               	movlb	0	; () banked
  6920  0001D4  0100               	movlb	0	; () banked
  6921  0001D6  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6922  0001D8  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6923                           
  6924                           ;my_i2c.c: 154: } else {
  6925  0001DA  D15D               	goto	L9
  6926  0001DC                     i2l3170:
  6927                           
  6928                           ; BSR set to: 0
  6929                           ;my_i2c.c: 155: ic_ptr->error_count++;
  6930  0001DC  0100               	movlb	0	; () banked
  6931  0001DE  EE20 F00E          	lfsr	2,14
  6932  0001E2  0100               	movlb	0	; () banked
  6933  0001E4  51CD               	movf	_ic_ptr& (0+255),w,b
  6934  0001E6  26D9               	addwf	fsr2l,f,c
  6935  0001E8  0100               	movlb	0	; () banked
  6936  0001EA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6937  0001EC  22DA               	addwfc	fsr2h,f,c
  6938  0001EE  2ADF               	incf	indf2,f,c
  6939                           
  6940                           ;my_i2c.c: 156: ic_ptr->error_code = 0x6;
  6941  0001F0  0100               	movlb	0	; () banked
  6942  0001F2  EE20 F00D          	lfsr	2,13
  6943  0001F6  0100               	movlb	0	; () banked
  6944  0001F8  51CD               	movf	_ic_ptr& (0+255),w,b
  6945  0001FA  26D9               	addwf	fsr2l,f,c
  6946  0001FC  0100               	movlb	0	; () banked
  6947  0001FE  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6948  000200  22DA               	addwfc	fsr2h,f,c
  6949  000202  0E06               	movlw	6
  6950  000204  6EDF               	movwf	indf2,c
  6951                           
  6952                           ; BSR set to: 0
  6953  000206  D147               	goto	L9
  6954  000208                     i2l3172:
  6955                           
  6956                           ; BSR set to: 0
  6957  000208  0100               	movlb	0	; () banked
  6958  00020A  0100               	movlb	0	; () banked
  6959  00020C  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6960  00020E  B4D8               	btfsc	status,2,c
  6961  000210  D163               	goto	i2l121
  6962                           
  6963                           ; BSR set to: 0
  6964                           ;my_i2c.c: 161: ic_ptr->event_count++;
  6965  000212  0100               	movlb	0	; () banked
  6966  000214  EE20 F00B          	lfsr	2,11
  6967  000218  0100               	movlb	0	; () banked
  6968  00021A  51CD               	movf	_ic_ptr& (0+255),w,b
  6969  00021C  26D9               	addwf	fsr2l,f,c
  6970  00021E  0100               	movlb	0	; () banked
  6971  000220  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6972  000222  22DA               	addwfc	fsr2h,f,c
  6973  000224  2ADF               	incf	indf2,f,c
  6974                           
  6975                           ; BSR set to: 0
  6976                           ;my_i2c.c: 162: if (SSPSTATbits.D_A == 0) {
  6977  000226  BAC7               	btfsc	4039,5,c	;volatile
  6978  000228  D019               	goto	i2l3188
  6979                           
  6980                           ; BSR set to: 0
  6981                           ;my_i2c.c: 163: if (SSPSTATbits.R_W == 0) {
  6982  00022A  B4C7               	btfsc	4039,2,c	;volatile
  6983  00022C  D00B               	goto	i2l3182
  6984                           
  6985                           ; BSR set to: 0
  6986                           ;my_i2c.c: 164: ic_ptr->status = 0x7;
  6987  00022E  0100               	movlb	0	; () banked
  6988  000230  EE20 F00C          	lfsr	2,12
  6989  000234  0100               	movlb	0	; () banked
  6990  000236  51CD               	movf	_ic_ptr& (0+255),w,b
  6991  000238  26D9               	addwf	fsr2l,f,c
  6992  00023A  0100               	movlb	0	; () banked
  6993  00023C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6994  00023E  22DA               	addwfc	fsr2h,f,c
  6995  000240  0E07               	movlw	7
  6996  000242  D071               	goto	L6
  6997  000244                     i2l3182:
  6998                           
  6999                           ; BSR set to: 0
  7000                           ;my_i2c.c: 166: ic_ptr->status = 0x8;
  7001  000244  0100               	movlb	0	; () banked
  7002  000246  EE20 F00C          	lfsr	2,12
  7003  00024A  0100               	movlb	0	; () banked
  7004  00024C  51CD               	movf	_ic_ptr& (0+255),w,b
  7005  00024E  26D9               	addwf	fsr2l,f,c
  7006  000250  0100               	movlb	0	; () banked
  7007  000252  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7008  000254  22DA               	addwfc	fsr2h,f,c
  7009  000256  0E08               	movlw	8
  7010  000258  6EDF               	movwf	indf2,c
  7011  00025A  D110               	goto	L10
  7012  00025C                     i2l3188:
  7013                           
  7014                           ; BSR set to: 0
  7015                           ;my_i2c.c: 172: ic_ptr->error_count++;
  7016  00025C  0100               	movlb	0	; () banked
  7017  00025E  EE20 F00E          	lfsr	2,14
  7018  000262  0100               	movlb	0	; () banked
  7019  000264  51CD               	movf	_ic_ptr& (0+255),w,b
  7020  000266  26D9               	addwf	fsr2l,f,c
  7021  000268  0100               	movlb	0	; () banked
  7022  00026A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7023  00026C  22DA               	addwfc	fsr2h,f,c
  7024  00026E  2ADF               	incf	indf2,f,c
  7025                           
  7026                           ;my_i2c.c: 173: ic_ptr->status = 0x5;
  7027  000270  0100               	movlb	0	; () banked
  7028  000272  EE20 F00C          	lfsr	2,12
  7029  000276  0100               	movlb	0	; () banked
  7030  000278  51CD               	movf	_ic_ptr& (0+255),w,b
  7031  00027A  26D9               	addwf	fsr2l,f,c
  7032  00027C  0100               	movlb	0	; () banked
  7033  00027E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7034  000280  22DA               	addwfc	fsr2h,f,c
  7035  000282  0E05               	movlw	5
  7036  000284  6EDF               	movwf	indf2,c
  7037                           
  7038                           ;my_i2c.c: 174: ic_ptr->error_code = 0x6;
  7039  000286  0100               	movlb	0	; () banked
  7040  000288  EE20 F00D          	lfsr	2,13
  7041  00028C  0100               	movlb	0	; () banked
  7042  00028E  51CD               	movf	_ic_ptr& (0+255),w,b
  7043  000290  26D9               	addwf	fsr2l,f,c
  7044  000292  0100               	movlb	0	; () banked
  7045  000294  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7046  000296  22DA               	addwfc	fsr2h,f,c
  7047  000298  0E06               	movlw	6
  7048  00029A  D045               	goto	L6
  7049  00029C                     i2l3190:
  7050                           
  7051                           ; BSR set to: 0
  7052                           ;my_i2c.c: 180: {
  7053                           ;my_i2c.c: 181: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7054  00029C  0100               	movlb	0	; () banked
  7055  00029E  EE20 F01A          	lfsr	2,26
  7056  0002A2  0100               	movlb	0	; () banked
  7057  0002A4  51CD               	movf	_ic_ptr& (0+255),w,b
  7058  0002A6  26D9               	addwf	fsr2l,f,c
  7059  0002A8  0100               	movlb	0	; () banked
  7060  0002AA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7061  0002AC  22DA               	addwfc	fsr2h,f,c
  7062  0002AE  50DF               	movf	indf2,w,c
  7063  0002B0  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7064  0002B2  0100               	movlb	0	; () banked
  7065  0002B4  EE20 F019          	lfsr	2,25
  7066  0002B8  0100               	movlb	0	; () banked
  7067  0002BA  51CD               	movf	_ic_ptr& (0+255),w,b
  7068  0002BC  26D9               	addwf	fsr2l,f,c
  7069  0002BE  0100               	movlb	0	; () banked
  7070  0002C0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7071  0002C2  22DA               	addwfc	fsr2h,f,c
  7072  0002C4  50DF               	movf	indf2,w,c
  7073  0002C6  5C49               	subwf	??_i2c_int_handler,w,c
  7074  0002C8  B0D8               	btfsc	status,0,c
  7075  0002CA  D0E5               	goto	L9
  7076                           
  7077                           ; BSR set to: 0
  7078                           ;my_i2c.c: 182: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7079  0002CC  0100               	movlb	0	; () banked
  7080  0002CE  EE20 F01A          	lfsr	2,26
  7081  0002D2  0100               	movlb	0	; () banked
  7082  0002D4  51CD               	movf	_ic_ptr& (0+255),w,b
  7083  0002D6  26D9               	addwf	fsr2l,f,c
  7084  0002D8  0100               	movlb	0	; () banked
  7085  0002DA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7086  0002DC  22DA               	addwfc	fsr2h,f,c
  7087  0002DE  50DF               	movf	indf2,w,c
  7088  0002E0  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7089  0002E2  5049               	movf	??_i2c_int_handler,w,c
  7090  0002E4  0D01               	mullw	1
  7091  0002E6  0E0F               	movlw	15
  7092  0002E8  26F3               	addwf	prodl,f,c
  7093  0002EA  0E00               	movlw	0
  7094  0002EC  22F4               	addwfc	prodh,f,c
  7095  0002EE  50F3               	movf	prodl,w,c
  7096  0002F0  0100               	movlb	0	; () banked
  7097  0002F2  0100               	movlb	0	; () banked
  7098  0002F4  25CD               	addwf	_ic_ptr& (0+255),w,b
  7099  0002F6  6ED9               	movwf	fsr2l,c
  7100  0002F8  50F4               	movf	prodh,w,c
  7101  0002FA  0100               	movlb	0	; () banked
  7102  0002FC  0100               	movlb	0	; () banked
  7103  0002FE  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7104  000300  6EDA               	movwf	fsr2h,c
  7105  000302  50DF               	movf	indf2,w,c
  7106  000304  6EC9               	movwf	4041,c	;volatile
  7107                           
  7108                           ; BSR set to: 0
  7109                           ;my_i2c.c: 183: ic_ptr->outbufind++;
  7110  000306  0100               	movlb	0	; () banked
  7111  000308  EE20 F01A          	lfsr	2,26
  7112  00030C  0100               	movlb	0	; () banked
  7113  00030E  51CD               	movf	_ic_ptr& (0+255),w,b
  7114  000310  26D9               	addwf	fsr2l,f,c
  7115  000312  0100               	movlb	0	; () banked
  7116  000314  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7117  000316  22DA               	addwfc	fsr2h,f,c
  7118  000318  2ADF               	incf	indf2,f,c
  7119                           
  7120                           ; BSR set to: 0
  7121                           ;my_i2c.c: 184: data_written = 1;
  7122  00031A  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7123  00031C  0E01               	movlw	1
  7124  00031E  0100               	movlb	0	; () banked
  7125  000320  0100               	movlb	0	; () banked
  7126  000322  6F90               	movwf	i2c_int_handler@data_written& (0+255),b
  7127  000324  D0B6               	goto	L7
  7128  000326                     L6:
  7129  000326  6EDF               	movwf	indf2,c
  7130  000328  D0D7               	goto	i2l121
  7131  00032A                     i2l141:
  7132                           
  7133                           ; BSR set to: 0
  7134                           ;my_i2c.c: 192: {
  7135                           ;my_i2c.c: 194: if (SSPSTATbits.P == 1) {
  7136  00032A  A8C7               	btfss	4039,4,c	;volatile
  7137  00032C  D05E               	goto	i2l3218
  7138                           
  7139                           ; BSR set to: 0
  7140                           ;my_i2c.c: 196: ic_ptr->event_count++;
  7141  00032E  0100               	movlb	0	; () banked
  7142  000330  EE20 F00B          	lfsr	2,11
  7143  000334  0100               	movlb	0	; () banked
  7144  000336  51CD               	movf	_ic_ptr& (0+255),w,b
  7145  000338  26D9               	addwf	fsr2l,f,c
  7146  00033A  0100               	movlb	0	; () banked
  7147  00033C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7148  00033E  22DA               	addwfc	fsr2h,f,c
  7149  000340  2ADF               	incf	indf2,f,c
  7150                           
  7151                           ; BSR set to: 0
  7152                           ;my_i2c.c: 197: if (data_read) {
  7153  000342  0100               	movlb	0	; () banked
  7154  000344  0100               	movlb	0	; () banked
  7155  000346  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  7156  000348  B4D8               	btfsc	status,2,c
  7157  00034A  D048               	goto	i2l3214
  7158                           
  7159                           ; BSR set to: 0
  7160                           ;my_i2c.c: 198: if (SSPSTATbits.D_A == 1) {
  7161  00034C  AAC7               	btfss	4039,5,c	;volatile
  7162  00034E  D025               	goto	i2l3212
  7163                           
  7164                           ; BSR set to: 0
  7165                           ;my_i2c.c: 199: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7166  000350  0100               	movlb	0	; () banked
  7167  000352  EE20 F00A          	lfsr	2,10
  7168  000356  0100               	movlb	0	; () banked
  7169  000358  51CD               	movf	_ic_ptr& (0+255),w,b
  7170  00035A  26D9               	addwf	fsr2l,f,c
  7171  00035C  0100               	movlb	0	; () banked
  7172  00035E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7173  000360  22DA               	addwfc	fsr2h,f,c
  7174  000362  50DF               	movf	indf2,w,c
  7175  000364  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7176  000366  5049               	movf	??_i2c_int_handler,w,c
  7177  000368  0D01               	mullw	1
  7178  00036A  50F3               	movf	prodl,w,c
  7179  00036C  0100               	movlb	0	; () banked
  7180  00036E  0100               	movlb	0	; () banked
  7181  000370  25CD               	addwf	_ic_ptr& (0+255),w,b
  7182  000372  6ED9               	movwf	fsr2l,c
  7183  000374  50F4               	movf	prodh,w,c
  7184  000376  0100               	movlb	0	; () banked
  7185  000378  0100               	movlb	0	; () banked
  7186  00037A  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7187  00037C  6EDA               	movwf	fsr2h,c
  7188  00037E  0100               	movlb	0	; () banked
  7189  000380  C092  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7190                           
  7191                           ; BSR set to: 0
  7192                           ;my_i2c.c: 200: ic_ptr->buflen++;
  7193  000384  0100               	movlb	0	; () banked
  7194  000386  EE20 F00A          	lfsr	2,10
  7195  00038A  0100               	movlb	0	; () banked
  7196  00038C  51CD               	movf	_ic_ptr& (0+255),w,b
  7197  00038E  26D9               	addwf	fsr2l,f,c
  7198  000390  0100               	movlb	0	; () banked
  7199  000392  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7200  000394  22DA               	addwfc	fsr2h,f,c
  7201  000396  2ADF               	incf	indf2,f,c
  7202  000398  D021               	goto	i2l3214
  7203  00039A                     i2l3212:
  7204                           
  7205                           ; BSR set to: 0
  7206                           ;my_i2c.c: 203: ic_ptr->error_count++;
  7207  00039A  0100               	movlb	0	; () banked
  7208  00039C  EE20 F00E          	lfsr	2,14
  7209  0003A0  0100               	movlb	0	; () banked
  7210  0003A2  51CD               	movf	_ic_ptr& (0+255),w,b
  7211  0003A4  26D9               	addwf	fsr2l,f,c
  7212  0003A6  0100               	movlb	0	; () banked
  7213  0003A8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7214  0003AA  22DA               	addwfc	fsr2h,f,c
  7215  0003AC  2ADF               	incf	indf2,f,c
  7216                           
  7217                           ;my_i2c.c: 204: ic_ptr->error_code = 0x6;
  7218  0003AE  0100               	movlb	0	; () banked
  7219  0003B0  EE20 F00D          	lfsr	2,13
  7220  0003B4  0100               	movlb	0	; () banked
  7221  0003B6  51CD               	movf	_ic_ptr& (0+255),w,b
  7222  0003B8  26D9               	addwf	fsr2l,f,c
  7223  0003BA  0100               	movlb	0	; () banked
  7224  0003BC  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7225  0003BE  22DA               	addwfc	fsr2h,f,c
  7226  0003C0  0E06               	movlw	6
  7227  0003C2  6EDF               	movwf	indf2,c
  7228                           
  7229                           ;my_i2c.c: 205: ic_ptr->status = 0x5;
  7230  0003C4  0100               	movlb	0	; () banked
  7231  0003C6  EE20 F00C          	lfsr	2,12
  7232  0003CA  0100               	movlb	0	; () banked
  7233  0003CC  51CD               	movf	_ic_ptr& (0+255),w,b
  7234  0003CE  26D9               	addwf	fsr2l,f,c
  7235  0003D0  0100               	movlb	0	; () banked
  7236  0003D2  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7237  0003D4  22DA               	addwfc	fsr2h,f,c
  7238  0003D6  0E05               	movlw	5
  7239  0003D8  6EDF               	movwf	indf2,c
  7240  0003DA  D05D               	goto	L9
  7241  0003DC                     i2l3214:
  7242                           
  7243                           ; BSR set to: 0
  7244                           ;my_i2c.c: 208: msg_ready = 1;
  7245  0003DC  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7246  0003DE  0E01               	movlw	1
  7247  0003E0  0100               	movlb	0	; () banked
  7248  0003E2  0100               	movlb	0	; () banked
  7249  0003E4  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7250  0003E6  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7251                           
  7252                           ; BSR set to: 0
  7253  0003E8  D056               	goto	L9
  7254  0003EA                     i2l3218:
  7255                           
  7256                           ; BSR set to: 0
  7257  0003EA  0100               	movlb	0	; () banked
  7258  0003EC  0100               	movlb	0	; () banked
  7259  0003EE  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  7260  0003F0  B4D8               	btfsc	status,2,c
  7261  0003F2  D072               	goto	i2l121
  7262                           
  7263                           ; BSR set to: 0
  7264                           ;my_i2c.c: 212: ic_ptr->event_count++;
  7265  0003F4  0100               	movlb	0	; () banked
  7266  0003F6  EE20 F00B          	lfsr	2,11
  7267  0003FA  0100               	movlb	0	; () banked
  7268  0003FC  51CD               	movf	_ic_ptr& (0+255),w,b
  7269  0003FE  26D9               	addwf	fsr2l,f,c
  7270  000400  0100               	movlb	0	; () banked
  7271  000402  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7272  000404  22DA               	addwfc	fsr2h,f,c
  7273  000406  2ADF               	incf	indf2,f,c
  7274                           
  7275                           ; BSR set to: 0
  7276                           ;my_i2c.c: 213: if (SSPSTATbits.D_A == 1) {
  7277  000408  AAC7               	btfss	4039,5,c	;volatile
  7278  00040A  D025               	goto	i2l149
  7279                           
  7280                           ; BSR set to: 0
  7281                           ;my_i2c.c: 214: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7282  00040C  0100               	movlb	0	; () banked
  7283  00040E  EE20 F00A          	lfsr	2,10
  7284  000412  0100               	movlb	0	; () banked
  7285  000414  51CD               	movf	_ic_ptr& (0+255),w,b
  7286  000416  26D9               	addwf	fsr2l,f,c
  7287  000418  0100               	movlb	0	; () banked
  7288  00041A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7289  00041C  22DA               	addwfc	fsr2h,f,c
  7290  00041E  50DF               	movf	indf2,w,c
  7291  000420  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7292  000422  5049               	movf	??_i2c_int_handler,w,c
  7293  000424  0D01               	mullw	1
  7294  000426  50F3               	movf	prodl,w,c
  7295  000428  0100               	movlb	0	; () banked
  7296  00042A  0100               	movlb	0	; () banked
  7297  00042C  25CD               	addwf	_ic_ptr& (0+255),w,b
  7298  00042E  6ED9               	movwf	fsr2l,c
  7299  000430  50F4               	movf	prodh,w,c
  7300  000432  0100               	movlb	0	; () banked
  7301  000434  0100               	movlb	0	; () banked
  7302  000436  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7303  000438  6EDA               	movwf	fsr2h,c
  7304  00043A  0100               	movlb	0	; () banked
  7305  00043C  C092  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7306                           
  7307                           ; BSR set to: 0
  7308                           ;my_i2c.c: 215: ic_ptr->buflen++;
  7309  000440  0100               	movlb	0	; () banked
  7310  000442  EE20 F00A          	lfsr	2,10
  7311  000446  0100               	movlb	0	; () banked
  7312  000448  51CD               	movf	_ic_ptr& (0+255),w,b
  7313  00044A  26D9               	addwf	fsr2l,f,c
  7314  00044C  0100               	movlb	0	; () banked
  7315  00044E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7316  000450  22DA               	addwfc	fsr2h,f,c
  7317  000452  2ADF               	incf	indf2,f,c
  7318                           
  7319                           ;my_i2c.c: 216: } else {
  7320  000454  D041               	goto	i2l121
  7321  000456                     i2l149:
  7322                           
  7323                           ; BSR set to: 0
  7324                           ;my_i2c.c: 217: if (SSPSTATbits.R_W == 1) {
  7325  000456  A4C7               	btfss	4039,2,c	;volatile
  7326  000458  D6C1               	goto	i2l3170
  7327                           
  7328                           ; BSR set to: 0
  7329                           ;my_i2c.c: 218: ic_ptr->status = 0x8;
  7330  00045A  0100               	movlb	0	; () banked
  7331  00045C  EE20 F00C          	lfsr	2,12
  7332  000460  0100               	movlb	0	; () banked
  7333  000462  51CD               	movf	_ic_ptr& (0+255),w,b
  7334  000464  26D9               	addwf	fsr2l,f,c
  7335  000466  0100               	movlb	0	; () banked
  7336  000468  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7337  00046A  22DA               	addwfc	fsr2h,f,c
  7338  00046C  0E08               	movlw	8
  7339  00046E  6EDF               	movwf	indf2,c
  7340                           
  7341                           ; BSR set to: 0
  7342                           ;my_i2c.c: 219: msg_ready = 1;
  7343  000470  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7344  000472  0E01               	movlw	1
  7345  000474  0100               	movlb	0	; () banked
  7346  000476  0100               	movlb	0	; () banked
  7347  000478  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7348  00047A  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7349  00047C                     L10:
  7350                           
  7351                           ; BSR set to: 0
  7352                           ;my_i2c.c: 220: msg_to_send = 1;
  7353  00047C  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7354  00047E  0E01               	movlw	1
  7355  000480  0100               	movlb	0	; () banked
  7356  000482  0100               	movlb	0	; () banked
  7357  000484  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7358  000486  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7359                           
  7360                           ; BSR set to: 0
  7361                           ;my_i2c.c: 222: data_read = 0;
  7362  000488  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7363  00048A  0E00               	movlw	0
  7364  00048C  0100               	movlb	0	; () banked
  7365  00048E  0100               	movlb	0	; () banked
  7366  000490  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  7367  000492                     L7:
  7368  000492  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7369                           
  7370                           ;my_i2c.c: 223: } else {
  7371  000494  D021               	goto	i2l121
  7372  000496                     L9:
  7373                           
  7374                           ;my_i2c.c: 226: ic_ptr->status = 0x5;
  7375  000496  0100               	movlb	0	; () banked
  7376  000498  EE20 F00C          	lfsr	2,12
  7377  00049C  0100               	movlb	0	; () banked
  7378  00049E  51CD               	movf	_ic_ptr& (0+255),w,b
  7379  0004A0  26D9               	addwf	fsr2l,f,c
  7380  0004A2  0100               	movlb	0	; () banked
  7381  0004A4  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7382  0004A6  22DA               	addwfc	fsr2h,f,c
  7383  0004A8  0E05               	movlw	5
  7384  0004AA  D73D               	goto	L6
  7385  0004AC                     i2l3240:
  7386                           
  7387                           ; BSR set to: 0
  7388  0004AC  0100               	movlb	0	; () banked
  7389  0004AE  EE20 F00C          	lfsr	2,12
  7390  0004B2  0100               	movlb	0	; () banked
  7391  0004B4  51CD               	movf	_ic_ptr& (0+255),w,b
  7392  0004B6  26D9               	addwf	fsr2l,f,c
  7393  0004B8  0100               	movlb	0	; () banked
  7394  0004BA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7395  0004BC  22DA               	addwfc	fsr2h,f,c
  7396  0004BE  50DF               	movf	indf2,w,c
  7397                           
  7398                           ; Switch size 1, requested type "space"
  7399                           ; Number of cases is 4, Range of values is 5 to 8
  7400                           ; switch strategies available:
  7401                           ; Name         Instructions Cycles
  7402                           ; simple_byte           13     7 (average)
  7403                           ;	Chosen strategy is simple_byte
  7404  0004C0  0A05               	xorlw	5	; case 5
  7405  0004C2  B4D8               	btfsc	status,2,c
  7406  0004C4  D652               	goto	i2l123
  7407  0004C6  0A03               	xorlw	3	; case 6
  7408  0004C8  B4D8               	btfsc	status,2,c
  7409  0004CA  D66E               	goto	i2l127
  7410  0004CC  0A01               	xorlw	1	; case 7
  7411  0004CE  B4D8               	btfsc	status,2,c
  7412  0004D0  D72C               	goto	i2l141
  7413  0004D2  0A0F               	xorlw	15	; case 8
  7414  0004D4  B4D8               	btfsc	status,2,c
  7415  0004D6  D6E2               	goto	i2l3190
  7416  0004D8                     i2l121:
  7417                           
  7418                           ; BSR set to: 0
  7419                           ;my_i2c.c: 233: }
  7420                           ;my_i2c.c: 236: if (data_read || data_written) {
  7421  0004D8  0100               	movlb	0	; () banked
  7422  0004DA  0100               	movlb	0	; () banked
  7423  0004DC  6795               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7424  0004DE  D005               	goto	i2l155
  7425                           
  7426                           ; BSR set to: 0
  7427  0004E0  0100               	movlb	0	; () banked
  7428  0004E2  0100               	movlb	0	; () banked
  7429  0004E4  5190               	movf	i2c_int_handler@data_written& (0+255),w,b
  7430  0004E6  B4D8               	btfsc	status,2,c
  7431  0004E8  D002               	goto	i2l3246
  7432  0004EA                     i2l155:
  7433                           
  7434                           ; BSR set to: 0
  7435                           ;my_i2c.c: 238: if (SSPCON1bits.CKP == 0) {
  7436  0004EA  A8C6               	btfss	4038,4,c	;volatile
  7437                           
  7438                           ; BSR set to: 0
  7439                           ;my_i2c.c: 239: SSPCON1bits.CKP = 1;
  7440  0004EC  88C6               	bsf	4038,4,c	;volatile
  7441  0004EE                     i2l3246:
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;my_i2c.c: 240: }
  7445                           ;my_i2c.c: 241: }
  7446                           ;my_i2c.c: 244: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7447  0004EE  0100               	movlb	0	; () banked
  7448  0004F0  EE20 F00A          	lfsr	2,10
  7449  0004F4  0100               	movlb	0	; () banked
  7450  0004F6  51CD               	movf	_ic_ptr& (0+255),w,b
  7451  0004F8  26D9               	addwf	fsr2l,f,c
  7452  0004FA  0100               	movlb	0	; () banked
  7453  0004FC  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7454  0004FE  22DA               	addwfc	fsr2h,f,c
  7455  000500  0E08               	movlw	8
  7456  000502  64DF               	cpfsgt	indf2,c
  7457  000504  D024               	goto	i2l3252
  7458                           
  7459                           ; BSR set to: 0
  7460  000506  0100               	movlb	0	; () banked
  7461  000508  0100               	movlb	0	; () banked
  7462  00050A  6794               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7463  00050C  D020               	goto	i2l3252
  7464                           
  7465                           ; BSR set to: 0
  7466                           ;my_i2c.c: 245: ic_ptr->status = 0x5;
  7467  00050E  0100               	movlb	0	; () banked
  7468  000510  EE20 F00C          	lfsr	2,12
  7469  000514  0100               	movlb	0	; () banked
  7470  000516  51CD               	movf	_ic_ptr& (0+255),w,b
  7471  000518  26D9               	addwf	fsr2l,f,c
  7472  00051A  0100               	movlb	0	; () banked
  7473  00051C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7474  00051E  22DA               	addwfc	fsr2h,f,c
  7475  000520  0E05               	movlw	5
  7476  000522  6EDF               	movwf	indf2,c
  7477                           
  7478                           ;my_i2c.c: 246: ic_ptr->error_count++;
  7479  000524  0100               	movlb	0	; () banked
  7480  000526  EE20 F00E          	lfsr	2,14
  7481  00052A  0100               	movlb	0	; () banked
  7482  00052C  51CD               	movf	_ic_ptr& (0+255),w,b
  7483  00052E  26D9               	addwf	fsr2l,f,c
  7484  000530  0100               	movlb	0	; () banked
  7485  000532  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7486  000534  22DA               	addwfc	fsr2h,f,c
  7487  000536  2ADF               	incf	indf2,f,c
  7488                           
  7489                           ;my_i2c.c: 247: ic_ptr->error_code = 0x7;
  7490  000538  0100               	movlb	0	; () banked
  7491  00053A  EE20 F00D          	lfsr	2,13
  7492  00053E  0100               	movlb	0	; () banked
  7493  000540  51CD               	movf	_ic_ptr& (0+255),w,b
  7494  000542  26D9               	addwf	fsr2l,f,c
  7495  000544  0100               	movlb	0	; () banked
  7496  000546  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7497  000548  22DA               	addwfc	fsr2h,f,c
  7498  00054A  0E07               	movlw	7
  7499  00054C  6EDF               	movwf	indf2,c
  7500  00054E                     i2l3252:
  7501                           
  7502                           ; BSR set to: 0
  7503                           ;my_i2c.c: 248: }
  7504                           ;my_i2c.c: 250: if (msg_ready) {
  7505  00054E  0100               	movlb	0	; () banked
  7506  000550  0100               	movlb	0	; () banked
  7507  000552  5194               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7508  000554  B4D8               	btfsc	status,2,c
  7509  000556  D03E               	goto	i2l3260
  7510                           
  7511                           ; BSR set to: 0
  7512                           ;my_i2c.c: 251: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7513  000558  0100               	movlb	0	; () banked
  7514  00055A  EE20 F00B          	lfsr	2,11
  7515  00055E  0100               	movlb	0	; () banked
  7516  000560  51CD               	movf	_ic_ptr& (0+255),w,b
  7517  000562  26D9               	addwf	fsr2l,f,c
  7518  000564  0100               	movlb	0	; () banked
  7519  000566  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7520  000568  22DA               	addwfc	fsr2h,f,c
  7521  00056A  0100               	movlb	0	; () banked
  7522  00056C  EE10 F00A          	lfsr	1,10
  7523  000570  0100               	movlb	0	; () banked
  7524  000572  51CD               	movf	_ic_ptr& (0+255),w,b
  7525  000574  26E1               	addwf	fsr1l,f,c
  7526  000576  0100               	movlb	0	; () banked
  7527  000578  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7528  00057A  22E2               	addwfc	fsr1h,f,c
  7529  00057C  50E7               	movf	indf1,w,c
  7530  00057E  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7531  000580  5049               	movf	??_i2c_int_handler,w,c
  7532  000582  0D01               	mullw	1
  7533  000584  50F3               	movf	prodl,w,c
  7534  000586  0100               	movlb	0	; () banked
  7535  000588  0100               	movlb	0	; () banked
  7536  00058A  25CD               	addwf	_ic_ptr& (0+255),w,b
  7537  00058C  6EE1               	movwf	fsr1l,c
  7538  00058E  50F4               	movf	prodh,w,c
  7539  000590  0100               	movlb	0	; () banked
  7540  000592  0100               	movlb	0	; () banked
  7541  000594  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7542  000596  6EE2               	movwf	fsr1h,c
  7543  000598  CFDF FFE7          	movff	indf2,indf1
  7544                           
  7545                           ; BSR set to: 0
  7546                           ;my_i2c.c: 252: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7547  00059C  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7548  00059E  0E28               	movlw	40
  7549  0005A0  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7550  0005A2  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7551  0005A4  0100               	movlb	0	; () banked
  7552  0005A6  C0CE  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7553  0005AA  0100               	movlb	0	; () banked
  7554  0005AC  C0CD  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7555  0005B0  0100               	movlb	0	; () banked
  7556  0005B2  EE20 F00A          	lfsr	2,10
  7557  0005B6  0100               	movlb	0	; () banked
  7558  0005B8  51CD               	movf	_ic_ptr& (0+255),w,b
  7559  0005BA  26D9               	addwf	fsr2l,f,c
  7560  0005BC  0100               	movlb	0	; () banked
  7561  0005BE  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7562  0005C0  22DA               	addwfc	fsr2h,f,c
  7563  0005C2  50DF               	movf	indf2,w,c
  7564  0005C4  6E4A               	movwf	(??_i2c_int_handler+1)& (0+255),c
  7565  0005C6  284A               	incf	??_i2c_int_handler+1,w,c
  7566  0005C8  ECC8  F00D         	call	_ToMainHigh_sendmsg
  7567                           
  7568                           ;my_i2c.c: 253: ic_ptr->buflen = 0;
  7569  0005CC  0100               	movlb	0	; () banked
  7570  0005CE  EE20 F00A          	lfsr	2,10
  7571  0005D2  D043               	goto	L8
  7572  0005D4                     i2l3260:
  7573                           
  7574                           ; BSR set to: 0
  7575  0005D4  0100               	movlb	0	; () banked
  7576  0005D6  EE20 F00E          	lfsr	2,14
  7577  0005DA  0100               	movlb	0	; () banked
  7578  0005DC  51CD               	movf	_ic_ptr& (0+255),w,b
  7579  0005DE  26D9               	addwf	fsr2l,f,c
  7580  0005E0  0100               	movlb	0	; () banked
  7581  0005E2  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7582  0005E4  22DA               	addwfc	fsr2h,f,c
  7583  0005E6  50DF               	movf	indf2,w,c
  7584  0005E8  B4D8               	btfsc	status,2,c
  7585  0005EA  D03F               	goto	i2l3268
  7586                           
  7587                           ; BSR set to: 0
  7588                           ;my_i2c.c: 255: error_buf[0] = ic_ptr->error_count;
  7589  0005EC  0100               	movlb	0	; () banked
  7590  0005EE  EE20 F00E          	lfsr	2,14
  7591  0005F2  0100               	movlb	0	; () banked
  7592  0005F4  51CD               	movf	_ic_ptr& (0+255),w,b
  7593  0005F6  26D9               	addwf	fsr2l,f,c
  7594  0005F8  0100               	movlb	0	; () banked
  7595  0005FA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7596  0005FC  22DA               	addwfc	fsr2h,f,c
  7597  0005FE  50DF               	movf	indf2,w,c
  7598  000600  0100               	movlb	0	; () banked
  7599  000602  0100               	movlb	0	; () banked
  7600  000604  6F8D               	movwf	i2c_int_handler@error_buf& (0+255),b
  7601                           
  7602                           ;my_i2c.c: 256: error_buf[1] = ic_ptr->error_code;
  7603  000606  0100               	movlb	0	; () banked
  7604  000608  EE20 F00D          	lfsr	2,13
  7605  00060C  0100               	movlb	0	; () banked
  7606  00060E  51CD               	movf	_ic_ptr& (0+255),w,b
  7607  000610  26D9               	addwf	fsr2l,f,c
  7608  000612  0100               	movlb	0	; () banked
  7609  000614  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7610  000616  22DA               	addwfc	fsr2h,f,c
  7611  000618  50DF               	movf	indf2,w,c
  7612  00061A  0100               	movlb	0	; () banked
  7613  00061C  0100               	movlb	0	; () banked
  7614  00061E  6F8E               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7615                           
  7616                           ;my_i2c.c: 257: error_buf[2] = ic_ptr->event_count;
  7617  000620  0100               	movlb	0	; () banked
  7618  000622  EE20 F00B          	lfsr	2,11
  7619  000626  0100               	movlb	0	; () banked
  7620  000628  51CD               	movf	_ic_ptr& (0+255),w,b
  7621  00062A  26D9               	addwf	fsr2l,f,c
  7622  00062C  0100               	movlb	0	; () banked
  7623  00062E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7624  000630  22DA               	addwfc	fsr2h,f,c
  7625  000632  50DF               	movf	indf2,w,c
  7626  000634  0100               	movlb	0	; () banked
  7627  000636  0100               	movlb	0	; () banked
  7628  000638  6F8F               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7629                           
  7630                           ; BSR set to: 0
  7631                           ;my_i2c.c: 258: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7632  00063A  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7633  00063C  0E29               	movlw	41
  7634  00063E  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7635  000640  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7636  000642  0100               	movlb	0	; () banked
  7637  000644  0E00               	movlw	high i2c_int_handler@error_buf
  7638  000646  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  7639  000648  0100               	movlb	0	; () banked
  7640  00064A  0E8D               	movlw	low i2c_int_handler@error_buf
  7641  00064C  6E46               	movwf	ToMainHigh_sendmsg@data,c
  7642  00064E  0E03               	movlw	3
  7643  000650  ECC8  F00D         	call	_ToMainHigh_sendmsg
  7644                           
  7645                           ;my_i2c.c: 259: ic_ptr->error_count = 0;
  7646  000654  0100               	movlb	0	; () banked
  7647  000656  EE20 F00E          	lfsr	2,14
  7648  00065A                     L8:
  7649  00065A  0100               	movlb	0	; () banked
  7650  00065C  51CD               	movf	_ic_ptr& (0+255),w,b
  7651  00065E  26D9               	addwf	fsr2l,f,c
  7652  000660  0100               	movlb	0	; () banked
  7653  000662  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7654  000664  22DA               	addwfc	fsr2h,f,c
  7655  000666  0E00               	movlw	0
  7656  000668  6EDF               	movwf	indf2,c
  7657  00066A                     i2l3268:
  7658                           
  7659                           ; BSR set to: 0
  7660                           ;my_i2c.c: 260: }
  7661                           ;my_i2c.c: 261: if (msg_to_send) {
  7662  00066A  0100               	movlb	0	; () banked
  7663  00066C  0100               	movlb	0	; () banked
  7664  00066E  5193               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7665  000670  B4D8               	btfsc	status,2,c
  7666  000672  0012               	return	
  7667                           
  7668                           ; BSR set to: 0
  7669                           ;my_i2c.c: 262: int length;
  7670                           ;my_i2c.c: 263: unsigned char msgbuffer[10 + 1];
  7671                           ;my_i2c.c: 264: length = 2;
  7672  000674  0E00               	movlw	0
  7673  000676  0100               	movlb	0	; () banked
  7674  000678  0100               	movlb	0	; () banked
  7675  00067A  6F8C               	movwf	(i2c_int_handler@length+1)& (0+255),b
  7676  00067C  0E02               	movlw	2
  7677  00067E  0100               	movlb	0	; () banked
  7678  000680  6F8B               	movwf	i2c_int_handler@length& (0+255),b
  7679                           
  7680                           ; BSR set to: 0
  7681                           ;my_i2c.c: 265: msgbuffer[0] = returnADCValue();
  7682  000682  ECFD  F00D         	call	i2_returnADCValue	;wreg free
  7683  000686  502F               	movf	?i2_returnADCValue,w,c
  7684  000688  0100               	movlb	0	; () banked
  7685  00068A  0100               	movlb	0	; () banked
  7686  00068C  6F80               	movwf	i2c_int_handler@msgbuffer& (0+255),b
  7687                           
  7688                           ; BSR set to: 0
  7689                           ;my_i2c.c: 266: msgbuffer[1] = 0xAA;
  7690  00068E  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7691  000690  0EAA               	movlw	170
  7692  000692  0100               	movlb	0	; () banked
  7693  000694  0100               	movlb	0	; () banked
  7694  000696  6F81               	movwf	(i2c_int_handler@msgbuffer+1)& (0+255),b
  7695  000698  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7696                           
  7697                           ; BSR set to: 0
  7698                           ;my_i2c.c: 292: start_i2c_slave_reply(length, msgbuffer);
  7699  00069A  0100               	movlb	0	; () banked
  7700  00069C  0E00               	movlw	high i2c_int_handler@msgbuffer
  7701  00069E  6E30               	movwf	i2start_i2c_slave_reply@msg+1,c
  7702  0006A0  0100               	movlb	0	; () banked
  7703  0006A2  0E80               	movlw	low i2c_int_handler@msgbuffer
  7704  0006A4  6E2F               	movwf	i2start_i2c_slave_reply@msg,c
  7705  0006A6  0100               	movlb	0	; () banked
  7706  0006A8  0100               	movlb	0	; () banked
  7707  0006AA  518B               	movf	i2c_int_handler@length& (0+255),w,b
  7708  0006AC  EC74  F006         	call	i2_start_i2c_slave_reply
  7709                           
  7710                           ;my_i2c.c: 293: msg_to_send = 0;
  7711  0006B0  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7712  0006B2  0E00               	movlw	0
  7713  0006B4  0100               	movlb	0	; () banked
  7714  0006B6  0100               	movlb	0	; () banked
  7715  0006B8  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7716  0006BA  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7717  0006BC  0012               	return	
  7718  0006BE                     __end_of_i2c_int_handler:
  7719                           	opt stack 0
  7720                           pclatu	equ	0xFFB
  7721                           pclath	equ	0xFFA
  7722                           tblptru	equ	0xFF8
  7723                           tblptrh	equ	0xFF7
  7724                           tblptrl	equ	0xFF6
  7725                           tablat	equ	0xFF5
  7726                           prodh	equ	0xFF4
  7727                           prodl	equ	0xFF3
  7728                           intcon	equ	0xFF2
  7729                           postinc0	equ	0xFEE
  7730                           fsr0h	equ	0xFEA
  7731                           fsr0l	equ	0xFE9
  7732                           wreg	equ	0xFE8
  7733                           indf1	equ	0xFE7
  7734                           fsr1h	equ	0xFE2
  7735                           fsr1l	equ	0xFE1
  7736                           bsr	equ	0xFE0
  7737                           indf2	equ	0xFDF
  7738                           postinc2	equ	0xFDE
  7739                           postdec2	equ	0xFDD
  7740                           fsr2h	equ	0xFDA
  7741                           fsr2l	equ	0xFD9
  7742                           status	equ	0xFD8
  7743                           
  7744 ;; *************** function i2_start_i2c_slave_reply *****************
  7745 ;; Defined at:
  7746 ;;		line 53 in file "../src/my_i2c.c"
  7747 ;; Parameters:    Size  Location     Type
  7748 ;;  length          1    wreg     unsigned char 
  7749 ;;  msg             2   46[COMRAM] PTR unsigned char 
  7750 ;;		 -> main@msgbuffer(11), i2c_int_handler@msgbuffer(11), 
  7751 ;; Auto vars:     Size  Location     Type
  7752 ;;  length          1   50[COMRAM] unsigned char 
  7753 ;; Return value:  Size  Location     Type
  7754 ;;		None               void
  7755 ;; Registers used:
  7756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7757 ;; Tracked objects:
  7758 ;;		On entry : 0/0
  7759 ;;		On exit  : 0/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7762 ;;      Params:         2       0       0       0       0
  7763 ;;      Locals:         1       0       0       0       0
  7764 ;;      Temps:          2       0       0       0       0
  7765 ;;      Totals:         5       0       0       0       0
  7766 ;;Total ram usage:        5 bytes
  7767 ;; Hardware stack levels used:    1
  7768 ;; This function calls:
  7769 ;;		Nothing
  7770 ;; This function is called by:
  7771 ;;		_i2c_int_handler
  7772 ;; This function uses a non-reentrant model
  7773 ;;
  7774                           
  7775                           	psect	text47
  7776  000CE8                     __ptext47:
  7777                           	opt stack 0
  7778  000CE8                     i2_start_i2c_slave_reply:
  7779                           	opt stack 19
  7780                           
  7781                           ; BSR set to: 0
  7782                           ;incstack = 0
  7783                           ;i2start_i2c_slave_reply@length stored from wreg
  7784  000CE8  CFE8 F033          	movff	wreg,i2start_i2c_slave_reply@length
  7785                           
  7786                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  7787  000CEC  0100               	movlb	0	; () banked
  7788  000CEE  EE20 F019          	lfsr	2,25
  7789  000CF2  0100               	movlb	0	; () banked
  7790  000CF4  51CD               	movf	_ic_ptr& (0+255),w,b
  7791  000CF6  26D9               	addwf	fsr2l,f,c
  7792  000CF8  0100               	movlb	0	; () banked
  7793  000CFA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7794  000CFC  22DA               	addwfc	fsr2h,f,c
  7795  000CFE  0E00               	movlw	0
  7796  000D00  6EDF               	movwf	indf2,c
  7797  000D02  D03A               	goto	i2l3336
  7798  000D04                     i2l3332:
  7799                           
  7800                           ; BSR set to: 0
  7801                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  7802  000D04  0100               	movlb	0	; () banked
  7803  000D06  EE20 F019          	lfsr	2,25
  7804  000D0A  0100               	movlb	0	; () banked
  7805  000D0C  51CD               	movf	_ic_ptr& (0+255),w,b
  7806  000D0E  26D9               	addwf	fsr2l,f,c
  7807  000D10  0100               	movlb	0	; () banked
  7808  000D12  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7809  000D14  22DA               	addwfc	fsr2h,f,c
  7810  000D16  50DF               	movf	indf2,w,c
  7811  000D18  6E31               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  7812  000D1A  5031               	movf	??i2_start_i2c_slave_reply,w,c
  7813  000D1C  0D01               	mullw	1
  7814  000D1E  50F3               	movf	prodl,w,c
  7815  000D20  242F               	addwf	i2start_i2c_slave_reply@msg,w,c
  7816  000D22  6ED9               	movwf	fsr2l,c
  7817  000D24  50F4               	movf	prodh,w,c
  7818  000D26  2030               	addwfc	i2start_i2c_slave_reply@msg+1,w,c
  7819  000D28  6EDA               	movwf	fsr2h,c
  7820  000D2A  0100               	movlb	0	; () banked
  7821  000D2C  EE10 F019          	lfsr	1,25
  7822  000D30  0100               	movlb	0	; () banked
  7823  000D32  51CD               	movf	_ic_ptr& (0+255),w,b
  7824  000D34  26E1               	addwf	fsr1l,f,c
  7825  000D36  0100               	movlb	0	; () banked
  7826  000D38  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7827  000D3A  22E2               	addwfc	fsr1h,f,c
  7828  000D3C  50E7               	movf	indf1,w,c
  7829  000D3E  6E32               	movwf	(??i2_start_i2c_slave_reply+1)& (0+255),c
  7830  000D40  5032               	movf	??i2_start_i2c_slave_reply+1,w,c
  7831  000D42  0D01               	mullw	1
  7832  000D44  0E0F               	movlw	15
  7833  000D46  26F3               	addwf	prodl,f,c
  7834  000D48  0E00               	movlw	0
  7835  000D4A  22F4               	addwfc	prodh,f,c
  7836  000D4C  50F3               	movf	prodl,w,c
  7837  000D4E  0100               	movlb	0	; () banked
  7838  000D50  0100               	movlb	0	; () banked
  7839  000D52  25CD               	addwf	_ic_ptr& (0+255),w,b
  7840  000D54  6EE1               	movwf	fsr1l,c
  7841  000D56  50F4               	movf	prodh,w,c
  7842  000D58  0100               	movlb	0	; () banked
  7843  000D5A  0100               	movlb	0	; () banked
  7844  000D5C  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7845  000D5E  6EE2               	movwf	fsr1h,c
  7846  000D60  CFDF FFE7          	movff	indf2,indf1
  7847                           
  7848                           ; BSR set to: 0
  7849  000D64  0100               	movlb	0	; () banked
  7850  000D66  EE20 F019          	lfsr	2,25
  7851  000D6A  0100               	movlb	0	; () banked
  7852  000D6C  51CD               	movf	_ic_ptr& (0+255),w,b
  7853  000D6E  26D9               	addwf	fsr2l,f,c
  7854  000D70  0100               	movlb	0	; () banked
  7855  000D72  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7856  000D74  22DA               	addwfc	fsr2h,f,c
  7857  000D76  2ADF               	incf	indf2,f,c
  7858  000D78                     i2l3336:
  7859                           
  7860                           ; BSR set to: 0
  7861  000D78  0100               	movlb	0	; () banked
  7862  000D7A  EE20 F019          	lfsr	2,25
  7863  000D7E  0100               	movlb	0	; () banked
  7864  000D80  51CD               	movf	_ic_ptr& (0+255),w,b
  7865  000D82  26D9               	addwf	fsr2l,f,c
  7866  000D84  0100               	movlb	0	; () banked
  7867  000D86  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7868  000D88  22DA               	addwfc	fsr2h,f,c
  7869  000D8A  50DF               	movf	indf2,w,c
  7870  000D8C  6E31               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  7871  000D8E  5033               	movf	i2start_i2c_slave_reply@length,w,c
  7872  000D90  5C31               	subwf	??i2_start_i2c_slave_reply,w,c
  7873  000D92  A0D8               	btfss	status,0,c
  7874  000D94  D7B7               	goto	i2l3332
  7875                           
  7876                           ; BSR set to: 0
  7877                           ;my_i2c.c: 57: }
  7878                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  7879                           
  7880                           ; BSR set to: 0
  7881  000D96  0100               	movlb	0	; () banked
  7882  000D98  EE20 F019          	lfsr	2,25
  7883  000D9C  0100               	movlb	0	; () banked
  7884  000D9E  51CD               	movf	_ic_ptr& (0+255),w,b
  7885  000DA0  26D9               	addwf	fsr2l,f,c
  7886  000DA2  0100               	movlb	0	; () banked
  7887  000DA4  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7888  000DA6  22DA               	addwfc	fsr2h,f,c
  7889  000DA8  C033  FFDF         	movff	i2start_i2c_slave_reply@length,indf2
  7890                           
  7891                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  7892  000DAC  0100               	movlb	0	; () banked
  7893  000DAE  EE20 F01A          	lfsr	2,26
  7894  000DB2  0100               	movlb	0	; () banked
  7895  000DB4  51CD               	movf	_ic_ptr& (0+255),w,b
  7896  000DB6  26D9               	addwf	fsr2l,f,c
  7897  000DB8  0100               	movlb	0	; () banked
  7898  000DBA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7899  000DBC  22DA               	addwfc	fsr2h,f,c
  7900  000DBE  0E01               	movlw	1
  7901  000DC0  6EDF               	movwf	indf2,c
  7902                           
  7903                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  7904  000DC2  0100               	movlb	0	; () banked
  7905  000DC4  EE20 F00F          	lfsr	2,15
  7906  000DC8  0100               	movlb	0	; () banked
  7907  000DCA  51CD               	movf	_ic_ptr& (0+255),w,b
  7908  000DCC  26D9               	addwf	fsr2l,f,c
  7909  000DCE  0100               	movlb	0	; () banked
  7910  000DD0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7911  000DD2  22DA               	addwfc	fsr2h,f,c
  7912  000DD4  50DF               	movf	indf2,w,c
  7913  000DD6  6EC9               	movwf	4041,c	;volatile
  7914                           
  7915                           ; BSR set to: 0
  7916                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  7917  000DD8  88C6               	bsf	4038,4,c	;volatile
  7918                           
  7919                           ; BSR set to: 0
  7920  000DDA  0012               	return	
  7921  000DDC                     __end_ofi2_start_i2c_slave_reply:
  7922                           	opt stack 0
  7923                           pclatu	equ	0xFFB
  7924                           pclath	equ	0xFFA
  7925                           tblptru	equ	0xFF8
  7926                           tblptrh	equ	0xFF7
  7927                           tblptrl	equ	0xFF6
  7928                           tablat	equ	0xFF5
  7929                           prodh	equ	0xFF4
  7930                           prodl	equ	0xFF3
  7931                           intcon	equ	0xFF2
  7932                           postinc0	equ	0xFEE
  7933                           fsr0h	equ	0xFEA
  7934                           fsr0l	equ	0xFE9
  7935                           wreg	equ	0xFE8
  7936                           indf1	equ	0xFE7
  7937                           fsr1h	equ	0xFE2
  7938                           fsr1l	equ	0xFE1
  7939                           bsr	equ	0xFE0
  7940                           indf2	equ	0xFDF
  7941                           postinc2	equ	0xFDE
  7942                           postdec2	equ	0xFDD
  7943                           fsr2h	equ	0xFDA
  7944                           fsr2l	equ	0xFD9
  7945                           status	equ	0xFD8
  7946                           
  7947 ;; *************** function i2_returnADCValue *****************
  7948 ;; Defined at:
  7949 ;;		line 16 in file "../src/interrupts.c"
  7950 ;; Parameters:    Size  Location     Type
  7951 ;;		None
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;  returnADCVal    2   48[COMRAM] int 
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  2   46[COMRAM] int 
  7956 ;; Registers used:
  7957 ;;		wreg, status,2
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7963 ;;      Params:         2       0       0       0       0
  7964 ;;      Locals:         2       0       0       0       0
  7965 ;;      Temps:          0       0       0       0       0
  7966 ;;      Totals:         4       0       0       0       0
  7967 ;;Total ram usage:        4 bytes
  7968 ;; Hardware stack levels used:    1
  7969 ;; This function calls:
  7970 ;;		Nothing
  7971 ;; This function is called by:
  7972 ;;		_i2c_int_handler
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           	psect	text48
  7977  001BFA                     __ptext48:
  7978                           	opt stack 0
  7979  001BFA                     i2_returnADCValue:
  7980                           	opt stack 19
  7981                           
  7982                           ;interrupts.c: 18: int returnVal = ADCValue;
  7983                           
  7984                           ; BSR set to: 0
  7985                           ;incstack = 0
  7986  001BFA  C0CF  F031         	movff	_ADCValue,i2returnADCValue@returnVal
  7987  001BFE  C0D0  F032         	movff	_ADCValue+1,i2returnADCValue@returnVal+1
  7988                           
  7989                           ;interrupts.c: 19: ADCValue = 1;
  7990  001C02  0E00               	movlw	0
  7991  001C04  0100               	movlb	0	; () banked
  7992  001C06  0100               	movlb	0	; () banked
  7993  001C08  6FD0               	movwf	(_ADCValue+1)& (0+255),b
  7994  001C0A  0E01               	movlw	1
  7995  001C0C  0100               	movlb	0	; () banked
  7996  001C0E  6FCF               	movwf	_ADCValue& (0+255),b
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;interrupts.c: 20: return returnVal;
  8000  001C10  C031  F02F         	movff	i2returnADCValue@returnVal,?i2_returnADCValue
  8001  001C14  C032  F030         	movff	i2returnADCValue@returnVal+1,?i2_returnADCValue+1
  8002  001C18  0012               	return	
  8003  001C1A                     __end_ofi2_returnADCValue:
  8004                           	opt stack 0
  8005                           pclatu	equ	0xFFB
  8006                           pclath	equ	0xFFA
  8007                           tblptru	equ	0xFF8
  8008                           tblptrh	equ	0xFF7
  8009                           tblptrl	equ	0xFF6
  8010                           tablat	equ	0xFF5
  8011                           prodh	equ	0xFF4
  8012                           prodl	equ	0xFF3
  8013                           intcon	equ	0xFF2
  8014                           postinc0	equ	0xFEE
  8015                           fsr0h	equ	0xFEA
  8016                           fsr0l	equ	0xFE9
  8017                           wreg	equ	0xFE8
  8018                           indf1	equ	0xFE7
  8019                           fsr1h	equ	0xFE2
  8020                           fsr1l	equ	0xFE1
  8021                           bsr	equ	0xFE0
  8022                           indf2	equ	0xFDF
  8023                           postinc2	equ	0xFDE
  8024                           postdec2	equ	0xFDD
  8025                           fsr2h	equ	0xFDA
  8026                           fsr2l	equ	0xFD9
  8027                           status	equ	0xFD8
  8028                           
  8029 ;; *************** function _handle_start *****************
  8030 ;; Defined at:
  8031 ;;		line 71 in file "../src/my_i2c.c"
  8032 ;; Parameters:    Size  Location     Type
  8033 ;;  data_read       1    wreg     unsigned char 
  8034 ;; Auto vars:     Size  Location     Type
  8035 ;;  data_read       1   46[COMRAM] unsigned char 
  8036 ;; Return value:  Size  Location     Type
  8037 ;;		None               void
  8038 ;; Registers used:
  8039 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8040 ;; Tracked objects:
  8041 ;;		On entry : 0/0
  8042 ;;		On exit  : 0/0
  8043 ;;		Unchanged: 0/0
  8044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8045 ;;      Params:         0       0       0       0       0
  8046 ;;      Locals:         1       0       0       0       0
  8047 ;;      Temps:          0       0       0       0       0
  8048 ;;      Totals:         1       0       0       0       0
  8049 ;;Total ram usage:        1 bytes
  8050 ;; Hardware stack levels used:    1
  8051 ;; This function calls:
  8052 ;;		Nothing
  8053 ;; This function is called by:
  8054 ;;		_i2c_int_handler
  8055 ;; This function uses a non-reentrant model
  8056 ;;
  8057                           
  8058                           	psect	text49
  8059  000EAE                     __ptext49:
  8060                           	opt stack 0
  8061  000EAE                     _handle_start:
  8062                           	opt stack 19
  8063                           
  8064                           ; BSR set to: 0
  8065                           ;incstack = 0
  8066                           ;handle_start@data_read stored from wreg
  8067  000EAE  CFE8 F02F          	movff	wreg,handle_start@data_read
  8068                           
  8069                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  8070  000EB2  0100               	movlb	0	; () banked
  8071  000EB4  EE20 F00B          	lfsr	2,11
  8072  000EB8  0100               	movlb	0	; () banked
  8073  000EBA  51CD               	movf	_ic_ptr& (0+255),w,b
  8074  000EBC  26D9               	addwf	fsr2l,f,c
  8075  000EBE  0100               	movlb	0	; () banked
  8076  000EC0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8077  000EC2  22DA               	addwfc	fsr2h,f,c
  8078  000EC4  0E01               	movlw	1
  8079  000EC6  6EDF               	movwf	indf2,c
  8080                           
  8081                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  8082  000EC8  0100               	movlb	0	; () banked
  8083  000ECA  EE20 F00A          	lfsr	2,10
  8084  000ECE  0100               	movlb	0	; () banked
  8085  000ED0  51CD               	movf	_ic_ptr& (0+255),w,b
  8086  000ED2  26D9               	addwf	fsr2l,f,c
  8087  000ED4  0100               	movlb	0	; () banked
  8088  000ED6  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8089  000ED8  22DA               	addwfc	fsr2h,f,c
  8090  000EDA  0E00               	movlw	0
  8091  000EDC  6EDF               	movwf	indf2,c
  8092                           
  8093                           ; BSR set to: 0
  8094                           ;my_i2c.c: 75: if (data_read) {
  8095  000EDE  502F               	movf	handle_start@data_read,w,c
  8096  000EE0  B4D8               	btfsc	status,2,c
  8097  000EE2  D03D               	goto	i2l3130
  8098                           
  8099                           ; BSR set to: 0
  8100                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  8101  000EE4  AAC7               	btfss	4039,5,c	;volatile
  8102  000EE6  D021               	goto	i2l111
  8103                           
  8104                           ; BSR set to: 0
  8105                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  8106  000EE8  0100               	movlb	0	; () banked
  8107  000EEA  EE20 F00C          	lfsr	2,12
  8108  000EEE  0100               	movlb	0	; () banked
  8109  000EF0  51CD               	movf	_ic_ptr& (0+255),w,b
  8110  000EF2  26D9               	addwf	fsr2l,f,c
  8111  000EF4  0100               	movlb	0	; () banked
  8112  000EF6  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8113  000EF8  22DA               	addwfc	fsr2h,f,c
  8114  000EFA  0E05               	movlw	5
  8115  000EFC  6EDF               	movwf	indf2,c
  8116                           
  8117                           ;my_i2c.c: 80: ic_ptr->error_count++;
  8118  000EFE  0100               	movlb	0	; () banked
  8119  000F00  EE20 F00E          	lfsr	2,14
  8120  000F04  0100               	movlb	0	; () banked
  8121  000F06  51CD               	movf	_ic_ptr& (0+255),w,b
  8122  000F08  26D9               	addwf	fsr2l,f,c
  8123  000F0A  0100               	movlb	0	; () banked
  8124  000F0C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8125  000F0E  22DA               	addwfc	fsr2h,f,c
  8126  000F10  2ADF               	incf	indf2,f,c
  8127                           
  8128                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  8129  000F12  0100               	movlb	0	; () banked
  8130  000F14  EE20 F00D          	lfsr	2,13
  8131  000F18  0100               	movlb	0	; () banked
  8132  000F1A  51CD               	movf	_ic_ptr& (0+255),w,b
  8133  000F1C  26D9               	addwf	fsr2l,f,c
  8134  000F1E  0100               	movlb	0	; () banked
  8135  000F20  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8136  000F22  22DA               	addwfc	fsr2h,f,c
  8137  000F24  0E05               	movlw	5
  8138  000F26  6EDF               	movwf	indf2,c
  8139                           
  8140                           ;my_i2c.c: 82: } else {
  8141  000F28  0012               	return	
  8142  000F2A                     i2l111:
  8143                           
  8144                           ; BSR set to: 0
  8145                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  8146  000F2A  A4C7               	btfss	4039,2,c	;volatile
  8147  000F2C  D00C               	goto	i2l3128
  8148                           
  8149                           ; BSR set to: 0
  8150                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  8151  000F2E  0100               	movlb	0	; () banked
  8152  000F30  EE20 F00C          	lfsr	2,12
  8153  000F34  0100               	movlb	0	; () banked
  8154  000F36  51CD               	movf	_ic_ptr& (0+255),w,b
  8155  000F38  26D9               	addwf	fsr2l,f,c
  8156  000F3A  0100               	movlb	0	; () banked
  8157  000F3C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8158  000F3E  22DA               	addwfc	fsr2h,f,c
  8159  000F40  0E08               	movlw	8
  8160  000F42  6EDF               	movwf	indf2,c
  8161                           
  8162                           ;my_i2c.c: 85: } else {
  8163  000F44  0012               	return	
  8164  000F46                     i2l3128:
  8165                           
  8166                           ; BSR set to: 0
  8167                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  8168  000F46  0100               	movlb	0	; () banked
  8169  000F48  EE20 F00C          	lfsr	2,12
  8170  000F4C  0100               	movlb	0	; () banked
  8171  000F4E  51CD               	movf	_ic_ptr& (0+255),w,b
  8172  000F50  26D9               	addwf	fsr2l,f,c
  8173  000F52  0100               	movlb	0	; () banked
  8174  000F54  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8175  000F56  22DA               	addwfc	fsr2h,f,c
  8176  000F58  0E07               	movlw	7
  8177  000F5A  6EDF               	movwf	indf2,c
  8178  000F5C  0012               	return	
  8179  000F5E                     i2l3130:
  8180                           
  8181                           ; BSR set to: 0
  8182                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  8183  000F5E  0100               	movlb	0	; () banked
  8184  000F60  EE20 F00C          	lfsr	2,12
  8185  000F64  0100               	movlb	0	; () banked
  8186  000F66  51CD               	movf	_ic_ptr& (0+255),w,b
  8187  000F68  26D9               	addwf	fsr2l,f,c
  8188  000F6A  0100               	movlb	0	; () banked
  8189  000F6C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8190  000F6E  22DA               	addwfc	fsr2h,f,c
  8191  000F70  0E06               	movlw	6
  8192  000F72  6EDF               	movwf	indf2,c
  8193  000F74  0012               	return	
  8194  000F76                     __end_of_handle_start:
  8195                           	opt stack 0
  8196                           pclatu	equ	0xFFB
  8197                           pclath	equ	0xFFA
  8198                           tblptru	equ	0xFF8
  8199                           tblptrh	equ	0xFF7
  8200                           tblptrl	equ	0xFF6
  8201                           tablat	equ	0xFF5
  8202                           prodh	equ	0xFF4
  8203                           prodl	equ	0xFF3
  8204                           intcon	equ	0xFF2
  8205                           postinc0	equ	0xFEE
  8206                           fsr0h	equ	0xFEA
  8207                           fsr0l	equ	0xFE9
  8208                           wreg	equ	0xFE8
  8209                           indf1	equ	0xFE7
  8210                           fsr1h	equ	0xFE2
  8211                           fsr1l	equ	0xFE1
  8212                           bsr	equ	0xFE0
  8213                           indf2	equ	0xFDF
  8214                           postinc2	equ	0xFDE
  8215                           postdec2	equ	0xFDD
  8216                           fsr2h	equ	0xFDA
  8217                           fsr2l	equ	0xFD9
  8218                           status	equ	0xFD8
  8219                           
  8220 ;; *************** function _ToMainHigh_sendmsg *****************
  8221 ;; Defined at:
  8222 ;;		line 126 in file "../src/messages.c"
  8223 ;; Parameters:    Size  Location     Type
  8224 ;;  length          1    wreg     unsigned char 
  8225 ;;  msgtype         1   68[COMRAM] unsigned char 
  8226 ;;  data            2   69[COMRAM] PTR void 
  8227 ;;		 -> main@ic(28), i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  8228 ;; Auto vars:     Size  Location     Type
  8229 ;;  length          1   71[COMRAM] unsigned char 
  8230 ;; Return value:  Size  Location     Type
  8231 ;;                  1    wreg      char 
  8232 ;; Registers used:
  8233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8234 ;; Tracked objects:
  8235 ;;		On entry : 0/0
  8236 ;;		On exit  : 0/0
  8237 ;;		Unchanged: 0/0
  8238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8239 ;;      Params:         3       0       0       0       0
  8240 ;;      Locals:         1       0       0       0       0
  8241 ;;      Temps:          0       0       0       0       0
  8242 ;;      Totals:         4       0       0       0       0
  8243 ;;Total ram usage:        4 bytes
  8244 ;; Hardware stack levels used:    1
  8245 ;; Hardware stack levels required when called:    2
  8246 ;; This function calls:
  8247 ;;		i2_send_msg
  8248 ;; This function is called by:
  8249 ;;		_timer0_int_handler
  8250 ;;		_i2c_int_handler
  8251 ;; This function uses a non-reentrant model
  8252 ;;
  8253                           
  8254                           	psect	text50
  8255  001B90                     __ptext50:
  8256                           	opt stack 0
  8257  001B90                     _ToMainHigh_sendmsg:
  8258                           	opt stack 17
  8259                           
  8260                           ; BSR set to: 0
  8261                           ;incstack = 0
  8262                           ;ToMainHigh_sendmsg@length stored from wreg
  8263  001B90  CFE8 F048          	movff	wreg,ToMainHigh_sendmsg@length
  8264                           
  8265                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8266                           ;	Return value of _ToMainHigh_sendmsg is never used
  8267  001B94  0101               	movlb	1	; () banked
  8268  001B96  0E01               	movlw	high _ToMainHigh_MQ
  8269  001B98  6E3A               	movwf	i2send_msg@qptr+1,c
  8270  001B9A  0101               	movlb	1	; () banked
  8271  001B9C  0E36               	movlw	low _ToMainHigh_MQ
  8272  001B9E  6E39               	movwf	i2send_msg@qptr,c
  8273  001BA0  C048  F03B         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8274  001BA4  C045  F03C         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8275  001BA8  C047  F03E         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8276  001BAC  C046  F03D         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8277  001BB0  EC6C  F008         	call	i2_send_msg	;wreg free
  8278  001BB4  0012               	return	
  8279  001BB6                     __end_of_ToMainHigh_sendmsg:
  8280                           	opt stack 0
  8281                           pclatu	equ	0xFFB
  8282                           pclath	equ	0xFFA
  8283                           tblptru	equ	0xFF8
  8284                           tblptrh	equ	0xFF7
  8285                           tblptrl	equ	0xFF6
  8286                           tablat	equ	0xFF5
  8287                           prodh	equ	0xFF4
  8288                           prodl	equ	0xFF3
  8289                           intcon	equ	0xFF2
  8290                           postinc0	equ	0xFEE
  8291                           fsr0h	equ	0xFEA
  8292                           fsr0l	equ	0xFE9
  8293                           wreg	equ	0xFE8
  8294                           indf1	equ	0xFE7
  8295                           fsr1h	equ	0xFE2
  8296                           fsr1l	equ	0xFE1
  8297                           bsr	equ	0xFE0
  8298                           indf2	equ	0xFDF
  8299                           postinc2	equ	0xFDE
  8300                           postdec2	equ	0xFDD
  8301                           fsr2h	equ	0xFDA
  8302                           fsr2l	equ	0xFD9
  8303                           status	equ	0xFD8
  8304                           
  8305 ;; *************** function i2_send_msg *****************
  8306 ;; Defined at:
  8307 ;;		line 24 in file "../src/messages.c"
  8308 ;; Parameters:    Size  Location     Type
  8309 ;;  qptr            2   56[COMRAM] PTR struct __msg_queue
  8310 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8311 ;;  length          1   58[COMRAM] unsigned char 
  8312 ;;  msgtype         1   59[COMRAM] unsigned char 
  8313 ;;  data            2   60[COMRAM] PTR void 
  8314 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  8315 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  8316 ;; Auto vars:     Size  Location     Type
  8317 ;;  send_msg        2   66[COMRAM] PTR struct __msg
  8318 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8319 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8320 ;;  send_msg        2   63[COMRAM] unsigned int 
  8321 ;;  send_msg        1   65[COMRAM] unsigned char 
  8322 ;; Return value:  Size  Location     Type
  8323 ;;                  1    wreg      char 
  8324 ;; Registers used:
  8325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8326 ;; Tracked objects:
  8327 ;;		On entry : 0/0
  8328 ;;		On exit  : 0/0
  8329 ;;		Unchanged: 0/0
  8330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8331 ;;      Params:         6       0       0       0       0
  8332 ;;      Locals:         5       0       0       0       0
  8333 ;;      Temps:          1       0       0       0       0
  8334 ;;      Totals:        12       0       0       0       0
  8335 ;;Total ram usage:       12 bytes
  8336 ;; Hardware stack levels used:    1
  8337 ;; Hardware stack levels required when called:    1
  8338 ;; This function calls:
  8339 ;;		i2_memcpy
  8340 ;; This function is called by:
  8341 ;;		_ToMainHigh_sendmsg
  8342 ;; This function uses a non-reentrant model
  8343 ;;
  8344                           
  8345                           	psect	text51
  8346  0010D8                     __ptext51:
  8347                           	opt stack 0
  8348  0010D8                     i2_send_msg:
  8349                           	opt stack 17
  8350                           
  8351                           ;messages.c: 25: unsigned char slot;
  8352                           ;messages.c: 27: msg *qmsg;
  8353                           ;messages.c: 28: size_t tlength = length;
  8354                           
  8355                           ;incstack = 0
  8356  0010D8  C03B  F040         	movff	i2send_msg@length,i2send_msg@tlength
  8357  0010DC  6A41               	clrf	i2send_msg@tlength+1,c
  8358                           
  8359                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8360  0010DE  EE20 F034          	lfsr	2,52
  8361  0010E2  5039               	movf	i2send_msg@qptr,w,c
  8362  0010E4  26D9               	addwf	fsr2l,f,c
  8363  0010E6  503A               	movf	i2send_msg@qptr+1,w,c
  8364  0010E8  22DA               	addwfc	fsr2h,f,c
  8365  0010EA  50DF               	movf	indf2,w,c
  8366  0010EC  6E42               	movwf	i2send_msg@slot,c
  8367                           
  8368                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8369  0010EE  5042               	movf	i2send_msg@slot,w,c
  8370  0010F0  0D0D               	mullw	13
  8371  0010F2  50F3               	movf	prodl,w,c
  8372  0010F4  2439               	addwf	i2send_msg@qptr,w,c
  8373  0010F6  6E43               	movwf	i2send_msg@qmsg,c
  8374  0010F8  50F4               	movf	prodh,w,c
  8375  0010FA  203A               	addwfc	i2send_msg@qptr+1,w,c
  8376  0010FC  6E44               	movwf	i2send_msg@qmsg+1,c
  8377                           
  8378                           ;messages.c: 41: if (qmsg->full != 0) {
  8379  0010FE  C043  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8380  001102  C044  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8381  001106  50DF               	movf	indf2,w,c
  8382  001108  B4D8               	btfsc	status,2,c
  8383  00110A  D002               	goto	i2l3354
  8384                           
  8385                           ;messages.c: 42: return (-1);
  8386  00110C  0EFF               	movlw	255
  8387  00110E  0012               	return	
  8388  001110                     i2l3354:
  8389                           
  8390                           ;messages.c: 43: }
  8391                           ;messages.c: 46: qmsg->length = length;
  8392  001110  EE20 F001          	lfsr	2,1
  8393  001114  5043               	movf	i2send_msg@qmsg,w,c
  8394  001116  26D9               	addwf	fsr2l,f,c
  8395  001118  5044               	movf	i2send_msg@qmsg+1,w,c
  8396  00111A  22DA               	addwfc	fsr2h,f,c
  8397  00111C  C03B  FFDF         	movff	i2send_msg@length,indf2
  8398                           
  8399                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8400  001120  EE20 F002          	lfsr	2,2
  8401  001124  5043               	movf	i2send_msg@qmsg,w,c
  8402  001126  26D9               	addwf	fsr2l,f,c
  8403  001128  5044               	movf	i2send_msg@qmsg+1,w,c
  8404  00112A  22DA               	addwfc	fsr2h,f,c
  8405  00112C  C03C  FFDF         	movff	i2send_msg@msgtype,indf2
  8406                           
  8407                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8408  001130  0E03               	movlw	3
  8409  001132  2443               	addwf	i2send_msg@qmsg,w,c
  8410  001134  6E2F               	movwf	i2memcpy@d1,c
  8411  001136  0E00               	movlw	0
  8412  001138  2044               	addwfc	i2send_msg@qmsg+1,w,c
  8413  00113A  6E30               	movwf	i2memcpy@d1+1,c
  8414  00113C  C03E  F032         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8415  001140  C03D  F031         	movff	i2send_msg@data,i2memcpy@s1
  8416  001144  C040  F033         	movff	i2send_msg@tlength,i2memcpy@n
  8417  001148  C041  F034         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8418  00114C  ECCC  F00C         	call	i2_memcpy	;wreg free
  8419                           
  8420                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8421  001150  EE20 F034          	lfsr	2,52
  8422  001154  5039               	movf	i2send_msg@qptr,w,c
  8423  001156  26D9               	addwf	fsr2l,f,c
  8424  001158  503A               	movf	i2send_msg@qptr+1,w,c
  8425  00115A  22DA               	addwfc	fsr2h,f,c
  8426  00115C  EE10 F034          	lfsr	1,52
  8427  001160  5039               	movf	i2send_msg@qptr,w,c
  8428  001162  26E1               	addwf	fsr1l,f,c
  8429  001164  503A               	movf	i2send_msg@qptr+1,w,c
  8430  001166  22E2               	addwfc	fsr1h,f,c
  8431  001168  50E7               	movf	indf1,w,c
  8432  00116A  6E3F               	movwf	??i2_send_msg& (0+255),c
  8433  00116C  283F               	incf	??i2_send_msg,w,c
  8434  00116E  0B03               	andlw	3
  8435  001170  6EDF               	movwf	indf2,c
  8436                           
  8437                           ;messages.c: 59: qmsg->full = 1;
  8438  001172  C043  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8439  001176  C044  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8440  00117A  0E01               	movlw	1
  8441  00117C  6EDF               	movwf	indf2,c
  8442                           
  8443                           ;messages.c: 60: return (1);
  8444  00117E  0E01               	movlw	1
  8445  001180  0012               	return	
  8446  001182                     __end_ofi2_send_msg:
  8447                           	opt stack 0
  8448                           pclatu	equ	0xFFB
  8449                           pclath	equ	0xFFA
  8450                           tblptru	equ	0xFF8
  8451                           tblptrh	equ	0xFF7
  8452                           tblptrl	equ	0xFF6
  8453                           tablat	equ	0xFF5
  8454                           prodh	equ	0xFF4
  8455                           prodl	equ	0xFF3
  8456                           intcon	equ	0xFF2
  8457                           postinc0	equ	0xFEE
  8458                           fsr0h	equ	0xFEA
  8459                           fsr0l	equ	0xFE9
  8460                           wreg	equ	0xFE8
  8461                           indf1	equ	0xFE7
  8462                           fsr1h	equ	0xFE2
  8463                           fsr1l	equ	0xFE1
  8464                           bsr	equ	0xFE0
  8465                           indf2	equ	0xFDF
  8466                           postinc2	equ	0xFDE
  8467                           postdec2	equ	0xFDD
  8468                           fsr2h	equ	0xFDA
  8469                           fsr2l	equ	0xFD9
  8470                           status	equ	0xFD8
  8471                           
  8472 ;; *************** function i2_memcpy *****************
  8473 ;; Defined at:
  8474 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  8475 ;; Parameters:    Size  Location     Type
  8476 ;;  d1              2   46[COMRAM] PTR void 
  8477 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8478 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8479 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  8480 ;;  s1              2   48[COMRAM] PTR const void 
  8481 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8482 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8483 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  8484 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8485 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  8486 ;;  n               2   50[COMRAM] unsigned int 
  8487 ;; Auto vars:     Size  Location     Type
  8488 ;;  memcpy          2   54[COMRAM] PTR const unsigned char 
  8489 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8490 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8491 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  8492 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8493 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  8494 ;;  memcpy          2   52[COMRAM] PTR unsigned char 
  8495 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8496 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8497 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  8498 ;; Return value:  Size  Location     Type
  8499 ;;                  2   46[COMRAM] PTR void 
  8500 ;; Registers used:
  8501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8502 ;; Tracked objects:
  8503 ;;		On entry : 0/0
  8504 ;;		On exit  : 0/0
  8505 ;;		Unchanged: 0/0
  8506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8507 ;;      Params:         6       0       0       0       0
  8508 ;;      Locals:         4       0       0       0       0
  8509 ;;      Temps:          0       0       0       0       0
  8510 ;;      Totals:        10       0       0       0       0
  8511 ;;Total ram usage:       10 bytes
  8512 ;; Hardware stack levels used:    1
  8513 ;; This function calls:
  8514 ;;		Nothing
  8515 ;; This function is called by:
  8516 ;;		i2_send_msg
  8517 ;;		i2_recv_msg
  8518 ;; This function uses a non-reentrant model
  8519 ;;
  8520                           
  8521                           	psect	text52
  8522  001998                     __ptext52:
  8523                           	opt stack 0
  8524  001998                     i2_memcpy:
  8525                           	opt stack 17
  8526                           
  8527                           ;incstack = 0
  8528  001998  C032  F038         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8529  00199C  C031  F037         	movff	i2memcpy@s1,i2memcpy@s
  8530  0019A0  C030  F036         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8531  0019A4  C02F  F035         	movff	i2memcpy@d1,i2memcpy@d
  8532  0019A8  D00E               	goto	i2l3442
  8533  0019AA                     i2l3436:
  8534  0019AA  C037  FFD9         	movff	i2memcpy@s,fsr2l
  8535  0019AE  C038  FFDA         	movff	i2memcpy@s+1,fsr2h
  8536  0019B2  C035  FFE1         	movff	i2memcpy@d,fsr1l
  8537  0019B6  C036  FFE2         	movff	i2memcpy@d+1,fsr1h
  8538  0019BA  CFDF FFE7          	movff	indf2,indf1
  8539  0019BE  4A37               	infsnz	i2memcpy@s,f,c
  8540  0019C0  2A38               	incf	i2memcpy@s+1,f,c
  8541  0019C2  4A35               	infsnz	i2memcpy@d,f,c
  8542  0019C4  2A36               	incf	i2memcpy@d+1,f,c
  8543  0019C6                     i2l3442:
  8544  0019C6  0633               	decf	i2memcpy@n,f,c
  8545  0019C8  A0D8               	btfss	status,0,c
  8546  0019CA  0634               	decf	i2memcpy@n+1,f,c
  8547  0019CC  2833               	incf	i2memcpy@n& (0+255),w,c
  8548  0019CE  B4D8               	btfsc	status,2,c
  8549  0019D0  2834               	incf	(i2memcpy@n+1)& (0+255),w,c
  8550  0019D2  B4D8               	btfsc	status,2,c
  8551                           
  8552                           ;	Return value of i2_memcpy is never used
  8553  0019D4  0012               	return	
  8554  0019D6  D7E9               	goto	i2l3436
  8555  0019D8                     __end_ofi2_memcpy:
  8556                           	opt stack 0
  8557                           pclatu	equ	0xFFB
  8558                           pclath	equ	0xFFA
  8559                           tblptru	equ	0xFF8
  8560                           tblptrh	equ	0xFF7
  8561                           tblptrl	equ	0xFF6
  8562                           tablat	equ	0xFF5
  8563                           prodh	equ	0xFF4
  8564                           prodl	equ	0xFF3
  8565                           intcon	equ	0xFF2
  8566                           postinc0	equ	0xFEE
  8567                           fsr0h	equ	0xFEA
  8568                           fsr0l	equ	0xFE9
  8569                           wreg	equ	0xFE8
  8570                           indf1	equ	0xFE7
  8571                           fsr1h	equ	0xFE2
  8572                           fsr1l	equ	0xFE1
  8573                           bsr	equ	0xFE0
  8574                           indf2	equ	0xFDF
  8575                           postinc2	equ	0xFDE
  8576                           postdec2	equ	0xFDD
  8577                           fsr2h	equ	0xFDA
  8578                           fsr2l	equ	0xFD9
  8579                           status	equ	0xFD8
  8580                           
  8581 ;; *************** function _SleepIfOkay *****************
  8582 ;; Defined at:
  8583 ;;		line 228 in file "../src/messages.c"
  8584 ;; Parameters:    Size  Location     Type
  8585 ;;		None
  8586 ;; Auto vars:     Size  Location     Type
  8587 ;;		None
  8588 ;; Return value:  Size  Location     Type
  8589 ;;		None               void
  8590 ;; Registers used:
  8591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8592 ;; Tracked objects:
  8593 ;;		On entry : 0/0
  8594 ;;		On exit  : 0/0
  8595 ;;		Unchanged: 0/0
  8596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8597 ;;      Params:         0       0       0       0       0
  8598 ;;      Locals:         0       0       0       0       0
  8599 ;;      Temps:          0       0       0       0       0
  8600 ;;      Totals:         0       0       0       0       0
  8601 ;;Total ram usage:        0 bytes
  8602 ;; Hardware stack levels used:    1
  8603 ;; Hardware stack levels required when called:    2
  8604 ;; This function calls:
  8605 ;;		_enter_sleep_mode
  8606 ;;		i2_check_msg
  8607 ;;		i2_in_high_int
  8608 ;;		i2_in_low_int
  8609 ;; This function is called by:
  8610 ;;		_InterruptHandlerHigh
  8611 ;; This function uses a non-reentrant model
  8612 ;;
  8613                           
  8614                           	psect	text53
  8615  001772                     __ptext53:
  8616                           	opt stack 0
  8617  001772                     _SleepIfOkay:
  8618                           	opt stack 18
  8619                           
  8620                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8621                           
  8622                           ;incstack = 0
  8623  001772  664F               	tstfsz	_MQ_Main_Willing_to_block,c
  8624  001774  D001               	goto	i2l3286
  8625  001776  0012               	return	
  8626  001778                     i2l3286:
  8627                           
  8628                           ;messages.c: 232: }
  8629                           ;messages.c: 235: if (in_low_int()) {
  8630  001778  EC60  F00D         	call	i2_in_low_int	;wreg free
  8631  00177C  5032               	movf	?i2_in_low_int+1,w,c
  8632  00177E  1031               	iorwf	?i2_in_low_int,w,c
  8633  001780  A4D8               	btfss	status,2,c
  8634  001782  0012               	return	
  8635                           
  8636                           ;messages.c: 237: }
  8637                           ;messages.c: 240: if (!in_high_int()) {
  8638                           
  8639                           ;messages.c: 236: return;
  8640  001784  EC63  F00E         	call	i2_in_high_int	;wreg free
  8641  001788  5030               	movf	?i2_in_high_int+1,w,c
  8642  00178A  102F               	iorwf	?i2_in_high_int,w,c
  8643  00178C  B4D8               	btfsc	status,2,c
  8644  00178E  0012               	return	
  8645                           
  8646                           ;messages.c: 242: }
  8647                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8648                           
  8649                           ;messages.c: 241: return;
  8650  001790  0101               	movlb	1	; () banked
  8651  001792  0E01               	movlw	high _ToMainHigh_MQ
  8652  001794  6E30               	movwf	i2check_msg@qptr+1,c
  8653  001796  0101               	movlb	1	; () banked
  8654  001798  0E36               	movlw	low _ToMainHigh_MQ
  8655  00179A  6E2F               	movwf	i2check_msg@qptr,c
  8656  00179C  ECDB  F00D         	call	i2_check_msg	;wreg free
  8657  0017A0  0900               	iorlw	0
  8658  0017A2  A4D8               	btfss	status,2,c
  8659  0017A4  0012               	return	
  8660                           
  8661                           ;messages.c: 249: }
  8662                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8663                           
  8664                           ;messages.c: 248: return;
  8665  0017A6  0101               	movlb	1	; () banked
  8666  0017A8  0E01               	movlw	high _ToMainLow_MQ
  8667  0017AA  6E30               	movwf	i2check_msg@qptr+1,c
  8668  0017AC  0101               	movlb	1	; () banked
  8669  0017AE  0E6C               	movlw	low _ToMainLow_MQ
  8670  0017B0  6E2F               	movwf	i2check_msg@qptr,c
  8671  0017B2  ECDB  F00D         	call	i2_check_msg	;wreg free
  8672  0017B6  0900               	iorlw	0
  8673  0017B8  B4D8               	btfsc	status,2,c
  8674                           
  8675                           ;messages.c: 252: }
  8676                           ;messages.c: 253: enter_sleep_mode();
  8677                           
  8678                           ;messages.c: 251: return;
  8679  0017BA  EC72  F00E         	call	_enter_sleep_mode	;wreg free
  8680  0017BE  0012               	return	
  8681  0017C0                     __end_of_SleepIfOkay:
  8682                           	opt stack 0
  8683                           pclatu	equ	0xFFB
  8684                           pclath	equ	0xFFA
  8685                           tblptru	equ	0xFF8
  8686                           tblptrh	equ	0xFF7
  8687                           tblptrl	equ	0xFF6
  8688                           tablat	equ	0xFF5
  8689                           prodh	equ	0xFF4
  8690                           prodl	equ	0xFF3
  8691                           intcon	equ	0xFF2
  8692                           postinc0	equ	0xFEE
  8693                           fsr0h	equ	0xFEA
  8694                           fsr0l	equ	0xFE9
  8695                           wreg	equ	0xFE8
  8696                           indf1	equ	0xFE7
  8697                           fsr1h	equ	0xFE2
  8698                           fsr1l	equ	0xFE1
  8699                           bsr	equ	0xFE0
  8700                           indf2	equ	0xFDF
  8701                           postinc2	equ	0xFDE
  8702                           postdec2	equ	0xFDD
  8703                           fsr2h	equ	0xFDA
  8704                           fsr2l	equ	0xFD9
  8705                           status	equ	0xFD8
  8706                           
  8707 ;; *************** function i2_in_low_int *****************
  8708 ;; Defined at:
  8709 ;;		line 39 in file "../src/interrupts.c"
  8710 ;; Parameters:    Size  Location     Type
  8711 ;;		None
  8712 ;; Auto vars:     Size  Location     Type
  8713 ;;		None
  8714 ;; Return value:  Size  Location     Type
  8715 ;;                  2   48[COMRAM] int 
  8716 ;; Registers used:
  8717 ;;		wreg, status,2, status,0, cstack
  8718 ;; Tracked objects:
  8719 ;;		On entry : 0/0
  8720 ;;		On exit  : 0/0
  8721 ;;		Unchanged: 0/0
  8722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8723 ;;      Params:         2       0       0       0       0
  8724 ;;      Locals:         0       0       0       0       0
  8725 ;;      Temps:          0       0       0       0       0
  8726 ;;      Totals:         2       0       0       0       0
  8727 ;;Total ram usage:        2 bytes
  8728 ;; Hardware stack levels used:    1
  8729 ;; Hardware stack levels required when called:    1
  8730 ;; This function calls:
  8731 ;;		i2_in_high_int
  8732 ;; This function is called by:
  8733 ;;		_SleepIfOkay
  8734 ;; This function uses a non-reentrant model
  8735 ;;
  8736                           
  8737                           	psect	text54
  8738  001AC0                     __ptext54:
  8739                           	opt stack 0
  8740  001AC0                     i2_in_low_int:
  8741                           	opt stack 18
  8742                           
  8743                           ;interrupts.c: 40: if (INTCONbits.GIEL == 1) {
  8744                           
  8745                           ;incstack = 0
  8746  001AC0  ACF2               	btfss	intcon,6,c	;volatile
  8747  001AC2  D005               	goto	i2l3422
  8748                           
  8749                           ;interrupts.c: 41: return (0);
  8750  001AC4  0E00               	movlw	0
  8751  001AC6  6E32               	movwf	?i2_in_low_int+1,c
  8752  001AC8  0E00               	movlw	0
  8753  001ACA  6E31               	movwf	?i2_in_low_int,c
  8754  001ACC  0012               	return	
  8755  001ACE                     i2l3422:
  8756  001ACE  EC63  F00E         	call	i2_in_high_int	;wreg free
  8757  001AD2  5030               	movf	?i2_in_high_int+1,w,c
  8758  001AD4  102F               	iorwf	?i2_in_high_int,w,c
  8759  001AD6  B4D8               	btfsc	status,2,c
  8760  001AD8  D005               	goto	i2l3430
  8761                           
  8762                           ;interrupts.c: 43: return (0);
  8763  001ADA  0E00               	movlw	0
  8764  001ADC  6E32               	movwf	?i2_in_low_int+1,c
  8765  001ADE  0E00               	movlw	0
  8766  001AE0  6E31               	movwf	?i2_in_low_int,c
  8767  001AE2  0012               	return	
  8768  001AE4                     i2l3430:
  8769                           
  8770                           ;interrupts.c: 45: return (1);
  8771  001AE4  0E00               	movlw	0
  8772  001AE6  6E32               	movwf	?i2_in_low_int+1,c
  8773  001AE8  0E01               	movlw	1
  8774  001AEA  6E31               	movwf	?i2_in_low_int,c
  8775  001AEC  0012               	return	
  8776  001AEE                     __end_ofi2_in_low_int:
  8777                           	opt stack 0
  8778                           pclatu	equ	0xFFB
  8779                           pclath	equ	0xFFA
  8780                           tblptru	equ	0xFF8
  8781                           tblptrh	equ	0xFF7
  8782                           tblptrl	equ	0xFF6
  8783                           tablat	equ	0xFF5
  8784                           prodh	equ	0xFF4
  8785                           prodl	equ	0xFF3
  8786                           intcon	equ	0xFF2
  8787                           postinc0	equ	0xFEE
  8788                           fsr0h	equ	0xFEA
  8789                           fsr0l	equ	0xFE9
  8790                           wreg	equ	0xFE8
  8791                           indf1	equ	0xFE7
  8792                           fsr1h	equ	0xFE2
  8793                           fsr1l	equ	0xFE1
  8794                           bsr	equ	0xFE0
  8795                           indf2	equ	0xFDF
  8796                           postinc2	equ	0xFDE
  8797                           postdec2	equ	0xFDD
  8798                           fsr2h	equ	0xFDA
  8799                           fsr2l	equ	0xFD9
  8800                           status	equ	0xFD8
  8801                           
  8802 ;; *************** function i2_in_high_int *****************
  8803 ;; Defined at:
  8804 ;;		line 31 in file "../src/interrupts.c"
  8805 ;; Parameters:    Size  Location     Type
  8806 ;;		None
  8807 ;; Auto vars:     Size  Location     Type
  8808 ;;		None
  8809 ;; Return value:  Size  Location     Type
  8810 ;;                  2   46[COMRAM] int 
  8811 ;; Registers used:
  8812 ;;		wreg, status,2
  8813 ;; Tracked objects:
  8814 ;;		On entry : 0/0
  8815 ;;		On exit  : 0/0
  8816 ;;		Unchanged: 0/0
  8817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8818 ;;      Params:         2       0       0       0       0
  8819 ;;      Locals:         0       0       0       0       0
  8820 ;;      Temps:          0       0       0       0       0
  8821 ;;      Totals:         2       0       0       0       0
  8822 ;;Total ram usage:        2 bytes
  8823 ;; Hardware stack levels used:    1
  8824 ;; This function calls:
  8825 ;;		Nothing
  8826 ;; This function is called by:
  8827 ;;		_SleepIfOkay
  8828 ;;		i2_in_low_int
  8829 ;; This function uses a non-reentrant model
  8830 ;;
  8831                           
  8832                           	psect	text55
  8833  001CC6                     __ptext55:
  8834                           	opt stack 0
  8835  001CC6                     i2_in_high_int:
  8836                           	opt stack 18
  8837                           
  8838                           ;interrupts.c: 32: return (!INTCONbits.GIEH);
  8839                           
  8840                           ;incstack = 0
  8841  001CC6  0E00               	movlw	0
  8842  001CC8  AEF2               	btfss	intcon,7,c	;volatile
  8843  001CCA  0E01               	movlw	1
  8844  001CCC  6E2F               	movwf	?i2_in_high_int,c
  8845  001CCE  6A30               	clrf	?i2_in_high_int+1,c
  8846  001CD0  0012               	return	
  8847  001CD2                     __end_ofi2_in_high_int:
  8848                           	opt stack 0
  8849                           pclatu	equ	0xFFB
  8850                           pclath	equ	0xFFA
  8851                           tblptru	equ	0xFF8
  8852                           tblptrh	equ	0xFF7
  8853                           tblptrl	equ	0xFF6
  8854                           tablat	equ	0xFF5
  8855                           prodh	equ	0xFF4
  8856                           prodl	equ	0xFF3
  8857                           intcon	equ	0xFF2
  8858                           postinc0	equ	0xFEE
  8859                           fsr0h	equ	0xFEA
  8860                           fsr0l	equ	0xFE9
  8861                           wreg	equ	0xFE8
  8862                           indf1	equ	0xFE7
  8863                           fsr1h	equ	0xFE2
  8864                           fsr1l	equ	0xFE1
  8865                           bsr	equ	0xFE0
  8866                           indf2	equ	0xFDF
  8867                           postinc2	equ	0xFDE
  8868                           postdec2	equ	0xFDD
  8869                           fsr2h	equ	0xFDA
  8870                           fsr2l	equ	0xFD9
  8871                           status	equ	0xFD8
  8872                           
  8873 ;; *************** function i2_check_msg *****************
  8874 ;; Defined at:
  8875 ;;		line 222 in file "../src/messages.c"
  8876 ;; Parameters:    Size  Location     Type
  8877 ;;  qptr            2   46[COMRAM] PTR struct __msg_queue
  8878 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8879 ;; Auto vars:     Size  Location     Type
  8880 ;;		None
  8881 ;; Return value:  Size  Location     Type
  8882 ;;                  1    wreg      unsigned char 
  8883 ;; Registers used:
  8884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8885 ;; Tracked objects:
  8886 ;;		On entry : 0/0
  8887 ;;		On exit  : 0/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8890 ;;      Params:         2       0       0       0       0
  8891 ;;      Locals:         0       0       0       0       0
  8892 ;;      Temps:          1       0       0       0       0
  8893 ;;      Totals:         3       0       0       0       0
  8894 ;;Total ram usage:        3 bytes
  8895 ;; Hardware stack levels used:    1
  8896 ;; This function calls:
  8897 ;;		Nothing
  8898 ;; This function is called by:
  8899 ;;		_SleepIfOkay
  8900 ;; This function uses a non-reentrant model
  8901 ;;
  8902                           
  8903                           	psect	text56
  8904  001BB6                     __ptext56:
  8905                           	opt stack 0
  8906  001BB6                     i2_check_msg:
  8907                           	opt stack 19
  8908                           
  8909                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8910                           
  8911                           ;incstack = 0
  8912  001BB6  EE20 F035          	lfsr	2,53
  8913  001BBA  502F               	movf	i2check_msg@qptr,w,c
  8914  001BBC  26D9               	addwf	fsr2l,f,c
  8915  001BBE  5030               	movf	i2check_msg@qptr+1,w,c
  8916  001BC0  22DA               	addwfc	fsr2h,f,c
  8917  001BC2  50DF               	movf	indf2,w,c
  8918  001BC4  6E31               	movwf	??i2_check_msg& (0+255),c
  8919  001BC6  5031               	movf	??i2_check_msg,w,c
  8920  001BC8  0D0D               	mullw	13
  8921  001BCA  50F3               	movf	prodl,w,c
  8922  001BCC  242F               	addwf	i2check_msg@qptr,w,c
  8923  001BCE  6ED9               	movwf	fsr2l,c
  8924  001BD0  50F4               	movf	prodh,w,c
  8925  001BD2  2030               	addwfc	i2check_msg@qptr+1,w,c
  8926  001BD4  6EDA               	movwf	fsr2h,c
  8927  001BD6  50DF               	movf	indf2,w,c
  8928  001BD8  0012               	return	
  8929  001BDA                     __end_ofi2_check_msg:
  8930                           	opt stack 0
  8931                           pclatu	equ	0xFFB
  8932                           pclath	equ	0xFFA
  8933                           tblptru	equ	0xFF8
  8934                           tblptrh	equ	0xFF7
  8935                           tblptrl	equ	0xFF6
  8936                           tablat	equ	0xFF5
  8937                           prodh	equ	0xFF4
  8938                           prodl	equ	0xFF3
  8939                           intcon	equ	0xFF2
  8940                           postinc0	equ	0xFEE
  8941                           fsr0h	equ	0xFEA
  8942                           fsr0l	equ	0xFE9
  8943                           wreg	equ	0xFE8
  8944                           indf1	equ	0xFE7
  8945                           fsr1h	equ	0xFE2
  8946                           fsr1l	equ	0xFE1
  8947                           bsr	equ	0xFE0
  8948                           indf2	equ	0xFDF
  8949                           postinc2	equ	0xFDE
  8950                           postdec2	equ	0xFDD
  8951                           fsr2h	equ	0xFDA
  8952                           fsr2l	equ	0xFD9
  8953                           status	equ	0xFD8
  8954                           
  8955 ;; *************** function _enter_sleep_mode *****************
  8956 ;; Defined at:
  8957 ;;		line 202 in file "../src/messages.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;		None
  8960 ;; Auto vars:     Size  Location     Type
  8961 ;;		None
  8962 ;; Return value:  Size  Location     Type
  8963 ;;		None               void
  8964 ;; Registers used:
  8965 ;;		None
  8966 ;; Tracked objects:
  8967 ;;		On entry : 0/0
  8968 ;;		On exit  : 0/0
  8969 ;;		Unchanged: 0/0
  8970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8971 ;;      Params:         0       0       0       0       0
  8972 ;;      Locals:         0       0       0       0       0
  8973 ;;      Temps:          0       0       0       0       0
  8974 ;;      Totals:         0       0       0       0       0
  8975 ;;Total ram usage:        0 bytes
  8976 ;; Hardware stack levels used:    1
  8977 ;; This function calls:
  8978 ;;		Nothing
  8979 ;; This function is called by:
  8980 ;;		_SleepIfOkay
  8981 ;; This function uses a non-reentrant model
  8982 ;;
  8983                           
  8984                           	psect	text57
  8985  001CE4                     __ptext57:
  8986                           	opt stack 0
  8987  001CE4                     _enter_sleep_mode:
  8988                           	opt stack 19
  8989                           
  8990                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8991                           
  8992                           ;incstack = 0
  8993  001CE4  8ED3               	bsf	4051,7,c	;volatile
  8994  001CE6  0003               	sleep		;# 
  8995  001CE8  0012               	return	
  8996  001CEA                     __end_of_enter_sleep_mode:
  8997                           	opt stack 0
  8998                           pclatu	equ	0xFFB
  8999                           pclath	equ	0xFFA
  9000                           tblptru	equ	0xFF8
  9001                           tblptrh	equ	0xFF7
  9002                           tblptrl	equ	0xFF6
  9003                           tablat	equ	0xFF5
  9004                           prodh	equ	0xFF4
  9005                           prodl	equ	0xFF3
  9006                           intcon	equ	0xFF2
  9007                           postinc0	equ	0xFEE
  9008                           fsr0h	equ	0xFEA
  9009                           fsr0l	equ	0xFE9
  9010                           wreg	equ	0xFE8
  9011                           indf1	equ	0xFE7
  9012                           fsr1h	equ	0xFE2
  9013                           fsr1l	equ	0xFE1
  9014                           bsr	equ	0xFE0
  9015                           indf2	equ	0xFDF
  9016                           postinc2	equ	0xFDE
  9017                           postdec2	equ	0xFDD
  9018                           fsr2h	equ	0xFDA
  9019                           fsr2l	equ	0xFD9
  9020                           status	equ	0xFD8
  9021                           
  9022 ;; *************** function _ReadADC *****************
  9023 ;; Defined at:
  9024 ;;		line 24 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcread.c"
  9025 ;; Parameters:    Size  Location     Type
  9026 ;;		None
  9027 ;; Auto vars:     Size  Location     Type
  9028 ;;		None
  9029 ;; Return value:  Size  Location     Type
  9030 ;;                  2   46[COMRAM] int 
  9031 ;; Registers used:
  9032 ;;		wreg, status,2
  9033 ;; Tracked objects:
  9034 ;;		On entry : 0/0
  9035 ;;		On exit  : 0/0
  9036 ;;		Unchanged: 0/0
  9037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9038 ;;      Params:         2       0       0       0       0
  9039 ;;      Locals:         0       0       0       0       0
  9040 ;;      Temps:          0       0       0       0       0
  9041 ;;      Totals:         2       0       0       0       0
  9042 ;;Total ram usage:        2 bytes
  9043 ;; Hardware stack levels used:    1
  9044 ;; This function calls:
  9045 ;;		Nothing
  9046 ;; This function is called by:
  9047 ;;		_InterruptHandlerHigh
  9048 ;; This function uses a non-reentrant model
  9049 ;;
  9050                           
  9051                           	psect	text58
  9052  001CD2                     __ptext58:
  9053                           	opt stack 0
  9054  001CD2                     _ReadADC:
  9055                           	opt stack 20
  9056                           
  9057                           ;incstack = 0
  9058  001CD2  50C4               	movf	4036,w,c	;volatile
  9059  001CD4  6E30               	movwf	?_ReadADC+1,c
  9060  001CD6  50C3               	movf	4035,w,c	;volatile
  9061  001CD8  6E2F               	movwf	?_ReadADC,c
  9062  001CDA  0012               	return	
  9063  001CDC                     __end_of_ReadADC:
  9064                           	opt stack 0
  9065  0000                     pclatu	equ	0xFFB
  9066                           pclath	equ	0xFFA
  9067                           tblptru	equ	0xFF8
  9068                           tblptrh	equ	0xFF7
  9069                           tblptrl	equ	0xFF6
  9070                           tablat	equ	0xFF5
  9071                           prodh	equ	0xFF4
  9072                           prodl	equ	0xFF3
  9073                           intcon	equ	0xFF2
  9074                           postinc0	equ	0xFEE
  9075                           fsr0h	equ	0xFEA
  9076                           fsr0l	equ	0xFE9
  9077                           wreg	equ	0xFE8
  9078                           indf1	equ	0xFE7
  9079                           fsr1h	equ	0xFE2
  9080                           fsr1l	equ	0xFE1
  9081                           bsr	equ	0xFE0
  9082                           indf2	equ	0xFDF
  9083                           postinc2	equ	0xFDE
  9084                           postdec2	equ	0xFDD
  9085                           fsr2h	equ	0xFDA
  9086                           fsr2l	equ	0xFD9
  9087                           status	equ	0xFD8
  9088                           pclatu	equ	0xFFB
  9089                           pclath	equ	0xFFA
  9090                           tblptru	equ	0xFF8
  9091                           tblptrh	equ	0xFF7
  9092                           tblptrl	equ	0xFF6
  9093                           tablat	equ	0xFF5
  9094                           prodh	equ	0xFF4
  9095                           prodl	equ	0xFF3
  9096                           intcon	equ	0xFF2
  9097                           postinc0	equ	0xFEE
  9098                           fsr0h	equ	0xFEA
  9099                           fsr0l	equ	0xFE9
  9100                           wreg	equ	0xFE8
  9101                           indf1	equ	0xFE7
  9102                           fsr1h	equ	0xFE2
  9103                           fsr1l	equ	0xFE1
  9104                           bsr	equ	0xFE0
  9105                           indf2	equ	0xFDF
  9106                           postinc2	equ	0xFDE
  9107                           postdec2	equ	0xFDD
  9108                           fsr2h	equ	0xFDA
  9109                           fsr2l	equ	0xFD9
  9110                           status	equ	0xFD8
  9111                           
  9112                           	psect	rparam
  9113  0000                     pclatu	equ	0xFFB
  9114                           pclath	equ	0xFFA
  9115                           tblptru	equ	0xFF8
  9116                           tblptrh	equ	0xFF7
  9117                           tblptrl	equ	0xFF6
  9118                           tablat	equ	0xFF5
  9119                           prodh	equ	0xFF4
  9120                           prodl	equ	0xFF3
  9121                           intcon	equ	0xFF2
  9122                           postinc0	equ	0xFEE
  9123                           fsr0h	equ	0xFEA
  9124                           fsr0l	equ	0xFE9
  9125                           wreg	equ	0xFE8
  9126                           indf1	equ	0xFE7
  9127                           fsr1h	equ	0xFE2
  9128                           fsr1l	equ	0xFE1
  9129                           bsr	equ	0xFE0
  9130                           indf2	equ	0xFDF
  9131                           postinc2	equ	0xFDE
  9132                           postdec2	equ	0xFDD
  9133                           fsr2h	equ	0xFDA
  9134                           fsr2l	equ	0xFD9
  9135                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     76      80
    BANK0           128     77      81
    BANK1           256     53     215
    BANK2           256      0      54
    BANK3           256      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK1[11]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), timer0_int_handler@val(BANK0[2]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK1[11]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), timer0_int_handler@val(BANK0[2]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> main@t0thread_data(BANK1[2]), main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[5]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> main@t0thread_data(BANK1[2]), main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[5]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> main@ic(BANK1[28]), i2c_int_handler@error_buf(BANK0[3]), NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> main@uc(BANK1[5]), NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> main@msgtype(BANK1[1]), timer0_int_handler@msgtype(BANK0[2]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), timer0_int_handler@val(BANK0[2]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK1[11]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), timer0_int_handler@val(BANK0[2]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> main@t0thread_data(BANK1[2]), main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[5]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), i2c_int_handler@msgbuffer(BANK0[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), NULL(NULL[0]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), NULL(NULL[0]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_timer0_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_timer0_lthread
    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _timer0_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _initADC->_OpenADC
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0   12078
                                             76 BANK0      1     1      0
                                              0 BANK1     53    53      0
                         _OpenTimer0
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                            _initADC
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _returnADCValue
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     344
                                             40 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    2583
                                             66 BANK0     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8    2583
                                             66 BANK0     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     263
                                             40 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    1975
                                             62 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1653
                                             50 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     168
                                             40 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _returnADCValue                                       4     2      2      23
                                             40 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      86
                                             40 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      86
                                             40 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     390
                                             44 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     390
                                             40 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                             40 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initADC                                              4     4      0     283
                                             45 BANK0      4     4      0
                         _ConvertADC
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             40 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             40 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     270
                                             46 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             44 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             42 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             40 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                             40 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             40 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    1973
                                             64 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    1973
                                             64 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1779
                                             50 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     504
                                             40 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     284
                                             40 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             40 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    4938
                                             29 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
                       i1_ConvertADC
 ---------------------------------------------------------------------------------
 (6) i1_ConvertADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    2416
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    2522
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2393
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    1943
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               18    18      0   11237
                                             22 BANK0     18    18      0
                            _ReadADC
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  7     7      0    6566
                                             75 COMRAM     1     1      0
                                              0 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     176
                                             46 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    2994
                                             70 COMRAM     5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    2747
                                             56 COMRAM    14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    24    24      0    4353
                                             72 COMRAM     2     2      0
                                              0 BANK0     22    22      0
                 _ToMainHigh_sendmsg
                       _handle_start
                   i2_returnADCValue
            i2_start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (12) i2_start_i2c_slave_reply                             5     3      2     318
                                             46 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (12) i2_returnADCValue                                    4     2      2      93
                                             46 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      31
                                             46 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    3214
                                             68 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2659
                                             56 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6    1108
                                             46 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     284
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             48 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     284
                                             46 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ReadADC                                             2     0      2       0
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _initADC
     _ConvertADC
     _OpenADC
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _returnADCValue
   _start_i2c_slave_reply
   _timer0_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   i1_ConvertADC

 _InterruptHandlerHigh (ROOT)
   _ReadADC
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
     i2_returnADCValue
     i2_start_i2c_slave_reply
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      36       8       21.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100     35      D7       6       84.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     4D      51       4       63.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     4C      50       1       63.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AE      11        0.0%
DATA                 0      0     1AE      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sat Feb  8 22:36:58 2014

                main@uthread_data 01AD          _MQ_Main_Willing_to_block 004F  
                     _SSPSTATbits 000FC7         __end_of_ToMainLow_recvmsg 1916  
                              bsr 000FE0         __end_of_ToMainLow_sendmsg 1B90  
                ??_returnADCValue 00AA                      __CFG_CP0$OFF 000000  
               i2recv_msg@msgtype 003C                 i2recv_msg@tlength 0043  
                             l500 132A                               l325 07DE  
                             l423 1460                               l444 1B12  
                             l445 1B14                               l493 12F8  
                             l726 1C5A                               l497 1318  
                             l498 131A                               l499 1328  
            __size_of_WriteTimer0 0012              __size_of_WriteTimer1 0012  
                  _FromMainLow_MQ 0100                               wreg 000FE8  
                    __CFG_IESO$ON 000000                      ?_in_high_int 00A8  
                ??_init_uart_recv 00AA                   ReadTimer1@timer 0003  
             i2recv_msg@maxlength 003B                              l1038 13D6  
                            l2512 0C40                              l2274 0AF2  
                            l2532 175A                              l2526 1736  
                            l2278 0B76                              l2546 0A0C  
                            l2562 0AD2                              l2650 11A2  
                            l2636 183E                              l2628 181C  
                            l2494 14AC                              l2902 13C2  
                            l2832 12FA                              l2824 12E4  
                            l2680 1882                              l2760 078C  
                            l2752 074A                              l2666 11FE  
                            l2658 11D0                              l2762 07E4  
                            l2772 082C                              l2780 0866  
                            l2792 08E2                              l2768 0816  
                            l2784 0886                              l2794 0934  
                            l2778 084E                              l2786 08A4  
                            l2894 1374                              l2798 0986  
                            l2896 1386                              l2898 138E  
                            _LATB 000F8A                              u1600 120C  
                            u1606 120E                              u2447 1C5C  
                 _FromMainHigh_MQ 0200                     __CFG_FCMEN$ON 000000  
          ?_block_on_To_msgqueues 0001                              _main 06BE  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            indf1 000FE7                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                     main@msgtype 01B9                        i1_send_msg 102E  
                            pclat 000FFA                       i2_check_msg 1BB6  
                            prodh 000FF4                              prodl 000FF3  
           handle_start@data_read 002F                              start 00BA  
                      i2_recv_msg 0DDC                     __CFG_FOSC2$ON 000000  
                      i2_send_msg 10D8         ToMainHigh_recvmsg@msgtype 00C0  
                 __end_of_ReadADC 1CDC                    send_msg@length 00B4  
   i2start_i2c_slave_reply@length 0033                   __end_of_OpenADC 1464  
     __size_of_timer0_int_handler 007A                       _Delay1KTCYx 1C56  
                           ?_main 0001                             _T0CON 000FD5  
                           i1l401 0074                             i2l111 0F2A  
                           i1l511 1C46                             i2l121 04D8  
                 __end_of___lwmod 13E0                        i1memcpy@d1 0001  
                           i2l123 016A                             i2l141 032A  
                           i2l127 01A8                             i2l155 04EA  
                           i2l149 0456                        i1memcpy@s1 0003  
     FromMainHigh_recvmsg@msgtype 0047                             _RCREG 000FAE  
                           _RCSTA 000FAB                             _TMR0H 000FD7  
                           _TMR1H 000FCF                             _TMR0L 000FD6  
                           _TMR1L 000FCE                             _SPBRG 000FAF  
                           _TRISB 000F93                             _TXSTA 000FAC  
                      i2memcpy@d1 002F                        i2memcpy@s1 0031  
                    ?_init_queues 0001         __size_of_enter_sleep_mode 0006  
                 __end_of_initADC 18D4                   __end_of_in_main 1892  
      ToMainLow_recvmsg@maxlength 00C4           timer0_lthread@msgbuffer 00C8  
                      _ConvertADC 1CEA           i2c_configure_slave@addr 00A8  
                           tablat 000FF5                             status 000FD8  
                __end_ofi1_memcpy 1998                  __end_ofi2_memcpy 19D8  
                 __initialization 19D8                      __end_of_main 09A0  
                      _ReadTimer1 1CA2       __size_of_timer1_int_handler 0048  
      __size_of_ToMainLow_recvmsg 0042        __size_of_ToMainLow_sendmsg 0026  
   __size_of_FromMainHigh_recvmsg 002A             __size_ofi2_in_low_int 002E  
   __size_of_FromMainHigh_sendmsg 0036                            ??_main 00CC  
                 send_msg@msgtype 00B5                     __activetblptr 000002  
                 send_msg@tlength 00B9              __end_of_handle_start 0F76  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                            _ADRESH 000FC4  
                          _ADRESL 000FC3           ??_uart_recv_int_handler 001B  
                          i1l3012 196A                            i1l3018 1986  
                          i1l3042 1066                            i1l3092 006A  
                          i1l3078 12A4                            i2l3130 0F5E  
                          i2l3212 039A                            i2l3214 03DC  
                          i2l3310 0FB0                            i2l3128 0F46  
                          i2l3240 04AC                            i2l3152 0160  
                      _OpenTimer0 1AEE                            i2l3218 03EA  
                          i2l3170 01DC                            i2l3146 014C  
                          i2l3332 0D04                            i2l3260 05D4  
                          i2l3252 054E                            i2l3172 0208  
                          i2l3324 0FF0                            i2l3316 0FBA  
                          i2l3430 1AE4                            i2l3422 1ACE  
                          i2l3246 04EE                            i2l3190 029C  
                          i2l3182 0244                    __CFG_WDTEN$OFF 000000  
                          i2l3336 0D78                            i2l3442 19C6  
                          i2l3354 1110                            i2l3436 19AA  
                          i2l3268 066A                            i2l3188 025C  
                          i2l3286 1778                            i2l3378 0E22  
                          i2l3394 0EAA       __end_of_i2c_configure_slave 1B6A  
                   ??_SleepIfOkay 0033                __size_of_ReadUSART 001E  
                          _OSCCON 000FD3                            _SPBRGH 000FB0  
                          _SSPADD 000FC8                            _SSPBUF 000FC9  
  __size_of_start_i2c_slave_reply 010E                       ?i1_send_msg 000B  
                       ??_ReadADC 0031     __end_of_start_i2c_slave_reply 0BE4  
              timer0_lthread@tptr 00C2                       ?i2_recv_msg 0039  
                       ??_OpenADC 00AA                      i2_in_low_int 1AC0  
                     ?i2_send_msg 0039                    __CFG_XINST$OFF 000000  
              __size_of_OpenUSART 0092                   _i2c_int_handler 00BE  
                OpenTimer0@config 00A8                            _ic_ptr 00CD  
                       ??___lwmod 00AC                     main@msgbuffer 01A2  
                __end_of_init_i2c 1714                            _memcpy 1714  
                          clear_0 19DE                            clear_1 19EA  
                          _uc_ptr 004D                            main@ic 01BB  
                          main@uc 01B4                  __end_of_recv_msg 0AD6  
     start_i2c_slave_reply@length 00AC                         ??_initADC 00AD  
                       ??_in_main 00AE                  __end_of_send_msg 0CE8  
                 initADC@ADCValue 00AF             timer0_int_handler@val 0084  
         i2c_int_handler@i2c_data 0092                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                     init_queue@i 00AB          ?i2_start_i2c_slave_reply 002F  
        ToMainLow_recvmsg@msgtype 00C0              __size_of_in_high_int 0012  
                     ?_ConvertADC 0001           returnADCValue@returnVal 00AA  
                 __CFG_FOSC$HSPLL 000000                        __accesstop 0080  
         __end_of__initialization 1A0C        __end_of_ToMainHigh_recvmsg 1958  
      __end_of_ToMainHigh_sendmsg 1BB6       __end_of_init_timer1_lthread 1C7E  
             __end_of_SleepIfOkay 17C0                    __pcstackCOMRAM 0001  
                    __pidataBANK0 1CF2            __size_ofi2_in_high_int 000C  
                     ?_ReadTimer1 0001                __size_of_check_msg 0036  
       __size_ofi2_returnADCValue 0020                 __end_of_ReadUSART 1C56  
       timer0_int_handler@msgtype 0082               __size_ofi1_send_msg 00AA  
                       ?i1_memcpy 0001     __size_of_InterruptHandlerHigh 1026  
     __end_of_InterruptHandlerLow 00BA                         ?i2_memcpy 002F  
                   _ToMainHigh_MQ 0136               __size_ofi2_recv_msg 00D2  
                _enter_sleep_mode 1CE4               __size_ofi2_send_msg 00AA  
            timer1_lthread@length 00C6                     ReadUSART@data 0001  
               __end_of_OpenUSART 1356                     check_msg@qptr 00A8  
            timer1_lthread@retval 00CB           ??_block_on_To_msgqueues 00AE  
            __size_of_init_queues 006E                        __pbssBANK1 0100  
                      __pbssBANK2 0200                       ?_OpenTimer0 0001  
                      __pnvCOMRAM 004D           __end_of_i2c_int_handler 06BE  
                    ?i2_check_msg 002F                timer1_lthread@tptr 00C2  
               recv_msg@maxlength 00B4                   recv_msg@msgtype 00B5  
                 recv_msg@tlength 00BC             __size_of_handle_start 00C8  
                    ?_Delay1KTCYx 0001                  WriteTimer0@timer 0031  
                         ?_memcpy 00A8                  WriteTimer1@timer 0003  
                   ??_WriteTimer0 0031                     ??_WriteTimer1 0003  
             __size_of_ConvertADC 0004           __size_of_timer0_lthread 0072  
         __size_of_timer1_lthread 0072   __end_ofi2_start_i2c_slave_reply 0DDC  
                      ??i1_memcpy 0007                        ??i2_memcpy 0035  
      i2start_i2c_slave_reply@msg 002F                  i1send_msg@length 000D  
                   i2_in_high_int 1CC6                           _SSPCON1 000FC6  
                         _SSPCON2 000FC5                           _SSPSTAT 000FC7  
             __size_of_ReadTimer1 0012                 __end_of_check_msg 1AC0  
                       ?_init_i2c 00A8                       _SleepIfOkay 1772  
                         _ReadADC 1CD2                         ?_recv_msg 00B2  
                         _OpenADC 13E0                        _in_low_int 1808  
                    _handle_start 0EAE                           __Hparam 0000  
                       ?_send_msg 00B2                           __Lparam 0000  
      __end_of_timer0_int_handler 1558                  init_uart_recv@uc 00A8  
                         ___lwmod 1356                     ?i1_ConvertADC 0001  
                 __CFG_STVREN$OFF 000000                           __pcinit 19D8  
                 __size_of_memcpy 005E                        _init_queue 1464  
                         __ramtop 0400               __size_of_OpenTimer0 002A  
                         __ptext0 06BE                           __ptext1 1A16  
                         __ptext2 1558                           __ptext3 15CA  
                         __ptext4 1356                           __ptext5 1A54  
                         __ptext6 0BE4                           __ptext7 0AD6  
                         __ptext8 1BDA                           __ptext9 1C1A  
                       _T0CONbits 000FD5                           _initADC 1892  
                         _in_main 184E               __end_of_WriteTimer0 1CC6  
             __end_of_WriteTimer1 1CA2                    ?i2_in_high_int 002F  
                  OpenADC@config2 00A8           __size_of_returnADCValue 0020  
                  __pintcode_body 0F76      __end_of_FromMainHigh_recvmsg 1B42  
            end_of_initialization 1A0C           timer1_lthread@msgbuffer 00C8  
    __end_of_FromMainHigh_sendmsg 1A8A    __size_of_uart_recv_int_handler 009C  
      FromMainHigh_sendmsg@length 00C1                           memcpy@d 00AE  
                         memcpy@n 00AC                           memcpy@s 00B0  
   __end_of_uart_recv_int_handler 12C4                        ??_init_i2c 00AA  
     i2c_int_handler@data_written 0090                     __Lmediumconst 0000  
                         int_func 0F76                      ??i1_send_msg 0011  
                   ?_uart_lthread 00A8           __size_of_init_uart_recv 001E  
                ?_i2c_int_handler 0001                      ??i2_recv_msg 0040  
                      ??_recv_msg 00B9                      ??i2_send_msg 003F  
                      ??_send_msg 00B8        __end_of_timer1_int_handler 1808  
                       _RCSTAbits 000FAB                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
       ToMainHigh_sendmsg@msgtype 0045                    ??i1_ConvertADC 0001  
                i2_returnADCValue 1BFA                __end_ofi1_send_msg 10D8  
     FromMainHigh_sendmsg@msgtype 00BE                         _TRISCbits 000F94  
              __end_ofi2_recv_msg 0EAE                __end_ofi2_send_msg 1182  
                    ??_ConvertADC 00A8     FromMainHigh_recvmsg@maxlength 004B  
        timer1_int_handler@result 001C                    ??_uart_lthread 00B0  
                       _TXSTAbits 000FAC                        main@length 01BA  
                     ?_in_low_int 00AA             timer0_lthread@msgtype 00C4  
__size_ofi2_start_i2c_slave_reply 00F4             _start_i2c_slave_reply 0AD6  
    __size_of_i2c_configure_slave 0028              __size_ofi2_check_msg 0024  
        __end_of_enter_sleep_mode 1CEA                      ??_ReadTimer1 0003  
              _ToMainHigh_recvmsg 1916                         i1memcpy@d 0007  
              _ToMainHigh_sendmsg 1B90                         i1memcpy@n 0005  
                       i1memcpy@s 0009                    _timer0_lthread 15CA  
                     ?_init_queue 00A8                         i2memcpy@d 0035  
                     _WriteTimer0 1CB4                       _WriteTimer1 1C90  
                       i2memcpy@n 0033                         i2memcpy@s 0037  
              __end_of_ConvertADC 1CEE                    _timer1_lthread 1558  
                  __end_of_memcpy 1772                 _enable_interrupts 1CDC  
            __size_of_Delay1KTCYx 0016               ?_ToMainHigh_recvmsg 00C0  
                 ??i2_in_high_int 0031          i2c_int_handler@data_read 0095  
             ?_ToMainHigh_sendmsg 0045                ?_enable_interrupts 0001  
             start_initialization 19D8                     ??_in_high_int 00AA  
                       _ReadUSART 1C38                 __size_ofi1_memcpy 0040  
               __size_ofi2_memcpy 0040             i2c_int_handler@length 008B  
             ??_enable_interrupts 00A8                      ??_OpenTimer0 00A8  
  __size_of_block_on_To_msgqueues 00A6                __end_of_ReadTimer1 1CB4  
   __end_of_block_on_To_msgqueues 1228                         _OpenUSART 12C4  
    __end_of_InterruptHandlerHigh 102E                        init_i2c@ic 00A8  
            ??_ToMainHigh_recvmsg 00C4              ??_ToMainHigh_sendmsg 0048  
          __end_of_timer0_lthread 163C          i2c_int_handler@error_buf 008D  
       i2returnADCValue@returnVal 0031                       __pdataBANK0 00CF  
          __end_of_timer1_lthread 15CA         __end_of_enable_interrupts 1CE4  
                        ??_memcpy 00AE             timer1_lthread@msgtype 00C4  
            _FromMainHigh_recvmsg 1B18              _FromMainHigh_sendmsg 1A54  
    __size_of_init_timer1_lthread 0012                __end_of_OpenTimer0 1B18  
        i2c_int_handler@msg_ready 0094          i2c_int_handler@msgbuffer 0080  
                     __pbssCOMRAM 004F                        ?_ReadUSART 0001  
                   ??_init_queues 00AC                     __pcstackBANK0 0080  
                   __pcstackBANK1 01A2               __size_of_in_low_int 0046  
        start_i2c_slave_reply@msg 00A8                    _returnADCValue 1BDA  
             __CFG_CCP2MX$DEFAULT 000000              __end_ofi1_ConvertADC 1CF2  
                 Delay1KTCYx@unit 00A8          ToMainLow_sendmsg@msgtype 0017  
    __size_of_InterruptHandlerLow 00A2               __end_of_in_high_int 1C90  
                      ?_OpenUSART 00A8                      ?_SleepIfOkay 0001  
           ToMainLow_recvmsg@data 00C2                      _ToMainLow_MQ 016C  
             __size_of_init_queue 007A                    _init_uart_recv 1C1A  
                        ?_ReadADC 002F                         _check_msg 1A8A  
                       __pnvBANK0 00CD            ?_start_i2c_slave_reply 00A8  
               __size_of_init_i2c 006A                 OpenADC@portconfig 00A9  
                        ?_OpenADC 00A8                      recv_msg@data 00B7  
                    recv_msg@qmsg 00BE                      recv_msg@slot 00BB  
                    recv_msg@qptr 00B2                 __size_of_recv_msg 0136  
                       __pintcode 0008                 __size_of_send_msg 0104  
                 ?_timer0_lthread 00C2                          ?___lwmod 00A8  
           ?_FromMainHigh_recvmsg 0047                   ?_timer1_lthread 00C2  
           ?_FromMainHigh_sendmsg 00BE                       __pintcodelo 0018  
          ToMainHigh_recvmsg@data 00C2              __end_of_uart_lthread 1A54  
                        ?_initADC 0001        i2c_int_handler@msg_to_send 0093  
                        ?_in_main 00AC                 WriteTimer0@timer0 002F  
              _timer0_int_handler 14DE                 WriteTimer1@timer1 0001  
             uart_lthread@msgtype 00AA                          _ADCValue 00CF  
          __end_of_returnADCValue 1BFA             ToMainLow_sendmsg@data 0018  
             ?_timer0_int_handler 0001          __end_ofi2_returnADCValue 1C1A  
                uart_lthread@uptr 00A8            __end_of_init_uart_recv 1C38  
             __end_of_init_queues 16AA                     OpenADC@config 00AC  
                        _LATBbits 000F8A                   i2check_msg@qptr 002F  
                      ?_check_msg 00A8                          _IPR1bits 000F9F  
                        _PIE1bits 000F9D           i2_start_i2c_slave_reply 0CE8  
                   ?i2_in_low_int 0031                          i1u192_20 17C8  
                        i1u192_26 17CA                          _PIR1bits 000F9E  
                        i2u198_40 14E6                          i2u198_46 14E8  
          ToMainHigh_sendmsg@data 0046                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000              ??_timer0_int_handler 004C  
      __size_of_enable_interrupts 0008                 i1send_msg@msgtype 000E  
               i1send_msg@tlength 0012                        _ADCON0bits 000FC2  
            timer0_lthread@length 00C6                _timer1_int_handler 17C0  
                        i1_memcpy 1958              _InterruptHandlerHigh 0008  
                     ??_ReadUSART 0001                          i2_memcpy 1998  
        FromMainHigh_recvmsg@data 0049              timer0_lthread@retval 00CB  
                 ?_returnADCValue 00A8                       _in_high_int 1C7E  
                    send_msg@data 00B6               _i2c_configure_slave 1B42  
                    send_msg@qmsg 00BC                      send_msg@slot 00BB  
                    send_msg@qptr 00B2             uart_lthread@msgbuffer 00AE  
             ?_timer1_int_handler 0001                   ?_init_uart_recv 00A8  
                     ??_OpenUSART 00AA                   OpenUSART@config 00AD  
                  ??i2_in_low_int 0033             _uart_recv_int_handler 1228  
                    ??_in_low_int 00AC                  __size_of_ReadADC 000A  
                        __Hrparam 0000                  __size_of_OpenADC 0084  
            ?_i2c_configure_slave 0001                          __Lrparam 0000  
               ?_enter_sleep_mode 0001            ??_FromMainHigh_recvmsg 004B  
          ??_FromMainHigh_sendmsg 00C1              ??_timer1_int_handler 001B  
        __size_of_i2c_int_handler 0600                ??_enter_sleep_mode 002F  
                __size_of___lwmod 008A                      ??_init_queue 00AA  
                    ?_WriteTimer0 002F                      ?_WriteTimer1 0001  
        FromMainHigh_sendmsg@data 00BF           ToMainLow_sendmsg@length 001A  
               main@t0thread_data 01B0             ?_InterruptHandlerHigh 0001  
                __size_of_initADC 0042                  __size_of_in_main 0044  
           __size_ofi1_ConvertADC 0004                 i2send_msg@msgtype 003C  
     ToMainHigh_recvmsg@maxlength 00C4                 i2send_msg@tlength 0040  
         init_timer1_lthread@tptr 00A8                       _init_queues 163C  
              __end_of_in_low_int 184E                          __ptext10 1C6C  
                        __ptext11 163C                          __ptext20 184E  
                        __ptext12 1464                          __ptext21 1808  
                        __ptext13 16AA                          __ptext30 1AEE  
                        __ptext22 1C7E                          __ptext14 1892  
                        __ptext23 1A8A                          __ptext15 13E0  
                        __ptext40 1CA2                          __ptext32 1CEE  
                        __ptext24 1C56                          __ptext16 1CEA  
                        __ptext33 1228                          __ptext25 18D4  
                        __ptext17 1B42                          __ptext50 1B90  
                        __ptext42 14DE                          __ptext34 1C38  
                        __ptext26 1916                          __ptext18 1CDC  
                        __ptext51 10D8                          __ptext43 1CB4  
                        __ptext35 17C0                          __ptext27 09A0  
                        __ptext19 1182                          __ptext52 1998  
                        __ptext44 1B18                          __ptext36 1C90  
                        __ptext28 1714                          __ptext53 1772  
                        __ptext45 0DDC                          __ptext37 1B6A  
                        __ptext29 12C4                          __ptext54 1AC0  
                        __ptext46 00BE                          __ptext38 102E  
                        __ptext55 1CC6                          __ptext47 0CE8  
                        __ptext39 1958                          __ptext56 1BB6  
                        __ptext48 1BFA                          __ptext57 1CE4  
                        __ptext49 0EAE                          __ptext58 1CD2  
                  i1send_msg@data 000F                    i1send_msg@qmsg 0015  
                  i1send_msg@slot 0014                    i1send_msg@qptr 000B  
              uart_lthread@length 00AC          timer0_int_handler@length 0080  
       ??i2_start_i2c_slave_reply 0031                          _init_i2c 16AA  
             _init_timer1_lthread 1C6C                     __size_of_main 02E2  
                   ??i2_check_msg 0031                 main@t1thread_data 01B2  
                     ??_check_msg 00AA                __end_of_init_queue 14DE  
            __size_of_SleepIfOkay 004E                          _recv_msg 09A0  
           ??_i2c_configure_slave 00A8                          _send_msg 0BE4  
                  init_queue@qptr 00A8             __size_of_uart_lthread 003E  
                  i2recv_msg@data 003E                    i2recv_msg@qmsg 0045  
                   ??_Delay1KTCYx 00A8                    i2recv_msg@slot 0042  
                  i2recv_msg@qptr 0039                      i1_ConvertADC 1CEE  
             _InterruptHandlerLow 0018              ?_init_timer1_lthread 00A8  
                     _OSCTUNEbits 000F9B                        _INTCONbits 000FF2  
                  OpenUSART@spbrg 00A8                          memcpy@d1 00A8  
                        memcpy@s1 00AA             __end_ofi2_in_high_int 1CD2  
    i2c_int_handler@overrun_error 0091                  i2send_msg@length 003B  
                        intlevel1 0000                          intlevel2 0000  
            ?_InterruptHandlerLow 0001           ??_start_i2c_slave_reply 00AA  
                ___lwmod@dividend 00A8            ?_uart_recv_int_handler 0001  
                    _uart_lthread 1A16             _block_on_To_msgqueues 1182  
                   ?_handle_start 0001                  ??_timer0_lthread 00CA  
     __size_of_ToMainHigh_recvmsg 0042       __size_of_ToMainHigh_sendmsg 0026  
                      _OSCCONbits 000FD3                  ??_timer1_lthread 00CA  
        ToMainHigh_sendmsg@length 0048               __end_ofi2_check_msg 1BDA  
           ??_init_timer1_lthread 00AA            ??_InterruptHandlerHigh 0096  
               _ToMainLow_recvmsg 18D4                 _ToMainLow_sendmsg 1B6A  
              main@last_reg_recvd 01AF                   ___lwmod@divisor 00AA  
            __end_ofi2_in_low_int 1AEE                ?_ToMainLow_recvmsg 00C0  
             __end_of_Delay1KTCYx 1C6C                 ??_i2c_int_handler 0049  
                 ___lwmod@counter 00AD                ?_ToMainLow_sendmsg 0017  
                     _SSPCON1bits 000FC6                       _SSPCON2bits 000FC5  
                  i2send_msg@data 003D             ??_InterruptHandlerLow 001E  
             ??_ToMainLow_recvmsg 00C4                    i2send_msg@qmsg 0043  
                  i2send_msg@slot 0042                    i2send_msg@qptr 0039  
             ??_ToMainLow_sendmsg 001A                 ?i2_returnADCValue 002F  
              ??i2_returnADCValue 0031                    ??_handle_start 002F  
InterruptHandlerHigh@pureADCValue 00A6                      _USART_Status 0050  

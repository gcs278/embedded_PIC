

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Sun Feb  9 00:54:19 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    73  0000                     
    74                           	psect	idataBANK0
    75  001B1A                     __pidataBANK0:
    76                           	opt stack 0
    77                           
    78                           ;initializer for _ADCValue
    79  001B1A  0002               	dw	2
    80  0000                     _ADCON0	set	4034
    81  0000                     _ADCON0bits	set	4034
    82  0000                     _ADCON1	set	4033
    83  0000                     _ADCON2	set	4032
    84  0000                     _ADRESH	set	4036
    85  0000                     _ADRESL	set	4035
    86  0000                     _INTCON2bits	set	4081
    87  0000                     _INTCONbits	set	4082
    88  0000                     _IPR1bits	set	3999
    89  0000                     _LATB	set	3978
    90  0000                     _LATBbits	set	3978
    91  0000                     _OSCCON	set	4051
    92  0000                     _OSCCONbits	set	4051
    93  0000                     _OSCTUNEbits	set	3995
    94  0000                     _PIE1bits	set	3997
    95  0000                     _PIR1bits	set	3998
    96  0000                     _RCONbits	set	4048
    97  0000                     _RCREG	set	4014
    98  0000                     _RCSTA	set	4011
    99  0000                     _RCSTAbits	set	4011
   100  0000                     _SPBRG	set	4015
   101  0000                     _SPBRGH	set	4016
   102  0000                     _SSPADD	set	4040
   103  0000                     _SSPBUF	set	4041
   104  0000                     _SSPCON1	set	4038
   105  0000                     _SSPCON1bits	set	4038
   106  0000                     _SSPCON2	set	4037
   107  0000                     _SSPCON2bits	set	4037
   108  0000                     _SSPSTAT	set	4039
   109  0000                     _SSPSTATbits	set	4039
   110  0000                     _T0CON	set	4053
   111  0000                     _T0CONbits	set	4053
   112  0000                     _TMR0H	set	4055
   113  0000                     _TMR0L	set	4054
   114  0000                     _TMR1H	set	4047
   115  0000                     _TMR1L	set	4046
   116  0000                     _TRISB	set	3987
   117  0000                     _TRISCbits	set	3988
   118  0000                     _TXSTA	set	4012
   119  0000                     _TXSTAbits	set	4012
   120                           
   121                           	psect	nvCOMRAM
   122  00004B                     __pnvCOMRAM:
   123                           	opt stack 0
   124  00004B                     _uc_ptr:
   125                           	opt stack 0
   126  00004B                     	ds	2
   127                           
   128                           	psect	nvBANK0
   129  0000CB                     __pnvBANK0:
   130                           	opt stack 0
   131  0000CB                     _ic_ptr:
   132                           	opt stack 0
   133  0000CB                     	ds	2
   134                           
   135                           ; #config settings
   136  0000                     
   137                           	psect	cinit
   138  001836                     __pcinit:
   139                           	opt stack 0
   140  001836                     start_initialization:
   141                           	opt stack 0
   142  001836                     __initialization:
   143                           	opt stack 0
   144                           
   145                           ; Clear objects allocated to BANK2 (54 bytes)
   146  001836  EE02  F000         	lfsr	0,__pbssBANK2
   147  00183A  0E36               	movlw	54
   148  00183C                     clear_0:
   149  00183C  6AEE               	clrf	postinc0,c
   150  00183E  06E8               	decf	wreg,f,c
   151  001840  E1FD               	bnz	clear_0
   152                           
   153                           ; Clear objects allocated to BANK1 (162 bytes)
   154  001842  EE01  F000         	lfsr	0,__pbssBANK1
   155  001846  0EA2               	movlw	162
   156  001848                     clear_1:
   157  001848  6AEE               	clrf	postinc0,c
   158  00184A  06E8               	decf	wreg,f,c
   159  00184C  E1FD               	bnz	clear_1
   160                           
   161                           ; Clear objects allocated to COMRAM (2 bytes)
   162  00184E  6A4E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   163  001850  6A4D               	clrf	__pbssCOMRAM& (0+255),c
   164                           
   165                           ; Initialize objects allocated to BANK0 (2 bytes)
   166                           ; load TBLPTR registers with __pidataBANK0
   167  001852  0E1A               	movlw	low __pidataBANK0
   168  001854  6EF6               	movwf	tblptrl,c
   169  001856  0E1B               	movlw	high __pidataBANK0
   170  001858  6EF7               	movwf	tblptrh,c
   171  00185A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   172  00185C  6EF8               	movwf	tblptru,c
   173  00185E  0009               	tblrd		*+	;fetch initializer
   174  001860  CFF5 F0CD          	movff	tablat,__pdataBANK0
   175  001864  0009               	tblrd		*+	;fetch initializer
   176  001866  CFF5 F0CE          	movff	tablat,__pdataBANK0+1
   177  00186A                     end_of_initialization:
   178                           	opt stack 0
   179  00186A                     __end_of__initialization:
   180                           	opt stack 0
   181  00186A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   182  00186C  6EF8               	movwf	tblptru,c
   183  00186E  0100               	movlb	0
   184  001870  EF59  F003         	goto	_main	;jump to C main() function
   185                           tblptru	equ	0xFF8
   186                           tblptrh	equ	0xFF7
   187                           tblptrl	equ	0xFF6
   188                           tablat	equ	0xFF5
   189                           postinc0	equ	0xFEE
   190                           wreg	equ	0xFE8
   191                           
   192                           	psect	bssCOMRAM
   193  00004D                     __pbssCOMRAM:
   194                           	opt stack 0
   195  00004D                     _MQ_Main_Willing_to_block:
   196                           	opt stack 0
   197  00004D                     	ds	1
   198  00004E                     _USART_Status:
   199                           	opt stack 0
   200  00004E                     	ds	1
   201                           tblptru	equ	0xFF8
   202                           tblptrh	equ	0xFF7
   203                           tblptrl	equ	0xFF6
   204                           tablat	equ	0xFF5
   205                           postinc0	equ	0xFEE
   206                           wreg	equ	0xFE8
   207                           
   208                           	psect	dataBANK0
   209  0000CD                     __pdataBANK0:
   210                           	opt stack 0
   211  0000CD                     _ADCValue:
   212                           	opt stack 0
   213  0000CD                     	ds	2
   214                           tblptru	equ	0xFF8
   215                           tblptrh	equ	0xFF7
   216                           tblptrl	equ	0xFF6
   217                           tablat	equ	0xFF5
   218                           postinc0	equ	0xFEE
   219                           wreg	equ	0xFE8
   220                           
   221                           	psect	bssBANK1
   222  000100                     __pbssBANK1:
   223                           	opt stack 0
   224  000100                     _FromMainLow_MQ:
   225                           	opt stack 0
   226  000100                     	ds	54
   227  000136                     _ToMainHigh_MQ:
   228                           	opt stack 0
   229  000136                     	ds	54
   230  00016C                     _ToMainLow_MQ:
   231                           	opt stack 0
   232  00016C                     	ds	54
   233                           tblptru	equ	0xFF8
   234                           tblptrh	equ	0xFF7
   235                           tblptrl	equ	0xFF6
   236                           tablat	equ	0xFF5
   237                           postinc0	equ	0xFEE
   238                           wreg	equ	0xFE8
   239                           
   240                           	psect	bssBANK2
   241  000200                     __pbssBANK2:
   242                           	opt stack 0
   243  000200                     _FromMainHigh_MQ:
   244                           	opt stack 0
   245  000200                     	ds	54
   246                           tblptru	equ	0xFF8
   247                           tblptrh	equ	0xFF7
   248                           tblptrl	equ	0xFF6
   249                           tablat	equ	0xFF5
   250                           postinc0	equ	0xFEE
   251                           wreg	equ	0xFE8
   252                           
   253                           	psect	cstackBANK1
   254  0001A2                     __pcstackBANK1:
   255                           	opt stack 0
   256  0001A2                     main@msgbuffer:
   257                           	opt stack 0
   258                           
   259                           ; 11 bytes @ 0x0
   260  0001A2                     	ds	11
   261  0001AD                     main@uthread_data:
   262                           	opt stack 0
   263                           
   264                           ; 2 bytes @ 0xB
   265  0001AD                     	ds	2
   266  0001AF                     main@last_reg_recvd:
   267                           	opt stack 0
   268                           
   269                           ; 1 bytes @ 0xD
   270  0001AF                     	ds	1
   271  0001B0                     main@t1thread_data:
   272                           	opt stack 0
   273                           
   274                           ; 2 bytes @ 0xE
   275  0001B0                     	ds	2
   276  0001B2                     main@t0thread_data:
   277                           	opt stack 0
   278                           
   279                           ; 2 bytes @ 0x10
   280  0001B2                     	ds	2
   281  0001B4                     main@uc:
   282                           	opt stack 0
   283                           
   284                           ; 5 bytes @ 0x12
   285  0001B4                     	ds	5
   286  0001B9                     main@msgtype:
   287                           	opt stack 0
   288                           
   289                           ; 1 bytes @ 0x17
   290  0001B9                     	ds	1
   291  0001BA                     main@length:
   292                           	opt stack 0
   293                           
   294                           ; 1 bytes @ 0x18
   295  0001BA                     	ds	1
   296  0001BB                     main@ic:
   297                           	opt stack 0
   298                           
   299                           ; 28 bytes @ 0x19
   300  0001BB                     	ds	28
   301                           tblptru	equ	0xFF8
   302                           tblptrh	equ	0xFF7
   303                           tblptrl	equ	0xFF6
   304                           tablat	equ	0xFF5
   305                           postinc0	equ	0xFEE
   306                           wreg	equ	0xFE8
   307                           
   308                           	psect	cstackBANK0
   309  000080                     __pcstackBANK0:
   310                           	opt stack 0
   311  000080                     i2c_int_handler@msgbuffer:
   312                           	opt stack 0
   313                           
   314                           ; 11 bytes @ 0x0
   315  000080                     	ds	11
   316  00008B                     i2c_int_handler@length:
   317                           	opt stack 0
   318                           
   319                           ; 2 bytes @ 0xB
   320  00008B                     	ds	2
   321  00008D                     i2c_int_handler@error_buf:
   322                           	opt stack 0
   323                           
   324                           ; 3 bytes @ 0xD
   325  00008D                     	ds	3
   326  000090                     i2c_int_handler@data_written:
   327                           	opt stack 0
   328                           
   329                           ; 1 bytes @ 0x10
   330  000090                     	ds	1
   331  000091                     i2c_int_handler@overrun_error:
   332                           	opt stack 0
   333                           
   334                           ; 1 bytes @ 0x11
   335  000091                     	ds	1
   336  000092                     i2c_int_handler@i2c_data:
   337                           	opt stack 0
   338                           
   339                           ; 1 bytes @ 0x12
   340  000092                     	ds	1
   341  000093                     i2c_int_handler@msg_to_send:
   342                           	opt stack 0
   343                           
   344                           ; 1 bytes @ 0x13
   345  000093                     	ds	1
   346  000094                     i2c_int_handler@msg_ready:
   347                           	opt stack 0
   348                           
   349                           ; 1 bytes @ 0x14
   350  000094                     	ds	1
   351  000095                     i2c_int_handler@data_read:
   352                           	opt stack 0
   353                           
   354                           ; 1 bytes @ 0x15
   355  000095                     	ds	1
   356  000096                     ??_InterruptHandlerHigh:
   357                           
   358                           ; 0 bytes @ 0x16
   359  000096                     	ds	16
   360  0000A6                     ?_returnADCValue:
   361                           	opt stack 0
   362  0000A6                     ?_in_high_int:
   363                           	opt stack 0
   364  0000A6                     ?___lwmod:
   365                           	opt stack 0
   366  0000A6                     i2c_configure_slave@addr:
   367                           	opt stack 0
   368  0000A6                     OpenADC@config2:
   369                           	opt stack 0
   370  0000A6                     OpenTimer0@config:
   371                           	opt stack 0
   372  0000A6                     Delay1KTCYx@unit:
   373                           	opt stack 0
   374  0000A6                     uart_lthread@uptr:
   375                           	opt stack 0
   376  0000A6                     init_timer1_lthread@tptr:
   377                           	opt stack 0
   378  0000A6                     init_timer0_lthread@tptr:
   379                           	opt stack 0
   380  0000A6                     init_uart_recv@uc:
   381                           	opt stack 0
   382  0000A6                     start_i2c_slave_reply@msg:
   383                           	opt stack 0
   384  0000A6                     init_i2c@ic:
   385                           	opt stack 0
   386  0000A6                     init_queue@qptr:
   387                           	opt stack 0
   388  0000A6                     check_msg@qptr:
   389                           	opt stack 0
   390  0000A6                     OpenUSART@spbrg:
   391                           	opt stack 0
   392  0000A6                     ___lwmod@dividend:
   393                           	opt stack 0
   394  0000A6                     memcpy@d1:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0x26
   398  0000A6                     	ds	1
   399  0000A7                     OpenADC@portconfig:
   400                           	opt stack 0
   401                           
   402                           ; 1 bytes @ 0x27
   403  0000A7                     	ds	1
   404  0000A8                     ??_OpenADC:
   405  0000A8                     ??_OpenUSART:
   406  0000A8                     ??_start_i2c_slave_reply:
   407  0000A8                     ??_init_queue:
   408  0000A8                     ??_check_msg:
   409  0000A8                     ?_in_low_int:
   410                           	opt stack 0
   411  0000A8                     uart_lthread@msgtype:
   412                           	opt stack 0
   413  0000A8                     returnADCValue@temp:
   414                           	opt stack 0
   415  0000A8                     ___lwmod@divisor:
   416                           	opt stack 0
   417  0000A8                     memcpy@s1:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x28
   421  0000A8                     	ds	1
   422  0000A9                     init_queue@i:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0x29
   426  0000A9                     	ds	1
   427  0000AA                     ??_init_queues:
   428  0000AA                     ??___lwmod:
   429  0000AA                     ?_in_main:
   430                           	opt stack 0
   431  0000AA                     start_i2c_slave_reply@length:
   432                           	opt stack 0
   433  0000AA                     OpenADC@config:
   434                           	opt stack 0
   435  0000AA                     uart_lthread@length:
   436                           	opt stack 0
   437  0000AA                     memcpy@n:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x2A
   441  0000AA                     	ds	1
   442  0000AB                     ??_initADC:
   443  0000AB                     OpenUSART@config:
   444                           	opt stack 0
   445  0000AB                     ___lwmod@counter:
   446                           	opt stack 0
   447                           
   448                           ; 1 bytes @ 0x2B
   449  0000AB                     	ds	1
   450  0000AC                     ??_block_on_To_msgqueues:
   451  0000AC                     uart_lthread@msgbuffer:
   452                           	opt stack 0
   453  0000AC                     memcpy@d:
   454                           	opt stack 0
   455                           
   456                           ; 2 bytes @ 0x2C
   457  0000AC                     	ds	1
   458  0000AD                     initADC@ADCValue:
   459                           	opt stack 0
   460                           
   461                           ; 2 bytes @ 0x2D
   462  0000AD                     	ds	1
   463  0000AE                     memcpy@s:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x2E
   467  0000AE                     	ds	2
   468  0000B0                     send_msg@qptr:
   469                           	opt stack 0
   470  0000B0                     recv_msg@qptr:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x30
   474  0000B0                     	ds	2
   475  0000B2                     send_msg@length:
   476                           	opt stack 0
   477  0000B2                     recv_msg@maxlength:
   478                           	opt stack 0
   479                           
   480                           ; 1 bytes @ 0x32
   481  0000B2                     	ds	1
   482  0000B3                     send_msg@msgtype:
   483                           	opt stack 0
   484  0000B3                     recv_msg@msgtype:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x33
   488  0000B3                     	ds	1
   489  0000B4                     send_msg@data:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0x34
   493  0000B4                     	ds	1
   494  0000B5                     recv_msg@data:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x35
   498  0000B5                     	ds	1
   499  0000B6                     ??_send_msg:
   500                           
   501                           ; 0 bytes @ 0x36
   502  0000B6                     	ds	1
   503  0000B7                     ??_recv_msg:
   504  0000B7                     send_msg@tlength:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x37
   508  0000B7                     	ds	2
   509  0000B9                     send_msg@slot:
   510                           	opt stack 0
   511  0000B9                     recv_msg@slot:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0x39
   515  0000B9                     	ds	1
   516  0000BA                     send_msg@qmsg:
   517                           	opt stack 0
   518  0000BA                     recv_msg@tlength:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x3A
   522  0000BA                     	ds	2
   523  0000BC                     FromMainHigh_sendmsg@msgtype:
   524                           	opt stack 0
   525  0000BC                     recv_msg@qmsg:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x3C
   529  0000BC                     	ds	1
   530  0000BD                     FromMainHigh_sendmsg@data:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x3D
   534  0000BD                     	ds	1
   535  0000BE                     ToMainLow_recvmsg@msgtype:
   536                           	opt stack 0
   537  0000BE                     ToMainHigh_recvmsg@msgtype:
   538                           	opt stack 0
   539                           
   540                           ; 2 bytes @ 0x3E
   541  0000BE                     	ds	1
   542  0000BF                     FromMainHigh_sendmsg@length:
   543                           	opt stack 0
   544                           
   545                           ; 1 bytes @ 0x3F
   546  0000BF                     	ds	1
   547  0000C0                     timer1_lthread@tptr:
   548                           	opt stack 0
   549  0000C0                     timer0_lthread@tptr:
   550                           	opt stack 0
   551  0000C0                     ToMainLow_recvmsg@data:
   552                           	opt stack 0
   553  0000C0                     ToMainHigh_recvmsg@data:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0x40
   557  0000C0                     	ds	2
   558  0000C2                     ToMainLow_recvmsg@maxlength:
   559                           	opt stack 0
   560  0000C2                     ToMainHigh_recvmsg@maxlength:
   561                           	opt stack 0
   562  0000C2                     timer1_lthread@msgtype:
   563                           	opt stack 0
   564  0000C2                     timer0_lthread@msgtype:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x42
   568  0000C2                     	ds	2
   569  0000C4                     timer1_lthread@length:
   570                           	opt stack 0
   571  0000C4                     timer0_lthread@length:
   572                           	opt stack 0
   573                           
   574                           ; 2 bytes @ 0x44
   575  0000C4                     	ds	2
   576  0000C6                     timer1_lthread@msgbuffer:
   577                           	opt stack 0
   578  0000C6                     timer0_lthread@msgbuffer:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x46
   582  0000C6                     	ds	2
   583  0000C8                     ??_timer1_lthread:
   584  0000C8                     ??_timer0_lthread:
   585                           
   586                           ; 0 bytes @ 0x48
   587  0000C8                     	ds	1
   588  0000C9                     timer1_lthread@retval:
   589                           	opt stack 0
   590  0000C9                     timer0_lthread@retval:
   591                           	opt stack 0
   592                           
   593                           ; 1 bytes @ 0x49
   594  0000C9                     	ds	1
   595  0000CA                     ??_main:
   596                           
   597                           ; 0 bytes @ 0x4A
   598  0000CA                     	ds	1
   599                           tblptru	equ	0xFF8
   600                           tblptrh	equ	0xFF7
   601                           tblptrl	equ	0xFF6
   602                           tablat	equ	0xFF5
   603                           postinc0	equ	0xFEE
   604                           wreg	equ	0xFE8
   605                           
   606                           	psect	cstackCOMRAM
   607  000001                     __pcstackCOMRAM:
   608                           	opt stack 0
   609  000001                     ReadUSART@data:
   610                           	opt stack 0
   611  000001                     i1memcpy@d1:
   612                           	opt stack 0
   613                           
   614                           ; 2 bytes @ 0x0
   615  000001                     	ds	2
   616  000003                     i1memcpy@s1:
   617                           	opt stack 0
   618                           
   619                           ; 2 bytes @ 0x2
   620  000003                     	ds	2
   621  000005                     i1memcpy@n:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0x4
   625  000005                     	ds	2
   626  000007                     i1memcpy@d:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0x6
   630  000007                     	ds	2
   631  000009                     i1memcpy@s:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0x8
   635  000009                     	ds	2
   636  00000B                     i1send_msg@qptr:
   637                           	opt stack 0
   638                           
   639                           ; 2 bytes @ 0xA
   640  00000B                     	ds	2
   641  00000D                     i1send_msg@length:
   642                           	opt stack 0
   643                           
   644                           ; 1 bytes @ 0xC
   645  00000D                     	ds	1
   646  00000E                     i1send_msg@msgtype:
   647                           	opt stack 0
   648                           
   649                           ; 1 bytes @ 0xD
   650  00000E                     	ds	1
   651  00000F                     i1send_msg@data:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0xE
   655  00000F                     	ds	2
   656  000011                     ??i1_send_msg:
   657                           
   658                           ; 0 bytes @ 0x10
   659  000011                     	ds	1
   660  000012                     i1send_msg@tlength:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x11
   664  000012                     	ds	2
   665  000014                     i1send_msg@slot:
   666                           	opt stack 0
   667                           
   668                           ; 1 bytes @ 0x13
   669  000014                     	ds	1
   670  000015                     i1send_msg@qmsg:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x14
   674  000015                     	ds	2
   675  000017                     ToMainLow_sendmsg@msgtype:
   676                           	opt stack 0
   677                           
   678                           ; 1 bytes @ 0x16
   679  000017                     	ds	1
   680  000018                     ToMainLow_sendmsg@data:
   681                           	opt stack 0
   682                           
   683                           ; 2 bytes @ 0x17
   684  000018                     	ds	2
   685  00001A                     ToMainLow_sendmsg@length:
   686                           	opt stack 0
   687                           
   688                           ; 1 bytes @ 0x19
   689  00001A                     	ds	1
   690  00001B                     ??_uart_recv_int_handler:
   691                           
   692                           ; 0 bytes @ 0x1A
   693  00001B                     	ds	1
   694  00001C                     ??_InterruptHandlerLow:
   695                           
   696                           ; 0 bytes @ 0x1B
   697  00001C                     	ds	17
   698  00002D                     ?_ReadADC:
   699                           	opt stack 0
   700  00002D                     ?i2_returnADCValue:
   701                           	opt stack 0
   702  00002D                     ?i2_in_high_int:
   703                           	opt stack 0
   704  00002D                     handle_start@data_read:
   705                           	opt stack 0
   706  00002D                     i2start_i2c_slave_reply@msg:
   707                           	opt stack 0
   708  00002D                     i2check_msg@qptr:
   709                           	opt stack 0
   710  00002D                     i2memcpy@d1:
   711                           	opt stack 0
   712                           
   713                           ; 2 bytes @ 0x2C
   714  00002D                     	ds	2
   715  00002F                     ??i2_start_i2c_slave_reply:
   716  00002F                     ??i2_check_msg:
   717  00002F                     ?i2_in_low_int:
   718                           	opt stack 0
   719  00002F                     i2returnADCValue@temp:
   720                           	opt stack 0
   721  00002F                     i2memcpy@s1:
   722                           	opt stack 0
   723                           
   724                           ; 2 bytes @ 0x2E
   725  00002F                     	ds	2
   726  000031                     i2start_i2c_slave_reply@length:
   727                           	opt stack 0
   728  000031                     i2memcpy@n:
   729                           	opt stack 0
   730                           
   731                           ; 2 bytes @ 0x30
   732  000031                     	ds	2
   733  000033                     i2memcpy@d:
   734                           	opt stack 0
   735                           
   736                           ; 2 bytes @ 0x32
   737  000033                     	ds	2
   738  000035                     i2memcpy@s:
   739                           	opt stack 0
   740                           
   741                           ; 2 bytes @ 0x34
   742  000035                     	ds	2
   743  000037                     i2send_msg@qptr:
   744                           	opt stack 0
   745                           
   746                           ; 2 bytes @ 0x36
   747  000037                     	ds	2
   748  000039                     i2send_msg@length:
   749                           	opt stack 0
   750                           
   751                           ; 1 bytes @ 0x38
   752  000039                     	ds	1
   753  00003A                     i2send_msg@msgtype:
   754                           	opt stack 0
   755                           
   756                           ; 1 bytes @ 0x39
   757  00003A                     	ds	1
   758  00003B                     i2send_msg@data:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x3A
   762  00003B                     	ds	2
   763  00003D                     ??i2_send_msg:
   764                           
   765                           ; 0 bytes @ 0x3C
   766  00003D                     	ds	1
   767  00003E                     i2send_msg@tlength:
   768                           	opt stack 0
   769                           
   770                           ; 2 bytes @ 0x3D
   771  00003E                     	ds	2
   772  000040                     i2send_msg@slot:
   773                           	opt stack 0
   774                           
   775                           ; 1 bytes @ 0x3F
   776  000040                     	ds	1
   777  000041                     i2send_msg@qmsg:
   778                           	opt stack 0
   779                           
   780                           ; 2 bytes @ 0x40
   781  000041                     	ds	2
   782  000043                     ToMainHigh_sendmsg@msgtype:
   783                           	opt stack 0
   784                           
   785                           ; 1 bytes @ 0x42
   786  000043                     	ds	1
   787  000044                     ToMainHigh_sendmsg@data:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0x43
   791  000044                     	ds	2
   792  000046                     ToMainHigh_sendmsg@length:
   793                           	opt stack 0
   794                           
   795                           ; 1 bytes @ 0x45
   796  000046                     	ds	1
   797  000047                     ??_i2c_int_handler:
   798                           
   799                           ; 0 bytes @ 0x46
   800  000047                     	ds	2
   801  000049                     InterruptHandlerHigh@pureADCValue:
   802                           	opt stack 0
   803                           
   804                           ; 2 bytes @ 0x48
   805  000049                     	ds	2
   806                           tblptru	equ	0xFF8
   807                           tblptrh	equ	0xFF7
   808                           tblptrl	equ	0xFF6
   809                           tablat	equ	0xFF5
   810                           postinc0	equ	0xFEE
   811                           wreg	equ	0xFE8
   812                           
   813 ;;
   814 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   815 ;;
   816 ;; *************** function _main *****************
   817 ;; Defined at:
   818 ;;		line 111 in file "../src/main.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;  ic             28   25[BANK1 ] struct __i2c_comm
   823 ;;  msgbuffer      11    0[BANK1 ] unsigned char [11]
   824 ;;  uc              5   18[BANK1 ] struct __uart_comm
   825 ;;  t0thread_dat    2   16[BANK1 ] struct __timer0_thread_s
   826 ;;  t1thread_dat    2   14[BANK1 ] struct __timer1_thread_s
   827 ;;  uthread_data    2   11[BANK1 ] struct __uart_thread_str
   828 ;;  length          1   24[BANK1 ] char 
   829 ;;  msgtype         1   23[BANK1 ] unsigned char 
   830 ;;  last_reg_rec    1   13[BANK1 ] unsigned char 
   831 ;;  i               1    0        unsigned char 
   832 ;;  c               1    0        unsigned char 
   833 ;; Return value:  Size  Location     Type
   834 ;;		None               void
   835 ;; Registers used:
   836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   842 ;;      Params:         0       0       0       0       0
   843 ;;      Locals:         0       0      53       0       0
   844 ;;      Temps:          0       1       0       0       0
   845 ;;      Totals:         0       1      53       0       0
   846 ;;Total ram usage:       54 bytes
   847 ;; Hardware stack levels required when called:   14
   848 ;; This function calls:
   849 ;;		_OpenTimer0
   850 ;;		_OpenUSART
   851 ;;		_ToMainHigh_recvmsg
   852 ;;		_ToMainLow_recvmsg
   853 ;;		_block_on_To_msgqueues
   854 ;;		_enable_interrupts
   855 ;;		_i2c_configure_slave
   856 ;;		_initADC
   857 ;;		_init_i2c
   858 ;;		_init_queues
   859 ;;		_init_timer0_lthread
   860 ;;		_init_timer1_lthread
   861 ;;		_init_uart_recv
   862 ;;		_returnADCValue
   863 ;;		_start_i2c_slave_reply
   864 ;;		_timer0_lthread
   865 ;;		_timer1_lthread
   866 ;;		_uart_lthread
   867 ;; This function is called by:
   868 ;;		Startup code after reset
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           	psect	text0
   873  0006B2                     __ptext0:
   874                           	opt stack 0
   875  0006B2                     _main:
   876                           	opt stack 16
   877                           
   878                           ;main.c: 112: OSCCON = 0x82;
   879                           
   880                           ;incstack = 0
   881  0006B2  0E82               	movlw	130
   882  0006B4  6ED3               	movwf	4051,c	;volatile
   883                           
   884                           ;main.c: 113: OSCTUNEbits.PLLEN = 0;
   885  0006B6  9C9B               	bcf	3995,6,c	;volatile
   886                           
   887                           ;main.c: 115: char c;
   888                           ;main.c: 116: signed char length;
   889                           ;main.c: 117: unsigned char msgtype;
   890                           ;main.c: 118: unsigned char last_reg_recvd;
   891                           ;main.c: 119: uart_comm uc;
   892                           ;main.c: 120: i2c_comm ic;
   893                           ;main.c: 121: unsigned char msgbuffer[10 + 1];
   894                           ;main.c: 122: unsigned char i;
   895                           ;main.c: 123: uart_thread_struct uthread_data;
   896                           ;main.c: 124: timer1_thread_struct t1thread_data;
   897                           ;main.c: 125: timer0_thread_struct t0thread_data;
   898                           ;main.c: 132: OSCCON = 0x82;
   899  0006B8  0E82               	movlw	130
   900  0006BA  6ED3               	movwf	4051,c	;volatile
   901                           
   902                           ;main.c: 133: OSCTUNEbits.PLLEN = 0;
   903  0006BC  9C9B               	bcf	3995,6,c	;volatile
   904                           
   905                           ;main.c: 137: init_uart_recv(&uc);
   906  0006BE  0101               	movlb	1	; () banked
   907  0006C0  0E01               	movlw	high main@uc
   908  0006C2  0100               	movlb	0	; () banked
   909  0006C4  0100               	movlb	0	; () banked
   910  0006C6  6FA7               	movwf	(init_uart_recv@uc+1)& (0+255),b
   911  0006C8  0101               	movlb	1	; () banked
   912  0006CA  0EB4               	movlw	low main@uc
   913  0006CC  0100               	movlb	0	; () banked
   914  0006CE  0100               	movlb	0	; () banked
   915  0006D0  6FA6               	movwf	init_uart_recv@uc& (0+255),b
   916  0006D2  EC20  F00D         	call	_init_uart_recv	;wreg free
   917                           
   918                           ;main.c: 140: init_i2c(&ic);
   919  0006D6  0101               	movlb	1	; () banked
   920  0006D8  0E01               	movlw	high main@ic
   921  0006DA  0100               	movlb	0	; () banked
   922  0006DC  0100               	movlb	0	; () banked
   923  0006DE  6FA7               	movwf	(init_i2c@ic+1)& (0+255),b
   924  0006E0  0101               	movlb	1	; () banked
   925  0006E2  0EBB               	movlw	low main@ic
   926  0006E4  0100               	movlb	0	; () banked
   927  0006E6  0100               	movlb	0	; () banked
   928  0006E8  6FA6               	movwf	init_i2c@ic& (0+255),b
   929  0006EA  ECA8  F00A         	call	_init_i2c	;wreg free
   930                           
   931                           ;main.c: 143: init_timer1_lthread(&t1thread_data);
   932  0006EE  0101               	movlb	1	; () banked
   933  0006F0  0E01               	movlw	high main@t1thread_data
   934  0006F2  0100               	movlb	0	; () banked
   935  0006F4  0100               	movlb	0	; () banked
   936  0006F6  6FA7               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   937  0006F8  0101               	movlb	1	; () banked
   938  0006FA  0EB0               	movlw	low main@t1thread_data
   939  0006FC  0100               	movlb	0	; () banked
   940  0006FE  0100               	movlb	0	; () banked
   941  000700  6FA6               	movwf	init_timer1_lthread@tptr& (0+255),b
   942  000702  EC58  F00D         	call	_init_timer1_lthread	;wreg free
   943                           
   944                           ;main.c: 145: init_timer0_lthread(&t0thread_data);
   945  000706  0101               	movlb	1	; () banked
   946  000708  0E01               	movlw	high main@t0thread_data
   947  00070A  0100               	movlb	0	; () banked
   948  00070C  0100               	movlb	0	; () banked
   949  00070E  6FA7               	movwf	(init_timer0_lthread@tptr+1)& (0+255),b
   950  000710  0101               	movlb	1	; () banked
   951  000712  0EB2               	movlw	low main@t0thread_data
   952  000714  0100               	movlb	0	; () banked
   953  000716  0100               	movlb	0	; () banked
   954  000718  6FA6               	movwf	init_timer0_lthread@tptr& (0+255),b
   955  00071A  EC61  F00D         	call	_init_timer0_lthread	;wreg free
   956                           
   957                           ;main.c: 147: init_queues();
   958  00071E  EC71  F00A         	call	_init_queues	;wreg free
   959                           
   960                           ;main.c: 149: initADC();
   961  000722  EC78  F00B         	call	_initADC	;wreg free
   962                           
   963                           ;main.c: 152: TRISB = 0x0;
   964  000726  0E00               	movlw	0
   965  000728  6E93               	movwf	3987,c	;volatile
   966                           
   967                           ;main.c: 153: LATB = 0x0;
   968  00072A  0E00               	movlw	0
   969  00072C  6E8A               	movwf	3978,c	;volatile
   970                           
   971                           ;main.c: 165: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11111111);
   972  00072E  0EDF               	movlw	223
   973  000730  ECBF  F00C         	call	_OpenTimer0
   974                           
   975                           ;main.c: 170: enable_interrupts();
   976  000734  EC73  F00D         	call	_enable_interrupts	;wreg free
   977                           
   978                           ;main.c: 175: IPR1bits.TMR1IP = 0;
   979  000738  909F               	bcf	3999,0,c	;volatile
   980                           
   981                           ;main.c: 177: IPR1bits.RCIP = 0;
   982  00073A  9A9F               	bcf	3999,5,c	;volatile
   983                           
   984                           ;main.c: 179: IPR1bits.SSPIP = 1;
   985  00073C  869F               	bsf	3999,3,c	;volatile
   986                           
   987                           ;main.c: 181: IPR1bits.ADIP = 1;
   988  00073E  8C9F               	bsf	3999,6,c	;volatile
   989                           
   990                           ;main.c: 191: i2c_configure_slave(0x9E);
   991  000740  0E9E               	movlw	158
   992  000742  ECD4  F00C         	call	_i2c_configure_slave
   993                           
   994                           ;main.c: 204: PIE1bits.SSPIE = 1;
   995  000746  869D               	bsf	3997,3,c	;volatile
   996                           
   997                           ;main.c: 207: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
   998                           ;main.c: 208: 0b11111111 & 0b11101111, 0x19);
   999  000748  0E00               	movlw	0
  1000  00074A  0100               	movlb	0	; () banked
  1001  00074C  0100               	movlb	0	; () banked
  1002  00074E  6FA7               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1003  000750  0E19               	movlw	25
  1004  000752  0100               	movlb	0	; () banked
  1005  000754  6FA6               	movwf	OpenUSART@spbrg& (0+255),b
  1006  000756  0E6C               	movlw	108
  1007  000758  ECF2  F008         	call	_OpenUSART
  1008  00075C                     l2697:
  1009                           
  1010                           ;main.c: 232: block_on_To_msgqueues();
  1011  00075C  EC51  F008         	call	_block_on_To_msgqueues	;wreg free
  1012                           
  1013                           ;main.c: 239: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1014  000760  0101               	movlb	1	; () banked
  1015  000762  0E01               	movlw	high main@msgtype
  1016  000764  0100               	movlb	0	; () banked
  1017  000766  0100               	movlb	0	; () banked
  1018  000768  6FBF               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1019  00076A  0101               	movlb	1	; () banked
  1020  00076C  0EB9               	movlw	low main@msgtype
  1021  00076E  0100               	movlb	0	; () banked
  1022  000770  0100               	movlb	0	; () banked
  1023  000772  6FBE               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1024  000774  0101               	movlb	1	; () banked
  1025  000776  0E01               	movlw	high main@msgbuffer
  1026  000778  0100               	movlb	0	; () banked
  1027  00077A  0100               	movlb	0	; () banked
  1028  00077C  6FC1               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1029  00077E  0101               	movlb	1	; () banked
  1030  000780  0EA2               	movlw	low main@msgbuffer
  1031  000782  0100               	movlb	0	; () banked
  1032  000784  0100               	movlb	0	; () banked
  1033  000786  6FC0               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1034  000788  0E0A               	movlw	10
  1035  00078A  ECBA  F00B         	call	_ToMainHigh_recvmsg
  1036  00078E  0101               	movlb	1	; () banked
  1037  000790  0101               	movlb	1	; () banked
  1038  000792  6FBA               	movwf	main@length& (0+255),b
  1039                           
  1040                           ; BSR set to: 1
  1041                           ;main.c: 240: if (length < 0) {
  1042  000794  0101               	movlb	1	; () banked
  1043  000796  0101               	movlb	1	; () banked
  1044  000798  BFBA               	btfsc	main@length& (0+255),7,b
  1045  00079A  D07F               	goto	l2729
  1046  00079C  D06F               	goto	l2727
  1047  00079E                     l2705:
  1048                           
  1049                           ; BSR set to: 1
  1050                           ;main.c: 248: {
  1051                           ;main.c: 249: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1052  00079E  0101               	movlb	1	; () banked
  1053  0007A0  0E01               	movlw	high main@t0thread_data
  1054  0007A2  0100               	movlb	0	; () banked
  1055  0007A4  0100               	movlb	0	; () banked
  1056  0007A6  6FC1               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1057  0007A8  0101               	movlb	1	; () banked
  1058  0007AA  0EB2               	movlw	low main@t0thread_data
  1059  0007AC  0100               	movlb	0	; () banked
  1060  0007AE  0100               	movlb	0	; () banked
  1061  0007B0  6FC0               	movwf	timer0_lthread@tptr& (0+255),b
  1062  0007B2  0101               	movlb	1	; () banked
  1063  0007B4  0100               	movlb	0	; () banked
  1064  0007B6  C1B9  F0C2         	movff	main@msgtype,timer0_lthread@msgtype
  1065  0007BA  0100               	movlb	0	; () banked
  1066  0007BC  0100               	movlb	0	; () banked
  1067  0007BE  6BC3               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1068  0007C0  0101               	movlb	1	; () banked
  1069  0007C2  0101               	movlb	1	; () banked
  1070  0007C4  51BA               	movf	main@length& (0+255),w,b
  1071  0007C6  0100               	movlb	0	; () banked
  1072  0007C8  0100               	movlb	0	; () banked
  1073  0007CA  6FC4               	movwf	timer0_lthread@length& (0+255),b
  1074  0007CC  0100               	movlb	0	; () banked
  1075  0007CE  6BC5               	clrf	(timer0_lthread@length+1)& (0+255),b
  1076  0007D0  0100               	movlb	0	; () banked
  1077  0007D2  BFC4               	btfsc	timer0_lthread@length& (0+255),7,b
  1078  0007D4  07C5               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1079  0007D6  0101               	movlb	1	; () banked
  1080  0007D8  0E01               	movlw	high main@msgbuffer
  1081  0007DA  0100               	movlb	0	; () banked
  1082  0007DC  0100               	movlb	0	; () banked
  1083  0007DE  6FC7               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1084  0007E0  0101               	movlb	1	; () banked
  1085  0007E2  0EA2               	movlw	low main@msgbuffer
  1086  0007E4  0100               	movlb	0	; () banked
  1087  0007E6  0100               	movlb	0	; () banked
  1088  0007E8  6FC6               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1089  0007EA  EC38  F00A         	call	_timer0_lthread	;wreg free
  1090                           
  1091                           ;main.c: 250: break;
  1092  0007EE  D055               	goto	l2729
  1093  0007F0                     l327:
  1094                           
  1095                           ;main.c: 253: case 41:
  1096                           ;main.c: 254: {
  1097                           ;main.c: 257: last_reg_recvd = msgbuffer[0];
  1098  0007F0  C1A2  F1AF         	movff	main@msgbuffer,main@last_reg_recvd
  1099                           
  1100                           ;main.c: 258: break;
  1101  0007F4  D052               	goto	l2729
  1102  0007F6                     l2707:
  1103                           
  1104                           ;main.c: 271: {
  1105                           ;main.c: 272: length = 1;
  1106  0007F6  0100               	movlb	0	; () banked
  1107  0007F8  6FCA               	movwf	??_main& (0+255),b
  1108  0007FA  0E01               	movlw	1
  1109  0007FC  0101               	movlb	1	; () banked
  1110  0007FE  0101               	movlb	1	; () banked
  1111  000800  6FBA               	movwf	main@length& (0+255),b
  1112  000802  0100               	movlb	0	; () banked
  1113  000804  51CA               	movf	??_main& (0+255),w,b
  1114                           
  1115                           ; BSR set to: 0
  1116                           ;main.c: 274: msgbuffer[0] = returnADCValue();
  1117  000806  EC8F  F00C         	call	_returnADCValue	;wreg free
  1118  00080A  D015               	goto	L2
  1119  00080C                     l2711:
  1120                           
  1121                           ; BSR set to: 1
  1122                           ;main.c: 279: {
  1123                           ;main.c: 280: length = 1;
  1124  00080C  0100               	movlb	0	; () banked
  1125  00080E  6FCA               	movwf	??_main& (0+255),b
  1126  000810  0E01               	movlw	1
  1127  000812  0101               	movlb	1	; () banked
  1128  000814  0101               	movlb	1	; () banked
  1129  000816  6FBA               	movwf	main@length& (0+255),b
  1130  000818  0100               	movlb	0	; () banked
  1131  00081A  51CA               	movf	??_main& (0+255),w,b
  1132                           
  1133                           ; BSR set to: 0
  1134                           ;main.c: 282: msgbuffer[0] = returnADCValue();
  1135  00081C  EC8F  F00C         	call	_returnADCValue	;wreg free
  1136  000820  D00A               	goto	L2
  1137  000822                     l2715:
  1138                           
  1139                           ; BSR set to: 1
  1140                           ;main.c: 286: {
  1141                           ;main.c: 287: length = 1;
  1142  000822  0100               	movlb	0	; () banked
  1143  000824  6FCA               	movwf	??_main& (0+255),b
  1144  000826  0E01               	movlw	1
  1145  000828  0101               	movlb	1	; () banked
  1146  00082A  0101               	movlb	1	; () banked
  1147  00082C  6FBA               	movwf	main@length& (0+255),b
  1148  00082E  0100               	movlb	0	; () banked
  1149  000830  51CA               	movf	??_main& (0+255),w,b
  1150                           
  1151                           ; BSR set to: 0
  1152                           ;main.c: 289: msgbuffer[0] = returnADCValue();
  1153  000832  EC8F  F00C         	call	_returnADCValue	;wreg free
  1154  000836                     L2:
  1155  000836  0100               	movlb	0	; () banked
  1156  000838  0100               	movlb	0	; () banked
  1157  00083A  51A6               	movf	?_returnADCValue& (0+255),w,b
  1158  00083C  0101               	movlb	1	; () banked
  1159  00083E  0101               	movlb	1	; () banked
  1160  000840  6FA2               	movwf	main@msgbuffer& (0+255),b
  1161                           
  1162                           ;main.c: 290: break;
  1163  000842  D00C               	goto	l2723
  1164  000844                     l2721:
  1165  000844  0101               	movlb	1	; () banked
  1166  000846  0101               	movlb	1	; () banked
  1167  000848  51AF               	movf	main@last_reg_recvd& (0+255),w,b
  1168                           
  1169                           ; Switch size 1, requested type "space"
  1170                           ; Number of cases is 3, Range of values is 168 to 170
  1171                           ; switch strategies available:
  1172                           ; Name         Instructions Cycles
  1173                           ; simple_byte           10     6 (average)
  1174                           ;	Chosen strategy is simple_byte
  1175  00084A  0AA8               	xorlw	168	; case 168
  1176  00084C  B4D8               	btfsc	status,2,c
  1177  00084E  D7DE               	goto	l2711
  1178  000850  0A01               	xorlw	1	; case 169
  1179  000852  B4D8               	btfsc	status,2,c
  1180  000854  D7E6               	goto	l2715
  1181  000856  0A03               	xorlw	3	; case 170
  1182  000858  B4D8               	btfsc	status,2,c
  1183  00085A  D7CD               	goto	l2707
  1184  00085C                     l2723:
  1185                           
  1186                           ; BSR set to: 1
  1187                           ;main.c: 293: start_i2c_slave_reply(length, msgbuffer);
  1188  00085C  0101               	movlb	1	; () banked
  1189  00085E  0E01               	movlw	high main@msgbuffer
  1190  000860  0100               	movlb	0	; () banked
  1191  000862  0100               	movlb	0	; () banked
  1192  000864  6FA7               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1193  000866  0101               	movlb	1	; () banked
  1194  000868  0EA2               	movlw	low main@msgbuffer
  1195  00086A  0100               	movlb	0	; () banked
  1196  00086C  0100               	movlb	0	; () banked
  1197  00086E  6FA6               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1198  000870  0101               	movlb	1	; () banked
  1199  000872  0101               	movlb	1	; () banked
  1200  000874  51BA               	movf	main@length& (0+255),w,b
  1201  000876  EC66  F005         	call	_start_i2c_slave_reply
  1202                           
  1203                           ;main.c: 294: break;
  1204  00087A  D00F               	goto	l2729
  1205  00087C                     l2727:
  1206  00087C  0101               	movlb	1	; () banked
  1207  00087E  0101               	movlb	1	; () banked
  1208  000880  51B9               	movf	main@msgtype& (0+255),w,b
  1209                           
  1210                           ; Switch size 1, requested type "space"
  1211                           ; Number of cases is 4, Range of values is 10 to 42
  1212                           ; switch strategies available:
  1213                           ; Name         Instructions Cycles
  1214                           ; simple_byte           13     7 (average)
  1215                           ;	Chosen strategy is simple_byte
  1216  000882  0A0A               	xorlw	10	; case 10
  1217  000884  B4D8               	btfsc	status,2,c
  1218  000886  D78B               	goto	l2705
  1219  000888  0A22               	xorlw	34	; case 40
  1220  00088A  B4D8               	btfsc	status,2,c
  1221  00088C  D7B1               	goto	l327
  1222  00088E  0A01               	xorlw	1	; case 41
  1223  000890  B4D8               	btfsc	status,2,c
  1224  000892  D7AE               	goto	l327
  1225  000894  0A03               	xorlw	3	; case 42
  1226  000896  B4D8               	btfsc	status,2,c
  1227  000898  D7D5               	goto	l2721
  1228  00089A                     l2729:
  1229                           
  1230                           ;main.c: 302: }
  1231                           ;main.c: 305: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1232  00089A  0101               	movlb	1	; () banked
  1233  00089C  0E01               	movlw	high main@msgtype
  1234  00089E  0100               	movlb	0	; () banked
  1235  0008A0  0100               	movlb	0	; () banked
  1236  0008A2  6FBF               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1237  0008A4  0101               	movlb	1	; () banked
  1238  0008A6  0EB9               	movlw	low main@msgtype
  1239  0008A8  0100               	movlb	0	; () banked
  1240  0008AA  0100               	movlb	0	; () banked
  1241  0008AC  6FBE               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1242  0008AE  0101               	movlb	1	; () banked
  1243  0008B0  0E01               	movlw	high main@msgbuffer
  1244  0008B2  0100               	movlb	0	; () banked
  1245  0008B4  0100               	movlb	0	; () banked
  1246  0008B6  6FC1               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1247  0008B8  0101               	movlb	1	; () banked
  1248  0008BA  0EA2               	movlw	low main@msgbuffer
  1249  0008BC  0100               	movlb	0	; () banked
  1250  0008BE  0100               	movlb	0	; () banked
  1251  0008C0  6FC0               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1252  0008C2  0E0A               	movlw	10
  1253  0008C4  EC99  F00B         	call	_ToMainLow_recvmsg
  1254  0008C8  0101               	movlb	1	; () banked
  1255  0008CA  0101               	movlb	1	; () banked
  1256  0008CC  6FBA               	movwf	main@length& (0+255),b
  1257                           
  1258                           ; BSR set to: 1
  1259                           ;main.c: 306: if (length < 0) {
  1260  0008CE  0101               	movlb	1	; () banked
  1261  0008D0  0101               	movlb	1	; () banked
  1262  0008D2  BFBA               	btfsc	main@length& (0+255),7,b
  1263  0008D4  D743               	goto	l2697
  1264  0008D6  D052               	goto	l2741
  1265  0008D8                     l2735:
  1266                           
  1267                           ; BSR set to: 1
  1268                           ;main.c: 314: {
  1269                           ;main.c: 315: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1270  0008D8  0101               	movlb	1	; () banked
  1271  0008DA  0E01               	movlw	high main@t1thread_data
  1272  0008DC  0100               	movlb	0	; () banked
  1273  0008DE  0100               	movlb	0	; () banked
  1274  0008E0  6FC1               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1275  0008E2  0101               	movlb	1	; () banked
  1276  0008E4  0EB0               	movlw	low main@t1thread_data
  1277  0008E6  0100               	movlb	0	; () banked
  1278  0008E8  0100               	movlb	0	; () banked
  1279  0008EA  6FC0               	movwf	timer1_lthread@tptr& (0+255),b
  1280  0008EC  0101               	movlb	1	; () banked
  1281  0008EE  0100               	movlb	0	; () banked
  1282  0008F0  C1B9  F0C2         	movff	main@msgtype,timer1_lthread@msgtype
  1283  0008F4  0100               	movlb	0	; () banked
  1284  0008F6  0100               	movlb	0	; () banked
  1285  0008F8  6BC3               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1286  0008FA  0101               	movlb	1	; () banked
  1287  0008FC  0101               	movlb	1	; () banked
  1288  0008FE  51BA               	movf	main@length& (0+255),w,b
  1289  000900  0100               	movlb	0	; () banked
  1290  000902  0100               	movlb	0	; () banked
  1291  000904  6FC4               	movwf	timer1_lthread@length& (0+255),b
  1292  000906  0100               	movlb	0	; () banked
  1293  000908  6BC5               	clrf	(timer1_lthread@length+1)& (0+255),b
  1294  00090A  0100               	movlb	0	; () banked
  1295  00090C  BFC4               	btfsc	timer1_lthread@length& (0+255),7,b
  1296  00090E  07C5               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1297  000910  0101               	movlb	1	; () banked
  1298  000912  0E01               	movlw	high main@msgbuffer
  1299  000914  0100               	movlb	0	; () banked
  1300  000916  0100               	movlb	0	; () banked
  1301  000918  6FC7               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1302  00091A  0101               	movlb	1	; () banked
  1303  00091C  0EA2               	movlw	low main@msgbuffer
  1304  00091E  0100               	movlb	0	; () banked
  1305  000920  0100               	movlb	0	; () banked
  1306  000922  6FC6               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1307  000924  ECFF  F009         	call	_timer1_lthread	;wreg free
  1308                           
  1309                           ;main.c: 316: break;
  1310  000928  D719               	goto	l2697
  1311  00092A                     l2737:
  1312                           
  1313                           ;main.c: 319: case 31:
  1314                           ;main.c: 320: {
  1315                           ;main.c: 321: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1316  00092A  0101               	movlb	1	; () banked
  1317  00092C  0E01               	movlw	high main@uthread_data
  1318  00092E  0100               	movlb	0	; () banked
  1319  000930  0100               	movlb	0	; () banked
  1320  000932  6FA7               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1321  000934  0101               	movlb	1	; () banked
  1322  000936  0EAD               	movlw	low main@uthread_data
  1323  000938  0100               	movlb	0	; () banked
  1324  00093A  0100               	movlb	0	; () banked
  1325  00093C  6FA6               	movwf	uart_lthread@uptr& (0+255),b
  1326  00093E  0101               	movlb	1	; () banked
  1327  000940  0100               	movlb	0	; () banked
  1328  000942  C1B9  F0A8         	movff	main@msgtype,uart_lthread@msgtype
  1329  000946  0100               	movlb	0	; () banked
  1330  000948  0100               	movlb	0	; () banked
  1331  00094A  6BA9               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1332  00094C  0101               	movlb	1	; () banked
  1333  00094E  0101               	movlb	1	; () banked
  1334  000950  51BA               	movf	main@length& (0+255),w,b
  1335  000952  0100               	movlb	0	; () banked
  1336  000954  0100               	movlb	0	; () banked
  1337  000956  6FAA               	movwf	uart_lthread@length& (0+255),b
  1338  000958  0100               	movlb	0	; () banked
  1339  00095A  6BAB               	clrf	(uart_lthread@length+1)& (0+255),b
  1340  00095C  0100               	movlb	0	; () banked
  1341  00095E  BFAA               	btfsc	uart_lthread@length& (0+255),7,b
  1342  000960  07AB               	decf	(uart_lthread@length+1)& (0+255),f,b
  1343  000962  0101               	movlb	1	; () banked
  1344  000964  0E01               	movlw	high main@msgbuffer
  1345  000966  0100               	movlb	0	; () banked
  1346  000968  0100               	movlb	0	; () banked
  1347  00096A  6FAD               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1348  00096C  0101               	movlb	1	; () banked
  1349  00096E  0EA2               	movlw	low main@msgbuffer
  1350  000970  0100               	movlb	0	; () banked
  1351  000972  0100               	movlb	0	; () banked
  1352  000974  6FAC               	movwf	uart_lthread@msgbuffer& (0+255),b
  1353  000976  EC3A  F00C         	call	_uart_lthread	;wreg free
  1354                           
  1355                           ;main.c: 322: break;
  1356  00097A  D6F0               	goto	l2697
  1357  00097C                     l2741:
  1358  00097C  0101               	movlb	1	; () banked
  1359  00097E  0101               	movlb	1	; () banked
  1360  000980  51B9               	movf	main@msgtype& (0+255),w,b
  1361                           
  1362                           ; Switch size 1, requested type "space"
  1363                           ; Number of cases is 3, Range of values is 11 to 31
  1364                           ; switch strategies available:
  1365                           ; Name         Instructions Cycles
  1366                           ; simple_byte           10     6 (average)
  1367                           ;	Chosen strategy is simple_byte
  1368  000982  0A0B               	xorlw	11	; case 11
  1369  000984  B4D8               	btfsc	status,2,c
  1370  000986  D7A8               	goto	l2735
  1371  000988  0A15               	xorlw	21	; case 30
  1372  00098A  B4D8               	btfsc	status,2,c
  1373  00098C  D7CE               	goto	l2737
  1374  00098E  0A01               	xorlw	1	; case 31
  1375  000990  B4D8               	btfsc	status,2,c
  1376  000992  D7CB               	goto	l2737
  1377  000994  D6E3               	goto	l2697
  1378  000996                     __end_of_main:
  1379                           	opt stack 0
  1380                           tblptru	equ	0xFF8
  1381                           tblptrh	equ	0xFF7
  1382                           tblptrl	equ	0xFF6
  1383                           tablat	equ	0xFF5
  1384                           postinc0	equ	0xFEE
  1385                           wreg	equ	0xFE8
  1386                           status	equ	0xFD8
  1387                           
  1388 ;; *************** function _uart_lthread *****************
  1389 ;; Defined at:
  1390 ;;		line 9 in file "../src/uart_thread.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;  uptr            2   38[BANK0 ] PTR struct __uart_thread
  1393 ;;		 -> main@uthread_data(2), 
  1394 ;;  msgtype         2   40[BANK0 ] int 
  1395 ;;  length          2   42[BANK0 ] int 
  1396 ;;  msgbuffer       2   44[BANK0 ] PTR unsigned char 
  1397 ;;		 -> main@msgbuffer(11), 
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;		None
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  2   38[BANK0 ] int 
  1402 ;; Registers used:
  1403 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1409 ;;      Params:         0       8       0       0       0
  1410 ;;      Locals:         0       0       0       0       0
  1411 ;;      Temps:          0       0       0       0       0
  1412 ;;      Totals:         0       8       0       0       0
  1413 ;;Total ram usage:        8 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; Hardware stack levels required when called:   10
  1416 ;; This function calls:
  1417 ;;		Nothing
  1418 ;; This function is called by:
  1419 ;;		_main
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           	psect	text1
  1424  001874                     __ptext1:
  1425                           	opt stack 0
  1426  001874                     _uart_lthread:
  1427                           	opt stack 19
  1428                           
  1429                           ;uart_thread.c: 10: if (msgtype == 30) {
  1430                           
  1431                           ; BSR set to: 1
  1432                           ;incstack = 0
  1433  001874  0100               	movlb	0	; () banked
  1434  001876  0100               	movlb	0	; () banked
  1435  001878  51A8               	movf	uart_lthread@msgtype& (0+255),w,b
  1436  00187A  0A1E               	xorlw	30
  1437  00187C  11A9               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1438  00187E  B4D8               	btfsc	status,2,c
  1439  001880  0012               	return	
  1440                           
  1441                           ; BSR set to: 0
  1442                           
  1443                           ; BSR set to: 0
  1444                           
  1445                           ; BSR set to: 0
  1446                           ;uart_thread.c: 11: } else if (msgtype == 31) {
  1447  001882  0100               	movlb	0	; () banked
  1448  001884  0100               	movlb	0	; () banked
  1449  001886  51A8               	movf	uart_lthread@msgtype& (0+255),w,b
  1450  001888  0A1F               	xorlw	31
  1451  00188A  11A9               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1452  00188C  A4D8               	btfss	status,2,c
  1453  00188E  0012               	return	
  1454                           
  1455                           ; BSR set to: 0
  1456                           ;uart_thread.c: 14: msgbuffer[length] = '\0';
  1457  001890  0100               	movlb	0	; () banked
  1458  001892  0100               	movlb	0	; () banked
  1459  001894  51AA               	movf	uart_lthread@length& (0+255),w,b
  1460  001896  0100               	movlb	0	; () banked
  1461  001898  0100               	movlb	0	; () banked
  1462  00189A  25AC               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1463  00189C  6ED9               	movwf	fsr2l,c
  1464  00189E  0100               	movlb	0	; () banked
  1465  0018A0  0100               	movlb	0	; () banked
  1466  0018A2  51AB               	movf	(uart_lthread@length+1)& (0+255),w,b
  1467  0018A4  0100               	movlb	0	; () banked
  1468  0018A6  0100               	movlb	0	; () banked
  1469  0018A8  21AD               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1470  0018AA  6EDA               	movwf	fsr2h,c
  1471  0018AC  0E00               	movlw	0
  1472  0018AE  6EDF               	movwf	indf2,c
  1473  0018B0  0012               	return	
  1474  0018B2                     __end_of_uart_lthread:
  1475                           	opt stack 0
  1476                           tblptru	equ	0xFF8
  1477                           tblptrh	equ	0xFF7
  1478                           tblptrl	equ	0xFF6
  1479                           tablat	equ	0xFF5
  1480                           postinc0	equ	0xFEE
  1481                           wreg	equ	0xFE8
  1482                           indf2	equ	0xFDF
  1483                           fsr2h	equ	0xFDA
  1484                           fsr2l	equ	0xFD9
  1485                           status	equ	0xFD8
  1486                           
  1487 ;; *************** function _timer1_lthread *****************
  1488 ;; Defined at:
  1489 ;;		line 14 in file "../src/timer1_thread.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;  tptr            2   64[BANK0 ] PTR struct __timer1_thre
  1492 ;;		 -> main@t1thread_data(2), 
  1493 ;;  msgtype         2   66[BANK0 ] int 
  1494 ;;  length          2   68[BANK0 ] int 
  1495 ;;  msgbuffer       2   70[BANK0 ] PTR unsigned char 
  1496 ;;		 -> main@msgbuffer(11), 
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;  retval          1   73[BANK0 ] char 
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  2   64[BANK0 ] int 
  1501 ;; Registers used:
  1502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1508 ;;      Params:         0       8       0       0       0
  1509 ;;      Locals:         0       1       0       0       0
  1510 ;;      Temps:          0       1       0       0       0
  1511 ;;      Totals:         0      10       0       0       0
  1512 ;;Total ram usage:       10 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; Hardware stack levels required when called:   13
  1515 ;; This function calls:
  1516 ;;		_FromMainHigh_sendmsg
  1517 ;;		___lwmod
  1518 ;; This function is called by:
  1519 ;;		_main
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           	psect	text2
  1524  0013FE                     __ptext2:
  1525                           	opt stack 0
  1526  0013FE                     _timer1_lthread:
  1527                           	opt stack 16
  1528                           
  1529                           ;timer1_thread.c: 15: signed char retval;
  1530                           ;timer1_thread.c: 17: tptr->msgcount++;
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;incstack = 0
  1534  0013FE  C0C0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1535  001402  C0C1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1536  001406  2ADE               	incf	postinc2,f,c
  1537  001408  0E00               	movlw	0
  1538  00140A  22DD               	addwfc	postdec2,f,c
  1539                           
  1540                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1541  00140C  C0C0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1542  001410  C0C1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1543  001414  0100               	movlb	0	; () banked
  1544  001416  CFDE F0A6          	movff	postinc2,___lwmod@dividend
  1545  00141A  0100               	movlb	0	; () banked
  1546  00141C  CFDD F0A7          	movff	postdec2,___lwmod@dividend+1
  1547  001420  0E00               	movlw	0
  1548  001422  0100               	movlb	0	; () banked
  1549  001424  0100               	movlb	0	; () banked
  1550  001426  6FA9               	movwf	(___lwmod@divisor+1)& (0+255),b
  1551  001428  0E0A               	movlw	10
  1552  00142A  0100               	movlb	0	; () banked
  1553  00142C  6FA8               	movwf	___lwmod@divisor& (0+255),b
  1554  00142E  EC3B  F009         	call	___lwmod	;wreg free
  1555  001432  0100               	movlb	0	; () banked
  1556  001434  0100               	movlb	0	; () banked
  1557  001436  51A6               	movf	?___lwmod& (0+255),w,b
  1558  001438  0A09               	xorlw	9
  1559  00143A  0100               	movlb	0	; () banked
  1560  00143C  11A7               	iorwf	(?___lwmod+1)& (0+255),w,b
  1561  00143E  A4D8               	btfss	status,2,c
  1562  001440  0012               	return	
  1563                           
  1564                           ; BSR set to: 0
  1565                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1566  001442  0100               	movlb	0	; () banked
  1567  001444  6FC8               	movwf	??_timer1_lthread& (0+255),b
  1568  001446  0E14               	movlw	20
  1569  001448  0100               	movlb	0	; () banked
  1570  00144A  0100               	movlb	0	; () banked
  1571  00144C  6FBC               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1572  00144E  0100               	movlb	0	; () banked
  1573  001450  51C8               	movf	??_timer1_lthread& (0+255),w,b
  1574  001452  0100               	movlb	0	; () banked
  1575  001454  0100               	movlb	0	; () banked
  1576  001456  C0C1  F0BE         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1577  00145A  0100               	movlb	0	; () banked
  1578  00145C  0100               	movlb	0	; () banked
  1579  00145E  C0C0  F0BD         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1580  001462  0E02               	movlw	2
  1581  001464  EC59  F00C         	call	_FromMainHigh_sendmsg
  1582  001468  0100               	movlb	0	; () banked
  1583  00146A  0100               	movlb	0	; () banked
  1584  00146C  6FC9               	movwf	timer1_lthread@retval& (0+255),b
  1585  00146E  0012               	return	
  1586  001470                     __end_of_timer1_lthread:
  1587                           	opt stack 0
  1588                           tblptru	equ	0xFF8
  1589                           tblptrh	equ	0xFF7
  1590                           tblptrl	equ	0xFF6
  1591                           tablat	equ	0xFF5
  1592                           postinc0	equ	0xFEE
  1593                           wreg	equ	0xFE8
  1594                           indf2	equ	0xFDF
  1595                           postinc2	equ	0xFDE
  1596                           postdec2	equ	0xFDD
  1597                           fsr2h	equ	0xFDA
  1598                           fsr2l	equ	0xFD9
  1599                           status	equ	0xFD8
  1600                           
  1601 ;; *************** function _timer0_lthread *****************
  1602 ;; Defined at:
  1603 ;;		line 14 in file "../src/timer0_thread.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  tptr            2   64[BANK0 ] PTR struct __timer0_thre
  1606 ;;		 -> main@t0thread_data(2), 
  1607 ;;  msgtype         2   66[BANK0 ] int 
  1608 ;;  length          2   68[BANK0 ] int 
  1609 ;;  msgbuffer       2   70[BANK0 ] PTR unsigned char 
  1610 ;;		 -> main@msgbuffer(11), 
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;  retval          1   73[BANK0 ] char 
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  2   64[BANK0 ] int 
  1615 ;; Registers used:
  1616 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1622 ;;      Params:         0       8       0       0       0
  1623 ;;      Locals:         0       1       0       0       0
  1624 ;;      Temps:          0       1       0       0       0
  1625 ;;      Totals:         0      10       0       0       0
  1626 ;;Total ram usage:       10 bytes
  1627 ;; Hardware stack levels used:    1
  1628 ;; Hardware stack levels required when called:   13
  1629 ;; This function calls:
  1630 ;;		_FromMainHigh_sendmsg
  1631 ;;		___lwmod
  1632 ;; This function is called by:
  1633 ;;		_main
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           	psect	text3
  1638  001470                     __ptext3:
  1639                           	opt stack 0
  1640  001470                     _timer0_lthread:
  1641                           	opt stack 16
  1642                           
  1643                           ;timer0_thread.c: 19: signed char retval;
  1644                           ;timer0_thread.c: 21: tptr->msgcount++;
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;incstack = 0
  1648  001470  C0C0  FFD9         	movff	timer0_lthread@tptr,fsr2l
  1649  001474  C0C1  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  1650  001478  2ADE               	incf	postinc2,f,c
  1651  00147A  0E00               	movlw	0
  1652  00147C  22DD               	addwfc	postdec2,f,c
  1653                           
  1654                           ;timer0_thread.c: 24: if ((tptr->msgcount % 10) == 9) {
  1655  00147E  C0C0  FFD9         	movff	timer0_lthread@tptr,fsr2l
  1656  001482  C0C1  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  1657  001486  0100               	movlb	0	; () banked
  1658  001488  CFDE F0A6          	movff	postinc2,___lwmod@dividend
  1659  00148C  0100               	movlb	0	; () banked
  1660  00148E  CFDD F0A7          	movff	postdec2,___lwmod@dividend+1
  1661  001492  0E00               	movlw	0
  1662  001494  0100               	movlb	0	; () banked
  1663  001496  0100               	movlb	0	; () banked
  1664  001498  6FA9               	movwf	(___lwmod@divisor+1)& (0+255),b
  1665  00149A  0E0A               	movlw	10
  1666  00149C  0100               	movlb	0	; () banked
  1667  00149E  6FA8               	movwf	___lwmod@divisor& (0+255),b
  1668  0014A0  EC3B  F009         	call	___lwmod	;wreg free
  1669  0014A4  0100               	movlb	0	; () banked
  1670  0014A6  0100               	movlb	0	; () banked
  1671  0014A8  51A6               	movf	?___lwmod& (0+255),w,b
  1672  0014AA  0A09               	xorlw	9
  1673  0014AC  0100               	movlb	0	; () banked
  1674  0014AE  11A7               	iorwf	(?___lwmod+1)& (0+255),w,b
  1675  0014B0  A4D8               	btfss	status,2,c
  1676  0014B2  0012               	return	
  1677                           
  1678                           ; BSR set to: 0
  1679                           ;timer0_thread.c: 25: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1680  0014B4  0100               	movlb	0	; () banked
  1681  0014B6  6FC8               	movwf	??_timer0_lthread& (0+255),b
  1682  0014B8  0E14               	movlw	20
  1683  0014BA  0100               	movlb	0	; () banked
  1684  0014BC  0100               	movlb	0	; () banked
  1685  0014BE  6FBC               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1686  0014C0  0100               	movlb	0	; () banked
  1687  0014C2  51C8               	movf	??_timer0_lthread& (0+255),w,b
  1688  0014C4  0100               	movlb	0	; () banked
  1689  0014C6  0100               	movlb	0	; () banked
  1690  0014C8  C0C1  F0BE         	movff	timer0_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1691  0014CC  0100               	movlb	0	; () banked
  1692  0014CE  0100               	movlb	0	; () banked
  1693  0014D0  C0C0  F0BD         	movff	timer0_lthread@tptr,FromMainHigh_sendmsg@data
  1694  0014D4  0E02               	movlw	2
  1695  0014D6  EC59  F00C         	call	_FromMainHigh_sendmsg
  1696  0014DA  0100               	movlb	0	; () banked
  1697  0014DC  0100               	movlb	0	; () banked
  1698  0014DE  6FC9               	movwf	timer0_lthread@retval& (0+255),b
  1699  0014E0  0012               	return	
  1700  0014E2                     __end_of_timer0_lthread:
  1701                           	opt stack 0
  1702                           tblptru	equ	0xFF8
  1703                           tblptrh	equ	0xFF7
  1704                           tblptrl	equ	0xFF6
  1705                           tablat	equ	0xFF5
  1706                           postinc0	equ	0xFEE
  1707                           wreg	equ	0xFE8
  1708                           indf2	equ	0xFDF
  1709                           postinc2	equ	0xFDE
  1710                           postdec2	equ	0xFDD
  1711                           fsr2h	equ	0xFDA
  1712                           fsr2l	equ	0xFD9
  1713                           status	equ	0xFD8
  1714                           
  1715 ;; *************** function ___lwmod *****************
  1716 ;; Defined at:
  1717 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/common/lwmod.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  dividend        2   38[BANK0 ] unsigned int 
  1720 ;;  divisor         2   40[BANK0 ] unsigned int 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  counter         1   43[BANK0 ] unsigned char 
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  2   38[BANK0 ] unsigned int 
  1725 ;; Registers used:
  1726 ;;		wreg, status,2, status,0
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1732 ;;      Params:         0       4       0       0       0
  1733 ;;      Locals:         0       1       0       0       0
  1734 ;;      Temps:          0       1       0       0       0
  1735 ;;      Totals:         0       6       0       0       0
  1736 ;;Total ram usage:        6 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:   10
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		_timer1_lthread
  1743 ;;		_timer0_lthread
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text4
  1748  001276                     __ptext4:
  1749                           	opt stack 0
  1750  001276                     ___lwmod:
  1751                           	opt stack 18
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;incstack = 0
  1755  001276  0100               	movlb	0	; () banked
  1756  001278  0100               	movlb	0	; () banked
  1757  00127A  51A9               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1758  00127C  11A8               	iorwf	___lwmod@divisor& (0+255),w,b
  1759  00127E  B4D8               	btfsc	status,2,c
  1760  001280  D03A               	goto	l1039
  1761                           
  1762                           ; BSR set to: 0
  1763  001282  0100               	movlb	0	; () banked
  1764  001284  6FAA               	movwf	??___lwmod& (0+255),b
  1765  001286  0E01               	movlw	1
  1766  001288  0100               	movlb	0	; () banked
  1767  00128A  0100               	movlb	0	; () banked
  1768  00128C  6FAB               	movwf	___lwmod@counter& (0+255),b
  1769  00128E  0100               	movlb	0	; () banked
  1770  001290  51AA               	movf	??___lwmod& (0+255),w,b
  1771  001292  D009               	goto	l2839
  1772  001294                     l2837:
  1773                           
  1774                           ; BSR set to: 0
  1775  001294  0100               	movlb	0	; () banked
  1776  001296  0100               	movlb	0	; () banked
  1777  001298  0100               	movlb	0	; () banked
  1778  00129A  90D8               	bcf	status,0,c
  1779  00129C  37A8               	rlcf	___lwmod@divisor& (0+255),f,b
  1780  00129E  37A9               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1781  0012A0  0100               	movlb	0	; () banked
  1782  0012A2  0100               	movlb	0	; () banked
  1783  0012A4  2BAB               	incf	___lwmod@counter& (0+255),f,b
  1784  0012A6                     l2839:
  1785                           
  1786                           ; BSR set to: 0
  1787  0012A6  0100               	movlb	0	; () banked
  1788  0012A8  0100               	movlb	0	; () banked
  1789  0012AA  AFA9               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1790  0012AC  D7F3               	goto	l2837
  1791  0012AE                     l2841:
  1792                           
  1793                           ; BSR set to: 0
  1794  0012AE  0100               	movlb	0	; () banked
  1795  0012B0  0100               	movlb	0	; () banked
  1796  0012B2  51A8               	movf	___lwmod@divisor& (0+255),w,b
  1797  0012B4  0100               	movlb	0	; () banked
  1798  0012B6  0100               	movlb	0	; () banked
  1799  0012B8  5DA6               	subwf	___lwmod@dividend& (0+255),w,b
  1800  0012BA  0100               	movlb	0	; () banked
  1801  0012BC  0100               	movlb	0	; () banked
  1802  0012BE  51A9               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1803  0012C0  0100               	movlb	0	; () banked
  1804  0012C2  0100               	movlb	0	; () banked
  1805  0012C4  59A7               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1806  0012C6  A0D8               	btfss	status,0,c
  1807  0012C8  D00C               	goto	l2845
  1808                           
  1809                           ; BSR set to: 0
  1810  0012CA  0100               	movlb	0	; () banked
  1811  0012CC  0100               	movlb	0	; () banked
  1812  0012CE  51A8               	movf	___lwmod@divisor& (0+255),w,b
  1813  0012D0  0100               	movlb	0	; () banked
  1814  0012D2  0100               	movlb	0	; () banked
  1815  0012D4  5FA6               	subwf	___lwmod@dividend& (0+255),f,b
  1816  0012D6  0100               	movlb	0	; () banked
  1817  0012D8  0100               	movlb	0	; () banked
  1818  0012DA  51A9               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1819  0012DC  0100               	movlb	0	; () banked
  1820  0012DE  0100               	movlb	0	; () banked
  1821  0012E0  5BA7               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1822  0012E2                     l2845:
  1823                           
  1824                           ; BSR set to: 0
  1825  0012E2  0100               	movlb	0	; () banked
  1826  0012E4  0100               	movlb	0	; () banked
  1827  0012E6  0100               	movlb	0	; () banked
  1828  0012E8  90D8               	bcf	status,0,c
  1829  0012EA  33A9               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1830  0012EC  33A8               	rrcf	___lwmod@divisor& (0+255),f,b
  1831                           
  1832                           ; BSR set to: 0
  1833  0012EE  0100               	movlb	0	; () banked
  1834  0012F0  0100               	movlb	0	; () banked
  1835  0012F2  2FAB               	decfsz	___lwmod@counter& (0+255),f,b
  1836  0012F4  D7DC               	goto	l2841
  1837  0012F6                     l1039:
  1838                           
  1839                           ; BSR set to: 0
  1840  0012F6  C0A6  F0A6         	movff	___lwmod@dividend,?___lwmod
  1841  0012FA  C0A7  F0A7         	movff	___lwmod@dividend+1,?___lwmod+1
  1842                           
  1843                           ; BSR set to: 0
  1844  0012FE  0012               	return	
  1845  001300                     __end_of___lwmod:
  1846                           	opt stack 0
  1847                           tblptru	equ	0xFF8
  1848                           tblptrh	equ	0xFF7
  1849                           tblptrl	equ	0xFF6
  1850                           tablat	equ	0xFF5
  1851                           postinc0	equ	0xFEE
  1852                           wreg	equ	0xFE8
  1853                           indf2	equ	0xFDF
  1854                           postinc2	equ	0xFDE
  1855                           postdec2	equ	0xFDD
  1856                           fsr2h	equ	0xFDA
  1857                           fsr2l	equ	0xFD9
  1858                           status	equ	0xFD8
  1859                           
  1860 ;; *************** function _FromMainHigh_sendmsg *****************
  1861 ;; Defined at:
  1862 ;;		line 174 in file "../src/messages.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;  length          1    wreg     unsigned char 
  1865 ;;  msgtype         1   60[BANK0 ] unsigned char 
  1866 ;;  data            2   61[BANK0 ] PTR void 
  1867 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  length          1   63[BANK0 ] unsigned char 
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      char 
  1872 ;; Registers used:
  1873 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1879 ;;      Params:         0       3       0       0       0
  1880 ;;      Locals:         0       1       0       0       0
  1881 ;;      Temps:          0       0       0       0       0
  1882 ;;      Totals:         0       4       0       0       0
  1883 ;;Total ram usage:        4 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:   12
  1886 ;; This function calls:
  1887 ;;		_send_msg
  1888 ;; This function is called by:
  1889 ;;		_timer1_lthread
  1890 ;;		_timer0_lthread
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           	psect	text5
  1895  0018B2                     __ptext5:
  1896                           	opt stack 0
  1897  0018B2                     _FromMainHigh_sendmsg:
  1898                           	opt stack 16
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;incstack = 0
  1902                           ;FromMainHigh_sendmsg@length stored from wreg
  1903  0018B2  CFE8 F0BF          	movff	wreg,FromMainHigh_sendmsg@length
  1904                           
  1905                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1906  0018B6  0102               	movlb	2	; () banked
  1907  0018B8  0E02               	movlw	high _FromMainHigh_MQ
  1908  0018BA  0100               	movlb	0	; () banked
  1909  0018BC  0100               	movlb	0	; () banked
  1910  0018BE  6FB1               	movwf	(send_msg@qptr+1)& (0+255),b
  1911  0018C0  0102               	movlb	2	; () banked
  1912  0018C2  0E00               	movlw	low _FromMainHigh_MQ
  1913  0018C4  0100               	movlb	0	; () banked
  1914  0018C6  0100               	movlb	0	; () banked
  1915  0018C8  6FB0               	movwf	send_msg@qptr& (0+255),b
  1916  0018CA  C0BF  F0B2         	movff	FromMainHigh_sendmsg@length,send_msg@length
  1917  0018CE  C0BC  F0B3         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  1918  0018D2  0100               	movlb	0	; () banked
  1919  0018D4  0100               	movlb	0	; () banked
  1920  0018D6  C0BE  F0B5         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  1921  0018DA  0100               	movlb	0	; () banked
  1922  0018DC  0100               	movlb	0	; () banked
  1923  0018DE  C0BD  F0B4         	movff	FromMainHigh_sendmsg@data,send_msg@data
  1924  0018E2  ECED  F005         	call	_send_msg	;wreg free
  1925  0018E6  0012               	return	
  1926  0018E8                     __end_of_FromMainHigh_sendmsg:
  1927                           	opt stack 0
  1928                           tblptru	equ	0xFF8
  1929                           tblptrh	equ	0xFF7
  1930                           tblptrl	equ	0xFF6
  1931                           tablat	equ	0xFF5
  1932                           postinc0	equ	0xFEE
  1933                           wreg	equ	0xFE8
  1934                           indf2	equ	0xFDF
  1935                           postinc2	equ	0xFDE
  1936                           postdec2	equ	0xFDD
  1937                           fsr2h	equ	0xFDA
  1938                           fsr2l	equ	0xFD9
  1939                           status	equ	0xFD8
  1940                           
  1941 ;; *************** function _send_msg *****************
  1942 ;; Defined at:
  1943 ;;		line 24 in file "../src/messages.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;  qptr            2   48[BANK0 ] PTR struct __msg_queue
  1946 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1947 ;;  length          1   50[BANK0 ] unsigned char 
  1948 ;;  msgtype         1   51[BANK0 ] unsigned char 
  1949 ;;  data            2   52[BANK0 ] PTR void 
  1950 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  1951 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;  qmsg            2   58[BANK0 ] PTR struct __msg
  1954 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  1955 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1956 ;;  tlength         2   55[BANK0 ] unsigned int 
  1957 ;;  slot            1   57[BANK0 ] unsigned char 
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  1    wreg      char 
  1960 ;; Registers used:
  1961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1967 ;;      Params:         0       6       0       0       0
  1968 ;;      Locals:         0       5       0       0       0
  1969 ;;      Temps:          0       1       0       0       0
  1970 ;;      Totals:         0      12       0       0       0
  1971 ;;Total ram usage:       12 bytes
  1972 ;; Hardware stack levels used:    1
  1973 ;; Hardware stack levels required when called:   11
  1974 ;; This function calls:
  1975 ;;		_memcpy
  1976 ;; This function is called by:
  1977 ;;		_FromMainHigh_sendmsg
  1978 ;;		_FromMainLow_sendmsg
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text6
  1983  000BDA                     __ptext6:
  1984                           	opt stack 0
  1985  000BDA                     _send_msg:
  1986                           	opt stack 16
  1987                           
  1988                           ;messages.c: 25: unsigned char slot;
  1989                           ;messages.c: 27: msg *qmsg;
  1990                           ;messages.c: 28: size_t tlength = length;
  1991                           
  1992                           ;incstack = 0
  1993  000BDA  0100               	movlb	0	; () banked
  1994  000BDC  0100               	movlb	0	; () banked
  1995  000BDE  C0B2  F0B7         	movff	send_msg@length,send_msg@tlength
  1996  000BE2  0100               	movlb	0	; () banked
  1997  000BE4  0100               	movlb	0	; () banked
  1998  000BE6  6BB8               	clrf	(send_msg@tlength+1)& (0+255),b
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2002  000BE8  0100               	movlb	0	; () banked
  2003  000BEA  EE20 F034          	lfsr	2,52
  2004  000BEE  0100               	movlb	0	; () banked
  2005  000BF0  51B0               	movf	send_msg@qptr& (0+255),w,b
  2006  000BF2  26D9               	addwf	fsr2l,f,c
  2007  000BF4  0100               	movlb	0	; () banked
  2008  000BF6  51B1               	movf	(send_msg@qptr+1)& (0+255),w,b
  2009  000BF8  22DA               	addwfc	fsr2h,f,c
  2010  000BFA  50DF               	movf	indf2,w,c
  2011  000BFC  0100               	movlb	0	; () banked
  2012  000BFE  0100               	movlb	0	; () banked
  2013  000C00  6FB9               	movwf	send_msg@slot& (0+255),b
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2017  000C02  0100               	movlb	0	; () banked
  2018  000C04  0100               	movlb	0	; () banked
  2019  000C06  51B9               	movf	send_msg@slot& (0+255),w,b
  2020  000C08  0D0D               	mullw	13
  2021  000C0A  50F3               	movf	prodl,w,c
  2022  000C0C  0100               	movlb	0	; () banked
  2023  000C0E  0100               	movlb	0	; () banked
  2024  000C10  25B0               	addwf	send_msg@qptr& (0+255),w,b
  2025  000C12  0100               	movlb	0	; () banked
  2026  000C14  0100               	movlb	0	; () banked
  2027  000C16  6FBA               	movwf	send_msg@qmsg& (0+255),b
  2028  000C18  50F4               	movf	prodh,w,c
  2029  000C1A  0100               	movlb	0	; () banked
  2030  000C1C  0100               	movlb	0	; () banked
  2031  000C1E  21B1               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2032  000C20  0100               	movlb	0	; () banked
  2033  000C22  6FBB               	movwf	(send_msg@qmsg+1)& (0+255),b
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;messages.c: 41: if (qmsg->full != 0) {
  2037  000C24  C0BA  FFD9         	movff	send_msg@qmsg,fsr2l
  2038  000C28  C0BB  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2039  000C2C  50DF               	movf	indf2,w,c
  2040  000C2E  B4D8               	btfsc	status,2,c
  2041  000C30  D002               	goto	l2453
  2042                           
  2043                           ; BSR set to: 0
  2044                           ;messages.c: 42: return (-1);
  2045  000C32  0EFF               	movlw	255
  2046  000C34  0012               	return	
  2047  000C36                     l2453:
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;messages.c: 43: }
  2051                           ;messages.c: 46: qmsg->length = length;
  2052  000C36  0100               	movlb	0	; () banked
  2053  000C38  EE20 F001          	lfsr	2,1
  2054  000C3C  0100               	movlb	0	; () banked
  2055  000C3E  51BA               	movf	send_msg@qmsg& (0+255),w,b
  2056  000C40  26D9               	addwf	fsr2l,f,c
  2057  000C42  0100               	movlb	0	; () banked
  2058  000C44  51BB               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2059  000C46  22DA               	addwfc	fsr2h,f,c
  2060  000C48  0100               	movlb	0	; () banked
  2061  000C4A  C0B2  FFDF         	movff	send_msg@length,indf2
  2062                           
  2063                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2064  000C4E  0100               	movlb	0	; () banked
  2065  000C50  EE20 F002          	lfsr	2,2
  2066  000C54  0100               	movlb	0	; () banked
  2067  000C56  51BA               	movf	send_msg@qmsg& (0+255),w,b
  2068  000C58  26D9               	addwf	fsr2l,f,c
  2069  000C5A  0100               	movlb	0	; () banked
  2070  000C5C  51BB               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2071  000C5E  22DA               	addwfc	fsr2h,f,c
  2072  000C60  0100               	movlb	0	; () banked
  2073  000C62  C0B3  FFDF         	movff	send_msg@msgtype,indf2
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2077  000C66  0E03               	movlw	3
  2078  000C68  0100               	movlb	0	; () banked
  2079  000C6A  0100               	movlb	0	; () banked
  2080  000C6C  25BA               	addwf	send_msg@qmsg& (0+255),w,b
  2081  000C6E  0100               	movlb	0	; () banked
  2082  000C70  0100               	movlb	0	; () banked
  2083  000C72  6FA6               	movwf	memcpy@d1& (0+255),b
  2084  000C74  0E00               	movlw	0
  2085  000C76  0100               	movlb	0	; () banked
  2086  000C78  0100               	movlb	0	; () banked
  2087  000C7A  21BB               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2088  000C7C  0100               	movlb	0	; () banked
  2089  000C7E  6FA7               	movwf	(memcpy@d1+1)& (0+255),b
  2090  000C80  0100               	movlb	0	; () banked
  2091  000C82  0100               	movlb	0	; () banked
  2092  000C84  C0B5  F0A9         	movff	send_msg@data+1,memcpy@s1+1
  2093  000C88  0100               	movlb	0	; () banked
  2094  000C8A  0100               	movlb	0	; () banked
  2095  000C8C  C0B4  F0A8         	movff	send_msg@data,memcpy@s1
  2096  000C90  C0B7  F0AA         	movff	send_msg@tlength,memcpy@n
  2097  000C94  C0B8  F0AB         	movff	send_msg@tlength+1,memcpy@n+1
  2098  000C98  ECDD  F00A         	call	_memcpy	;wreg free
  2099                           
  2100                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2101  000C9C  0100               	movlb	0	; () banked
  2102  000C9E  EE20 F034          	lfsr	2,52
  2103  000CA2  0100               	movlb	0	; () banked
  2104  000CA4  51B0               	movf	send_msg@qptr& (0+255),w,b
  2105  000CA6  26D9               	addwf	fsr2l,f,c
  2106  000CA8  0100               	movlb	0	; () banked
  2107  000CAA  51B1               	movf	(send_msg@qptr+1)& (0+255),w,b
  2108  000CAC  22DA               	addwfc	fsr2h,f,c
  2109  000CAE  0100               	movlb	0	; () banked
  2110  000CB0  EE10 F034          	lfsr	1,52
  2111  000CB4  0100               	movlb	0	; () banked
  2112  000CB6  51B0               	movf	send_msg@qptr& (0+255),w,b
  2113  000CB8  26E1               	addwf	fsr1l,f,c
  2114  000CBA  0100               	movlb	0	; () banked
  2115  000CBC  51B1               	movf	(send_msg@qptr+1)& (0+255),w,b
  2116  000CBE  22E2               	addwfc	fsr1h,f,c
  2117  000CC0  50E7               	movf	indf1,w,c
  2118  000CC2  0100               	movlb	0	; () banked
  2119  000CC4  6FB6               	movwf	??_send_msg& (0+255),b
  2120  000CC6  0100               	movlb	0	; () banked
  2121  000CC8  29B6               	incf	??_send_msg& (0+255),w,b
  2122  000CCA  0B03               	andlw	3
  2123  000CCC  6EDF               	movwf	indf2,c
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;messages.c: 59: qmsg->full = 1;
  2127  000CCE  C0BA  FFD9         	movff	send_msg@qmsg,fsr2l
  2128  000CD2  C0BB  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2129  000CD6  0E01               	movlw	1
  2130  000CD8  6EDF               	movwf	indf2,c
  2131                           
  2132                           ; BSR set to: 0
  2133                           ;messages.c: 60: return (1);
  2134  000CDA  0E01               	movlw	1
  2135  000CDC  0012               	return	
  2136  000CDE                     __end_of_send_msg:
  2137                           	opt stack 0
  2138                           tblptru	equ	0xFF8
  2139                           tblptrh	equ	0xFF7
  2140                           tblptrl	equ	0xFF6
  2141                           tablat	equ	0xFF5
  2142                           prodh	equ	0xFF4
  2143                           prodl	equ	0xFF3
  2144                           postinc0	equ	0xFEE
  2145                           wreg	equ	0xFE8
  2146                           indf1	equ	0xFE7
  2147                           fsr1h	equ	0xFE2
  2148                           fsr1l	equ	0xFE1
  2149                           indf2	equ	0xFDF
  2150                           postinc2	equ	0xFDE
  2151                           postdec2	equ	0xFDD
  2152                           fsr2h	equ	0xFDA
  2153                           fsr2l	equ	0xFD9
  2154                           status	equ	0xFD8
  2155                           
  2156 ;; *************** function _start_i2c_slave_reply *****************
  2157 ;; Defined at:
  2158 ;;		line 53 in file "../src/my_i2c.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;  length          1    wreg     unsigned char 
  2161 ;;  msg             2   38[BANK0 ] PTR unsigned char 
  2162 ;;		 -> main@msgbuffer(11), i2c_int_handler@msgbuffer(11), 
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;  length          1   42[BANK0 ] unsigned char 
  2165 ;; Return value:  Size  Location     Type
  2166 ;;		None               void
  2167 ;; Registers used:
  2168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2174 ;;      Params:         0       2       0       0       0
  2175 ;;      Locals:         0       1       0       0       0
  2176 ;;      Temps:          0       2       0       0       0
  2177 ;;      Totals:         0       5       0       0       0
  2178 ;;Total ram usage:        5 bytes
  2179 ;; Hardware stack levels used:    1
  2180 ;; Hardware stack levels required when called:   10
  2181 ;; This function calls:
  2182 ;;		Nothing
  2183 ;; This function is called by:
  2184 ;;		_main
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text7
  2189  000ACC                     __ptext7:
  2190                           	opt stack 0
  2191  000ACC                     _start_i2c_slave_reply:
  2192                           	opt stack 19
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;incstack = 0
  2196                           ;start_i2c_slave_reply@length stored from wreg
  2197  000ACC  CFE8 F0AA          	movff	wreg,start_i2c_slave_reply@length
  2198                           
  2199                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2200  000AD0  0100               	movlb	0	; () banked
  2201  000AD2  EE20 F019          	lfsr	2,25
  2202  000AD6  0100               	movlb	0	; () banked
  2203  000AD8  51CB               	movf	_ic_ptr& (0+255),w,b
  2204  000ADA  26D9               	addwf	fsr2l,f,c
  2205  000ADC  0100               	movlb	0	; () banked
  2206  000ADE  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2207  000AE0  22DA               	addwfc	fsr2h,f,c
  2208  000AE2  0E00               	movlw	0
  2209  000AE4  6EDF               	movwf	indf2,c
  2210  000AE6  D042               	goto	l2221
  2211  000AE8                     l2217:
  2212                           
  2213                           ; BSR set to: 0
  2214                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2215  000AE8  0100               	movlb	0	; () banked
  2216  000AEA  EE20 F019          	lfsr	2,25
  2217  000AEE  0100               	movlb	0	; () banked
  2218  000AF0  51CB               	movf	_ic_ptr& (0+255),w,b
  2219  000AF2  26D9               	addwf	fsr2l,f,c
  2220  000AF4  0100               	movlb	0	; () banked
  2221  000AF6  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2222  000AF8  22DA               	addwfc	fsr2h,f,c
  2223  000AFA  50DF               	movf	indf2,w,c
  2224  000AFC  0100               	movlb	0	; () banked
  2225  000AFE  6FA8               	movwf	??_start_i2c_slave_reply& (0+255),b
  2226  000B00  0100               	movlb	0	; () banked
  2227  000B02  51A8               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2228  000B04  0D01               	mullw	1
  2229  000B06  50F3               	movf	prodl,w,c
  2230  000B08  0100               	movlb	0	; () banked
  2231  000B0A  0100               	movlb	0	; () banked
  2232  000B0C  25A6               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2233  000B0E  6ED9               	movwf	fsr2l,c
  2234  000B10  50F4               	movf	prodh,w,c
  2235  000B12  0100               	movlb	0	; () banked
  2236  000B14  0100               	movlb	0	; () banked
  2237  000B16  21A7               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2238  000B18  6EDA               	movwf	fsr2h,c
  2239  000B1A  0100               	movlb	0	; () banked
  2240  000B1C  EE10 F019          	lfsr	1,25
  2241  000B20  0100               	movlb	0	; () banked
  2242  000B22  51CB               	movf	_ic_ptr& (0+255),w,b
  2243  000B24  26E1               	addwf	fsr1l,f,c
  2244  000B26  0100               	movlb	0	; () banked
  2245  000B28  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2246  000B2A  22E2               	addwfc	fsr1h,f,c
  2247  000B2C  50E7               	movf	indf1,w,c
  2248  000B2E  0100               	movlb	0	; () banked
  2249  000B30  6FA9               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2250  000B32  0100               	movlb	0	; () banked
  2251  000B34  51A9               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2252  000B36  0D01               	mullw	1
  2253  000B38  0E0F               	movlw	15
  2254  000B3A  26F3               	addwf	prodl,f,c
  2255  000B3C  0E00               	movlw	0
  2256  000B3E  22F4               	addwfc	prodh,f,c
  2257  000B40  50F3               	movf	prodl,w,c
  2258  000B42  0100               	movlb	0	; () banked
  2259  000B44  0100               	movlb	0	; () banked
  2260  000B46  25CB               	addwf	_ic_ptr& (0+255),w,b
  2261  000B48  6EE1               	movwf	fsr1l,c
  2262  000B4A  50F4               	movf	prodh,w,c
  2263  000B4C  0100               	movlb	0	; () banked
  2264  000B4E  0100               	movlb	0	; () banked
  2265  000B50  21CC               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2266  000B52  6EE2               	movwf	fsr1h,c
  2267  000B54  CFDF FFE7          	movff	indf2,indf1
  2268                           
  2269                           ; BSR set to: 0
  2270  000B58  0100               	movlb	0	; () banked
  2271  000B5A  EE20 F019          	lfsr	2,25
  2272  000B5E  0100               	movlb	0	; () banked
  2273  000B60  51CB               	movf	_ic_ptr& (0+255),w,b
  2274  000B62  26D9               	addwf	fsr2l,f,c
  2275  000B64  0100               	movlb	0	; () banked
  2276  000B66  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2277  000B68  22DA               	addwfc	fsr2h,f,c
  2278  000B6A  2ADF               	incf	indf2,f,c
  2279  000B6C                     l2221:
  2280                           
  2281                           ; BSR set to: 0
  2282  000B6C  0100               	movlb	0	; () banked
  2283  000B6E  EE20 F019          	lfsr	2,25
  2284  000B72  0100               	movlb	0	; () banked
  2285  000B74  51CB               	movf	_ic_ptr& (0+255),w,b
  2286  000B76  26D9               	addwf	fsr2l,f,c
  2287  000B78  0100               	movlb	0	; () banked
  2288  000B7A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2289  000B7C  22DA               	addwfc	fsr2h,f,c
  2290  000B7E  50DF               	movf	indf2,w,c
  2291  000B80  0100               	movlb	0	; () banked
  2292  000B82  6FA8               	movwf	??_start_i2c_slave_reply& (0+255),b
  2293  000B84  0100               	movlb	0	; () banked
  2294  000B86  0100               	movlb	0	; () banked
  2295  000B88  51AA               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2296  000B8A  0100               	movlb	0	; () banked
  2297  000B8C  5DA8               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2298  000B8E  A0D8               	btfss	status,0,c
  2299  000B90  D7AB               	goto	l2217
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;my_i2c.c: 57: }
  2303                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2304                           
  2305                           ; BSR set to: 0
  2306  000B92  0100               	movlb	0	; () banked
  2307  000B94  EE20 F019          	lfsr	2,25
  2308  000B98  0100               	movlb	0	; () banked
  2309  000B9A  51CB               	movf	_ic_ptr& (0+255),w,b
  2310  000B9C  26D9               	addwf	fsr2l,f,c
  2311  000B9E  0100               	movlb	0	; () banked
  2312  000BA0  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2313  000BA2  22DA               	addwfc	fsr2h,f,c
  2314  000BA4  0100               	movlb	0	; () banked
  2315  000BA6  C0AA  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2316                           
  2317                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2318  000BAA  0100               	movlb	0	; () banked
  2319  000BAC  EE20 F01A          	lfsr	2,26
  2320  000BB0  0100               	movlb	0	; () banked
  2321  000BB2  51CB               	movf	_ic_ptr& (0+255),w,b
  2322  000BB4  26D9               	addwf	fsr2l,f,c
  2323  000BB6  0100               	movlb	0	; () banked
  2324  000BB8  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2325  000BBA  22DA               	addwfc	fsr2h,f,c
  2326  000BBC  0E01               	movlw	1
  2327  000BBE  6EDF               	movwf	indf2,c
  2328                           
  2329                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2330  000BC0  0100               	movlb	0	; () banked
  2331  000BC2  EE20 F00F          	lfsr	2,15
  2332  000BC6  0100               	movlb	0	; () banked
  2333  000BC8  51CB               	movf	_ic_ptr& (0+255),w,b
  2334  000BCA  26D9               	addwf	fsr2l,f,c
  2335  000BCC  0100               	movlb	0	; () banked
  2336  000BCE  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2337  000BD0  22DA               	addwfc	fsr2h,f,c
  2338  000BD2  50DF               	movf	indf2,w,c
  2339  000BD4  6EC9               	movwf	4041,c	;volatile
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2343  000BD6  88C6               	bsf	4038,4,c	;volatile
  2344                           
  2345                           ; BSR set to: 0
  2346  000BD8  0012               	return	
  2347  000BDA                     __end_of_start_i2c_slave_reply:
  2348                           	opt stack 0
  2349                           tblptru	equ	0xFF8
  2350                           tblptrh	equ	0xFF7
  2351                           tblptrl	equ	0xFF6
  2352                           tablat	equ	0xFF5
  2353                           prodh	equ	0xFF4
  2354                           prodl	equ	0xFF3
  2355                           postinc0	equ	0xFEE
  2356                           wreg	equ	0xFE8
  2357                           indf1	equ	0xFE7
  2358                           fsr1h	equ	0xFE2
  2359                           fsr1l	equ	0xFE1
  2360                           indf2	equ	0xFDF
  2361                           postinc2	equ	0xFDE
  2362                           postdec2	equ	0xFDD
  2363                           fsr2h	equ	0xFDA
  2364                           fsr2l	equ	0xFD9
  2365                           status	equ	0xFD8
  2366                           
  2367 ;; *************** function _returnADCValue *****************
  2368 ;; Defined at:
  2369 ;;		line 17 in file "../src/interrupts.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;		None
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  temp            2   40[BANK0 ] int 
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  2   38[BANK0 ] int 
  2376 ;; Registers used:
  2377 ;;		wreg, status,2, status,0
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2383 ;;      Params:         0       2       0       0       0
  2384 ;;      Locals:         0       2       0       0       0
  2385 ;;      Temps:          0       0       0       0       0
  2386 ;;      Totals:         0       4       0       0       0
  2387 ;;Total ram usage:        4 bytes
  2388 ;; Hardware stack levels used:    1
  2389 ;; Hardware stack levels required when called:   10
  2390 ;; This function calls:
  2391 ;;		Nothing
  2392 ;; This function is called by:
  2393 ;;		_main
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           	psect	text8
  2398  00191E                     __ptext8:
  2399                           	opt stack 0
  2400  00191E                     _returnADCValue:
  2401                           	opt stack 19
  2402                           
  2403                           ;interrupts.c: 19: int temp = 0;
  2404                           
  2405                           ; BSR set to: 0
  2406                           ;incstack = 0
  2407  00191E  0E00               	movlw	0
  2408  001920  0100               	movlb	0	; () banked
  2409  001922  0100               	movlb	0	; () banked
  2410  001924  6FA9               	movwf	(returnADCValue@temp+1)& (0+255),b
  2411  001926  0E00               	movlw	0
  2412  001928  0100               	movlb	0	; () banked
  2413  00192A  6FA8               	movwf	returnADCValue@temp& (0+255),b
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;interrupts.c: 20: temp = temp + 1;
  2417  00192C  0E01               	movlw	1
  2418  00192E  0100               	movlb	0	; () banked
  2419  001930  0100               	movlb	0	; () banked
  2420  001932  25A8               	addwf	returnADCValue@temp& (0+255),w,b
  2421  001934  0100               	movlb	0	; () banked
  2422  001936  0100               	movlb	0	; () banked
  2423  001938  6FA8               	movwf	returnADCValue@temp& (0+255),b
  2424  00193A  0E00               	movlw	0
  2425  00193C  0100               	movlb	0	; () banked
  2426  00193E  0100               	movlb	0	; () banked
  2427  001940  21A9               	addwfc	(returnADCValue@temp+1)& (0+255),w,b
  2428  001942  0100               	movlb	0	; () banked
  2429  001944  6FA9               	movwf	(returnADCValue@temp+1)& (0+255),b
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;interrupts.c: 21: return ADCValue;
  2433  001946  C0CD  F0A6         	movff	_ADCValue,?_returnADCValue
  2434  00194A  C0CE  F0A7         	movff	_ADCValue+1,?_returnADCValue+1
  2435  00194E  0012               	return	
  2436  001950                     __end_of_returnADCValue:
  2437                           	opt stack 0
  2438                           tblptru	equ	0xFF8
  2439                           tblptrh	equ	0xFF7
  2440                           tblptrl	equ	0xFF6
  2441                           tablat	equ	0xFF5
  2442                           prodh	equ	0xFF4
  2443                           prodl	equ	0xFF3
  2444                           postinc0	equ	0xFEE
  2445                           wreg	equ	0xFE8
  2446                           indf1	equ	0xFE7
  2447                           fsr1h	equ	0xFE2
  2448                           fsr1l	equ	0xFE1
  2449                           indf2	equ	0xFDF
  2450                           postinc2	equ	0xFDE
  2451                           postdec2	equ	0xFDD
  2452                           fsr2h	equ	0xFDA
  2453                           fsr2l	equ	0xFD9
  2454                           status	equ	0xFD8
  2455                           
  2456 ;; *************** function _init_uart_recv *****************
  2457 ;; Defined at:
  2458 ;;		line 30 in file "../src/my_uart.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  uc              2   38[BANK0 ] PTR struct __uart_comm
  2461 ;;		 -> main@uc(5), 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;		None
  2464 ;; Return value:  Size  Location     Type
  2465 ;;		None               void
  2466 ;; Registers used:
  2467 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2473 ;;      Params:         0       2       0       0       0
  2474 ;;      Locals:         0       0       0       0       0
  2475 ;;      Temps:          0       0       0       0       0
  2476 ;;      Totals:         0       2       0       0       0
  2477 ;;Total ram usage:        2 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:   10
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		_main
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           	psect	text9
  2488  001A40                     __ptext9:
  2489                           	opt stack 0
  2490  001A40                     _init_uart_recv:
  2491                           	opt stack 19
  2492                           
  2493                           ;my_uart.c: 31: uc_ptr = uc;
  2494                           
  2495                           ; BSR set to: 0
  2496                           ;incstack = 0
  2497  001A40  0100               	movlb	0	; () banked
  2498  001A42  C0A7  F04C         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2499  001A46  0100               	movlb	0	; () banked
  2500  001A48  C0A6  F04B         	movff	init_uart_recv@uc,_uc_ptr
  2501                           
  2502                           ; BSR set to: 0
  2503                           ;my_uart.c: 32: uc_ptr->buflen = 0;
  2504  001A4C  EE20 F004          	lfsr	2,4
  2505  001A50  504B               	movf	_uc_ptr,w,c
  2506  001A52  26D9               	addwf	fsr2l,f,c
  2507  001A54  504C               	movf	_uc_ptr+1,w,c
  2508  001A56  22DA               	addwfc	fsr2h,f,c
  2509  001A58  0E00               	movlw	0
  2510  001A5A  6EDF               	movwf	indf2,c
  2511                           
  2512                           ; BSR set to: 0
  2513  001A5C  0012               	return	
  2514  001A5E                     __end_of_init_uart_recv:
  2515                           	opt stack 0
  2516                           tblptru	equ	0xFF8
  2517                           tblptrh	equ	0xFF7
  2518                           tblptrl	equ	0xFF6
  2519                           tablat	equ	0xFF5
  2520                           prodh	equ	0xFF4
  2521                           prodl	equ	0xFF3
  2522                           postinc0	equ	0xFEE
  2523                           wreg	equ	0xFE8
  2524                           indf1	equ	0xFE7
  2525                           fsr1h	equ	0xFE2
  2526                           fsr1l	equ	0xFE1
  2527                           indf2	equ	0xFDF
  2528                           postinc2	equ	0xFDE
  2529                           postdec2	equ	0xFDD
  2530                           fsr2h	equ	0xFDA
  2531                           fsr2l	equ	0xFD9
  2532                           status	equ	0xFD8
  2533                           
  2534 ;; *************** function _init_timer1_lthread *****************
  2535 ;; Defined at:
  2536 ;;		line 6 in file "../src/timer1_thread.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;  tptr            2   38[BANK0 ] PTR struct __timer1_thre
  2539 ;;		 -> main@t1thread_data(2), 
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;		None
  2542 ;; Return value:  Size  Location     Type
  2543 ;;		None               void
  2544 ;; Registers used:
  2545 ;;		wreg, fsr2l, fsr2h
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2551 ;;      Params:         0       2       0       0       0
  2552 ;;      Locals:         0       0       0       0       0
  2553 ;;      Temps:          0       0       0       0       0
  2554 ;;      Totals:         0       2       0       0       0
  2555 ;;Total ram usage:        2 bytes
  2556 ;; Hardware stack levels used:    1
  2557 ;; Hardware stack levels required when called:   10
  2558 ;; This function calls:
  2559 ;;		Nothing
  2560 ;; This function is called by:
  2561 ;;		_main
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564                           
  2565                           	psect	text10
  2566  001AB0                     __ptext10:
  2567                           	opt stack 0
  2568  001AB0                     _init_timer1_lthread:
  2569                           	opt stack 19
  2570                           
  2571                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;incstack = 0
  2575  001AB0  C0A6  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2576  001AB4  C0A7  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2577  001AB8  0E00               	movlw	0
  2578  001ABA  6EDE               	movwf	postinc2,c
  2579  001ABC  0E00               	movlw	0
  2580  001ABE  6EDD               	movwf	postdec2,c
  2581  001AC0  0012               	return	
  2582  001AC2                     __end_of_init_timer1_lthread:
  2583                           	opt stack 0
  2584                           tblptru	equ	0xFF8
  2585                           tblptrh	equ	0xFF7
  2586                           tblptrl	equ	0xFF6
  2587                           tablat	equ	0xFF5
  2588                           prodh	equ	0xFF4
  2589                           prodl	equ	0xFF3
  2590                           postinc0	equ	0xFEE
  2591                           wreg	equ	0xFE8
  2592                           indf1	equ	0xFE7
  2593                           fsr1h	equ	0xFE2
  2594                           fsr1l	equ	0xFE1
  2595                           indf2	equ	0xFDF
  2596                           postinc2	equ	0xFDE
  2597                           postdec2	equ	0xFDD
  2598                           fsr2h	equ	0xFDA
  2599                           fsr2l	equ	0xFD9
  2600                           status	equ	0xFD8
  2601                           
  2602 ;; *************** function _init_timer0_lthread *****************
  2603 ;; Defined at:
  2604 ;;		line 10 in file "../src/timer0_thread.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  tptr            2   38[BANK0 ] PTR struct __timer0_thre
  2607 ;;		 -> main@t0thread_data(2), 
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;		None
  2610 ;; Return value:  Size  Location     Type
  2611 ;;		None               void
  2612 ;; Registers used:
  2613 ;;		wreg, fsr2l, fsr2h
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2619 ;;      Params:         0       2       0       0       0
  2620 ;;      Locals:         0       0       0       0       0
  2621 ;;      Temps:          0       0       0       0       0
  2622 ;;      Totals:         0       2       0       0       0
  2623 ;;Total ram usage:        2 bytes
  2624 ;; Hardware stack levels used:    1
  2625 ;; Hardware stack levels required when called:   10
  2626 ;; This function calls:
  2627 ;;		Nothing
  2628 ;; This function is called by:
  2629 ;;		_main
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text11
  2634  001AC2                     __ptext11:
  2635                           	opt stack 0
  2636  001AC2                     _init_timer0_lthread:
  2637                           	opt stack 19
  2638                           
  2639                           ;timer0_thread.c: 11: tptr->msgcount = 0;
  2640                           
  2641                           ;incstack = 0
  2642  001AC2  C0A6  FFD9         	movff	init_timer0_lthread@tptr,fsr2l
  2643  001AC6  C0A7  FFDA         	movff	init_timer0_lthread@tptr+1,fsr2h
  2644  001ACA  0E00               	movlw	0
  2645  001ACC  6EDE               	movwf	postinc2,c
  2646  001ACE  0E00               	movlw	0
  2647  001AD0  6EDD               	movwf	postdec2,c
  2648  001AD2  0012               	return	
  2649  001AD4                     __end_of_init_timer0_lthread:
  2650                           	opt stack 0
  2651                           tblptru	equ	0xFF8
  2652                           tblptrh	equ	0xFF7
  2653                           tblptrl	equ	0xFF6
  2654                           tablat	equ	0xFF5
  2655                           prodh	equ	0xFF4
  2656                           prodl	equ	0xFF3
  2657                           postinc0	equ	0xFEE
  2658                           wreg	equ	0xFE8
  2659                           indf1	equ	0xFE7
  2660                           fsr1h	equ	0xFE2
  2661                           fsr1l	equ	0xFE1
  2662                           indf2	equ	0xFDF
  2663                           postinc2	equ	0xFDE
  2664                           postdec2	equ	0xFDD
  2665                           fsr2h	equ	0xFDA
  2666                           fsr2l	equ	0xFD9
  2667                           status	equ	0xFD8
  2668                           
  2669 ;; *************** function _init_queues *****************
  2670 ;; Defined at:
  2671 ;;		line 194 in file "../src/messages.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;		None
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;		None
  2676 ;; Return value:  Size  Location     Type
  2677 ;;		None               void
  2678 ;; Registers used:
  2679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2685 ;;      Params:         0       0       0       0       0
  2686 ;;      Locals:         0       0       0       0       0
  2687 ;;      Temps:          0       1       0       0       0
  2688 ;;      Totals:         0       1       0       0       0
  2689 ;;Total ram usage:        1 bytes
  2690 ;; Hardware stack levels used:    1
  2691 ;; Hardware stack levels required when called:   11
  2692 ;; This function calls:
  2693 ;;		_init_queue
  2694 ;; This function is called by:
  2695 ;;		_main
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           	psect	text12
  2700  0014E2                     __ptext12:
  2701                           	opt stack 0
  2702  0014E2                     _init_queues:
  2703                           	opt stack 18
  2704                           
  2705                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2706                           
  2707                           ;incstack = 0
  2708  0014E2  0100               	movlb	0	; () banked
  2709  0014E4  6FAA               	movwf	??_init_queues& (0+255),b
  2710  0014E6  0E00               	movlw	0
  2711  0014E8  6E4D               	movwf	_MQ_Main_Willing_to_block,c
  2712  0014EA  0100               	movlb	0	; () banked
  2713  0014EC  51AA               	movf	??_init_queues& (0+255),w,b
  2714                           
  2715                           ; BSR set to: 0
  2716                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2717  0014EE  0101               	movlb	1	; () banked
  2718  0014F0  0E01               	movlw	high _ToMainLow_MQ
  2719  0014F2  0100               	movlb	0	; () banked
  2720  0014F4  0100               	movlb	0	; () banked
  2721  0014F6  6FA7               	movwf	(init_queue@qptr+1)& (0+255),b
  2722  0014F8  0101               	movlb	1	; () banked
  2723  0014FA  0E6C               	movlw	low _ToMainLow_MQ
  2724  0014FC  0100               	movlb	0	; () banked
  2725  0014FE  0100               	movlb	0	; () banked
  2726  001500  6FA6               	movwf	init_queue@qptr& (0+255),b
  2727  001502  ECC2  F009         	call	_init_queue	;wreg free
  2728                           
  2729                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2730  001506  0101               	movlb	1	; () banked
  2731  001508  0E01               	movlw	high _ToMainHigh_MQ
  2732  00150A  0100               	movlb	0	; () banked
  2733  00150C  0100               	movlb	0	; () banked
  2734  00150E  6FA7               	movwf	(init_queue@qptr+1)& (0+255),b
  2735  001510  0101               	movlb	1	; () banked
  2736  001512  0E36               	movlw	low _ToMainHigh_MQ
  2737  001514  0100               	movlb	0	; () banked
  2738  001516  0100               	movlb	0	; () banked
  2739  001518  6FA6               	movwf	init_queue@qptr& (0+255),b
  2740  00151A  ECC2  F009         	call	_init_queue	;wreg free
  2741                           
  2742                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2743  00151E  0101               	movlb	1	; () banked
  2744  001520  0E01               	movlw	high _FromMainLow_MQ
  2745  001522  0100               	movlb	0	; () banked
  2746  001524  0100               	movlb	0	; () banked
  2747  001526  6FA7               	movwf	(init_queue@qptr+1)& (0+255),b
  2748  001528  0101               	movlb	1	; () banked
  2749  00152A  0E00               	movlw	low _FromMainLow_MQ
  2750  00152C  0100               	movlb	0	; () banked
  2751  00152E  0100               	movlb	0	; () banked
  2752  001530  6FA6               	movwf	init_queue@qptr& (0+255),b
  2753  001532  ECC2  F009         	call	_init_queue	;wreg free
  2754                           
  2755                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2756  001536  0102               	movlb	2	; () banked
  2757  001538  0E02               	movlw	high _FromMainHigh_MQ
  2758  00153A  0100               	movlb	0	; () banked
  2759  00153C  0100               	movlb	0	; () banked
  2760  00153E  6FA7               	movwf	(init_queue@qptr+1)& (0+255),b
  2761  001540  0102               	movlb	2	; () banked
  2762  001542  0E00               	movlw	low _FromMainHigh_MQ
  2763  001544  0100               	movlb	0	; () banked
  2764  001546  0100               	movlb	0	; () banked
  2765  001548  6FA6               	movwf	init_queue@qptr& (0+255),b
  2766  00154A  ECC2  F009         	call	_init_queue	;wreg free
  2767  00154E  0012               	return	
  2768  001550                     __end_of_init_queues:
  2769                           	opt stack 0
  2770                           tblptru	equ	0xFF8
  2771                           tblptrh	equ	0xFF7
  2772                           tblptrl	equ	0xFF6
  2773                           tablat	equ	0xFF5
  2774                           prodh	equ	0xFF4
  2775                           prodl	equ	0xFF3
  2776                           postinc0	equ	0xFEE
  2777                           wreg	equ	0xFE8
  2778                           indf1	equ	0xFE7
  2779                           fsr1h	equ	0xFE2
  2780                           fsr1l	equ	0xFE1
  2781                           indf2	equ	0xFDF
  2782                           postinc2	equ	0xFDE
  2783                           postdec2	equ	0xFDD
  2784                           fsr2h	equ	0xFDA
  2785                           fsr2l	equ	0xFD9
  2786                           status	equ	0xFD8
  2787                           
  2788 ;; *************** function _init_queue *****************
  2789 ;; Defined at:
  2790 ;;		line 14 in file "../src/messages.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  qptr            2   38[BANK0 ] PTR struct __msg_queue
  2793 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  i               1   41[BANK0 ] unsigned char 
  2796 ;; Return value:  Size  Location     Type
  2797 ;;		None               void
  2798 ;; Registers used:
  2799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2805 ;;      Params:         0       2       0       0       0
  2806 ;;      Locals:         0       1       0       0       0
  2807 ;;      Temps:          0       1       0       0       0
  2808 ;;      Totals:         0       4       0       0       0
  2809 ;;Total ram usage:        4 bytes
  2810 ;; Hardware stack levels used:    1
  2811 ;; Hardware stack levels required when called:   10
  2812 ;; This function calls:
  2813 ;;		Nothing
  2814 ;; This function is called by:
  2815 ;;		_init_queues
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text13
  2820  001384                     __ptext13:
  2821                           	opt stack 0
  2822  001384                     _init_queue:
  2823                           	opt stack 18
  2824                           
  2825                           ;messages.c: 15: unsigned char i;
  2826                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2827                           
  2828                           ;incstack = 0
  2829  001384  0100               	movlb	0	; () banked
  2830  001386  EE20 F034          	lfsr	2,52
  2831  00138A  0100               	movlb	0	; () banked
  2832  00138C  51A6               	movf	init_queue@qptr& (0+255),w,b
  2833  00138E  26D9               	addwf	fsr2l,f,c
  2834  001390  0100               	movlb	0	; () banked
  2835  001392  51A7               	movf	(init_queue@qptr+1)& (0+255),w,b
  2836  001394  22DA               	addwfc	fsr2h,f,c
  2837  001396  0E00               	movlw	0
  2838  001398  6EDF               	movwf	indf2,c
  2839                           
  2840                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2841  00139A  0100               	movlb	0	; () banked
  2842  00139C  EE20 F035          	lfsr	2,53
  2843  0013A0  0100               	movlb	0	; () banked
  2844  0013A2  51A6               	movf	init_queue@qptr& (0+255),w,b
  2845  0013A4  26D9               	addwf	fsr2l,f,c
  2846  0013A6  0100               	movlb	0	; () banked
  2847  0013A8  51A7               	movf	(init_queue@qptr+1)& (0+255),w,b
  2848  0013AA  22DA               	addwfc	fsr2h,f,c
  2849  0013AC  0E00               	movlw	0
  2850  0013AE  6EDF               	movwf	indf2,c
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2854  0013B0  0100               	movlb	0	; () banked
  2855  0013B2  6FA8               	movwf	??_init_queue& (0+255),b
  2856  0013B4  0E00               	movlw	0
  2857  0013B6  0100               	movlb	0	; () banked
  2858  0013B8  0100               	movlb	0	; () banked
  2859  0013BA  6FA9               	movwf	init_queue@i& (0+255),b
  2860  0013BC  0100               	movlb	0	; () banked
  2861  0013BE  51A8               	movf	??_init_queue& (0+255),w,b
  2862                           
  2863                           ; BSR set to: 0
  2864  0013C0  0E03               	movlw	3
  2865  0013C2  0100               	movlb	0	; () banked
  2866  0013C4  0100               	movlb	0	; () banked
  2867  0013C6  65A9               	cpfsgt	init_queue@i& (0+255),b
  2868  0013C8  D001               	goto	l2435
  2869  0013CA  0012               	return	
  2870  0013CC                     l2435:
  2871                           
  2872                           ; BSR set to: 0
  2873                           ;messages.c: 20: qptr->queue[i].full = 0;
  2874  0013CC  0100               	movlb	0	; () banked
  2875  0013CE  0100               	movlb	0	; () banked
  2876  0013D0  51A9               	movf	init_queue@i& (0+255),w,b
  2877  0013D2  0D0D               	mullw	13
  2878  0013D4  50F3               	movf	prodl,w,c
  2879  0013D6  0100               	movlb	0	; () banked
  2880  0013D8  0100               	movlb	0	; () banked
  2881  0013DA  25A6               	addwf	init_queue@qptr& (0+255),w,b
  2882  0013DC  6ED9               	movwf	fsr2l,c
  2883  0013DE  50F4               	movf	prodh,w,c
  2884  0013E0  0100               	movlb	0	; () banked
  2885  0013E2  0100               	movlb	0	; () banked
  2886  0013E4  21A7               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2887  0013E6  6EDA               	movwf	fsr2h,c
  2888  0013E8  0E00               	movlw	0
  2889  0013EA  6EDF               	movwf	indf2,c
  2890                           
  2891                           ; BSR set to: 0
  2892  0013EC  0100               	movlb	0	; () banked
  2893  0013EE  0100               	movlb	0	; () banked
  2894  0013F0  2BA9               	incf	init_queue@i& (0+255),f,b
  2895                           
  2896                           ; BSR set to: 0
  2897  0013F2  0E03               	movlw	3
  2898  0013F4  0100               	movlb	0	; () banked
  2899  0013F6  0100               	movlb	0	; () banked
  2900  0013F8  65A9               	cpfsgt	init_queue@i& (0+255),b
  2901  0013FA  D7E8               	goto	l2435
  2902  0013FC  0012               	return	
  2903  0013FE                     __end_of_init_queue:
  2904                           	opt stack 0
  2905                           tblptru	equ	0xFF8
  2906                           tblptrh	equ	0xFF7
  2907                           tblptrl	equ	0xFF6
  2908                           tablat	equ	0xFF5
  2909                           prodh	equ	0xFF4
  2910                           prodl	equ	0xFF3
  2911                           postinc0	equ	0xFEE
  2912                           wreg	equ	0xFE8
  2913                           indf1	equ	0xFE7
  2914                           fsr1h	equ	0xFE2
  2915                           fsr1l	equ	0xFE1
  2916                           indf2	equ	0xFDF
  2917                           postinc2	equ	0xFDE
  2918                           postdec2	equ	0xFDD
  2919                           fsr2h	equ	0xFDA
  2920                           fsr2l	equ	0xFD9
  2921                           status	equ	0xFD8
  2922                           
  2923 ;; *************** function _init_i2c *****************
  2924 ;; Defined at:
  2925 ;;		line 300 in file "../src/my_i2c.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  ic              2   38[BANK0 ] PTR struct __i2c_comm
  2928 ;;		 -> main@ic(28), 
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;		None
  2931 ;; Return value:  Size  Location     Type
  2932 ;;		None               void
  2933 ;; Registers used:
  2934 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2940 ;;      Params:         0       2       0       0       0
  2941 ;;      Locals:         0       0       0       0       0
  2942 ;;      Temps:          0       0       0       0       0
  2943 ;;      Totals:         0       2       0       0       0
  2944 ;;Total ram usage:        2 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; Hardware stack levels required when called:   10
  2947 ;; This function calls:
  2948 ;;		Nothing
  2949 ;; This function is called by:
  2950 ;;		_main
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           	psect	text14
  2955  001550                     __ptext14:
  2956                           	opt stack 0
  2957  001550                     _init_i2c:
  2958                           	opt stack 19
  2959                           
  2960                           ;my_i2c.c: 301: ic_ptr = ic;
  2961                           
  2962                           ; BSR set to: 0
  2963                           ;incstack = 0
  2964  001550  0100               	movlb	0	; () banked
  2965  001552  0100               	movlb	0	; () banked
  2966  001554  C0A7  F0CC         	movff	init_i2c@ic+1,_ic_ptr+1
  2967  001558  0100               	movlb	0	; () banked
  2968  00155A  0100               	movlb	0	; () banked
  2969  00155C  C0A6  F0CB         	movff	init_i2c@ic,_ic_ptr
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;my_i2c.c: 302: ic_ptr->buflen = 0;
  2973  001560  0100               	movlb	0	; () banked
  2974  001562  EE20 F00A          	lfsr	2,10
  2975  001566  0100               	movlb	0	; () banked
  2976  001568  51CB               	movf	_ic_ptr& (0+255),w,b
  2977  00156A  26D9               	addwf	fsr2l,f,c
  2978  00156C  0100               	movlb	0	; () banked
  2979  00156E  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2980  001570  22DA               	addwfc	fsr2h,f,c
  2981  001572  0E00               	movlw	0
  2982  001574  6EDF               	movwf	indf2,c
  2983                           
  2984                           ; BSR set to: 0
  2985                           ;my_i2c.c: 303: ic_ptr->event_count = 0;
  2986  001576  0100               	movlb	0	; () banked
  2987  001578  EE20 F00B          	lfsr	2,11
  2988  00157C  0100               	movlb	0	; () banked
  2989  00157E  51CB               	movf	_ic_ptr& (0+255),w,b
  2990  001580  26D9               	addwf	fsr2l,f,c
  2991  001582  0100               	movlb	0	; () banked
  2992  001584  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2993  001586  22DA               	addwfc	fsr2h,f,c
  2994  001588  0E00               	movlw	0
  2995  00158A  6EDF               	movwf	indf2,c
  2996                           
  2997                           ; BSR set to: 0
  2998                           ;my_i2c.c: 304: ic_ptr->status = 0x5;
  2999  00158C  0100               	movlb	0	; () banked
  3000  00158E  EE20 F00C          	lfsr	2,12
  3001  001592  0100               	movlb	0	; () banked
  3002  001594  51CB               	movf	_ic_ptr& (0+255),w,b
  3003  001596  26D9               	addwf	fsr2l,f,c
  3004  001598  0100               	movlb	0	; () banked
  3005  00159A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  3006  00159C  22DA               	addwfc	fsr2h,f,c
  3007  00159E  0E05               	movlw	5
  3008  0015A0  6EDF               	movwf	indf2,c
  3009                           
  3010                           ; BSR set to: 0
  3011                           ;my_i2c.c: 305: ic_ptr->error_count = 0;
  3012  0015A2  0100               	movlb	0	; () banked
  3013  0015A4  EE20 F00E          	lfsr	2,14
  3014  0015A8  0100               	movlb	0	; () banked
  3015  0015AA  51CB               	movf	_ic_ptr& (0+255),w,b
  3016  0015AC  26D9               	addwf	fsr2l,f,c
  3017  0015AE  0100               	movlb	0	; () banked
  3018  0015B0  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  3019  0015B2  22DA               	addwfc	fsr2h,f,c
  3020  0015B4  0E00               	movlw	0
  3021  0015B6  6EDF               	movwf	indf2,c
  3022                           
  3023                           ; BSR set to: 0
  3024  0015B8  0012               	return	
  3025  0015BA                     __end_of_init_i2c:
  3026                           	opt stack 0
  3027                           tblptru	equ	0xFF8
  3028                           tblptrh	equ	0xFF7
  3029                           tblptrl	equ	0xFF6
  3030                           tablat	equ	0xFF5
  3031                           prodh	equ	0xFF4
  3032                           prodl	equ	0xFF3
  3033                           postinc0	equ	0xFEE
  3034                           wreg	equ	0xFE8
  3035                           indf1	equ	0xFE7
  3036                           fsr1h	equ	0xFE2
  3037                           fsr1l	equ	0xFE1
  3038                           indf2	equ	0xFDF
  3039                           postinc2	equ	0xFDE
  3040                           postdec2	equ	0xFDD
  3041                           fsr2h	equ	0xFDA
  3042                           fsr2l	equ	0xFD9
  3043                           status	equ	0xFD8
  3044                           
  3045 ;; *************** function _initADC *****************
  3046 ;; Defined at:
  3047 ;;		line 98 in file "../src/main.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;		None
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;  ADCValue        2   45[BANK0 ] int 
  3052 ;; Return value:  Size  Location     Type
  3053 ;;		None               void
  3054 ;; Registers used:
  3055 ;;		wreg, status,2, status,0, cstack
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3061 ;;      Params:         0       0       0       0       0
  3062 ;;      Locals:         0       2       0       0       0
  3063 ;;      Temps:          0       2       0       0       0
  3064 ;;      Totals:         0       4       0       0       0
  3065 ;;Total ram usage:        4 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; Hardware stack levels required when called:   11
  3068 ;; This function calls:
  3069 ;;		_ConvertADC
  3070 ;;		_OpenADC
  3071 ;; This function is called by:
  3072 ;;		_main
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           	psect	text15
  3077  0016F0                     __ptext15:
  3078                           	opt stack 0
  3079  0016F0                     _initADC:
  3080                           	opt stack 18
  3081                           
  3082                           ;main.c: 100: int ADCValue = 0;
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;incstack = 0
  3086  0016F0  0E00               	movlw	0
  3087  0016F2  0100               	movlb	0	; () banked
  3088  0016F4  0100               	movlb	0	; () banked
  3089  0016F6  6FAE               	movwf	(initADC@ADCValue+1)& (0+255),b
  3090  0016F8  0E00               	movlw	0
  3091  0016FA  0100               	movlb	0	; () banked
  3092  0016FC  6FAD               	movwf	initADC@ADCValue& (0+255),b
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;main.c: 102: OpenADC(0b10001111 & 0b11111111 & 0b11111111, 0b10000111 & 0b11111111 & 0b
      +                          11111110 & 0b11111101, 0b11111111);
  3096  0016FE  0100               	movlb	0	; () banked
  3097  001700  6FAB               	movwf	??_initADC& (0+255),b
  3098  001702  0E84               	movlw	132
  3099  001704  0100               	movlb	0	; () banked
  3100  001706  0100               	movlb	0	; () banked
  3101  001708  6FA6               	movwf	OpenADC@config2& (0+255),b
  3102  00170A  0100               	movlb	0	; () banked
  3103  00170C  51AB               	movf	??_initADC& (0+255),w,b
  3104  00170E  0100               	movlb	0	; () banked
  3105  001710  6FAC               	movwf	(??_initADC+1)& (0+255),b
  3106  001712  0EFF               	movlw	255
  3107  001714  0100               	movlb	0	; () banked
  3108  001716  0100               	movlb	0	; () banked
  3109  001718  6FA7               	movwf	OpenADC@portconfig& (0+255),b
  3110  00171A  0100               	movlb	0	; () banked
  3111  00171C  51AC               	movf	(??_initADC+1)& (0+255),w,b
  3112  00171E  0E8F               	movlw	143
  3113  001720  EC80  F009         	call	_OpenADC
  3114                           
  3115                           ;main.c: 103: (PIR1bits.ADIF=0,INTCONbits.PEIE=1,PIE1bits.ADIE=1);
  3116  001724  9C9E               	bcf	3998,6,c	;volatile
  3117  001726  8CF2               	bsf	intcon,6,c	;volatile
  3118  001728  8C9D               	bsf	3997,6,c	;volatile
  3119                           
  3120                           ;main.c: 104: (INTCONbits.GIE = 1);
  3121  00172A  8EF2               	bsf	intcon,7,c	;volatile
  3122                           
  3123                           ;main.c: 105: ConvertADC();
  3124  00172C  EC87  F00D         	call	_ConvertADC	;wreg free
  3125  001730  0012               	return	
  3126  001732                     __end_of_initADC:
  3127                           	opt stack 0
  3128                           tblptru	equ	0xFF8
  3129                           tblptrh	equ	0xFF7
  3130                           tblptrl	equ	0xFF6
  3131                           tablat	equ	0xFF5
  3132                           prodh	equ	0xFF4
  3133                           prodl	equ	0xFF3
  3134                           intcon	equ	0xFF2
  3135                           postinc0	equ	0xFEE
  3136                           wreg	equ	0xFE8
  3137                           indf1	equ	0xFE7
  3138                           fsr1h	equ	0xFE2
  3139                           fsr1l	equ	0xFE1
  3140                           indf2	equ	0xFDF
  3141                           postinc2	equ	0xFDE
  3142                           postdec2	equ	0xFDD
  3143                           fsr2h	equ	0xFDA
  3144                           fsr2l	equ	0xFD9
  3145                           status	equ	0xFD8
  3146                           
  3147 ;; *************** function _OpenADC *****************
  3148 ;; Defined at:
  3149 ;;		line 68 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcopen.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  config          1    wreg     unsigned char 
  3152 ;;  config2         1   38[BANK0 ] unsigned char 
  3153 ;;  portconfig      1   39[BANK0 ] unsigned char 
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;  config          1   42[BANK0 ] unsigned char 
  3156 ;; Return value:  Size  Location     Type
  3157 ;;		None               void
  3158 ;; Registers used:
  3159 ;;		wreg, status,2, status,0
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3165 ;;      Params:         0       2       0       0       0
  3166 ;;      Locals:         0       1       0       0       0
  3167 ;;      Temps:          0       2       0       0       0
  3168 ;;      Totals:         0       5       0       0       0
  3169 ;;Total ram usage:        5 bytes
  3170 ;; Hardware stack levels used:    1
  3171 ;; Hardware stack levels required when called:   10
  3172 ;; This function calls:
  3173 ;;		Nothing
  3174 ;; This function is called by:
  3175 ;;		_initADC
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           	psect	text16
  3180  001300                     __ptext16:
  3181                           	opt stack 0
  3182  001300                     _OpenADC:
  3183                           	opt stack 18
  3184                           
  3185                           ;incstack = 0
  3186                           ;OpenADC@config stored from wreg
  3187  001300  CFE8 F0AA          	movff	wreg,OpenADC@config
  3188  001304  0E00               	movlw	0
  3189  001306  6EC2               	movwf	4034,c	;volatile
  3190  001308  0E00               	movlw	0
  3191  00130A  6EC0               	movwf	4032,c	;volatile
  3192  00130C  0100               	movlb	0	; () banked
  3193  00130E  0100               	movlb	0	; () banked
  3194  001310  90D8               	bcf	status,0,c
  3195  001312  31A6               	rrcf	OpenADC@config2& (0+255),w,b
  3196  001314  0B3C               	andlw	60
  3197  001316  6EC2               	movwf	4034,c	;volatile
  3198                           
  3199                           ; BSR set to: 0
  3200  001318  C0A6  F0A8         	movff	OpenADC@config2,??_OpenADC
  3201  00131C  0100               	movlb	0	; () banked
  3202  00131E  3BA8               	swapf	??_OpenADC& (0+255),f,b
  3203  001320  0EF0               	movlw	240
  3204  001322  17A8               	andwf	??_OpenADC& (0+255),f,b
  3205  001324  0E30               	movlw	48
  3206  001326  0100               	movlb	0	; () banked
  3207  001328  17A8               	andwf	??_OpenADC& (0+255),f,b
  3208  00132A  0100               	movlb	0	; () banked
  3209  00132C  0100               	movlb	0	; () banked
  3210  00132E  51A7               	movf	OpenADC@portconfig& (0+255),w,b
  3211  001330  0B0F               	andlw	15
  3212  001332  0100               	movlb	0	; () banked
  3213  001334  11A8               	iorwf	??_OpenADC& (0+255),w,b
  3214  001336  6EC1               	movwf	4033,c	;volatile
  3215                           
  3216                           ; BSR set to: 0
  3217  001338  C0AA  F0A8         	movff	OpenADC@config,??_OpenADC
  3218  00133C  0100               	movlb	0	; () banked
  3219  00133E  90D8               	bcf	status,0,c
  3220  001340  37A8               	rlcf	??_OpenADC& (0+255),f,b
  3221  001342  0100               	movlb	0	; () banked
  3222  001344  90D8               	bcf	status,0,c
  3223  001346  37A8               	rlcf	??_OpenADC& (0+255),f,b
  3224  001348  0E38               	movlw	56
  3225  00134A  0100               	movlb	0	; () banked
  3226  00134C  17A8               	andwf	??_OpenADC& (0+255),f,b
  3227  00134E  C0AA  F0A9         	movff	OpenADC@config,??_OpenADC+1
  3228  001352  0100               	movlb	0	; () banked
  3229  001354  3BA9               	swapf	(??_OpenADC+1)& (0+255),f,b
  3230  001356  0E0F               	movlw	15
  3231  001358  17A9               	andwf	(??_OpenADC+1)& (0+255),f,b
  3232  00135A  0E07               	movlw	7
  3233  00135C  0100               	movlb	0	; () banked
  3234  00135E  17A9               	andwf	(??_OpenADC+1)& (0+255),f,b
  3235  001360  0100               	movlb	0	; () banked
  3236  001362  0100               	movlb	0	; () banked
  3237  001364  51AA               	movf	OpenADC@config& (0+255),w,b
  3238  001366  0B80               	andlw	128
  3239  001368  0100               	movlb	0	; () banked
  3240  00136A  11A9               	iorwf	(??_OpenADC+1)& (0+255),w,b
  3241  00136C  0100               	movlb	0	; () banked
  3242  00136E  11A8               	iorwf	??_OpenADC& (0+255),w,b
  3243  001370  6EC0               	movwf	4032,c	;volatile
  3244                           
  3245                           ; BSR set to: 0
  3246  001372  0100               	movlb	0	; () banked
  3247  001374  0100               	movlb	0	; () banked
  3248  001376  AFA6               	btfss	OpenADC@config2& (0+255),7,b
  3249  001378  D003               	goto	l424
  3250                           
  3251                           ; BSR set to: 0
  3252  00137A  9C9E               	bcf	3998,6,c	;volatile
  3253  00137C  8C9D               	bsf	3997,6,c	;volatile
  3254  00137E  8CF2               	bsf	intcon,6,c	;volatile
  3255  001380                     l424:
  3256                           
  3257                           ; BSR set to: 0
  3258  001380  80C2               	bsf	4034,0,c	;volatile
  3259                           
  3260                           ; BSR set to: 0
  3261  001382  0012               	return	
  3262  001384                     __end_of_OpenADC:
  3263                           	opt stack 0
  3264                           tblptru	equ	0xFF8
  3265                           tblptrh	equ	0xFF7
  3266                           tblptrl	equ	0xFF6
  3267                           tablat	equ	0xFF5
  3268                           prodh	equ	0xFF4
  3269                           prodl	equ	0xFF3
  3270                           intcon	equ	0xFF2
  3271                           postinc0	equ	0xFEE
  3272                           wreg	equ	0xFE8
  3273                           indf1	equ	0xFE7
  3274                           fsr1h	equ	0xFE2
  3275                           fsr1l	equ	0xFE1
  3276                           indf2	equ	0xFDF
  3277                           postinc2	equ	0xFDE
  3278                           postdec2	equ	0xFDD
  3279                           fsr2h	equ	0xFDA
  3280                           fsr2l	equ	0xFD9
  3281                           status	equ	0xFD8
  3282                           
  3283 ;; *************** function _ConvertADC *****************
  3284 ;; Defined at:
  3285 ;;		line 22 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcconv.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;		None
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;		None
  3290 ;; Return value:  Size  Location     Type
  3291 ;;		None               void
  3292 ;; Registers used:
  3293 ;;		None
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3299 ;;      Params:         0       0       0       0       0
  3300 ;;      Locals:         0       0       0       0       0
  3301 ;;      Temps:          0       0       0       0       0
  3302 ;;      Totals:         0       0       0       0       0
  3303 ;;Total ram usage:        0 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; Hardware stack levels required when called:   10
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_initADC
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           	psect	text17
  3314  001B0E                     __ptext17:
  3315                           	opt stack 0
  3316  001B0E                     _ConvertADC:
  3317                           	opt stack 18
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;incstack = 0
  3321  001B0E  82C2               	bsf	4034,1,c	;volatile
  3322  001B10  0012               	return	
  3323  001B12                     __end_of_ConvertADC:
  3324                           	opt stack 0
  3325                           tblptru	equ	0xFF8
  3326                           tblptrh	equ	0xFF7
  3327                           tblptrl	equ	0xFF6
  3328                           tablat	equ	0xFF5
  3329                           prodh	equ	0xFF4
  3330                           prodl	equ	0xFF3
  3331                           intcon	equ	0xFF2
  3332                           postinc0	equ	0xFEE
  3333                           wreg	equ	0xFE8
  3334                           indf1	equ	0xFE7
  3335                           fsr1h	equ	0xFE2
  3336                           fsr1l	equ	0xFE1
  3337                           indf2	equ	0xFDF
  3338                           postinc2	equ	0xFDE
  3339                           postdec2	equ	0xFDD
  3340                           fsr2h	equ	0xFDA
  3341                           fsr2l	equ	0xFD9
  3342                           status	equ	0xFD8
  3343                           
  3344 ;; *************** function _i2c_configure_slave *****************
  3345 ;; Defined at:
  3346 ;;		line 311 in file "../src/my_i2c.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;  addr            1    wreg     unsigned char 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  addr            1   38[BANK0 ] unsigned char 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;		None               void
  3353 ;; Registers used:
  3354 ;;		wreg, status,2, status,0
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3360 ;;      Params:         0       0       0       0       0
  3361 ;;      Locals:         0       1       0       0       0
  3362 ;;      Temps:          0       0       0       0       0
  3363 ;;      Totals:         0       1       0       0       0
  3364 ;;Total ram usage:        1 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; Hardware stack levels required when called:   10
  3367 ;; This function calls:
  3368 ;;		Nothing
  3369 ;; This function is called by:
  3370 ;;		_main
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374                           	psect	text18
  3375  0019A8                     __ptext18:
  3376                           	opt stack 0
  3377  0019A8                     _i2c_configure_slave:
  3378                           	opt stack 19
  3379                           
  3380                           ;incstack = 0
  3381                           ;i2c_configure_slave@addr stored from wreg
  3382  0019A8  CFE8 F0A6          	movff	wreg,i2c_configure_slave@addr
  3383                           
  3384                           ;my_i2c.c: 314: TRISCbits.TRISC3 = 1;
  3385  0019AC  8694               	bsf	3988,3,c	;volatile
  3386                           
  3387                           ;my_i2c.c: 315: TRISCbits.TRISC4 = 1;
  3388  0019AE  8894               	bsf	3988,4,c	;volatile
  3389                           
  3390                           ;my_i2c.c: 317: SSPADD = addr;
  3391  0019B0  C0A6  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3392                           
  3393                           ;my_i2c.c: 319: SSPSTAT = 0x0;
  3394  0019B4  0E00               	movlw	0
  3395  0019B6  6EC7               	movwf	4039,c	;volatile
  3396                           
  3397                           ;my_i2c.c: 320: SSPCON1 = 0x0;
  3398  0019B8  0E00               	movlw	0
  3399  0019BA  6EC6               	movwf	4038,c	;volatile
  3400                           
  3401                           ;my_i2c.c: 321: SSPCON2 = 0x0;
  3402  0019BC  0E00               	movlw	0
  3403  0019BE  6EC5               	movwf	4037,c	;volatile
  3404                           
  3405                           ;my_i2c.c: 322: SSPCON1 |= 0x0E;
  3406  0019C0  0E0E               	movlw	14
  3407  0019C2  12C6               	iorwf	4038,f,c	;volatile
  3408                           
  3409                           ;my_i2c.c: 323: SSPSTAT |= 0b10000000;
  3410  0019C4  8EC7               	bsf	4039,7,c	;volatile
  3411                           
  3412                           ;my_i2c.c: 325: TRISCbits.TRISC3 = 1;
  3413  0019C6  8694               	bsf	3988,3,c	;volatile
  3414                           
  3415                           ;my_i2c.c: 326: TRISCbits.TRISC4 = 1;
  3416  0019C8  8894               	bsf	3988,4,c	;volatile
  3417                           
  3418                           ;my_i2c.c: 336: SSPCON2bits.SEN = 1;
  3419  0019CA  80C5               	bsf	4037,0,c	;volatile
  3420                           
  3421                           ;my_i2c.c: 337: SSPCON1 |= 0b00100000;
  3422  0019CC  8AC6               	bsf	4038,5,c	;volatile
  3423  0019CE  0012               	return	
  3424  0019D0                     __end_of_i2c_configure_slave:
  3425                           	opt stack 0
  3426                           tblptru	equ	0xFF8
  3427                           tblptrh	equ	0xFF7
  3428                           tblptrl	equ	0xFF6
  3429                           tablat	equ	0xFF5
  3430                           prodh	equ	0xFF4
  3431                           prodl	equ	0xFF3
  3432                           intcon	equ	0xFF2
  3433                           postinc0	equ	0xFEE
  3434                           wreg	equ	0xFE8
  3435                           indf1	equ	0xFE7
  3436                           fsr1h	equ	0xFE2
  3437                           fsr1l	equ	0xFE1
  3438                           indf2	equ	0xFDF
  3439                           postinc2	equ	0xFDE
  3440                           postdec2	equ	0xFDD
  3441                           fsr2h	equ	0xFDA
  3442                           fsr2l	equ	0xFD9
  3443                           status	equ	0xFD8
  3444                           
  3445 ;; *************** function _enable_interrupts *****************
  3446 ;; Defined at:
  3447 ;;		line 24 in file "../src/interrupts.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;		None
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;		None
  3452 ;; Return value:  Size  Location     Type
  3453 ;;		None               void
  3454 ;; Registers used:
  3455 ;;		None
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3461 ;;      Params:         0       0       0       0       0
  3462 ;;      Locals:         0       0       0       0       0
  3463 ;;      Temps:          0       0       0       0       0
  3464 ;;      Totals:         0       0       0       0       0
  3465 ;;Total ram usage:        0 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; Hardware stack levels required when called:   10
  3468 ;; This function calls:
  3469 ;;		Nothing
  3470 ;; This function is called by:
  3471 ;;		_main
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           	psect	text19
  3476  001AE6                     __ptext19:
  3477                           	opt stack 0
  3478  001AE6                     _enable_interrupts:
  3479                           	opt stack 19
  3480                           
  3481                           ;interrupts.c: 27: RCONbits.IPEN = 1;
  3482                           
  3483                           ;incstack = 0
  3484  001AE6  8ED0               	bsf	4048,7,c	;volatile
  3485                           
  3486                           ;interrupts.c: 28: INTCONbits.GIEH = 1;
  3487  001AE8  8EF2               	bsf	intcon,7,c	;volatile
  3488                           
  3489                           ;interrupts.c: 29: INTCONbits.GIEL = 1;
  3490  001AEA  8CF2               	bsf	intcon,6,c	;volatile
  3491                           
  3492                           ;interrupts.c: 31: INTCONbits.TMR0IE = 1;
  3493  001AEC  8AF2               	bsf	intcon,5,c	;volatile
  3494                           
  3495                           ;interrupts.c: 33: INTCON2bits.TMR0IP = 1;
  3496  001AEE  84F1               	bsf	intcon2,2,c	;volatile
  3497  001AF0  0012               	return	
  3498  001AF2                     __end_of_enable_interrupts:
  3499                           	opt stack 0
  3500                           tblptru	equ	0xFF8
  3501                           tblptrh	equ	0xFF7
  3502                           tblptrl	equ	0xFF6
  3503                           tablat	equ	0xFF5
  3504                           prodh	equ	0xFF4
  3505                           prodl	equ	0xFF3
  3506                           intcon	equ	0xFF2
  3507                           intcon2	equ	0xFF1
  3508                           postinc0	equ	0xFEE
  3509                           wreg	equ	0xFE8
  3510                           indf1	equ	0xFE7
  3511                           fsr1h	equ	0xFE2
  3512                           fsr1l	equ	0xFE1
  3513                           indf2	equ	0xFDF
  3514                           postinc2	equ	0xFDE
  3515                           postdec2	equ	0xFDD
  3516                           fsr2h	equ	0xFDA
  3517                           fsr2l	equ	0xFD9
  3518                           status	equ	0xFD8
  3519                           
  3520 ;; *************** function _block_on_To_msgqueues *****************
  3521 ;; Defined at:
  3522 ;;		line 258 in file "../src/messages.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;		None
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;		None
  3527 ;; Return value:  Size  Location     Type
  3528 ;;		None               void
  3529 ;; Registers used:
  3530 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3536 ;;      Params:         0       0       0       0       0
  3537 ;;      Locals:         0       0       0       0       0
  3538 ;;      Temps:          0       1       0       0       0
  3539 ;;      Totals:         0       1       0       0       0
  3540 ;;Total ram usage:        1 bytes
  3541 ;; Hardware stack levels used:    1
  3542 ;; Hardware stack levels required when called:   13
  3543 ;; This function calls:
  3544 ;;		_Delay1KTCYx
  3545 ;;		_check_msg
  3546 ;;		_in_main
  3547 ;; This function is called by:
  3548 ;;		_main
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           	psect	text20
  3553  0010A2                     __ptext20:
  3554                           	opt stack 0
  3555  0010A2                     _block_on_To_msgqueues:
  3556                           	opt stack 16
  3557                           
  3558                           ;messages.c: 259: if (!in_main()) {
  3559                           
  3560                           ;incstack = 0
  3561  0010A2  EC56  F00B         	call	_in_main	;wreg free
  3562  0010A6  0100               	movlb	0	; () banked
  3563  0010A8  0100               	movlb	0	; () banked
  3564  0010AA  51AB               	movf	(?_in_main+1)& (0+255),w,b
  3565  0010AC  0100               	movlb	0	; () banked
  3566  0010AE  11AA               	iorwf	?_in_main& (0+255),w,b
  3567  0010B0  B4D8               	btfsc	status,2,c
  3568  0010B2  0012               	return	
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;messages.c: 261: }
  3572                           ;messages.c: 262: LATBbits.LATB3 = 1;
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;messages.c: 260: return;
  3576  0010B4  868A               	bsf	3978,3,c	;volatile
  3577                           
  3578                           ; BSR set to: 0
  3579                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3580  0010B6  0100               	movlb	0	; () banked
  3581  0010B8  6FAC               	movwf	??_block_on_To_msgqueues& (0+255),b
  3582  0010BA  0E01               	movlw	1
  3583  0010BC  6E4D               	movwf	_MQ_Main_Willing_to_block,c
  3584  0010BE  0100               	movlb	0	; () banked
  3585  0010C0  51AC               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3586  0010C2                     l2591:
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3590  0010C2  0101               	movlb	1	; () banked
  3591  0010C4  0E01               	movlw	high _ToMainHigh_MQ
  3592  0010C6  0100               	movlb	0	; () banked
  3593  0010C8  0100               	movlb	0	; () banked
  3594  0010CA  6FA7               	movwf	(check_msg@qptr+1)& (0+255),b
  3595  0010CC  0101               	movlb	1	; () banked
  3596  0010CE  0E36               	movlw	low _ToMainHigh_MQ
  3597  0010D0  0100               	movlb	0	; () banked
  3598  0010D2  0100               	movlb	0	; () banked
  3599  0010D4  6FA6               	movwf	check_msg@qptr& (0+255),b
  3600  0010D6  EC74  F00C         	call	_check_msg	;wreg free
  3601  0010DA  0900               	iorlw	0
  3602  0010DC  B4D8               	btfsc	status,2,c
  3603  0010DE  D008               	goto	l2599
  3604                           
  3605                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3606  0010E0  0100               	movlb	0	; () banked
  3607  0010E2  6FAC               	movwf	??_block_on_To_msgqueues& (0+255),b
  3608  0010E4  0E00               	movlw	0
  3609  0010E6  6E4D               	movwf	_MQ_Main_Willing_to_block,c
  3610  0010E8  0100               	movlb	0	; () banked
  3611  0010EA  51AC               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;messages.c: 267: LATBbits.LATB3 = 0;
  3615  0010EC  968A               	bcf	3978,3,c	;volatile
  3616  0010EE  0012               	return	
  3617  0010F0                     l2599:
  3618                           
  3619                           ;messages.c: 269: }
  3620                           ;messages.c: 270: if (check_msg(&ToMainLow_MQ)) {
  3621  0010F0  0101               	movlb	1	; () banked
  3622  0010F2  0E01               	movlw	high _ToMainLow_MQ
  3623  0010F4  0100               	movlb	0	; () banked
  3624  0010F6  0100               	movlb	0	; () banked
  3625  0010F8  6FA7               	movwf	(check_msg@qptr+1)& (0+255),b
  3626  0010FA  0101               	movlb	1	; () banked
  3627  0010FC  0E6C               	movlw	low _ToMainLow_MQ
  3628  0010FE  0100               	movlb	0	; () banked
  3629  001100  0100               	movlb	0	; () banked
  3630  001102  6FA6               	movwf	check_msg@qptr& (0+255),b
  3631  001104  EC74  F00C         	call	_check_msg	;wreg free
  3632  001108  0900               	iorlw	0
  3633  00110A  B4D8               	btfsc	status,2,c
  3634  00110C  D008               	goto	l2607
  3635                           
  3636                           ;messages.c: 271: MQ_Main_Willing_to_block = 0;
  3637  00110E  0100               	movlb	0	; () banked
  3638  001110  6FAC               	movwf	??_block_on_To_msgqueues& (0+255),b
  3639  001112  0E00               	movlw	0
  3640  001114  6E4D               	movwf	_MQ_Main_Willing_to_block,c
  3641  001116  0100               	movlb	0	; () banked
  3642  001118  51AC               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3643                           
  3644                           ; BSR set to: 0
  3645                           ;messages.c: 272: LATBbits.LATB3 = 0;
  3646  00111A  968A               	bcf	3978,3,c	;volatile
  3647  00111C  0012               	return	
  3648  00111E                     l2607:
  3649                           
  3650                           ;messages.c: 274: }
  3651                           ;messages.c: 275: Delay1KTCYx(10);
  3652  00111E  0E0A               	movlw	10
  3653  001120  EC4D  F00D         	call	_Delay1KTCYx
  3654                           
  3655                           ;messages.c: 276: LATBbits.LATB3 = !LATBbits.LATB3;
  3656  001124  B68A               	btfsc	3978,3,c	;volatile
  3657  001126  D002               	goto	u1580
  3658  001128  0E01               	movlw	1
  3659  00112A  D001               	goto	u1586
  3660  00112C                     u1580:
  3661  00112C  0E00               	movlw	0
  3662  00112E                     u1586:
  3663  00112E  0100               	movlb	0	; () banked
  3664  001130  6FAC               	movwf	??_block_on_To_msgqueues& (0+255),b
  3665  001132  0100               	movlb	0	; () banked
  3666  001134  47AC               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3667  001136  47AC               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3668  001138  47AC               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3669  00113A  508A               	movf	3978,w,c	;volatile
  3670  00113C  0100               	movlb	0	; () banked
  3671  00113E  19AC               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  3672  001140  0BF7               	andlw	-9
  3673  001142  19AC               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  3674  001144  6E8A               	movwf	3978,c	;volatile
  3675  001146  D7BD               	goto	l2591
  3676  001148                     __end_of_block_on_To_msgqueues:
  3677                           	opt stack 0
  3678                           tblptru	equ	0xFF8
  3679                           tblptrh	equ	0xFF7
  3680                           tblptrl	equ	0xFF6
  3681                           tablat	equ	0xFF5
  3682                           prodh	equ	0xFF4
  3683                           prodl	equ	0xFF3
  3684                           intcon	equ	0xFF2
  3685                           intcon2	equ	0xFF1
  3686                           postinc0	equ	0xFEE
  3687                           wreg	equ	0xFE8
  3688                           indf1	equ	0xFE7
  3689                           fsr1h	equ	0xFE2
  3690                           fsr1l	equ	0xFE1
  3691                           indf2	equ	0xFDF
  3692                           postinc2	equ	0xFDE
  3693                           postdec2	equ	0xFDD
  3694                           fsr2h	equ	0xFDA
  3695                           fsr2l	equ	0xFD9
  3696                           status	equ	0xFD8
  3697                           
  3698 ;; *************** function _in_main *****************
  3699 ;; Defined at:
  3700 ;;		line 54 in file "../src/interrupts.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;		None
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;		None
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  2   42[BANK0 ] int 
  3707 ;; Registers used:
  3708 ;;		wreg, status,2, status,0, cstack
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3714 ;;      Params:         0       2       0       0       0
  3715 ;;      Locals:         0       0       0       0       0
  3716 ;;      Temps:          0       0       0       0       0
  3717 ;;      Totals:         0       2       0       0       0
  3718 ;;Total ram usage:        2 bytes
  3719 ;; Hardware stack levels used:    1
  3720 ;; Hardware stack levels required when called:   12
  3721 ;; This function calls:
  3722 ;;		_in_high_int
  3723 ;;		_in_low_int
  3724 ;; This function is called by:
  3725 ;;		_block_on_To_msgqueues
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	text21
  3730  0016AC                     __ptext21:
  3731                           	opt stack 0
  3732  0016AC                     _in_main:
  3733                           	opt stack 16
  3734                           
  3735                           ;interrupts.c: 55: if ((!in_low_int()) && (!in_high_int())) {
  3736                           
  3737                           ; BSR set to: 0
  3738                           ;incstack = 0
  3739  0016AC  EC33  F00B         	call	_in_low_int	;wreg free
  3740  0016B0  0100               	movlb	0	; () banked
  3741  0016B2  0100               	movlb	0	; () banked
  3742  0016B4  51A9               	movf	(?_in_low_int+1)& (0+255),w,b
  3743  0016B6  0100               	movlb	0	; () banked
  3744  0016B8  11A8               	iorwf	?_in_low_int& (0+255),w,b
  3745  0016BA  A4D8               	btfss	status,2,c
  3746  0016BC  D011               	goto	l2621
  3747                           
  3748                           ; BSR set to: 0
  3749  0016BE  EC6A  F00D         	call	_in_high_int	;wreg free
  3750  0016C2  0100               	movlb	0	; () banked
  3751  0016C4  0100               	movlb	0	; () banked
  3752  0016C6  51A7               	movf	(?_in_high_int+1)& (0+255),w,b
  3753  0016C8  0100               	movlb	0	; () banked
  3754  0016CA  11A6               	iorwf	?_in_high_int& (0+255),w,b
  3755  0016CC  A4D8               	btfss	status,2,c
  3756  0016CE  D008               	goto	l2621
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;interrupts.c: 56: return (1);
  3760  0016D0  0E00               	movlw	0
  3761  0016D2  0100               	movlb	0	; () banked
  3762  0016D4  0100               	movlb	0	; () banked
  3763  0016D6  6FAB               	movwf	(?_in_main+1)& (0+255),b
  3764  0016D8  0E01               	movlw	1
  3765  0016DA  0100               	movlb	0	; () banked
  3766  0016DC  6FAA               	movwf	?_in_main& (0+255),b
  3767  0016DE  0012               	return	
  3768  0016E0                     l2621:
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;interrupts.c: 58: return (0);
  3772  0016E0  0E00               	movlw	0
  3773  0016E2  0100               	movlb	0	; () banked
  3774  0016E4  0100               	movlb	0	; () banked
  3775  0016E6  6FAB               	movwf	(?_in_main+1)& (0+255),b
  3776  0016E8  0E00               	movlw	0
  3777  0016EA  0100               	movlb	0	; () banked
  3778  0016EC  6FAA               	movwf	?_in_main& (0+255),b
  3779  0016EE  0012               	return	
  3780  0016F0                     __end_of_in_main:
  3781                           	opt stack 0
  3782                           tblptru	equ	0xFF8
  3783                           tblptrh	equ	0xFF7
  3784                           tblptrl	equ	0xFF6
  3785                           tablat	equ	0xFF5
  3786                           prodh	equ	0xFF4
  3787                           prodl	equ	0xFF3
  3788                           intcon	equ	0xFF2
  3789                           intcon2	equ	0xFF1
  3790                           postinc0	equ	0xFEE
  3791                           wreg	equ	0xFE8
  3792                           indf1	equ	0xFE7
  3793                           fsr1h	equ	0xFE2
  3794                           fsr1l	equ	0xFE1
  3795                           indf2	equ	0xFDF
  3796                           postinc2	equ	0xFDE
  3797                           postdec2	equ	0xFDD
  3798                           fsr2h	equ	0xFDA
  3799                           fsr2l	equ	0xFD9
  3800                           status	equ	0xFD8
  3801                           
  3802 ;; *************** function _in_low_int *****************
  3803 ;; Defined at:
  3804 ;;		line 44 in file "../src/interrupts.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;		None
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;		None
  3809 ;; Return value:  Size  Location     Type
  3810 ;;                  2   40[BANK0 ] int 
  3811 ;; Registers used:
  3812 ;;		wreg, status,2, status,0, cstack
  3813 ;; Tracked objects:
  3814 ;;		On entry : 0/0
  3815 ;;		On exit  : 0/0
  3816 ;;		Unchanged: 0/0
  3817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3818 ;;      Params:         0       2       0       0       0
  3819 ;;      Locals:         0       0       0       0       0
  3820 ;;      Temps:          0       0       0       0       0
  3821 ;;      Totals:         0       2       0       0       0
  3822 ;;Total ram usage:        2 bytes
  3823 ;; Hardware stack levels used:    1
  3824 ;; Hardware stack levels required when called:   11
  3825 ;; This function calls:
  3826 ;;		_in_high_int
  3827 ;; This function is called by:
  3828 ;;		_in_main
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           	psect	text22
  3833  001666                     __ptext22:
  3834                           	opt stack 0
  3835  001666                     _in_low_int:
  3836                           	opt stack 16
  3837                           
  3838                           ;interrupts.c: 45: if (INTCONbits.GIEL == 1) {
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;incstack = 0
  3842  001666  ACF2               	btfss	intcon,6,c	;volatile
  3843  001668  D008               	goto	l2569
  3844                           
  3845                           ;interrupts.c: 46: return (0);
  3846  00166A  0E00               	movlw	0
  3847  00166C  0100               	movlb	0	; () banked
  3848  00166E  0100               	movlb	0	; () banked
  3849  001670  6FA9               	movwf	(?_in_low_int+1)& (0+255),b
  3850  001672  0E00               	movlw	0
  3851  001674  0100               	movlb	0	; () banked
  3852  001676  6FA8               	movwf	?_in_low_int& (0+255),b
  3853  001678  0012               	return	
  3854  00167A                     l2569:
  3855  00167A  EC6A  F00D         	call	_in_high_int	;wreg free
  3856  00167E  0100               	movlb	0	; () banked
  3857  001680  0100               	movlb	0	; () banked
  3858  001682  51A7               	movf	(?_in_high_int+1)& (0+255),w,b
  3859  001684  0100               	movlb	0	; () banked
  3860  001686  11A6               	iorwf	?_in_high_int& (0+255),w,b
  3861  001688  B4D8               	btfsc	status,2,c
  3862  00168A  D008               	goto	l2577
  3863                           
  3864                           ; BSR set to: 0
  3865                           ;interrupts.c: 48: return (0);
  3866  00168C  0E00               	movlw	0
  3867  00168E  0100               	movlb	0	; () banked
  3868  001690  0100               	movlb	0	; () banked
  3869  001692  6FA9               	movwf	(?_in_low_int+1)& (0+255),b
  3870  001694  0E00               	movlw	0
  3871  001696  0100               	movlb	0	; () banked
  3872  001698  6FA8               	movwf	?_in_low_int& (0+255),b
  3873  00169A  0012               	return	
  3874  00169C                     l2577:
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;interrupts.c: 50: return (1);
  3878  00169C  0E00               	movlw	0
  3879  00169E  0100               	movlb	0	; () banked
  3880  0016A0  0100               	movlb	0	; () banked
  3881  0016A2  6FA9               	movwf	(?_in_low_int+1)& (0+255),b
  3882  0016A4  0E01               	movlw	1
  3883  0016A6  0100               	movlb	0	; () banked
  3884  0016A8  6FA8               	movwf	?_in_low_int& (0+255),b
  3885  0016AA  0012               	return	
  3886  0016AC                     __end_of_in_low_int:
  3887                           	opt stack 0
  3888                           tblptru	equ	0xFF8
  3889                           tblptrh	equ	0xFF7
  3890                           tblptrl	equ	0xFF6
  3891                           tablat	equ	0xFF5
  3892                           prodh	equ	0xFF4
  3893                           prodl	equ	0xFF3
  3894                           intcon	equ	0xFF2
  3895                           intcon2	equ	0xFF1
  3896                           postinc0	equ	0xFEE
  3897                           wreg	equ	0xFE8
  3898                           indf1	equ	0xFE7
  3899                           fsr1h	equ	0xFE2
  3900                           fsr1l	equ	0xFE1
  3901                           indf2	equ	0xFDF
  3902                           postinc2	equ	0xFDE
  3903                           postdec2	equ	0xFDD
  3904                           fsr2h	equ	0xFDA
  3905                           fsr2l	equ	0xFD9
  3906                           status	equ	0xFD8
  3907                           
  3908 ;; *************** function _in_high_int *****************
  3909 ;; Defined at:
  3910 ;;		line 36 in file "../src/interrupts.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;		None
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;		None
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  2   38[BANK0 ] int 
  3917 ;; Registers used:
  3918 ;;		wreg, status,2
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3924 ;;      Params:         0       2       0       0       0
  3925 ;;      Locals:         0       0       0       0       0
  3926 ;;      Temps:          0       0       0       0       0
  3927 ;;      Totals:         0       2       0       0       0
  3928 ;;Total ram usage:        2 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:   10
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_in_low_int
  3935 ;;		_in_main
  3936 ;; This function uses a non-reentrant model
  3937 ;;
  3938                           
  3939                           	psect	text23
  3940  001AD4                     __ptext23:
  3941                           	opt stack 0
  3942  001AD4                     _in_high_int:
  3943                           	opt stack 16
  3944                           
  3945                           ;interrupts.c: 37: return (!INTCONbits.GIEH);
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;incstack = 0
  3949  001AD4  0E00               	movlw	0
  3950  001AD6  AEF2               	btfss	intcon,7,c	;volatile
  3951  001AD8  0E01               	movlw	1
  3952  001ADA  0100               	movlb	0	; () banked
  3953  001ADC  0100               	movlb	0	; () banked
  3954  001ADE  6FA6               	movwf	?_in_high_int& (0+255),b
  3955  001AE0  0100               	movlb	0	; () banked
  3956  001AE2  6BA7               	clrf	(?_in_high_int+1)& (0+255),b
  3957  001AE4  0012               	return	
  3958  001AE6                     __end_of_in_high_int:
  3959                           	opt stack 0
  3960                           tblptru	equ	0xFF8
  3961                           tblptrh	equ	0xFF7
  3962                           tblptrl	equ	0xFF6
  3963                           tablat	equ	0xFF5
  3964                           prodh	equ	0xFF4
  3965                           prodl	equ	0xFF3
  3966                           intcon	equ	0xFF2
  3967                           intcon2	equ	0xFF1
  3968                           postinc0	equ	0xFEE
  3969                           wreg	equ	0xFE8
  3970                           indf1	equ	0xFE7
  3971                           fsr1h	equ	0xFE2
  3972                           fsr1l	equ	0xFE1
  3973                           indf2	equ	0xFDF
  3974                           postinc2	equ	0xFDE
  3975                           postdec2	equ	0xFDD
  3976                           fsr2h	equ	0xFDA
  3977                           fsr2l	equ	0xFD9
  3978                           status	equ	0xFD8
  3979                           
  3980 ;; *************** function _check_msg *****************
  3981 ;; Defined at:
  3982 ;;		line 222 in file "../src/messages.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;  qptr            2   38[BANK0 ] PTR struct __msg_queue
  3985 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;		None
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  1    wreg      unsigned char 
  3990 ;; Registers used:
  3991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3997 ;;      Params:         0       2       0       0       0
  3998 ;;      Locals:         0       0       0       0       0
  3999 ;;      Temps:          0       1       0       0       0
  4000 ;;      Totals:         0       3       0       0       0
  4001 ;;Total ram usage:        3 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; Hardware stack levels required when called:   10
  4004 ;; This function calls:
  4005 ;;		Nothing
  4006 ;; This function is called by:
  4007 ;;		_block_on_To_msgqueues
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text24
  4012  0018E8                     __ptext24:
  4013                           	opt stack 0
  4014  0018E8                     _check_msg:
  4015                           	opt stack 18
  4016                           
  4017                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;incstack = 0
  4021  0018E8  0100               	movlb	0	; () banked
  4022  0018EA  EE20 F035          	lfsr	2,53
  4023  0018EE  0100               	movlb	0	; () banked
  4024  0018F0  51A6               	movf	check_msg@qptr& (0+255),w,b
  4025  0018F2  26D9               	addwf	fsr2l,f,c
  4026  0018F4  0100               	movlb	0	; () banked
  4027  0018F6  51A7               	movf	(check_msg@qptr+1)& (0+255),w,b
  4028  0018F8  22DA               	addwfc	fsr2h,f,c
  4029  0018FA  50DF               	movf	indf2,w,c
  4030  0018FC  0100               	movlb	0	; () banked
  4031  0018FE  6FA8               	movwf	??_check_msg& (0+255),b
  4032  001900  0100               	movlb	0	; () banked
  4033  001902  51A8               	movf	??_check_msg& (0+255),w,b
  4034  001904  0D0D               	mullw	13
  4035  001906  50F3               	movf	prodl,w,c
  4036  001908  0100               	movlb	0	; () banked
  4037  00190A  0100               	movlb	0	; () banked
  4038  00190C  25A6               	addwf	check_msg@qptr& (0+255),w,b
  4039  00190E  6ED9               	movwf	fsr2l,c
  4040  001910  50F4               	movf	prodh,w,c
  4041  001912  0100               	movlb	0	; () banked
  4042  001914  0100               	movlb	0	; () banked
  4043  001916  21A7               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4044  001918  6EDA               	movwf	fsr2h,c
  4045  00191A  50DF               	movf	indf2,w,c
  4046  00191C  0012               	return	
  4047  00191E                     __end_of_check_msg:
  4048                           	opt stack 0
  4049                           tblptru	equ	0xFF8
  4050                           tblptrh	equ	0xFF7
  4051                           tblptrl	equ	0xFF6
  4052                           tablat	equ	0xFF5
  4053                           prodh	equ	0xFF4
  4054                           prodl	equ	0xFF3
  4055                           intcon	equ	0xFF2
  4056                           intcon2	equ	0xFF1
  4057                           postinc0	equ	0xFEE
  4058                           wreg	equ	0xFE8
  4059                           indf1	equ	0xFE7
  4060                           fsr1h	equ	0xFE2
  4061                           fsr1l	equ	0xFE1
  4062                           indf2	equ	0xFDF
  4063                           postinc2	equ	0xFDE
  4064                           postdec2	equ	0xFDD
  4065                           fsr2h	equ	0xFDA
  4066                           fsr2l	equ	0xFD9
  4067                           status	equ	0xFD8
  4068                           
  4069 ;; *************** function _Delay1KTCYx *****************
  4070 ;; Defined at:
  4071 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/pic18/d1ktcyx.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;  unit            1    wreg     unsigned char 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;  unit            1   38[BANK0 ] unsigned char 
  4076 ;; Return value:  Size  Location     Type
  4077 ;;		None               void
  4078 ;; Registers used:
  4079 ;;		wreg
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4085 ;;      Params:         0       0       0       0       0
  4086 ;;      Locals:         0       1       0       0       0
  4087 ;;      Temps:          0       0       0       0       0
  4088 ;;      Totals:         0       1       0       0       0
  4089 ;;Total ram usage:        1 bytes
  4090 ;; Hardware stack levels used:    1
  4091 ;; Hardware stack levels required when called:   10
  4092 ;; This function calls:
  4093 ;;		Nothing
  4094 ;; This function is called by:
  4095 ;;		_block_on_To_msgqueues
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           	psect	text25
  4100  001A9A                     __ptext25:
  4101                           	opt stack 0
  4102  001A9A                     _Delay1KTCYx:
  4103                           	opt stack 18
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;incstack = 0
  4107                           ;Delay1KTCYx@unit stored from wreg
  4108  001A9A  CFE8 F0A6          	movff	wreg,Delay1KTCYx@unit
  4109  001A9E                     l727:
  4110  001A9E  0EFA               	movlw	250
  4111  001AA0                     u1947:
  4112  001AA0  F000               	nop	
  4113  001AA2  2EE8               	decfsz	wreg,f,c
  4114  001AA4  D7FD               	goto	u1947
  4115  001AA6  0100               	movlb	0	; () banked
  4116  001AA8  0100               	movlb	0	; () banked
  4117  001AAA  2FA6               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4118  001AAC  D7F8               	goto	l727
  4119  001AAE  0012               	return	
  4120  001AB0                     __end_of_Delay1KTCYx:
  4121                           	opt stack 0
  4122                           tblptru	equ	0xFF8
  4123                           tblptrh	equ	0xFF7
  4124                           tblptrl	equ	0xFF6
  4125                           tablat	equ	0xFF5
  4126                           prodh	equ	0xFF4
  4127                           prodl	equ	0xFF3
  4128                           intcon	equ	0xFF2
  4129                           intcon2	equ	0xFF1
  4130                           postinc0	equ	0xFEE
  4131                           wreg	equ	0xFE8
  4132                           indf1	equ	0xFE7
  4133                           fsr1h	equ	0xFE2
  4134                           fsr1l	equ	0xFE1
  4135                           indf2	equ	0xFDF
  4136                           postinc2	equ	0xFDE
  4137                           postdec2	equ	0xFDD
  4138                           fsr2h	equ	0xFDA
  4139                           fsr2l	equ	0xFD9
  4140                           status	equ	0xFD8
  4141                           
  4142 ;; *************** function _ToMainLow_recvmsg *****************
  4143 ;; Defined at:
  4144 ;;		line 112 in file "../src/messages.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;  maxlength       1    wreg     unsigned char 
  4147 ;;  msgtype         2   62[BANK0 ] PTR unsigned char 
  4148 ;;		 -> main@msgtype(1), 
  4149 ;;  data            2   64[BANK0 ] PTR void 
  4150 ;;		 -> main@msgbuffer(11), 
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;  maxlength       1   66[BANK0 ] unsigned char 
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  1    wreg      char 
  4155 ;; Registers used:
  4156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4162 ;;      Params:         0       4       0       0       0
  4163 ;;      Locals:         0       1       0       0       0
  4164 ;;      Temps:          0       0       0       0       0
  4165 ;;      Totals:         0       5       0       0       0
  4166 ;;Total ram usage:        5 bytes
  4167 ;; Hardware stack levels used:    1
  4168 ;; Hardware stack levels required when called:   12
  4169 ;; This function calls:
  4170 ;;		_recv_msg
  4171 ;; This function is called by:
  4172 ;;		_main
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176                           	psect	text26
  4177  001732                     __ptext26:
  4178                           	opt stack 0
  4179  001732                     _ToMainLow_recvmsg:
  4180                           	opt stack 17
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;incstack = 0
  4184                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4185  001732  CFE8 F0C2          	movff	wreg,ToMainLow_recvmsg@maxlength
  4186                           
  4187                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4188  001736  0101               	movlb	1	; () banked
  4189  001738  0E01               	movlw	high _ToMainLow_MQ
  4190  00173A  0100               	movlb	0	; () banked
  4191  00173C  0100               	movlb	0	; () banked
  4192  00173E  6FB1               	movwf	(recv_msg@qptr+1)& (0+255),b
  4193  001740  0101               	movlb	1	; () banked
  4194  001742  0E6C               	movlw	low _ToMainLow_MQ
  4195  001744  0100               	movlb	0	; () banked
  4196  001746  0100               	movlb	0	; () banked
  4197  001748  6FB0               	movwf	recv_msg@qptr& (0+255),b
  4198  00174A  C0C2  F0B2         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4199  00174E  0100               	movlb	0	; () banked
  4200  001750  0100               	movlb	0	; () banked
  4201  001752  C0BF  F0B4         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4202  001756  0100               	movlb	0	; () banked
  4203  001758  0100               	movlb	0	; () banked
  4204  00175A  C0BE  F0B3         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4205  00175E  0100               	movlb	0	; () banked
  4206  001760  0100               	movlb	0	; () banked
  4207  001762  C0C1  F0B6         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4208  001766  0100               	movlb	0	; () banked
  4209  001768  0100               	movlb	0	; () banked
  4210  00176A  C0C0  F0B5         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4211  00176E  ECCB  F004         	call	_recv_msg	;wreg free
  4212  001772  0012               	return	
  4213  001774                     __end_of_ToMainLow_recvmsg:
  4214                           	opt stack 0
  4215                           tblptru	equ	0xFF8
  4216                           tblptrh	equ	0xFF7
  4217                           tblptrl	equ	0xFF6
  4218                           tablat	equ	0xFF5
  4219                           prodh	equ	0xFF4
  4220                           prodl	equ	0xFF3
  4221                           intcon	equ	0xFF2
  4222                           intcon2	equ	0xFF1
  4223                           postinc0	equ	0xFEE
  4224                           wreg	equ	0xFE8
  4225                           indf1	equ	0xFE7
  4226                           fsr1h	equ	0xFE2
  4227                           fsr1l	equ	0xFE1
  4228                           indf2	equ	0xFDF
  4229                           postinc2	equ	0xFDE
  4230                           postdec2	equ	0xFDD
  4231                           fsr2h	equ	0xFDA
  4232                           fsr2l	equ	0xFD9
  4233                           status	equ	0xFD8
  4234                           
  4235 ;; *************** function _ToMainHigh_recvmsg *****************
  4236 ;; Defined at:
  4237 ;;		line 135 in file "../src/messages.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  maxlength       1    wreg     unsigned char 
  4240 ;;  msgtype         2   62[BANK0 ] PTR unsigned char 
  4241 ;;		 -> main@msgtype(1), 
  4242 ;;  data            2   64[BANK0 ] PTR void 
  4243 ;;		 -> main@msgbuffer(11), 
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;  maxlength       1   66[BANK0 ] unsigned char 
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  1    wreg      char 
  4248 ;; Registers used:
  4249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4255 ;;      Params:         0       4       0       0       0
  4256 ;;      Locals:         0       1       0       0       0
  4257 ;;      Temps:          0       0       0       0       0
  4258 ;;      Totals:         0       5       0       0       0
  4259 ;;Total ram usage:        5 bytes
  4260 ;; Hardware stack levels used:    1
  4261 ;; Hardware stack levels required when called:   12
  4262 ;; This function calls:
  4263 ;;		_recv_msg
  4264 ;; This function is called by:
  4265 ;;		_main
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           	psect	text27
  4270  001774                     __ptext27:
  4271                           	opt stack 0
  4272  001774                     _ToMainHigh_recvmsg:
  4273                           	opt stack 17
  4274                           
  4275                           ;incstack = 0
  4276                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4277  001774  CFE8 F0C2          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4278                           
  4279                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4280  001778  0101               	movlb	1	; () banked
  4281  00177A  0E01               	movlw	high _ToMainHigh_MQ
  4282  00177C  0100               	movlb	0	; () banked
  4283  00177E  0100               	movlb	0	; () banked
  4284  001780  6FB1               	movwf	(recv_msg@qptr+1)& (0+255),b
  4285  001782  0101               	movlb	1	; () banked
  4286  001784  0E36               	movlw	low _ToMainHigh_MQ
  4287  001786  0100               	movlb	0	; () banked
  4288  001788  0100               	movlb	0	; () banked
  4289  00178A  6FB0               	movwf	recv_msg@qptr& (0+255),b
  4290  00178C  C0C2  F0B2         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4291  001790  0100               	movlb	0	; () banked
  4292  001792  0100               	movlb	0	; () banked
  4293  001794  C0BF  F0B4         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4294  001798  0100               	movlb	0	; () banked
  4295  00179A  0100               	movlb	0	; () banked
  4296  00179C  C0BE  F0B3         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4297  0017A0  0100               	movlb	0	; () banked
  4298  0017A2  0100               	movlb	0	; () banked
  4299  0017A4  C0C1  F0B6         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4300  0017A8  0100               	movlb	0	; () banked
  4301  0017AA  0100               	movlb	0	; () banked
  4302  0017AC  C0C0  F0B5         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4303  0017B0  ECCB  F004         	call	_recv_msg	;wreg free
  4304  0017B4  0012               	return	
  4305  0017B6                     __end_of_ToMainHigh_recvmsg:
  4306                           	opt stack 0
  4307                           tblptru	equ	0xFF8
  4308                           tblptrh	equ	0xFF7
  4309                           tblptrl	equ	0xFF6
  4310                           tablat	equ	0xFF5
  4311                           prodh	equ	0xFF4
  4312                           prodl	equ	0xFF3
  4313                           intcon	equ	0xFF2
  4314                           intcon2	equ	0xFF1
  4315                           postinc0	equ	0xFEE
  4316                           wreg	equ	0xFE8
  4317                           indf1	equ	0xFE7
  4318                           fsr1h	equ	0xFE2
  4319                           fsr1l	equ	0xFE1
  4320                           indf2	equ	0xFDF
  4321                           postinc2	equ	0xFDE
  4322                           postdec2	equ	0xFDD
  4323                           fsr2h	equ	0xFDA
  4324                           fsr2l	equ	0xFD9
  4325                           status	equ	0xFD8
  4326                           
  4327 ;; *************** function _recv_msg *****************
  4328 ;; Defined at:
  4329 ;;		line 63 in file "../src/messages.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;  qptr            2   48[BANK0 ] PTR struct __msg_queue
  4332 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4333 ;;  maxlength       1   50[BANK0 ] unsigned char 
  4334 ;;  msgtype         2   51[BANK0 ] PTR unsigned char 
  4335 ;;		 -> main@msgtype(1), timer0_int_handler@msgtype(2), 
  4336 ;;  data            2   53[BANK0 ] PTR void 
  4337 ;;		 -> main@msgbuffer(11), timer0_int_handler@val(2), 
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;  qmsg            2   60[BANK0 ] PTR struct __msg
  4340 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4341 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4342 ;;  tlength         2   58[BANK0 ] unsigned int 
  4343 ;;  slot            1   57[BANK0 ] unsigned char 
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  1    wreg      char 
  4346 ;; Registers used:
  4347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4353 ;;      Params:         0       7       0       0       0
  4354 ;;      Locals:         0       5       0       0       0
  4355 ;;      Temps:          0       2       0       0       0
  4356 ;;      Totals:         0      14       0       0       0
  4357 ;;Total ram usage:       14 bytes
  4358 ;; Hardware stack levels used:    1
  4359 ;; Hardware stack levels required when called:   11
  4360 ;; This function calls:
  4361 ;;		_memcpy
  4362 ;; This function is called by:
  4363 ;;		_ToMainLow_recvmsg
  4364 ;;		_ToMainHigh_recvmsg
  4365 ;;		_FromMainLow_recvmsg
  4366 ;;		_FromMainHigh_recvmsg
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           	psect	text28
  4371  000996                     __ptext28:
  4372                           	opt stack 0
  4373  000996                     _recv_msg:
  4374                           	opt stack 17
  4375                           
  4376                           ;messages.c: 64: unsigned char slot;
  4377                           ;messages.c: 68: msg *qmsg;
  4378                           ;messages.c: 69: size_t tlength;
  4379                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4380                           
  4381                           ;incstack = 0
  4382  000996  0100               	movlb	0	; () banked
  4383  000998  EE20 F035          	lfsr	2,53
  4384  00099C  0100               	movlb	0	; () banked
  4385  00099E  51B0               	movf	recv_msg@qptr& (0+255),w,b
  4386  0009A0  26D9               	addwf	fsr2l,f,c
  4387  0009A2  0100               	movlb	0	; () banked
  4388  0009A4  51B1               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4389  0009A6  22DA               	addwfc	fsr2h,f,c
  4390  0009A8  50DF               	movf	indf2,w,c
  4391  0009AA  0100               	movlb	0	; () banked
  4392  0009AC  0100               	movlb	0	; () banked
  4393  0009AE  6FB9               	movwf	recv_msg@slot& (0+255),b
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4397  0009B0  0100               	movlb	0	; () banked
  4398  0009B2  0100               	movlb	0	; () banked
  4399  0009B4  51B9               	movf	recv_msg@slot& (0+255),w,b
  4400  0009B6  0D0D               	mullw	13
  4401  0009B8  50F3               	movf	prodl,w,c
  4402  0009BA  0100               	movlb	0	; () banked
  4403  0009BC  0100               	movlb	0	; () banked
  4404  0009BE  25B0               	addwf	recv_msg@qptr& (0+255),w,b
  4405  0009C0  0100               	movlb	0	; () banked
  4406  0009C2  0100               	movlb	0	; () banked
  4407  0009C4  6FBC               	movwf	recv_msg@qmsg& (0+255),b
  4408  0009C6  50F4               	movf	prodh,w,c
  4409  0009C8  0100               	movlb	0	; () banked
  4410  0009CA  0100               	movlb	0	; () banked
  4411  0009CC  21B1               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4412  0009CE  0100               	movlb	0	; () banked
  4413  0009D0  6FBD               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;messages.c: 74: if (qmsg->full == 1) {
  4417  0009D2  0E01               	movlw	1
  4418  0009D4  C0BC  FFD9         	movff	recv_msg@qmsg,fsr2l
  4419  0009D8  C0BD  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4420  0009DC  62DF               	cpfseq	indf2,c
  4421  0009DE  D074               	goto	l2503
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4425  0009E0  0100               	movlb	0	; () banked
  4426  0009E2  EE20 F001          	lfsr	2,1
  4427  0009E6  0100               	movlb	0	; () banked
  4428  0009E8  51BC               	movf	recv_msg@qmsg& (0+255),w,b
  4429  0009EA  26D9               	addwf	fsr2l,f,c
  4430  0009EC  0100               	movlb	0	; () banked
  4431  0009EE  51BD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4432  0009F0  22DA               	addwfc	fsr2h,f,c
  4433  0009F2  50DF               	movf	indf2,w,c
  4434  0009F4  0100               	movlb	0	; () banked
  4435  0009F6  0100               	movlb	0	; () banked
  4436  0009F8  5DB2               	subwf	recv_msg@maxlength& (0+255),w,b
  4437  0009FA  B0D8               	btfsc	status,0,c
  4438  0009FC  D002               	goto	l2487
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;messages.c: 77: return (-3);
  4442  0009FE  0EFD               	movlw	253
  4443  000A00  0012               	return	
  4444  000A02                     l2487:
  4445                           
  4446                           ; BSR set to: 0
  4447                           ;messages.c: 78: }
  4448                           ;messages.c: 80: tlength = qmsg->length;
  4449  000A02  0100               	movlb	0	; () banked
  4450  000A04  EE20 F001          	lfsr	2,1
  4451  000A08  0100               	movlb	0	; () banked
  4452  000A0A  51BC               	movf	recv_msg@qmsg& (0+255),w,b
  4453  000A0C  26D9               	addwf	fsr2l,f,c
  4454  000A0E  0100               	movlb	0	; () banked
  4455  000A10  51BD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4456  000A12  22DA               	addwfc	fsr2h,f,c
  4457  000A14  50DF               	movf	indf2,w,c
  4458  000A16  0100               	movlb	0	; () banked
  4459  000A18  6FB7               	movwf	??_recv_msg& (0+255),b
  4460  000A1A  0100               	movlb	0	; () banked
  4461  000A1C  51B7               	movf	??_recv_msg& (0+255),w,b
  4462  000A1E  0100               	movlb	0	; () banked
  4463  000A20  0100               	movlb	0	; () banked
  4464  000A22  6FBA               	movwf	recv_msg@tlength& (0+255),b
  4465  000A24  0100               	movlb	0	; () banked
  4466  000A26  6BBB               	clrf	(recv_msg@tlength+1)& (0+255),b
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4470  000A28  0100               	movlb	0	; () banked
  4471  000A2A  0100               	movlb	0	; () banked
  4472  000A2C  C0B6  F0A7         	movff	recv_msg@data+1,memcpy@d1+1
  4473  000A30  0100               	movlb	0	; () banked
  4474  000A32  0100               	movlb	0	; () banked
  4475  000A34  C0B5  F0A6         	movff	recv_msg@data,memcpy@d1
  4476  000A38  0E03               	movlw	3
  4477  000A3A  0100               	movlb	0	; () banked
  4478  000A3C  0100               	movlb	0	; () banked
  4479  000A3E  25BC               	addwf	recv_msg@qmsg& (0+255),w,b
  4480  000A40  0100               	movlb	0	; () banked
  4481  000A42  6FB7               	movwf	??_recv_msg& (0+255),b
  4482  000A44  0E00               	movlw	0
  4483  000A46  0100               	movlb	0	; () banked
  4484  000A48  0100               	movlb	0	; () banked
  4485  000A4A  21BD               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4486  000A4C  0100               	movlb	0	; () banked
  4487  000A4E  6FB8               	movwf	(??_recv_msg+1)& (0+255),b
  4488  000A50  C0B7  F0A8         	movff	??_recv_msg,memcpy@s1
  4489  000A54  C0B8  F0A9         	movff	??_recv_msg+1,memcpy@s1+1
  4490  000A58  C0BA  F0AA         	movff	recv_msg@tlength,memcpy@n
  4491  000A5C  C0BB  F0AB         	movff	recv_msg@tlength+1,memcpy@n+1
  4492  000A60  ECDD  F00A         	call	_memcpy	;wreg free
  4493                           
  4494                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4495  000A64  0100               	movlb	0	; () banked
  4496  000A66  EE20 F035          	lfsr	2,53
  4497  000A6A  0100               	movlb	0	; () banked
  4498  000A6C  51B0               	movf	recv_msg@qptr& (0+255),w,b
  4499  000A6E  26D9               	addwf	fsr2l,f,c
  4500  000A70  0100               	movlb	0	; () banked
  4501  000A72  51B1               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4502  000A74  22DA               	addwfc	fsr2h,f,c
  4503  000A76  0100               	movlb	0	; () banked
  4504  000A78  EE10 F035          	lfsr	1,53
  4505  000A7C  0100               	movlb	0	; () banked
  4506  000A7E  51B0               	movf	recv_msg@qptr& (0+255),w,b
  4507  000A80  26E1               	addwf	fsr1l,f,c
  4508  000A82  0100               	movlb	0	; () banked
  4509  000A84  51B1               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4510  000A86  22E2               	addwfc	fsr1h,f,c
  4511  000A88  50E7               	movf	indf1,w,c
  4512  000A8A  0100               	movlb	0	; () banked
  4513  000A8C  6FB7               	movwf	??_recv_msg& (0+255),b
  4514  000A8E  0100               	movlb	0	; () banked
  4515  000A90  29B7               	incf	??_recv_msg& (0+255),w,b
  4516  000A92  0B03               	andlw	3
  4517  000A94  6EDF               	movwf	indf2,c
  4518                           
  4519                           ; BSR set to: 0
  4520                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4521  000A96  0100               	movlb	0	; () banked
  4522  000A98  EE20 F002          	lfsr	2,2
  4523  000A9C  0100               	movlb	0	; () banked
  4524  000A9E  51BC               	movf	recv_msg@qmsg& (0+255),w,b
  4525  000AA0  26D9               	addwf	fsr2l,f,c
  4526  000AA2  0100               	movlb	0	; () banked
  4527  000AA4  51BD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4528  000AA6  22DA               	addwfc	fsr2h,f,c
  4529  000AA8  C0B3  FFE1         	movff	recv_msg@msgtype,fsr1l
  4530  000AAC  C0B4  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4531  000AB0  CFDF FFE7          	movff	indf2,indf1
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;messages.c: 91: qmsg->full = 0;
  4535  000AB4  C0BC  FFD9         	movff	recv_msg@qmsg,fsr2l
  4536  000AB8  C0BD  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4537  000ABC  0E00               	movlw	0
  4538  000ABE  6EDF               	movwf	indf2,c
  4539                           
  4540                           ; BSR set to: 0
  4541                           ;messages.c: 92: return (tlength);
  4542  000AC0  0100               	movlb	0	; () banked
  4543  000AC2  0100               	movlb	0	; () banked
  4544  000AC4  51BA               	movf	recv_msg@tlength& (0+255),w,b
  4545  000AC6  0012               	return	
  4546  000AC8                     l2503:
  4547                           
  4548                           ; BSR set to: 0
  4549                           ;messages.c: 94: return (-4);
  4550  000AC8  0EFC               	movlw	252
  4551  000ACA  0012               	return	
  4552  000ACC                     __end_of_recv_msg:
  4553                           	opt stack 0
  4554                           tblptru	equ	0xFF8
  4555                           tblptrh	equ	0xFF7
  4556                           tblptrl	equ	0xFF6
  4557                           tablat	equ	0xFF5
  4558                           prodh	equ	0xFF4
  4559                           prodl	equ	0xFF3
  4560                           intcon	equ	0xFF2
  4561                           intcon2	equ	0xFF1
  4562                           postinc0	equ	0xFEE
  4563                           wreg	equ	0xFE8
  4564                           indf1	equ	0xFE7
  4565                           fsr1h	equ	0xFE2
  4566                           fsr1l	equ	0xFE1
  4567                           indf2	equ	0xFDF
  4568                           postinc2	equ	0xFDE
  4569                           postdec2	equ	0xFDD
  4570                           fsr2h	equ	0xFDA
  4571                           fsr2l	equ	0xFD9
  4572                           status	equ	0xFD8
  4573                           
  4574 ;; *************** function _memcpy *****************
  4575 ;; Defined at:
  4576 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  d1              2   38[BANK0 ] PTR void 
  4579 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4580 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4581 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  4582 ;;  s1              2   40[BANK0 ] PTR const void 
  4583 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4584 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4585 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  4586 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4587 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  4588 ;;  n               2   42[BANK0 ] unsigned int 
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;  s               2   46[BANK0 ] PTR const unsigned char 
  4591 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4592 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4593 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  4594 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4595 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  4596 ;;  d               2   44[BANK0 ] PTR unsigned char 
  4597 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4598 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4599 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  4600 ;; Return value:  Size  Location     Type
  4601 ;;                  2   38[BANK0 ] PTR void 
  4602 ;; Registers used:
  4603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4604 ;; Tracked objects:
  4605 ;;		On entry : 0/0
  4606 ;;		On exit  : 0/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4609 ;;      Params:         0       6       0       0       0
  4610 ;;      Locals:         0       4       0       0       0
  4611 ;;      Temps:          0       0       0       0       0
  4612 ;;      Totals:         0      10       0       0       0
  4613 ;;Total ram usage:       10 bytes
  4614 ;; Hardware stack levels used:    1
  4615 ;; Hardware stack levels required when called:   10
  4616 ;; This function calls:
  4617 ;;		Nothing
  4618 ;; This function is called by:
  4619 ;;		_send_msg
  4620 ;;		_recv_msg
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           	psect	text29
  4625  0015BA                     __ptext29:
  4626                           	opt stack 0
  4627  0015BA                     _memcpy:
  4628                           	opt stack 16
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;incstack = 0
  4632  0015BA  0100               	movlb	0	; () banked
  4633  0015BC  0100               	movlb	0	; () banked
  4634  0015BE  C0A9  F0AF         	movff	memcpy@s1+1,memcpy@s+1
  4635  0015C2  0100               	movlb	0	; () banked
  4636  0015C4  0100               	movlb	0	; () banked
  4637  0015C6  C0A8  F0AE         	movff	memcpy@s1,memcpy@s
  4638  0015CA  0100               	movlb	0	; () banked
  4639  0015CC  0100               	movlb	0	; () banked
  4640  0015CE  C0A7  F0AD         	movff	memcpy@d1+1,memcpy@d+1
  4641  0015D2  0100               	movlb	0	; () banked
  4642  0015D4  0100               	movlb	0	; () banked
  4643  0015D6  C0A6  F0AC         	movff	memcpy@d1,memcpy@d
  4644  0015DA  D012               	goto	l2473
  4645  0015DC                     l2467:
  4646                           
  4647                           ; BSR set to: 0
  4648  0015DC  C0AE  FFD9         	movff	memcpy@s,fsr2l
  4649  0015E0  C0AF  FFDA         	movff	memcpy@s+1,fsr2h
  4650  0015E4  C0AC  FFE1         	movff	memcpy@d,fsr1l
  4651  0015E8  C0AD  FFE2         	movff	memcpy@d+1,fsr1h
  4652  0015EC  CFDF FFE7          	movff	indf2,indf1
  4653                           
  4654                           ; BSR set to: 0
  4655  0015F0  0100               	movlb	0	; () banked
  4656  0015F2  0100               	movlb	0	; () banked
  4657  0015F4  4BAE               	infsnz	memcpy@s& (0+255),f,b
  4658  0015F6  2BAF               	incf	(memcpy@s+1)& (0+255),f,b
  4659                           
  4660                           ; BSR set to: 0
  4661  0015F8  0100               	movlb	0	; () banked
  4662  0015FA  0100               	movlb	0	; () banked
  4663  0015FC  4BAC               	infsnz	memcpy@d& (0+255),f,b
  4664  0015FE  2BAD               	incf	(memcpy@d+1)& (0+255),f,b
  4665  001600                     l2473:
  4666                           
  4667                           ; BSR set to: 0
  4668  001600  0100               	movlb	0	; () banked
  4669  001602  0100               	movlb	0	; () banked
  4670  001604  07AA               	decf	memcpy@n& (0+255),f,b
  4671  001606  A0D8               	btfss	status,0,c
  4672  001608  07AB               	decf	(memcpy@n+1)& (0+255),f,b
  4673  00160A  0100               	movlb	0	; () banked
  4674  00160C  29AA               	incf	memcpy@n& (0+255),w,b
  4675  00160E  B4D8               	btfsc	status,2,c
  4676  001610  29AB               	incf	(memcpy@n+1)& (0+255),w,b
  4677  001612  B4D8               	btfsc	status,2,c
  4678                           
  4679                           ; BSR set to: 0
  4680                           
  4681                           ; BSR set to: 0
  4682                           ;	Return value of _memcpy is never used
  4683  001614  0012               	return	
  4684  001616  D7E2               	goto	l2467
  4685  001618                     __end_of_memcpy:
  4686                           	opt stack 0
  4687                           tblptru	equ	0xFF8
  4688                           tblptrh	equ	0xFF7
  4689                           tblptrl	equ	0xFF6
  4690                           tablat	equ	0xFF5
  4691                           prodh	equ	0xFF4
  4692                           prodl	equ	0xFF3
  4693                           intcon	equ	0xFF2
  4694                           intcon2	equ	0xFF1
  4695                           postinc0	equ	0xFEE
  4696                           wreg	equ	0xFE8
  4697                           indf1	equ	0xFE7
  4698                           fsr1h	equ	0xFE2
  4699                           fsr1l	equ	0xFE1
  4700                           indf2	equ	0xFDF
  4701                           postinc2	equ	0xFDE
  4702                           postdec2	equ	0xFDD
  4703                           fsr2h	equ	0xFDA
  4704                           fsr2l	equ	0xFD9
  4705                           status	equ	0xFD8
  4706                           
  4707 ;; *************** function _OpenUSART *****************
  4708 ;; Defined at:
  4709 ;;		line 73 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uopen.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;  config          1    wreg     unsigned char 
  4712 ;;  spbrg           2   38[BANK0 ] unsigned int 
  4713 ;; Auto vars:     Size  Location     Type
  4714 ;;  config          1   43[BANK0 ] unsigned char 
  4715 ;; Return value:  Size  Location     Type
  4716 ;;		None               void
  4717 ;; Registers used:
  4718 ;;		wreg, status,2
  4719 ;; Tracked objects:
  4720 ;;		On entry : 0/0
  4721 ;;		On exit  : 0/0
  4722 ;;		Unchanged: 0/0
  4723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4724 ;;      Params:         0       2       0       0       0
  4725 ;;      Locals:         0       1       0       0       0
  4726 ;;      Temps:          0       3       0       0       0
  4727 ;;      Totals:         0       6       0       0       0
  4728 ;;Total ram usage:        6 bytes
  4729 ;; Hardware stack levels used:    1
  4730 ;; Hardware stack levels required when called:   10
  4731 ;; This function calls:
  4732 ;;		Nothing
  4733 ;; This function is called by:
  4734 ;;		_main
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           
  4738                           	psect	text30
  4739  0011E4                     __ptext30:
  4740                           	opt stack 0
  4741  0011E4                     _OpenUSART:
  4742                           	opt stack 19
  4743                           
  4744                           ; BSR set to: 0
  4745                           ;incstack = 0
  4746                           ;OpenUSART@config stored from wreg
  4747  0011E4  CFE8 F0AB          	movff	wreg,OpenUSART@config
  4748  0011E8  0E00               	movlw	0
  4749  0011EA  6EAC               	movwf	4012,c	;volatile
  4750  0011EC  0E00               	movlw	0
  4751  0011EE  6EAB               	movwf	4011,c	;volatile
  4752  0011F0  0100               	movlb	0	; () banked
  4753  0011F2  0100               	movlb	0	; () banked
  4754  0011F4  B1AB               	btfsc	OpenUSART@config& (0+255),0,b
  4755                           
  4756                           ; BSR set to: 0
  4757  0011F6  88AC               	bsf	4012,4,c	;volatile
  4758                           
  4759                           ; BSR set to: 0
  4760                           
  4761                           ; BSR set to: 0
  4762  0011F8  0100               	movlb	0	; () banked
  4763  0011FA  0100               	movlb	0	; () banked
  4764  0011FC  A3AB               	btfss	OpenUSART@config& (0+255),1,b
  4765  0011FE  D002               	goto	l2767
  4766                           
  4767                           ; BSR set to: 0
  4768  001200  8CAC               	bsf	4012,6,c	;volatile
  4769  001202  8CAB               	bsf	4011,6,c	;volatile
  4770  001204                     l2767:
  4771                           
  4772                           ; BSR set to: 0
  4773  001204  0100               	movlb	0	; () banked
  4774  001206  0100               	movlb	0	; () banked
  4775  001208  B5AB               	btfsc	OpenUSART@config& (0+255),2,b
  4776                           
  4777                           ; BSR set to: 0
  4778  00120A  8EAC               	bsf	4012,7,c	;volatile
  4779                           
  4780                           ; BSR set to: 0
  4781                           
  4782                           ; BSR set to: 0
  4783  00120C  0100               	movlb	0	; () banked
  4784  00120E  0100               	movlb	0	; () banked
  4785  001210  A7AB               	btfss	OpenUSART@config& (0+255),3,b
  4786  001212  D002               	goto	l494
  4787                           
  4788                           ; BSR set to: 0
  4789  001214  88AB               	bsf	4011,4,c	;volatile
  4790  001216  D001               	goto	l2775
  4791  001218                     l494:
  4792                           
  4793                           ; BSR set to: 0
  4794  001218  8AAB               	bsf	4011,5,c	;volatile
  4795  00121A                     l2775:
  4796                           
  4797                           ; BSR set to: 0
  4798  00121A  0100               	movlb	0	; () banked
  4799  00121C  0100               	movlb	0	; () banked
  4800  00121E  B9AB               	btfsc	OpenUSART@config& (0+255),4,b
  4801                           
  4802                           ; BSR set to: 0
  4803  001220  84AC               	bsf	4012,2,c	;volatile
  4804                           
  4805                           ; BSR set to: 0
  4806  001222  989E               	bcf	3998,4,c	;volatile
  4807                           
  4808                           ; BSR set to: 0
  4809  001224  0100               	movlb	0	; () banked
  4810  001226  0100               	movlb	0	; () banked
  4811  001228  BBAB               	btfsc	OpenUSART@config& (0+255),5,b
  4812                           
  4813                           ; BSR set to: 0
  4814  00122A  86AB               	bsf	4011,3,c	;volatile
  4815                           
  4816                           ; BSR set to: 0
  4817                           
  4818                           ; BSR set to: 0
  4819  00122C  0100               	movlb	0	; () banked
  4820  00122E  0100               	movlb	0	; () banked
  4821  001230  ADAB               	btfss	OpenUSART@config& (0+255),6,b
  4822  001232  D002               	goto	l498
  4823                           
  4824                           ; BSR set to: 0
  4825  001234  8A9D               	bsf	3997,5,c	;volatile
  4826  001236  D001               	goto	l499
  4827  001238                     l498:
  4828                           
  4829                           ; BSR set to: 0
  4830  001238  9A9D               	bcf	3997,5,c	;volatile
  4831  00123A                     l499:
  4832                           
  4833                           ; BSR set to: 0
  4834  00123A  9A9E               	bcf	3998,5,c	;volatile
  4835                           
  4836                           ; BSR set to: 0
  4837  00123C  0100               	movlb	0	; () banked
  4838  00123E  0100               	movlb	0	; () banked
  4839  001240  AFAB               	btfss	OpenUSART@config& (0+255),7,b
  4840  001242  D002               	goto	l500
  4841                           
  4842                           ; BSR set to: 0
  4843  001244  889D               	bsf	3997,4,c	;volatile
  4844  001246  D001               	goto	l501
  4845  001248                     l500:
  4846                           
  4847                           ; BSR set to: 0
  4848  001248  989D               	bcf	3997,4,c	;volatile
  4849  00124A                     l501:
  4850                           
  4851                           ; BSR set to: 0
  4852  00124A  C0A6  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4853                           
  4854                           ; BSR set to: 0
  4855  00124E  0100               	movlb	0	; () banked
  4856  001250  C0A7  F0A8         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4857  001254  C0A8  F0A9         	movff	??_OpenUSART,??_OpenUSART+1
  4858  001258  0100               	movlb	0	; () banked
  4859  00125A  6BAA               	clrf	(??_OpenUSART+2)& (0+255),b
  4860  00125C  0100               	movlb	0	; () banked
  4861  00125E  51A9               	movf	(??_OpenUSART+1)& (0+255),w,b
  4862  001260  6EB0               	movwf	4016,c	;volatile
  4863                           
  4864                           ; BSR set to: 0
  4865  001262  8AAC               	bsf	4012,5,c	;volatile
  4866                           
  4867                           ; BSR set to: 0
  4868  001264  8EAB               	bsf	4011,7,c	;volatile
  4869                           
  4870                           ; BSR set to: 0
  4871  001266  9C94               	bcf	3988,6,c	;volatile
  4872                           
  4873                           ; BSR set to: 0
  4874  001268  8E94               	bsf	3988,7,c	;volatile
  4875                           
  4876                           ; BSR set to: 0
  4877  00126A  A8AC               	btfss	4012,4,c	;volatile
  4878  00126C  0012               	return	
  4879                           
  4880                           ; BSR set to: 0
  4881  00126E  BEAC               	btfsc	4012,7,c	;volatile
  4882  001270  0012               	return	
  4883                           
  4884                           ; BSR set to: 0
  4885  001272  8C94               	bsf	3988,6,c	;volatile
  4886  001274  0012               	return	
  4887  001276                     __end_of_OpenUSART:
  4888                           	opt stack 0
  4889                           tblptru	equ	0xFF8
  4890                           tblptrh	equ	0xFF7
  4891                           tblptrl	equ	0xFF6
  4892                           tablat	equ	0xFF5
  4893                           prodh	equ	0xFF4
  4894                           prodl	equ	0xFF3
  4895                           intcon	equ	0xFF2
  4896                           intcon2	equ	0xFF1
  4897                           postinc0	equ	0xFEE
  4898                           wreg	equ	0xFE8
  4899                           indf1	equ	0xFE7
  4900                           fsr1h	equ	0xFE2
  4901                           fsr1l	equ	0xFE1
  4902                           indf2	equ	0xFDF
  4903                           postinc2	equ	0xFDE
  4904                           postdec2	equ	0xFDD
  4905                           fsr2h	equ	0xFDA
  4906                           fsr2l	equ	0xFD9
  4907                           status	equ	0xFD8
  4908                           
  4909 ;; *************** function _OpenTimer0 *****************
  4910 ;; Defined at:
  4911 ;;		line 18 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0open.c"
  4912 ;; Parameters:    Size  Location     Type
  4913 ;;  config          1    wreg     unsigned char 
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;  config          1   38[BANK0 ] unsigned char 
  4916 ;; Return value:  Size  Location     Type
  4917 ;;		None               void
  4918 ;; Registers used:
  4919 ;;		wreg, status,2, status,0
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4925 ;;      Params:         0       0       0       0       0
  4926 ;;      Locals:         0       1       0       0       0
  4927 ;;      Temps:          0       0       0       0       0
  4928 ;;      Totals:         0       1       0       0       0
  4929 ;;Total ram usage:        1 bytes
  4930 ;; Hardware stack levels used:    1
  4931 ;; Hardware stack levels required when called:   10
  4932 ;; This function calls:
  4933 ;;		Nothing
  4934 ;; This function is called by:
  4935 ;;		_main
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939                           	psect	text31
  4940  00197E                     __ptext31:
  4941                           	opt stack 0
  4942  00197E                     _OpenTimer0:
  4943                           	opt stack 19
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;incstack = 0
  4947                           ;OpenTimer0@config stored from wreg
  4948  00197E  CFE8 F0A6          	movff	wreg,OpenTimer0@config
  4949  001982  0100               	movlb	0	; () banked
  4950  001984  0100               	movlb	0	; () banked
  4951  001986  51A6               	movf	OpenTimer0@config& (0+255),w,b
  4952  001988  0B7F               	andlw	127
  4953  00198A  6ED5               	movwf	4053,c	;volatile
  4954                           
  4955                           ; BSR set to: 0
  4956  00198C  0E00               	movlw	0
  4957  00198E  6ED7               	movwf	4055,c	;volatile
  4958                           
  4959                           ; BSR set to: 0
  4960  001990  0E00               	movlw	0
  4961  001992  6ED6               	movwf	4054,c	;volatile
  4962                           
  4963                           ; BSR set to: 0
  4964  001994  94F2               	bcf	intcon,2,c	;volatile
  4965                           
  4966                           ; BSR set to: 0
  4967  001996  0100               	movlb	0	; () banked
  4968  001998  0100               	movlb	0	; () banked
  4969  00199A  AFA6               	btfss	OpenTimer0@config& (0+255),7,b
  4970  00199C  D002               	goto	l445
  4971                           
  4972                           ; BSR set to: 0
  4973  00199E  8AF2               	bsf	intcon,5,c	;volatile
  4974  0019A0  D001               	goto	l446
  4975  0019A2                     l445:
  4976                           
  4977                           ; BSR set to: 0
  4978  0019A2  9AF2               	bcf	intcon,5,c	;volatile
  4979  0019A4                     l446:
  4980                           
  4981                           ; BSR set to: 0
  4982  0019A4  8ED5               	bsf	4053,7,c	;volatile
  4983                           
  4984                           ; BSR set to: 0
  4985  0019A6  0012               	return	
  4986  0019A8                     __end_of_OpenTimer0:
  4987                           	opt stack 0
  4988                           tblptru	equ	0xFF8
  4989                           tblptrh	equ	0xFF7
  4990                           tblptrl	equ	0xFF6
  4991                           tablat	equ	0xFF5
  4992                           prodh	equ	0xFF4
  4993                           prodl	equ	0xFF3
  4994                           intcon	equ	0xFF2
  4995                           intcon2	equ	0xFF1
  4996                           postinc0	equ	0xFEE
  4997                           wreg	equ	0xFE8
  4998                           indf1	equ	0xFE7
  4999                           fsr1h	equ	0xFE2
  5000                           fsr1l	equ	0xFE1
  5001                           indf2	equ	0xFDF
  5002                           postinc2	equ	0xFDE
  5003                           postdec2	equ	0xFDD
  5004                           fsr2h	equ	0xFDA
  5005                           fsr2l	equ	0xFD9
  5006                           status	equ	0xFD8
  5007                           
  5008 ;; *************** function _InterruptHandlerLow *****************
  5009 ;; Defined at:
  5010 ;;		line 148 in file "../src/interrupts.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;		None
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;		None
  5015 ;; Return value:  Size  Location     Type
  5016 ;;		None               void
  5017 ;; Registers used:
  5018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5024 ;;      Params:         0       0       0       0       0
  5025 ;;      Locals:         0       0       0       0       0
  5026 ;;      Temps:         17       0       0       0       0
  5027 ;;      Totals:        17       0       0       0       0
  5028 ;;Total ram usage:       17 bytes
  5029 ;; Hardware stack levels used:    1
  5030 ;; Hardware stack levels required when called:    9
  5031 ;; This function calls:
  5032 ;;		_uart_recv_int_handler
  5033 ;;		i1_ConvertADC
  5034 ;; This function is called by:
  5035 ;;		Interrupt level 1
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039                           	psect	intcodelo
  5040  000018                     __pintcodelo:
  5041                           	opt stack 0
  5042  000018                     _InterruptHandlerLow:
  5043                           	opt stack 16
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;incstack = 0
  5047  000018  CFD8 F01C          	movff	status,??_InterruptHandlerLow
  5048  00001C  CFE8 F01D          	movff	wreg,??_InterruptHandlerLow+1
  5049  000020  CFE0 F01E          	movff	bsr,??_InterruptHandlerLow+2
  5050  000024  CFFA F01F          	movff	pclath,??_InterruptHandlerLow+3
  5051  000028  CFFB F020          	movff	pclatu,??_InterruptHandlerLow+4
  5052  00002C  CFE9 F021          	movff	fsr0l,??_InterruptHandlerLow+5
  5053  000030  CFEA F022          	movff	fsr0h,??_InterruptHandlerLow+6
  5054  000034  CFE1 F023          	movff	fsr1l,??_InterruptHandlerLow+7
  5055  000038  CFE2 F024          	movff	fsr1h,??_InterruptHandlerLow+8
  5056  00003C  CFD9 F025          	movff	fsr2l,??_InterruptHandlerLow+9
  5057  000040  CFDA F026          	movff	fsr2h,??_InterruptHandlerLow+10
  5058  000044  CFF3 F027          	movff	prodl,??_InterruptHandlerLow+11
  5059  000048  CFF4 F028          	movff	prodh,??_InterruptHandlerLow+12
  5060  00004C  CFF6 F029          	movff	tblptrl,??_InterruptHandlerLow+13
  5061  000050  CFF7 F02A          	movff	tblptrh,??_InterruptHandlerLow+14
  5062  000054  CFF8 F02B          	movff	tblptru,??_InterruptHandlerLow+15
  5063  000058  CFF5 F02C          	movff	tablat,??_InterruptHandlerLow+16
  5064                           
  5065                           ;interrupts.c: 150: if (PIR1bits.TMR1IF) {
  5066  00005C  A09E               	btfss	3998,0,c	;volatile
  5067  00005E  D003               	goto	i1l2995
  5068                           
  5069                           ;interrupts.c: 151: PIR1bits.TMR1IF = 0;
  5070  000060  909E               	bcf	3998,0,c	;volatile
  5071                           
  5072                           ;interrupts.c: 152: ConvertADC();
  5073  000062  EC89  F00D         	call	i1_ConvertADC	;wreg free
  5074  000066                     i1l2995:
  5075                           
  5076                           ;interrupts.c: 154: }
  5077                           ;interrupts.c: 156: if (INTCONbits.TMR0IF) {
  5078  000066  B4F2               	btfsc	intcon,2,c	;volatile
  5079                           
  5080                           ;interrupts.c: 157: INTCONbits.TMR0IF = 0;
  5081  000068  94F2               	bcf	intcon,2,c	;volatile
  5082                           
  5083                           ;interrupts.c: 160: }
  5084                           ;interrupts.c: 162: if (PIR1bits.RCIF) {
  5085  00006A  AA9E               	btfss	3998,5,c	;volatile
  5086  00006C  D003               	goto	i1l402
  5087                           
  5088                           ;interrupts.c: 163: PIR1bits.RCIF = 0;
  5089  00006E  9A9E               	bcf	3998,5,c	;volatile
  5090                           
  5091                           ;interrupts.c: 164: uart_recv_int_handler();
  5092  000070  ECA4  F008         	call	_uart_recv_int_handler	;wreg free
  5093  000074                     i1l402:
  5094  000074  C02C  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5095  000078  C02B  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5096  00007C  C02A  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5097  000080  C029  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5098  000084  C028  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5099  000088  C027  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5100  00008C  C026  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5101  000090  C025  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5102  000094  C024  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5103  000098  C023  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5104  00009C  C022  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5105  0000A0  C021  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5106  0000A4  C020  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5107  0000A8  C01F  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5108  0000AC  C01E  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5109  0000B0  C01D  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5110  0000B4  C01C  FFD8         	movff	??_InterruptHandlerLow,status
  5111  0000B8  0010               	retfie	
  5112  0000BA                     __end_of_InterruptHandlerLow:
  5113                           	opt stack 0
  5114                           pclatu	equ	0xFFB
  5115                           pclath	equ	0xFFA
  5116                           tblptru	equ	0xFF8
  5117                           tblptrh	equ	0xFF7
  5118                           tblptrl	equ	0xFF6
  5119                           tablat	equ	0xFF5
  5120                           prodh	equ	0xFF4
  5121                           prodl	equ	0xFF3
  5122                           intcon	equ	0xFF2
  5123                           intcon2	equ	0xFF1
  5124                           postinc0	equ	0xFEE
  5125                           fsr0h	equ	0xFEA
  5126                           fsr0l	equ	0xFE9
  5127                           wreg	equ	0xFE8
  5128                           indf1	equ	0xFE7
  5129                           fsr1h	equ	0xFE2
  5130                           fsr1l	equ	0xFE1
  5131                           bsr	equ	0xFE0
  5132                           indf2	equ	0xFDF
  5133                           postinc2	equ	0xFDE
  5134                           postdec2	equ	0xFDD
  5135                           fsr2h	equ	0xFDA
  5136                           fsr2l	equ	0xFD9
  5137                           status	equ	0xFD8
  5138                           
  5139 ;; *************** function i1_ConvertADC *****************
  5140 ;; Defined at:
  5141 ;;		line 22 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcconv.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;		None
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;		None
  5146 ;; Return value:  Size  Location     Type
  5147 ;;		None               void
  5148 ;; Registers used:
  5149 ;;		None
  5150 ;; Tracked objects:
  5151 ;;		On entry : 0/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5155 ;;      Params:         0       0       0       0       0
  5156 ;;      Locals:         0       0       0       0       0
  5157 ;;      Temps:          0       0       0       0       0
  5158 ;;      Totals:         0       0       0       0       0
  5159 ;;Total ram usage:        0 bytes
  5160 ;; Hardware stack levels used:    1
  5161 ;; Hardware stack levels required when called:    5
  5162 ;; This function calls:
  5163 ;;		Nothing
  5164 ;; This function is called by:
  5165 ;;		_InterruptHandlerLow
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169                           	psect	text33
  5170  001B12                     __ptext33:
  5171                           	opt stack 0
  5172  001B12                     i1_ConvertADC:
  5173                           	opt stack 19
  5174                           
  5175                           ;incstack = 0
  5176  001B12  82C2               	bsf	4034,1,c	;volatile
  5177  001B14  0012               	return	
  5178  001B16                     __end_ofi1_ConvertADC:
  5179                           	opt stack 0
  5180                           pclatu	equ	0xFFB
  5181                           pclath	equ	0xFFA
  5182                           tblptru	equ	0xFF8
  5183                           tblptrh	equ	0xFF7
  5184                           tblptrl	equ	0xFF6
  5185                           tablat	equ	0xFF5
  5186                           prodh	equ	0xFF4
  5187                           prodl	equ	0xFF3
  5188                           intcon	equ	0xFF2
  5189                           intcon2	equ	0xFF1
  5190                           postinc0	equ	0xFEE
  5191                           fsr0h	equ	0xFEA
  5192                           fsr0l	equ	0xFE9
  5193                           wreg	equ	0xFE8
  5194                           indf1	equ	0xFE7
  5195                           fsr1h	equ	0xFE2
  5196                           fsr1l	equ	0xFE1
  5197                           bsr	equ	0xFE0
  5198                           indf2	equ	0xFDF
  5199                           postinc2	equ	0xFDE
  5200                           postdec2	equ	0xFDD
  5201                           fsr2h	equ	0xFDA
  5202                           fsr2l	equ	0xFD9
  5203                           status	equ	0xFD8
  5204                           
  5205 ;; *************** function _uart_recv_int_handler *****************
  5206 ;; Defined at:
  5207 ;;		line 11 in file "../src/my_uart.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;		None
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;		None
  5212 ;; Return value:  Size  Location     Type
  5213 ;;		None               void
  5214 ;; Registers used:
  5215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5221 ;;      Params:         0       0       0       0       0
  5222 ;;      Locals:         0       0       0       0       0
  5223 ;;      Temps:          1       0       0       0       0
  5224 ;;      Totals:         1       0       0       0       0
  5225 ;;Total ram usage:        1 bytes
  5226 ;; Hardware stack levels used:    1
  5227 ;; Hardware stack levels required when called:    8
  5228 ;; This function calls:
  5229 ;;		_ReadUSART
  5230 ;;		_ToMainLow_sendmsg
  5231 ;; This function is called by:
  5232 ;;		_InterruptHandlerLow
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text34
  5237  001148                     __ptext34:
  5238                           	opt stack 0
  5239  001148                     _uart_recv_int_handler:
  5240                           	opt stack 16
  5241                           
  5242                           ;my_uart.c: 12: if ((PIR1bits.RCIF)) {
  5243                           
  5244                           ;incstack = 0
  5245  001148  AA9E               	btfss	3998,5,c	;volatile
  5246  00114A  D03C               	goto	i1l2983
  5247                           
  5248                           ;my_uart.c: 13: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5249  00114C  EE20 F004          	lfsr	2,4
  5250  001150  504B               	movf	_uc_ptr,w,c
  5251  001152  26D9               	addwf	fsr2l,f,c
  5252  001154  504C               	movf	_uc_ptr+1,w,c
  5253  001156  22DA               	addwfc	fsr2h,f,c
  5254  001158  50DF               	movf	indf2,w,c
  5255  00115A  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5256  00115C  501B               	movf	??_uart_recv_int_handler,w,c
  5257  00115E  0D01               	mullw	1
  5258  001160  50F3               	movf	prodl,w,c
  5259  001162  244B               	addwf	_uc_ptr,w,c
  5260  001164  6ED9               	movwf	fsr2l,c
  5261  001166  50F4               	movf	prodh,w,c
  5262  001168  204C               	addwfc	_uc_ptr+1,w,c
  5263  00116A  6EDA               	movwf	fsr2h,c
  5264  00116C  EC2F  F00D         	call	_ReadUSART	;wreg free
  5265  001170  6EDF               	movwf	indf2,c
  5266                           
  5267                           ;my_uart.c: 14: uc_ptr->buflen++;
  5268  001172  EE20 F004          	lfsr	2,4
  5269  001176  504B               	movf	_uc_ptr,w,c
  5270  001178  26D9               	addwf	fsr2l,f,c
  5271  00117A  504C               	movf	_uc_ptr+1,w,c
  5272  00117C  22DA               	addwfc	fsr2h,f,c
  5273  00117E  2ADF               	incf	indf2,f,c
  5274                           
  5275                           ;my_uart.c: 16: if (uc_ptr->buflen == 4) {
  5276  001180  EE20 F004          	lfsr	2,4
  5277  001184  504B               	movf	_uc_ptr,w,c
  5278  001186  26D9               	addwf	fsr2l,f,c
  5279  001188  504C               	movf	_uc_ptr+1,w,c
  5280  00118A  22DA               	addwfc	fsr2h,f,c
  5281  00118C  0E04               	movlw	4
  5282  00118E  62DF               	cpfseq	indf2,c
  5283  001190  D019               	goto	i1l2983
  5284                           
  5285                           ;my_uart.c: 17: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5286  001192  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5287  001194  0E1F               	movlw	31
  5288  001196  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5289  001198  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5290  00119A  C04C  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5291  00119E  C04B  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5292  0011A2  EE20 F004          	lfsr	2,4
  5293  0011A6  504B               	movf	_uc_ptr,w,c
  5294  0011A8  26D9               	addwf	fsr2l,f,c
  5295  0011AA  504C               	movf	_uc_ptr+1,w,c
  5296  0011AC  22DA               	addwfc	fsr2h,f,c
  5297  0011AE  50DF               	movf	indf2,w,c
  5298  0011B0  ECE8  F00C         	call	_ToMainLow_sendmsg
  5299                           
  5300                           ;my_uart.c: 18: uc_ptr->buflen = 0;
  5301  0011B4  EE20 F004          	lfsr	2,4
  5302  0011B8  504B               	movf	_uc_ptr,w,c
  5303  0011BA  26D9               	addwf	fsr2l,f,c
  5304  0011BC  504C               	movf	_uc_ptr+1,w,c
  5305  0011BE  22DA               	addwfc	fsr2h,f,c
  5306  0011C0  0E00               	movlw	0
  5307  0011C2  6EDF               	movwf	indf2,c
  5308  0011C4                     i1l2983:
  5309                           
  5310                           ;my_uart.c: 19: }
  5311                           ;my_uart.c: 20: }
  5312                           ;my_uart.c: 21: if (USART_Status.OVERRUN_ERROR == 1) {
  5313  0011C4  A64E               	btfss	_USART_Status,3,c
  5314  0011C6  0012               	return	
  5315                           
  5316                           ;my_uart.c: 24: RCSTAbits.CREN = 0;
  5317  0011C8  98AB               	bcf	4011,4,c	;volatile
  5318                           
  5319                           ;my_uart.c: 25: RCSTAbits.CREN = 1;
  5320  0011CA  88AB               	bsf	4011,4,c	;volatile
  5321                           
  5322                           ;my_uart.c: 26: ToMainLow_sendmsg(0, 30, (void *) 0);
  5323  0011CC  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5324  0011CE  0E1E               	movlw	30
  5325  0011D0  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5326  0011D2  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5327  0011D4  0E00               	movlw	0
  5328  0011D6  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5329  0011D8  0E00               	movlw	0
  5330  0011DA  6E18               	movwf	ToMainLow_sendmsg@data,c
  5331  0011DC  0E00               	movlw	0
  5332  0011DE  ECE8  F00C         	call	_ToMainLow_sendmsg
  5333  0011E2  0012               	return	
  5334  0011E4                     __end_of_uart_recv_int_handler:
  5335                           	opt stack 0
  5336                           pclatu	equ	0xFFB
  5337                           pclath	equ	0xFFA
  5338                           tblptru	equ	0xFF8
  5339                           tblptrh	equ	0xFF7
  5340                           tblptrl	equ	0xFF6
  5341                           tablat	equ	0xFF5
  5342                           prodh	equ	0xFF4
  5343                           prodl	equ	0xFF3
  5344                           intcon	equ	0xFF2
  5345                           intcon2	equ	0xFF1
  5346                           postinc0	equ	0xFEE
  5347                           fsr0h	equ	0xFEA
  5348                           fsr0l	equ	0xFE9
  5349                           wreg	equ	0xFE8
  5350                           indf1	equ	0xFE7
  5351                           fsr1h	equ	0xFE2
  5352                           fsr1l	equ	0xFE1
  5353                           bsr	equ	0xFE0
  5354                           indf2	equ	0xFDF
  5355                           postinc2	equ	0xFDE
  5356                           postdec2	equ	0xFDD
  5357                           fsr2h	equ	0xFDA
  5358                           fsr2l	equ	0xFD9
  5359                           status	equ	0xFD8
  5360                           
  5361 ;; *************** function _ToMainLow_sendmsg *****************
  5362 ;; Defined at:
  5363 ;;		line 103 in file "../src/messages.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;  length          1    wreg     unsigned char 
  5366 ;;  msgtype         1   22[COMRAM] unsigned char 
  5367 ;;  data            2   23[COMRAM] PTR void 
  5368 ;;		 -> main@uc(5), NULL(0), 
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  length          1   25[COMRAM] unsigned char 
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  1    wreg      char 
  5373 ;; Registers used:
  5374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5380 ;;      Params:         3       0       0       0       0
  5381 ;;      Locals:         1       0       0       0       0
  5382 ;;      Temps:          0       0       0       0       0
  5383 ;;      Totals:         4       0       0       0       0
  5384 ;;Total ram usage:        4 bytes
  5385 ;; Hardware stack levels used:    1
  5386 ;; Hardware stack levels required when called:    7
  5387 ;; This function calls:
  5388 ;;		i1_send_msg
  5389 ;; This function is called by:
  5390 ;;		_uart_recv_int_handler
  5391 ;;		_timer1_int_handler
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395                           	psect	text35
  5396  0019D0                     __ptext35:
  5397                           	opt stack 0
  5398  0019D0                     _ToMainLow_sendmsg:
  5399                           	opt stack 16
  5400                           
  5401                           ;incstack = 0
  5402                           ;ToMainLow_sendmsg@length stored from wreg
  5403  0019D0  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5404                           
  5405                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5406                           ;	Return value of _ToMainLow_sendmsg is never used
  5407  0019D4  0101               	movlb	1	; () banked
  5408  0019D6  0E01               	movlw	high _ToMainLow_MQ
  5409  0019D8  6E0C               	movwf	i1send_msg@qptr+1,c
  5410  0019DA  0101               	movlb	1	; () banked
  5411  0019DC  0E6C               	movlw	low _ToMainLow_MQ
  5412  0019DE  6E0B               	movwf	i1send_msg@qptr,c
  5413  0019E0  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5414  0019E4  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5415  0019E8  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5416  0019EC  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5417  0019F0  ECA7  F007         	call	i1_send_msg	;wreg free
  5418  0019F4  0012               	return	
  5419  0019F6                     __end_of_ToMainLow_sendmsg:
  5420                           	opt stack 0
  5421                           pclatu	equ	0xFFB
  5422                           pclath	equ	0xFFA
  5423                           tblptru	equ	0xFF8
  5424                           tblptrh	equ	0xFF7
  5425                           tblptrl	equ	0xFF6
  5426                           tablat	equ	0xFF5
  5427                           prodh	equ	0xFF4
  5428                           prodl	equ	0xFF3
  5429                           intcon	equ	0xFF2
  5430                           intcon2	equ	0xFF1
  5431                           postinc0	equ	0xFEE
  5432                           fsr0h	equ	0xFEA
  5433                           fsr0l	equ	0xFE9
  5434                           wreg	equ	0xFE8
  5435                           indf1	equ	0xFE7
  5436                           fsr1h	equ	0xFE2
  5437                           fsr1l	equ	0xFE1
  5438                           bsr	equ	0xFE0
  5439                           indf2	equ	0xFDF
  5440                           postinc2	equ	0xFDE
  5441                           postdec2	equ	0xFDD
  5442                           fsr2h	equ	0xFDA
  5443                           fsr2l	equ	0xFD9
  5444                           status	equ	0xFD8
  5445                           
  5446 ;; *************** function i1_send_msg *****************
  5447 ;; Defined at:
  5448 ;;		line 24 in file "../src/messages.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5451 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5452 ;;  length          1   12[COMRAM] unsigned char 
  5453 ;;  msgtype         1   13[COMRAM] unsigned char 
  5454 ;;  data            2   14[COMRAM] PTR void 
  5455 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  5456 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5459 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5460 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5461 ;;  send_msg        2   17[COMRAM] unsigned int 
  5462 ;;  send_msg        1   19[COMRAM] unsigned char 
  5463 ;; Return value:  Size  Location     Type
  5464 ;;                  1    wreg      char 
  5465 ;; Registers used:
  5466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5472 ;;      Params:         6       0       0       0       0
  5473 ;;      Locals:         5       0       0       0       0
  5474 ;;      Temps:          1       0       0       0       0
  5475 ;;      Totals:        12       0       0       0       0
  5476 ;;Total ram usage:       12 bytes
  5477 ;; Hardware stack levels used:    1
  5478 ;; Hardware stack levels required when called:    6
  5479 ;; This function calls:
  5480 ;;		i1_memcpy
  5481 ;; This function is called by:
  5482 ;;		_ToMainLow_sendmsg
  5483 ;; This function uses a non-reentrant model
  5484 ;;
  5485                           
  5486                           	psect	text36
  5487  000F4E                     __ptext36:
  5488                           	opt stack 0
  5489  000F4E                     i1_send_msg:
  5490                           	opt stack 16
  5491                           
  5492                           ;messages.c: 25: unsigned char slot;
  5493                           ;messages.c: 27: msg *qmsg;
  5494                           ;messages.c: 28: size_t tlength = length;
  5495                           
  5496                           ;incstack = 0
  5497  000F4E  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5498  000F52  6A13               	clrf	i1send_msg@tlength+1,c
  5499                           
  5500                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5501  000F54  EE20 F034          	lfsr	2,52
  5502  000F58  500B               	movf	i1send_msg@qptr,w,c
  5503  000F5A  26D9               	addwf	fsr2l,f,c
  5504  000F5C  500C               	movf	i1send_msg@qptr+1,w,c
  5505  000F5E  22DA               	addwfc	fsr2h,f,c
  5506  000F60  50DF               	movf	indf2,w,c
  5507  000F62  6E14               	movwf	i1send_msg@slot,c
  5508                           
  5509                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5510  000F64  5014               	movf	i1send_msg@slot,w,c
  5511  000F66  0D0D               	mullw	13
  5512  000F68  50F3               	movf	prodl,w,c
  5513  000F6A  240B               	addwf	i1send_msg@qptr,w,c
  5514  000F6C  6E15               	movwf	i1send_msg@qmsg,c
  5515  000F6E  50F4               	movf	prodh,w,c
  5516  000F70  200C               	addwfc	i1send_msg@qptr+1,w,c
  5517  000F72  6E16               	movwf	i1send_msg@qmsg+1,c
  5518                           
  5519                           ;messages.c: 41: if (qmsg->full != 0) {
  5520  000F74  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5521  000F78  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5522  000F7C  50DF               	movf	indf2,w,c
  5523  000F7E  B4D8               	btfsc	status,2,c
  5524  000F80  D002               	goto	i1l2955
  5525                           
  5526                           ;messages.c: 42: return (-1);
  5527  000F82  0EFF               	movlw	255
  5528  000F84  0012               	return	
  5529  000F86                     i1l2955:
  5530                           
  5531                           ;messages.c: 43: }
  5532                           ;messages.c: 46: qmsg->length = length;
  5533  000F86  EE20 F001          	lfsr	2,1
  5534  000F8A  5015               	movf	i1send_msg@qmsg,w,c
  5535  000F8C  26D9               	addwf	fsr2l,f,c
  5536  000F8E  5016               	movf	i1send_msg@qmsg+1,w,c
  5537  000F90  22DA               	addwfc	fsr2h,f,c
  5538  000F92  C00D  FFDF         	movff	i1send_msg@length,indf2
  5539                           
  5540                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5541  000F96  EE20 F002          	lfsr	2,2
  5542  000F9A  5015               	movf	i1send_msg@qmsg,w,c
  5543  000F9C  26D9               	addwf	fsr2l,f,c
  5544  000F9E  5016               	movf	i1send_msg@qmsg+1,w,c
  5545  000FA0  22DA               	addwfc	fsr2h,f,c
  5546  000FA2  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5547                           
  5548                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5549  000FA6  0E03               	movlw	3
  5550  000FA8  2415               	addwf	i1send_msg@qmsg,w,c
  5551  000FAA  6E01               	movwf	i1memcpy@d1,c
  5552  000FAC  0E00               	movlw	0
  5553  000FAE  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5554  000FB0  6E02               	movwf	i1memcpy@d1+1,c
  5555  000FB2  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5556  000FB6  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5557  000FBA  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5558  000FBE  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5559  000FC2  ECDB  F00B         	call	i1_memcpy	;wreg free
  5560                           
  5561                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5562  000FC6  EE20 F034          	lfsr	2,52
  5563  000FCA  500B               	movf	i1send_msg@qptr,w,c
  5564  000FCC  26D9               	addwf	fsr2l,f,c
  5565  000FCE  500C               	movf	i1send_msg@qptr+1,w,c
  5566  000FD0  22DA               	addwfc	fsr2h,f,c
  5567  000FD2  EE10 F034          	lfsr	1,52
  5568  000FD6  500B               	movf	i1send_msg@qptr,w,c
  5569  000FD8  26E1               	addwf	fsr1l,f,c
  5570  000FDA  500C               	movf	i1send_msg@qptr+1,w,c
  5571  000FDC  22E2               	addwfc	fsr1h,f,c
  5572  000FDE  50E7               	movf	indf1,w,c
  5573  000FE0  6E11               	movwf	??i1_send_msg& (0+255),c
  5574  000FE2  2811               	incf	??i1_send_msg,w,c
  5575  000FE4  0B03               	andlw	3
  5576  000FE6  6EDF               	movwf	indf2,c
  5577                           
  5578                           ;messages.c: 59: qmsg->full = 1;
  5579  000FE8  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5580  000FEC  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5581  000FF0  0E01               	movlw	1
  5582  000FF2  6EDF               	movwf	indf2,c
  5583                           
  5584                           ;messages.c: 60: return (1);
  5585  000FF4  0E01               	movlw	1
  5586  000FF6  0012               	return	
  5587  000FF8                     __end_ofi1_send_msg:
  5588                           	opt stack 0
  5589                           pclatu	equ	0xFFB
  5590                           pclath	equ	0xFFA
  5591                           tblptru	equ	0xFF8
  5592                           tblptrh	equ	0xFF7
  5593                           tblptrl	equ	0xFF6
  5594                           tablat	equ	0xFF5
  5595                           prodh	equ	0xFF4
  5596                           prodl	equ	0xFF3
  5597                           intcon	equ	0xFF2
  5598                           intcon2	equ	0xFF1
  5599                           postinc0	equ	0xFEE
  5600                           fsr0h	equ	0xFEA
  5601                           fsr0l	equ	0xFE9
  5602                           wreg	equ	0xFE8
  5603                           indf1	equ	0xFE7
  5604                           fsr1h	equ	0xFE2
  5605                           fsr1l	equ	0xFE1
  5606                           bsr	equ	0xFE0
  5607                           indf2	equ	0xFDF
  5608                           postinc2	equ	0xFDE
  5609                           postdec2	equ	0xFDD
  5610                           fsr2h	equ	0xFDA
  5611                           fsr2l	equ	0xFD9
  5612                           status	equ	0xFD8
  5613                           
  5614 ;; *************** function i1_memcpy *****************
  5615 ;; Defined at:
  5616 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;  d1              2    0[COMRAM] PTR void 
  5619 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5620 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5621 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  5622 ;;  s1              2    2[COMRAM] PTR const void 
  5623 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5624 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5625 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  5626 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5627 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  5628 ;;  n               2    4[COMRAM] unsigned int 
  5629 ;; Auto vars:     Size  Location     Type
  5630 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5631 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5632 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5633 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  5634 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5635 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  5636 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5637 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5638 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5639 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  5640 ;; Return value:  Size  Location     Type
  5641 ;;                  2    0[COMRAM] PTR void 
  5642 ;; Registers used:
  5643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5644 ;; Tracked objects:
  5645 ;;		On entry : 0/0
  5646 ;;		On exit  : 0/0
  5647 ;;		Unchanged: 0/0
  5648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5649 ;;      Params:         6       0       0       0       0
  5650 ;;      Locals:         4       0       0       0       0
  5651 ;;      Temps:          0       0       0       0       0
  5652 ;;      Totals:        10       0       0       0       0
  5653 ;;Total ram usage:       10 bytes
  5654 ;; Hardware stack levels used:    1
  5655 ;; Hardware stack levels required when called:    5
  5656 ;; This function calls:
  5657 ;;		Nothing
  5658 ;; This function is called by:
  5659 ;;		i1_send_msg
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           	psect	text37
  5664  0017B6                     __ptext37:
  5665                           	opt stack 0
  5666  0017B6                     i1_memcpy:
  5667                           	opt stack 16
  5668                           
  5669                           ;incstack = 0
  5670  0017B6  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5671  0017BA  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5672  0017BE  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5673  0017C2  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5674  0017C6  D00E               	goto	i1l2931
  5675  0017C8                     i1l2925:
  5676  0017C8  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5677  0017CC  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5678  0017D0  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5679  0017D4  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5680  0017D8  CFDF FFE7          	movff	indf2,indf1
  5681  0017DC  4A09               	infsnz	i1memcpy@s,f,c
  5682  0017DE  2A0A               	incf	i1memcpy@s+1,f,c
  5683  0017E0  4A07               	infsnz	i1memcpy@d,f,c
  5684  0017E2  2A08               	incf	i1memcpy@d+1,f,c
  5685  0017E4                     i1l2931:
  5686  0017E4  0605               	decf	i1memcpy@n,f,c
  5687  0017E6  A0D8               	btfss	status,0,c
  5688  0017E8  0606               	decf	i1memcpy@n+1,f,c
  5689  0017EA  2805               	incf	i1memcpy@n& (0+255),w,c
  5690  0017EC  B4D8               	btfsc	status,2,c
  5691  0017EE  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5692  0017F0  B4D8               	btfsc	status,2,c
  5693                           
  5694                           ;	Return value of i1_memcpy is never used
  5695  0017F2  0012               	return	
  5696  0017F4  D7E9               	goto	i1l2925
  5697  0017F6                     __end_ofi1_memcpy:
  5698                           	opt stack 0
  5699                           pclatu	equ	0xFFB
  5700                           pclath	equ	0xFFA
  5701                           tblptru	equ	0xFF8
  5702                           tblptrh	equ	0xFF7
  5703                           tblptrl	equ	0xFF6
  5704                           tablat	equ	0xFF5
  5705                           prodh	equ	0xFF4
  5706                           prodl	equ	0xFF3
  5707                           intcon	equ	0xFF2
  5708                           intcon2	equ	0xFF1
  5709                           postinc0	equ	0xFEE
  5710                           fsr0h	equ	0xFEA
  5711                           fsr0l	equ	0xFE9
  5712                           wreg	equ	0xFE8
  5713                           indf1	equ	0xFE7
  5714                           fsr1h	equ	0xFE2
  5715                           fsr1l	equ	0xFE1
  5716                           bsr	equ	0xFE0
  5717                           indf2	equ	0xFDF
  5718                           postinc2	equ	0xFDE
  5719                           postdec2	equ	0xFDD
  5720                           fsr2h	equ	0xFDA
  5721                           fsr2l	equ	0xFD9
  5722                           status	equ	0xFD8
  5723                           
  5724 ;; *************** function _ReadUSART *****************
  5725 ;; Defined at:
  5726 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uread.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;		None
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;  data            1    0[COMRAM] unsigned char 
  5731 ;; Return value:  Size  Location     Type
  5732 ;;                  1    wreg      unsigned char 
  5733 ;; Registers used:
  5734 ;;		wreg, status,2, status,0
  5735 ;; Tracked objects:
  5736 ;;		On entry : 0/0
  5737 ;;		On exit  : 0/0
  5738 ;;		Unchanged: 0/0
  5739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5740 ;;      Params:         0       0       0       0       0
  5741 ;;      Locals:         1       0       0       0       0
  5742 ;;      Temps:          0       0       0       0       0
  5743 ;;      Totals:         1       0       0       0       0
  5744 ;;Total ram usage:        1 bytes
  5745 ;; Hardware stack levels used:    1
  5746 ;; Hardware stack levels required when called:    5
  5747 ;; This function calls:
  5748 ;;		Nothing
  5749 ;; This function is called by:
  5750 ;;		_uart_recv_int_handler
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           	psect	text38
  5755  001A5E                     __ptext38:
  5756                           	opt stack 0
  5757  001A5E                     _ReadUSART:
  5758                           	opt stack 18
  5759                           
  5760                           ;incstack = 0
  5761  001A5E  0EF2               	movlw	242
  5762  001A60  164E               	andwf	_USART_Status,f,c
  5763  001A62  ACAB               	btfss	4011,6,c	;volatile
  5764  001A64  D003               	goto	i1l512
  5765  001A66  904E               	bcf	_USART_Status,0,c
  5766  001A68  B0AB               	btfsc	4011,0,c	;volatile
  5767  001A6A  804E               	bsf	_USART_Status,0,c
  5768  001A6C                     i1l512:
  5769  001A6C  B4AB               	btfsc	4011,2,c	;volatile
  5770  001A6E  844E               	bsf	_USART_Status,2,c
  5771  001A70  B2AB               	btfsc	4011,1,c	;volatile
  5772  001A72  864E               	bsf	_USART_Status,3,c
  5773  001A74  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5774  001A78  5001               	movf	ReadUSART@data,w,c
  5775  001A7A  0012               	return	
  5776  001A7C                     __end_of_ReadUSART:
  5777                           	opt stack 0
  5778                           pclatu	equ	0xFFB
  5779                           pclath	equ	0xFFA
  5780                           tblptru	equ	0xFF8
  5781                           tblptrh	equ	0xFF7
  5782                           tblptrl	equ	0xFF6
  5783                           tablat	equ	0xFF5
  5784                           prodh	equ	0xFF4
  5785                           prodl	equ	0xFF3
  5786                           intcon	equ	0xFF2
  5787                           intcon2	equ	0xFF1
  5788                           postinc0	equ	0xFEE
  5789                           fsr0h	equ	0xFEA
  5790                           fsr0l	equ	0xFE9
  5791                           wreg	equ	0xFE8
  5792                           indf1	equ	0xFE7
  5793                           fsr1h	equ	0xFE2
  5794                           fsr1l	equ	0xFE1
  5795                           bsr	equ	0xFE0
  5796                           indf2	equ	0xFDF
  5797                           postinc2	equ	0xFDE
  5798                           postdec2	equ	0xFDD
  5799                           fsr2h	equ	0xFDA
  5800                           fsr2l	equ	0xFD9
  5801                           status	equ	0xFD8
  5802                           
  5803 ;; *************** function _InterruptHandlerHigh *****************
  5804 ;; Defined at:
  5805 ;;		line 97 in file "../src/interrupts.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;		None
  5808 ;; Auto vars:     Size  Location     Type
  5809 ;;  pureADCValue    2   72[COMRAM] int 
  5810 ;; Return value:  Size  Location     Type
  5811 ;;		None               void
  5812 ;; Registers used:
  5813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5819 ;;      Params:         0       0       0       0       0
  5820 ;;      Locals:         2       0       0       0       0
  5821 ;;      Temps:          0      16       0       0       0
  5822 ;;      Totals:         2      16       0       0       0
  5823 ;;Total ram usage:       18 bytes
  5824 ;; Hardware stack levels used:    1
  5825 ;; Hardware stack levels required when called:    4
  5826 ;; This function calls:
  5827 ;;		_ReadADC
  5828 ;;		_SleepIfOkay
  5829 ;;		_i2c_int_handler
  5830 ;;		i2_ConvertADC
  5831 ;; This function is called by:
  5832 ;;		Interrupt level 2
  5833 ;; This function uses a non-reentrant model
  5834 ;;
  5835                           
  5836                           	psect	intcode
  5837  000008                     __pintcode:
  5838                           	opt stack 0
  5839  000008                     _InterruptHandlerHigh:
  5840                           	opt stack 16
  5841                           
  5842                           ;incstack = 0
  5843  000008  CFFA F098          	movff	pclath,??_InterruptHandlerHigh+2
  5844  00000C  CFFB F099          	movff	pclatu,??_InterruptHandlerHigh+3
  5845  000010  EF4D  F007         	goto	int_func
  5846                           pclatu	equ	0xFFB
  5847                           pclath	equ	0xFFA
  5848                           tblptru	equ	0xFF8
  5849                           tblptrh	equ	0xFF7
  5850                           tblptrl	equ	0xFF6
  5851                           tablat	equ	0xFF5
  5852                           prodh	equ	0xFF4
  5853                           prodl	equ	0xFF3
  5854                           intcon	equ	0xFF2
  5855                           intcon2	equ	0xFF1
  5856                           postinc0	equ	0xFEE
  5857                           fsr0h	equ	0xFEA
  5858                           fsr0l	equ	0xFE9
  5859                           wreg	equ	0xFE8
  5860                           indf1	equ	0xFE7
  5861                           fsr1h	equ	0xFE2
  5862                           fsr1l	equ	0xFE1
  5863                           bsr	equ	0xFE0
  5864                           indf2	equ	0xFDF
  5865                           postinc2	equ	0xFDE
  5866                           postdec2	equ	0xFDD
  5867                           fsr2h	equ	0xFDA
  5868                           fsr2l	equ	0xFD9
  5869                           status	equ	0xFD8
  5870                           
  5871                           	psect	intcode_body
  5872  000E9A                     __pintcode_body:
  5873                           	opt stack 16
  5874  000E9A                     int_func:
  5875                           	opt stack 16
  5876  000E9A  CFE9 F09A          	movff	fsr0l,??_InterruptHandlerHigh+4
  5877  000E9E  CFEA F09B          	movff	fsr0h,??_InterruptHandlerHigh+5
  5878  000EA2  CFE1 F09C          	movff	fsr1l,??_InterruptHandlerHigh+6
  5879  000EA6  CFE2 F09D          	movff	fsr1h,??_InterruptHandlerHigh+7
  5880  000EAA  CFD9 F09E          	movff	fsr2l,??_InterruptHandlerHigh+8
  5881  000EAE  CFDA F09F          	movff	fsr2h,??_InterruptHandlerHigh+9
  5882  000EB2  CFF3 F0A0          	movff	prodl,??_InterruptHandlerHigh+10
  5883  000EB6  CFF4 F0A1          	movff	prodh,??_InterruptHandlerHigh+11
  5884  000EBA  CFF6 F0A2          	movff	tblptrl,??_InterruptHandlerHigh+12
  5885  000EBE  CFF7 F0A3          	movff	tblptrh,??_InterruptHandlerHigh+13
  5886  000EC2  CFF8 F0A4          	movff	tblptru,??_InterruptHandlerHigh+14
  5887  000EC6  CFF5 F0A5          	movff	tablat,??_InterruptHandlerHigh+15
  5888                           
  5889                           ;interrupts.c: 102: if (PIR1bits.SSPIF) {
  5890  000ECA  A69E               	btfss	3998,3,c	;volatile
  5891  000ECC  D003               	goto	i2l2813
  5892                           
  5893                           ;interrupts.c: 104: PIR1bits.SSPIF = 0;
  5894  000ECE  969E               	bcf	3998,3,c	;volatile
  5895                           
  5896                           ;interrupts.c: 106: i2c_int_handler();
  5897  000ED0  EC5F  F000         	call	_i2c_int_handler	;wreg free
  5898  000ED4                     i2l2813:
  5899                           
  5900                           ;interrupts.c: 107: }
  5901                           ;interrupts.c: 110: if (INTCONbits.TMR0IF) {
  5902  000ED4  A4F2               	btfss	intcon,2,c	;volatile
  5903  000ED6  D003               	goto	i2l2819
  5904                           
  5905                           ;interrupts.c: 111: INTCONbits.TMR0IF = 0;
  5906  000ED8  94F2               	bcf	intcon,2,c	;volatile
  5907                           
  5908                           ;interrupts.c: 114: ConvertADC();
  5909  000EDA  EC8B  F00D         	call	i2_ConvertADC	;wreg free
  5910  000EDE                     i2l2819:
  5911                           
  5912                           ;interrupts.c: 115: }
  5913                           ;interrupts.c: 120: if(PIR1bits.ADIF == 1)
  5914  000EDE  AC9E               	btfss	3998,6,c	;volatile
  5915  000EE0  D017               	goto	i2l2827
  5916                           
  5917                           ;interrupts.c: 121: {
  5918                           ;interrupts.c: 124: PIR1bits.ADIF = 0;
  5919  000EE2  9C9E               	bcf	3998,6,c	;volatile
  5920                           
  5921                           ;interrupts.c: 125: int pureADCValue = ReadADC();
  5922  000EE4  EC7F  F00D         	call	_ReadADC	;wreg free
  5923  000EE8  C02D  F049         	movff	?_ReadADC,InterruptHandlerHigh@pureADCValue
  5924  000EEC  C02E  F04A         	movff	?_ReadADC+1,InterruptHandlerHigh@pureADCValue+1
  5925                           
  5926                           ;interrupts.c: 126: ADCValue = pureADCValue >> 2;
  5927  000EF0  C049  F096         	movff	InterruptHandlerHigh@pureADCValue,??_InterruptHandlerHigh
  5928  000EF4  C04A  F097         	movff	InterruptHandlerHigh@pureADCValue+1,??_InterruptHandlerHigh+1
  5929  000EF8  0100               	movlb	0	; () banked
  5930  000EFA  3597               	rlcf	(??_InterruptHandlerHigh+1)& (0+255),w,b
  5931  000EFC  3397               	rrcf	(??_InterruptHandlerHigh+1)& (0+255),f,b
  5932  000EFE  3396               	rrcf	??_InterruptHandlerHigh& (0+255),f,b
  5933  000F00  0100               	movlb	0	; () banked
  5934  000F02  3597               	rlcf	(??_InterruptHandlerHigh+1)& (0+255),w,b
  5935  000F04  3397               	rrcf	(??_InterruptHandlerHigh+1)& (0+255),f,b
  5936  000F06  3396               	rrcf	??_InterruptHandlerHigh& (0+255),f,b
  5937  000F08  C096  F0CD         	movff	??_InterruptHandlerHigh,_ADCValue
  5938  000F0C  C097  F0CE         	movff	??_InterruptHandlerHigh+1,_ADCValue+1
  5939  000F10                     i2l2827:
  5940                           
  5941                           ;interrupts.c: 129: }
  5942                           ;interrupts.c: 135: SleepIfOkay();
  5943  000F10  EC0C  F00B         	call	_SleepIfOkay	;wreg free
  5944  000F14  C0A5  FFF5         	movff	??_InterruptHandlerHigh+15,tablat
  5945  000F18  C0A4  FFF8         	movff	??_InterruptHandlerHigh+14,tblptru
  5946  000F1C  C0A3  FFF7         	movff	??_InterruptHandlerHigh+13,tblptrh
  5947  000F20  C0A2  FFF6         	movff	??_InterruptHandlerHigh+12,tblptrl
  5948  000F24  C0A1  FFF4         	movff	??_InterruptHandlerHigh+11,prodh
  5949  000F28  C0A0  FFF3         	movff	??_InterruptHandlerHigh+10,prodl
  5950  000F2C  C09F  FFDA         	movff	??_InterruptHandlerHigh+9,fsr2h
  5951  000F30  C09E  FFD9         	movff	??_InterruptHandlerHigh+8,fsr2l
  5952  000F34  C09D  FFE2         	movff	??_InterruptHandlerHigh+7,fsr1h
  5953  000F38  C09C  FFE1         	movff	??_InterruptHandlerHigh+6,fsr1l
  5954  000F3C  C09B  FFEA         	movff	??_InterruptHandlerHigh+5,fsr0h
  5955  000F40  C09A  FFE9         	movff	??_InterruptHandlerHigh+4,fsr0l
  5956  000F44  C099  FFFB         	movff	??_InterruptHandlerHigh+3,pclatu
  5957  000F48  C098  FFFA         	movff	??_InterruptHandlerHigh+2,pclath
  5958  000F4C  0011               	retfie		f
  5959  000F4E                     __end_of_InterruptHandlerHigh:
  5960                           	opt stack 0
  5961                           pclatu	equ	0xFFB
  5962                           pclath	equ	0xFFA
  5963                           tblptru	equ	0xFF8
  5964                           tblptrh	equ	0xFF7
  5965                           tblptrl	equ	0xFF6
  5966                           tablat	equ	0xFF5
  5967                           prodh	equ	0xFF4
  5968                           prodl	equ	0xFF3
  5969                           intcon	equ	0xFF2
  5970                           intcon2	equ	0xFF1
  5971                           postinc0	equ	0xFEE
  5972                           fsr0h	equ	0xFEA
  5973                           fsr0l	equ	0xFE9
  5974                           wreg	equ	0xFE8
  5975                           indf1	equ	0xFE7
  5976                           fsr1h	equ	0xFE2
  5977                           fsr1l	equ	0xFE1
  5978                           bsr	equ	0xFE0
  5979                           indf2	equ	0xFDF
  5980                           postinc2	equ	0xFDE
  5981                           postdec2	equ	0xFDD
  5982                           fsr2h	equ	0xFDA
  5983                           fsr2l	equ	0xFD9
  5984                           status	equ	0xFD8
  5985                           
  5986 ;; *************** function i2_ConvertADC *****************
  5987 ;; Defined at:
  5988 ;;		line 22 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcconv.c"
  5989 ;; Parameters:    Size  Location     Type
  5990 ;;		None
  5991 ;; Auto vars:     Size  Location     Type
  5992 ;;		None
  5993 ;; Return value:  Size  Location     Type
  5994 ;;		None               void
  5995 ;; Registers used:
  5996 ;;		None
  5997 ;; Tracked objects:
  5998 ;;		On entry : 0/0
  5999 ;;		On exit  : 0/0
  6000 ;;		Unchanged: 0/0
  6001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6002 ;;      Params:         0       0       0       0       0
  6003 ;;      Locals:         0       0       0       0       0
  6004 ;;      Temps:          0       0       0       0       0
  6005 ;;      Totals:         0       0       0       0       0
  6006 ;;Total ram usage:        0 bytes
  6007 ;; Hardware stack levels used:    1
  6008 ;; This function calls:
  6009 ;;		Nothing
  6010 ;; This function is called by:
  6011 ;;		_InterruptHandlerHigh
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           	psect	text40
  6016  001B16                     __ptext40:
  6017                           	opt stack 0
  6018  001B16                     i2_ConvertADC:
  6019                           	opt stack 19
  6020                           
  6021                           ;incstack = 0
  6022  001B16  82C2               	bsf	4034,1,c	;volatile
  6023  001B18  0012               	return	
  6024  001B1A                     __end_ofi2_ConvertADC:
  6025                           	opt stack 0
  6026                           pclatu	equ	0xFFB
  6027                           pclath	equ	0xFFA
  6028                           tblptru	equ	0xFF8
  6029                           tblptrh	equ	0xFF7
  6030                           tblptrl	equ	0xFF6
  6031                           tablat	equ	0xFF5
  6032                           prodh	equ	0xFF4
  6033                           prodl	equ	0xFF3
  6034                           intcon	equ	0xFF2
  6035                           intcon2	equ	0xFF1
  6036                           postinc0	equ	0xFEE
  6037                           fsr0h	equ	0xFEA
  6038                           fsr0l	equ	0xFE9
  6039                           wreg	equ	0xFE8
  6040                           indf1	equ	0xFE7
  6041                           fsr1h	equ	0xFE2
  6042                           fsr1l	equ	0xFE1
  6043                           bsr	equ	0xFE0
  6044                           indf2	equ	0xFDF
  6045                           postinc2	equ	0xFDE
  6046                           postdec2	equ	0xFDD
  6047                           fsr2h	equ	0xFDA
  6048                           fsr2l	equ	0xFD9
  6049                           status	equ	0xFD8
  6050                           
  6051 ;; *************** function _i2c_int_handler *****************
  6052 ;; Defined at:
  6053 ;;		line 100 in file "../src/my_i2c.c"
  6054 ;; Parameters:    Size  Location     Type
  6055 ;;		None
  6056 ;; Auto vars:     Size  Location     Type
  6057 ;;  msgbuffer      11    0[BANK0 ] unsigned char [11]
  6058 ;;  length          2   11[BANK0 ] int 
  6059 ;;  error_buf       3   13[BANK0 ] unsigned char [3]
  6060 ;;  data_read       1   21[BANK0 ] unsigned char 
  6061 ;;  msg_ready       1   20[BANK0 ] unsigned char 
  6062 ;;  msg_to_send     1   19[BANK0 ] unsigned char 
  6063 ;;  i2c_data        1   18[BANK0 ] unsigned char 
  6064 ;;  overrun_erro    1   17[BANK0 ] unsigned char 
  6065 ;;  data_written    1   16[BANK0 ] unsigned char 
  6066 ;; Return value:  Size  Location     Type
  6067 ;;		None               void
  6068 ;; Registers used:
  6069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6070 ;; Tracked objects:
  6071 ;;		On entry : 0/0
  6072 ;;		On exit  : 0/0
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6075 ;;      Params:         0       0       0       0       0
  6076 ;;      Locals:         0      22       0       0       0
  6077 ;;      Temps:          2       0       0       0       0
  6078 ;;      Totals:         2      22       0       0       0
  6079 ;;Total ram usage:       24 bytes
  6080 ;; Hardware stack levels used:    1
  6081 ;; Hardware stack levels required when called:    3
  6082 ;; This function calls:
  6083 ;;		_ToMainHigh_sendmsg
  6084 ;;		_handle_start
  6085 ;;		i2_returnADCValue
  6086 ;;		i2_start_i2c_slave_reply
  6087 ;; This function is called by:
  6088 ;;		_InterruptHandlerHigh
  6089 ;; This function uses a non-reentrant model
  6090 ;;
  6091                           
  6092                           	psect	text41
  6093  0000BE                     __ptext41:
  6094                           	opt stack 0
  6095  0000BE                     _i2c_int_handler:
  6096                           	opt stack 16
  6097                           
  6098                           ;my_i2c.c: 101: unsigned char i2c_data;
  6099                           ;my_i2c.c: 102: unsigned char data_read = 0;
  6100                           
  6101                           ;incstack = 0
  6102  0000BE  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6103  0000C0  0E00               	movlw	0
  6104  0000C2  0100               	movlb	0	; () banked
  6105  0000C4  0100               	movlb	0	; () banked
  6106  0000C6  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  6107  0000C8  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6108                           
  6109                           ;my_i2c.c: 103: unsigned char data_written = 0;
  6110  0000CA  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6111  0000CC  0E00               	movlw	0
  6112  0000CE  0100               	movlb	0	; () banked
  6113  0000D0  0100               	movlb	0	; () banked
  6114  0000D2  6F90               	movwf	i2c_int_handler@data_written& (0+255),b
  6115  0000D4  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6116                           
  6117                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  6118  0000D6  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6119  0000D8  0E00               	movlw	0
  6120  0000DA  0100               	movlb	0	; () banked
  6121  0000DC  0100               	movlb	0	; () banked
  6122  0000DE  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6123  0000E0  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6124                           
  6125                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  6126  0000E2  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6127  0000E4  0E00               	movlw	0
  6128  0000E6  0100               	movlb	0	; () banked
  6129  0000E8  0100               	movlb	0	; () banked
  6130  0000EA  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6131  0000EC  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6132                           
  6133                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  6134  0000EE  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6135  0000F0  0E00               	movlw	0
  6136  0000F2  0100               	movlb	0	; () banked
  6137  0000F4  0100               	movlb	0	; () banked
  6138  0000F6  6F91               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6139  0000F8  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6140                           
  6141                           ; BSR set to: 0
  6142                           ;my_i2c.c: 107: unsigned char error_buf[3];
  6143                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  6144  0000FA  ACC6               	btfss	4038,6,c	;volatile
  6145  0000FC  D027               	goto	i2l2255
  6146                           
  6147                           ; BSR set to: 0
  6148                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  6149  0000FE  9CC6               	bcf	4038,6,c	;volatile
  6150                           
  6151                           ; BSR set to: 0
  6152                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  6153  000100  0100               	movlb	0	; () banked
  6154  000102  EE20 F00C          	lfsr	2,12
  6155  000106  0100               	movlb	0	; () banked
  6156  000108  51CB               	movf	_ic_ptr& (0+255),w,b
  6157  00010A  26D9               	addwf	fsr2l,f,c
  6158  00010C  0100               	movlb	0	; () banked
  6159  00010E  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6160  000110  22DA               	addwfc	fsr2h,f,c
  6161  000112  0E05               	movlw	5
  6162  000114  6EDF               	movwf	indf2,c
  6163                           
  6164                           ; BSR set to: 0
  6165                           ;my_i2c.c: 116: overrun_error = 1;
  6166  000116  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6167  000118  0E01               	movlw	1
  6168  00011A  0100               	movlb	0	; () banked
  6169  00011C  0100               	movlb	0	; () banked
  6170  00011E  6F91               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6171  000120  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6172                           
  6173                           ; BSR set to: 0
  6174                           ;my_i2c.c: 117: ic_ptr->error_count++;
  6175  000122  0100               	movlb	0	; () banked
  6176  000124  EE20 F00E          	lfsr	2,14
  6177  000128  0100               	movlb	0	; () banked
  6178  00012A  51CB               	movf	_ic_ptr& (0+255),w,b
  6179  00012C  26D9               	addwf	fsr2l,f,c
  6180  00012E  0100               	movlb	0	; () banked
  6181  000130  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6182  000132  22DA               	addwfc	fsr2h,f,c
  6183  000134  2ADF               	incf	indf2,f,c
  6184                           
  6185                           ; BSR set to: 0
  6186                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  6187  000136  0100               	movlb	0	; () banked
  6188  000138  EE20 F00D          	lfsr	2,13
  6189  00013C  0100               	movlb	0	; () banked
  6190  00013E  51CB               	movf	_ic_ptr& (0+255),w,b
  6191  000140  26D9               	addwf	fsr2l,f,c
  6192  000142  0100               	movlb	0	; () banked
  6193  000144  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6194  000146  22DA               	addwfc	fsr2h,f,c
  6195  000148  0E04               	movlw	4
  6196  00014A  6EDF               	movwf	indf2,c
  6197  00014C                     i2l2255:
  6198                           
  6199                           ; BSR set to: 0
  6200                           ;my_i2c.c: 119: }
  6201                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  6202  00014C  A0C7               	btfss	4039,0,c	;volatile
  6203  00014E  D008               	goto	i2l2261
  6204                           
  6205                           ; BSR set to: 0
  6206                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  6207  000150  CFC9 F092          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6208                           
  6209                           ; BSR set to: 0
  6210                           ;my_i2c.c: 123: data_read = 1;
  6211  000154  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6212  000156  0E01               	movlw	1
  6213  000158  0100               	movlb	0	; () banked
  6214  00015A  0100               	movlb	0	; () banked
  6215  00015C  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  6216  00015E  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6217  000160                     i2l2261:
  6218                           
  6219                           ; BSR set to: 0
  6220                           ;my_i2c.c: 124: }
  6221                           ;my_i2c.c: 129: if (!overrun_error) {
  6222  000160  0100               	movlb	0	; () banked
  6223  000162  0100               	movlb	0	; () banked
  6224  000164  6791               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6225  000166  D1B8               	goto	i2l121
  6226  000168  D1A1               	goto	i2l2349
  6227  00016A                     i2l123:
  6228                           
  6229                           ; BSR set to: 0
  6230                           ;my_i2c.c: 132: {
  6231                           ;my_i2c.c: 134: if (SSPSTATbits.S == 1) {
  6232  00016A  A6C7               	btfss	4039,3,c	;volatile
  6233  00016C  D1B5               	goto	i2l121
  6234                           
  6235                           ; BSR set to: 0
  6236                           ;my_i2c.c: 135: handle_start(data_read);
  6237  00016E  0100               	movlb	0	; () banked
  6238  000170  0100               	movlb	0	; () banked
  6239  000172  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6240  000174  ECE9  F006         	call	_handle_start
  6241                           
  6242                           ;my_i2c.c: 137: if (ic_ptr->status == 0x8) {
  6243  000178  0100               	movlb	0	; () banked
  6244  00017A  EE20 F00C          	lfsr	2,12
  6245  00017E  0100               	movlb	0	; () banked
  6246  000180  51CB               	movf	_ic_ptr& (0+255),w,b
  6247  000182  26D9               	addwf	fsr2l,f,c
  6248  000184  0100               	movlb	0	; () banked
  6249  000186  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6250  000188  22DA               	addwfc	fsr2h,f,c
  6251  00018A  0E08               	movlw	8
  6252  00018C  62DF               	cpfseq	indf2,c
  6253  00018E  D1A4               	goto	i2l121
  6254                           
  6255                           ; BSR set to: 0
  6256                           ;my_i2c.c: 138: data_read = 0;
  6257  000190  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6258  000192  0E00               	movlw	0
  6259  000194  0100               	movlb	0	; () banked
  6260  000196  0100               	movlb	0	; () banked
  6261  000198  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  6262  00019A  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6263                           
  6264                           ;my_i2c.c: 139: msg_to_send = 1;
  6265  00019C  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6266  00019E  0E01               	movlw	1
  6267  0001A0  0100               	movlb	0	; () banked
  6268  0001A2  0100               	movlb	0	; () banked
  6269  0001A4  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6270  0001A6  D175               	goto	L8
  6271  0001A8                     i2l127:
  6272                           
  6273                           ; BSR set to: 0
  6274                           ;my_i2c.c: 145: {
  6275                           ;my_i2c.c: 147: if (SSPSTATbits.P == 1) {
  6276  0001A8  A8C7               	btfss	4039,4,c	;volatile
  6277  0001AA  D02E               	goto	i2l2281
  6278                           
  6279                           ; BSR set to: 0
  6280                           ;my_i2c.c: 150: ic_ptr->event_count++;
  6281  0001AC  0100               	movlb	0	; () banked
  6282  0001AE  EE20 F00B          	lfsr	2,11
  6283  0001B2  0100               	movlb	0	; () banked
  6284  0001B4  51CB               	movf	_ic_ptr& (0+255),w,b
  6285  0001B6  26D9               	addwf	fsr2l,f,c
  6286  0001B8  0100               	movlb	0	; () banked
  6287  0001BA  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6288  0001BC  22DA               	addwfc	fsr2h,f,c
  6289  0001BE  2ADF               	incf	indf2,f,c
  6290                           
  6291                           ; BSR set to: 0
  6292                           ;my_i2c.c: 151: if (data_read) {
  6293  0001C0  0100               	movlb	0	; () banked
  6294  0001C2  0100               	movlb	0	; () banked
  6295  0001C4  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6296  0001C6  B4D8               	btfsc	status,2,c
  6297  0001C8  D166               	goto	L10
  6298                           
  6299                           ; BSR set to: 0
  6300                           ;my_i2c.c: 152: if (SSPSTATbits.D_A == 0) {
  6301  0001CA  BAC7               	btfsc	4039,5,c	;volatile
  6302  0001CC  D007               	goto	i2l2279
  6303                           
  6304                           ; BSR set to: 0
  6305                           ;my_i2c.c: 153: msg_ready = 1;
  6306  0001CE  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6307  0001D0  0E01               	movlw	1
  6308  0001D2  0100               	movlb	0	; () banked
  6309  0001D4  0100               	movlb	0	; () banked
  6310  0001D6  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6311  0001D8  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6312                           
  6313                           ;my_i2c.c: 154: } else {
  6314  0001DA  D15D               	goto	L10
  6315  0001DC                     i2l2279:
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;my_i2c.c: 155: ic_ptr->error_count++;
  6319  0001DC  0100               	movlb	0	; () banked
  6320  0001DE  EE20 F00E          	lfsr	2,14
  6321  0001E2  0100               	movlb	0	; () banked
  6322  0001E4  51CB               	movf	_ic_ptr& (0+255),w,b
  6323  0001E6  26D9               	addwf	fsr2l,f,c
  6324  0001E8  0100               	movlb	0	; () banked
  6325  0001EA  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6326  0001EC  22DA               	addwfc	fsr2h,f,c
  6327  0001EE  2ADF               	incf	indf2,f,c
  6328                           
  6329                           ;my_i2c.c: 156: ic_ptr->error_code = 0x6;
  6330  0001F0  0100               	movlb	0	; () banked
  6331  0001F2  EE20 F00D          	lfsr	2,13
  6332  0001F6  0100               	movlb	0	; () banked
  6333  0001F8  51CB               	movf	_ic_ptr& (0+255),w,b
  6334  0001FA  26D9               	addwf	fsr2l,f,c
  6335  0001FC  0100               	movlb	0	; () banked
  6336  0001FE  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6337  000200  22DA               	addwfc	fsr2h,f,c
  6338  000202  0E06               	movlw	6
  6339  000204  6EDF               	movwf	indf2,c
  6340                           
  6341                           ; BSR set to: 0
  6342  000206  D147               	goto	L10
  6343  000208                     i2l2281:
  6344                           
  6345                           ; BSR set to: 0
  6346  000208  0100               	movlb	0	; () banked
  6347  00020A  0100               	movlb	0	; () banked
  6348  00020C  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6349  00020E  B4D8               	btfsc	status,2,c
  6350  000210  D163               	goto	i2l121
  6351                           
  6352                           ; BSR set to: 0
  6353                           ;my_i2c.c: 161: ic_ptr->event_count++;
  6354  000212  0100               	movlb	0	; () banked
  6355  000214  EE20 F00B          	lfsr	2,11
  6356  000218  0100               	movlb	0	; () banked
  6357  00021A  51CB               	movf	_ic_ptr& (0+255),w,b
  6358  00021C  26D9               	addwf	fsr2l,f,c
  6359  00021E  0100               	movlb	0	; () banked
  6360  000220  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6361  000222  22DA               	addwfc	fsr2h,f,c
  6362  000224  2ADF               	incf	indf2,f,c
  6363                           
  6364                           ; BSR set to: 0
  6365                           ;my_i2c.c: 162: if (SSPSTATbits.D_A == 0) {
  6366  000226  BAC7               	btfsc	4039,5,c	;volatile
  6367  000228  D019               	goto	i2l2297
  6368                           
  6369                           ; BSR set to: 0
  6370                           ;my_i2c.c: 163: if (SSPSTATbits.R_W == 0) {
  6371  00022A  B4C7               	btfsc	4039,2,c	;volatile
  6372  00022C  D00B               	goto	i2l2291
  6373                           
  6374                           ; BSR set to: 0
  6375                           ;my_i2c.c: 164: ic_ptr->status = 0x7;
  6376  00022E  0100               	movlb	0	; () banked
  6377  000230  EE20 F00C          	lfsr	2,12
  6378  000234  0100               	movlb	0	; () banked
  6379  000236  51CB               	movf	_ic_ptr& (0+255),w,b
  6380  000238  26D9               	addwf	fsr2l,f,c
  6381  00023A  0100               	movlb	0	; () banked
  6382  00023C  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6383  00023E  22DA               	addwfc	fsr2h,f,c
  6384  000240  0E07               	movlw	7
  6385  000242  D071               	goto	L7
  6386  000244                     i2l2291:
  6387                           
  6388                           ; BSR set to: 0
  6389                           ;my_i2c.c: 166: ic_ptr->status = 0x8;
  6390  000244  0100               	movlb	0	; () banked
  6391  000246  EE20 F00C          	lfsr	2,12
  6392  00024A  0100               	movlb	0	; () banked
  6393  00024C  51CB               	movf	_ic_ptr& (0+255),w,b
  6394  00024E  26D9               	addwf	fsr2l,f,c
  6395  000250  0100               	movlb	0	; () banked
  6396  000252  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6397  000254  22DA               	addwfc	fsr2h,f,c
  6398  000256  0E08               	movlw	8
  6399  000258  6EDF               	movwf	indf2,c
  6400  00025A  D110               	goto	L11
  6401  00025C                     i2l2297:
  6402                           
  6403                           ; BSR set to: 0
  6404                           ;my_i2c.c: 172: ic_ptr->error_count++;
  6405  00025C  0100               	movlb	0	; () banked
  6406  00025E  EE20 F00E          	lfsr	2,14
  6407  000262  0100               	movlb	0	; () banked
  6408  000264  51CB               	movf	_ic_ptr& (0+255),w,b
  6409  000266  26D9               	addwf	fsr2l,f,c
  6410  000268  0100               	movlb	0	; () banked
  6411  00026A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6412  00026C  22DA               	addwfc	fsr2h,f,c
  6413  00026E  2ADF               	incf	indf2,f,c
  6414                           
  6415                           ;my_i2c.c: 173: ic_ptr->status = 0x5;
  6416  000270  0100               	movlb	0	; () banked
  6417  000272  EE20 F00C          	lfsr	2,12
  6418  000276  0100               	movlb	0	; () banked
  6419  000278  51CB               	movf	_ic_ptr& (0+255),w,b
  6420  00027A  26D9               	addwf	fsr2l,f,c
  6421  00027C  0100               	movlb	0	; () banked
  6422  00027E  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6423  000280  22DA               	addwfc	fsr2h,f,c
  6424  000282  0E05               	movlw	5
  6425  000284  6EDF               	movwf	indf2,c
  6426                           
  6427                           ;my_i2c.c: 174: ic_ptr->error_code = 0x6;
  6428  000286  0100               	movlb	0	; () banked
  6429  000288  EE20 F00D          	lfsr	2,13
  6430  00028C  0100               	movlb	0	; () banked
  6431  00028E  51CB               	movf	_ic_ptr& (0+255),w,b
  6432  000290  26D9               	addwf	fsr2l,f,c
  6433  000292  0100               	movlb	0	; () banked
  6434  000294  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6435  000296  22DA               	addwfc	fsr2h,f,c
  6436  000298  0E06               	movlw	6
  6437  00029A  D045               	goto	L7
  6438  00029C                     i2l2299:
  6439                           
  6440                           ; BSR set to: 0
  6441                           ;my_i2c.c: 180: {
  6442                           ;my_i2c.c: 181: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6443  00029C  0100               	movlb	0	; () banked
  6444  00029E  EE20 F01A          	lfsr	2,26
  6445  0002A2  0100               	movlb	0	; () banked
  6446  0002A4  51CB               	movf	_ic_ptr& (0+255),w,b
  6447  0002A6  26D9               	addwf	fsr2l,f,c
  6448  0002A8  0100               	movlb	0	; () banked
  6449  0002AA  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6450  0002AC  22DA               	addwfc	fsr2h,f,c
  6451  0002AE  50DF               	movf	indf2,w,c
  6452  0002B0  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6453  0002B2  0100               	movlb	0	; () banked
  6454  0002B4  EE20 F019          	lfsr	2,25
  6455  0002B8  0100               	movlb	0	; () banked
  6456  0002BA  51CB               	movf	_ic_ptr& (0+255),w,b
  6457  0002BC  26D9               	addwf	fsr2l,f,c
  6458  0002BE  0100               	movlb	0	; () banked
  6459  0002C0  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6460  0002C2  22DA               	addwfc	fsr2h,f,c
  6461  0002C4  50DF               	movf	indf2,w,c
  6462  0002C6  5C47               	subwf	??_i2c_int_handler,w,c
  6463  0002C8  B0D8               	btfsc	status,0,c
  6464  0002CA  D0E5               	goto	L10
  6465                           
  6466                           ; BSR set to: 0
  6467                           ;my_i2c.c: 182: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6468  0002CC  0100               	movlb	0	; () banked
  6469  0002CE  EE20 F01A          	lfsr	2,26
  6470  0002D2  0100               	movlb	0	; () banked
  6471  0002D4  51CB               	movf	_ic_ptr& (0+255),w,b
  6472  0002D6  26D9               	addwf	fsr2l,f,c
  6473  0002D8  0100               	movlb	0	; () banked
  6474  0002DA  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6475  0002DC  22DA               	addwfc	fsr2h,f,c
  6476  0002DE  50DF               	movf	indf2,w,c
  6477  0002E0  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6478  0002E2  5047               	movf	??_i2c_int_handler,w,c
  6479  0002E4  0D01               	mullw	1
  6480  0002E6  0E0F               	movlw	15
  6481  0002E8  26F3               	addwf	prodl,f,c
  6482  0002EA  0E00               	movlw	0
  6483  0002EC  22F4               	addwfc	prodh,f,c
  6484  0002EE  50F3               	movf	prodl,w,c
  6485  0002F0  0100               	movlb	0	; () banked
  6486  0002F2  0100               	movlb	0	; () banked
  6487  0002F4  25CB               	addwf	_ic_ptr& (0+255),w,b
  6488  0002F6  6ED9               	movwf	fsr2l,c
  6489  0002F8  50F4               	movf	prodh,w,c
  6490  0002FA  0100               	movlb	0	; () banked
  6491  0002FC  0100               	movlb	0	; () banked
  6492  0002FE  21CC               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6493  000300  6EDA               	movwf	fsr2h,c
  6494  000302  50DF               	movf	indf2,w,c
  6495  000304  6EC9               	movwf	4041,c	;volatile
  6496                           
  6497                           ; BSR set to: 0
  6498                           ;my_i2c.c: 183: ic_ptr->outbufind++;
  6499  000306  0100               	movlb	0	; () banked
  6500  000308  EE20 F01A          	lfsr	2,26
  6501  00030C  0100               	movlb	0	; () banked
  6502  00030E  51CB               	movf	_ic_ptr& (0+255),w,b
  6503  000310  26D9               	addwf	fsr2l,f,c
  6504  000312  0100               	movlb	0	; () banked
  6505  000314  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6506  000316  22DA               	addwfc	fsr2h,f,c
  6507  000318  2ADF               	incf	indf2,f,c
  6508                           
  6509                           ; BSR set to: 0
  6510                           ;my_i2c.c: 184: data_written = 1;
  6511  00031A  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6512  00031C  0E01               	movlw	1
  6513  00031E  0100               	movlb	0	; () banked
  6514  000320  0100               	movlb	0	; () banked
  6515  000322  6F90               	movwf	i2c_int_handler@data_written& (0+255),b
  6516  000324  D0B6               	goto	L8
  6517  000326                     L7:
  6518  000326  6EDF               	movwf	indf2,c
  6519  000328  D0D7               	goto	i2l121
  6520  00032A                     i2l141:
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;my_i2c.c: 192: {
  6524                           ;my_i2c.c: 194: if (SSPSTATbits.P == 1) {
  6525  00032A  A8C7               	btfss	4039,4,c	;volatile
  6526  00032C  D05E               	goto	i2l2327
  6527                           
  6528                           ; BSR set to: 0
  6529                           ;my_i2c.c: 196: ic_ptr->event_count++;
  6530  00032E  0100               	movlb	0	; () banked
  6531  000330  EE20 F00B          	lfsr	2,11
  6532  000334  0100               	movlb	0	; () banked
  6533  000336  51CB               	movf	_ic_ptr& (0+255),w,b
  6534  000338  26D9               	addwf	fsr2l,f,c
  6535  00033A  0100               	movlb	0	; () banked
  6536  00033C  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6537  00033E  22DA               	addwfc	fsr2h,f,c
  6538  000340  2ADF               	incf	indf2,f,c
  6539                           
  6540                           ; BSR set to: 0
  6541                           ;my_i2c.c: 197: if (data_read) {
  6542  000342  0100               	movlb	0	; () banked
  6543  000344  0100               	movlb	0	; () banked
  6544  000346  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6545  000348  B4D8               	btfsc	status,2,c
  6546  00034A  D048               	goto	i2l2323
  6547                           
  6548                           ; BSR set to: 0
  6549                           ;my_i2c.c: 198: if (SSPSTATbits.D_A == 1) {
  6550  00034C  AAC7               	btfss	4039,5,c	;volatile
  6551  00034E  D025               	goto	i2l2321
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;my_i2c.c: 199: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6555  000350  0100               	movlb	0	; () banked
  6556  000352  EE20 F00A          	lfsr	2,10
  6557  000356  0100               	movlb	0	; () banked
  6558  000358  51CB               	movf	_ic_ptr& (0+255),w,b
  6559  00035A  26D9               	addwf	fsr2l,f,c
  6560  00035C  0100               	movlb	0	; () banked
  6561  00035E  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6562  000360  22DA               	addwfc	fsr2h,f,c
  6563  000362  50DF               	movf	indf2,w,c
  6564  000364  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6565  000366  5047               	movf	??_i2c_int_handler,w,c
  6566  000368  0D01               	mullw	1
  6567  00036A  50F3               	movf	prodl,w,c
  6568  00036C  0100               	movlb	0	; () banked
  6569  00036E  0100               	movlb	0	; () banked
  6570  000370  25CB               	addwf	_ic_ptr& (0+255),w,b
  6571  000372  6ED9               	movwf	fsr2l,c
  6572  000374  50F4               	movf	prodh,w,c
  6573  000376  0100               	movlb	0	; () banked
  6574  000378  0100               	movlb	0	; () banked
  6575  00037A  21CC               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6576  00037C  6EDA               	movwf	fsr2h,c
  6577  00037E  0100               	movlb	0	; () banked
  6578  000380  C092  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6579                           
  6580                           ; BSR set to: 0
  6581                           ;my_i2c.c: 200: ic_ptr->buflen++;
  6582  000384  0100               	movlb	0	; () banked
  6583  000386  EE20 F00A          	lfsr	2,10
  6584  00038A  0100               	movlb	0	; () banked
  6585  00038C  51CB               	movf	_ic_ptr& (0+255),w,b
  6586  00038E  26D9               	addwf	fsr2l,f,c
  6587  000390  0100               	movlb	0	; () banked
  6588  000392  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6589  000394  22DA               	addwfc	fsr2h,f,c
  6590  000396  2ADF               	incf	indf2,f,c
  6591  000398  D021               	goto	i2l2323
  6592  00039A                     i2l2321:
  6593                           
  6594                           ; BSR set to: 0
  6595                           ;my_i2c.c: 203: ic_ptr->error_count++;
  6596  00039A  0100               	movlb	0	; () banked
  6597  00039C  EE20 F00E          	lfsr	2,14
  6598  0003A0  0100               	movlb	0	; () banked
  6599  0003A2  51CB               	movf	_ic_ptr& (0+255),w,b
  6600  0003A4  26D9               	addwf	fsr2l,f,c
  6601  0003A6  0100               	movlb	0	; () banked
  6602  0003A8  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6603  0003AA  22DA               	addwfc	fsr2h,f,c
  6604  0003AC  2ADF               	incf	indf2,f,c
  6605                           
  6606                           ;my_i2c.c: 204: ic_ptr->error_code = 0x6;
  6607  0003AE  0100               	movlb	0	; () banked
  6608  0003B0  EE20 F00D          	lfsr	2,13
  6609  0003B4  0100               	movlb	0	; () banked
  6610  0003B6  51CB               	movf	_ic_ptr& (0+255),w,b
  6611  0003B8  26D9               	addwf	fsr2l,f,c
  6612  0003BA  0100               	movlb	0	; () banked
  6613  0003BC  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6614  0003BE  22DA               	addwfc	fsr2h,f,c
  6615  0003C0  0E06               	movlw	6
  6616  0003C2  6EDF               	movwf	indf2,c
  6617                           
  6618                           ;my_i2c.c: 205: ic_ptr->status = 0x5;
  6619  0003C4  0100               	movlb	0	; () banked
  6620  0003C6  EE20 F00C          	lfsr	2,12
  6621  0003CA  0100               	movlb	0	; () banked
  6622  0003CC  51CB               	movf	_ic_ptr& (0+255),w,b
  6623  0003CE  26D9               	addwf	fsr2l,f,c
  6624  0003D0  0100               	movlb	0	; () banked
  6625  0003D2  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6626  0003D4  22DA               	addwfc	fsr2h,f,c
  6627  0003D6  0E05               	movlw	5
  6628  0003D8  6EDF               	movwf	indf2,c
  6629  0003DA  D05D               	goto	L10
  6630  0003DC                     i2l2323:
  6631                           
  6632                           ; BSR set to: 0
  6633                           ;my_i2c.c: 208: msg_ready = 1;
  6634  0003DC  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6635  0003DE  0E01               	movlw	1
  6636  0003E0  0100               	movlb	0	; () banked
  6637  0003E2  0100               	movlb	0	; () banked
  6638  0003E4  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6639  0003E6  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6640                           
  6641                           ; BSR set to: 0
  6642  0003E8  D056               	goto	L10
  6643  0003EA                     i2l2327:
  6644                           
  6645                           ; BSR set to: 0
  6646  0003EA  0100               	movlb	0	; () banked
  6647  0003EC  0100               	movlb	0	; () banked
  6648  0003EE  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6649  0003F0  B4D8               	btfsc	status,2,c
  6650  0003F2  D072               	goto	i2l121
  6651                           
  6652                           ; BSR set to: 0
  6653                           ;my_i2c.c: 212: ic_ptr->event_count++;
  6654  0003F4  0100               	movlb	0	; () banked
  6655  0003F6  EE20 F00B          	lfsr	2,11
  6656  0003FA  0100               	movlb	0	; () banked
  6657  0003FC  51CB               	movf	_ic_ptr& (0+255),w,b
  6658  0003FE  26D9               	addwf	fsr2l,f,c
  6659  000400  0100               	movlb	0	; () banked
  6660  000402  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6661  000404  22DA               	addwfc	fsr2h,f,c
  6662  000406  2ADF               	incf	indf2,f,c
  6663                           
  6664                           ; BSR set to: 0
  6665                           ;my_i2c.c: 213: if (SSPSTATbits.D_A == 1) {
  6666  000408  AAC7               	btfss	4039,5,c	;volatile
  6667  00040A  D025               	goto	i2l149
  6668                           
  6669                           ; BSR set to: 0
  6670                           ;my_i2c.c: 214: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6671  00040C  0100               	movlb	0	; () banked
  6672  00040E  EE20 F00A          	lfsr	2,10
  6673  000412  0100               	movlb	0	; () banked
  6674  000414  51CB               	movf	_ic_ptr& (0+255),w,b
  6675  000416  26D9               	addwf	fsr2l,f,c
  6676  000418  0100               	movlb	0	; () banked
  6677  00041A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6678  00041C  22DA               	addwfc	fsr2h,f,c
  6679  00041E  50DF               	movf	indf2,w,c
  6680  000420  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6681  000422  5047               	movf	??_i2c_int_handler,w,c
  6682  000424  0D01               	mullw	1
  6683  000426  50F3               	movf	prodl,w,c
  6684  000428  0100               	movlb	0	; () banked
  6685  00042A  0100               	movlb	0	; () banked
  6686  00042C  25CB               	addwf	_ic_ptr& (0+255),w,b
  6687  00042E  6ED9               	movwf	fsr2l,c
  6688  000430  50F4               	movf	prodh,w,c
  6689  000432  0100               	movlb	0	; () banked
  6690  000434  0100               	movlb	0	; () banked
  6691  000436  21CC               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6692  000438  6EDA               	movwf	fsr2h,c
  6693  00043A  0100               	movlb	0	; () banked
  6694  00043C  C092  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6695                           
  6696                           ; BSR set to: 0
  6697                           ;my_i2c.c: 215: ic_ptr->buflen++;
  6698  000440  0100               	movlb	0	; () banked
  6699  000442  EE20 F00A          	lfsr	2,10
  6700  000446  0100               	movlb	0	; () banked
  6701  000448  51CB               	movf	_ic_ptr& (0+255),w,b
  6702  00044A  26D9               	addwf	fsr2l,f,c
  6703  00044C  0100               	movlb	0	; () banked
  6704  00044E  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6705  000450  22DA               	addwfc	fsr2h,f,c
  6706  000452  2ADF               	incf	indf2,f,c
  6707                           
  6708                           ;my_i2c.c: 216: } else {
  6709  000454  D041               	goto	i2l121
  6710  000456                     i2l149:
  6711                           
  6712                           ; BSR set to: 0
  6713                           ;my_i2c.c: 217: if (SSPSTATbits.R_W == 1) {
  6714  000456  A4C7               	btfss	4039,2,c	;volatile
  6715  000458  D6C1               	goto	i2l2279
  6716                           
  6717                           ; BSR set to: 0
  6718                           ;my_i2c.c: 218: ic_ptr->status = 0x8;
  6719  00045A  0100               	movlb	0	; () banked
  6720  00045C  EE20 F00C          	lfsr	2,12
  6721  000460  0100               	movlb	0	; () banked
  6722  000462  51CB               	movf	_ic_ptr& (0+255),w,b
  6723  000464  26D9               	addwf	fsr2l,f,c
  6724  000466  0100               	movlb	0	; () banked
  6725  000468  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6726  00046A  22DA               	addwfc	fsr2h,f,c
  6727  00046C  0E08               	movlw	8
  6728  00046E  6EDF               	movwf	indf2,c
  6729                           
  6730                           ; BSR set to: 0
  6731                           ;my_i2c.c: 219: msg_ready = 1;
  6732  000470  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6733  000472  0E01               	movlw	1
  6734  000474  0100               	movlb	0	; () banked
  6735  000476  0100               	movlb	0	; () banked
  6736  000478  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6737  00047A  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6738  00047C                     L11:
  6739                           
  6740                           ; BSR set to: 0
  6741                           ;my_i2c.c: 220: msg_to_send = 1;
  6742  00047C  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6743  00047E  0E01               	movlw	1
  6744  000480  0100               	movlb	0	; () banked
  6745  000482  0100               	movlb	0	; () banked
  6746  000484  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6747  000486  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6748                           
  6749                           ; BSR set to: 0
  6750                           ;my_i2c.c: 222: data_read = 0;
  6751  000488  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6752  00048A  0E00               	movlw	0
  6753  00048C  0100               	movlb	0	; () banked
  6754  00048E  0100               	movlb	0	; () banked
  6755  000490  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  6756  000492                     L8:
  6757  000492  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6758                           
  6759                           ;my_i2c.c: 223: } else {
  6760  000494  D021               	goto	i2l121
  6761  000496                     L10:
  6762                           
  6763                           ;my_i2c.c: 226: ic_ptr->status = 0x5;
  6764  000496  0100               	movlb	0	; () banked
  6765  000498  EE20 F00C          	lfsr	2,12
  6766  00049C  0100               	movlb	0	; () banked
  6767  00049E  51CB               	movf	_ic_ptr& (0+255),w,b
  6768  0004A0  26D9               	addwf	fsr2l,f,c
  6769  0004A2  0100               	movlb	0	; () banked
  6770  0004A4  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6771  0004A6  22DA               	addwfc	fsr2h,f,c
  6772  0004A8  0E05               	movlw	5
  6773  0004AA  D73D               	goto	L7
  6774  0004AC                     i2l2349:
  6775                           
  6776                           ; BSR set to: 0
  6777  0004AC  0100               	movlb	0	; () banked
  6778  0004AE  EE20 F00C          	lfsr	2,12
  6779  0004B2  0100               	movlb	0	; () banked
  6780  0004B4  51CB               	movf	_ic_ptr& (0+255),w,b
  6781  0004B6  26D9               	addwf	fsr2l,f,c
  6782  0004B8  0100               	movlb	0	; () banked
  6783  0004BA  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6784  0004BC  22DA               	addwfc	fsr2h,f,c
  6785  0004BE  50DF               	movf	indf2,w,c
  6786                           
  6787                           ; Switch size 1, requested type "space"
  6788                           ; Number of cases is 4, Range of values is 5 to 8
  6789                           ; switch strategies available:
  6790                           ; Name         Instructions Cycles
  6791                           ; simple_byte           13     7 (average)
  6792                           ;	Chosen strategy is simple_byte
  6793  0004C0  0A05               	xorlw	5	; case 5
  6794  0004C2  B4D8               	btfsc	status,2,c
  6795  0004C4  D652               	goto	i2l123
  6796  0004C6  0A03               	xorlw	3	; case 6
  6797  0004C8  B4D8               	btfsc	status,2,c
  6798  0004CA  D66E               	goto	i2l127
  6799  0004CC  0A01               	xorlw	1	; case 7
  6800  0004CE  B4D8               	btfsc	status,2,c
  6801  0004D0  D72C               	goto	i2l141
  6802  0004D2  0A0F               	xorlw	15	; case 8
  6803  0004D4  B4D8               	btfsc	status,2,c
  6804  0004D6  D6E2               	goto	i2l2299
  6805  0004D8                     i2l121:
  6806                           
  6807                           ; BSR set to: 0
  6808                           ;my_i2c.c: 233: }
  6809                           ;my_i2c.c: 236: if (data_read || data_written) {
  6810  0004D8  0100               	movlb	0	; () banked
  6811  0004DA  0100               	movlb	0	; () banked
  6812  0004DC  6795               	tstfsz	i2c_int_handler@data_read& (0+255),b
  6813  0004DE  D005               	goto	i2l155
  6814                           
  6815                           ; BSR set to: 0
  6816  0004E0  0100               	movlb	0	; () banked
  6817  0004E2  0100               	movlb	0	; () banked
  6818  0004E4  5190               	movf	i2c_int_handler@data_written& (0+255),w,b
  6819  0004E6  B4D8               	btfsc	status,2,c
  6820  0004E8  D002               	goto	i2l2355
  6821  0004EA                     i2l155:
  6822                           
  6823                           ; BSR set to: 0
  6824                           ;my_i2c.c: 238: if (SSPCON1bits.CKP == 0) {
  6825  0004EA  A8C6               	btfss	4038,4,c	;volatile
  6826                           
  6827                           ; BSR set to: 0
  6828                           ;my_i2c.c: 239: SSPCON1bits.CKP = 1;
  6829  0004EC  88C6               	bsf	4038,4,c	;volatile
  6830  0004EE                     i2l2355:
  6831                           
  6832                           ; BSR set to: 0
  6833                           ;my_i2c.c: 240: }
  6834                           ;my_i2c.c: 241: }
  6835                           ;my_i2c.c: 244: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  6836  0004EE  0100               	movlb	0	; () banked
  6837  0004F0  EE20 F00A          	lfsr	2,10
  6838  0004F4  0100               	movlb	0	; () banked
  6839  0004F6  51CB               	movf	_ic_ptr& (0+255),w,b
  6840  0004F8  26D9               	addwf	fsr2l,f,c
  6841  0004FA  0100               	movlb	0	; () banked
  6842  0004FC  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6843  0004FE  22DA               	addwfc	fsr2h,f,c
  6844  000500  0E08               	movlw	8
  6845  000502  64DF               	cpfsgt	indf2,c
  6846  000504  D024               	goto	i2l2361
  6847                           
  6848                           ; BSR set to: 0
  6849  000506  0100               	movlb	0	; () banked
  6850  000508  0100               	movlb	0	; () banked
  6851  00050A  6794               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  6852  00050C  D020               	goto	i2l2361
  6853                           
  6854                           ; BSR set to: 0
  6855                           ;my_i2c.c: 245: ic_ptr->status = 0x5;
  6856  00050E  0100               	movlb	0	; () banked
  6857  000510  EE20 F00C          	lfsr	2,12
  6858  000514  0100               	movlb	0	; () banked
  6859  000516  51CB               	movf	_ic_ptr& (0+255),w,b
  6860  000518  26D9               	addwf	fsr2l,f,c
  6861  00051A  0100               	movlb	0	; () banked
  6862  00051C  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6863  00051E  22DA               	addwfc	fsr2h,f,c
  6864  000520  0E05               	movlw	5
  6865  000522  6EDF               	movwf	indf2,c
  6866                           
  6867                           ;my_i2c.c: 246: ic_ptr->error_count++;
  6868  000524  0100               	movlb	0	; () banked
  6869  000526  EE20 F00E          	lfsr	2,14
  6870  00052A  0100               	movlb	0	; () banked
  6871  00052C  51CB               	movf	_ic_ptr& (0+255),w,b
  6872  00052E  26D9               	addwf	fsr2l,f,c
  6873  000530  0100               	movlb	0	; () banked
  6874  000532  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6875  000534  22DA               	addwfc	fsr2h,f,c
  6876  000536  2ADF               	incf	indf2,f,c
  6877                           
  6878                           ;my_i2c.c: 247: ic_ptr->error_code = 0x7;
  6879  000538  0100               	movlb	0	; () banked
  6880  00053A  EE20 F00D          	lfsr	2,13
  6881  00053E  0100               	movlb	0	; () banked
  6882  000540  51CB               	movf	_ic_ptr& (0+255),w,b
  6883  000542  26D9               	addwf	fsr2l,f,c
  6884  000544  0100               	movlb	0	; () banked
  6885  000546  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6886  000548  22DA               	addwfc	fsr2h,f,c
  6887  00054A  0E07               	movlw	7
  6888  00054C  6EDF               	movwf	indf2,c
  6889  00054E                     i2l2361:
  6890                           
  6891                           ; BSR set to: 0
  6892                           ;my_i2c.c: 248: }
  6893                           ;my_i2c.c: 250: if (msg_ready) {
  6894  00054E  0100               	movlb	0	; () banked
  6895  000550  0100               	movlb	0	; () banked
  6896  000552  5194               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  6897  000554  B4D8               	btfsc	status,2,c
  6898  000556  D03E               	goto	i2l2369
  6899                           
  6900                           ; BSR set to: 0
  6901                           ;my_i2c.c: 251: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  6902  000558  0100               	movlb	0	; () banked
  6903  00055A  EE20 F00B          	lfsr	2,11
  6904  00055E  0100               	movlb	0	; () banked
  6905  000560  51CB               	movf	_ic_ptr& (0+255),w,b
  6906  000562  26D9               	addwf	fsr2l,f,c
  6907  000564  0100               	movlb	0	; () banked
  6908  000566  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6909  000568  22DA               	addwfc	fsr2h,f,c
  6910  00056A  0100               	movlb	0	; () banked
  6911  00056C  EE10 F00A          	lfsr	1,10
  6912  000570  0100               	movlb	0	; () banked
  6913  000572  51CB               	movf	_ic_ptr& (0+255),w,b
  6914  000574  26E1               	addwf	fsr1l,f,c
  6915  000576  0100               	movlb	0	; () banked
  6916  000578  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6917  00057A  22E2               	addwfc	fsr1h,f,c
  6918  00057C  50E7               	movf	indf1,w,c
  6919  00057E  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6920  000580  5047               	movf	??_i2c_int_handler,w,c
  6921  000582  0D01               	mullw	1
  6922  000584  50F3               	movf	prodl,w,c
  6923  000586  0100               	movlb	0	; () banked
  6924  000588  0100               	movlb	0	; () banked
  6925  00058A  25CB               	addwf	_ic_ptr& (0+255),w,b
  6926  00058C  6EE1               	movwf	fsr1l,c
  6927  00058E  50F4               	movf	prodh,w,c
  6928  000590  0100               	movlb	0	; () banked
  6929  000592  0100               	movlb	0	; () banked
  6930  000594  21CC               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6931  000596  6EE2               	movwf	fsr1h,c
  6932  000598  CFDF FFE7          	movff	indf2,indf1
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;my_i2c.c: 252: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  6936  00059C  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6937  00059E  0E28               	movlw	40
  6938  0005A0  6E43               	movwf	ToMainHigh_sendmsg@msgtype,c
  6939  0005A2  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6940  0005A4  0100               	movlb	0	; () banked
  6941  0005A6  C0CC  F045         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  6942  0005AA  0100               	movlb	0	; () banked
  6943  0005AC  C0CB  F044         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  6944  0005B0  0100               	movlb	0	; () banked
  6945  0005B2  EE20 F00A          	lfsr	2,10
  6946  0005B6  0100               	movlb	0	; () banked
  6947  0005B8  51CB               	movf	_ic_ptr& (0+255),w,b
  6948  0005BA  26D9               	addwf	fsr2l,f,c
  6949  0005BC  0100               	movlb	0	; () banked
  6950  0005BE  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6951  0005C0  22DA               	addwfc	fsr2h,f,c
  6952  0005C2  50DF               	movf	indf2,w,c
  6953  0005C4  6E48               	movwf	(??_i2c_int_handler+1)& (0+255),c
  6954  0005C6  2848               	incf	??_i2c_int_handler+1,w,c
  6955  0005C8  ECFB  F00C         	call	_ToMainHigh_sendmsg
  6956                           
  6957                           ;my_i2c.c: 253: ic_ptr->buflen = 0;
  6958  0005CC  0100               	movlb	0	; () banked
  6959  0005CE  EE20 F00A          	lfsr	2,10
  6960  0005D2  D043               	goto	L9
  6961  0005D4                     i2l2369:
  6962                           
  6963                           ; BSR set to: 0
  6964  0005D4  0100               	movlb	0	; () banked
  6965  0005D6  EE20 F00E          	lfsr	2,14
  6966  0005DA  0100               	movlb	0	; () banked
  6967  0005DC  51CB               	movf	_ic_ptr& (0+255),w,b
  6968  0005DE  26D9               	addwf	fsr2l,f,c
  6969  0005E0  0100               	movlb	0	; () banked
  6970  0005E2  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6971  0005E4  22DA               	addwfc	fsr2h,f,c
  6972  0005E6  50DF               	movf	indf2,w,c
  6973  0005E8  B4D8               	btfsc	status,2,c
  6974  0005EA  D03F               	goto	i2l2377
  6975                           
  6976                           ; BSR set to: 0
  6977                           ;my_i2c.c: 255: error_buf[0] = ic_ptr->error_count;
  6978  0005EC  0100               	movlb	0	; () banked
  6979  0005EE  EE20 F00E          	lfsr	2,14
  6980  0005F2  0100               	movlb	0	; () banked
  6981  0005F4  51CB               	movf	_ic_ptr& (0+255),w,b
  6982  0005F6  26D9               	addwf	fsr2l,f,c
  6983  0005F8  0100               	movlb	0	; () banked
  6984  0005FA  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6985  0005FC  22DA               	addwfc	fsr2h,f,c
  6986  0005FE  50DF               	movf	indf2,w,c
  6987  000600  0100               	movlb	0	; () banked
  6988  000602  0100               	movlb	0	; () banked
  6989  000604  6F8D               	movwf	i2c_int_handler@error_buf& (0+255),b
  6990                           
  6991                           ;my_i2c.c: 256: error_buf[1] = ic_ptr->error_code;
  6992  000606  0100               	movlb	0	; () banked
  6993  000608  EE20 F00D          	lfsr	2,13
  6994  00060C  0100               	movlb	0	; () banked
  6995  00060E  51CB               	movf	_ic_ptr& (0+255),w,b
  6996  000610  26D9               	addwf	fsr2l,f,c
  6997  000612  0100               	movlb	0	; () banked
  6998  000614  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  6999  000616  22DA               	addwfc	fsr2h,f,c
  7000  000618  50DF               	movf	indf2,w,c
  7001  00061A  0100               	movlb	0	; () banked
  7002  00061C  0100               	movlb	0	; () banked
  7003  00061E  6F8E               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7004                           
  7005                           ;my_i2c.c: 257: error_buf[2] = ic_ptr->event_count;
  7006  000620  0100               	movlb	0	; () banked
  7007  000622  EE20 F00B          	lfsr	2,11
  7008  000626  0100               	movlb	0	; () banked
  7009  000628  51CB               	movf	_ic_ptr& (0+255),w,b
  7010  00062A  26D9               	addwf	fsr2l,f,c
  7011  00062C  0100               	movlb	0	; () banked
  7012  00062E  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7013  000630  22DA               	addwfc	fsr2h,f,c
  7014  000632  50DF               	movf	indf2,w,c
  7015  000634  0100               	movlb	0	; () banked
  7016  000636  0100               	movlb	0	; () banked
  7017  000638  6F8F               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7018                           
  7019                           ; BSR set to: 0
  7020                           ;my_i2c.c: 258: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7021  00063A  6E47               	movwf	??_i2c_int_handler& (0+255),c
  7022  00063C  0E29               	movlw	41
  7023  00063E  6E43               	movwf	ToMainHigh_sendmsg@msgtype,c
  7024  000640  5047               	movf	??_i2c_int_handler& (0+255),w,c
  7025  000642  0100               	movlb	0	; () banked
  7026  000644  0E00               	movlw	high i2c_int_handler@error_buf
  7027  000646  6E45               	movwf	ToMainHigh_sendmsg@data+1,c
  7028  000648  0100               	movlb	0	; () banked
  7029  00064A  0E8D               	movlw	low i2c_int_handler@error_buf
  7030  00064C  6E44               	movwf	ToMainHigh_sendmsg@data,c
  7031  00064E  0E03               	movlw	3
  7032  000650  ECFB  F00C         	call	_ToMainHigh_sendmsg
  7033                           
  7034                           ;my_i2c.c: 259: ic_ptr->error_count = 0;
  7035  000654  0100               	movlb	0	; () banked
  7036  000656  EE20 F00E          	lfsr	2,14
  7037  00065A                     L9:
  7038  00065A  0100               	movlb	0	; () banked
  7039  00065C  51CB               	movf	_ic_ptr& (0+255),w,b
  7040  00065E  26D9               	addwf	fsr2l,f,c
  7041  000660  0100               	movlb	0	; () banked
  7042  000662  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7043  000664  22DA               	addwfc	fsr2h,f,c
  7044  000666  0E00               	movlw	0
  7045  000668  6EDF               	movwf	indf2,c
  7046  00066A                     i2l2377:
  7047                           
  7048                           ; BSR set to: 0
  7049                           ;my_i2c.c: 260: }
  7050                           ;my_i2c.c: 261: if (msg_to_send) {
  7051  00066A  0100               	movlb	0	; () banked
  7052  00066C  0100               	movlb	0	; () banked
  7053  00066E  5193               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7054  000670  B4D8               	btfsc	status,2,c
  7055  000672  0012               	return	
  7056                           
  7057                           ; BSR set to: 0
  7058                           ;my_i2c.c: 262: int length;
  7059                           ;my_i2c.c: 263: unsigned char msgbuffer[10 + 1];
  7060                           ;my_i2c.c: 264: length = 2;
  7061  000674  0E00               	movlw	0
  7062  000676  0100               	movlb	0	; () banked
  7063  000678  0100               	movlb	0	; () banked
  7064  00067A  6F8C               	movwf	(i2c_int_handler@length+1)& (0+255),b
  7065  00067C  0E02               	movlw	2
  7066  00067E  0100               	movlb	0	; () banked
  7067  000680  6F8B               	movwf	i2c_int_handler@length& (0+255),b
  7068                           
  7069                           ; BSR set to: 0
  7070                           ;my_i2c.c: 265: msgbuffer[0] = returnADCValue();
  7071  000682  EC3E  F00D         	call	i2_returnADCValue	;wreg free
  7072  000686  502D               	movf	?i2_returnADCValue,w,c
  7073  000688  0100               	movlb	0	; () banked
  7074  00068A  0100               	movlb	0	; () banked
  7075  00068C  6F80               	movwf	i2c_int_handler@msgbuffer& (0+255),b
  7076                           
  7077                           ; BSR set to: 0
  7078                           ;my_i2c.c: 292: start_i2c_slave_reply(length, msgbuffer);
  7079  00068E  0100               	movlb	0	; () banked
  7080  000690  0E00               	movlw	high i2c_int_handler@msgbuffer
  7081  000692  6E2E               	movwf	i2start_i2c_slave_reply@msg+1,c
  7082  000694  0100               	movlb	0	; () banked
  7083  000696  0E80               	movlw	low i2c_int_handler@msgbuffer
  7084  000698  6E2D               	movwf	i2start_i2c_slave_reply@msg,c
  7085  00069A  0100               	movlb	0	; () banked
  7086  00069C  0100               	movlb	0	; () banked
  7087  00069E  518B               	movf	i2c_int_handler@length& (0+255),w,b
  7088  0006A0  EC6F  F006         	call	i2_start_i2c_slave_reply
  7089                           
  7090                           ;my_i2c.c: 293: msg_to_send = 0;
  7091  0006A4  6E47               	movwf	??_i2c_int_handler& (0+255),c
  7092  0006A6  0E00               	movlw	0
  7093  0006A8  0100               	movlb	0	; () banked
  7094  0006AA  0100               	movlb	0	; () banked
  7095  0006AC  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7096  0006AE  5047               	movf	??_i2c_int_handler& (0+255),w,c
  7097  0006B0  0012               	return	
  7098  0006B2                     __end_of_i2c_int_handler:
  7099                           	opt stack 0
  7100                           pclatu	equ	0xFFB
  7101                           pclath	equ	0xFFA
  7102                           tblptru	equ	0xFF8
  7103                           tblptrh	equ	0xFF7
  7104                           tblptrl	equ	0xFF6
  7105                           tablat	equ	0xFF5
  7106                           prodh	equ	0xFF4
  7107                           prodl	equ	0xFF3
  7108                           intcon	equ	0xFF2
  7109                           intcon2	equ	0xFF1
  7110                           postinc0	equ	0xFEE
  7111                           fsr0h	equ	0xFEA
  7112                           fsr0l	equ	0xFE9
  7113                           wreg	equ	0xFE8
  7114                           indf1	equ	0xFE7
  7115                           fsr1h	equ	0xFE2
  7116                           fsr1l	equ	0xFE1
  7117                           bsr	equ	0xFE0
  7118                           indf2	equ	0xFDF
  7119                           postinc2	equ	0xFDE
  7120                           postdec2	equ	0xFDD
  7121                           fsr2h	equ	0xFDA
  7122                           fsr2l	equ	0xFD9
  7123                           status	equ	0xFD8
  7124                           
  7125 ;; *************** function i2_start_i2c_slave_reply *****************
  7126 ;; Defined at:
  7127 ;;		line 53 in file "../src/my_i2c.c"
  7128 ;; Parameters:    Size  Location     Type
  7129 ;;  length          1    wreg     unsigned char 
  7130 ;;  msg             2   44[COMRAM] PTR unsigned char 
  7131 ;;		 -> main@msgbuffer(11), i2c_int_handler@msgbuffer(11), 
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;  length          1   48[COMRAM] unsigned char 
  7134 ;; Return value:  Size  Location     Type
  7135 ;;		None               void
  7136 ;; Registers used:
  7137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7138 ;; Tracked objects:
  7139 ;;		On entry : 0/0
  7140 ;;		On exit  : 0/0
  7141 ;;		Unchanged: 0/0
  7142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7143 ;;      Params:         2       0       0       0       0
  7144 ;;      Locals:         1       0       0       0       0
  7145 ;;      Temps:          2       0       0       0       0
  7146 ;;      Totals:         5       0       0       0       0
  7147 ;;Total ram usage:        5 bytes
  7148 ;; Hardware stack levels used:    1
  7149 ;; This function calls:
  7150 ;;		Nothing
  7151 ;; This function is called by:
  7152 ;;		_i2c_int_handler
  7153 ;; This function uses a non-reentrant model
  7154 ;;
  7155                           
  7156                           	psect	text42
  7157  000CDE                     __ptext42:
  7158                           	opt stack 0
  7159  000CDE                     i2_start_i2c_slave_reply:
  7160                           	opt stack 18
  7161                           
  7162                           ; BSR set to: 0
  7163                           ;incstack = 0
  7164                           ;i2start_i2c_slave_reply@length stored from wreg
  7165  000CDE  CFE8 F031          	movff	wreg,i2start_i2c_slave_reply@length
  7166                           
  7167                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  7168  000CE2  0100               	movlb	0	; () banked
  7169  000CE4  EE20 F019          	lfsr	2,25
  7170  000CE8  0100               	movlb	0	; () banked
  7171  000CEA  51CB               	movf	_ic_ptr& (0+255),w,b
  7172  000CEC  26D9               	addwf	fsr2l,f,c
  7173  000CEE  0100               	movlb	0	; () banked
  7174  000CF0  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7175  000CF2  22DA               	addwfc	fsr2h,f,c
  7176  000CF4  0E00               	movlw	0
  7177  000CF6  6EDF               	movwf	indf2,c
  7178  000CF8  D03A               	goto	i2l2855
  7179  000CFA                     i2l2851:
  7180                           
  7181                           ; BSR set to: 0
  7182                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  7183  000CFA  0100               	movlb	0	; () banked
  7184  000CFC  EE20 F019          	lfsr	2,25
  7185  000D00  0100               	movlb	0	; () banked
  7186  000D02  51CB               	movf	_ic_ptr& (0+255),w,b
  7187  000D04  26D9               	addwf	fsr2l,f,c
  7188  000D06  0100               	movlb	0	; () banked
  7189  000D08  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7190  000D0A  22DA               	addwfc	fsr2h,f,c
  7191  000D0C  50DF               	movf	indf2,w,c
  7192  000D0E  6E2F               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  7193  000D10  502F               	movf	??i2_start_i2c_slave_reply,w,c
  7194  000D12  0D01               	mullw	1
  7195  000D14  50F3               	movf	prodl,w,c
  7196  000D16  242D               	addwf	i2start_i2c_slave_reply@msg,w,c
  7197  000D18  6ED9               	movwf	fsr2l,c
  7198  000D1A  50F4               	movf	prodh,w,c
  7199  000D1C  202E               	addwfc	i2start_i2c_slave_reply@msg+1,w,c
  7200  000D1E  6EDA               	movwf	fsr2h,c
  7201  000D20  0100               	movlb	0	; () banked
  7202  000D22  EE10 F019          	lfsr	1,25
  7203  000D26  0100               	movlb	0	; () banked
  7204  000D28  51CB               	movf	_ic_ptr& (0+255),w,b
  7205  000D2A  26E1               	addwf	fsr1l,f,c
  7206  000D2C  0100               	movlb	0	; () banked
  7207  000D2E  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7208  000D30  22E2               	addwfc	fsr1h,f,c
  7209  000D32  50E7               	movf	indf1,w,c
  7210  000D34  6E30               	movwf	(??i2_start_i2c_slave_reply+1)& (0+255),c
  7211  000D36  5030               	movf	??i2_start_i2c_slave_reply+1,w,c
  7212  000D38  0D01               	mullw	1
  7213  000D3A  0E0F               	movlw	15
  7214  000D3C  26F3               	addwf	prodl,f,c
  7215  000D3E  0E00               	movlw	0
  7216  000D40  22F4               	addwfc	prodh,f,c
  7217  000D42  50F3               	movf	prodl,w,c
  7218  000D44  0100               	movlb	0	; () banked
  7219  000D46  0100               	movlb	0	; () banked
  7220  000D48  25CB               	addwf	_ic_ptr& (0+255),w,b
  7221  000D4A  6EE1               	movwf	fsr1l,c
  7222  000D4C  50F4               	movf	prodh,w,c
  7223  000D4E  0100               	movlb	0	; () banked
  7224  000D50  0100               	movlb	0	; () banked
  7225  000D52  21CC               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7226  000D54  6EE2               	movwf	fsr1h,c
  7227  000D56  CFDF FFE7          	movff	indf2,indf1
  7228                           
  7229                           ; BSR set to: 0
  7230  000D5A  0100               	movlb	0	; () banked
  7231  000D5C  EE20 F019          	lfsr	2,25
  7232  000D60  0100               	movlb	0	; () banked
  7233  000D62  51CB               	movf	_ic_ptr& (0+255),w,b
  7234  000D64  26D9               	addwf	fsr2l,f,c
  7235  000D66  0100               	movlb	0	; () banked
  7236  000D68  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7237  000D6A  22DA               	addwfc	fsr2h,f,c
  7238  000D6C  2ADF               	incf	indf2,f,c
  7239  000D6E                     i2l2855:
  7240                           
  7241                           ; BSR set to: 0
  7242  000D6E  0100               	movlb	0	; () banked
  7243  000D70  EE20 F019          	lfsr	2,25
  7244  000D74  0100               	movlb	0	; () banked
  7245  000D76  51CB               	movf	_ic_ptr& (0+255),w,b
  7246  000D78  26D9               	addwf	fsr2l,f,c
  7247  000D7A  0100               	movlb	0	; () banked
  7248  000D7C  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7249  000D7E  22DA               	addwfc	fsr2h,f,c
  7250  000D80  50DF               	movf	indf2,w,c
  7251  000D82  6E2F               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  7252  000D84  5031               	movf	i2start_i2c_slave_reply@length,w,c
  7253  000D86  5C2F               	subwf	??i2_start_i2c_slave_reply,w,c
  7254  000D88  A0D8               	btfss	status,0,c
  7255  000D8A  D7B7               	goto	i2l2851
  7256                           
  7257                           ; BSR set to: 0
  7258                           ;my_i2c.c: 57: }
  7259                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  7260                           
  7261                           ; BSR set to: 0
  7262  000D8C  0100               	movlb	0	; () banked
  7263  000D8E  EE20 F019          	lfsr	2,25
  7264  000D92  0100               	movlb	0	; () banked
  7265  000D94  51CB               	movf	_ic_ptr& (0+255),w,b
  7266  000D96  26D9               	addwf	fsr2l,f,c
  7267  000D98  0100               	movlb	0	; () banked
  7268  000D9A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7269  000D9C  22DA               	addwfc	fsr2h,f,c
  7270  000D9E  C031  FFDF         	movff	i2start_i2c_slave_reply@length,indf2
  7271                           
  7272                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  7273  000DA2  0100               	movlb	0	; () banked
  7274  000DA4  EE20 F01A          	lfsr	2,26
  7275  000DA8  0100               	movlb	0	; () banked
  7276  000DAA  51CB               	movf	_ic_ptr& (0+255),w,b
  7277  000DAC  26D9               	addwf	fsr2l,f,c
  7278  000DAE  0100               	movlb	0	; () banked
  7279  000DB0  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7280  000DB2  22DA               	addwfc	fsr2h,f,c
  7281  000DB4  0E01               	movlw	1
  7282  000DB6  6EDF               	movwf	indf2,c
  7283                           
  7284                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  7285  000DB8  0100               	movlb	0	; () banked
  7286  000DBA  EE20 F00F          	lfsr	2,15
  7287  000DBE  0100               	movlb	0	; () banked
  7288  000DC0  51CB               	movf	_ic_ptr& (0+255),w,b
  7289  000DC2  26D9               	addwf	fsr2l,f,c
  7290  000DC4  0100               	movlb	0	; () banked
  7291  000DC6  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7292  000DC8  22DA               	addwfc	fsr2h,f,c
  7293  000DCA  50DF               	movf	indf2,w,c
  7294  000DCC  6EC9               	movwf	4041,c	;volatile
  7295                           
  7296                           ; BSR set to: 0
  7297                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  7298  000DCE  88C6               	bsf	4038,4,c	;volatile
  7299                           
  7300                           ; BSR set to: 0
  7301  000DD0  0012               	return	
  7302  000DD2                     __end_ofi2_start_i2c_slave_reply:
  7303                           	opt stack 0
  7304                           pclatu	equ	0xFFB
  7305                           pclath	equ	0xFFA
  7306                           tblptru	equ	0xFF8
  7307                           tblptrh	equ	0xFF7
  7308                           tblptrl	equ	0xFF6
  7309                           tablat	equ	0xFF5
  7310                           prodh	equ	0xFF4
  7311                           prodl	equ	0xFF3
  7312                           intcon	equ	0xFF2
  7313                           intcon2	equ	0xFF1
  7314                           postinc0	equ	0xFEE
  7315                           fsr0h	equ	0xFEA
  7316                           fsr0l	equ	0xFE9
  7317                           wreg	equ	0xFE8
  7318                           indf1	equ	0xFE7
  7319                           fsr1h	equ	0xFE2
  7320                           fsr1l	equ	0xFE1
  7321                           bsr	equ	0xFE0
  7322                           indf2	equ	0xFDF
  7323                           postinc2	equ	0xFDE
  7324                           postdec2	equ	0xFDD
  7325                           fsr2h	equ	0xFDA
  7326                           fsr2l	equ	0xFD9
  7327                           status	equ	0xFD8
  7328                           
  7329 ;; *************** function i2_returnADCValue *****************
  7330 ;; Defined at:
  7331 ;;		line 17 in file "../src/interrupts.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;		None
  7334 ;; Auto vars:     Size  Location     Type
  7335 ;;  returnADCVal    2   46[COMRAM] int 
  7336 ;; Return value:  Size  Location     Type
  7337 ;;                  2   44[COMRAM] int 
  7338 ;; Registers used:
  7339 ;;		wreg, status,2, status,0
  7340 ;; Tracked objects:
  7341 ;;		On entry : 0/0
  7342 ;;		On exit  : 0/0
  7343 ;;		Unchanged: 0/0
  7344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7345 ;;      Params:         2       0       0       0       0
  7346 ;;      Locals:         2       0       0       0       0
  7347 ;;      Temps:          0       0       0       0       0
  7348 ;;      Totals:         4       0       0       0       0
  7349 ;;Total ram usage:        4 bytes
  7350 ;; Hardware stack levels used:    1
  7351 ;; This function calls:
  7352 ;;		Nothing
  7353 ;; This function is called by:
  7354 ;;		_i2c_int_handler
  7355 ;; This function uses a non-reentrant model
  7356 ;;
  7357                           
  7358                           	psect	text43
  7359  001A7C                     __ptext43:
  7360                           	opt stack 0
  7361  001A7C                     i2_returnADCValue:
  7362                           	opt stack 18
  7363                           
  7364                           ;interrupts.c: 19: int temp = 0;
  7365                           
  7366                           ; BSR set to: 0
  7367                           ;incstack = 0
  7368  001A7C  0E00               	movlw	0
  7369  001A7E  6E30               	movwf	i2returnADCValue@temp+1,c
  7370  001A80  0E00               	movlw	0
  7371  001A82  6E2F               	movwf	i2returnADCValue@temp,c
  7372                           
  7373                           ;interrupts.c: 20: temp = temp + 1;
  7374  001A84  0E01               	movlw	1
  7375  001A86  242F               	addwf	i2returnADCValue@temp,w,c
  7376  001A88  6E2F               	movwf	i2returnADCValue@temp,c
  7377  001A8A  0E00               	movlw	0
  7378  001A8C  2030               	addwfc	i2returnADCValue@temp+1,w,c
  7379  001A8E  6E30               	movwf	i2returnADCValue@temp+1,c
  7380                           
  7381                           ;interrupts.c: 21: return ADCValue;
  7382  001A90  C0CD  F02D         	movff	_ADCValue,?i2_returnADCValue
  7383  001A94  C0CE  F02E         	movff	_ADCValue+1,?i2_returnADCValue+1
  7384  001A98  0012               	return	
  7385  001A9A                     __end_ofi2_returnADCValue:
  7386                           	opt stack 0
  7387                           pclatu	equ	0xFFB
  7388                           pclath	equ	0xFFA
  7389                           tblptru	equ	0xFF8
  7390                           tblptrh	equ	0xFF7
  7391                           tblptrl	equ	0xFF6
  7392                           tablat	equ	0xFF5
  7393                           prodh	equ	0xFF4
  7394                           prodl	equ	0xFF3
  7395                           intcon	equ	0xFF2
  7396                           intcon2	equ	0xFF1
  7397                           postinc0	equ	0xFEE
  7398                           fsr0h	equ	0xFEA
  7399                           fsr0l	equ	0xFE9
  7400                           wreg	equ	0xFE8
  7401                           indf1	equ	0xFE7
  7402                           fsr1h	equ	0xFE2
  7403                           fsr1l	equ	0xFE1
  7404                           bsr	equ	0xFE0
  7405                           indf2	equ	0xFDF
  7406                           postinc2	equ	0xFDE
  7407                           postdec2	equ	0xFDD
  7408                           fsr2h	equ	0xFDA
  7409                           fsr2l	equ	0xFD9
  7410                           status	equ	0xFD8
  7411                           
  7412 ;; *************** function _handle_start *****************
  7413 ;; Defined at:
  7414 ;;		line 71 in file "../src/my_i2c.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;  data_read       1    wreg     unsigned char 
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;  data_read       1   44[COMRAM] unsigned char 
  7419 ;; Return value:  Size  Location     Type
  7420 ;;		None               void
  7421 ;; Registers used:
  7422 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7423 ;; Tracked objects:
  7424 ;;		On entry : 0/0
  7425 ;;		On exit  : 0/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7428 ;;      Params:         0       0       0       0       0
  7429 ;;      Locals:         1       0       0       0       0
  7430 ;;      Temps:          0       0       0       0       0
  7431 ;;      Totals:         1       0       0       0       0
  7432 ;;Total ram usage:        1 bytes
  7433 ;; Hardware stack levels used:    1
  7434 ;; This function calls:
  7435 ;;		Nothing
  7436 ;; This function is called by:
  7437 ;;		_i2c_int_handler
  7438 ;; This function uses a non-reentrant model
  7439 ;;
  7440                           
  7441                           	psect	text44
  7442  000DD2                     __ptext44:
  7443                           	opt stack 0
  7444  000DD2                     _handle_start:
  7445                           	opt stack 18
  7446                           
  7447                           ;incstack = 0
  7448                           ;handle_start@data_read stored from wreg
  7449  000DD2  CFE8 F02D          	movff	wreg,handle_start@data_read
  7450                           
  7451                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  7452  000DD6  0100               	movlb	0	; () banked
  7453  000DD8  EE20 F00B          	lfsr	2,11
  7454  000DDC  0100               	movlb	0	; () banked
  7455  000DDE  51CB               	movf	_ic_ptr& (0+255),w,b
  7456  000DE0  26D9               	addwf	fsr2l,f,c
  7457  000DE2  0100               	movlb	0	; () banked
  7458  000DE4  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7459  000DE6  22DA               	addwfc	fsr2h,f,c
  7460  000DE8  0E01               	movlw	1
  7461  000DEA  6EDF               	movwf	indf2,c
  7462                           
  7463                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  7464  000DEC  0100               	movlb	0	; () banked
  7465  000DEE  EE20 F00A          	lfsr	2,10
  7466  000DF2  0100               	movlb	0	; () banked
  7467  000DF4  51CB               	movf	_ic_ptr& (0+255),w,b
  7468  000DF6  26D9               	addwf	fsr2l,f,c
  7469  000DF8  0100               	movlb	0	; () banked
  7470  000DFA  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7471  000DFC  22DA               	addwfc	fsr2h,f,c
  7472  000DFE  0E00               	movlw	0
  7473  000E00  6EDF               	movwf	indf2,c
  7474                           
  7475                           ; BSR set to: 0
  7476                           ;my_i2c.c: 75: if (data_read) {
  7477  000E02  502D               	movf	handle_start@data_read,w,c
  7478  000E04  B4D8               	btfsc	status,2,c
  7479  000E06  D03D               	goto	i2l2239
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  7483  000E08  AAC7               	btfss	4039,5,c	;volatile
  7484  000E0A  D021               	goto	i2l111
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  7488  000E0C  0100               	movlb	0	; () banked
  7489  000E0E  EE20 F00C          	lfsr	2,12
  7490  000E12  0100               	movlb	0	; () banked
  7491  000E14  51CB               	movf	_ic_ptr& (0+255),w,b
  7492  000E16  26D9               	addwf	fsr2l,f,c
  7493  000E18  0100               	movlb	0	; () banked
  7494  000E1A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7495  000E1C  22DA               	addwfc	fsr2h,f,c
  7496  000E1E  0E05               	movlw	5
  7497  000E20  6EDF               	movwf	indf2,c
  7498                           
  7499                           ;my_i2c.c: 80: ic_ptr->error_count++;
  7500  000E22  0100               	movlb	0	; () banked
  7501  000E24  EE20 F00E          	lfsr	2,14
  7502  000E28  0100               	movlb	0	; () banked
  7503  000E2A  51CB               	movf	_ic_ptr& (0+255),w,b
  7504  000E2C  26D9               	addwf	fsr2l,f,c
  7505  000E2E  0100               	movlb	0	; () banked
  7506  000E30  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7507  000E32  22DA               	addwfc	fsr2h,f,c
  7508  000E34  2ADF               	incf	indf2,f,c
  7509                           
  7510                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  7511  000E36  0100               	movlb	0	; () banked
  7512  000E38  EE20 F00D          	lfsr	2,13
  7513  000E3C  0100               	movlb	0	; () banked
  7514  000E3E  51CB               	movf	_ic_ptr& (0+255),w,b
  7515  000E40  26D9               	addwf	fsr2l,f,c
  7516  000E42  0100               	movlb	0	; () banked
  7517  000E44  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7518  000E46  22DA               	addwfc	fsr2h,f,c
  7519  000E48  0E05               	movlw	5
  7520  000E4A  6EDF               	movwf	indf2,c
  7521                           
  7522                           ;my_i2c.c: 82: } else {
  7523  000E4C  0012               	return	
  7524  000E4E                     i2l111:
  7525                           
  7526                           ; BSR set to: 0
  7527                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  7528  000E4E  A4C7               	btfss	4039,2,c	;volatile
  7529  000E50  D00C               	goto	i2l2237
  7530                           
  7531                           ; BSR set to: 0
  7532                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  7533  000E52  0100               	movlb	0	; () banked
  7534  000E54  EE20 F00C          	lfsr	2,12
  7535  000E58  0100               	movlb	0	; () banked
  7536  000E5A  51CB               	movf	_ic_ptr& (0+255),w,b
  7537  000E5C  26D9               	addwf	fsr2l,f,c
  7538  000E5E  0100               	movlb	0	; () banked
  7539  000E60  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7540  000E62  22DA               	addwfc	fsr2h,f,c
  7541  000E64  0E08               	movlw	8
  7542  000E66  6EDF               	movwf	indf2,c
  7543                           
  7544                           ;my_i2c.c: 85: } else {
  7545  000E68  0012               	return	
  7546  000E6A                     i2l2237:
  7547                           
  7548                           ; BSR set to: 0
  7549                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  7550  000E6A  0100               	movlb	0	; () banked
  7551  000E6C  EE20 F00C          	lfsr	2,12
  7552  000E70  0100               	movlb	0	; () banked
  7553  000E72  51CB               	movf	_ic_ptr& (0+255),w,b
  7554  000E74  26D9               	addwf	fsr2l,f,c
  7555  000E76  0100               	movlb	0	; () banked
  7556  000E78  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7557  000E7A  22DA               	addwfc	fsr2h,f,c
  7558  000E7C  0E07               	movlw	7
  7559  000E7E  6EDF               	movwf	indf2,c
  7560  000E80  0012               	return	
  7561  000E82                     i2l2239:
  7562                           
  7563                           ; BSR set to: 0
  7564                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  7565  000E82  0100               	movlb	0	; () banked
  7566  000E84  EE20 F00C          	lfsr	2,12
  7567  000E88  0100               	movlb	0	; () banked
  7568  000E8A  51CB               	movf	_ic_ptr& (0+255),w,b
  7569  000E8C  26D9               	addwf	fsr2l,f,c
  7570  000E8E  0100               	movlb	0	; () banked
  7571  000E90  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7572  000E92  22DA               	addwfc	fsr2h,f,c
  7573  000E94  0E06               	movlw	6
  7574  000E96  6EDF               	movwf	indf2,c
  7575  000E98  0012               	return	
  7576  000E9A                     __end_of_handle_start:
  7577                           	opt stack 0
  7578                           pclatu	equ	0xFFB
  7579                           pclath	equ	0xFFA
  7580                           tblptru	equ	0xFF8
  7581                           tblptrh	equ	0xFF7
  7582                           tblptrl	equ	0xFF6
  7583                           tablat	equ	0xFF5
  7584                           prodh	equ	0xFF4
  7585                           prodl	equ	0xFF3
  7586                           intcon	equ	0xFF2
  7587                           intcon2	equ	0xFF1
  7588                           postinc0	equ	0xFEE
  7589                           fsr0h	equ	0xFEA
  7590                           fsr0l	equ	0xFE9
  7591                           wreg	equ	0xFE8
  7592                           indf1	equ	0xFE7
  7593                           fsr1h	equ	0xFE2
  7594                           fsr1l	equ	0xFE1
  7595                           bsr	equ	0xFE0
  7596                           indf2	equ	0xFDF
  7597                           postinc2	equ	0xFDE
  7598                           postdec2	equ	0xFDD
  7599                           fsr2h	equ	0xFDA
  7600                           fsr2l	equ	0xFD9
  7601                           status	equ	0xFD8
  7602                           
  7603 ;; *************** function _ToMainHigh_sendmsg *****************
  7604 ;; Defined at:
  7605 ;;		line 126 in file "../src/messages.c"
  7606 ;; Parameters:    Size  Location     Type
  7607 ;;  length          1    wreg     unsigned char 
  7608 ;;  msgtype         1   66[COMRAM] unsigned char 
  7609 ;;  data            2   67[COMRAM] PTR void 
  7610 ;;		 -> main@ic(28), i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  7611 ;; Auto vars:     Size  Location     Type
  7612 ;;  length          1   69[COMRAM] unsigned char 
  7613 ;; Return value:  Size  Location     Type
  7614 ;;                  1    wreg      char 
  7615 ;; Registers used:
  7616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7617 ;; Tracked objects:
  7618 ;;		On entry : 0/0
  7619 ;;		On exit  : 0/0
  7620 ;;		Unchanged: 0/0
  7621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7622 ;;      Params:         3       0       0       0       0
  7623 ;;      Locals:         1       0       0       0       0
  7624 ;;      Temps:          0       0       0       0       0
  7625 ;;      Totals:         4       0       0       0       0
  7626 ;;Total ram usage:        4 bytes
  7627 ;; Hardware stack levels used:    1
  7628 ;; Hardware stack levels required when called:    2
  7629 ;; This function calls:
  7630 ;;		i2_send_msg
  7631 ;; This function is called by:
  7632 ;;		_i2c_int_handler
  7633 ;;		_timer0_int_handler
  7634 ;; This function uses a non-reentrant model
  7635 ;;
  7636                           
  7637                           	psect	text45
  7638  0019F6                     __ptext45:
  7639                           	opt stack 0
  7640  0019F6                     _ToMainHigh_sendmsg:
  7641                           	opt stack 16
  7642                           
  7643                           ; BSR set to: 0
  7644                           ;incstack = 0
  7645                           ;ToMainHigh_sendmsg@length stored from wreg
  7646  0019F6  CFE8 F046          	movff	wreg,ToMainHigh_sendmsg@length
  7647                           
  7648                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7649                           ;	Return value of _ToMainHigh_sendmsg is never used
  7650  0019FA  0101               	movlb	1	; () banked
  7651  0019FC  0E01               	movlw	high _ToMainHigh_MQ
  7652  0019FE  6E38               	movwf	i2send_msg@qptr+1,c
  7653  001A00  0101               	movlb	1	; () banked
  7654  001A02  0E36               	movlw	low _ToMainHigh_MQ
  7655  001A04  6E37               	movwf	i2send_msg@qptr,c
  7656  001A06  C046  F039         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  7657  001A0A  C043  F03A         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7658  001A0E  C045  F03C         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7659  001A12  C044  F03B         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  7660  001A16  ECFC  F007         	call	i2_send_msg	;wreg free
  7661  001A1A  0012               	return	
  7662  001A1C                     __end_of_ToMainHigh_sendmsg:
  7663                           	opt stack 0
  7664                           pclatu	equ	0xFFB
  7665                           pclath	equ	0xFFA
  7666                           tblptru	equ	0xFF8
  7667                           tblptrh	equ	0xFF7
  7668                           tblptrl	equ	0xFF6
  7669                           tablat	equ	0xFF5
  7670                           prodh	equ	0xFF4
  7671                           prodl	equ	0xFF3
  7672                           intcon	equ	0xFF2
  7673                           intcon2	equ	0xFF1
  7674                           postinc0	equ	0xFEE
  7675                           fsr0h	equ	0xFEA
  7676                           fsr0l	equ	0xFE9
  7677                           wreg	equ	0xFE8
  7678                           indf1	equ	0xFE7
  7679                           fsr1h	equ	0xFE2
  7680                           fsr1l	equ	0xFE1
  7681                           bsr	equ	0xFE0
  7682                           indf2	equ	0xFDF
  7683                           postinc2	equ	0xFDE
  7684                           postdec2	equ	0xFDD
  7685                           fsr2h	equ	0xFDA
  7686                           fsr2l	equ	0xFD9
  7687                           status	equ	0xFD8
  7688                           
  7689 ;; *************** function i2_send_msg *****************
  7690 ;; Defined at:
  7691 ;;		line 24 in file "../src/messages.c"
  7692 ;; Parameters:    Size  Location     Type
  7693 ;;  qptr            2   54[COMRAM] PTR struct __msg_queue
  7694 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7695 ;;  length          1   56[COMRAM] unsigned char 
  7696 ;;  msgtype         1   57[COMRAM] unsigned char 
  7697 ;;  data            2   58[COMRAM] PTR void 
  7698 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  7699 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  7700 ;; Auto vars:     Size  Location     Type
  7701 ;;  send_msg        2   64[COMRAM] PTR struct __msg
  7702 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7703 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7704 ;;  send_msg        2   61[COMRAM] unsigned int 
  7705 ;;  send_msg        1   63[COMRAM] unsigned char 
  7706 ;; Return value:  Size  Location     Type
  7707 ;;                  1    wreg      char 
  7708 ;; Registers used:
  7709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7710 ;; Tracked objects:
  7711 ;;		On entry : 0/0
  7712 ;;		On exit  : 0/0
  7713 ;;		Unchanged: 0/0
  7714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7715 ;;      Params:         6       0       0       0       0
  7716 ;;      Locals:         5       0       0       0       0
  7717 ;;      Temps:          1       0       0       0       0
  7718 ;;      Totals:        12       0       0       0       0
  7719 ;;Total ram usage:       12 bytes
  7720 ;; Hardware stack levels used:    1
  7721 ;; Hardware stack levels required when called:    1
  7722 ;; This function calls:
  7723 ;;		i2_memcpy
  7724 ;; This function is called by:
  7725 ;;		_ToMainHigh_sendmsg
  7726 ;; This function uses a non-reentrant model
  7727 ;;
  7728                           
  7729                           	psect	text46
  7730  000FF8                     __ptext46:
  7731                           	opt stack 0
  7732  000FF8                     i2_send_msg:
  7733                           	opt stack 16
  7734                           
  7735                           ;messages.c: 25: unsigned char slot;
  7736                           ;messages.c: 27: msg *qmsg;
  7737                           ;messages.c: 28: size_t tlength = length;
  7738                           
  7739                           ;incstack = 0
  7740  000FF8  C039  F03E         	movff	i2send_msg@length,i2send_msg@tlength
  7741  000FFC  6A3F               	clrf	i2send_msg@tlength+1,c
  7742                           
  7743                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7744  000FFE  EE20 F034          	lfsr	2,52
  7745  001002  5037               	movf	i2send_msg@qptr,w,c
  7746  001004  26D9               	addwf	fsr2l,f,c
  7747  001006  5038               	movf	i2send_msg@qptr+1,w,c
  7748  001008  22DA               	addwfc	fsr2h,f,c
  7749  00100A  50DF               	movf	indf2,w,c
  7750  00100C  6E40               	movwf	i2send_msg@slot,c
  7751                           
  7752                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7753  00100E  5040               	movf	i2send_msg@slot,w,c
  7754  001010  0D0D               	mullw	13
  7755  001012  50F3               	movf	prodl,w,c
  7756  001014  2437               	addwf	i2send_msg@qptr,w,c
  7757  001016  6E41               	movwf	i2send_msg@qmsg,c
  7758  001018  50F4               	movf	prodh,w,c
  7759  00101A  2038               	addwfc	i2send_msg@qptr+1,w,c
  7760  00101C  6E42               	movwf	i2send_msg@qmsg+1,c
  7761                           
  7762                           ;messages.c: 41: if (qmsg->full != 0) {
  7763  00101E  C041  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7764  001022  C042  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7765  001026  50DF               	movf	indf2,w,c
  7766  001028  B4D8               	btfsc	status,2,c
  7767  00102A  D002               	goto	i2l2873
  7768                           
  7769                           ;messages.c: 42: return (-1);
  7770  00102C  0EFF               	movlw	255
  7771  00102E  0012               	return	
  7772  001030                     i2l2873:
  7773                           
  7774                           ;messages.c: 43: }
  7775                           ;messages.c: 46: qmsg->length = length;
  7776  001030  EE20 F001          	lfsr	2,1
  7777  001034  5041               	movf	i2send_msg@qmsg,w,c
  7778  001036  26D9               	addwf	fsr2l,f,c
  7779  001038  5042               	movf	i2send_msg@qmsg+1,w,c
  7780  00103A  22DA               	addwfc	fsr2h,f,c
  7781  00103C  C039  FFDF         	movff	i2send_msg@length,indf2
  7782                           
  7783                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7784  001040  EE20 F002          	lfsr	2,2
  7785  001044  5041               	movf	i2send_msg@qmsg,w,c
  7786  001046  26D9               	addwf	fsr2l,f,c
  7787  001048  5042               	movf	i2send_msg@qmsg+1,w,c
  7788  00104A  22DA               	addwfc	fsr2h,f,c
  7789  00104C  C03A  FFDF         	movff	i2send_msg@msgtype,indf2
  7790                           
  7791                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7792  001050  0E03               	movlw	3
  7793  001052  2441               	addwf	i2send_msg@qmsg,w,c
  7794  001054  6E2D               	movwf	i2memcpy@d1,c
  7795  001056  0E00               	movlw	0
  7796  001058  2042               	addwfc	i2send_msg@qmsg+1,w,c
  7797  00105A  6E2E               	movwf	i2memcpy@d1+1,c
  7798  00105C  C03C  F030         	movff	i2send_msg@data+1,i2memcpy@s1+1
  7799  001060  C03B  F02F         	movff	i2send_msg@data,i2memcpy@s1
  7800  001064  C03E  F031         	movff	i2send_msg@tlength,i2memcpy@n
  7801  001068  C03F  F032         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  7802  00106C  ECFB  F00B         	call	i2_memcpy	;wreg free
  7803                           
  7804                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7805  001070  EE20 F034          	lfsr	2,52
  7806  001074  5037               	movf	i2send_msg@qptr,w,c
  7807  001076  26D9               	addwf	fsr2l,f,c
  7808  001078  5038               	movf	i2send_msg@qptr+1,w,c
  7809  00107A  22DA               	addwfc	fsr2h,f,c
  7810  00107C  EE10 F034          	lfsr	1,52
  7811  001080  5037               	movf	i2send_msg@qptr,w,c
  7812  001082  26E1               	addwf	fsr1l,f,c
  7813  001084  5038               	movf	i2send_msg@qptr+1,w,c
  7814  001086  22E2               	addwfc	fsr1h,f,c
  7815  001088  50E7               	movf	indf1,w,c
  7816  00108A  6E3D               	movwf	??i2_send_msg& (0+255),c
  7817  00108C  283D               	incf	??i2_send_msg,w,c
  7818  00108E  0B03               	andlw	3
  7819  001090  6EDF               	movwf	indf2,c
  7820                           
  7821                           ;messages.c: 59: qmsg->full = 1;
  7822  001092  C041  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7823  001096  C042  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7824  00109A  0E01               	movlw	1
  7825  00109C  6EDF               	movwf	indf2,c
  7826                           
  7827                           ;messages.c: 60: return (1);
  7828  00109E  0E01               	movlw	1
  7829  0010A0  0012               	return	
  7830  0010A2                     __end_ofi2_send_msg:
  7831                           	opt stack 0
  7832                           pclatu	equ	0xFFB
  7833                           pclath	equ	0xFFA
  7834                           tblptru	equ	0xFF8
  7835                           tblptrh	equ	0xFF7
  7836                           tblptrl	equ	0xFF6
  7837                           tablat	equ	0xFF5
  7838                           prodh	equ	0xFF4
  7839                           prodl	equ	0xFF3
  7840                           intcon	equ	0xFF2
  7841                           intcon2	equ	0xFF1
  7842                           postinc0	equ	0xFEE
  7843                           fsr0h	equ	0xFEA
  7844                           fsr0l	equ	0xFE9
  7845                           wreg	equ	0xFE8
  7846                           indf1	equ	0xFE7
  7847                           fsr1h	equ	0xFE2
  7848                           fsr1l	equ	0xFE1
  7849                           bsr	equ	0xFE0
  7850                           indf2	equ	0xFDF
  7851                           postinc2	equ	0xFDE
  7852                           postdec2	equ	0xFDD
  7853                           fsr2h	equ	0xFDA
  7854                           fsr2l	equ	0xFD9
  7855                           status	equ	0xFD8
  7856                           
  7857 ;; *************** function i2_memcpy *****************
  7858 ;; Defined at:
  7859 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  7860 ;; Parameters:    Size  Location     Type
  7861 ;;  d1              2   44[COMRAM] PTR void 
  7862 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7863 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7864 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  7865 ;;  s1              2   46[COMRAM] PTR const void 
  7866 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7867 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7868 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  7869 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7870 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  7871 ;;  n               2   48[COMRAM] unsigned int 
  7872 ;; Auto vars:     Size  Location     Type
  7873 ;;  memcpy          2   52[COMRAM] PTR const unsigned char 
  7874 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7875 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7876 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  7877 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7878 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  7879 ;;  memcpy          2   50[COMRAM] PTR unsigned char 
  7880 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7881 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7882 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  7883 ;; Return value:  Size  Location     Type
  7884 ;;                  2   44[COMRAM] PTR void 
  7885 ;; Registers used:
  7886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7887 ;; Tracked objects:
  7888 ;;		On entry : 0/0
  7889 ;;		On exit  : 0/0
  7890 ;;		Unchanged: 0/0
  7891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7892 ;;      Params:         6       0       0       0       0
  7893 ;;      Locals:         4       0       0       0       0
  7894 ;;      Temps:          0       0       0       0       0
  7895 ;;      Totals:        10       0       0       0       0
  7896 ;;Total ram usage:       10 bytes
  7897 ;; Hardware stack levels used:    1
  7898 ;; This function calls:
  7899 ;;		Nothing
  7900 ;; This function is called by:
  7901 ;;		i2_send_msg
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           
  7905                           	psect	text47
  7906  0017F6                     __ptext47:
  7907                           	opt stack 0
  7908  0017F6                     i2_memcpy:
  7909                           	opt stack 16
  7910                           
  7911                           ;incstack = 0
  7912  0017F6  C030  F036         	movff	i2memcpy@s1+1,i2memcpy@s+1
  7913  0017FA  C02F  F035         	movff	i2memcpy@s1,i2memcpy@s
  7914  0017FE  C02E  F034         	movff	i2memcpy@d1+1,i2memcpy@d+1
  7915  001802  C02D  F033         	movff	i2memcpy@d1,i2memcpy@d
  7916  001806  D00E               	goto	i2l2941
  7917  001808                     i2l2935:
  7918  001808  C035  FFD9         	movff	i2memcpy@s,fsr2l
  7919  00180C  C036  FFDA         	movff	i2memcpy@s+1,fsr2h
  7920  001810  C033  FFE1         	movff	i2memcpy@d,fsr1l
  7921  001814  C034  FFE2         	movff	i2memcpy@d+1,fsr1h
  7922  001818  CFDF FFE7          	movff	indf2,indf1
  7923  00181C  4A35               	infsnz	i2memcpy@s,f,c
  7924  00181E  2A36               	incf	i2memcpy@s+1,f,c
  7925  001820  4A33               	infsnz	i2memcpy@d,f,c
  7926  001822  2A34               	incf	i2memcpy@d+1,f,c
  7927  001824                     i2l2941:
  7928  001824  0631               	decf	i2memcpy@n,f,c
  7929  001826  A0D8               	btfss	status,0,c
  7930  001828  0632               	decf	i2memcpy@n+1,f,c
  7931  00182A  2831               	incf	i2memcpy@n& (0+255),w,c
  7932  00182C  B4D8               	btfsc	status,2,c
  7933  00182E  2832               	incf	(i2memcpy@n+1)& (0+255),w,c
  7934  001830  B4D8               	btfsc	status,2,c
  7935                           
  7936                           ;	Return value of i2_memcpy is never used
  7937  001832  0012               	return	
  7938  001834  D7E9               	goto	i2l2935
  7939  001836                     __end_ofi2_memcpy:
  7940                           	opt stack 0
  7941                           pclatu	equ	0xFFB
  7942                           pclath	equ	0xFFA
  7943                           tblptru	equ	0xFF8
  7944                           tblptrh	equ	0xFF7
  7945                           tblptrl	equ	0xFF6
  7946                           tablat	equ	0xFF5
  7947                           prodh	equ	0xFF4
  7948                           prodl	equ	0xFF3
  7949                           intcon	equ	0xFF2
  7950                           intcon2	equ	0xFF1
  7951                           postinc0	equ	0xFEE
  7952                           fsr0h	equ	0xFEA
  7953                           fsr0l	equ	0xFE9
  7954                           wreg	equ	0xFE8
  7955                           indf1	equ	0xFE7
  7956                           fsr1h	equ	0xFE2
  7957                           fsr1l	equ	0xFE1
  7958                           bsr	equ	0xFE0
  7959                           indf2	equ	0xFDF
  7960                           postinc2	equ	0xFDE
  7961                           postdec2	equ	0xFDD
  7962                           fsr2h	equ	0xFDA
  7963                           fsr2l	equ	0xFD9
  7964                           status	equ	0xFD8
  7965                           
  7966 ;; *************** function _SleepIfOkay *****************
  7967 ;; Defined at:
  7968 ;;		line 228 in file "../src/messages.c"
  7969 ;; Parameters:    Size  Location     Type
  7970 ;;		None
  7971 ;; Auto vars:     Size  Location     Type
  7972 ;;		None
  7973 ;; Return value:  Size  Location     Type
  7974 ;;		None               void
  7975 ;; Registers used:
  7976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7977 ;; Tracked objects:
  7978 ;;		On entry : 0/0
  7979 ;;		On exit  : 0/0
  7980 ;;		Unchanged: 0/0
  7981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7982 ;;      Params:         0       0       0       0       0
  7983 ;;      Locals:         0       0       0       0       0
  7984 ;;      Temps:          0       0       0       0       0
  7985 ;;      Totals:         0       0       0       0       0
  7986 ;;Total ram usage:        0 bytes
  7987 ;; Hardware stack levels used:    1
  7988 ;; Hardware stack levels required when called:    2
  7989 ;; This function calls:
  7990 ;;		_enter_sleep_mode
  7991 ;;		i2_check_msg
  7992 ;;		i2_in_high_int
  7993 ;;		i2_in_low_int
  7994 ;; This function is called by:
  7995 ;;		_InterruptHandlerHigh
  7996 ;; This function uses a non-reentrant model
  7997 ;;
  7998                           
  7999                           	psect	text48
  8000  001618                     __ptext48:
  8001                           	opt stack 0
  8002  001618                     _SleepIfOkay:
  8003                           	opt stack 17
  8004                           
  8005                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8006                           
  8007                           ;incstack = 0
  8008  001618  664D               	tstfsz	_MQ_Main_Willing_to_block,c
  8009  00161A  D001               	goto	i2l2543
  8010  00161C  0012               	return	
  8011  00161E                     i2l2543:
  8012                           
  8013                           ;messages.c: 232: }
  8014                           ;messages.c: 235: if (in_low_int()) {
  8015  00161E  ECA8  F00C         	call	i2_in_low_int	;wreg free
  8016  001622  5030               	movf	?i2_in_low_int+1,w,c
  8017  001624  102F               	iorwf	?i2_in_low_int,w,c
  8018  001626  A4D8               	btfss	status,2,c
  8019  001628  0012               	return	
  8020                           
  8021                           ;messages.c: 237: }
  8022                           ;messages.c: 240: if (!in_high_int()) {
  8023                           
  8024                           ;messages.c: 236: return;
  8025  00162A  EC79  F00D         	call	i2_in_high_int	;wreg free
  8026  00162E  502E               	movf	?i2_in_high_int+1,w,c
  8027  001630  102D               	iorwf	?i2_in_high_int,w,c
  8028  001632  B4D8               	btfsc	status,2,c
  8029  001634  0012               	return	
  8030                           
  8031                           ;messages.c: 242: }
  8032                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8033                           
  8034                           ;messages.c: 241: return;
  8035  001636  0101               	movlb	1	; () banked
  8036  001638  0E01               	movlw	high _ToMainHigh_MQ
  8037  00163A  6E2E               	movwf	i2check_msg@qptr+1,c
  8038  00163C  0101               	movlb	1	; () banked
  8039  00163E  0E36               	movlw	low _ToMainHigh_MQ
  8040  001640  6E2D               	movwf	i2check_msg@qptr,c
  8041  001642  EC0E  F00D         	call	i2_check_msg	;wreg free
  8042  001646  0900               	iorlw	0
  8043  001648  A4D8               	btfss	status,2,c
  8044  00164A  0012               	return	
  8045                           
  8046                           ;messages.c: 249: }
  8047                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8048                           
  8049                           ;messages.c: 248: return;
  8050  00164C  0101               	movlb	1	; () banked
  8051  00164E  0E01               	movlw	high _ToMainLow_MQ
  8052  001650  6E2E               	movwf	i2check_msg@qptr+1,c
  8053  001652  0101               	movlb	1	; () banked
  8054  001654  0E6C               	movlw	low _ToMainLow_MQ
  8055  001656  6E2D               	movwf	i2check_msg@qptr,c
  8056  001658  EC0E  F00D         	call	i2_check_msg	;wreg free
  8057  00165C  0900               	iorlw	0
  8058  00165E  B4D8               	btfsc	status,2,c
  8059                           
  8060                           ;messages.c: 252: }
  8061                           ;messages.c: 253: enter_sleep_mode();
  8062                           
  8063                           ;messages.c: 251: return;
  8064  001660  EC84  F00D         	call	_enter_sleep_mode	;wreg free
  8065  001664  0012               	return	
  8066  001666                     __end_of_SleepIfOkay:
  8067                           	opt stack 0
  8068                           pclatu	equ	0xFFB
  8069                           pclath	equ	0xFFA
  8070                           tblptru	equ	0xFF8
  8071                           tblptrh	equ	0xFF7
  8072                           tblptrl	equ	0xFF6
  8073                           tablat	equ	0xFF5
  8074                           prodh	equ	0xFF4
  8075                           prodl	equ	0xFF3
  8076                           intcon	equ	0xFF2
  8077                           intcon2	equ	0xFF1
  8078                           postinc0	equ	0xFEE
  8079                           fsr0h	equ	0xFEA
  8080                           fsr0l	equ	0xFE9
  8081                           wreg	equ	0xFE8
  8082                           indf1	equ	0xFE7
  8083                           fsr1h	equ	0xFE2
  8084                           fsr1l	equ	0xFE1
  8085                           bsr	equ	0xFE0
  8086                           indf2	equ	0xFDF
  8087                           postinc2	equ	0xFDE
  8088                           postdec2	equ	0xFDD
  8089                           fsr2h	equ	0xFDA
  8090                           fsr2l	equ	0xFD9
  8091                           status	equ	0xFD8
  8092                           
  8093 ;; *************** function i2_in_low_int *****************
  8094 ;; Defined at:
  8095 ;;		line 44 in file "../src/interrupts.c"
  8096 ;; Parameters:    Size  Location     Type
  8097 ;;		None
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;		None
  8100 ;; Return value:  Size  Location     Type
  8101 ;;                  2   46[COMRAM] int 
  8102 ;; Registers used:
  8103 ;;		wreg, status,2, status,0, cstack
  8104 ;; Tracked objects:
  8105 ;;		On entry : 0/0
  8106 ;;		On exit  : 0/0
  8107 ;;		Unchanged: 0/0
  8108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8109 ;;      Params:         2       0       0       0       0
  8110 ;;      Locals:         0       0       0       0       0
  8111 ;;      Temps:          0       0       0       0       0
  8112 ;;      Totals:         2       0       0       0       0
  8113 ;;Total ram usage:        2 bytes
  8114 ;; Hardware stack levels used:    1
  8115 ;; Hardware stack levels required when called:    1
  8116 ;; This function calls:
  8117 ;;		i2_in_high_int
  8118 ;; This function is called by:
  8119 ;;		_SleepIfOkay
  8120 ;; This function uses a non-reentrant model
  8121 ;;
  8122                           
  8123                           	psect	text49
  8124  001950                     __ptext49:
  8125                           	opt stack 0
  8126  001950                     i2_in_low_int:
  8127                           	opt stack 17
  8128                           
  8129                           ;interrupts.c: 45: if (INTCONbits.GIEL == 1) {
  8130                           
  8131                           ;incstack = 0
  8132  001950  ACF2               	btfss	intcon,6,c	;volatile
  8133  001952  D005               	goto	i2l2909
  8134                           
  8135                           ;interrupts.c: 46: return (0);
  8136  001954  0E00               	movlw	0
  8137  001956  6E30               	movwf	?i2_in_low_int+1,c
  8138  001958  0E00               	movlw	0
  8139  00195A  6E2F               	movwf	?i2_in_low_int,c
  8140  00195C  0012               	return	
  8141  00195E                     i2l2909:
  8142  00195E  EC79  F00D         	call	i2_in_high_int	;wreg free
  8143  001962  502E               	movf	?i2_in_high_int+1,w,c
  8144  001964  102D               	iorwf	?i2_in_high_int,w,c
  8145  001966  B4D8               	btfsc	status,2,c
  8146  001968  D005               	goto	i2l2917
  8147                           
  8148                           ;interrupts.c: 48: return (0);
  8149  00196A  0E00               	movlw	0
  8150  00196C  6E30               	movwf	?i2_in_low_int+1,c
  8151  00196E  0E00               	movlw	0
  8152  001970  6E2F               	movwf	?i2_in_low_int,c
  8153  001972  0012               	return	
  8154  001974                     i2l2917:
  8155                           
  8156                           ;interrupts.c: 50: return (1);
  8157  001974  0E00               	movlw	0
  8158  001976  6E30               	movwf	?i2_in_low_int+1,c
  8159  001978  0E01               	movlw	1
  8160  00197A  6E2F               	movwf	?i2_in_low_int,c
  8161  00197C  0012               	return	
  8162  00197E                     __end_ofi2_in_low_int:
  8163                           	opt stack 0
  8164                           pclatu	equ	0xFFB
  8165                           pclath	equ	0xFFA
  8166                           tblptru	equ	0xFF8
  8167                           tblptrh	equ	0xFF7
  8168                           tblptrl	equ	0xFF6
  8169                           tablat	equ	0xFF5
  8170                           prodh	equ	0xFF4
  8171                           prodl	equ	0xFF3
  8172                           intcon	equ	0xFF2
  8173                           intcon2	equ	0xFF1
  8174                           postinc0	equ	0xFEE
  8175                           fsr0h	equ	0xFEA
  8176                           fsr0l	equ	0xFE9
  8177                           wreg	equ	0xFE8
  8178                           indf1	equ	0xFE7
  8179                           fsr1h	equ	0xFE2
  8180                           fsr1l	equ	0xFE1
  8181                           bsr	equ	0xFE0
  8182                           indf2	equ	0xFDF
  8183                           postinc2	equ	0xFDE
  8184                           postdec2	equ	0xFDD
  8185                           fsr2h	equ	0xFDA
  8186                           fsr2l	equ	0xFD9
  8187                           status	equ	0xFD8
  8188                           
  8189 ;; *************** function i2_in_high_int *****************
  8190 ;; Defined at:
  8191 ;;		line 36 in file "../src/interrupts.c"
  8192 ;; Parameters:    Size  Location     Type
  8193 ;;		None
  8194 ;; Auto vars:     Size  Location     Type
  8195 ;;		None
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  2   44[COMRAM] int 
  8198 ;; Registers used:
  8199 ;;		wreg, status,2
  8200 ;; Tracked objects:
  8201 ;;		On entry : 0/0
  8202 ;;		On exit  : 0/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8205 ;;      Params:         2       0       0       0       0
  8206 ;;      Locals:         0       0       0       0       0
  8207 ;;      Temps:          0       0       0       0       0
  8208 ;;      Totals:         2       0       0       0       0
  8209 ;;Total ram usage:        2 bytes
  8210 ;; Hardware stack levels used:    1
  8211 ;; This function calls:
  8212 ;;		Nothing
  8213 ;; This function is called by:
  8214 ;;		_SleepIfOkay
  8215 ;;		i2_in_low_int
  8216 ;; This function uses a non-reentrant model
  8217 ;;
  8218                           
  8219                           	psect	text50
  8220  001AF2                     __ptext50:
  8221                           	opt stack 0
  8222  001AF2                     i2_in_high_int:
  8223                           	opt stack 17
  8224                           
  8225                           ;interrupts.c: 37: return (!INTCONbits.GIEH);
  8226                           
  8227                           ;incstack = 0
  8228  001AF2  0E00               	movlw	0
  8229  001AF4  AEF2               	btfss	intcon,7,c	;volatile
  8230  001AF6  0E01               	movlw	1
  8231  001AF8  6E2D               	movwf	?i2_in_high_int,c
  8232  001AFA  6A2E               	clrf	?i2_in_high_int+1,c
  8233  001AFC  0012               	return	
  8234  001AFE                     __end_ofi2_in_high_int:
  8235                           	opt stack 0
  8236                           pclatu	equ	0xFFB
  8237                           pclath	equ	0xFFA
  8238                           tblptru	equ	0xFF8
  8239                           tblptrh	equ	0xFF7
  8240                           tblptrl	equ	0xFF6
  8241                           tablat	equ	0xFF5
  8242                           prodh	equ	0xFF4
  8243                           prodl	equ	0xFF3
  8244                           intcon	equ	0xFF2
  8245                           intcon2	equ	0xFF1
  8246                           postinc0	equ	0xFEE
  8247                           fsr0h	equ	0xFEA
  8248                           fsr0l	equ	0xFE9
  8249                           wreg	equ	0xFE8
  8250                           indf1	equ	0xFE7
  8251                           fsr1h	equ	0xFE2
  8252                           fsr1l	equ	0xFE1
  8253                           bsr	equ	0xFE0
  8254                           indf2	equ	0xFDF
  8255                           postinc2	equ	0xFDE
  8256                           postdec2	equ	0xFDD
  8257                           fsr2h	equ	0xFDA
  8258                           fsr2l	equ	0xFD9
  8259                           status	equ	0xFD8
  8260                           
  8261 ;; *************** function i2_check_msg *****************
  8262 ;; Defined at:
  8263 ;;		line 222 in file "../src/messages.c"
  8264 ;; Parameters:    Size  Location     Type
  8265 ;;  qptr            2   44[COMRAM] PTR struct __msg_queue
  8266 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8267 ;; Auto vars:     Size  Location     Type
  8268 ;;		None
  8269 ;; Return value:  Size  Location     Type
  8270 ;;                  1    wreg      unsigned char 
  8271 ;; Registers used:
  8272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8273 ;; Tracked objects:
  8274 ;;		On entry : 0/0
  8275 ;;		On exit  : 0/0
  8276 ;;		Unchanged: 0/0
  8277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8278 ;;      Params:         2       0       0       0       0
  8279 ;;      Locals:         0       0       0       0       0
  8280 ;;      Temps:          1       0       0       0       0
  8281 ;;      Totals:         3       0       0       0       0
  8282 ;;Total ram usage:        3 bytes
  8283 ;; Hardware stack levels used:    1
  8284 ;; This function calls:
  8285 ;;		Nothing
  8286 ;; This function is called by:
  8287 ;;		_SleepIfOkay
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           	psect	text51
  8292  001A1C                     __ptext51:
  8293                           	opt stack 0
  8294  001A1C                     i2_check_msg:
  8295                           	opt stack 18
  8296                           
  8297                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8298                           
  8299                           ;incstack = 0
  8300  001A1C  EE20 F035          	lfsr	2,53
  8301  001A20  502D               	movf	i2check_msg@qptr,w,c
  8302  001A22  26D9               	addwf	fsr2l,f,c
  8303  001A24  502E               	movf	i2check_msg@qptr+1,w,c
  8304  001A26  22DA               	addwfc	fsr2h,f,c
  8305  001A28  50DF               	movf	indf2,w,c
  8306  001A2A  6E2F               	movwf	??i2_check_msg& (0+255),c
  8307  001A2C  502F               	movf	??i2_check_msg,w,c
  8308  001A2E  0D0D               	mullw	13
  8309  001A30  50F3               	movf	prodl,w,c
  8310  001A32  242D               	addwf	i2check_msg@qptr,w,c
  8311  001A34  6ED9               	movwf	fsr2l,c
  8312  001A36  50F4               	movf	prodh,w,c
  8313  001A38  202E               	addwfc	i2check_msg@qptr+1,w,c
  8314  001A3A  6EDA               	movwf	fsr2h,c
  8315  001A3C  50DF               	movf	indf2,w,c
  8316  001A3E  0012               	return	
  8317  001A40                     __end_ofi2_check_msg:
  8318                           	opt stack 0
  8319                           pclatu	equ	0xFFB
  8320                           pclath	equ	0xFFA
  8321                           tblptru	equ	0xFF8
  8322                           tblptrh	equ	0xFF7
  8323                           tblptrl	equ	0xFF6
  8324                           tablat	equ	0xFF5
  8325                           prodh	equ	0xFF4
  8326                           prodl	equ	0xFF3
  8327                           intcon	equ	0xFF2
  8328                           intcon2	equ	0xFF1
  8329                           postinc0	equ	0xFEE
  8330                           fsr0h	equ	0xFEA
  8331                           fsr0l	equ	0xFE9
  8332                           wreg	equ	0xFE8
  8333                           indf1	equ	0xFE7
  8334                           fsr1h	equ	0xFE2
  8335                           fsr1l	equ	0xFE1
  8336                           bsr	equ	0xFE0
  8337                           indf2	equ	0xFDF
  8338                           postinc2	equ	0xFDE
  8339                           postdec2	equ	0xFDD
  8340                           fsr2h	equ	0xFDA
  8341                           fsr2l	equ	0xFD9
  8342                           status	equ	0xFD8
  8343                           
  8344 ;; *************** function _enter_sleep_mode *****************
  8345 ;; Defined at:
  8346 ;;		line 202 in file "../src/messages.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;		None
  8349 ;; Auto vars:     Size  Location     Type
  8350 ;;		None
  8351 ;; Return value:  Size  Location     Type
  8352 ;;		None               void
  8353 ;; Registers used:
  8354 ;;		None
  8355 ;; Tracked objects:
  8356 ;;		On entry : 0/0
  8357 ;;		On exit  : 0/0
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8360 ;;      Params:         0       0       0       0       0
  8361 ;;      Locals:         0       0       0       0       0
  8362 ;;      Temps:          0       0       0       0       0
  8363 ;;      Totals:         0       0       0       0       0
  8364 ;;Total ram usage:        0 bytes
  8365 ;; Hardware stack levels used:    1
  8366 ;; This function calls:
  8367 ;;		Nothing
  8368 ;; This function is called by:
  8369 ;;		_SleepIfOkay
  8370 ;; This function uses a non-reentrant model
  8371 ;;
  8372                           
  8373                           	psect	text52
  8374  001B08                     __ptext52:
  8375                           	opt stack 0
  8376  001B08                     _enter_sleep_mode:
  8377                           	opt stack 18
  8378                           
  8379                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8380                           
  8381                           ;incstack = 0
  8382  001B08  8ED3               	bsf	4051,7,c	;volatile
  8383  001B0A  0003               	sleep		;# 
  8384  001B0C  0012               	return	
  8385  001B0E                     __end_of_enter_sleep_mode:
  8386                           	opt stack 0
  8387                           pclatu	equ	0xFFB
  8388                           pclath	equ	0xFFA
  8389                           tblptru	equ	0xFF8
  8390                           tblptrh	equ	0xFF7
  8391                           tblptrl	equ	0xFF6
  8392                           tablat	equ	0xFF5
  8393                           prodh	equ	0xFF4
  8394                           prodl	equ	0xFF3
  8395                           intcon	equ	0xFF2
  8396                           intcon2	equ	0xFF1
  8397                           postinc0	equ	0xFEE
  8398                           fsr0h	equ	0xFEA
  8399                           fsr0l	equ	0xFE9
  8400                           wreg	equ	0xFE8
  8401                           indf1	equ	0xFE7
  8402                           fsr1h	equ	0xFE2
  8403                           fsr1l	equ	0xFE1
  8404                           bsr	equ	0xFE0
  8405                           indf2	equ	0xFDF
  8406                           postinc2	equ	0xFDE
  8407                           postdec2	equ	0xFDD
  8408                           fsr2h	equ	0xFDA
  8409                           fsr2l	equ	0xFD9
  8410                           status	equ	0xFD8
  8411                           
  8412 ;; *************** function _ReadADC *****************
  8413 ;; Defined at:
  8414 ;;		line 24 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcread.c"
  8415 ;; Parameters:    Size  Location     Type
  8416 ;;		None
  8417 ;; Auto vars:     Size  Location     Type
  8418 ;;		None
  8419 ;; Return value:  Size  Location     Type
  8420 ;;                  2   44[COMRAM] int 
  8421 ;; Registers used:
  8422 ;;		wreg, status,2
  8423 ;; Tracked objects:
  8424 ;;		On entry : 0/0
  8425 ;;		On exit  : 0/0
  8426 ;;		Unchanged: 0/0
  8427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8428 ;;      Params:         2       0       0       0       0
  8429 ;;      Locals:         0       0       0       0       0
  8430 ;;      Temps:          0       0       0       0       0
  8431 ;;      Totals:         2       0       0       0       0
  8432 ;;Total ram usage:        2 bytes
  8433 ;; Hardware stack levels used:    1
  8434 ;; This function calls:
  8435 ;;		Nothing
  8436 ;; This function is called by:
  8437 ;;		_InterruptHandlerHigh
  8438 ;; This function uses a non-reentrant model
  8439 ;;
  8440                           
  8441                           	psect	text53
  8442  001AFE                     __ptext53:
  8443                           	opt stack 0
  8444  001AFE                     _ReadADC:
  8445                           	opt stack 19
  8446                           
  8447                           ;incstack = 0
  8448  001AFE  50C4               	movf	4036,w,c	;volatile
  8449  001B00  6E2E               	movwf	?_ReadADC+1,c
  8450  001B02  50C3               	movf	4035,w,c	;volatile
  8451  001B04  6E2D               	movwf	?_ReadADC,c
  8452  001B06  0012               	return	
  8453  001B08                     __end_of_ReadADC:
  8454                           	opt stack 0
  8455  0000                     pclatu	equ	0xFFB
  8456                           pclath	equ	0xFFA
  8457                           tblptru	equ	0xFF8
  8458                           tblptrh	equ	0xFF7
  8459                           tblptrl	equ	0xFF6
  8460                           tablat	equ	0xFF5
  8461                           prodh	equ	0xFF4
  8462                           prodl	equ	0xFF3
  8463                           intcon	equ	0xFF2
  8464                           intcon2	equ	0xFF1
  8465                           postinc0	equ	0xFEE
  8466                           fsr0h	equ	0xFEA
  8467                           fsr0l	equ	0xFE9
  8468                           wreg	equ	0xFE8
  8469                           indf1	equ	0xFE7
  8470                           fsr1h	equ	0xFE2
  8471                           fsr1l	equ	0xFE1
  8472                           bsr	equ	0xFE0
  8473                           indf2	equ	0xFDF
  8474                           postinc2	equ	0xFDE
  8475                           postdec2	equ	0xFDD
  8476                           fsr2h	equ	0xFDA
  8477                           fsr2l	equ	0xFD9
  8478                           status	equ	0xFD8
  8479                           pclatu	equ	0xFFB
  8480                           pclath	equ	0xFFA
  8481                           tblptru	equ	0xFF8
  8482                           tblptrh	equ	0xFF7
  8483                           tblptrl	equ	0xFF6
  8484                           tablat	equ	0xFF5
  8485                           prodh	equ	0xFF4
  8486                           prodl	equ	0xFF3
  8487                           intcon	equ	0xFF2
  8488                           intcon2	equ	0xFF1
  8489                           postinc0	equ	0xFEE
  8490                           fsr0h	equ	0xFEA
  8491                           fsr0l	equ	0xFE9
  8492                           wreg	equ	0xFE8
  8493                           indf1	equ	0xFE7
  8494                           fsr1h	equ	0xFE2
  8495                           fsr1l	equ	0xFE1
  8496                           bsr	equ	0xFE0
  8497                           indf2	equ	0xFDF
  8498                           postinc2	equ	0xFDE
  8499                           postdec2	equ	0xFDD
  8500                           fsr2h	equ	0xFDA
  8501                           fsr2l	equ	0xFD9
  8502                           status	equ	0xFD8
  8503                           
  8504                           	psect	rparam
  8505  0000                     pclatu	equ	0xFFB
  8506                           pclath	equ	0xFFA
  8507                           tblptru	equ	0xFF8
  8508                           tblptrh	equ	0xFF7
  8509                           tblptrl	equ	0xFF6
  8510                           tablat	equ	0xFF5
  8511                           prodh	equ	0xFF4
  8512                           prodl	equ	0xFF3
  8513                           intcon	equ	0xFF2
  8514                           intcon2	equ	0xFF1
  8515                           postinc0	equ	0xFEE
  8516                           fsr0h	equ	0xFEA
  8517                           fsr0l	equ	0xFE9
  8518                           wreg	equ	0xFE8
  8519                           indf1	equ	0xFE7
  8520                           fsr1h	equ	0xFE2
  8521                           fsr1l	equ	0xFE1
  8522                           bsr	equ	0xFE0
  8523                           indf2	equ	0xFDF
  8524                           postinc2	equ	0xFDE
  8525                           postdec2	equ	0xFDD
  8526                           fsr2h	equ	0xFDA
  8527                           fsr2l	equ	0xFD9
  8528                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     74      78
    BANK0           128     75      79
    BANK1           256     53     215
    BANK2           256      0      54
    BANK3           256      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK1[11]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), timer0_int_handler@val(COMRAM[2]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK1[11]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), timer0_int_handler@val(COMRAM[2]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> main@t0thread_data(BANK1[2]), main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[5]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), NULL(NULL[0]), timer0_int_handler@val(COMRAM[2]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> main@t0thread_data(BANK1[2]), main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[5]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), NULL(NULL[0]), timer0_int_handler@val(COMRAM[2]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> main@ic(BANK1[28]), i2c_int_handler@error_buf(BANK0[3]), NULL(NULL[0]), timer0_int_handler@val(COMRAM[2]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> main@uc(BANK1[5]), NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> main@msgtype(BANK1[1]), timer0_int_handler@msgtype(COMRAM[2]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), timer0_int_handler@val(COMRAM[2]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK1[11]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), timer0_int_handler@val(COMRAM[2]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> main@t0thread_data(BANK1[2]), main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[5]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), NULL(NULL[0]), timer0_int_handler@val(COMRAM[2]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), i2c_int_handler@msgbuffer(BANK0[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), NULL(NULL[0]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), NULL(NULL[0]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    init_timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_i2c_int_handler
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_timer0_lthread
    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _timer0_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _initADC->_OpenADC
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0   12369
                                             74 BANK0      1     1      0
                                              0 BANK1     53    53      0
                         _OpenTimer0
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                            _initADC
                           _init_i2c
                        _init_queues
                _init_timer0_lthread
                _init_timer1_lthread
                     _init_uart_recv
                     _returnADCValue
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     344
                                             38 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    2583
                                             64 BANK0     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8    2583
                                             64 BANK0     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     263
                                             38 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    1975
                                             60 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1653
                                             48 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     168
                                             38 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _returnADCValue                                       4     2      2      24
                                             38 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      86
                                             38 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      86
                                             38 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer0_lthread                                  2     0      2      86
                                             38 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     390
                                             42 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     390
                                             38 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                             38 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initADC                                              4     4      0     283
                                             43 BANK0      4     4      0
                         _ConvertADC
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             38 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             38 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     270
                                             44 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             42 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             40 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             38 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                             38 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             38 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2077
                                             62 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2077
                                             62 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1883
                                             48 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     504
                                             38 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     284
                                             38 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             38 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    2416
                                             27 COMRAM    17    17      0
              _uart_recv_int_handler
                       i1_ConvertADC
 ---------------------------------------------------------------------------------
 (6) i1_ConvertADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    2416
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2393
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    1943
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               18    18      0    3446
                                             72 COMRAM     2     2      0
                                             22 BANK0     16    16      0
                            _ReadADC
                        _SleepIfOkay
                    _i2c_int_handler
                       i2_ConvertADC
 ---------------------------------------------------------------------------------
 (11) i2_ConvertADC                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    24    24      0    3187
                                             70 COMRAM     2     2      0
                                              0 BANK0     22    22      0
                 _ToMainHigh_sendmsg
                       _handle_start
                   i2_returnADCValue
            i2_start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (12) i2_start_i2c_slave_reply                             5     3      2     264
                                             44 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (12) i2_returnADCValue                                    4     2      2      77
                                             44 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      22
                                             44 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    2393
                                             66 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    1943
                                             54 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     662
                                             44 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             46 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             44 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             44 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ReadADC                                             2     0      2       0
                                             44 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _initADC
     _ConvertADC
     _OpenADC
   _init_i2c
   _init_queues
     _init_queue
   _init_timer0_lthread
   _init_timer1_lthread
   _init_uart_recv
   _returnADCValue
   _start_i2c_slave_reply
   _timer0_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   i1_ConvertADC

 _InterruptHandlerHigh (ROOT)
   _ReadADC
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
     i2_returnADCValue
     i2_start_i2c_slave_reply
   i2_ConvertADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      36       8       21.1%
BITBANK1           100      0       0      10        0.0%
BANK1              100     35      D7       6       84.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     4B      4F       5       61.7%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     4A      4E       1       61.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AA       9        0.0%
DATA                 0      0     1AA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sun Feb  9 00:54:19 2014

                main@uthread_data 01AD          _MQ_Main_Willing_to_block 004D  
                     _SSPSTATbits 000FC7         __end_of_ToMainLow_recvmsg 1774  
                              bsr 000FE0         __end_of_ToMainLow_sendmsg 19F6  
                ??_returnADCValue 00A8                      __CFG_CP0$OFF 000000  
                             l500 1248                               l501 124A  
                             l327 07F0                               l424 1380  
                             l445 19A2                               l446 19A4  
                             l494 1218                               l727 1A9E  
                             l498 1238                               l499 123A  
                  _FromMainLow_MQ 0100                               wreg 000FE8  
                    __CFG_IESO$ON 000000                      ?_in_high_int 00A6  
                ??_init_uart_recv 00A8                              l1039 12F6  
                            l2221 0B6C                              l2217 0AE8  
                            l2503 0AC8                              l2435 13CC  
                            l2621 16E0                              l2453 0C36  
                            l2607 111E                              l2711 080C  
                            l2473 1600                              l2721 0844  
                            l2705 079E                              l2467 15DC  
                            l2715 0822                              l2723 085C  
                            l2707 07F6                              l2741 097C  
                            l2487 0A02                              l2591 10C2  
                            l2735 08D8                              l2727 087C  
                            l2577 169C                              l2569 167A  
                            l2841 12AE                              l2737 092A  
                            l2729 089A                              l2845 12E2  
                            l2837 1294                              l2775 121A  
                            l2767 1204                              l2599 10F0  
                            l2839 12A6                              l2697 075C  
                            _LATB 000F8A                              u1580 112C  
                            u1586 112E                              u1947 1AA0  
                 _FromMainHigh_MQ 0200                     __CFG_FCMEN$ON 000000  
          ?_block_on_To_msgqueues 0001                              _main 06B2  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            indf1 000FE7                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                     main@msgtype 01B9                        i1_send_msg 0F4E  
                            pclat 000FFA                       i2_check_msg 1A1C  
                            prodh 000FF4                              prodl 000FF3  
           handle_start@data_read 002D                              start 00BA  
                   __CFG_FOSC2$ON 000000                        i2_send_msg 0FF8  
       ToMainHigh_recvmsg@msgtype 00BE                   __end_of_ReadADC 1B08  
                  send_msg@length 00B2     i2start_i2c_slave_reply@length 0031  
                 __end_of_OpenADC 1384                       _Delay1KTCYx 1A9A  
                           ?_main 0001                             _T0CON 000FD5  
                           i1l402 0074                             i2l111 0E4E  
                           i1l512 1A6C                             i2l121 04D8  
                 __end_of___lwmod 1300                        i1memcpy@d1 0001  
                           i2l123 016A                             i2l141 032A  
                           i2l127 01A8                             i2l155 04EA  
                           i2l149 0456                        i1memcpy@s1 0003  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR1H 000FCF  
                           _TMR0L 000FD6                             _TMR1L 000FCE  
                           _SPBRG 000FAF                             _TRISB 000F93  
                           _TXSTA 000FAC                        i2memcpy@d1 002D  
                      i2memcpy@s1 002F                      ?_init_queues 0001  
              returnADCValue@temp 00A8         __size_of_enter_sleep_mode 0006  
                 __end_of_initADC 1732                   __end_of_in_main 16F0  
      ToMainLow_recvmsg@maxlength 00C2           timer0_lthread@msgbuffer 00C6  
                      _ConvertADC 1B0E           i2c_configure_slave@addr 00A6  
                           tablat 000FF5                             status 000FD8  
                __end_ofi1_memcpy 17F6                  __end_ofi2_memcpy 1836  
                 __initialization 1836                      __end_of_main 0996  
      __size_of_ToMainLow_recvmsg 0042        __size_of_ToMainLow_sendmsg 0026  
           __size_ofi2_in_low_int 002E     __size_of_FromMainHigh_sendmsg 0036  
                          ??_main 00CA                   send_msg@msgtype 00B3  
                   __activetblptr 000002                   send_msg@tlength 00B7  
            __end_of_handle_start 0E9A                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
         ??_uart_recv_int_handler 001B                            i1l2931 17E4  
                          i1l2925 17C8                            i2l2321 039A  
                          i2l2323 03DC                            i1l2955 0F86  
                          i2l2237 0E6A                            i2l2261 0160  
                          i2l2239 0E82                            i2l2327 03EA  
                          i2l2255 014C                            i1l2983 11C4  
                          i2l2361 054E                            i2l2281 0208  
                      _OpenTimer0 197E                            i2l2355 04EE  
                          i2l2291 0244                            i1l2995 0066  
                          i2l2349 04AC                    __CFG_WDTEN$OFF 000000  
                          i2l2543 161E                            i2l2279 01DC  
                          i2l2377 066A                            i2l2369 05D4  
                          i2l2297 025C                            i2l2299 029C  
                          i2l2813 0ED4                            i2l2851 0CFA  
                          i2l2827 0F10                            i2l2819 0EDE  
                          i2l2917 1974                            i2l2909 195E  
                          i2l2941 1824                            i2l2935 1808  
                          i2l2855 0D6E                            i2l2873 1030  
     __end_of_i2c_configure_slave 19D0                     ??_SleepIfOkay 0031  
              __size_of_ReadUSART 001E                            _OSCCON 000FD3  
                          _SPBRGH 000FB0                            _SSPADD 000FC8  
                          _SSPBUF 000FC9    __size_of_start_i2c_slave_reply 010E  
                     ?i1_send_msg 000B                         ??_ReadADC 002F  
   __end_of_start_i2c_slave_reply 0BDA                timer0_lthread@tptr 00C0  
                       ??_OpenADC 00A8                      i2_in_low_int 1950  
                     ?i2_send_msg 0037                    __CFG_XINST$OFF 000000  
              __size_of_OpenUSART 0092                   _i2c_int_handler 00BE  
                OpenTimer0@config 00A6                            _ic_ptr 00CB  
                       ??___lwmod 00AA                     main@msgbuffer 01A2  
                __end_of_init_i2c 15BA                            _memcpy 15BA  
                          clear_0 183C                            clear_1 1848  
                          _uc_ptr 004B                            main@ic 01BB  
                          main@uc 01B4                  __end_of_recv_msg 0ACC  
     start_i2c_slave_reply@length 00AA                         ??_initADC 00AB  
                       ??_in_main 00AC                  __end_of_send_msg 0CDE  
                 initADC@ADCValue 00AD           i2c_int_handler@i2c_data 0092  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                       init_queue@i 00A9  
        ?i2_start_i2c_slave_reply 002D          ToMainLow_recvmsg@msgtype 00BE  
            __size_of_in_high_int 0012                       ?_ConvertADC 0001  
                 __CFG_FOSC$HSPLL 000000                        __accesstop 0080  
         __end_of__initialization 186A        __end_of_ToMainHigh_recvmsg 17B6  
      __end_of_ToMainHigh_sendmsg 1A1C       __end_of_init_timer0_lthread 1AD4  
     __end_of_init_timer1_lthread 1AC2               __end_of_SleepIfOkay 1666  
                  __pcstackCOMRAM 0001                      __pidataBANK0 1B1A  
          __size_ofi2_in_high_int 000C                __size_of_check_msg 0036  
       __size_ofi2_returnADCValue 001E                 __end_of_ReadUSART 1A7C  
             __size_ofi1_send_msg 00AA                         ?i1_memcpy 0001  
   __size_of_InterruptHandlerHigh 0F46       __end_of_InterruptHandlerLow 00BA  
                       ?i2_memcpy 002D                     _ToMainHigh_MQ 0136  
                _enter_sleep_mode 1B08               __size_ofi2_send_msg 00AA  
            timer1_lthread@length 00C4                     ReadUSART@data 0001  
               __end_of_OpenUSART 1276                     check_msg@qptr 00A6  
            timer1_lthread@retval 00C9           ??_block_on_To_msgqueues 00AC  
            __size_of_init_queues 006E                        __pbssBANK1 0100  
                      __pbssBANK2 0200                       ?_OpenTimer0 0001  
                      __pnvCOMRAM 004B           __end_of_i2c_int_handler 06B2  
                    ?i2_check_msg 002D                timer1_lthread@tptr 00C0  
               recv_msg@maxlength 00B2                   recv_msg@msgtype 00B3  
                 recv_msg@tlength 00BA             __size_of_handle_start 00C8  
                    ?_Delay1KTCYx 0001                           ?_memcpy 00A6  
             __size_of_ConvertADC 0004           __size_of_timer0_lthread 0072  
         __size_of_timer1_lthread 0072   __end_ofi2_start_i2c_slave_reply 0DD2  
                      ??i1_memcpy 0007                        ??i2_memcpy 0033  
      i2start_i2c_slave_reply@msg 002D                  i1send_msg@length 000D  
                   i2_in_high_int 1AF2                           _SSPCON1 000FC6  
                         _SSPCON2 000FC5                           _SSPSTAT 000FC7  
               __end_of_check_msg 191E                         ?_init_i2c 00A6  
                     _SleepIfOkay 1618                           _ReadADC 1AFE  
                       ?_recv_msg 00B0                           _OpenADC 1300  
                      _in_low_int 1666                      _handle_start 0DD2  
                         __Hparam 0000                         ?_send_msg 00B0  
                         __Lparam 0000                  init_uart_recv@uc 00A6  
                         ___lwmod 1276                     ?i1_ConvertADC 0001  
                 __CFG_STVREN$OFF 000000                           __pcinit 1836  
                 __size_of_memcpy 005E                        _init_queue 1384  
                         __ramtop 0400               __size_of_OpenTimer0 002A  
                         __ptext0 06B2                           __ptext1 1874  
                         __ptext2 13FE                           __ptext3 1470  
                         __ptext4 1276                           __ptext5 18B2  
                         __ptext6 0BDA                           __ptext7 0ACC  
                         __ptext8 191E                           __ptext9 1A40  
                       _T0CONbits 000FD5                           _initADC 16F0  
                         _in_main 16AC                    ?i2_in_high_int 002D  
                  OpenADC@config2 00A6           __size_of_returnADCValue 0032  
                  __pintcode_body 0E9A              end_of_initialization 186A  
         timer1_lthread@msgbuffer 00C6      __end_of_FromMainHigh_sendmsg 18E8  
                   ?i2_ConvertADC 0001    __size_of_uart_recv_int_handler 009C  
      FromMainHigh_sendmsg@length 00BF                           memcpy@d 00AC  
                         memcpy@n 00AA                           memcpy@s 00AE  
   __end_of_uart_recv_int_handler 11E4                        ??_init_i2c 00A8  
     i2c_int_handler@data_written 0090                     __Lmediumconst 0000  
                         int_func 0E9A                      ??i1_send_msg 0011  
                   ?_uart_lthread 00A6           __size_of_init_uart_recv 001E  
                ?_i2c_int_handler 0001                        ??_recv_msg 00B7  
                    ??i2_send_msg 003D                        ??_send_msg 00B6  
                       _RCSTAbits 000FAB                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
       ToMainHigh_sendmsg@msgtype 0043                    ??i1_ConvertADC 0001  
                i2_returnADCValue 1A7C                __end_ofi1_send_msg 0FF8  
     FromMainHigh_sendmsg@msgtype 00BC                         _TRISCbits 000F94  
            i2returnADCValue@temp 002F                __end_ofi2_send_msg 10A2  
                  ??i2_ConvertADC 002D                      ??_ConvertADC 00A6  
                  ??_uart_lthread 00AE                         _TXSTAbits 000FAC  
                      main@length 01BA                       ?_in_low_int 00A8  
           timer0_lthread@msgtype 00C2  __size_ofi2_start_i2c_slave_reply 00F4  
           _start_i2c_slave_reply 0ACC      __size_of_i2c_configure_slave 0028  
            __size_ofi2_check_msg 0024          __end_of_enter_sleep_mode 1B0E  
              _ToMainHigh_recvmsg 1774                         i1memcpy@d 0007  
              _ToMainHigh_sendmsg 19F6                         i1memcpy@n 0005  
                       i1memcpy@s 0009                    _timer0_lthread 1470  
                     ?_init_queue 00A6                         i2memcpy@d 0033  
                       i2memcpy@n 0031                         i2memcpy@s 0035  
              __end_of_ConvertADC 1B12                    _timer1_lthread 13FE  
                  __end_of_memcpy 1618                 _enable_interrupts 1AE6  
            __size_of_Delay1KTCYx 0016               ?_ToMainHigh_recvmsg 00BE  
                 ??i2_in_high_int 002F          i2c_int_handler@data_read 0095  
             ?_ToMainHigh_sendmsg 0043                ?_enable_interrupts 0001  
             start_initialization 1836                     ??_in_high_int 00A8  
                       _ReadUSART 1A5E                 __size_ofi1_memcpy 0040  
               __size_ofi2_memcpy 0040             i2c_int_handler@length 008B  
             ??_enable_interrupts 00A6                      ??_OpenTimer0 00A6  
  __size_of_block_on_To_msgqueues 00A6     __end_of_block_on_To_msgqueues 1148  
                       _OpenUSART 11E4      __end_of_InterruptHandlerHigh 0F4E  
                      init_i2c@ic 00A6              ??_ToMainHigh_recvmsg 00C2  
            ??_ToMainHigh_sendmsg 0046            __end_of_timer0_lthread 14E2  
        i2c_int_handler@error_buf 008D                       __pdataBANK0 00CD  
          __end_of_timer1_lthread 1470         __end_of_enable_interrupts 1AF2  
                        ??_memcpy 00AC             timer1_lthread@msgtype 00C2  
    __size_of_init_timer0_lthread 0012              _FromMainHigh_sendmsg 18B2  
    __size_of_init_timer1_lthread 0012                __end_of_OpenTimer0 19A8  
        i2c_int_handler@msg_ready 0094          i2c_int_handler@msgbuffer 0080  
                     __pbssCOMRAM 004D                        ?_ReadUSART 0001  
                   ??_init_queues 00AA                     __pcstackBANK0 0080  
                   __pcstackBANK1 01A2               __size_of_in_low_int 0046  
        start_i2c_slave_reply@msg 00A6                    _returnADCValue 191E  
             __CFG_CCP2MX$DEFAULT 000000              __end_ofi1_ConvertADC 1B16  
                 Delay1KTCYx@unit 00A6          ToMainLow_sendmsg@msgtype 0017  
    __size_of_InterruptHandlerLow 00A2               __end_of_in_high_int 1AE6  
                      ?_OpenUSART 00A6                      ?_SleepIfOkay 0001  
           ToMainLow_recvmsg@data 00C0                      _ToMainLow_MQ 016C  
             __size_of_init_queue 007A                    _init_uart_recv 1A40  
                        ?_ReadADC 002D                         _check_msg 18E8  
                       __pnvBANK0 00CB            ?_start_i2c_slave_reply 00A6  
               __size_of_init_i2c 006A                 OpenADC@portconfig 00A7  
                        ?_OpenADC 00A6                      recv_msg@data 00B5  
                    recv_msg@qmsg 00BC                      recv_msg@slot 00B9  
                    recv_msg@qptr 00B0                 __size_of_recv_msg 0136  
                       __pintcode 0008                 __size_of_send_msg 0104  
                 ?_timer0_lthread 00C0                          ?___lwmod 00A6  
            __end_ofi2_ConvertADC 1B1A                   ?_timer1_lthread 00C0  
           ?_FromMainHigh_sendmsg 00BC                       __pintcodelo 0018  
          ToMainHigh_recvmsg@data 00C0              __end_of_uart_lthread 18B2  
                        ?_initADC 0001        i2c_int_handler@msg_to_send 0093  
                        ?_in_main 00AA               uart_lthread@msgtype 00A8  
                        _ADCValue 00CD           init_timer0_lthread@tptr 00A6  
          __end_of_returnADCValue 1950             ToMainLow_sendmsg@data 0018  
        __end_ofi2_returnADCValue 1A9A                  uart_lthread@uptr 00A6  
          __end_of_init_uart_recv 1A5E               __end_of_init_queues 1550  
                   OpenADC@config 00AA                          _LATBbits 000F8A  
                 i2check_msg@qptr 002D                        ?_check_msg 00A6  
                        _IPR1bits 000F9F                          _PIE1bits 000F9D  
         i2_start_i2c_slave_reply 0CDE                     ?i2_in_low_int 002F  
                        _PIR1bits 000F9E            ToMainHigh_sendmsg@data 0044  
                        _RCONbits 000FD0                  __CFG_WDTPS$32768 000000  
      __size_of_enable_interrupts 000C                 i1send_msg@msgtype 000E  
               i1send_msg@tlength 0012                        _ADCON0bits 000FC2  
            timer0_lthread@length 00C4                          i1_memcpy 17B6  
            _InterruptHandlerHigh 0008                       ??_ReadUSART 0001  
                        i2_memcpy 17F6              timer0_lthread@retval 00C9  
                 ?_returnADCValue 00A6                       _in_high_int 1AD4  
                    send_msg@data 00B4               _i2c_configure_slave 19A8  
                    send_msg@qmsg 00BA                      send_msg@slot 00B9  
                    send_msg@qptr 00B0                       _INTCON2bits 000FF1  
           uart_lthread@msgbuffer 00AC                   ?_init_uart_recv 00A6  
                     ??_OpenUSART 00A8                   OpenUSART@config 00AB  
                  ??i2_in_low_int 0031             _uart_recv_int_handler 1148  
                    ??_in_low_int 00AA                  __size_of_ReadADC 000A  
                        __Hrparam 0000                  __size_of_OpenADC 0084  
            ?_i2c_configure_slave 0001                          __Lrparam 0000  
               ?_enter_sleep_mode 0001            ??_FromMainHigh_sendmsg 00BF  
        __size_of_i2c_int_handler 05F4                ??_enter_sleep_mode 002D  
                __size_of___lwmod 008A                      ??_init_queue 00A8  
        FromMainHigh_sendmsg@data 00BD           ToMainLow_sendmsg@length 001A  
               main@t0thread_data 01B2             ?_InterruptHandlerHigh 0001  
                __size_of_initADC 0042                  __size_of_in_main 0044  
           __size_ofi1_ConvertADC 0004                 i2send_msg@msgtype 003A  
     ToMainHigh_recvmsg@maxlength 00C2                 i2send_msg@tlength 003E  
         init_timer1_lthread@tptr 00A6                       _init_queues 14E2  
              __end_of_in_low_int 16AC                          __ptext10 1AB0  
                        __ptext11 1AC2                          __ptext20 10A2  
                        __ptext12 14E2                          __ptext21 16AC  
                        __ptext13 1384                          __ptext30 11E4  
                        __ptext22 1666                          __ptext14 1550  
                        __ptext31 197E                          __ptext23 1AD4  
                        __ptext15 16F0                          __ptext40 1B16  
                        __ptext24 18E8                          __ptext16 1300  
                        __ptext41 00BE                          __ptext33 1B12  
                        __ptext25 1A9A                          __ptext17 1B0E  
                        __ptext50 1AF2                          __ptext42 0CDE  
                        __ptext34 1148                          __ptext26 1732  
                        __ptext18 19A8                          __ptext51 1A1C  
                        __ptext43 1A7C                          __ptext35 19D0  
                        __ptext27 1774                          __ptext19 1AE6  
                        __ptext52 1B08                          __ptext44 0DD2  
                        __ptext36 0F4E                          __ptext28 0996  
                        __ptext53 1AFE                          __ptext45 19F6  
                        __ptext37 17B6                          __ptext29 15BA  
                        __ptext46 0FF8                          __ptext38 1A5E  
                        __ptext47 17F6                          __ptext48 1618  
                        __ptext49 1950                    i1send_msg@data 000F  
                  i1send_msg@qmsg 0015                    i1send_msg@slot 0014  
                  i1send_msg@qptr 000B                uart_lthread@length 00AA  
             _init_timer0_lthread 1AC2         ??i2_start_i2c_slave_reply 002F  
                        _init_i2c 1550               _init_timer1_lthread 1AB0  
                   __size_of_main 02E4                     ??i2_check_msg 002F  
               main@t1thread_data 01B0                       ??_check_msg 00A8  
              __end_of_init_queue 13FE              __size_of_SleepIfOkay 004E  
                        _recv_msg 0996             ??_i2c_configure_slave 00A6  
           __size_ofi2_ConvertADC 0004                          _send_msg 0BDA  
                  init_queue@qptr 00A6             __size_of_uart_lthread 003E  
                   ??_Delay1KTCYx 00A6                      i1_ConvertADC 1B12  
            ?_init_timer0_lthread 00A6               _InterruptHandlerLow 0018  
            ?_init_timer1_lthread 00A6                       _OSCTUNEbits 000F9B  
                      _INTCONbits 000FF2                    OpenUSART@spbrg 00A6  
                        memcpy@d1 00A6                          memcpy@s1 00A8  
           __end_ofi2_in_high_int 1AFE      i2c_int_handler@overrun_error 0091  
                i2send_msg@length 0039                          intlevel1 0000  
                        intlevel2 0000                      i2_ConvertADC 1B16  
            ?_InterruptHandlerLow 0001           ??_start_i2c_slave_reply 00A8  
                ___lwmod@dividend 00A6            ?_uart_recv_int_handler 0001  
                    _uart_lthread 1874             _block_on_To_msgqueues 10A2  
                   ?_handle_start 0001                  ??_timer0_lthread 00C8  
     __size_of_ToMainHigh_recvmsg 0042       __size_of_ToMainHigh_sendmsg 0026  
                      _OSCCONbits 000FD3                  ??_timer1_lthread 00C8  
        ToMainHigh_sendmsg@length 0046               __end_ofi2_check_msg 1A40  
           ??_init_timer0_lthread 00A8             ??_init_timer1_lthread 00A8  
          ??_InterruptHandlerHigh 0096                 _ToMainLow_recvmsg 1732  
               _ToMainLow_sendmsg 19D0                main@last_reg_recvd 01AF  
                 ___lwmod@divisor 00A8              __end_ofi2_in_low_int 197E  
              ?_ToMainLow_recvmsg 00BE               __end_of_Delay1KTCYx 1AB0  
               ??_i2c_int_handler 0047                   ___lwmod@counter 00AB  
              ?_ToMainLow_sendmsg 0017                       _SSPCON1bits 000FC6  
                     _SSPCON2bits 000FC5                    i2send_msg@data 003B  
           ??_InterruptHandlerLow 001C               ??_ToMainLow_recvmsg 00C2  
                  i2send_msg@qmsg 0041                    i2send_msg@slot 0040  
                  i2send_msg@qptr 0037               ??_ToMainLow_sendmsg 001A  
               ?i2_returnADCValue 002D                ??i2_returnADCValue 002F  
                  ??_handle_start 002D  InterruptHandlerHigh@pureADCValue 0049  
                    _USART_Status 004E  

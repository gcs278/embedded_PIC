

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Thu Feb 06 17:08:38 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    76  0000                     
    77                           	psect	idataBANK0
    78  001B7C                     __pidataBANK0:
    79                           	opt stack 0
    80                           
    81                           ;initializer for _ADCValue
    82  001B7C  0002               	dw	2
    83  0000                     _ADCON0	set	4034
    84  0000                     _ADCON0bits	set	4034
    85  0000                     _ADCON1	set	4033
    86  0000                     _ADCON2	set	4032
    87  0000                     _ADRESH	set	4036
    88  0000                     _ADRESL	set	4035
    89  0000                     _INTCONbits	set	4082
    90  0000                     _IPR1bits	set	3999
    91  0000                     _LATB	set	3978
    92  0000                     _LATBbits	set	3978
    93  0000                     _OSCCON	set	4051
    94  0000                     _OSCCONbits	set	4051
    95  0000                     _OSCTUNEbits	set	3995
    96  0000                     _PIE1bits	set	3997
    97  0000                     _PIR1bits	set	3998
    98  0000                     _RCONbits	set	4048
    99  0000                     _RCREG	set	4014
   100  0000                     _RCSTA	set	4011
   101  0000                     _RCSTAbits	set	4011
   102  0000                     _SPBRG	set	4015
   103  0000                     _SPBRGH	set	4016
   104  0000                     _SSPADD	set	4040
   105  0000                     _SSPBUF	set	4041
   106  0000                     _SSPCON1	set	4038
   107  0000                     _SSPCON1bits	set	4038
   108  0000                     _SSPCON2	set	4037
   109  0000                     _SSPCON2bits	set	4037
   110  0000                     _SSPSTAT	set	4039
   111  0000                     _SSPSTATbits	set	4039
   112  0000                     _T1CON	set	4045
   113  0000                     _T1CONbits	set	4045
   114  0000                     _TMR0H	set	4055
   115  0000                     _TMR0L	set	4054
   116  0000                     _TMR1H	set	4047
   117  0000                     _TMR1L	set	4046
   118  0000                     _TRISB	set	3987
   119  0000                     _TRISCbits	set	3988
   120  0000                     _TXSTA	set	4012
   121  0000                     _TXSTAbits	set	4012
   122                           
   123                           	psect	nvCOMRAM
   124  00004D                     __pnvCOMRAM:
   125                           	opt stack 0
   126  00004D                     _uc_ptr:
   127                           	opt stack 0
   128  00004D                     	ds	2
   129                           
   130                           	psect	nvBANK0
   131  0000E1                     __pnvBANK0:
   132                           	opt stack 0
   133  0000E1                     _ic_ptr:
   134                           	opt stack 0
   135  0000E1                     	ds	2
   136                           
   137                           ; #config settings
   138  0000                     
   139                           	psect	cinit
   140  001850                     __pcinit:
   141                           	opt stack 0
   142  001850                     start_initialization:
   143                           	opt stack 0
   144  001850                     __initialization:
   145                           	opt stack 0
   146                           
   147                           ; Clear objects allocated to BANK1 (162 bytes)
   148  001850  EE01  F000         	lfsr	0,__pbssBANK1
   149  001854  0EA2               	movlw	162
   150  001856                     clear_0:
   151  001856  6AEE               	clrf	postinc0,c
   152  001858  06E8               	decf	wreg,f,c
   153  00185A  E1FD               	bnz	clear_0
   154                           
   155                           ; Clear objects allocated to BANK0 (54 bytes)
   156  00185C  EE00  F080         	lfsr	0,__pbssBANK0
   157  001860  0E36               	movlw	54
   158  001862                     clear_1:
   159  001862  6AEE               	clrf	postinc0,c
   160  001864  06E8               	decf	wreg,f,c
   161  001866  E1FD               	bnz	clear_1
   162                           
   163                           ; Clear objects allocated to COMRAM (2 bytes)
   164  001868  6A50               	clrf	(__pbssCOMRAM+1)& (0+255),c
   165  00186A  6A4F               	clrf	__pbssCOMRAM& (0+255),c
   166                           
   167                           ; Initialize objects allocated to BANK0 (2 bytes)
   168                           ; load TBLPTR registers with __pidataBANK0
   169  00186C  0E7C               	movlw	low __pidataBANK0
   170  00186E  6EF6               	movwf	tblptrl,c
   171  001870  0E1B               	movlw	high __pidataBANK0
   172  001872  6EF7               	movwf	tblptrh,c
   173  001874  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   174  001876  6EF8               	movwf	tblptru,c
   175  001878  0009               	tblrd		*+	;fetch initializer
   176  00187A  CFF5 F0E3          	movff	tablat,__pdataBANK0
   177  00187E  0009               	tblrd		*+	;fetch initializer
   178  001880  CFF5 F0E4          	movff	tablat,__pdataBANK0+1
   179  001884                     end_of_initialization:
   180                           	opt stack 0
   181  001884                     __end_of__initialization:
   182                           	opt stack 0
   183  001884  0E00               	movlw	low (__Lmediumconst shr (0+16))
   184  001886  6EF8               	movwf	tblptru,c
   185  001888  0100               	movlb	0
   186  00188A  EF4E  F003         	goto	_main	;jump to C main() function
   187                           tblptru	equ	0xFF8
   188                           tblptrh	equ	0xFF7
   189                           tblptrl	equ	0xFF6
   190                           tablat	equ	0xFF5
   191                           postinc0	equ	0xFEE
   192                           wreg	equ	0xFE8
   193                           
   194                           	psect	bssCOMRAM
   195  00004F                     __pbssCOMRAM:
   196                           	opt stack 0
   197  00004F                     _MQ_Main_Willing_to_block:
   198                           	opt stack 0
   199  00004F                     	ds	1
   200  000050                     _USART_Status:
   201                           	opt stack 0
   202  000050                     	ds	1
   203                           tblptru	equ	0xFF8
   204                           tblptrh	equ	0xFF7
   205                           tblptrl	equ	0xFF6
   206                           tablat	equ	0xFF5
   207                           postinc0	equ	0xFEE
   208                           wreg	equ	0xFE8
   209                           
   210                           	psect	bssBANK0
   211  000080                     __pbssBANK0:
   212                           	opt stack 0
   213  000080                     _ToMainLow_MQ:
   214                           	opt stack 0
   215  000080                     	ds	54
   216                           tblptru	equ	0xFF8
   217                           tblptrh	equ	0xFF7
   218                           tblptrl	equ	0xFF6
   219                           tablat	equ	0xFF5
   220                           postinc0	equ	0xFEE
   221                           wreg	equ	0xFE8
   222                           
   223                           	psect	dataBANK0
   224  0000E3                     __pdataBANK0:
   225                           	opt stack 0
   226  0000E3                     _ADCValue:
   227                           	opt stack 0
   228  0000E3                     	ds	2
   229                           tblptru	equ	0xFF8
   230                           tblptrh	equ	0xFF7
   231                           tblptrl	equ	0xFF6
   232                           tablat	equ	0xFF5
   233                           postinc0	equ	0xFEE
   234                           wreg	equ	0xFE8
   235                           
   236                           	psect	bssBANK1
   237  000100                     __pbssBANK1:
   238                           	opt stack 0
   239  000100                     _FromMainHigh_MQ:
   240                           	opt stack 0
   241  000100                     	ds	54
   242  000136                     _FromMainLow_MQ:
   243                           	opt stack 0
   244  000136                     	ds	54
   245  00016C                     _ToMainHigh_MQ:
   246                           	opt stack 0
   247  00016C                     	ds	54
   248                           tblptru	equ	0xFF8
   249                           tblptrh	equ	0xFF7
   250                           tblptrl	equ	0xFF6
   251                           tablat	equ	0xFF5
   252                           postinc0	equ	0xFEE
   253                           wreg	equ	0xFE8
   254                           
   255                           	psect	cstackBANK1
   256  0001A2                     __pcstackBANK1:
   257                           	opt stack 0
   258  0001A2                     ??_send_msg:
   259  0001A2                     recv_msg@qptr:
   260                           	opt stack 0
   261                           
   262                           ; 2 bytes @ 0x0
   263  0001A2                     	ds	1
   264  0001A3                     send_msg@tlength:
   265                           	opt stack 0
   266                           
   267                           ; 2 bytes @ 0x1
   268  0001A3                     	ds	1
   269  0001A4                     recv_msg@maxlength:
   270                           	opt stack 0
   271                           
   272                           ; 1 bytes @ 0x2
   273  0001A4                     	ds	1
   274  0001A5                     send_msg@slot:
   275                           	opt stack 0
   276  0001A5                     recv_msg@msgtype:
   277                           	opt stack 0
   278                           
   279                           ; 2 bytes @ 0x3
   280  0001A5                     	ds	1
   281  0001A6                     send_msg@qmsg:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0x4
   285  0001A6                     	ds	1
   286  0001A7                     recv_msg@data:
   287                           	opt stack 0
   288                           
   289                           ; 2 bytes @ 0x5
   290  0001A7                     	ds	1
   291  0001A8                     FromMainHigh_sendmsg@msgtype:
   292                           	opt stack 0
   293                           
   294                           ; 1 bytes @ 0x6
   295  0001A8                     	ds	1
   296  0001A9                     recv_msg@slot:
   297                           	opt stack 0
   298  0001A9                     FromMainHigh_sendmsg@data:
   299                           	opt stack 0
   300                           
   301                           ; 2 bytes @ 0x7
   302  0001A9                     	ds	1
   303  0001AA                     recv_msg@tlength:
   304                           	opt stack 0
   305                           
   306                           ; 2 bytes @ 0x8
   307  0001AA                     	ds	1
   308  0001AB                     FromMainHigh_sendmsg@length:
   309                           	opt stack 0
   310                           
   311                           ; 1 bytes @ 0x9
   312  0001AB                     	ds	1
   313  0001AC                     recv_msg@qmsg:
   314                           	opt stack 0
   315  0001AC                     timer1_lthread@tptr:
   316                           	opt stack 0
   317                           
   318                           ; 2 bytes @ 0xA
   319  0001AC                     	ds	2
   320  0001AE                     ToMainLow_recvmsg@maxlength:
   321                           	opt stack 0
   322  0001AE                     ToMainHigh_recvmsg@maxlength:
   323                           	opt stack 0
   324  0001AE                     timer1_lthread@msgtype:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0xC
   328  0001AE                     	ds	2
   329  0001B0                     timer1_lthread@length:
   330                           	opt stack 0
   331                           
   332                           ; 2 bytes @ 0xE
   333  0001B0                     	ds	2
   334  0001B2                     timer1_lthread@msgbuffer:
   335                           	opt stack 0
   336                           
   337                           ; 2 bytes @ 0x10
   338  0001B2                     	ds	2
   339  0001B4                     ??_timer1_lthread:
   340                           
   341                           ; 0 bytes @ 0x12
   342  0001B4                     	ds	1
   343  0001B5                     timer1_lthread@retval:
   344                           	opt stack 0
   345                           
   346                           ; 1 bytes @ 0x13
   347  0001B5                     	ds	1
   348  0001B6                     ??_main:
   349                           
   350                           ; 0 bytes @ 0x14
   351  0001B6                     	ds	1
   352  0001B7                     main@msgbuffer:
   353                           	opt stack 0
   354                           
   355                           ; 11 bytes @ 0x15
   356  0001B7                     	ds	11
   357  0001C2                     main@uthread_data:
   358                           	opt stack 0
   359                           
   360                           ; 2 bytes @ 0x20
   361  0001C2                     	ds	2
   362  0001C4                     main@t0thread_data:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x22
   366  0001C4                     	ds	2
   367  0001C6                     main@last_reg_recvd:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0x24
   371  0001C6                     	ds	1
   372  0001C7                     main@uc:
   373                           	opt stack 0
   374                           
   375                           ; 5 bytes @ 0x25
   376  0001C7                     	ds	5
   377  0001CC                     main@t1thread_data:
   378                           	opt stack 0
   379                           
   380                           ; 2 bytes @ 0x2A
   381  0001CC                     	ds	2
   382  0001CE                     main@msgtype:
   383                           	opt stack 0
   384                           
   385                           ; 1 bytes @ 0x2C
   386  0001CE                     	ds	1
   387  0001CF                     main@length:
   388                           	opt stack 0
   389                           
   390                           ; 1 bytes @ 0x2D
   391  0001CF                     	ds	1
   392  0001D0                     main@ic:
   393                           	opt stack 0
   394                           
   395                           ; 28 bytes @ 0x2E
   396  0001D0                     	ds	28
   397                           tblptru	equ	0xFF8
   398                           tblptrh	equ	0xFF7
   399                           tblptrl	equ	0xFF6
   400                           tablat	equ	0xFF5
   401                           postinc0	equ	0xFEE
   402                           wreg	equ	0xFE8
   403                           
   404                           	psect	cstackBANK0
   405  0000B6                     __pcstackBANK0:
   406                           	opt stack 0
   407  0000B6                     timer0_int_handler@length:
   408                           	opt stack 0
   409  0000B6                     i2c_int_handler@error_buf:
   410                           	opt stack 0
   411                           
   412                           ; 3 bytes @ 0x0
   413  0000B6                     	ds	2
   414  0000B8                     timer0_int_handler@msgtype:
   415                           	opt stack 0
   416                           
   417                           ; 2 bytes @ 0x2
   418  0000B8                     	ds	1
   419  0000B9                     i2c_int_handler@data_written:
   420                           	opt stack 0
   421                           
   422                           ; 1 bytes @ 0x3
   423  0000B9                     	ds	1
   424  0000BA                     i2c_int_handler@overrun_error:
   425                           	opt stack 0
   426  0000BA                     timer0_int_handler@val:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x4
   430  0000BA                     	ds	1
   431  0000BB                     i2c_int_handler@i2c_data:
   432                           	opt stack 0
   433                           
   434                           ; 1 bytes @ 0x5
   435  0000BB                     	ds	1
   436  0000BC                     i2c_int_handler@msg_to_send:
   437                           	opt stack 0
   438                           
   439                           ; 1 bytes @ 0x6
   440  0000BC                     	ds	1
   441  0000BD                     i2c_int_handler@msg_ready:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0x7
   445  0000BD                     	ds	1
   446  0000BE                     i2c_int_handler@data_read:
   447                           	opt stack 0
   448                           
   449                           ; 1 bytes @ 0x8
   450  0000BE                     	ds	1
   451  0000BF                     ??_InterruptHandlerHigh:
   452                           
   453                           ; 0 bytes @ 0x9
   454  0000BF                     	ds	16
   455  0000CF                     InterruptHandlerHigh@pureADCValue:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x19
   459  0000CF                     	ds	2
   460  0000D1                     ?_returnADCValue:
   461                           	opt stack 0
   462  0000D1                     ?_in_high_int:
   463                           	opt stack 0
   464  0000D1                     ?___lwmod:
   465                           	opt stack 0
   466  0000D1                     i2c_configure_slave@addr:
   467                           	opt stack 0
   468  0000D1                     OpenADC@config2:
   469                           	opt stack 0
   470  0000D1                     OpenTimer1@config:
   471                           	opt stack 0
   472  0000D1                     Delay1KTCYx@unit:
   473                           	opt stack 0
   474  0000D1                     init_queue@qptr:
   475                           	opt stack 0
   476  0000D1                     check_msg@qptr:
   477                           	opt stack 0
   478  0000D1                     start_i2c_slave_reply@msg:
   479                           	opt stack 0
   480  0000D1                     init_i2c@ic:
   481                           	opt stack 0
   482  0000D1                     init_uart_recv@uc:
   483                           	opt stack 0
   484  0000D1                     timer0_lthread@tptr:
   485                           	opt stack 0
   486  0000D1                     init_timer1_lthread@tptr:
   487                           	opt stack 0
   488  0000D1                     uart_lthread@uptr:
   489                           	opt stack 0
   490  0000D1                     OpenUSART@spbrg:
   491                           	opt stack 0
   492  0000D1                     ___lwmod@dividend:
   493                           	opt stack 0
   494  0000D1                     memcpy@d1:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x1B
   498  0000D1                     	ds	1
   499  0000D2                     OpenADC@portconfig:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x1C
   503  0000D2                     	ds	1
   504  0000D3                     ??_OpenADC:
   505  0000D3                     ??_OpenUSART:
   506  0000D3                     ??_start_i2c_slave_reply:
   507  0000D3                     ??_init_queue:
   508  0000D3                     ??_check_msg:
   509  0000D3                     ?_in_low_int:
   510                           	opt stack 0
   511  0000D3                     returnADCValue@temp:
   512                           	opt stack 0
   513  0000D3                     timer0_lthread@msgtype:
   514                           	opt stack 0
   515  0000D3                     uart_lthread@msgtype:
   516                           	opt stack 0
   517  0000D3                     ___lwmod@divisor:
   518                           	opt stack 0
   519  0000D3                     memcpy@s1:
   520                           	opt stack 0
   521                           
   522                           ; 2 bytes @ 0x1D
   523  0000D3                     	ds	1
   524  0000D4                     init_queue@i:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x1E
   528  0000D4                     	ds	1
   529  0000D5                     ??_init_queues:
   530  0000D5                     ??___lwmod:
   531  0000D5                     ?_in_main:
   532                           	opt stack 0
   533  0000D5                     start_i2c_slave_reply@length:
   534                           	opt stack 0
   535  0000D5                     OpenADC@config:
   536                           	opt stack 0
   537  0000D5                     timer0_lthread@length:
   538                           	opt stack 0
   539  0000D5                     uart_lthread@length:
   540                           	opt stack 0
   541  0000D5                     memcpy@n:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x1F
   545  0000D5                     	ds	1
   546  0000D6                     ??_initADC:
   547  0000D6                     OpenUSART@config:
   548                           	opt stack 0
   549  0000D6                     ___lwmod@counter:
   550                           	opt stack 0
   551                           
   552                           ; 1 bytes @ 0x20
   553  0000D6                     	ds	1
   554  0000D7                     ??_block_on_To_msgqueues:
   555  0000D7                     timer0_lthread@msgbuffer:
   556                           	opt stack 0
   557  0000D7                     uart_lthread@msgbuffer:
   558                           	opt stack 0
   559  0000D7                     memcpy@d:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x21
   563  0000D7                     	ds	1
   564  0000D8                     initADC@ADCValue:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x22
   568  0000D8                     	ds	1
   569  0000D9                     timer0_lthread@msgval:
   570                           	opt stack 0
   571  0000D9                     memcpy@s:
   572                           	opt stack 0
   573                           
   574                           ; 2 bytes @ 0x23
   575  0000D9                     	ds	2
   576  0000DB                     ??_recv_msg:
   577  0000DB                     send_msg@qptr:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x25
   581  0000DB                     	ds	2
   582  0000DD                     send_msg@length:
   583                           	opt stack 0
   584  0000DD                     ToMainLow_recvmsg@msgtype:
   585                           	opt stack 0
   586  0000DD                     ToMainHigh_recvmsg@msgtype:
   587                           	opt stack 0
   588                           
   589                           ; 2 bytes @ 0x27
   590  0000DD                     	ds	1
   591  0000DE                     send_msg@msgtype:
   592                           	opt stack 0
   593                           
   594                           ; 1 bytes @ 0x28
   595  0000DE                     	ds	1
   596  0000DF                     send_msg@data:
   597                           	opt stack 0
   598  0000DF                     ToMainLow_recvmsg@data:
   599                           	opt stack 0
   600  0000DF                     ToMainHigh_recvmsg@data:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x29
   604  0000DF                     	ds	2
   605  0000E1                     tblptru	equ	0xFF8
   606                           tblptrh	equ	0xFF7
   607                           tblptrl	equ	0xFF6
   608                           tablat	equ	0xFF5
   609                           postinc0	equ	0xFEE
   610                           wreg	equ	0xFE8
   611                           
   612                           ; 0 bytes @ 0x2B
   613                           
   614                           	psect	cstackCOMRAM
   615  000001                     __pcstackCOMRAM:
   616                           	opt stack 0
   617  000001                     ?_ReadTimer1:
   618                           	opt stack 0
   619  000001                     ReadUSART@data:
   620                           	opt stack 0
   621  000001                     WriteTimer1@timer1:
   622                           	opt stack 0
   623  000001                     i1memcpy@d1:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x0
   627  000001                     	ds	2
   628  000003                     ReadTimer1@timer:
   629                           	opt stack 0
   630  000003                     WriteTimer1@timer:
   631                           	opt stack 0
   632  000003                     i1memcpy@s1:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x2
   636  000003                     	ds	2
   637  000005                     i1memcpy@n:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x4
   641  000005                     	ds	2
   642  000007                     i1memcpy@d:
   643                           	opt stack 0
   644                           
   645                           ; 2 bytes @ 0x6
   646  000007                     	ds	2
   647  000009                     i1memcpy@s:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0x8
   651  000009                     	ds	2
   652  00000B                     i1send_msg@qptr:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0xA
   656  00000B                     	ds	2
   657  00000D                     i1send_msg@length:
   658                           	opt stack 0
   659                           
   660                           ; 1 bytes @ 0xC
   661  00000D                     	ds	1
   662  00000E                     i1send_msg@msgtype:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0xD
   666  00000E                     	ds	1
   667  00000F                     i1send_msg@data:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0xE
   671  00000F                     	ds	2
   672  000011                     ??i1_send_msg:
   673                           
   674                           ; 0 bytes @ 0x10
   675  000011                     	ds	1
   676  000012                     i1send_msg@tlength:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0x11
   680  000012                     	ds	2
   681  000014                     i1send_msg@slot:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0x13
   685  000014                     	ds	1
   686  000015                     i1send_msg@qmsg:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x14
   690  000015                     	ds	2
   691  000017                     ToMainLow_sendmsg@msgtype:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x16
   695  000017                     	ds	1
   696  000018                     ToMainLow_sendmsg@data:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0x17
   700  000018                     	ds	2
   701  00001A                     ToMainLow_sendmsg@length:
   702                           	opt stack 0
   703                           
   704                           ; 1 bytes @ 0x19
   705  00001A                     	ds	1
   706  00001B                     ??_timer1_int_handler:
   707  00001B                     ??_uart_recv_int_handler:
   708                           
   709                           ; 0 bytes @ 0x1A
   710  00001B                     	ds	1
   711  00001C                     timer1_int_handler@result:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0x1B
   715  00001C                     	ds	2
   716  00001E                     ??_InterruptHandlerLow:
   717                           
   718                           ; 0 bytes @ 0x1D
   719  00001E                     	ds	17
   720  00002F                     ?_ReadADC:
   721                           	opt stack 0
   722  00002F                     ?i2_in_high_int:
   723                           	opt stack 0
   724  00002F                     handle_start@data_read:
   725                           	opt stack 0
   726  00002F                     WriteTimer0@timer0:
   727                           	opt stack 0
   728  00002F                     i2check_msg@qptr:
   729                           	opt stack 0
   730  00002F                     i2memcpy@d1:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0x2E
   734  00002F                     	ds	2
   735  000031                     ??i2_check_msg:
   736  000031                     ?i2_in_low_int:
   737                           	opt stack 0
   738  000031                     WriteTimer0@timer:
   739                           	opt stack 0
   740  000031                     i2memcpy@s1:
   741                           	opt stack 0
   742                           
   743                           ; 2 bytes @ 0x30
   744  000031                     	ds	2
   745  000033                     i2memcpy@n:
   746                           	opt stack 0
   747                           
   748                           ; 2 bytes @ 0x32
   749  000033                     	ds	2
   750  000035                     i2memcpy@d:
   751                           	opt stack 0
   752                           
   753                           ; 2 bytes @ 0x34
   754  000035                     	ds	2
   755  000037                     i2memcpy@s:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0x36
   759  000037                     	ds	2
   760  000039                     i2send_msg@qptr:
   761                           	opt stack 0
   762  000039                     i2recv_msg@qptr:
   763                           	opt stack 0
   764                           
   765                           ; 2 bytes @ 0x38
   766  000039                     	ds	2
   767  00003B                     i2send_msg@length:
   768                           	opt stack 0
   769  00003B                     i2recv_msg@maxlength:
   770                           	opt stack 0
   771                           
   772                           ; 1 bytes @ 0x3A
   773  00003B                     	ds	1
   774  00003C                     i2send_msg@msgtype:
   775                           	opt stack 0
   776  00003C                     i2recv_msg@msgtype:
   777                           	opt stack 0
   778                           
   779                           ; 2 bytes @ 0x3B
   780  00003C                     	ds	1
   781  00003D                     i2send_msg@data:
   782                           	opt stack 0
   783                           
   784                           ; 2 bytes @ 0x3C
   785  00003D                     	ds	1
   786  00003E                     i2recv_msg@data:
   787                           	opt stack 0
   788                           
   789                           ; 2 bytes @ 0x3D
   790  00003E                     	ds	1
   791  00003F                     ??i2_send_msg:
   792                           
   793                           ; 0 bytes @ 0x3E
   794  00003F                     	ds	1
   795  000040                     ??i2_recv_msg:
   796  000040                     i2send_msg@tlength:
   797                           	opt stack 0
   798                           
   799                           ; 2 bytes @ 0x3F
   800  000040                     	ds	2
   801  000042                     i2send_msg@slot:
   802                           	opt stack 0
   803  000042                     i2recv_msg@slot:
   804                           	opt stack 0
   805                           
   806                           ; 1 bytes @ 0x41
   807  000042                     	ds	1
   808  000043                     i2send_msg@qmsg:
   809                           	opt stack 0
   810  000043                     i2recv_msg@tlength:
   811                           	opt stack 0
   812                           
   813                           ; 2 bytes @ 0x42
   814  000043                     	ds	2
   815  000045                     ToMainHigh_sendmsg@msgtype:
   816                           	opt stack 0
   817  000045                     i2recv_msg@qmsg:
   818                           	opt stack 0
   819                           
   820                           ; 2 bytes @ 0x44
   821  000045                     	ds	1
   822  000046                     ToMainHigh_sendmsg@data:
   823                           	opt stack 0
   824                           
   825                           ; 2 bytes @ 0x45
   826  000046                     	ds	1
   827  000047                     FromMainHigh_recvmsg@msgtype:
   828                           	opt stack 0
   829                           
   830                           ; 2 bytes @ 0x46
   831  000047                     	ds	1
   832  000048                     ToMainHigh_sendmsg@length:
   833                           	opt stack 0
   834                           
   835                           ; 1 bytes @ 0x47
   836  000048                     	ds	1
   837  000049                     ??_i2c_int_handler:
   838  000049                     FromMainHigh_recvmsg@data:
   839                           	opt stack 0
   840                           
   841                           ; 2 bytes @ 0x48
   842  000049                     	ds	2
   843  00004B                     FromMainHigh_recvmsg@maxlength:
   844                           	opt stack 0
   845                           
   846                           ; 1 bytes @ 0x4A
   847  00004B                     	ds	1
   848  00004C                     ??_timer0_int_handler:
   849                           
   850                           ; 0 bytes @ 0x4B
   851  00004C                     	ds	1
   852                           tblptru	equ	0xFF8
   853                           tblptrh	equ	0xFF7
   854                           tblptrl	equ	0xFF6
   855                           tablat	equ	0xFF5
   856                           postinc0	equ	0xFEE
   857                           wreg	equ	0xFE8
   858                           
   859 ;;
   860 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   861 ;;
   862 ;; *************** function _main *****************
   863 ;; Defined at:
   864 ;;		line 111 in file "../src/main.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;  ic             28   46[BANK1 ] struct __i2c_comm
   869 ;;  msgbuffer      11   21[BANK1 ] unsigned char [11]
   870 ;;  uc              5   37[BANK1 ] struct __uart_comm
   871 ;;  t1thread_dat    2   42[BANK1 ] struct __timer1_thread_s
   872 ;;  t0thread_dat    2   34[BANK1 ] struct __timer0_thread_s
   873 ;;  uthread_data    2   32[BANK1 ] struct __uart_thread_str
   874 ;;  length          1   45[BANK1 ] char 
   875 ;;  msgtype         1   44[BANK1 ] unsigned char 
   876 ;;  last_reg_rec    1   36[BANK1 ] unsigned char 
   877 ;;  i               1    0        unsigned char 
   878 ;;  c               1    0        unsigned char 
   879 ;; Return value:  Size  Location     Type
   880 ;;		None               void
   881 ;; Registers used:
   882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   888 ;;      Params:         0       0       0       0       0
   889 ;;      Locals:         0       0      53       0       0
   890 ;;      Temps:          0       0       1       0       0
   891 ;;      Totals:         0       0      54       0       0
   892 ;;Total ram usage:       54 bytes
   893 ;; Hardware stack levels required when called:   14
   894 ;; This function calls:
   895 ;;		_OpenTimer1
   896 ;;		_OpenUSART
   897 ;;		_ToMainHigh_recvmsg
   898 ;;		_ToMainLow_recvmsg
   899 ;;		_block_on_To_msgqueues
   900 ;;		_enable_interrupts
   901 ;;		_i2c_configure_slave
   902 ;;		_initADC
   903 ;;		_init_i2c
   904 ;;		_init_queues
   905 ;;		_init_timer1_lthread
   906 ;;		_init_uart_recv
   907 ;;		_returnADCValue
   908 ;;		_start_i2c_slave_reply
   909 ;;		_timer0_lthread
   910 ;;		_timer1_lthread
   911 ;;		_uart_lthread
   912 ;; This function is called by:
   913 ;;		Startup code after reset
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           	psect	text0
   918  00069C                     __ptext0:
   919                           	opt stack 0
   920  00069C                     _main:
   921                           	opt stack 16
   922                           
   923                           ;main.c: 116: char c;
   924                           ;main.c: 117: signed char length;
   925                           ;main.c: 118: unsigned char msgtype;
   926                           ;main.c: 119: unsigned char last_reg_recvd;
   927                           ;main.c: 120: uart_comm uc;
   928                           ;main.c: 121: i2c_comm ic;
   929                           ;main.c: 122: unsigned char msgbuffer[10 + 1];
   930                           ;main.c: 123: unsigned char i;
   931                           ;main.c: 124: uart_thread_struct uthread_data;
   932                           ;main.c: 125: timer1_thread_struct t1thread_data;
   933                           ;main.c: 126: timer0_thread_struct t0thread_data;
   934                           ;main.c: 133: OSCCON = 0x82;
   935                           
   936                           ;incstack = 0
   937  00069C  0E82               	movlw	130
   938  00069E  6ED3               	movwf	4051,c	;volatile
   939                           
   940                           ;main.c: 134: OSCTUNEbits.PLLEN = 0;
   941  0006A0  9C9B               	bcf	3995,6,c	;volatile
   942                           
   943                           ;main.c: 138: init_uart_recv(&uc);
   944  0006A2  0101               	movlb	1	; () banked
   945  0006A4  0E01               	movlw	high main@uc
   946  0006A6  0100               	movlb	0	; () banked
   947  0006A8  0100               	movlb	0	; () banked
   948  0006AA  6FD2               	movwf	(init_uart_recv@uc+1)& (0+255),b
   949  0006AC  0101               	movlb	1	; () banked
   950  0006AE  0EC7               	movlw	low main@uc
   951  0006B0  0100               	movlb	0	; () banked
   952  0006B2  0100               	movlb	0	; () banked
   953  0006B4  6FD1               	movwf	init_uart_recv@uc& (0+255),b
   954  0006B6  EC49  F00D         	call	_init_uart_recv	;wreg free
   955                           
   956                           ;main.c: 141: init_i2c(&ic);
   957  0006BA  0101               	movlb	1	; () banked
   958  0006BC  0E01               	movlw	high main@ic
   959  0006BE  0100               	movlb	0	; () banked
   960  0006C0  0100               	movlb	0	; () banked
   961  0006C2  6FD2               	movwf	(init_i2c@ic+1)& (0+255),b
   962  0006C4  0101               	movlb	1	; () banked
   963  0006C6  0ED0               	movlw	low main@ic
   964  0006C8  0100               	movlb	0	; () banked
   965  0006CA  0100               	movlb	0	; () banked
   966  0006CC  6FD1               	movwf	init_i2c@ic& (0+255),b
   967  0006CE  EC91  F00A         	call	_init_i2c	;wreg free
   968                           
   969                           ;main.c: 144: init_timer1_lthread(&t1thread_data);
   970  0006D2  0101               	movlb	1	; () banked
   971  0006D4  0E01               	movlw	high main@t1thread_data
   972  0006D6  0100               	movlb	0	; () banked
   973  0006D8  0100               	movlb	0	; () banked
   974  0006DA  6FD2               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   975  0006DC  0101               	movlb	1	; () banked
   976  0006DE  0ECC               	movlw	low main@t1thread_data
   977  0006E0  0100               	movlb	0	; () banked
   978  0006E2  0100               	movlb	0	; () banked
   979  0006E4  6FD1               	movwf	init_timer1_lthread@tptr& (0+255),b
   980  0006E6  EC7B  F00D         	call	_init_timer1_lthread	;wreg free
   981                           
   982                           ;main.c: 147: init_queues();
   983  0006EA  EC5A  F00A         	call	_init_queues	;wreg free
   984                           
   985                           ;main.c: 149: initADC();
   986  0006EE  EC85  F00B         	call	_initADC	;wreg free
   987                           
   988                           ;main.c: 152: TRISB = 0x0;
   989  0006F2  0E00               	movlw	0
   990  0006F4  6E93               	movwf	3987,c	;volatile
   991                           
   992                           ;main.c: 153: LATB = 0x0;
   993  0006F6  0E00               	movlw	0
   994  0006F8  6E8A               	movwf	3978,c	;volatile
   995                           
   996                           ;main.c: 166: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
   997  0006FA  0EF5               	movlw	245
   998  0006FC  EC66  F00C         	call	_OpenTimer1
   999                           
  1000                           ;main.c: 170: enable_interrupts();
  1001  000700  ECB3  F00D         	call	_enable_interrupts	;wreg free
  1002                           
  1003                           ;main.c: 175: IPR1bits.TMR1IP = 0;
  1004  000704  909F               	bcf	3999,0,c	;volatile
  1005                           
  1006                           ;main.c: 177: IPR1bits.RCIP = 0;
  1007  000706  9A9F               	bcf	3999,5,c	;volatile
  1008                           
  1009                           ;main.c: 179: IPR1bits.SSPIP = 1;
  1010  000708  869F               	bsf	3999,3,c	;volatile
  1011                           
  1012                           ;main.c: 181: IPR1bits.ADIP = 1;
  1013  00070A  8C9F               	bsf	3999,6,c	;volatile
  1014                           
  1015                           ;main.c: 190: i2c_configure_slave(0x9E);
  1016  00070C  0E9E               	movlw	158
  1017  00070E  ECFD  F00C         	call	_i2c_configure_slave
  1018                           
  1019                           ;main.c: 203: PIE1bits.SSPIE = 1;
  1020  000712  869D               	bsf	3997,3,c	;volatile
  1021                           
  1022                           ;main.c: 206: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1023                           ;main.c: 207: 0b11111111 & 0b11101111, 0x19);
  1024  000714  0E00               	movlw	0
  1025  000716  0100               	movlb	0	; () banked
  1026  000718  0100               	movlb	0	; () banked
  1027  00071A  6FD2               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1028  00071C  0E19               	movlw	25
  1029  00071E  0100               	movlb	0	; () banked
  1030  000720  6FD1               	movwf	OpenUSART@spbrg& (0+255),b
  1031  000722  0E6C               	movlw	108
  1032  000724  ECD7  F008         	call	_OpenUSART
  1033  000728                     l3239:
  1034                           
  1035                           ;main.c: 231: block_on_To_msgqueues();
  1036  000728  EC36  F008         	call	_block_on_To_msgqueues	;wreg free
  1037                           
  1038                           ;main.c: 238: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1039  00072C  0101               	movlb	1	; () banked
  1040  00072E  0E01               	movlw	high main@msgtype
  1041  000730  0100               	movlb	0	; () banked
  1042  000732  0100               	movlb	0	; () banked
  1043  000734  6FDE               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1044  000736  0101               	movlb	1	; () banked
  1045  000738  0ECE               	movlw	low main@msgtype
  1046  00073A  0100               	movlb	0	; () banked
  1047  00073C  0100               	movlb	0	; () banked
  1048  00073E  6FDD               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1049  000740  0101               	movlb	1	; () banked
  1050  000742  0E01               	movlw	high main@msgbuffer
  1051  000744  0100               	movlb	0	; () banked
  1052  000746  0100               	movlb	0	; () banked
  1053  000748  6FE0               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1054  00074A  0101               	movlb	1	; () banked
  1055  00074C  0EB7               	movlw	low main@msgbuffer
  1056  00074E  0100               	movlb	0	; () banked
  1057  000750  0100               	movlb	0	; () banked
  1058  000752  6FDF               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1059  000754  0E0A               	movlw	10
  1060  000756  ECC7  F00B         	call	_ToMainHigh_recvmsg
  1061  00075A  0101               	movlb	1	; () banked
  1062  00075C  0101               	movlb	1	; () banked
  1063  00075E  6FCF               	movwf	main@length& (0+255),b
  1064                           
  1065                           ; BSR set to: 1
  1066                           ;main.c: 239: if (length < 0) {
  1067  000760  0101               	movlb	1	; () banked
  1068  000762  0101               	movlb	1	; () banked
  1069  000764  BFCF               	btfsc	main@length& (0+255),7,b
  1070  000766  D08D               	goto	l3273
  1071  000768  D07D               	goto	l3271
  1072  00076A                     l3247:
  1073                           
  1074                           ; BSR set to: 1
  1075                           ;main.c: 247: {
  1076                           ;main.c: 248: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1077  00076A  0101               	movlb	1	; () banked
  1078  00076C  0E01               	movlw	high main@t0thread_data
  1079  00076E  0100               	movlb	0	; () banked
  1080  000770  0100               	movlb	0	; () banked
  1081  000772  6FD2               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1082  000774  0101               	movlb	1	; () banked
  1083  000776  0EC4               	movlw	low main@t0thread_data
  1084  000778  0100               	movlb	0	; () banked
  1085  00077A  0100               	movlb	0	; () banked
  1086  00077C  6FD1               	movwf	timer0_lthread@tptr& (0+255),b
  1087  00077E  0101               	movlb	1	; () banked
  1088  000780  0100               	movlb	0	; () banked
  1089  000782  C1CE  F0D3         	movff	main@msgtype,timer0_lthread@msgtype
  1090  000786  0100               	movlb	0	; () banked
  1091  000788  0100               	movlb	0	; () banked
  1092  00078A  6BD4               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1093  00078C  0101               	movlb	1	; () banked
  1094  00078E  0101               	movlb	1	; () banked
  1095  000790  51CF               	movf	main@length& (0+255),w,b
  1096  000792  0100               	movlb	0	; () banked
  1097  000794  0100               	movlb	0	; () banked
  1098  000796  6FD5               	movwf	timer0_lthread@length& (0+255),b
  1099  000798  0100               	movlb	0	; () banked
  1100  00079A  6BD6               	clrf	(timer0_lthread@length+1)& (0+255),b
  1101  00079C  0100               	movlb	0	; () banked
  1102  00079E  BFD5               	btfsc	timer0_lthread@length& (0+255),7,b
  1103  0007A0  07D6               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1104  0007A2  0101               	movlb	1	; () banked
  1105  0007A4  0E01               	movlw	high main@msgbuffer
  1106  0007A6  0100               	movlb	0	; () banked
  1107  0007A8  0100               	movlb	0	; () banked
  1108  0007AA  6FD8               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1109  0007AC  0101               	movlb	1	; () banked
  1110  0007AE  0EB7               	movlw	low main@msgbuffer
  1111  0007B0  0100               	movlb	0	; () banked
  1112  0007B2  0100               	movlb	0	; () banked
  1113  0007B4  6FD7               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1114  0007B6  EC72  F00D         	call	_timer0_lthread	;wreg free
  1115                           
  1116                           ;main.c: 249: break;
  1117  0007BA  D063               	goto	l3273
  1118  0007BC                     l125:
  1119                           
  1120                           ;main.c: 252: case 41:
  1121                           ;main.c: 253: {
  1122                           ;main.c: 256: last_reg_recvd = msgbuffer[0];
  1123  0007BC  C1B7  F1C6         	movff	main@msgbuffer,main@last_reg_recvd
  1124                           
  1125                           ;main.c: 257: break;
  1126  0007C0  D060               	goto	l3273
  1127  0007C2                     l3249:
  1128                           
  1129                           ;main.c: 270: {
  1130                           ;main.c: 271: length = 2;
  1131  0007C2  0101               	movlb	1	; () banked
  1132  0007C4  6FB6               	movwf	??_main& (0+255),b
  1133  0007C6  0E02               	movlw	2
  1134  0007C8  0101               	movlb	1	; () banked
  1135  0007CA  0101               	movlb	1	; () banked
  1136  0007CC  6FCF               	movwf	main@length& (0+255),b
  1137  0007CE  0101               	movlb	1	; () banked
  1138  0007D0  51B6               	movf	??_main& (0+255),w,b
  1139                           
  1140                           ; BSR set to: 1
  1141                           ;main.c: 273: msgbuffer[0] = returnADCValue();
  1142  0007D2  ECB8  F00C         	call	_returnADCValue	;wreg free
  1143  0007D6  0100               	movlb	0	; () banked
  1144  0007D8  0100               	movlb	0	; () banked
  1145  0007DA  51D1               	movf	?_returnADCValue& (0+255),w,b
  1146  0007DC  0101               	movlb	1	; () banked
  1147  0007DE  0101               	movlb	1	; () banked
  1148  0007E0  6FB7               	movwf	main@msgbuffer& (0+255),b
  1149                           
  1150                           ; BSR set to: 1
  1151                           ;main.c: 274: msgbuffer[1] = 0xAA;
  1152  0007E2  0101               	movlb	1	; () banked
  1153  0007E4  6FB6               	movwf	??_main& (0+255),b
  1154  0007E6  0EAA               	movlw	170
  1155  0007E8  0101               	movlb	1	; () banked
  1156  0007EA  0101               	movlb	1	; () banked
  1157  0007EC  6FB8               	movwf	(main@msgbuffer+1)& (0+255),b
  1158  0007EE  0101               	movlb	1	; () banked
  1159  0007F0  51B6               	movf	??_main& (0+255),w,b
  1160                           
  1161                           ;main.c: 275: break;
  1162  0007F2  D028               	goto	l3267
  1163  0007F4                     l3255:
  1164                           
  1165                           ; BSR set to: 1
  1166                           ;main.c: 278: {
  1167                           ;main.c: 279: length = 1;
  1168  0007F4  0101               	movlb	1	; () banked
  1169  0007F6  6FB6               	movwf	??_main& (0+255),b
  1170  0007F8  0E01               	movlw	1
  1171  0007FA  0101               	movlb	1	; () banked
  1172  0007FC  0101               	movlb	1	; () banked
  1173  0007FE  6FCF               	movwf	main@length& (0+255),b
  1174  000800  0101               	movlb	1	; () banked
  1175  000802  51B6               	movf	??_main& (0+255),w,b
  1176                           
  1177                           ; BSR set to: 1
  1178                           ;main.c: 281: msgbuffer[0] = returnADCValue();
  1179  000804  ECB8  F00C         	call	_returnADCValue	;wreg free
  1180  000808  D00A               	goto	L1
  1181  00080A                     l3259:
  1182                           
  1183                           ; BSR set to: 1
  1184                           ;main.c: 285: {
  1185                           ;main.c: 286: length = 1;
  1186  00080A  0101               	movlb	1	; () banked
  1187  00080C  6FB6               	movwf	??_main& (0+255),b
  1188  00080E  0E01               	movlw	1
  1189  000810  0101               	movlb	1	; () banked
  1190  000812  0101               	movlb	1	; () banked
  1191  000814  6FCF               	movwf	main@length& (0+255),b
  1192  000816  0101               	movlb	1	; () banked
  1193  000818  51B6               	movf	??_main& (0+255),w,b
  1194                           
  1195                           ; BSR set to: 1
  1196                           ;main.c: 288: msgbuffer[0] = returnADCValue();
  1197  00081A  ECB8  F00C         	call	_returnADCValue	;wreg free
  1198  00081E                     L1:
  1199  00081E  0100               	movlb	0	; () banked
  1200  000820  0100               	movlb	0	; () banked
  1201  000822  51D1               	movf	?_returnADCValue& (0+255),w,b
  1202  000824  0101               	movlb	1	; () banked
  1203  000826  0101               	movlb	1	; () banked
  1204  000828  6FB7               	movwf	main@msgbuffer& (0+255),b
  1205                           
  1206                           ;main.c: 289: break;
  1207  00082A  D00C               	goto	l3267
  1208  00082C                     l3265:
  1209  00082C  0101               	movlb	1	; () banked
  1210  00082E  0101               	movlb	1	; () banked
  1211  000830  51C6               	movf	main@last_reg_recvd& (0+255),w,b
  1212                           
  1213                           ; Switch size 1, requested type "space"
  1214                           ; Number of cases is 3, Range of values is 168 to 170
  1215                           ; switch strategies available:
  1216                           ; Name         Instructions Cycles
  1217                           ; simple_byte           10     6 (average)
  1218                           ;	Chosen strategy is simple_byte
  1219  000832  0AA8               	xorlw	168	; case 168
  1220  000834  B4D8               	btfsc	status,2,c
  1221  000836  D7DE               	goto	l3255
  1222  000838  0A01               	xorlw	1	; case 169
  1223  00083A  B4D8               	btfsc	status,2,c
  1224  00083C  D7E6               	goto	l3259
  1225  00083E  0A03               	xorlw	3	; case 170
  1226  000840  B4D8               	btfsc	status,2,c
  1227  000842  D7BF               	goto	l3249
  1228  000844                     l3267:
  1229                           
  1230                           ; BSR set to: 1
  1231                           ;main.c: 292: start_i2c_slave_reply(length, msgbuffer);
  1232  000844  0101               	movlb	1	; () banked
  1233  000846  0E01               	movlw	high main@msgbuffer
  1234  000848  0100               	movlb	0	; () banked
  1235  00084A  0100               	movlb	0	; () banked
  1236  00084C  6FD2               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1237  00084E  0101               	movlb	1	; () banked
  1238  000850  0EB7               	movlw	low main@msgbuffer
  1239  000852  0100               	movlb	0	; () banked
  1240  000854  0100               	movlb	0	; () banked
  1241  000856  6FD1               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1242  000858  0101               	movlb	1	; () banked
  1243  00085A  0101               	movlb	1	; () banked
  1244  00085C  51CF               	movf	main@length& (0+255),w,b
  1245  00085E  EC5A  F005         	call	_start_i2c_slave_reply
  1246                           
  1247                           ;main.c: 293: break;
  1248  000862  D00F               	goto	l3273
  1249  000864                     l3271:
  1250  000864  0101               	movlb	1	; () banked
  1251  000866  0101               	movlb	1	; () banked
  1252  000868  51CE               	movf	main@msgtype& (0+255),w,b
  1253                           
  1254                           ; Switch size 1, requested type "space"
  1255                           ; Number of cases is 4, Range of values is 10 to 42
  1256                           ; switch strategies available:
  1257                           ; Name         Instructions Cycles
  1258                           ; simple_byte           13     7 (average)
  1259                           ;	Chosen strategy is simple_byte
  1260  00086A  0A0A               	xorlw	10	; case 10
  1261  00086C  B4D8               	btfsc	status,2,c
  1262  00086E  D77D               	goto	l3247
  1263  000870  0A22               	xorlw	34	; case 40
  1264  000872  B4D8               	btfsc	status,2,c
  1265  000874  D7A3               	goto	l125
  1266  000876  0A01               	xorlw	1	; case 41
  1267  000878  B4D8               	btfsc	status,2,c
  1268  00087A  D7A0               	goto	l125
  1269  00087C  0A03               	xorlw	3	; case 42
  1270  00087E  B4D8               	btfsc	status,2,c
  1271  000880  D7D5               	goto	l3265
  1272  000882                     l3273:
  1273                           
  1274                           ;main.c: 301: }
  1275                           ;main.c: 304: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1276  000882  0101               	movlb	1	; () banked
  1277  000884  0E01               	movlw	high main@msgtype
  1278  000886  0100               	movlb	0	; () banked
  1279  000888  0100               	movlb	0	; () banked
  1280  00088A  6FDE               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1281  00088C  0101               	movlb	1	; () banked
  1282  00088E  0ECE               	movlw	low main@msgtype
  1283  000890  0100               	movlb	0	; () banked
  1284  000892  0100               	movlb	0	; () banked
  1285  000894  6FDD               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1286  000896  0101               	movlb	1	; () banked
  1287  000898  0E01               	movlw	high main@msgbuffer
  1288  00089A  0100               	movlb	0	; () banked
  1289  00089C  0100               	movlb	0	; () banked
  1290  00089E  6FE0               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1291  0008A0  0101               	movlb	1	; () banked
  1292  0008A2  0EB7               	movlw	low main@msgbuffer
  1293  0008A4  0100               	movlb	0	; () banked
  1294  0008A6  0100               	movlb	0	; () banked
  1295  0008A8  6FDF               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1296  0008AA  0E0A               	movlw	10
  1297  0008AC  ECA6  F00B         	call	_ToMainLow_recvmsg
  1298  0008B0  0101               	movlb	1	; () banked
  1299  0008B2  0101               	movlb	1	; () banked
  1300  0008B4  6FCF               	movwf	main@length& (0+255),b
  1301                           
  1302                           ; BSR set to: 1
  1303                           ;main.c: 305: if (length < 0) {
  1304  0008B6  0101               	movlb	1	; () banked
  1305  0008B8  0101               	movlb	1	; () banked
  1306  0008BA  BFCF               	btfsc	main@length& (0+255),7,b
  1307  0008BC  D735               	goto	l3239
  1308  0008BE  D052               	goto	l3285
  1309  0008C0                     l3279:
  1310                           
  1311                           ; BSR set to: 1
  1312                           ;main.c: 313: {
  1313                           ;main.c: 314: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1314  0008C0  0101               	movlb	1	; () banked
  1315  0008C2  0E01               	movlw	high main@t1thread_data
  1316  0008C4  0101               	movlb	1	; () banked
  1317  0008C6  0101               	movlb	1	; () banked
  1318  0008C8  6FAD               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1319  0008CA  0101               	movlb	1	; () banked
  1320  0008CC  0ECC               	movlw	low main@t1thread_data
  1321  0008CE  0101               	movlb	1	; () banked
  1322  0008D0  0101               	movlb	1	; () banked
  1323  0008D2  6FAC               	movwf	timer1_lthread@tptr& (0+255),b
  1324  0008D4  0101               	movlb	1	; () banked
  1325  0008D6  0101               	movlb	1	; () banked
  1326  0008D8  C1CE  F1AE         	movff	main@msgtype,timer1_lthread@msgtype
  1327  0008DC  0101               	movlb	1	; () banked
  1328  0008DE  0101               	movlb	1	; () banked
  1329  0008E0  6BAF               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1330  0008E2  0101               	movlb	1	; () banked
  1331  0008E4  0101               	movlb	1	; () banked
  1332  0008E6  51CF               	movf	main@length& (0+255),w,b
  1333  0008E8  0101               	movlb	1	; () banked
  1334  0008EA  0101               	movlb	1	; () banked
  1335  0008EC  6FB0               	movwf	timer1_lthread@length& (0+255),b
  1336  0008EE  0101               	movlb	1	; () banked
  1337  0008F0  6BB1               	clrf	(timer1_lthread@length+1)& (0+255),b
  1338  0008F2  0101               	movlb	1	; () banked
  1339  0008F4  BFB0               	btfsc	timer1_lthread@length& (0+255),7,b
  1340  0008F6  07B1               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1341  0008F8  0101               	movlb	1	; () banked
  1342  0008FA  0E01               	movlw	high main@msgbuffer
  1343  0008FC  0101               	movlb	1	; () banked
  1344  0008FE  0101               	movlb	1	; () banked
  1345  000900  6FB3               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1346  000902  0101               	movlb	1	; () banked
  1347  000904  0EB7               	movlw	low main@msgbuffer
  1348  000906  0101               	movlb	1	; () banked
  1349  000908  0101               	movlb	1	; () banked
  1350  00090A  6FB2               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1351  00090C  EC21  F00A         	call	_timer1_lthread	;wreg free
  1352                           
  1353                           ;main.c: 315: break;
  1354  000910  D70B               	goto	l3239
  1355  000912                     l3281:
  1356                           
  1357                           ;main.c: 318: case 31:
  1358                           ;main.c: 319: {
  1359                           ;main.c: 320: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1360  000912  0101               	movlb	1	; () banked
  1361  000914  0E01               	movlw	high main@uthread_data
  1362  000916  0100               	movlb	0	; () banked
  1363  000918  0100               	movlb	0	; () banked
  1364  00091A  6FD2               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1365  00091C  0101               	movlb	1	; () banked
  1366  00091E  0EC2               	movlw	low main@uthread_data
  1367  000920  0100               	movlb	0	; () banked
  1368  000922  0100               	movlb	0	; () banked
  1369  000924  6FD1               	movwf	uart_lthread@uptr& (0+255),b
  1370  000926  0101               	movlb	1	; () banked
  1371  000928  0100               	movlb	0	; () banked
  1372  00092A  C1CE  F0D3         	movff	main@msgtype,uart_lthread@msgtype
  1373  00092E  0100               	movlb	0	; () banked
  1374  000930  0100               	movlb	0	; () banked
  1375  000932  6BD4               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1376  000934  0101               	movlb	1	; () banked
  1377  000936  0101               	movlb	1	; () banked
  1378  000938  51CF               	movf	main@length& (0+255),w,b
  1379  00093A  0100               	movlb	0	; () banked
  1380  00093C  0100               	movlb	0	; () banked
  1381  00093E  6FD5               	movwf	uart_lthread@length& (0+255),b
  1382  000940  0100               	movlb	0	; () banked
  1383  000942  6BD6               	clrf	(uart_lthread@length+1)& (0+255),b
  1384  000944  0100               	movlb	0	; () banked
  1385  000946  BFD5               	btfsc	uart_lthread@length& (0+255),7,b
  1386  000948  07D6               	decf	(uart_lthread@length+1)& (0+255),f,b
  1387  00094A  0101               	movlb	1	; () banked
  1388  00094C  0E01               	movlw	high main@msgbuffer
  1389  00094E  0100               	movlb	0	; () banked
  1390  000950  0100               	movlb	0	; () banked
  1391  000952  6FD8               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1392  000954  0101               	movlb	1	; () banked
  1393  000956  0EB7               	movlw	low main@msgbuffer
  1394  000958  0100               	movlb	0	; () banked
  1395  00095A  0100               	movlb	0	; () banked
  1396  00095C  6FD7               	movwf	uart_lthread@msgbuffer& (0+255),b
  1397  00095E  EC47  F00C         	call	_uart_lthread	;wreg free
  1398                           
  1399                           ;main.c: 321: break;
  1400  000962  D6E2               	goto	l3239
  1401  000964                     l3285:
  1402  000964  0101               	movlb	1	; () banked
  1403  000966  0101               	movlb	1	; () banked
  1404  000968  51CE               	movf	main@msgtype& (0+255),w,b
  1405                           
  1406                           ; Switch size 1, requested type "space"
  1407                           ; Number of cases is 3, Range of values is 11 to 31
  1408                           ; switch strategies available:
  1409                           ; Name         Instructions Cycles
  1410                           ; simple_byte           10     6 (average)
  1411                           ;	Chosen strategy is simple_byte
  1412  00096A  0A0B               	xorlw	11	; case 11
  1413  00096C  B4D8               	btfsc	status,2,c
  1414  00096E  D7A8               	goto	l3279
  1415  000970  0A15               	xorlw	21	; case 30
  1416  000972  B4D8               	btfsc	status,2,c
  1417  000974  D7CE               	goto	l3281
  1418  000976  0A01               	xorlw	1	; case 31
  1419  000978  B4D8               	btfsc	status,2,c
  1420  00097A  D7CB               	goto	l3281
  1421  00097C  D6D5               	goto	l3239
  1422  00097E                     __end_of_main:
  1423                           	opt stack 0
  1424                           tblptru	equ	0xFF8
  1425                           tblptrh	equ	0xFF7
  1426                           tblptrl	equ	0xFF6
  1427                           tablat	equ	0xFF5
  1428                           postinc0	equ	0xFEE
  1429                           wreg	equ	0xFE8
  1430                           status	equ	0xFD8
  1431                           
  1432 ;; *************** function _uart_lthread *****************
  1433 ;; Defined at:
  1434 ;;		line 9 in file "../src/uart_thread.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;  uptr            2   27[BANK0 ] PTR struct __uart_thread
  1437 ;;		 -> main@uthread_data(2), 
  1438 ;;  msgtype         2   29[BANK0 ] int 
  1439 ;;  length          2   31[BANK0 ] int 
  1440 ;;  msgbuffer       2   33[BANK0 ] PTR unsigned char 
  1441 ;;		 -> main@msgbuffer(11), 
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  2   27[BANK0 ] int 
  1446 ;; Registers used:
  1447 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1453 ;;      Params:         0       8       0       0       0
  1454 ;;      Locals:         0       0       0       0       0
  1455 ;;      Temps:          0       0       0       0       0
  1456 ;;      Totals:         0       8       0       0       0
  1457 ;;Total ram usage:        8 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:   10
  1460 ;; This function calls:
  1461 ;;		Nothing
  1462 ;; This function is called by:
  1463 ;;		_main
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text1
  1468  00188E                     __ptext1:
  1469                           	opt stack 0
  1470  00188E                     _uart_lthread:
  1471                           	opt stack 19
  1472                           
  1473                           ;uart_thread.c: 10: if (msgtype == 30) {
  1474                           
  1475                           ; BSR set to: 1
  1476                           ;incstack = 0
  1477  00188E  0100               	movlb	0	; () banked
  1478  001890  0100               	movlb	0	; () banked
  1479  001892  51D3               	movf	uart_lthread@msgtype& (0+255),w,b
  1480  001894  0A1E               	xorlw	30
  1481  001896  11D4               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1482  001898  B4D8               	btfsc	status,2,c
  1483  00189A  0012               	return	
  1484                           
  1485                           ; BSR set to: 0
  1486                           
  1487                           ; BSR set to: 0
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;uart_thread.c: 11: } else if (msgtype == 31) {
  1491  00189C  0100               	movlb	0	; () banked
  1492  00189E  0100               	movlb	0	; () banked
  1493  0018A0  51D3               	movf	uart_lthread@msgtype& (0+255),w,b
  1494  0018A2  0A1F               	xorlw	31
  1495  0018A4  11D4               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1496  0018A6  A4D8               	btfss	status,2,c
  1497  0018A8  0012               	return	
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;uart_thread.c: 14: msgbuffer[length] = '\0';
  1501  0018AA  0100               	movlb	0	; () banked
  1502  0018AC  0100               	movlb	0	; () banked
  1503  0018AE  51D5               	movf	uart_lthread@length& (0+255),w,b
  1504  0018B0  0100               	movlb	0	; () banked
  1505  0018B2  0100               	movlb	0	; () banked
  1506  0018B4  25D7               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1507  0018B6  6ED9               	movwf	fsr2l,c
  1508  0018B8  0100               	movlb	0	; () banked
  1509  0018BA  0100               	movlb	0	; () banked
  1510  0018BC  51D6               	movf	(uart_lthread@length+1)& (0+255),w,b
  1511  0018BE  0100               	movlb	0	; () banked
  1512  0018C0  0100               	movlb	0	; () banked
  1513  0018C2  21D8               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1514  0018C4  6EDA               	movwf	fsr2h,c
  1515  0018C6  0E00               	movlw	0
  1516  0018C8  6EDF               	movwf	indf2,c
  1517  0018CA  0012               	return	
  1518  0018CC                     __end_of_uart_lthread:
  1519                           	opt stack 0
  1520                           tblptru	equ	0xFF8
  1521                           tblptrh	equ	0xFF7
  1522                           tblptrl	equ	0xFF6
  1523                           tablat	equ	0xFF5
  1524                           postinc0	equ	0xFEE
  1525                           wreg	equ	0xFE8
  1526                           indf2	equ	0xFDF
  1527                           fsr2h	equ	0xFDA
  1528                           fsr2l	equ	0xFD9
  1529                           status	equ	0xFD8
  1530                           
  1531 ;; *************** function _timer1_lthread *****************
  1532 ;; Defined at:
  1533 ;;		line 14 in file "../src/timer1_thread.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;  tptr            2   10[BANK1 ] PTR struct __timer1_thre
  1536 ;;		 -> main@t1thread_data(2), 
  1537 ;;  msgtype         2   12[BANK1 ] int 
  1538 ;;  length          2   14[BANK1 ] int 
  1539 ;;  msgbuffer       2   16[BANK1 ] PTR unsigned char 
  1540 ;;		 -> main@msgbuffer(11), 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  retval          1   19[BANK1 ] char 
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  2   10[BANK1 ] int 
  1545 ;; Registers used:
  1546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1552 ;;      Params:         0       0       8       0       0
  1553 ;;      Locals:         0       0       1       0       0
  1554 ;;      Temps:          0       0       1       0       0
  1555 ;;      Totals:         0       0      10       0       0
  1556 ;;Total ram usage:       10 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:   13
  1559 ;; This function calls:
  1560 ;;		_FromMainHigh_sendmsg
  1561 ;;		___lwmod
  1562 ;; This function is called by:
  1563 ;;		_main
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text2
  1568  001442                     __ptext2:
  1569                           	opt stack 0
  1570  001442                     _timer1_lthread:
  1571                           	opt stack 16
  1572                           
  1573                           ;timer1_thread.c: 15: signed char retval;
  1574                           ;timer1_thread.c: 17: tptr->msgcount++;
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;incstack = 0
  1578  001442  C1AC  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1579  001446  C1AD  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1580  00144A  2ADE               	incf	postinc2,f,c
  1581  00144C  0E00               	movlw	0
  1582  00144E  22DD               	addwfc	postdec2,f,c
  1583                           
  1584                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1585  001450  C1AC  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1586  001454  C1AD  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1587  001458  0100               	movlb	0	; () banked
  1588  00145A  CFDE F0D1          	movff	postinc2,___lwmod@dividend
  1589  00145E  0100               	movlb	0	; () banked
  1590  001460  CFDD F0D2          	movff	postdec2,___lwmod@dividend+1
  1591  001464  0E00               	movlw	0
  1592  001466  0100               	movlb	0	; () banked
  1593  001468  0100               	movlb	0	; () banked
  1594  00146A  6FD4               	movwf	(___lwmod@divisor+1)& (0+255),b
  1595  00146C  0E0A               	movlw	10
  1596  00146E  0100               	movlb	0	; () banked
  1597  001470  6FD3               	movwf	___lwmod@divisor& (0+255),b
  1598  001472  EC20  F009         	call	___lwmod	;wreg free
  1599  001476  0100               	movlb	0	; () banked
  1600  001478  0100               	movlb	0	; () banked
  1601  00147A  51D1               	movf	?___lwmod& (0+255),w,b
  1602  00147C  0A09               	xorlw	9
  1603  00147E  0100               	movlb	0	; () banked
  1604  001480  11D2               	iorwf	(?___lwmod+1)& (0+255),w,b
  1605  001482  A4D8               	btfss	status,2,c
  1606  001484  0012               	return	
  1607                           
  1608                           ; BSR set to: 0
  1609                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1610  001486  0101               	movlb	1	; () banked
  1611  001488  6FB4               	movwf	??_timer1_lthread& (0+255),b
  1612  00148A  0E14               	movlw	20
  1613  00148C  0101               	movlb	1	; () banked
  1614  00148E  0101               	movlb	1	; () banked
  1615  001490  6FA8               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1616  001492  0101               	movlb	1	; () banked
  1617  001494  51B4               	movf	??_timer1_lthread& (0+255),w,b
  1618  001496  0101               	movlb	1	; () banked
  1619  001498  0101               	movlb	1	; () banked
  1620  00149A  C1AD  F1AA         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1621  00149E  0101               	movlb	1	; () banked
  1622  0014A0  0101               	movlb	1	; () banked
  1623  0014A2  C1AC  F1A9         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1624  0014A6  0E02               	movlw	2
  1625  0014A8  EC82  F00C         	call	_FromMainHigh_sendmsg
  1626  0014AC  0101               	movlb	1	; () banked
  1627  0014AE  0101               	movlb	1	; () banked
  1628  0014B0  6FB5               	movwf	timer1_lthread@retval& (0+255),b
  1629  0014B2  0012               	return	
  1630  0014B4                     __end_of_timer1_lthread:
  1631                           	opt stack 0
  1632                           tblptru	equ	0xFF8
  1633                           tblptrh	equ	0xFF7
  1634                           tblptrl	equ	0xFF6
  1635                           tablat	equ	0xFF5
  1636                           postinc0	equ	0xFEE
  1637                           wreg	equ	0xFE8
  1638                           indf2	equ	0xFDF
  1639                           postinc2	equ	0xFDE
  1640                           postdec2	equ	0xFDD
  1641                           fsr2h	equ	0xFDA
  1642                           fsr2l	equ	0xFD9
  1643                           status	equ	0xFD8
  1644                           
  1645 ;; *************** function ___lwmod *****************
  1646 ;; Defined at:
  1647 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  dividend        2   27[BANK0 ] unsigned int 
  1650 ;;  divisor         2   29[BANK0 ] unsigned int 
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  counter         1   32[BANK0 ] unsigned char 
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  2   27[BANK0 ] unsigned int 
  1655 ;; Registers used:
  1656 ;;		wreg, status,2, status,0
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1662 ;;      Params:         0       4       0       0       0
  1663 ;;      Locals:         0       1       0       0       0
  1664 ;;      Temps:          0       1       0       0       0
  1665 ;;      Totals:         0       6       0       0       0
  1666 ;;Total ram usage:        6 bytes
  1667 ;; Hardware stack levels used:    1
  1668 ;; Hardware stack levels required when called:   10
  1669 ;; This function calls:
  1670 ;;		Nothing
  1671 ;; This function is called by:
  1672 ;;		_timer1_lthread
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           	psect	text3
  1677  001240                     __ptext3:
  1678                           	opt stack 0
  1679  001240                     ___lwmod:
  1680                           	opt stack 18
  1681                           
  1682                           ;incstack = 0
  1683  001240  0100               	movlb	0	; () banked
  1684  001242  0100               	movlb	0	; () banked
  1685  001244  51D4               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1686  001246  11D3               	iorwf	___lwmod@divisor& (0+255),w,b
  1687  001248  B4D8               	btfsc	status,2,c
  1688  00124A  D03A               	goto	l1033
  1689                           
  1690                           ; BSR set to: 0
  1691  00124C  0100               	movlb	0	; () banked
  1692  00124E  6FD5               	movwf	??___lwmod& (0+255),b
  1693  001250  0E01               	movlw	1
  1694  001252  0100               	movlb	0	; () banked
  1695  001254  0100               	movlb	0	; () banked
  1696  001256  6FD6               	movwf	___lwmod@counter& (0+255),b
  1697  001258  0100               	movlb	0	; () banked
  1698  00125A  51D5               	movf	??___lwmod& (0+255),w,b
  1699  00125C  D009               	goto	l3413
  1700  00125E                     l3411:
  1701                           
  1702                           ; BSR set to: 0
  1703  00125E  0100               	movlb	0	; () banked
  1704  001260  0100               	movlb	0	; () banked
  1705  001262  0100               	movlb	0	; () banked
  1706  001264  90D8               	bcf	status,0,c
  1707  001266  37D3               	rlcf	___lwmod@divisor& (0+255),f,b
  1708  001268  37D4               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1709  00126A  0100               	movlb	0	; () banked
  1710  00126C  0100               	movlb	0	; () banked
  1711  00126E  2BD6               	incf	___lwmod@counter& (0+255),f,b
  1712  001270                     l3413:
  1713                           
  1714                           ; BSR set to: 0
  1715  001270  0100               	movlb	0	; () banked
  1716  001272  0100               	movlb	0	; () banked
  1717  001274  AFD4               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1718  001276  D7F3               	goto	l3411
  1719  001278                     l3415:
  1720                           
  1721                           ; BSR set to: 0
  1722  001278  0100               	movlb	0	; () banked
  1723  00127A  0100               	movlb	0	; () banked
  1724  00127C  51D3               	movf	___lwmod@divisor& (0+255),w,b
  1725  00127E  0100               	movlb	0	; () banked
  1726  001280  0100               	movlb	0	; () banked
  1727  001282  5DD1               	subwf	___lwmod@dividend& (0+255),w,b
  1728  001284  0100               	movlb	0	; () banked
  1729  001286  0100               	movlb	0	; () banked
  1730  001288  51D4               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1731  00128A  0100               	movlb	0	; () banked
  1732  00128C  0100               	movlb	0	; () banked
  1733  00128E  59D2               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1734  001290  A0D8               	btfss	status,0,c
  1735  001292  D00C               	goto	l3419
  1736                           
  1737                           ; BSR set to: 0
  1738  001294  0100               	movlb	0	; () banked
  1739  001296  0100               	movlb	0	; () banked
  1740  001298  51D3               	movf	___lwmod@divisor& (0+255),w,b
  1741  00129A  0100               	movlb	0	; () banked
  1742  00129C  0100               	movlb	0	; () banked
  1743  00129E  5FD1               	subwf	___lwmod@dividend& (0+255),f,b
  1744  0012A0  0100               	movlb	0	; () banked
  1745  0012A2  0100               	movlb	0	; () banked
  1746  0012A4  51D4               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1747  0012A6  0100               	movlb	0	; () banked
  1748  0012A8  0100               	movlb	0	; () banked
  1749  0012AA  5BD2               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1750  0012AC                     l3419:
  1751                           
  1752                           ; BSR set to: 0
  1753  0012AC  0100               	movlb	0	; () banked
  1754  0012AE  0100               	movlb	0	; () banked
  1755  0012B0  0100               	movlb	0	; () banked
  1756  0012B2  90D8               	bcf	status,0,c
  1757  0012B4  33D4               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1758  0012B6  33D3               	rrcf	___lwmod@divisor& (0+255),f,b
  1759                           
  1760                           ; BSR set to: 0
  1761  0012B8  0100               	movlb	0	; () banked
  1762  0012BA  0100               	movlb	0	; () banked
  1763  0012BC  2FD6               	decfsz	___lwmod@counter& (0+255),f,b
  1764  0012BE  D7DC               	goto	l3415
  1765  0012C0                     l1033:
  1766                           
  1767                           ; BSR set to: 0
  1768  0012C0  C0D1  F0D1         	movff	___lwmod@dividend,?___lwmod
  1769  0012C4  C0D2  F0D2         	movff	___lwmod@dividend+1,?___lwmod+1
  1770                           
  1771                           ; BSR set to: 0
  1772  0012C8  0012               	return	
  1773  0012CA                     __end_of___lwmod:
  1774                           	opt stack 0
  1775                           tblptru	equ	0xFF8
  1776                           tblptrh	equ	0xFF7
  1777                           tblptrl	equ	0xFF6
  1778                           tablat	equ	0xFF5
  1779                           postinc0	equ	0xFEE
  1780                           wreg	equ	0xFE8
  1781                           indf2	equ	0xFDF
  1782                           postinc2	equ	0xFDE
  1783                           postdec2	equ	0xFDD
  1784                           fsr2h	equ	0xFDA
  1785                           fsr2l	equ	0xFD9
  1786                           status	equ	0xFD8
  1787                           
  1788 ;; *************** function _FromMainHigh_sendmsg *****************
  1789 ;; Defined at:
  1790 ;;		line 174 in file "../src/messages.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  length          1    wreg     unsigned char 
  1793 ;;  msgtype         1    6[BANK1 ] unsigned char 
  1794 ;;  data            2    7[BANK1 ] PTR void 
  1795 ;;		 -> main@t1thread_data(2), 
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;  length          1    9[BANK1 ] unsigned char 
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      char 
  1800 ;; Registers used:
  1801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1807 ;;      Params:         0       0       3       0       0
  1808 ;;      Locals:         0       0       1       0       0
  1809 ;;      Temps:          0       0       0       0       0
  1810 ;;      Totals:         0       0       4       0       0
  1811 ;;Total ram usage:        4 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; Hardware stack levels required when called:   12
  1814 ;; This function calls:
  1815 ;;		_send_msg
  1816 ;; This function is called by:
  1817 ;;		_timer1_lthread
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           	psect	text4
  1822  001904                     __ptext4:
  1823                           	opt stack 0
  1824  001904                     _FromMainHigh_sendmsg:
  1825                           	opt stack 16
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;incstack = 0
  1829                           ;FromMainHigh_sendmsg@length stored from wreg
  1830  001904  CFE8 F1AB          	movff	wreg,FromMainHigh_sendmsg@length
  1831                           
  1832                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1833  001908  0101               	movlb	1	; () banked
  1834  00190A  0E01               	movlw	high _FromMainHigh_MQ
  1835  00190C  0100               	movlb	0	; () banked
  1836  00190E  0100               	movlb	0	; () banked
  1837  001910  6FDC               	movwf	(send_msg@qptr+1)& (0+255),b
  1838  001912  0101               	movlb	1	; () banked
  1839  001914  0E00               	movlw	low _FromMainHigh_MQ
  1840  001916  0100               	movlb	0	; () banked
  1841  001918  0100               	movlb	0	; () banked
  1842  00191A  6FDB               	movwf	send_msg@qptr& (0+255),b
  1843  00191C  C1AB  F0DD         	movff	FromMainHigh_sendmsg@length,send_msg@length
  1844  001920  C1A8  F0DE         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  1845  001924  0101               	movlb	1	; () banked
  1846  001926  0100               	movlb	0	; () banked
  1847  001928  C1AA  F0E0         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  1848  00192C  0101               	movlb	1	; () banked
  1849  00192E  0100               	movlb	0	; () banked
  1850  001930  C1A9  F0DF         	movff	FromMainHigh_sendmsg@data,send_msg@data
  1851  001934  ECE1  F005         	call	_send_msg	;wreg free
  1852  001938  0012               	return	
  1853  00193A                     __end_of_FromMainHigh_sendmsg:
  1854                           	opt stack 0
  1855                           tblptru	equ	0xFF8
  1856                           tblptrh	equ	0xFF7
  1857                           tblptrl	equ	0xFF6
  1858                           tablat	equ	0xFF5
  1859                           postinc0	equ	0xFEE
  1860                           wreg	equ	0xFE8
  1861                           indf2	equ	0xFDF
  1862                           postinc2	equ	0xFDE
  1863                           postdec2	equ	0xFDD
  1864                           fsr2h	equ	0xFDA
  1865                           fsr2l	equ	0xFD9
  1866                           status	equ	0xFD8
  1867                           
  1868 ;; *************** function _send_msg *****************
  1869 ;; Defined at:
  1870 ;;		line 24 in file "../src/messages.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  qptr            2   37[BANK0 ] PTR struct __msg_queue
  1873 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1874 ;;  length          1   39[BANK0 ] unsigned char 
  1875 ;;  msgtype         1   40[BANK0 ] unsigned char 
  1876 ;;  data            2   41[BANK0 ] PTR void 
  1877 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), 
  1878 ;;		 -> main@ic(28), main@uc(5), 
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;  qmsg            2    4[BANK1 ] PTR struct __msg
  1881 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  1882 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1883 ;;  tlength         2    1[BANK1 ] unsigned int 
  1884 ;;  slot            1    3[BANK1 ] unsigned char 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      char 
  1887 ;; Registers used:
  1888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1894 ;;      Params:         0       6       0       0       0
  1895 ;;      Locals:         0       0       5       0       0
  1896 ;;      Temps:          0       0       1       0       0
  1897 ;;      Totals:         0       6       6       0       0
  1898 ;;Total ram usage:       12 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:   11
  1901 ;; This function calls:
  1902 ;;		_memcpy
  1903 ;; This function is called by:
  1904 ;;		_FromMainHigh_sendmsg
  1905 ;;		_FromMainLow_sendmsg
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           	psect	text5
  1910  000BC2                     __ptext5:
  1911                           	opt stack 0
  1912  000BC2                     _send_msg:
  1913                           	opt stack 16
  1914                           
  1915                           ;messages.c: 25: unsigned char slot;
  1916                           ;messages.c: 27: msg *qmsg;
  1917                           ;messages.c: 28: size_t tlength = length;
  1918                           
  1919                           ;incstack = 0
  1920  000BC2  0100               	movlb	0	; () banked
  1921  000BC4  0101               	movlb	1	; () banked
  1922  000BC6  C0DD  F1A3         	movff	send_msg@length,send_msg@tlength
  1923  000BCA  0101               	movlb	1	; () banked
  1924  000BCC  0101               	movlb	1	; () banked
  1925  000BCE  6BA4               	clrf	(send_msg@tlength+1)& (0+255),b
  1926                           
  1927                           ; BSR set to: 1
  1928                           ;messages.c: 38: slot = qptr->cur_write_ind;
  1929  000BD0  0100               	movlb	0	; () banked
  1930  000BD2  EE20 F034          	lfsr	2,52
  1931  000BD6  0100               	movlb	0	; () banked
  1932  000BD8  51DB               	movf	send_msg@qptr& (0+255),w,b
  1933  000BDA  26D9               	addwf	fsr2l,f,c
  1934  000BDC  0100               	movlb	0	; () banked
  1935  000BDE  51DC               	movf	(send_msg@qptr+1)& (0+255),w,b
  1936  000BE0  22DA               	addwfc	fsr2h,f,c
  1937  000BE2  50DF               	movf	indf2,w,c
  1938  000BE4  0101               	movlb	1	; () banked
  1939  000BE6  0101               	movlb	1	; () banked
  1940  000BE8  6FA5               	movwf	send_msg@slot& (0+255),b
  1941                           
  1942                           ; BSR set to: 1
  1943                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  1944  000BEA  0101               	movlb	1	; () banked
  1945  000BEC  0101               	movlb	1	; () banked
  1946  000BEE  51A5               	movf	send_msg@slot& (0+255),w,b
  1947  000BF0  0D0D               	mullw	13
  1948  000BF2  50F3               	movf	prodl,w,c
  1949  000BF4  0100               	movlb	0	; () banked
  1950  000BF6  0100               	movlb	0	; () banked
  1951  000BF8  25DB               	addwf	send_msg@qptr& (0+255),w,b
  1952  000BFA  0101               	movlb	1	; () banked
  1953  000BFC  0101               	movlb	1	; () banked
  1954  000BFE  6FA6               	movwf	send_msg@qmsg& (0+255),b
  1955  000C00  50F4               	movf	prodh,w,c
  1956  000C02  0100               	movlb	0	; () banked
  1957  000C04  0100               	movlb	0	; () banked
  1958  000C06  21DC               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  1959  000C08  0101               	movlb	1	; () banked
  1960  000C0A  6FA7               	movwf	(send_msg@qmsg+1)& (0+255),b
  1961                           
  1962                           ; BSR set to: 1
  1963                           ;messages.c: 41: if (qmsg->full != 0) {
  1964  000C0C  C1A6  FFD9         	movff	send_msg@qmsg,fsr2l
  1965  000C10  C1A7  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1966  000C14  50DF               	movf	indf2,w,c
  1967  000C16  B4D8               	btfsc	status,2,c
  1968  000C18  D002               	goto	l3315
  1969                           
  1970                           ; BSR set to: 1
  1971                           ;messages.c: 42: return (-1);
  1972  000C1A  0EFF               	movlw	255
  1973  000C1C  0012               	return	
  1974  000C1E                     l3315:
  1975                           
  1976                           ; BSR set to: 1
  1977                           ;messages.c: 43: }
  1978                           ;messages.c: 46: qmsg->length = length;
  1979  000C1E  0101               	movlb	1	; () banked
  1980  000C20  EE20 F001          	lfsr	2,1
  1981  000C24  0101               	movlb	1	; () banked
  1982  000C26  51A6               	movf	send_msg@qmsg& (0+255),w,b
  1983  000C28  26D9               	addwf	fsr2l,f,c
  1984  000C2A  0101               	movlb	1	; () banked
  1985  000C2C  51A7               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1986  000C2E  22DA               	addwfc	fsr2h,f,c
  1987  000C30  0100               	movlb	0	; () banked
  1988  000C32  C0DD  FFDF         	movff	send_msg@length,indf2
  1989                           
  1990                           ;messages.c: 47: qmsg->msgtype = msgtype;
  1991  000C36  0101               	movlb	1	; () banked
  1992  000C38  EE20 F002          	lfsr	2,2
  1993  000C3C  0101               	movlb	1	; () banked
  1994  000C3E  51A6               	movf	send_msg@qmsg& (0+255),w,b
  1995  000C40  26D9               	addwf	fsr2l,f,c
  1996  000C42  0101               	movlb	1	; () banked
  1997  000C44  51A7               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1998  000C46  22DA               	addwfc	fsr2h,f,c
  1999  000C48  0100               	movlb	0	; () banked
  2000  000C4A  C0DE  FFDF         	movff	send_msg@msgtype,indf2
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2004  000C4E  0E03               	movlw	3
  2005  000C50  0101               	movlb	1	; () banked
  2006  000C52  0101               	movlb	1	; () banked
  2007  000C54  25A6               	addwf	send_msg@qmsg& (0+255),w,b
  2008  000C56  0100               	movlb	0	; () banked
  2009  000C58  0100               	movlb	0	; () banked
  2010  000C5A  6FD1               	movwf	memcpy@d1& (0+255),b
  2011  000C5C  0E00               	movlw	0
  2012  000C5E  0101               	movlb	1	; () banked
  2013  000C60  0101               	movlb	1	; () banked
  2014  000C62  21A7               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2015  000C64  0100               	movlb	0	; () banked
  2016  000C66  6FD2               	movwf	(memcpy@d1+1)& (0+255),b
  2017  000C68  0100               	movlb	0	; () banked
  2018  000C6A  0100               	movlb	0	; () banked
  2019  000C6C  C0E0  F0D4         	movff	send_msg@data+1,memcpy@s1+1
  2020  000C70  0100               	movlb	0	; () banked
  2021  000C72  0100               	movlb	0	; () banked
  2022  000C74  C0DF  F0D3         	movff	send_msg@data,memcpy@s1
  2023  000C78  C1A3  F0D5         	movff	send_msg@tlength,memcpy@n
  2024  000C7C  C1A4  F0D6         	movff	send_msg@tlength+1,memcpy@n+1
  2025  000C80  ECC6  F00A         	call	_memcpy	;wreg free
  2026                           
  2027                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2028  000C84  0100               	movlb	0	; () banked
  2029  000C86  EE20 F034          	lfsr	2,52
  2030  000C8A  0100               	movlb	0	; () banked
  2031  000C8C  51DB               	movf	send_msg@qptr& (0+255),w,b
  2032  000C8E  26D9               	addwf	fsr2l,f,c
  2033  000C90  0100               	movlb	0	; () banked
  2034  000C92  51DC               	movf	(send_msg@qptr+1)& (0+255),w,b
  2035  000C94  22DA               	addwfc	fsr2h,f,c
  2036  000C96  0100               	movlb	0	; () banked
  2037  000C98  EE10 F034          	lfsr	1,52
  2038  000C9C  0100               	movlb	0	; () banked
  2039  000C9E  51DB               	movf	send_msg@qptr& (0+255),w,b
  2040  000CA0  26E1               	addwf	fsr1l,f,c
  2041  000CA2  0100               	movlb	0	; () banked
  2042  000CA4  51DC               	movf	(send_msg@qptr+1)& (0+255),w,b
  2043  000CA6  22E2               	addwfc	fsr1h,f,c
  2044  000CA8  50E7               	movf	indf1,w,c
  2045  000CAA  0101               	movlb	1	; () banked
  2046  000CAC  6FA2               	movwf	??_send_msg& (0+255),b
  2047  000CAE  0101               	movlb	1	; () banked
  2048  000CB0  29A2               	incf	??_send_msg& (0+255),w,b
  2049  000CB2  0B03               	andlw	3
  2050  000CB4  6EDF               	movwf	indf2,c
  2051                           
  2052                           ; BSR set to: 1
  2053                           ;messages.c: 59: qmsg->full = 1;
  2054  000CB6  C1A6  FFD9         	movff	send_msg@qmsg,fsr2l
  2055  000CBA  C1A7  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2056  000CBE  0E01               	movlw	1
  2057  000CC0  6EDF               	movwf	indf2,c
  2058                           
  2059                           ; BSR set to: 1
  2060                           ;messages.c: 60: return (1);
  2061  000CC2  0E01               	movlw	1
  2062  000CC4  0012               	return	
  2063  000CC6                     __end_of_send_msg:
  2064                           	opt stack 0
  2065                           tblptru	equ	0xFF8
  2066                           tblptrh	equ	0xFF7
  2067                           tblptrl	equ	0xFF6
  2068                           tablat	equ	0xFF5
  2069                           prodh	equ	0xFF4
  2070                           prodl	equ	0xFF3
  2071                           postinc0	equ	0xFEE
  2072                           wreg	equ	0xFE8
  2073                           indf1	equ	0xFE7
  2074                           fsr1h	equ	0xFE2
  2075                           fsr1l	equ	0xFE1
  2076                           indf2	equ	0xFDF
  2077                           postinc2	equ	0xFDE
  2078                           postdec2	equ	0xFDD
  2079                           fsr2h	equ	0xFDA
  2080                           fsr2l	equ	0xFD9
  2081                           status	equ	0xFD8
  2082                           
  2083 ;; *************** function _timer0_lthread *****************
  2084 ;; Defined at:
  2085 ;;		line 9 in file "../src/timer0_thread.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;  tptr            2   27[BANK0 ] PTR struct __timer0_thre
  2088 ;;		 -> main@t0thread_data(2), 
  2089 ;;  msgtype         2   29[BANK0 ] int 
  2090 ;;  length          2   31[BANK0 ] int 
  2091 ;;  msgbuffer       2   33[BANK0 ] PTR unsigned char 
  2092 ;;		 -> main@msgbuffer(11), 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  msgval          2   35[BANK0 ] PTR unsigned int 
  2095 ;;		 -> main@msgbuffer(11), 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  2   27[BANK0 ] int 
  2098 ;; Registers used:
  2099 ;;		wreg, status,2, status,0
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2105 ;;      Params:         0       8       0       0       0
  2106 ;;      Locals:         0       2       0       0       0
  2107 ;;      Temps:          0       0       0       0       0
  2108 ;;      Totals:         0      10       0       0       0
  2109 ;;Total ram usage:       10 bytes
  2110 ;; Hardware stack levels used:    1
  2111 ;; Hardware stack levels required when called:   10
  2112 ;; This function calls:
  2113 ;;		Nothing
  2114 ;; This function is called by:
  2115 ;;		_main
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           	psect	text6
  2120  001AE4                     __ptext6:
  2121                           	opt stack 0
  2122  001AE4                     _timer0_lthread:
  2123                           	opt stack 19
  2124                           
  2125                           ;timer0_thread.c: 10: unsigned int *msgval;
  2126                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2127                           
  2128                           ; BSR set to: 1
  2129                           ;incstack = 0
  2130  001AE4  0100               	movlb	0	; () banked
  2131  001AE6  0100               	movlb	0	; () banked
  2132  001AE8  C0D8  F0DA         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2133  001AEC  0100               	movlb	0	; () banked
  2134  001AEE  0100               	movlb	0	; () banked
  2135  001AF0  C0D7  F0D9         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2136                           
  2137                           ; BSR set to: 0
  2138  001AF4  0012               	return	
  2139  001AF6                     __end_of_timer0_lthread:
  2140                           	opt stack 0
  2141                           tblptru	equ	0xFF8
  2142                           tblptrh	equ	0xFF7
  2143                           tblptrl	equ	0xFF6
  2144                           tablat	equ	0xFF5
  2145                           prodh	equ	0xFF4
  2146                           prodl	equ	0xFF3
  2147                           postinc0	equ	0xFEE
  2148                           wreg	equ	0xFE8
  2149                           indf1	equ	0xFE7
  2150                           fsr1h	equ	0xFE2
  2151                           fsr1l	equ	0xFE1
  2152                           indf2	equ	0xFDF
  2153                           postinc2	equ	0xFDE
  2154                           postdec2	equ	0xFDD
  2155                           fsr2h	equ	0xFDA
  2156                           fsr2l	equ	0xFD9
  2157                           status	equ	0xFD8
  2158                           
  2159 ;; *************** function _start_i2c_slave_reply *****************
  2160 ;; Defined at:
  2161 ;;		line 53 in file "../src/my_i2c.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  length          1    wreg     unsigned char 
  2164 ;;  msg             2   27[BANK0 ] PTR unsigned char 
  2165 ;;		 -> main@msgbuffer(11), 
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;  length          1   31[BANK0 ] unsigned char 
  2168 ;; Return value:  Size  Location     Type
  2169 ;;		None               void
  2170 ;; Registers used:
  2171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2177 ;;      Params:         0       2       0       0       0
  2178 ;;      Locals:         0       1       0       0       0
  2179 ;;      Temps:          0       2       0       0       0
  2180 ;;      Totals:         0       5       0       0       0
  2181 ;;Total ram usage:        5 bytes
  2182 ;; Hardware stack levels used:    1
  2183 ;; Hardware stack levels required when called:   10
  2184 ;; This function calls:
  2185 ;;		Nothing
  2186 ;; This function is called by:
  2187 ;;		_main
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text7
  2192  000AB4                     __ptext7:
  2193                           	opt stack 0
  2194  000AB4                     _start_i2c_slave_reply:
  2195                           	opt stack 19
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;incstack = 0
  2199                           ;start_i2c_slave_reply@length stored from wreg
  2200  000AB4  CFE8 F0D5          	movff	wreg,start_i2c_slave_reply@length
  2201                           
  2202                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2203  000AB8  0100               	movlb	0	; () banked
  2204  000ABA  EE20 F019          	lfsr	2,25
  2205  000ABE  0100               	movlb	0	; () banked
  2206  000AC0  51E1               	movf	_ic_ptr& (0+255),w,b
  2207  000AC2  26D9               	addwf	fsr2l,f,c
  2208  000AC4  0100               	movlb	0	; () banked
  2209  000AC6  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2210  000AC8  22DA               	addwfc	fsr2h,f,c
  2211  000ACA  0E00               	movlw	0
  2212  000ACC  6EDF               	movwf	indf2,c
  2213  000ACE  D042               	goto	l2645
  2214  000AD0                     l2641:
  2215                           
  2216                           ; BSR set to: 0
  2217                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2218  000AD0  0100               	movlb	0	; () banked
  2219  000AD2  EE20 F019          	lfsr	2,25
  2220  000AD6  0100               	movlb	0	; () banked
  2221  000AD8  51E1               	movf	_ic_ptr& (0+255),w,b
  2222  000ADA  26D9               	addwf	fsr2l,f,c
  2223  000ADC  0100               	movlb	0	; () banked
  2224  000ADE  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2225  000AE0  22DA               	addwfc	fsr2h,f,c
  2226  000AE2  50DF               	movf	indf2,w,c
  2227  000AE4  0100               	movlb	0	; () banked
  2228  000AE6  6FD3               	movwf	??_start_i2c_slave_reply& (0+255),b
  2229  000AE8  0100               	movlb	0	; () banked
  2230  000AEA  51D3               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2231  000AEC  0D01               	mullw	1
  2232  000AEE  50F3               	movf	prodl,w,c
  2233  000AF0  0100               	movlb	0	; () banked
  2234  000AF2  0100               	movlb	0	; () banked
  2235  000AF4  25D1               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2236  000AF6  6ED9               	movwf	fsr2l,c
  2237  000AF8  50F4               	movf	prodh,w,c
  2238  000AFA  0100               	movlb	0	; () banked
  2239  000AFC  0100               	movlb	0	; () banked
  2240  000AFE  21D2               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2241  000B00  6EDA               	movwf	fsr2h,c
  2242  000B02  0100               	movlb	0	; () banked
  2243  000B04  EE10 F019          	lfsr	1,25
  2244  000B08  0100               	movlb	0	; () banked
  2245  000B0A  51E1               	movf	_ic_ptr& (0+255),w,b
  2246  000B0C  26E1               	addwf	fsr1l,f,c
  2247  000B0E  0100               	movlb	0	; () banked
  2248  000B10  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2249  000B12  22E2               	addwfc	fsr1h,f,c
  2250  000B14  50E7               	movf	indf1,w,c
  2251  000B16  0100               	movlb	0	; () banked
  2252  000B18  6FD4               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2253  000B1A  0100               	movlb	0	; () banked
  2254  000B1C  51D4               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2255  000B1E  0D01               	mullw	1
  2256  000B20  0E0F               	movlw	15
  2257  000B22  26F3               	addwf	prodl,f,c
  2258  000B24  0E00               	movlw	0
  2259  000B26  22F4               	addwfc	prodh,f,c
  2260  000B28  50F3               	movf	prodl,w,c
  2261  000B2A  0100               	movlb	0	; () banked
  2262  000B2C  0100               	movlb	0	; () banked
  2263  000B2E  25E1               	addwf	_ic_ptr& (0+255),w,b
  2264  000B30  6EE1               	movwf	fsr1l,c
  2265  000B32  50F4               	movf	prodh,w,c
  2266  000B34  0100               	movlb	0	; () banked
  2267  000B36  0100               	movlb	0	; () banked
  2268  000B38  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2269  000B3A  6EE2               	movwf	fsr1h,c
  2270  000B3C  CFDF FFE7          	movff	indf2,indf1
  2271                           
  2272                           ; BSR set to: 0
  2273  000B40  0100               	movlb	0	; () banked
  2274  000B42  EE20 F019          	lfsr	2,25
  2275  000B46  0100               	movlb	0	; () banked
  2276  000B48  51E1               	movf	_ic_ptr& (0+255),w,b
  2277  000B4A  26D9               	addwf	fsr2l,f,c
  2278  000B4C  0100               	movlb	0	; () banked
  2279  000B4E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2280  000B50  22DA               	addwfc	fsr2h,f,c
  2281  000B52  2ADF               	incf	indf2,f,c
  2282  000B54                     l2645:
  2283                           
  2284                           ; BSR set to: 0
  2285  000B54  0100               	movlb	0	; () banked
  2286  000B56  EE20 F019          	lfsr	2,25
  2287  000B5A  0100               	movlb	0	; () banked
  2288  000B5C  51E1               	movf	_ic_ptr& (0+255),w,b
  2289  000B5E  26D9               	addwf	fsr2l,f,c
  2290  000B60  0100               	movlb	0	; () banked
  2291  000B62  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2292  000B64  22DA               	addwfc	fsr2h,f,c
  2293  000B66  50DF               	movf	indf2,w,c
  2294  000B68  0100               	movlb	0	; () banked
  2295  000B6A  6FD3               	movwf	??_start_i2c_slave_reply& (0+255),b
  2296  000B6C  0100               	movlb	0	; () banked
  2297  000B6E  0100               	movlb	0	; () banked
  2298  000B70  51D5               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2299  000B72  0100               	movlb	0	; () banked
  2300  000B74  5DD3               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2301  000B76  A0D8               	btfss	status,0,c
  2302  000B78  D7AB               	goto	l2641
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;my_i2c.c: 57: }
  2306                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2307                           
  2308                           ; BSR set to: 0
  2309  000B7A  0100               	movlb	0	; () banked
  2310  000B7C  EE20 F019          	lfsr	2,25
  2311  000B80  0100               	movlb	0	; () banked
  2312  000B82  51E1               	movf	_ic_ptr& (0+255),w,b
  2313  000B84  26D9               	addwf	fsr2l,f,c
  2314  000B86  0100               	movlb	0	; () banked
  2315  000B88  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2316  000B8A  22DA               	addwfc	fsr2h,f,c
  2317  000B8C  0100               	movlb	0	; () banked
  2318  000B8E  C0D5  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2319                           
  2320                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2321  000B92  0100               	movlb	0	; () banked
  2322  000B94  EE20 F01A          	lfsr	2,26
  2323  000B98  0100               	movlb	0	; () banked
  2324  000B9A  51E1               	movf	_ic_ptr& (0+255),w,b
  2325  000B9C  26D9               	addwf	fsr2l,f,c
  2326  000B9E  0100               	movlb	0	; () banked
  2327  000BA0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2328  000BA2  22DA               	addwfc	fsr2h,f,c
  2329  000BA4  0E01               	movlw	1
  2330  000BA6  6EDF               	movwf	indf2,c
  2331                           
  2332                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2333  000BA8  0100               	movlb	0	; () banked
  2334  000BAA  EE20 F00F          	lfsr	2,15
  2335  000BAE  0100               	movlb	0	; () banked
  2336  000BB0  51E1               	movf	_ic_ptr& (0+255),w,b
  2337  000BB2  26D9               	addwf	fsr2l,f,c
  2338  000BB4  0100               	movlb	0	; () banked
  2339  000BB6  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2340  000BB8  22DA               	addwfc	fsr2h,f,c
  2341  000BBA  50DF               	movf	indf2,w,c
  2342  000BBC  6EC9               	movwf	4041,c	;volatile
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2346  000BBE  88C6               	bsf	4038,4,c	;volatile
  2347                           
  2348                           ; BSR set to: 0
  2349  000BC0  0012               	return	
  2350  000BC2                     __end_of_start_i2c_slave_reply:
  2351                           	opt stack 0
  2352                           tblptru	equ	0xFF8
  2353                           tblptrh	equ	0xFF7
  2354                           tblptrl	equ	0xFF6
  2355                           tablat	equ	0xFF5
  2356                           prodh	equ	0xFF4
  2357                           prodl	equ	0xFF3
  2358                           postinc0	equ	0xFEE
  2359                           wreg	equ	0xFE8
  2360                           indf1	equ	0xFE7
  2361                           fsr1h	equ	0xFE2
  2362                           fsr1l	equ	0xFE1
  2363                           indf2	equ	0xFDF
  2364                           postinc2	equ	0xFDE
  2365                           postdec2	equ	0xFDD
  2366                           fsr2h	equ	0xFDA
  2367                           fsr2l	equ	0xFD9
  2368                           status	equ	0xFD8
  2369                           
  2370 ;; *************** function _returnADCValue *****************
  2371 ;; Defined at:
  2372 ;;		line 16 in file "../src/interrupts.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;		None
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;  temp            2   29[BANK0 ] int 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  2   27[BANK0 ] int 
  2379 ;; Registers used:
  2380 ;;		wreg, status,2, status,0
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2386 ;;      Params:         0       2       0       0       0
  2387 ;;      Locals:         0       2       0       0       0
  2388 ;;      Temps:          0       0       0       0       0
  2389 ;;      Totals:         0       4       0       0       0
  2390 ;;Total ram usage:        4 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:   10
  2393 ;; This function calls:
  2394 ;;		Nothing
  2395 ;; This function is called by:
  2396 ;;		_main
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           	psect	text8
  2401  001970                     __ptext8:
  2402                           	opt stack 0
  2403  001970                     _returnADCValue:
  2404                           	opt stack 19
  2405                           
  2406                           ;interrupts.c: 18: int temp = 0;
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;incstack = 0
  2410  001970  0E00               	movlw	0
  2411  001972  0100               	movlb	0	; () banked
  2412  001974  0100               	movlb	0	; () banked
  2413  001976  6FD4               	movwf	(returnADCValue@temp+1)& (0+255),b
  2414  001978  0E00               	movlw	0
  2415  00197A  0100               	movlb	0	; () banked
  2416  00197C  6FD3               	movwf	returnADCValue@temp& (0+255),b
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;interrupts.c: 19: temp = temp + 1;
  2420  00197E  0E01               	movlw	1
  2421  001980  0100               	movlb	0	; () banked
  2422  001982  0100               	movlb	0	; () banked
  2423  001984  25D3               	addwf	returnADCValue@temp& (0+255),w,b
  2424  001986  0100               	movlb	0	; () banked
  2425  001988  0100               	movlb	0	; () banked
  2426  00198A  6FD3               	movwf	returnADCValue@temp& (0+255),b
  2427  00198C  0E00               	movlw	0
  2428  00198E  0100               	movlb	0	; () banked
  2429  001990  0100               	movlb	0	; () banked
  2430  001992  21D4               	addwfc	(returnADCValue@temp+1)& (0+255),w,b
  2431  001994  0100               	movlb	0	; () banked
  2432  001996  6FD4               	movwf	(returnADCValue@temp+1)& (0+255),b
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;interrupts.c: 20: return ADCValue;
  2436  001998  C0E3  F0D1         	movff	_ADCValue,?_returnADCValue
  2437  00199C  C0E4  F0D2         	movff	_ADCValue+1,?_returnADCValue+1
  2438  0019A0  0012               	return	
  2439  0019A2                     __end_of_returnADCValue:
  2440                           	opt stack 0
  2441                           tblptru	equ	0xFF8
  2442                           tblptrh	equ	0xFF7
  2443                           tblptrl	equ	0xFF6
  2444                           tablat	equ	0xFF5
  2445                           prodh	equ	0xFF4
  2446                           prodl	equ	0xFF3
  2447                           postinc0	equ	0xFEE
  2448                           wreg	equ	0xFE8
  2449                           indf1	equ	0xFE7
  2450                           fsr1h	equ	0xFE2
  2451                           fsr1l	equ	0xFE1
  2452                           indf2	equ	0xFDF
  2453                           postinc2	equ	0xFDE
  2454                           postdec2	equ	0xFDD
  2455                           fsr2h	equ	0xFDA
  2456                           fsr2l	equ	0xFD9
  2457                           status	equ	0xFD8
  2458                           
  2459 ;; *************** function _init_uart_recv *****************
  2460 ;; Defined at:
  2461 ;;		line 30 in file "../src/my_uart.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;  uc              2   27[BANK0 ] PTR struct __uart_comm
  2464 ;;		 -> main@uc(5), 
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;		None
  2467 ;; Return value:  Size  Location     Type
  2468 ;;		None               void
  2469 ;; Registers used:
  2470 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2476 ;;      Params:         0       2       0       0       0
  2477 ;;      Locals:         0       0       0       0       0
  2478 ;;      Temps:          0       0       0       0       0
  2479 ;;      Totals:         0       2       0       0       0
  2480 ;;Total ram usage:        2 bytes
  2481 ;; Hardware stack levels used:    1
  2482 ;; Hardware stack levels required when called:   10
  2483 ;; This function calls:
  2484 ;;		Nothing
  2485 ;; This function is called by:
  2486 ;;		_main
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text9
  2491  001A92                     __ptext9:
  2492                           	opt stack 0
  2493  001A92                     _init_uart_recv:
  2494                           	opt stack 19
  2495                           
  2496                           ;my_uart.c: 31: uc_ptr = uc;
  2497                           
  2498                           ; BSR set to: 0
  2499                           ;incstack = 0
  2500  001A92  0100               	movlb	0	; () banked
  2501  001A94  C0D2  F04E         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2502  001A98  0100               	movlb	0	; () banked
  2503  001A9A  C0D1  F04D         	movff	init_uart_recv@uc,_uc_ptr
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;my_uart.c: 32: uc_ptr->buflen = 0;
  2507  001A9E  EE20 F004          	lfsr	2,4
  2508  001AA2  504D               	movf	_uc_ptr,w,c
  2509  001AA4  26D9               	addwf	fsr2l,f,c
  2510  001AA6  504E               	movf	_uc_ptr+1,w,c
  2511  001AA8  22DA               	addwfc	fsr2h,f,c
  2512  001AAA  0E00               	movlw	0
  2513  001AAC  6EDF               	movwf	indf2,c
  2514                           
  2515                           ; BSR set to: 0
  2516  001AAE  0012               	return	
  2517  001AB0                     __end_of_init_uart_recv:
  2518                           	opt stack 0
  2519                           tblptru	equ	0xFF8
  2520                           tblptrh	equ	0xFF7
  2521                           tblptrl	equ	0xFF6
  2522                           tablat	equ	0xFF5
  2523                           prodh	equ	0xFF4
  2524                           prodl	equ	0xFF3
  2525                           postinc0	equ	0xFEE
  2526                           wreg	equ	0xFE8
  2527                           indf1	equ	0xFE7
  2528                           fsr1h	equ	0xFE2
  2529                           fsr1l	equ	0xFE1
  2530                           indf2	equ	0xFDF
  2531                           postinc2	equ	0xFDE
  2532                           postdec2	equ	0xFDD
  2533                           fsr2h	equ	0xFDA
  2534                           fsr2l	equ	0xFD9
  2535                           status	equ	0xFD8
  2536                           
  2537 ;; *************** function _init_timer1_lthread *****************
  2538 ;; Defined at:
  2539 ;;		line 6 in file "../src/timer1_thread.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;  tptr            2   27[BANK0 ] PTR struct __timer1_thre
  2542 ;;		 -> main@t1thread_data(2), 
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;		None               void
  2547 ;; Registers used:
  2548 ;;		wreg, fsr2l, fsr2h
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2554 ;;      Params:         0       2       0       0       0
  2555 ;;      Locals:         0       0       0       0       0
  2556 ;;      Temps:          0       0       0       0       0
  2557 ;;      Totals:         0       2       0       0       0
  2558 ;;Total ram usage:        2 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; Hardware stack levels required when called:   10
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_main
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           	psect	text10
  2569  001AF6                     __ptext10:
  2570                           	opt stack 0
  2571  001AF6                     _init_timer1_lthread:
  2572                           	opt stack 19
  2573                           
  2574                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;incstack = 0
  2578  001AF6  C0D1  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2579  001AFA  C0D2  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2580  001AFE  0E00               	movlw	0
  2581  001B00  6EDE               	movwf	postinc2,c
  2582  001B02  0E00               	movlw	0
  2583  001B04  6EDD               	movwf	postdec2,c
  2584  001B06  0012               	return	
  2585  001B08                     __end_of_init_timer1_lthread:
  2586                           	opt stack 0
  2587                           tblptru	equ	0xFF8
  2588                           tblptrh	equ	0xFF7
  2589                           tblptrl	equ	0xFF6
  2590                           tablat	equ	0xFF5
  2591                           prodh	equ	0xFF4
  2592                           prodl	equ	0xFF3
  2593                           postinc0	equ	0xFEE
  2594                           wreg	equ	0xFE8
  2595                           indf1	equ	0xFE7
  2596                           fsr1h	equ	0xFE2
  2597                           fsr1l	equ	0xFE1
  2598                           indf2	equ	0xFDF
  2599                           postinc2	equ	0xFDE
  2600                           postdec2	equ	0xFDD
  2601                           fsr2h	equ	0xFDA
  2602                           fsr2l	equ	0xFD9
  2603                           status	equ	0xFD8
  2604                           
  2605 ;; *************** function _init_queues *****************
  2606 ;; Defined at:
  2607 ;;		line 194 in file "../src/messages.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;		None
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;		None
  2612 ;; Return value:  Size  Location     Type
  2613 ;;		None               void
  2614 ;; Registers used:
  2615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2621 ;;      Params:         0       0       0       0       0
  2622 ;;      Locals:         0       0       0       0       0
  2623 ;;      Temps:          0       1       0       0       0
  2624 ;;      Totals:         0       1       0       0       0
  2625 ;;Total ram usage:        1 bytes
  2626 ;; Hardware stack levels used:    1
  2627 ;; Hardware stack levels required when called:   11
  2628 ;; This function calls:
  2629 ;;		_init_queue
  2630 ;; This function is called by:
  2631 ;;		_main
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           	psect	text11
  2636  0014B4                     __ptext11:
  2637                           	opt stack 0
  2638  0014B4                     _init_queues:
  2639                           	opt stack 18
  2640                           
  2641                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2642                           
  2643                           ;incstack = 0
  2644  0014B4  0100               	movlb	0	; () banked
  2645  0014B6  6FD5               	movwf	??_init_queues& (0+255),b
  2646  0014B8  0E00               	movlw	0
  2647  0014BA  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  2648  0014BC  0100               	movlb	0	; () banked
  2649  0014BE  51D5               	movf	??_init_queues& (0+255),w,b
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2653  0014C0  0100               	movlb	0	; () banked
  2654  0014C2  0E00               	movlw	high _ToMainLow_MQ
  2655  0014C4  0100               	movlb	0	; () banked
  2656  0014C6  0100               	movlb	0	; () banked
  2657  0014C8  6FD2               	movwf	(init_queue@qptr+1)& (0+255),b
  2658  0014CA  0100               	movlb	0	; () banked
  2659  0014CC  0E80               	movlw	low _ToMainLow_MQ
  2660  0014CE  0100               	movlb	0	; () banked
  2661  0014D0  0100               	movlb	0	; () banked
  2662  0014D2  6FD1               	movwf	init_queue@qptr& (0+255),b
  2663  0014D4  ECA7  F009         	call	_init_queue	;wreg free
  2664                           
  2665                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2666  0014D8  0101               	movlb	1	; () banked
  2667  0014DA  0E01               	movlw	high _ToMainHigh_MQ
  2668  0014DC  0100               	movlb	0	; () banked
  2669  0014DE  0100               	movlb	0	; () banked
  2670  0014E0  6FD2               	movwf	(init_queue@qptr+1)& (0+255),b
  2671  0014E2  0101               	movlb	1	; () banked
  2672  0014E4  0E6C               	movlw	low _ToMainHigh_MQ
  2673  0014E6  0100               	movlb	0	; () banked
  2674  0014E8  0100               	movlb	0	; () banked
  2675  0014EA  6FD1               	movwf	init_queue@qptr& (0+255),b
  2676  0014EC  ECA7  F009         	call	_init_queue	;wreg free
  2677                           
  2678                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2679  0014F0  0101               	movlb	1	; () banked
  2680  0014F2  0E01               	movlw	high _FromMainLow_MQ
  2681  0014F4  0100               	movlb	0	; () banked
  2682  0014F6  0100               	movlb	0	; () banked
  2683  0014F8  6FD2               	movwf	(init_queue@qptr+1)& (0+255),b
  2684  0014FA  0101               	movlb	1	; () banked
  2685  0014FC  0E36               	movlw	low _FromMainLow_MQ
  2686  0014FE  0100               	movlb	0	; () banked
  2687  001500  0100               	movlb	0	; () banked
  2688  001502  6FD1               	movwf	init_queue@qptr& (0+255),b
  2689  001504  ECA7  F009         	call	_init_queue	;wreg free
  2690                           
  2691                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2692  001508  0101               	movlb	1	; () banked
  2693  00150A  0E01               	movlw	high _FromMainHigh_MQ
  2694  00150C  0100               	movlb	0	; () banked
  2695  00150E  0100               	movlb	0	; () banked
  2696  001510  6FD2               	movwf	(init_queue@qptr+1)& (0+255),b
  2697  001512  0101               	movlb	1	; () banked
  2698  001514  0E00               	movlw	low _FromMainHigh_MQ
  2699  001516  0100               	movlb	0	; () banked
  2700  001518  0100               	movlb	0	; () banked
  2701  00151A  6FD1               	movwf	init_queue@qptr& (0+255),b
  2702  00151C  ECA7  F009         	call	_init_queue	;wreg free
  2703  001520  0012               	return	
  2704  001522                     __end_of_init_queues:
  2705                           	opt stack 0
  2706                           tblptru	equ	0xFF8
  2707                           tblptrh	equ	0xFF7
  2708                           tblptrl	equ	0xFF6
  2709                           tablat	equ	0xFF5
  2710                           prodh	equ	0xFF4
  2711                           prodl	equ	0xFF3
  2712                           postinc0	equ	0xFEE
  2713                           wreg	equ	0xFE8
  2714                           indf1	equ	0xFE7
  2715                           fsr1h	equ	0xFE2
  2716                           fsr1l	equ	0xFE1
  2717                           indf2	equ	0xFDF
  2718                           postinc2	equ	0xFDE
  2719                           postdec2	equ	0xFDD
  2720                           fsr2h	equ	0xFDA
  2721                           fsr2l	equ	0xFD9
  2722                           status	equ	0xFD8
  2723                           
  2724 ;; *************** function _init_queue *****************
  2725 ;; Defined at:
  2726 ;;		line 14 in file "../src/messages.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  qptr            2   27[BANK0 ] PTR struct __msg_queue
  2729 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;  i               1   30[BANK0 ] unsigned char 
  2732 ;; Return value:  Size  Location     Type
  2733 ;;		None               void
  2734 ;; Registers used:
  2735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2741 ;;      Params:         0       2       0       0       0
  2742 ;;      Locals:         0       1       0       0       0
  2743 ;;      Temps:          0       1       0       0       0
  2744 ;;      Totals:         0       4       0       0       0
  2745 ;;Total ram usage:        4 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; Hardware stack levels required when called:   10
  2748 ;; This function calls:
  2749 ;;		Nothing
  2750 ;; This function is called by:
  2751 ;;		_init_queues
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           	psect	text12
  2756  00134E                     __ptext12:
  2757                           	opt stack 0
  2758  00134E                     _init_queue:
  2759                           	opt stack 18
  2760                           
  2761                           ;messages.c: 15: unsigned char i;
  2762                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2763                           
  2764                           ;incstack = 0
  2765  00134E  0100               	movlb	0	; () banked
  2766  001350  EE20 F034          	lfsr	2,52
  2767  001354  0100               	movlb	0	; () banked
  2768  001356  51D1               	movf	init_queue@qptr& (0+255),w,b
  2769  001358  26D9               	addwf	fsr2l,f,c
  2770  00135A  0100               	movlb	0	; () banked
  2771  00135C  51D2               	movf	(init_queue@qptr+1)& (0+255),w,b
  2772  00135E  22DA               	addwfc	fsr2h,f,c
  2773  001360  0E00               	movlw	0
  2774  001362  6EDF               	movwf	indf2,c
  2775                           
  2776                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2777  001364  0100               	movlb	0	; () banked
  2778  001366  EE20 F035          	lfsr	2,53
  2779  00136A  0100               	movlb	0	; () banked
  2780  00136C  51D1               	movf	init_queue@qptr& (0+255),w,b
  2781  00136E  26D9               	addwf	fsr2l,f,c
  2782  001370  0100               	movlb	0	; () banked
  2783  001372  51D2               	movf	(init_queue@qptr+1)& (0+255),w,b
  2784  001374  22DA               	addwfc	fsr2h,f,c
  2785  001376  0E00               	movlw	0
  2786  001378  6EDF               	movwf	indf2,c
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2790  00137A  0100               	movlb	0	; () banked
  2791  00137C  6FD3               	movwf	??_init_queue& (0+255),b
  2792  00137E  0E00               	movlw	0
  2793  001380  0100               	movlb	0	; () banked
  2794  001382  0100               	movlb	0	; () banked
  2795  001384  6FD4               	movwf	init_queue@i& (0+255),b
  2796  001386  0100               	movlb	0	; () banked
  2797  001388  51D3               	movf	??_init_queue& (0+255),w,b
  2798                           
  2799                           ; BSR set to: 0
  2800  00138A  0E03               	movlw	3
  2801  00138C  0100               	movlb	0	; () banked
  2802  00138E  0100               	movlb	0	; () banked
  2803  001390  65D4               	cpfsgt	init_queue@i& (0+255),b
  2804  001392  D001               	goto	l2679
  2805  001394  0012               	return	
  2806  001396                     l2679:
  2807                           
  2808                           ; BSR set to: 0
  2809                           ;messages.c: 20: qptr->queue[i].full = 0;
  2810  001396  0100               	movlb	0	; () banked
  2811  001398  0100               	movlb	0	; () banked
  2812  00139A  51D4               	movf	init_queue@i& (0+255),w,b
  2813  00139C  0D0D               	mullw	13
  2814  00139E  50F3               	movf	prodl,w,c
  2815  0013A0  0100               	movlb	0	; () banked
  2816  0013A2  0100               	movlb	0	; () banked
  2817  0013A4  25D1               	addwf	init_queue@qptr& (0+255),w,b
  2818  0013A6  6ED9               	movwf	fsr2l,c
  2819  0013A8  50F4               	movf	prodh,w,c
  2820  0013AA  0100               	movlb	0	; () banked
  2821  0013AC  0100               	movlb	0	; () banked
  2822  0013AE  21D2               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2823  0013B0  6EDA               	movwf	fsr2h,c
  2824  0013B2  0E00               	movlw	0
  2825  0013B4  6EDF               	movwf	indf2,c
  2826                           
  2827                           ; BSR set to: 0
  2828  0013B6  0100               	movlb	0	; () banked
  2829  0013B8  0100               	movlb	0	; () banked
  2830  0013BA  2BD4               	incf	init_queue@i& (0+255),f,b
  2831                           
  2832                           ; BSR set to: 0
  2833  0013BC  0E03               	movlw	3
  2834  0013BE  0100               	movlb	0	; () banked
  2835  0013C0  0100               	movlb	0	; () banked
  2836  0013C2  65D4               	cpfsgt	init_queue@i& (0+255),b
  2837  0013C4  D7E8               	goto	l2679
  2838  0013C6  0012               	return	
  2839  0013C8                     __end_of_init_queue:
  2840                           	opt stack 0
  2841                           tblptru	equ	0xFF8
  2842                           tblptrh	equ	0xFF7
  2843                           tblptrl	equ	0xFF6
  2844                           tablat	equ	0xFF5
  2845                           prodh	equ	0xFF4
  2846                           prodl	equ	0xFF3
  2847                           postinc0	equ	0xFEE
  2848                           wreg	equ	0xFE8
  2849                           indf1	equ	0xFE7
  2850                           fsr1h	equ	0xFE2
  2851                           fsr1l	equ	0xFE1
  2852                           indf2	equ	0xFDF
  2853                           postinc2	equ	0xFDE
  2854                           postdec2	equ	0xFDD
  2855                           fsr2h	equ	0xFDA
  2856                           fsr2l	equ	0xFD9
  2857                           status	equ	0xFD8
  2858                           
  2859 ;; *************** function _init_i2c *****************
  2860 ;; Defined at:
  2861 ;;		line 271 in file "../src/my_i2c.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;  ic              2   27[BANK0 ] PTR struct __i2c_comm
  2864 ;;		 -> main@ic(28), 
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;		None               void
  2869 ;; Registers used:
  2870 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2876 ;;      Params:         0       2       0       0       0
  2877 ;;      Locals:         0       0       0       0       0
  2878 ;;      Temps:          0       0       0       0       0
  2879 ;;      Totals:         0       2       0       0       0
  2880 ;;Total ram usage:        2 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:   10
  2883 ;; This function calls:
  2884 ;;		Nothing
  2885 ;; This function is called by:
  2886 ;;		_main
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           	psect	text13
  2891  001522                     __ptext13:
  2892                           	opt stack 0
  2893  001522                     _init_i2c:
  2894                           	opt stack 19
  2895                           
  2896                           ;my_i2c.c: 272: ic_ptr = ic;
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;incstack = 0
  2900  001522  0100               	movlb	0	; () banked
  2901  001524  0100               	movlb	0	; () banked
  2902  001526  C0D2  F0E2         	movff	init_i2c@ic+1,_ic_ptr+1
  2903  00152A  0100               	movlb	0	; () banked
  2904  00152C  0100               	movlb	0	; () banked
  2905  00152E  C0D1  F0E1         	movff	init_i2c@ic,_ic_ptr
  2906                           
  2907                           ; BSR set to: 0
  2908                           ;my_i2c.c: 273: ic_ptr->buflen = 0;
  2909  001532  0100               	movlb	0	; () banked
  2910  001534  EE20 F00A          	lfsr	2,10
  2911  001538  0100               	movlb	0	; () banked
  2912  00153A  51E1               	movf	_ic_ptr& (0+255),w,b
  2913  00153C  26D9               	addwf	fsr2l,f,c
  2914  00153E  0100               	movlb	0	; () banked
  2915  001540  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2916  001542  22DA               	addwfc	fsr2h,f,c
  2917  001544  0E00               	movlw	0
  2918  001546  6EDF               	movwf	indf2,c
  2919                           
  2920                           ; BSR set to: 0
  2921                           ;my_i2c.c: 274: ic_ptr->event_count = 0;
  2922  001548  0100               	movlb	0	; () banked
  2923  00154A  EE20 F00B          	lfsr	2,11
  2924  00154E  0100               	movlb	0	; () banked
  2925  001550  51E1               	movf	_ic_ptr& (0+255),w,b
  2926  001552  26D9               	addwf	fsr2l,f,c
  2927  001554  0100               	movlb	0	; () banked
  2928  001556  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2929  001558  22DA               	addwfc	fsr2h,f,c
  2930  00155A  0E00               	movlw	0
  2931  00155C  6EDF               	movwf	indf2,c
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;my_i2c.c: 275: ic_ptr->status = 0x5;
  2935  00155E  0100               	movlb	0	; () banked
  2936  001560  EE20 F00C          	lfsr	2,12
  2937  001564  0100               	movlb	0	; () banked
  2938  001566  51E1               	movf	_ic_ptr& (0+255),w,b
  2939  001568  26D9               	addwf	fsr2l,f,c
  2940  00156A  0100               	movlb	0	; () banked
  2941  00156C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2942  00156E  22DA               	addwfc	fsr2h,f,c
  2943  001570  0E05               	movlw	5
  2944  001572  6EDF               	movwf	indf2,c
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;my_i2c.c: 276: ic_ptr->error_count = 0;
  2948  001574  0100               	movlb	0	; () banked
  2949  001576  EE20 F00E          	lfsr	2,14
  2950  00157A  0100               	movlb	0	; () banked
  2951  00157C  51E1               	movf	_ic_ptr& (0+255),w,b
  2952  00157E  26D9               	addwf	fsr2l,f,c
  2953  001580  0100               	movlb	0	; () banked
  2954  001582  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2955  001584  22DA               	addwfc	fsr2h,f,c
  2956  001586  0E00               	movlw	0
  2957  001588  6EDF               	movwf	indf2,c
  2958                           
  2959                           ; BSR set to: 0
  2960  00158A  0012               	return	
  2961  00158C                     __end_of_init_i2c:
  2962                           	opt stack 0
  2963                           tblptru	equ	0xFF8
  2964                           tblptrh	equ	0xFF7
  2965                           tblptrl	equ	0xFF6
  2966                           tablat	equ	0xFF5
  2967                           prodh	equ	0xFF4
  2968                           prodl	equ	0xFF3
  2969                           postinc0	equ	0xFEE
  2970                           wreg	equ	0xFE8
  2971                           indf1	equ	0xFE7
  2972                           fsr1h	equ	0xFE2
  2973                           fsr1l	equ	0xFE1
  2974                           indf2	equ	0xFDF
  2975                           postinc2	equ	0xFDE
  2976                           postdec2	equ	0xFDD
  2977                           fsr2h	equ	0xFDA
  2978                           fsr2l	equ	0xFD9
  2979                           status	equ	0xFD8
  2980                           
  2981 ;; *************** function _initADC *****************
  2982 ;; Defined at:
  2983 ;;		line 98 in file "../src/main.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;		None
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  ADCValue        2   34[BANK0 ] int 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;		None               void
  2990 ;; Registers used:
  2991 ;;		wreg, status,2, status,0, cstack
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2997 ;;      Params:         0       0       0       0       0
  2998 ;;      Locals:         0       2       0       0       0
  2999 ;;      Temps:          0       2       0       0       0
  3000 ;;      Totals:         0       4       0       0       0
  3001 ;;Total ram usage:        4 bytes
  3002 ;; Hardware stack levels used:    1
  3003 ;; Hardware stack levels required when called:   11
  3004 ;; This function calls:
  3005 ;;		_ConvertADC
  3006 ;;		_OpenADC
  3007 ;; This function is called by:
  3008 ;;		_main
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           	psect	text14
  3013  00170A                     __ptext14:
  3014                           	opt stack 0
  3015  00170A                     _initADC:
  3016                           	opt stack 18
  3017                           
  3018                           ;main.c: 100: int ADCValue = 0;
  3019                           
  3020                           ; BSR set to: 0
  3021                           ;incstack = 0
  3022  00170A  0E00               	movlw	0
  3023  00170C  0100               	movlb	0	; () banked
  3024  00170E  0100               	movlb	0	; () banked
  3025  001710  6FD9               	movwf	(initADC@ADCValue+1)& (0+255),b
  3026  001712  0E00               	movlw	0
  3027  001714  0100               	movlb	0	; () banked
  3028  001716  6FD8               	movwf	initADC@ADCValue& (0+255),b
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;main.c: 102: OpenADC(0b10001111 & 0b11111111 & 0b11111111, 0b10000111 & 0b11111111 & 0b
      +                          11111110 & 0b11111101, 0b11111111);
  3032  001718  0100               	movlb	0	; () banked
  3033  00171A  6FD6               	movwf	??_initADC& (0+255),b
  3034  00171C  0E84               	movlw	132
  3035  00171E  0100               	movlb	0	; () banked
  3036  001720  0100               	movlb	0	; () banked
  3037  001722  6FD1               	movwf	OpenADC@config2& (0+255),b
  3038  001724  0100               	movlb	0	; () banked
  3039  001726  51D6               	movf	??_initADC& (0+255),w,b
  3040  001728  0100               	movlb	0	; () banked
  3041  00172A  6FD7               	movwf	(??_initADC+1)& (0+255),b
  3042  00172C  0EFF               	movlw	255
  3043  00172E  0100               	movlb	0	; () banked
  3044  001730  0100               	movlb	0	; () banked
  3045  001732  6FD2               	movwf	OpenADC@portconfig& (0+255),b
  3046  001734  0100               	movlb	0	; () banked
  3047  001736  51D7               	movf	(??_initADC+1)& (0+255),w,b
  3048  001738  0E8F               	movlw	143
  3049  00173A  EC65  F009         	call	_OpenADC
  3050                           
  3051                           ;main.c: 103: (PIR1bits.ADIF=0,INTCONbits.PEIE=1,PIE1bits.ADIE=1);
  3052  00173E  9C9E               	bcf	3998,6,c	;volatile
  3053  001740  8CF2               	bsf	intcon,6,c	;volatile
  3054  001742  8C9D               	bsf	3997,6,c	;volatile
  3055                           
  3056                           ;main.c: 104: (INTCONbits.GIE = 1);
  3057  001744  8EF2               	bsf	intcon,7,c	;volatile
  3058                           
  3059                           ;main.c: 105: ConvertADC();
  3060  001746  ECBA  F00D         	call	_ConvertADC	;wreg free
  3061  00174A  0012               	return	
  3062  00174C                     __end_of_initADC:
  3063                           	opt stack 0
  3064                           tblptru	equ	0xFF8
  3065                           tblptrh	equ	0xFF7
  3066                           tblptrl	equ	0xFF6
  3067                           tablat	equ	0xFF5
  3068                           prodh	equ	0xFF4
  3069                           prodl	equ	0xFF3
  3070                           intcon	equ	0xFF2
  3071                           postinc0	equ	0xFEE
  3072                           wreg	equ	0xFE8
  3073                           indf1	equ	0xFE7
  3074                           fsr1h	equ	0xFE2
  3075                           fsr1l	equ	0xFE1
  3076                           indf2	equ	0xFDF
  3077                           postinc2	equ	0xFDE
  3078                           postdec2	equ	0xFDD
  3079                           fsr2h	equ	0xFDA
  3080                           fsr2l	equ	0xFD9
  3081                           status	equ	0xFD8
  3082                           
  3083 ;; *************** function _OpenADC *****************
  3084 ;; Defined at:
  3085 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  config          1    wreg     unsigned char 
  3088 ;;  config2         1   27[BANK0 ] unsigned char 
  3089 ;;  portconfig      1   28[BANK0 ] unsigned char 
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;  config          1   31[BANK0 ] unsigned char 
  3092 ;; Return value:  Size  Location     Type
  3093 ;;		None               void
  3094 ;; Registers used:
  3095 ;;		wreg, status,2, status,0
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3101 ;;      Params:         0       2       0       0       0
  3102 ;;      Locals:         0       1       0       0       0
  3103 ;;      Temps:          0       2       0       0       0
  3104 ;;      Totals:         0       5       0       0       0
  3105 ;;Total ram usage:        5 bytes
  3106 ;; Hardware stack levels used:    1
  3107 ;; Hardware stack levels required when called:   10
  3108 ;; This function calls:
  3109 ;;		Nothing
  3110 ;; This function is called by:
  3111 ;;		_initADC
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115                           	psect	text15
  3116  0012CA                     __ptext15:
  3117                           	opt stack 0
  3118  0012CA                     _OpenADC:
  3119                           	opt stack 18
  3120                           
  3121                           ;incstack = 0
  3122                           ;OpenADC@config stored from wreg
  3123  0012CA  CFE8 F0D5          	movff	wreg,OpenADC@config
  3124  0012CE  0E00               	movlw	0
  3125  0012D0  6EC2               	movwf	4034,c	;volatile
  3126  0012D2  0E00               	movlw	0
  3127  0012D4  6EC0               	movwf	4032,c	;volatile
  3128  0012D6  0100               	movlb	0	; () banked
  3129  0012D8  0100               	movlb	0	; () banked
  3130  0012DA  90D8               	bcf	status,0,c
  3131  0012DC  31D1               	rrcf	OpenADC@config2& (0+255),w,b
  3132  0012DE  0B3C               	andlw	60
  3133  0012E0  6EC2               	movwf	4034,c	;volatile
  3134                           
  3135                           ; BSR set to: 0
  3136  0012E2  C0D1  F0D3         	movff	OpenADC@config2,??_OpenADC
  3137  0012E6  0100               	movlb	0	; () banked
  3138  0012E8  3BD3               	swapf	??_OpenADC& (0+255),f,b
  3139  0012EA  0EF0               	movlw	240
  3140  0012EC  17D3               	andwf	??_OpenADC& (0+255),f,b
  3141  0012EE  0E30               	movlw	48
  3142  0012F0  0100               	movlb	0	; () banked
  3143  0012F2  17D3               	andwf	??_OpenADC& (0+255),f,b
  3144  0012F4  0100               	movlb	0	; () banked
  3145  0012F6  0100               	movlb	0	; () banked
  3146  0012F8  51D2               	movf	OpenADC@portconfig& (0+255),w,b
  3147  0012FA  0B0F               	andlw	15
  3148  0012FC  0100               	movlb	0	; () banked
  3149  0012FE  11D3               	iorwf	??_OpenADC& (0+255),w,b
  3150  001300  6EC1               	movwf	4033,c	;volatile
  3151                           
  3152                           ; BSR set to: 0
  3153  001302  C0D5  F0D3         	movff	OpenADC@config,??_OpenADC
  3154  001306  0100               	movlb	0	; () banked
  3155  001308  90D8               	bcf	status,0,c
  3156  00130A  37D3               	rlcf	??_OpenADC& (0+255),f,b
  3157  00130C  0100               	movlb	0	; () banked
  3158  00130E  90D8               	bcf	status,0,c
  3159  001310  37D3               	rlcf	??_OpenADC& (0+255),f,b
  3160  001312  0E38               	movlw	56
  3161  001314  0100               	movlb	0	; () banked
  3162  001316  17D3               	andwf	??_OpenADC& (0+255),f,b
  3163  001318  C0D5  F0D4         	movff	OpenADC@config,??_OpenADC+1
  3164  00131C  0100               	movlb	0	; () banked
  3165  00131E  3BD4               	swapf	(??_OpenADC+1)& (0+255),f,b
  3166  001320  0E0F               	movlw	15
  3167  001322  17D4               	andwf	(??_OpenADC+1)& (0+255),f,b
  3168  001324  0E07               	movlw	7
  3169  001326  0100               	movlb	0	; () banked
  3170  001328  17D4               	andwf	(??_OpenADC+1)& (0+255),f,b
  3171  00132A  0100               	movlb	0	; () banked
  3172  00132C  0100               	movlb	0	; () banked
  3173  00132E  51D5               	movf	OpenADC@config& (0+255),w,b
  3174  001330  0B80               	andlw	128
  3175  001332  0100               	movlb	0	; () banked
  3176  001334  11D4               	iorwf	(??_OpenADC+1)& (0+255),w,b
  3177  001336  0100               	movlb	0	; () banked
  3178  001338  11D3               	iorwf	??_OpenADC& (0+255),w,b
  3179  00133A  6EC0               	movwf	4032,c	;volatile
  3180                           
  3181                           ; BSR set to: 0
  3182  00133C  0100               	movlb	0	; () banked
  3183  00133E  0100               	movlb	0	; () banked
  3184  001340  AFD1               	btfss	OpenADC@config2& (0+255),7,b
  3185  001342  D003               	goto	l414
  3186                           
  3187                           ; BSR set to: 0
  3188  001344  9C9E               	bcf	3998,6,c	;volatile
  3189  001346  8C9D               	bsf	3997,6,c	;volatile
  3190  001348  8CF2               	bsf	intcon,6,c	;volatile
  3191  00134A                     l414:
  3192                           
  3193                           ; BSR set to: 0
  3194  00134A  80C2               	bsf	4034,0,c	;volatile
  3195                           
  3196                           ; BSR set to: 0
  3197  00134C  0012               	return	
  3198  00134E                     __end_of_OpenADC:
  3199                           	opt stack 0
  3200                           tblptru	equ	0xFF8
  3201                           tblptrh	equ	0xFF7
  3202                           tblptrl	equ	0xFF6
  3203                           tablat	equ	0xFF5
  3204                           prodh	equ	0xFF4
  3205                           prodl	equ	0xFF3
  3206                           intcon	equ	0xFF2
  3207                           postinc0	equ	0xFEE
  3208                           wreg	equ	0xFE8
  3209                           indf1	equ	0xFE7
  3210                           fsr1h	equ	0xFE2
  3211                           fsr1l	equ	0xFE1
  3212                           indf2	equ	0xFDF
  3213                           postinc2	equ	0xFDE
  3214                           postdec2	equ	0xFDD
  3215                           fsr2h	equ	0xFDA
  3216                           fsr2l	equ	0xFD9
  3217                           status	equ	0xFD8
  3218                           
  3219 ;; *************** function _ConvertADC *****************
  3220 ;; Defined at:
  3221 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcconv.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;		None
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;		None
  3226 ;; Return value:  Size  Location     Type
  3227 ;;		None               void
  3228 ;; Registers used:
  3229 ;;		None
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3235 ;;      Params:         0       0       0       0       0
  3236 ;;      Locals:         0       0       0       0       0
  3237 ;;      Temps:          0       0       0       0       0
  3238 ;;      Totals:         0       0       0       0       0
  3239 ;;Total ram usage:        0 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; Hardware stack levels required when called:   10
  3242 ;; This function calls:
  3243 ;;		Nothing
  3244 ;; This function is called by:
  3245 ;;		_initADC
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           	psect	text16
  3250  001B74                     __ptext16:
  3251                           	opt stack 0
  3252  001B74                     _ConvertADC:
  3253                           	opt stack 18
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;incstack = 0
  3257  001B74  82C2               	bsf	4034,1,c	;volatile
  3258  001B76  0012               	return	
  3259  001B78                     __end_of_ConvertADC:
  3260                           	opt stack 0
  3261                           tblptru	equ	0xFF8
  3262                           tblptrh	equ	0xFF7
  3263                           tblptrl	equ	0xFF6
  3264                           tablat	equ	0xFF5
  3265                           prodh	equ	0xFF4
  3266                           prodl	equ	0xFF3
  3267                           intcon	equ	0xFF2
  3268                           postinc0	equ	0xFEE
  3269                           wreg	equ	0xFE8
  3270                           indf1	equ	0xFE7
  3271                           fsr1h	equ	0xFE2
  3272                           fsr1l	equ	0xFE1
  3273                           indf2	equ	0xFDF
  3274                           postinc2	equ	0xFDE
  3275                           postdec2	equ	0xFDD
  3276                           fsr2h	equ	0xFDA
  3277                           fsr2l	equ	0xFD9
  3278                           status	equ	0xFD8
  3279                           
  3280 ;; *************** function _i2c_configure_slave *****************
  3281 ;; Defined at:
  3282 ;;		line 282 in file "../src/my_i2c.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;  addr            1    wreg     unsigned char 
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;  addr            1   27[BANK0 ] unsigned char 
  3287 ;; Return value:  Size  Location     Type
  3288 ;;		None               void
  3289 ;; Registers used:
  3290 ;;		wreg, status,2, status,0
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3296 ;;      Params:         0       0       0       0       0
  3297 ;;      Locals:         0       1       0       0       0
  3298 ;;      Temps:          0       0       0       0       0
  3299 ;;      Totals:         0       1       0       0       0
  3300 ;;Total ram usage:        1 bytes
  3301 ;; Hardware stack levels used:    1
  3302 ;; Hardware stack levels required when called:   10
  3303 ;; This function calls:
  3304 ;;		Nothing
  3305 ;; This function is called by:
  3306 ;;		_main
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           	psect	text17
  3311  0019FA                     __ptext17:
  3312                           	opt stack 0
  3313  0019FA                     _i2c_configure_slave:
  3314                           	opt stack 19
  3315                           
  3316                           ;incstack = 0
  3317                           ;i2c_configure_slave@addr stored from wreg
  3318  0019FA  CFE8 F0D1          	movff	wreg,i2c_configure_slave@addr
  3319                           
  3320                           ;my_i2c.c: 285: TRISCbits.TRISC3 = 1;
  3321  0019FE  8694               	bsf	3988,3,c	;volatile
  3322                           
  3323                           ;my_i2c.c: 286: TRISCbits.TRISC4 = 1;
  3324  001A00  8894               	bsf	3988,4,c	;volatile
  3325                           
  3326                           ;my_i2c.c: 288: SSPADD = addr;
  3327  001A02  C0D1  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3328                           
  3329                           ;my_i2c.c: 290: SSPSTAT = 0x0;
  3330  001A06  0E00               	movlw	0
  3331  001A08  6EC7               	movwf	4039,c	;volatile
  3332                           
  3333                           ;my_i2c.c: 291: SSPCON1 = 0x0;
  3334  001A0A  0E00               	movlw	0
  3335  001A0C  6EC6               	movwf	4038,c	;volatile
  3336                           
  3337                           ;my_i2c.c: 292: SSPCON2 = 0x0;
  3338  001A0E  0E00               	movlw	0
  3339  001A10  6EC5               	movwf	4037,c	;volatile
  3340                           
  3341                           ;my_i2c.c: 293: SSPCON1 |= 0x0E;
  3342  001A12  0E0E               	movlw	14
  3343  001A14  12C6               	iorwf	4038,f,c	;volatile
  3344                           
  3345                           ;my_i2c.c: 294: SSPSTAT |= 0b10000000;
  3346  001A16  8EC7               	bsf	4039,7,c	;volatile
  3347                           
  3348                           ;my_i2c.c: 296: TRISCbits.TRISC3 = 1;
  3349  001A18  8694               	bsf	3988,3,c	;volatile
  3350                           
  3351                           ;my_i2c.c: 297: TRISCbits.TRISC4 = 1;
  3352  001A1A  8894               	bsf	3988,4,c	;volatile
  3353                           
  3354                           ;my_i2c.c: 307: SSPCON2bits.SEN = 1;
  3355  001A1C  80C5               	bsf	4037,0,c	;volatile
  3356                           
  3357                           ;my_i2c.c: 308: SSPCON1 |= 0b00100000;
  3358  001A1E  8AC6               	bsf	4038,5,c	;volatile
  3359  001A20  0012               	return	
  3360  001A22                     __end_of_i2c_configure_slave:
  3361                           	opt stack 0
  3362                           tblptru	equ	0xFF8
  3363                           tblptrh	equ	0xFF7
  3364                           tblptrl	equ	0xFF6
  3365                           tablat	equ	0xFF5
  3366                           prodh	equ	0xFF4
  3367                           prodl	equ	0xFF3
  3368                           intcon	equ	0xFF2
  3369                           postinc0	equ	0xFEE
  3370                           wreg	equ	0xFE8
  3371                           indf1	equ	0xFE7
  3372                           fsr1h	equ	0xFE2
  3373                           fsr1l	equ	0xFE1
  3374                           indf2	equ	0xFDF
  3375                           postinc2	equ	0xFDE
  3376                           postdec2	equ	0xFDD
  3377                           fsr2h	equ	0xFDA
  3378                           fsr2l	equ	0xFD9
  3379                           status	equ	0xFD8
  3380                           
  3381 ;; *************** function _enable_interrupts *****************
  3382 ;; Defined at:
  3383 ;;		line 23 in file "../src/interrupts.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;		None
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;		None
  3388 ;; Return value:  Size  Location     Type
  3389 ;;		None               void
  3390 ;; Registers used:
  3391 ;;		None
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3397 ;;      Params:         0       0       0       0       0
  3398 ;;      Locals:         0       0       0       0       0
  3399 ;;      Temps:          0       0       0       0       0
  3400 ;;      Totals:         0       0       0       0       0
  3401 ;;Total ram usage:        0 bytes
  3402 ;; Hardware stack levels used:    1
  3403 ;; Hardware stack levels required when called:   10
  3404 ;; This function calls:
  3405 ;;		Nothing
  3406 ;; This function is called by:
  3407 ;;		_main
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           	psect	text18
  3412  001B66                     __ptext18:
  3413                           	opt stack 0
  3414  001B66                     _enable_interrupts:
  3415                           	opt stack 19
  3416                           
  3417                           ;interrupts.c: 26: RCONbits.IPEN = 1;
  3418                           
  3419                           ;incstack = 0
  3420  001B66  8ED0               	bsf	4048,7,c	;volatile
  3421                           
  3422                           ;interrupts.c: 27: INTCONbits.GIEH = 1;
  3423  001B68  8EF2               	bsf	intcon,7,c	;volatile
  3424                           
  3425                           ;interrupts.c: 28: INTCONbits.GIEL = 1;
  3426  001B6A  8CF2               	bsf	intcon,6,c	;volatile
  3427  001B6C  0012               	return	
  3428  001B6E                     __end_of_enable_interrupts:
  3429                           	opt stack 0
  3430                           tblptru	equ	0xFF8
  3431                           tblptrh	equ	0xFF7
  3432                           tblptrl	equ	0xFF6
  3433                           tablat	equ	0xFF5
  3434                           prodh	equ	0xFF4
  3435                           prodl	equ	0xFF3
  3436                           intcon	equ	0xFF2
  3437                           postinc0	equ	0xFEE
  3438                           wreg	equ	0xFE8
  3439                           indf1	equ	0xFE7
  3440                           fsr1h	equ	0xFE2
  3441                           fsr1l	equ	0xFE1
  3442                           indf2	equ	0xFDF
  3443                           postinc2	equ	0xFDE
  3444                           postdec2	equ	0xFDD
  3445                           fsr2h	equ	0xFDA
  3446                           fsr2l	equ	0xFD9
  3447                           status	equ	0xFD8
  3448                           
  3449 ;; *************** function _block_on_To_msgqueues *****************
  3450 ;; Defined at:
  3451 ;;		line 258 in file "../src/messages.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;		None
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;		None
  3456 ;; Return value:  Size  Location     Type
  3457 ;;		None               void
  3458 ;; Registers used:
  3459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3465 ;;      Params:         0       0       0       0       0
  3466 ;;      Locals:         0       0       0       0       0
  3467 ;;      Temps:          0       1       0       0       0
  3468 ;;      Totals:         0       1       0       0       0
  3469 ;;Total ram usage:        1 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; Hardware stack levels required when called:   13
  3472 ;; This function calls:
  3473 ;;		_Delay1KTCYx
  3474 ;;		_check_msg
  3475 ;;		_in_main
  3476 ;; This function is called by:
  3477 ;;		_main
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text19
  3482  00106C                     __ptext19:
  3483                           	opt stack 0
  3484  00106C                     _block_on_To_msgqueues:
  3485                           	opt stack 16
  3486                           
  3487                           ;messages.c: 259: if (!in_main()) {
  3488                           
  3489                           ;incstack = 0
  3490  00106C  EC63  F00B         	call	_in_main	;wreg free
  3491  001070  0100               	movlb	0	; () banked
  3492  001072  0100               	movlb	0	; () banked
  3493  001074  51D6               	movf	(?_in_main+1)& (0+255),w,b
  3494  001076  0100               	movlb	0	; () banked
  3495  001078  11D5               	iorwf	?_in_main& (0+255),w,b
  3496  00107A  B4D8               	btfsc	status,2,c
  3497  00107C  0012               	return	
  3498                           
  3499                           ; BSR set to: 0
  3500                           ;messages.c: 261: }
  3501                           ;messages.c: 262: LATBbits.LATB3 = 1;
  3502                           
  3503                           ; BSR set to: 0
  3504                           ;messages.c: 260: return;
  3505  00107E  868A               	bsf	3978,3,c	;volatile
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3509  001080  0100               	movlb	0	; () banked
  3510  001082  6FD7               	movwf	??_block_on_To_msgqueues& (0+255),b
  3511  001084  0E01               	movlw	1
  3512  001086  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  3513  001088  0100               	movlb	0	; () banked
  3514  00108A  51D7               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3515  00108C                     l2613:
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3519  00108C  0101               	movlb	1	; () banked
  3520  00108E  0E01               	movlw	high _ToMainHigh_MQ
  3521  001090  0100               	movlb	0	; () banked
  3522  001092  0100               	movlb	0	; () banked
  3523  001094  6FD2               	movwf	(check_msg@qptr+1)& (0+255),b
  3524  001096  0101               	movlb	1	; () banked
  3525  001098  0E6C               	movlw	low _ToMainHigh_MQ
  3526  00109A  0100               	movlb	0	; () banked
  3527  00109C  0100               	movlb	0	; () banked
  3528  00109E  6FD1               	movwf	check_msg@qptr& (0+255),b
  3529  0010A0  EC9D  F00C         	call	_check_msg	;wreg free
  3530  0010A4  0900               	iorlw	0
  3531  0010A6  B4D8               	btfsc	status,2,c
  3532  0010A8  D008               	goto	l2621
  3533                           
  3534                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3535  0010AA  0100               	movlb	0	; () banked
  3536  0010AC  6FD7               	movwf	??_block_on_To_msgqueues& (0+255),b
  3537  0010AE  0E00               	movlw	0
  3538  0010B0  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  3539  0010B2  0100               	movlb	0	; () banked
  3540  0010B4  51D7               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;messages.c: 267: LATBbits.LATB3 = 0;
  3544  0010B6  968A               	bcf	3978,3,c	;volatile
  3545  0010B8  0012               	return	
  3546  0010BA                     l2621:
  3547                           
  3548                           ;messages.c: 269: }
  3549                           ;messages.c: 270: if (check_msg(&ToMainLow_MQ)) {
  3550  0010BA  0100               	movlb	0	; () banked
  3551  0010BC  0E00               	movlw	high _ToMainLow_MQ
  3552  0010BE  0100               	movlb	0	; () banked
  3553  0010C0  0100               	movlb	0	; () banked
  3554  0010C2  6FD2               	movwf	(check_msg@qptr+1)& (0+255),b
  3555  0010C4  0100               	movlb	0	; () banked
  3556  0010C6  0E80               	movlw	low _ToMainLow_MQ
  3557  0010C8  0100               	movlb	0	; () banked
  3558  0010CA  0100               	movlb	0	; () banked
  3559  0010CC  6FD1               	movwf	check_msg@qptr& (0+255),b
  3560  0010CE  EC9D  F00C         	call	_check_msg	;wreg free
  3561  0010D2  0900               	iorlw	0
  3562  0010D4  B4D8               	btfsc	status,2,c
  3563  0010D6  D008               	goto	l2629
  3564                           
  3565                           ;messages.c: 271: MQ_Main_Willing_to_block = 0;
  3566  0010D8  0100               	movlb	0	; () banked
  3567  0010DA  6FD7               	movwf	??_block_on_To_msgqueues& (0+255),b
  3568  0010DC  0E00               	movlw	0
  3569  0010DE  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  3570  0010E0  0100               	movlb	0	; () banked
  3571  0010E2  51D7               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;messages.c: 272: LATBbits.LATB3 = 0;
  3575  0010E4  968A               	bcf	3978,3,c	;volatile
  3576  0010E6  0012               	return	
  3577  0010E8                     l2629:
  3578                           
  3579                           ;messages.c: 274: }
  3580                           ;messages.c: 275: Delay1KTCYx(10);
  3581  0010E8  0E0A               	movlw	10
  3582  0010EA  EC67  F00D         	call	_Delay1KTCYx
  3583                           
  3584                           ;messages.c: 276: LATBbits.LATB3 = !LATBbits.LATB3;
  3585  0010EE  B68A               	btfsc	3978,3,c	;volatile
  3586  0010F0  D002               	goto	u1600
  3587  0010F2  0E01               	movlw	1
  3588  0010F4  D001               	goto	u1606
  3589  0010F6                     u1600:
  3590  0010F6  0E00               	movlw	0
  3591  0010F8                     u1606:
  3592  0010F8  0100               	movlb	0	; () banked
  3593  0010FA  6FD7               	movwf	??_block_on_To_msgqueues& (0+255),b
  3594  0010FC  0100               	movlb	0	; () banked
  3595  0010FE  47D7               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3596  001100  47D7               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3597  001102  47D7               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3598  001104  508A               	movf	3978,w,c	;volatile
  3599  001106  0100               	movlb	0	; () banked
  3600  001108  19D7               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  3601  00110A  0BF7               	andlw	-9
  3602  00110C  19D7               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  3603  00110E  6E8A               	movwf	3978,c	;volatile
  3604  001110  D7BD               	goto	l2613
  3605  001112                     __end_of_block_on_To_msgqueues:
  3606                           	opt stack 0
  3607                           tblptru	equ	0xFF8
  3608                           tblptrh	equ	0xFF7
  3609                           tblptrl	equ	0xFF6
  3610                           tablat	equ	0xFF5
  3611                           prodh	equ	0xFF4
  3612                           prodl	equ	0xFF3
  3613                           intcon	equ	0xFF2
  3614                           postinc0	equ	0xFEE
  3615                           wreg	equ	0xFE8
  3616                           indf1	equ	0xFE7
  3617                           fsr1h	equ	0xFE2
  3618                           fsr1l	equ	0xFE1
  3619                           indf2	equ	0xFDF
  3620                           postinc2	equ	0xFDE
  3621                           postdec2	equ	0xFDD
  3622                           fsr2h	equ	0xFDA
  3623                           fsr2l	equ	0xFD9
  3624                           status	equ	0xFD8
  3625                           
  3626 ;; *************** function _in_main *****************
  3627 ;; Defined at:
  3628 ;;		line 49 in file "../src/interrupts.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;		None
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;		None
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  2   31[BANK0 ] int 
  3635 ;; Registers used:
  3636 ;;		wreg, status,2, status,0, cstack
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3642 ;;      Params:         0       2       0       0       0
  3643 ;;      Locals:         0       0       0       0       0
  3644 ;;      Temps:          0       0       0       0       0
  3645 ;;      Totals:         0       2       0       0       0
  3646 ;;Total ram usage:        2 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; Hardware stack levels required when called:   12
  3649 ;; This function calls:
  3650 ;;		_in_high_int
  3651 ;;		_in_low_int
  3652 ;; This function is called by:
  3653 ;;		_block_on_To_msgqueues
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           	psect	text20
  3658  0016C6                     __ptext20:
  3659                           	opt stack 0
  3660  0016C6                     _in_main:
  3661                           	opt stack 16
  3662                           
  3663                           ;interrupts.c: 50: if ((!in_low_int()) && (!in_high_int())) {
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;incstack = 0
  3667  0016C6  EC40  F00B         	call	_in_low_int	;wreg free
  3668  0016CA  0100               	movlb	0	; () banked
  3669  0016CC  0100               	movlb	0	; () banked
  3670  0016CE  51D4               	movf	(?_in_low_int+1)& (0+255),w,b
  3671  0016D0  0100               	movlb	0	; () banked
  3672  0016D2  11D3               	iorwf	?_in_low_int& (0+255),w,b
  3673  0016D4  A4D8               	btfss	status,2,c
  3674  0016D6  D011               	goto	l2179
  3675                           
  3676                           ; BSR set to: 0
  3677  0016D8  EC84  F00D         	call	_in_high_int	;wreg free
  3678  0016DC  0100               	movlb	0	; () banked
  3679  0016DE  0100               	movlb	0	; () banked
  3680  0016E0  51D2               	movf	(?_in_high_int+1)& (0+255),w,b
  3681  0016E2  0100               	movlb	0	; () banked
  3682  0016E4  11D1               	iorwf	?_in_high_int& (0+255),w,b
  3683  0016E6  A4D8               	btfss	status,2,c
  3684  0016E8  D008               	goto	l2179
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;interrupts.c: 51: return (1);
  3688  0016EA  0E00               	movlw	0
  3689  0016EC  0100               	movlb	0	; () banked
  3690  0016EE  0100               	movlb	0	; () banked
  3691  0016F0  6FD6               	movwf	(?_in_main+1)& (0+255),b
  3692  0016F2  0E01               	movlw	1
  3693  0016F4  0100               	movlb	0	; () banked
  3694  0016F6  6FD5               	movwf	?_in_main& (0+255),b
  3695  0016F8  0012               	return	
  3696  0016FA                     l2179:
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;interrupts.c: 53: return (0);
  3700  0016FA  0E00               	movlw	0
  3701  0016FC  0100               	movlb	0	; () banked
  3702  0016FE  0100               	movlb	0	; () banked
  3703  001700  6FD6               	movwf	(?_in_main+1)& (0+255),b
  3704  001702  0E00               	movlw	0
  3705  001704  0100               	movlb	0	; () banked
  3706  001706  6FD5               	movwf	?_in_main& (0+255),b
  3707  001708  0012               	return	
  3708  00170A                     __end_of_in_main:
  3709                           	opt stack 0
  3710                           tblptru	equ	0xFF8
  3711                           tblptrh	equ	0xFF7
  3712                           tblptrl	equ	0xFF6
  3713                           tablat	equ	0xFF5
  3714                           prodh	equ	0xFF4
  3715                           prodl	equ	0xFF3
  3716                           intcon	equ	0xFF2
  3717                           postinc0	equ	0xFEE
  3718                           wreg	equ	0xFE8
  3719                           indf1	equ	0xFE7
  3720                           fsr1h	equ	0xFE2
  3721                           fsr1l	equ	0xFE1
  3722                           indf2	equ	0xFDF
  3723                           postinc2	equ	0xFDE
  3724                           postdec2	equ	0xFDD
  3725                           fsr2h	equ	0xFDA
  3726                           fsr2l	equ	0xFD9
  3727                           status	equ	0xFD8
  3728                           
  3729 ;; *************** function _in_low_int *****************
  3730 ;; Defined at:
  3731 ;;		line 39 in file "../src/interrupts.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;		None
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;		None
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  2   29[BANK0 ] int 
  3738 ;; Registers used:
  3739 ;;		wreg, status,2, status,0, cstack
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3745 ;;      Params:         0       2       0       0       0
  3746 ;;      Locals:         0       0       0       0       0
  3747 ;;      Temps:          0       0       0       0       0
  3748 ;;      Totals:         0       2       0       0       0
  3749 ;;Total ram usage:        2 bytes
  3750 ;; Hardware stack levels used:    1
  3751 ;; Hardware stack levels required when called:   11
  3752 ;; This function calls:
  3753 ;;		_in_high_int
  3754 ;; This function is called by:
  3755 ;;		_in_main
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text21
  3760  001680                     __ptext21:
  3761                           	opt stack 0
  3762  001680                     _in_low_int:
  3763                           	opt stack 16
  3764                           
  3765                           ;interrupts.c: 40: if (INTCONbits.GIEL == 1) {
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;incstack = 0
  3769  001680  ACF2               	btfss	intcon,6,c	;volatile
  3770  001682  D008               	goto	l2157
  3771                           
  3772                           ;interrupts.c: 41: return (0);
  3773  001684  0E00               	movlw	0
  3774  001686  0100               	movlb	0	; () banked
  3775  001688  0100               	movlb	0	; () banked
  3776  00168A  6FD4               	movwf	(?_in_low_int+1)& (0+255),b
  3777  00168C  0E00               	movlw	0
  3778  00168E  0100               	movlb	0	; () banked
  3779  001690  6FD3               	movwf	?_in_low_int& (0+255),b
  3780  001692  0012               	return	
  3781  001694                     l2157:
  3782  001694  EC84  F00D         	call	_in_high_int	;wreg free
  3783  001698  0100               	movlb	0	; () banked
  3784  00169A  0100               	movlb	0	; () banked
  3785  00169C  51D2               	movf	(?_in_high_int+1)& (0+255),w,b
  3786  00169E  0100               	movlb	0	; () banked
  3787  0016A0  11D1               	iorwf	?_in_high_int& (0+255),w,b
  3788  0016A2  B4D8               	btfsc	status,2,c
  3789  0016A4  D008               	goto	l2165
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;interrupts.c: 43: return (0);
  3793  0016A6  0E00               	movlw	0
  3794  0016A8  0100               	movlb	0	; () banked
  3795  0016AA  0100               	movlb	0	; () banked
  3796  0016AC  6FD4               	movwf	(?_in_low_int+1)& (0+255),b
  3797  0016AE  0E00               	movlw	0
  3798  0016B0  0100               	movlb	0	; () banked
  3799  0016B2  6FD3               	movwf	?_in_low_int& (0+255),b
  3800  0016B4  0012               	return	
  3801  0016B6                     l2165:
  3802                           
  3803                           ; BSR set to: 0
  3804                           ;interrupts.c: 45: return (1);
  3805  0016B6  0E00               	movlw	0
  3806  0016B8  0100               	movlb	0	; () banked
  3807  0016BA  0100               	movlb	0	; () banked
  3808  0016BC  6FD4               	movwf	(?_in_low_int+1)& (0+255),b
  3809  0016BE  0E01               	movlw	1
  3810  0016C0  0100               	movlb	0	; () banked
  3811  0016C2  6FD3               	movwf	?_in_low_int& (0+255),b
  3812  0016C4  0012               	return	
  3813  0016C6                     __end_of_in_low_int:
  3814                           	opt stack 0
  3815                           tblptru	equ	0xFF8
  3816                           tblptrh	equ	0xFF7
  3817                           tblptrl	equ	0xFF6
  3818                           tablat	equ	0xFF5
  3819                           prodh	equ	0xFF4
  3820                           prodl	equ	0xFF3
  3821                           intcon	equ	0xFF2
  3822                           postinc0	equ	0xFEE
  3823                           wreg	equ	0xFE8
  3824                           indf1	equ	0xFE7
  3825                           fsr1h	equ	0xFE2
  3826                           fsr1l	equ	0xFE1
  3827                           indf2	equ	0xFDF
  3828                           postinc2	equ	0xFDE
  3829                           postdec2	equ	0xFDD
  3830                           fsr2h	equ	0xFDA
  3831                           fsr2l	equ	0xFD9
  3832                           status	equ	0xFD8
  3833                           
  3834 ;; *************** function _in_high_int *****************
  3835 ;; Defined at:
  3836 ;;		line 31 in file "../src/interrupts.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;		None
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;		None
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  2   27[BANK0 ] int 
  3843 ;; Registers used:
  3844 ;;		wreg, status,2
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3850 ;;      Params:         0       2       0       0       0
  3851 ;;      Locals:         0       0       0       0       0
  3852 ;;      Temps:          0       0       0       0       0
  3853 ;;      Totals:         0       2       0       0       0
  3854 ;;Total ram usage:        2 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:   10
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		_in_low_int
  3861 ;;		_in_main
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text22
  3866  001B08                     __ptext22:
  3867                           	opt stack 0
  3868  001B08                     _in_high_int:
  3869                           	opt stack 16
  3870                           
  3871                           ;interrupts.c: 32: return (!INTCONbits.GIEH);
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;incstack = 0
  3875  001B08  0E00               	movlw	0
  3876  001B0A  AEF2               	btfss	intcon,7,c	;volatile
  3877  001B0C  0E01               	movlw	1
  3878  001B0E  0100               	movlb	0	; () banked
  3879  001B10  0100               	movlb	0	; () banked
  3880  001B12  6FD1               	movwf	?_in_high_int& (0+255),b
  3881  001B14  0100               	movlb	0	; () banked
  3882  001B16  6BD2               	clrf	(?_in_high_int+1)& (0+255),b
  3883  001B18  0012               	return	
  3884  001B1A                     __end_of_in_high_int:
  3885                           	opt stack 0
  3886                           tblptru	equ	0xFF8
  3887                           tblptrh	equ	0xFF7
  3888                           tblptrl	equ	0xFF6
  3889                           tablat	equ	0xFF5
  3890                           prodh	equ	0xFF4
  3891                           prodl	equ	0xFF3
  3892                           intcon	equ	0xFF2
  3893                           postinc0	equ	0xFEE
  3894                           wreg	equ	0xFE8
  3895                           indf1	equ	0xFE7
  3896                           fsr1h	equ	0xFE2
  3897                           fsr1l	equ	0xFE1
  3898                           indf2	equ	0xFDF
  3899                           postinc2	equ	0xFDE
  3900                           postdec2	equ	0xFDD
  3901                           fsr2h	equ	0xFDA
  3902                           fsr2l	equ	0xFD9
  3903                           status	equ	0xFD8
  3904                           
  3905 ;; *************** function _check_msg *****************
  3906 ;; Defined at:
  3907 ;;		line 222 in file "../src/messages.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;  qptr            2   27[BANK0 ] PTR struct __msg_queue
  3910 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;		None
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  1    wreg      unsigned char 
  3915 ;; Registers used:
  3916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3922 ;;      Params:         0       2       0       0       0
  3923 ;;      Locals:         0       0       0       0       0
  3924 ;;      Temps:          0       1       0       0       0
  3925 ;;      Totals:         0       3       0       0       0
  3926 ;;Total ram usage:        3 bytes
  3927 ;; Hardware stack levels used:    1
  3928 ;; Hardware stack levels required when called:   10
  3929 ;; This function calls:
  3930 ;;		Nothing
  3931 ;; This function is called by:
  3932 ;;		_block_on_To_msgqueues
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           	psect	text23
  3937  00193A                     __ptext23:
  3938                           	opt stack 0
  3939  00193A                     _check_msg:
  3940                           	opt stack 18
  3941                           
  3942                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;incstack = 0
  3946  00193A  0100               	movlb	0	; () banked
  3947  00193C  EE20 F035          	lfsr	2,53
  3948  001940  0100               	movlb	0	; () banked
  3949  001942  51D1               	movf	check_msg@qptr& (0+255),w,b
  3950  001944  26D9               	addwf	fsr2l,f,c
  3951  001946  0100               	movlb	0	; () banked
  3952  001948  51D2               	movf	(check_msg@qptr+1)& (0+255),w,b
  3953  00194A  22DA               	addwfc	fsr2h,f,c
  3954  00194C  50DF               	movf	indf2,w,c
  3955  00194E  0100               	movlb	0	; () banked
  3956  001950  6FD3               	movwf	??_check_msg& (0+255),b
  3957  001952  0100               	movlb	0	; () banked
  3958  001954  51D3               	movf	??_check_msg& (0+255),w,b
  3959  001956  0D0D               	mullw	13
  3960  001958  50F3               	movf	prodl,w,c
  3961  00195A  0100               	movlb	0	; () banked
  3962  00195C  0100               	movlb	0	; () banked
  3963  00195E  25D1               	addwf	check_msg@qptr& (0+255),w,b
  3964  001960  6ED9               	movwf	fsr2l,c
  3965  001962  50F4               	movf	prodh,w,c
  3966  001964  0100               	movlb	0	; () banked
  3967  001966  0100               	movlb	0	; () banked
  3968  001968  21D2               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3969  00196A  6EDA               	movwf	fsr2h,c
  3970  00196C  50DF               	movf	indf2,w,c
  3971  00196E  0012               	return	
  3972  001970                     __end_of_check_msg:
  3973                           	opt stack 0
  3974                           tblptru	equ	0xFF8
  3975                           tblptrh	equ	0xFF7
  3976                           tblptrl	equ	0xFF6
  3977                           tablat	equ	0xFF5
  3978                           prodh	equ	0xFF4
  3979                           prodl	equ	0xFF3
  3980                           intcon	equ	0xFF2
  3981                           postinc0	equ	0xFEE
  3982                           wreg	equ	0xFE8
  3983                           indf1	equ	0xFE7
  3984                           fsr1h	equ	0xFE2
  3985                           fsr1l	equ	0xFE1
  3986                           indf2	equ	0xFDF
  3987                           postinc2	equ	0xFDE
  3988                           postdec2	equ	0xFDD
  3989                           fsr2h	equ	0xFDA
  3990                           fsr2l	equ	0xFD9
  3991                           status	equ	0xFD8
  3992                           
  3993 ;; *************** function _Delay1KTCYx *****************
  3994 ;; Defined at:
  3995 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  unit            1    wreg     unsigned char 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;  unit            1   27[BANK0 ] unsigned char 
  4000 ;; Return value:  Size  Location     Type
  4001 ;;		None               void
  4002 ;; Registers used:
  4003 ;;		wreg
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4009 ;;      Params:         0       0       0       0       0
  4010 ;;      Locals:         0       1       0       0       0
  4011 ;;      Temps:          0       0       0       0       0
  4012 ;;      Totals:         0       1       0       0       0
  4013 ;;Total ram usage:        1 bytes
  4014 ;; Hardware stack levels used:    1
  4015 ;; Hardware stack levels required when called:   10
  4016 ;; This function calls:
  4017 ;;		Nothing
  4018 ;; This function is called by:
  4019 ;;		_block_on_To_msgqueues
  4020 ;; This function uses a non-reentrant model
  4021 ;;
  4022                           
  4023                           	psect	text24
  4024  001ACE                     __ptext24:
  4025                           	opt stack 0
  4026  001ACE                     _Delay1KTCYx:
  4027                           	opt stack 18
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;incstack = 0
  4031                           ;Delay1KTCYx@unit stored from wreg
  4032  001ACE  CFE8 F0D1          	movff	wreg,Delay1KTCYx@unit
  4033  001AD2                     l721:
  4034  001AD2  0EFA               	movlw	250
  4035  001AD4                     u2507:
  4036  001AD4  F000               	nop	
  4037  001AD6  2EE8               	decfsz	wreg,f,c
  4038  001AD8  D7FD               	goto	u2507
  4039  001ADA  0100               	movlb	0	; () banked
  4040  001ADC  0100               	movlb	0	; () banked
  4041  001ADE  2FD1               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4042  001AE0  D7F8               	goto	l721
  4043  001AE2  0012               	return	
  4044  001AE4                     __end_of_Delay1KTCYx:
  4045                           	opt stack 0
  4046                           tblptru	equ	0xFF8
  4047                           tblptrh	equ	0xFF7
  4048                           tblptrl	equ	0xFF6
  4049                           tablat	equ	0xFF5
  4050                           prodh	equ	0xFF4
  4051                           prodl	equ	0xFF3
  4052                           intcon	equ	0xFF2
  4053                           postinc0	equ	0xFEE
  4054                           wreg	equ	0xFE8
  4055                           indf1	equ	0xFE7
  4056                           fsr1h	equ	0xFE2
  4057                           fsr1l	equ	0xFE1
  4058                           indf2	equ	0xFDF
  4059                           postinc2	equ	0xFDE
  4060                           postdec2	equ	0xFDD
  4061                           fsr2h	equ	0xFDA
  4062                           fsr2l	equ	0xFD9
  4063                           status	equ	0xFD8
  4064                           
  4065 ;; *************** function _ToMainLow_recvmsg *****************
  4066 ;; Defined at:
  4067 ;;		line 112 in file "../src/messages.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;  maxlength       1    wreg     unsigned char 
  4070 ;;  msgtype         2   39[BANK0 ] PTR unsigned char 
  4071 ;;		 -> main@msgtype(1), 
  4072 ;;  data            2   41[BANK0 ] PTR void 
  4073 ;;		 -> main@msgbuffer(11), 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;  maxlength       1   12[BANK1 ] unsigned char 
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  1    wreg      char 
  4078 ;; Registers used:
  4079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4085 ;;      Params:         0       4       0       0       0
  4086 ;;      Locals:         0       0       1       0       0
  4087 ;;      Temps:          0       0       0       0       0
  4088 ;;      Totals:         0       4       1       0       0
  4089 ;;Total ram usage:        5 bytes
  4090 ;; Hardware stack levels used:    1
  4091 ;; Hardware stack levels required when called:   12
  4092 ;; This function calls:
  4093 ;;		_recv_msg
  4094 ;; This function is called by:
  4095 ;;		_main
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           	psect	text25
  4100  00174C                     __ptext25:
  4101                           	opt stack 0
  4102  00174C                     _ToMainLow_recvmsg:
  4103                           	opt stack 17
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;incstack = 0
  4107                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4108  00174C  CFE8 F1AE          	movff	wreg,ToMainLow_recvmsg@maxlength
  4109                           
  4110                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4111  001750  0100               	movlb	0	; () banked
  4112  001752  0E00               	movlw	high _ToMainLow_MQ
  4113  001754  0101               	movlb	1	; () banked
  4114  001756  0101               	movlb	1	; () banked
  4115  001758  6FA3               	movwf	(recv_msg@qptr+1)& (0+255),b
  4116  00175A  0100               	movlb	0	; () banked
  4117  00175C  0E80               	movlw	low _ToMainLow_MQ
  4118  00175E  0101               	movlb	1	; () banked
  4119  001760  0101               	movlb	1	; () banked
  4120  001762  6FA2               	movwf	recv_msg@qptr& (0+255),b
  4121  001764  C1AE  F1A4         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4122  001768  0100               	movlb	0	; () banked
  4123  00176A  0101               	movlb	1	; () banked
  4124  00176C  C0DE  F1A6         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4125  001770  0100               	movlb	0	; () banked
  4126  001772  0101               	movlb	1	; () banked
  4127  001774  C0DD  F1A5         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4128  001778  0100               	movlb	0	; () banked
  4129  00177A  0101               	movlb	1	; () banked
  4130  00177C  C0E0  F1A8         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4131  001780  0100               	movlb	0	; () banked
  4132  001782  0101               	movlb	1	; () banked
  4133  001784  C0DF  F1A7         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4134  001788  ECBF  F004         	call	_recv_msg	;wreg free
  4135  00178C  0012               	return	
  4136  00178E                     __end_of_ToMainLow_recvmsg:
  4137                           	opt stack 0
  4138                           tblptru	equ	0xFF8
  4139                           tblptrh	equ	0xFF7
  4140                           tblptrl	equ	0xFF6
  4141                           tablat	equ	0xFF5
  4142                           prodh	equ	0xFF4
  4143                           prodl	equ	0xFF3
  4144                           intcon	equ	0xFF2
  4145                           postinc0	equ	0xFEE
  4146                           wreg	equ	0xFE8
  4147                           indf1	equ	0xFE7
  4148                           fsr1h	equ	0xFE2
  4149                           fsr1l	equ	0xFE1
  4150                           indf2	equ	0xFDF
  4151                           postinc2	equ	0xFDE
  4152                           postdec2	equ	0xFDD
  4153                           fsr2h	equ	0xFDA
  4154                           fsr2l	equ	0xFD9
  4155                           status	equ	0xFD8
  4156                           
  4157 ;; *************** function _ToMainHigh_recvmsg *****************
  4158 ;; Defined at:
  4159 ;;		line 135 in file "../src/messages.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  maxlength       1    wreg     unsigned char 
  4162 ;;  msgtype         2   39[BANK0 ] PTR unsigned char 
  4163 ;;		 -> main@msgtype(1), 
  4164 ;;  data            2   41[BANK0 ] PTR void 
  4165 ;;		 -> main@msgbuffer(11), 
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;  maxlength       1   12[BANK1 ] unsigned char 
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  1    wreg      char 
  4170 ;; Registers used:
  4171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4177 ;;      Params:         0       4       0       0       0
  4178 ;;      Locals:         0       0       1       0       0
  4179 ;;      Temps:          0       0       0       0       0
  4180 ;;      Totals:         0       4       1       0       0
  4181 ;;Total ram usage:        5 bytes
  4182 ;; Hardware stack levels used:    1
  4183 ;; Hardware stack levels required when called:   12
  4184 ;; This function calls:
  4185 ;;		_recv_msg
  4186 ;; This function is called by:
  4187 ;;		_main
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           	psect	text26
  4192  00178E                     __ptext26:
  4193                           	opt stack 0
  4194  00178E                     _ToMainHigh_recvmsg:
  4195                           	opt stack 17
  4196                           
  4197                           ;incstack = 0
  4198                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4199  00178E  CFE8 F1AE          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4200                           
  4201                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4202  001792  0101               	movlb	1	; () banked
  4203  001794  0E01               	movlw	high _ToMainHigh_MQ
  4204  001796  0101               	movlb	1	; () banked
  4205  001798  0101               	movlb	1	; () banked
  4206  00179A  6FA3               	movwf	(recv_msg@qptr+1)& (0+255),b
  4207  00179C  0101               	movlb	1	; () banked
  4208  00179E  0E6C               	movlw	low _ToMainHigh_MQ
  4209  0017A0  0101               	movlb	1	; () banked
  4210  0017A2  0101               	movlb	1	; () banked
  4211  0017A4  6FA2               	movwf	recv_msg@qptr& (0+255),b
  4212  0017A6  C1AE  F1A4         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4213  0017AA  0100               	movlb	0	; () banked
  4214  0017AC  0101               	movlb	1	; () banked
  4215  0017AE  C0DE  F1A6         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4216  0017B2  0100               	movlb	0	; () banked
  4217  0017B4  0101               	movlb	1	; () banked
  4218  0017B6  C0DD  F1A5         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4219  0017BA  0100               	movlb	0	; () banked
  4220  0017BC  0101               	movlb	1	; () banked
  4221  0017BE  C0E0  F1A8         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4222  0017C2  0100               	movlb	0	; () banked
  4223  0017C4  0101               	movlb	1	; () banked
  4224  0017C6  C0DF  F1A7         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4225  0017CA  ECBF  F004         	call	_recv_msg	;wreg free
  4226  0017CE  0012               	return	
  4227  0017D0                     __end_of_ToMainHigh_recvmsg:
  4228                           	opt stack 0
  4229                           tblptru	equ	0xFF8
  4230                           tblptrh	equ	0xFF7
  4231                           tblptrl	equ	0xFF6
  4232                           tablat	equ	0xFF5
  4233                           prodh	equ	0xFF4
  4234                           prodl	equ	0xFF3
  4235                           intcon	equ	0xFF2
  4236                           postinc0	equ	0xFEE
  4237                           wreg	equ	0xFE8
  4238                           indf1	equ	0xFE7
  4239                           fsr1h	equ	0xFE2
  4240                           fsr1l	equ	0xFE1
  4241                           indf2	equ	0xFDF
  4242                           postinc2	equ	0xFDE
  4243                           postdec2	equ	0xFDD
  4244                           fsr2h	equ	0xFDA
  4245                           fsr2l	equ	0xFD9
  4246                           status	equ	0xFD8
  4247                           
  4248 ;; *************** function _recv_msg *****************
  4249 ;; Defined at:
  4250 ;;		line 63 in file "../src/messages.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  4253 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4254 ;;  maxlength       1    2[BANK1 ] unsigned char 
  4255 ;;  msgtype         2    3[BANK1 ] PTR unsigned char 
  4256 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  4257 ;;  data            2    5[BANK1 ] PTR void 
  4258 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;  qmsg            2   10[BANK1 ] PTR struct __msg
  4261 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4262 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4263 ;;  tlength         2    8[BANK1 ] unsigned int 
  4264 ;;  slot            1    7[BANK1 ] unsigned char 
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  1    wreg      char 
  4267 ;; Registers used:
  4268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4274 ;;      Params:         0       0       7       0       0
  4275 ;;      Locals:         0       0       5       0       0
  4276 ;;      Temps:          0       2       0       0       0
  4277 ;;      Totals:         0       2      12       0       0
  4278 ;;Total ram usage:       14 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; Hardware stack levels required when called:   11
  4281 ;; This function calls:
  4282 ;;		_memcpy
  4283 ;; This function is called by:
  4284 ;;		_ToMainLow_recvmsg
  4285 ;;		_ToMainHigh_recvmsg
  4286 ;;		_FromMainLow_recvmsg
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           	psect	text27
  4291  00097E                     __ptext27:
  4292                           	opt stack 0
  4293  00097E                     _recv_msg:
  4294                           	opt stack 17
  4295                           
  4296                           ;messages.c: 64: unsigned char slot;
  4297                           ;messages.c: 68: msg *qmsg;
  4298                           ;messages.c: 69: size_t tlength;
  4299                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4300                           
  4301                           ;incstack = 0
  4302  00097E  0101               	movlb	1	; () banked
  4303  000980  EE20 F035          	lfsr	2,53
  4304  000984  0101               	movlb	1	; () banked
  4305  000986  51A2               	movf	recv_msg@qptr& (0+255),w,b
  4306  000988  26D9               	addwf	fsr2l,f,c
  4307  00098A  0101               	movlb	1	; () banked
  4308  00098C  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4309  00098E  22DA               	addwfc	fsr2h,f,c
  4310  000990  50DF               	movf	indf2,w,c
  4311  000992  0101               	movlb	1	; () banked
  4312  000994  0101               	movlb	1	; () banked
  4313  000996  6FA9               	movwf	recv_msg@slot& (0+255),b
  4314                           
  4315                           ; BSR set to: 1
  4316                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4317  000998  0101               	movlb	1	; () banked
  4318  00099A  0101               	movlb	1	; () banked
  4319  00099C  51A9               	movf	recv_msg@slot& (0+255),w,b
  4320  00099E  0D0D               	mullw	13
  4321  0009A0  50F3               	movf	prodl,w,c
  4322  0009A2  0101               	movlb	1	; () banked
  4323  0009A4  0101               	movlb	1	; () banked
  4324  0009A6  25A2               	addwf	recv_msg@qptr& (0+255),w,b
  4325  0009A8  0101               	movlb	1	; () banked
  4326  0009AA  0101               	movlb	1	; () banked
  4327  0009AC  6FAC               	movwf	recv_msg@qmsg& (0+255),b
  4328  0009AE  50F4               	movf	prodh,w,c
  4329  0009B0  0101               	movlb	1	; () banked
  4330  0009B2  0101               	movlb	1	; () banked
  4331  0009B4  21A3               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4332  0009B6  0101               	movlb	1	; () banked
  4333  0009B8  6FAD               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4334                           
  4335                           ; BSR set to: 1
  4336                           ;messages.c: 74: if (qmsg->full == 1) {
  4337  0009BA  0E01               	movlw	1
  4338  0009BC  C1AC  FFD9         	movff	recv_msg@qmsg,fsr2l
  4339  0009C0  C1AD  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4340  0009C4  62DF               	cpfseq	indf2,c
  4341  0009C6  D074               	goto	l3365
  4342                           
  4343                           ; BSR set to: 1
  4344                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4345  0009C8  0101               	movlb	1	; () banked
  4346  0009CA  EE20 F001          	lfsr	2,1
  4347  0009CE  0101               	movlb	1	; () banked
  4348  0009D0  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  4349  0009D2  26D9               	addwf	fsr2l,f,c
  4350  0009D4  0101               	movlb	1	; () banked
  4351  0009D6  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4352  0009D8  22DA               	addwfc	fsr2h,f,c
  4353  0009DA  50DF               	movf	indf2,w,c
  4354  0009DC  0101               	movlb	1	; () banked
  4355  0009DE  0101               	movlb	1	; () banked
  4356  0009E0  5DA4               	subwf	recv_msg@maxlength& (0+255),w,b
  4357  0009E2  B0D8               	btfsc	status,0,c
  4358  0009E4  D002               	goto	l3349
  4359                           
  4360                           ; BSR set to: 1
  4361                           ;messages.c: 77: return (-3);
  4362  0009E6  0EFD               	movlw	253
  4363  0009E8  0012               	return	
  4364  0009EA                     l3349:
  4365                           
  4366                           ; BSR set to: 1
  4367                           ;messages.c: 78: }
  4368                           ;messages.c: 80: tlength = qmsg->length;
  4369  0009EA  0101               	movlb	1	; () banked
  4370  0009EC  EE20 F001          	lfsr	2,1
  4371  0009F0  0101               	movlb	1	; () banked
  4372  0009F2  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  4373  0009F4  26D9               	addwf	fsr2l,f,c
  4374  0009F6  0101               	movlb	1	; () banked
  4375  0009F8  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4376  0009FA  22DA               	addwfc	fsr2h,f,c
  4377  0009FC  50DF               	movf	indf2,w,c
  4378  0009FE  0100               	movlb	0	; () banked
  4379  000A00  6FDB               	movwf	??_recv_msg& (0+255),b
  4380  000A02  0100               	movlb	0	; () banked
  4381  000A04  51DB               	movf	??_recv_msg& (0+255),w,b
  4382  000A06  0101               	movlb	1	; () banked
  4383  000A08  0101               	movlb	1	; () banked
  4384  000A0A  6FAA               	movwf	recv_msg@tlength& (0+255),b
  4385  000A0C  0101               	movlb	1	; () banked
  4386  000A0E  6BAB               	clrf	(recv_msg@tlength+1)& (0+255),b
  4387                           
  4388                           ; BSR set to: 1
  4389                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4390  000A10  0101               	movlb	1	; () banked
  4391  000A12  0100               	movlb	0	; () banked
  4392  000A14  C1A8  F0D2         	movff	recv_msg@data+1,memcpy@d1+1
  4393  000A18  0101               	movlb	1	; () banked
  4394  000A1A  0100               	movlb	0	; () banked
  4395  000A1C  C1A7  F0D1         	movff	recv_msg@data,memcpy@d1
  4396  000A20  0E03               	movlw	3
  4397  000A22  0101               	movlb	1	; () banked
  4398  000A24  0101               	movlb	1	; () banked
  4399  000A26  25AC               	addwf	recv_msg@qmsg& (0+255),w,b
  4400  000A28  0100               	movlb	0	; () banked
  4401  000A2A  6FDB               	movwf	??_recv_msg& (0+255),b
  4402  000A2C  0E00               	movlw	0
  4403  000A2E  0101               	movlb	1	; () banked
  4404  000A30  0101               	movlb	1	; () banked
  4405  000A32  21AD               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4406  000A34  0100               	movlb	0	; () banked
  4407  000A36  6FDC               	movwf	(??_recv_msg+1)& (0+255),b
  4408  000A38  C0DB  F0D3         	movff	??_recv_msg,memcpy@s1
  4409  000A3C  C0DC  F0D4         	movff	??_recv_msg+1,memcpy@s1+1
  4410  000A40  C1AA  F0D5         	movff	recv_msg@tlength,memcpy@n
  4411  000A44  C1AB  F0D6         	movff	recv_msg@tlength+1,memcpy@n+1
  4412  000A48  ECC6  F00A         	call	_memcpy	;wreg free
  4413                           
  4414                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4415  000A4C  0101               	movlb	1	; () banked
  4416  000A4E  EE20 F035          	lfsr	2,53
  4417  000A52  0101               	movlb	1	; () banked
  4418  000A54  51A2               	movf	recv_msg@qptr& (0+255),w,b
  4419  000A56  26D9               	addwf	fsr2l,f,c
  4420  000A58  0101               	movlb	1	; () banked
  4421  000A5A  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4422  000A5C  22DA               	addwfc	fsr2h,f,c
  4423  000A5E  0101               	movlb	1	; () banked
  4424  000A60  EE10 F035          	lfsr	1,53
  4425  000A64  0101               	movlb	1	; () banked
  4426  000A66  51A2               	movf	recv_msg@qptr& (0+255),w,b
  4427  000A68  26E1               	addwf	fsr1l,f,c
  4428  000A6A  0101               	movlb	1	; () banked
  4429  000A6C  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4430  000A6E  22E2               	addwfc	fsr1h,f,c
  4431  000A70  50E7               	movf	indf1,w,c
  4432  000A72  0100               	movlb	0	; () banked
  4433  000A74  6FDB               	movwf	??_recv_msg& (0+255),b
  4434  000A76  0100               	movlb	0	; () banked
  4435  000A78  29DB               	incf	??_recv_msg& (0+255),w,b
  4436  000A7A  0B03               	andlw	3
  4437  000A7C  6EDF               	movwf	indf2,c
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4441  000A7E  0101               	movlb	1	; () banked
  4442  000A80  EE20 F002          	lfsr	2,2
  4443  000A84  0101               	movlb	1	; () banked
  4444  000A86  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  4445  000A88  26D9               	addwf	fsr2l,f,c
  4446  000A8A  0101               	movlb	1	; () banked
  4447  000A8C  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4448  000A8E  22DA               	addwfc	fsr2h,f,c
  4449  000A90  C1A5  FFE1         	movff	recv_msg@msgtype,fsr1l
  4450  000A94  C1A6  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4451  000A98  CFDF FFE7          	movff	indf2,indf1
  4452                           
  4453                           ; BSR set to: 1
  4454                           ;messages.c: 91: qmsg->full = 0;
  4455  000A9C  C1AC  FFD9         	movff	recv_msg@qmsg,fsr2l
  4456  000AA0  C1AD  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4457  000AA4  0E00               	movlw	0
  4458  000AA6  6EDF               	movwf	indf2,c
  4459                           
  4460                           ; BSR set to: 1
  4461                           ;messages.c: 92: return (tlength);
  4462  000AA8  0101               	movlb	1	; () banked
  4463  000AAA  0101               	movlb	1	; () banked
  4464  000AAC  51AA               	movf	recv_msg@tlength& (0+255),w,b
  4465  000AAE  0012               	return	
  4466  000AB0                     l3365:
  4467                           
  4468                           ; BSR set to: 1
  4469                           ;messages.c: 94: return (-4);
  4470  000AB0  0EFC               	movlw	252
  4471  000AB2  0012               	return	
  4472  000AB4                     __end_of_recv_msg:
  4473                           	opt stack 0
  4474                           tblptru	equ	0xFF8
  4475                           tblptrh	equ	0xFF7
  4476                           tblptrl	equ	0xFF6
  4477                           tablat	equ	0xFF5
  4478                           prodh	equ	0xFF4
  4479                           prodl	equ	0xFF3
  4480                           intcon	equ	0xFF2
  4481                           postinc0	equ	0xFEE
  4482                           wreg	equ	0xFE8
  4483                           indf1	equ	0xFE7
  4484                           fsr1h	equ	0xFE2
  4485                           fsr1l	equ	0xFE1
  4486                           indf2	equ	0xFDF
  4487                           postinc2	equ	0xFDE
  4488                           postdec2	equ	0xFDD
  4489                           fsr2h	equ	0xFDA
  4490                           fsr2l	equ	0xFD9
  4491                           status	equ	0xFD8
  4492                           
  4493 ;; *************** function _memcpy *****************
  4494 ;; Defined at:
  4495 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;  d1              2   27[BANK0 ] PTR void 
  4498 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4499 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4500 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4501 ;;  s1              2   29[BANK0 ] PTR const void 
  4502 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4503 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4504 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4505 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  4506 ;;		 -> main@ic(28), main@uc(5), 
  4507 ;;  n               2   31[BANK0 ] unsigned int 
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;  s               2   35[BANK0 ] PTR const unsigned char 
  4510 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4511 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4512 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4513 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  4514 ;;		 -> main@ic(28), main@uc(5), 
  4515 ;;  d               2   33[BANK0 ] PTR unsigned char 
  4516 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4517 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4518 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  2   27[BANK0 ] PTR void 
  4521 ;; Registers used:
  4522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4528 ;;      Params:         0       6       0       0       0
  4529 ;;      Locals:         0       4       0       0       0
  4530 ;;      Temps:          0       0       0       0       0
  4531 ;;      Totals:         0      10       0       0       0
  4532 ;;Total ram usage:       10 bytes
  4533 ;; Hardware stack levels used:    1
  4534 ;; Hardware stack levels required when called:   10
  4535 ;; This function calls:
  4536 ;;		Nothing
  4537 ;; This function is called by:
  4538 ;;		_send_msg
  4539 ;;		_recv_msg
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           	psect	text28
  4544  00158C                     __ptext28:
  4545                           	opt stack 0
  4546  00158C                     _memcpy:
  4547                           	opt stack 16
  4548                           
  4549                           ; BSR set to: 1
  4550                           ;incstack = 0
  4551  00158C  0100               	movlb	0	; () banked
  4552  00158E  0100               	movlb	0	; () banked
  4553  001590  C0D4  F0DA         	movff	memcpy@s1+1,memcpy@s+1
  4554  001594  0100               	movlb	0	; () banked
  4555  001596  0100               	movlb	0	; () banked
  4556  001598  C0D3  F0D9         	movff	memcpy@s1,memcpy@s
  4557  00159C  0100               	movlb	0	; () banked
  4558  00159E  0100               	movlb	0	; () banked
  4559  0015A0  C0D2  F0D8         	movff	memcpy@d1+1,memcpy@d+1
  4560  0015A4  0100               	movlb	0	; () banked
  4561  0015A6  0100               	movlb	0	; () banked
  4562  0015A8  C0D1  F0D7         	movff	memcpy@d1,memcpy@d
  4563  0015AC  D012               	goto	l3335
  4564  0015AE                     l3329:
  4565                           
  4566                           ; BSR set to: 0
  4567  0015AE  C0D9  FFD9         	movff	memcpy@s,fsr2l
  4568  0015B2  C0DA  FFDA         	movff	memcpy@s+1,fsr2h
  4569  0015B6  C0D7  FFE1         	movff	memcpy@d,fsr1l
  4570  0015BA  C0D8  FFE2         	movff	memcpy@d+1,fsr1h
  4571  0015BE  CFDF FFE7          	movff	indf2,indf1
  4572                           
  4573                           ; BSR set to: 0
  4574  0015C2  0100               	movlb	0	; () banked
  4575  0015C4  0100               	movlb	0	; () banked
  4576  0015C6  4BD9               	infsnz	memcpy@s& (0+255),f,b
  4577  0015C8  2BDA               	incf	(memcpy@s+1)& (0+255),f,b
  4578                           
  4579                           ; BSR set to: 0
  4580  0015CA  0100               	movlb	0	; () banked
  4581  0015CC  0100               	movlb	0	; () banked
  4582  0015CE  4BD7               	infsnz	memcpy@d& (0+255),f,b
  4583  0015D0  2BD8               	incf	(memcpy@d+1)& (0+255),f,b
  4584  0015D2                     l3335:
  4585                           
  4586                           ; BSR set to: 0
  4587  0015D2  0100               	movlb	0	; () banked
  4588  0015D4  0100               	movlb	0	; () banked
  4589  0015D6  07D5               	decf	memcpy@n& (0+255),f,b
  4590  0015D8  A0D8               	btfss	status,0,c
  4591  0015DA  07D6               	decf	(memcpy@n+1)& (0+255),f,b
  4592  0015DC  0100               	movlb	0	; () banked
  4593  0015DE  29D5               	incf	memcpy@n& (0+255),w,b
  4594  0015E0  B4D8               	btfsc	status,2,c
  4595  0015E2  29D6               	incf	(memcpy@n+1)& (0+255),w,b
  4596  0015E4  B4D8               	btfsc	status,2,c
  4597                           
  4598                           ; BSR set to: 0
  4599                           
  4600                           ; BSR set to: 0
  4601                           ;	Return value of _memcpy is never used
  4602  0015E6  0012               	return	
  4603  0015E8  D7E2               	goto	l3329
  4604  0015EA                     __end_of_memcpy:
  4605                           	opt stack 0
  4606                           tblptru	equ	0xFF8
  4607                           tblptrh	equ	0xFF7
  4608                           tblptrl	equ	0xFF6
  4609                           tablat	equ	0xFF5
  4610                           prodh	equ	0xFF4
  4611                           prodl	equ	0xFF3
  4612                           intcon	equ	0xFF2
  4613                           postinc0	equ	0xFEE
  4614                           wreg	equ	0xFE8
  4615                           indf1	equ	0xFE7
  4616                           fsr1h	equ	0xFE2
  4617                           fsr1l	equ	0xFE1
  4618                           indf2	equ	0xFDF
  4619                           postinc2	equ	0xFDE
  4620                           postdec2	equ	0xFDD
  4621                           fsr2h	equ	0xFDA
  4622                           fsr2l	equ	0xFD9
  4623                           status	equ	0xFD8
  4624                           
  4625 ;; *************** function _OpenUSART *****************
  4626 ;; Defined at:
  4627 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  config          1    wreg     unsigned char 
  4630 ;;  spbrg           2   27[BANK0 ] unsigned int 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;  config          1   32[BANK0 ] unsigned char 
  4633 ;; Return value:  Size  Location     Type
  4634 ;;		None               void
  4635 ;; Registers used:
  4636 ;;		wreg, status,2
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4642 ;;      Params:         0       2       0       0       0
  4643 ;;      Locals:         0       1       0       0       0
  4644 ;;      Temps:          0       3       0       0       0
  4645 ;;      Totals:         0       6       0       0       0
  4646 ;;Total ram usage:        6 bytes
  4647 ;; Hardware stack levels used:    1
  4648 ;; Hardware stack levels required when called:   10
  4649 ;; This function calls:
  4650 ;;		Nothing
  4651 ;; This function is called by:
  4652 ;;		_main
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           	psect	text29
  4657  0011AE                     __ptext29:
  4658                           	opt stack 0
  4659  0011AE                     _OpenUSART:
  4660                           	opt stack 19
  4661                           
  4662                           ; BSR set to: 0
  4663                           ;incstack = 0
  4664                           ;OpenUSART@config stored from wreg
  4665  0011AE  CFE8 F0D6          	movff	wreg,OpenUSART@config
  4666  0011B2  0E00               	movlw	0
  4667  0011B4  6EAC               	movwf	4012,c	;volatile
  4668  0011B6  0E00               	movlw	0
  4669  0011B8  6EAB               	movwf	4011,c	;volatile
  4670  0011BA  0100               	movlb	0	; () banked
  4671  0011BC  0100               	movlb	0	; () banked
  4672  0011BE  B1D6               	btfsc	OpenUSART@config& (0+255),0,b
  4673                           
  4674                           ; BSR set to: 0
  4675  0011C0  88AC               	bsf	4012,4,c	;volatile
  4676                           
  4677                           ; BSR set to: 0
  4678                           
  4679                           ; BSR set to: 0
  4680  0011C2  0100               	movlb	0	; () banked
  4681  0011C4  0100               	movlb	0	; () banked
  4682  0011C6  A3D6               	btfss	OpenUSART@config& (0+255),1,b
  4683  0011C8  D002               	goto	l2567
  4684                           
  4685                           ; BSR set to: 0
  4686  0011CA  8CAC               	bsf	4012,6,c	;volatile
  4687  0011CC  8CAB               	bsf	4011,6,c	;volatile
  4688  0011CE                     l2567:
  4689                           
  4690                           ; BSR set to: 0
  4691  0011CE  0100               	movlb	0	; () banked
  4692  0011D0  0100               	movlb	0	; () banked
  4693  0011D2  B5D6               	btfsc	OpenUSART@config& (0+255),2,b
  4694                           
  4695                           ; BSR set to: 0
  4696  0011D4  8EAC               	bsf	4012,7,c	;volatile
  4697                           
  4698                           ; BSR set to: 0
  4699                           
  4700                           ; BSR set to: 0
  4701  0011D6  0100               	movlb	0	; () banked
  4702  0011D8  0100               	movlb	0	; () banked
  4703  0011DA  A7D6               	btfss	OpenUSART@config& (0+255),3,b
  4704  0011DC  D002               	goto	l488
  4705                           
  4706                           ; BSR set to: 0
  4707  0011DE  88AB               	bsf	4011,4,c	;volatile
  4708  0011E0  D001               	goto	l2575
  4709  0011E2                     l488:
  4710                           
  4711                           ; BSR set to: 0
  4712  0011E2  8AAB               	bsf	4011,5,c	;volatile
  4713  0011E4                     l2575:
  4714                           
  4715                           ; BSR set to: 0
  4716  0011E4  0100               	movlb	0	; () banked
  4717  0011E6  0100               	movlb	0	; () banked
  4718  0011E8  B9D6               	btfsc	OpenUSART@config& (0+255),4,b
  4719                           
  4720                           ; BSR set to: 0
  4721  0011EA  84AC               	bsf	4012,2,c	;volatile
  4722                           
  4723                           ; BSR set to: 0
  4724  0011EC  989E               	bcf	3998,4,c	;volatile
  4725                           
  4726                           ; BSR set to: 0
  4727  0011EE  0100               	movlb	0	; () banked
  4728  0011F0  0100               	movlb	0	; () banked
  4729  0011F2  BBD6               	btfsc	OpenUSART@config& (0+255),5,b
  4730                           
  4731                           ; BSR set to: 0
  4732  0011F4  86AB               	bsf	4011,3,c	;volatile
  4733                           
  4734                           ; BSR set to: 0
  4735                           
  4736                           ; BSR set to: 0
  4737  0011F6  0100               	movlb	0	; () banked
  4738  0011F8  0100               	movlb	0	; () banked
  4739  0011FA  ADD6               	btfss	OpenUSART@config& (0+255),6,b
  4740  0011FC  D002               	goto	l492
  4741                           
  4742                           ; BSR set to: 0
  4743  0011FE  8A9D               	bsf	3997,5,c	;volatile
  4744  001200  D001               	goto	l493
  4745  001202                     l492:
  4746                           
  4747                           ; BSR set to: 0
  4748  001202  9A9D               	bcf	3997,5,c	;volatile
  4749  001204                     l493:
  4750                           
  4751                           ; BSR set to: 0
  4752  001204  9A9E               	bcf	3998,5,c	;volatile
  4753                           
  4754                           ; BSR set to: 0
  4755  001206  0100               	movlb	0	; () banked
  4756  001208  0100               	movlb	0	; () banked
  4757  00120A  AFD6               	btfss	OpenUSART@config& (0+255),7,b
  4758  00120C  D002               	goto	l494
  4759                           
  4760                           ; BSR set to: 0
  4761  00120E  889D               	bsf	3997,4,c	;volatile
  4762  001210  D001               	goto	l495
  4763  001212                     l494:
  4764                           
  4765                           ; BSR set to: 0
  4766  001212  989D               	bcf	3997,4,c	;volatile
  4767  001214                     l495:
  4768                           
  4769                           ; BSR set to: 0
  4770  001214  C0D1  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4771                           
  4772                           ; BSR set to: 0
  4773  001218  0100               	movlb	0	; () banked
  4774  00121A  C0D2  F0D3         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4775  00121E  C0D3  F0D4         	movff	??_OpenUSART,??_OpenUSART+1
  4776  001222  0100               	movlb	0	; () banked
  4777  001224  6BD5               	clrf	(??_OpenUSART+2)& (0+255),b
  4778  001226  0100               	movlb	0	; () banked
  4779  001228  51D4               	movf	(??_OpenUSART+1)& (0+255),w,b
  4780  00122A  6EB0               	movwf	4016,c	;volatile
  4781                           
  4782                           ; BSR set to: 0
  4783  00122C  8AAC               	bsf	4012,5,c	;volatile
  4784                           
  4785                           ; BSR set to: 0
  4786  00122E  8EAB               	bsf	4011,7,c	;volatile
  4787                           
  4788                           ; BSR set to: 0
  4789  001230  9C94               	bcf	3988,6,c	;volatile
  4790                           
  4791                           ; BSR set to: 0
  4792  001232  8E94               	bsf	3988,7,c	;volatile
  4793                           
  4794                           ; BSR set to: 0
  4795  001234  A8AC               	btfss	4012,4,c	;volatile
  4796  001236  0012               	return	
  4797                           
  4798                           ; BSR set to: 0
  4799  001238  BEAC               	btfsc	4012,7,c	;volatile
  4800  00123A  0012               	return	
  4801                           
  4802                           ; BSR set to: 0
  4803  00123C  8C94               	bsf	3988,6,c	;volatile
  4804  00123E  0012               	return	
  4805  001240                     __end_of_OpenUSART:
  4806                           	opt stack 0
  4807                           tblptru	equ	0xFF8
  4808                           tblptrh	equ	0xFF7
  4809                           tblptrl	equ	0xFF6
  4810                           tablat	equ	0xFF5
  4811                           prodh	equ	0xFF4
  4812                           prodl	equ	0xFF3
  4813                           intcon	equ	0xFF2
  4814                           postinc0	equ	0xFEE
  4815                           wreg	equ	0xFE8
  4816                           indf1	equ	0xFE7
  4817                           fsr1h	equ	0xFE2
  4818                           fsr1l	equ	0xFE1
  4819                           indf2	equ	0xFDF
  4820                           postinc2	equ	0xFDE
  4821                           postdec2	equ	0xFDD
  4822                           fsr2h	equ	0xFDA
  4823                           fsr2l	equ	0xFD9
  4824                           status	equ	0xFD8
  4825                           
  4826 ;; *************** function _OpenTimer1 *****************
  4827 ;; Defined at:
  4828 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;  config          1    wreg     unsigned char 
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;  config          1   27[BANK0 ] unsigned char 
  4833 ;; Return value:  Size  Location     Type
  4834 ;;		None               void
  4835 ;; Registers used:
  4836 ;;		wreg, status,2, status,0
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4842 ;;      Params:         0       0       0       0       0
  4843 ;;      Locals:         0       1       0       0       0
  4844 ;;      Temps:          0       0       0       0       0
  4845 ;;      Totals:         0       1       0       0       0
  4846 ;;Total ram usage:        1 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; Hardware stack levels required when called:   10
  4849 ;; This function calls:
  4850 ;;		Nothing
  4851 ;; This function is called by:
  4852 ;;		_main
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           	psect	text30
  4857  0018CC                     __ptext30:
  4858                           	opt stack 0
  4859  0018CC                     _OpenTimer1:
  4860                           	opt stack 19
  4861                           
  4862                           ; BSR set to: 0
  4863                           ;incstack = 0
  4864                           ;OpenTimer1@config stored from wreg
  4865  0018CC  CFE8 F0D1          	movff	wreg,OpenTimer1@config
  4866  0018D0  0100               	movlb	0	; () banked
  4867  0018D2  0100               	movlb	0	; () banked
  4868  0018D4  51D1               	movf	OpenTimer1@config& (0+255),w,b
  4869  0018D6  0B7E               	andlw	126
  4870  0018D8  6ECD               	movwf	4045,c	;volatile
  4871                           
  4872                           ; BSR set to: 0
  4873  0018DA  0100               	movlb	0	; () banked
  4874  0018DC  0100               	movlb	0	; () banked
  4875  0018DE  ADD1               	btfss	OpenTimer1@config& (0+255),6,b
  4876  0018E0  D002               	goto	l444
  4877                           
  4878                           ; BSR set to: 0
  4879  0018E2  8ECD               	bsf	4045,7,c	;volatile
  4880  0018E4  D001               	goto	l2527
  4881  0018E6                     l444:
  4882                           
  4883                           ; BSR set to: 0
  4884  0018E6  9ECD               	bcf	4045,7,c	;volatile
  4885  0018E8                     l2527:
  4886                           
  4887                           ; BSR set to: 0
  4888  0018E8  0E00               	movlw	0
  4889  0018EA  6ECF               	movwf	4047,c	;volatile
  4890  0018EC  0E00               	movlw	0
  4891  0018EE  6ECE               	movwf	4046,c	;volatile
  4892                           
  4893                           ; BSR set to: 0
  4894  0018F0  909E               	bcf	3998,0,c	;volatile
  4895                           
  4896                           ; BSR set to: 0
  4897  0018F2  0100               	movlb	0	; () banked
  4898  0018F4  0100               	movlb	0	; () banked
  4899  0018F6  AFD1               	btfss	OpenTimer1@config& (0+255),7,b
  4900  0018F8  D002               	goto	l446
  4901                           
  4902                           ; BSR set to: 0
  4903  0018FA  809D               	bsf	3997,0,c	;volatile
  4904  0018FC  D001               	goto	l447
  4905  0018FE                     l446:
  4906                           
  4907                           ; BSR set to: 0
  4908  0018FE  909D               	bcf	3997,0,c	;volatile
  4909  001900                     l447:
  4910                           
  4911                           ; BSR set to: 0
  4912  001900  80CD               	bsf	4045,0,c	;volatile
  4913                           
  4914                           ; BSR set to: 0
  4915  001902  0012               	return	
  4916  001904                     __end_of_OpenTimer1:
  4917                           	opt stack 0
  4918                           tblptru	equ	0xFF8
  4919                           tblptrh	equ	0xFF7
  4920                           tblptrl	equ	0xFF6
  4921                           tablat	equ	0xFF5
  4922                           prodh	equ	0xFF4
  4923                           prodl	equ	0xFF3
  4924                           intcon	equ	0xFF2
  4925                           postinc0	equ	0xFEE
  4926                           wreg	equ	0xFE8
  4927                           indf1	equ	0xFE7
  4928                           fsr1h	equ	0xFE2
  4929                           fsr1l	equ	0xFE1
  4930                           indf2	equ	0xFDF
  4931                           postinc2	equ	0xFDE
  4932                           postdec2	equ	0xFDD
  4933                           fsr2h	equ	0xFDA
  4934                           fsr2l	equ	0xFD9
  4935                           status	equ	0xFD8
  4936                           
  4937 ;; *************** function _InterruptHandlerLow *****************
  4938 ;; Defined at:
  4939 ;;		line 142 in file "../src/interrupts.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;		None
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;		None
  4944 ;; Return value:  Size  Location     Type
  4945 ;;		None               void
  4946 ;; Registers used:
  4947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4953 ;;      Params:         0       0       0       0       0
  4954 ;;      Locals:         0       0       0       0       0
  4955 ;;      Temps:         17       0       0       0       0
  4956 ;;      Totals:        17       0       0       0       0
  4957 ;;Total ram usage:       17 bytes
  4958 ;; Hardware stack levels used:    1
  4959 ;; Hardware stack levels required when called:    9
  4960 ;; This function calls:
  4961 ;;		_timer1_int_handler
  4962 ;;		_uart_recv_int_handler
  4963 ;;		i1_ConvertADC
  4964 ;; This function is called by:
  4965 ;;		Interrupt level 1
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969                           	psect	intcodelo
  4970  000018                     __pintcodelo:
  4971                           	opt stack 0
  4972  000018                     _InterruptHandlerLow:
  4973                           	opt stack 16
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;incstack = 0
  4977  000018  CFD8 F01E          	movff	status,??_InterruptHandlerLow
  4978  00001C  CFE8 F01F          	movff	wreg,??_InterruptHandlerLow+1
  4979  000020  CFE0 F020          	movff	bsr,??_InterruptHandlerLow+2
  4980  000024  CFFA F021          	movff	pclath,??_InterruptHandlerLow+3
  4981  000028  CFFB F022          	movff	pclatu,??_InterruptHandlerLow+4
  4982  00002C  CFE9 F023          	movff	fsr0l,??_InterruptHandlerLow+5
  4983  000030  CFEA F024          	movff	fsr0h,??_InterruptHandlerLow+6
  4984  000034  CFE1 F025          	movff	fsr1l,??_InterruptHandlerLow+7
  4985  000038  CFE2 F026          	movff	fsr1h,??_InterruptHandlerLow+8
  4986  00003C  CFD9 F027          	movff	fsr2l,??_InterruptHandlerLow+9
  4987  000040  CFDA F028          	movff	fsr2h,??_InterruptHandlerLow+10
  4988  000044  CFF3 F029          	movff	prodl,??_InterruptHandlerLow+11
  4989  000048  CFF4 F02A          	movff	prodh,??_InterruptHandlerLow+12
  4990  00004C  CFF6 F02B          	movff	tblptrl,??_InterruptHandlerLow+13
  4991  000050  CFF7 F02C          	movff	tblptrh,??_InterruptHandlerLow+14
  4992  000054  CFF8 F02D          	movff	tblptru,??_InterruptHandlerLow+15
  4993  000058  CFF5 F02E          	movff	tablat,??_InterruptHandlerLow+16
  4994                           
  4995                           ;interrupts.c: 144: if (PIR1bits.TMR1IF) {
  4996  00005C  A09E               	btfss	3998,0,c	;volatile
  4997  00005E  D005               	goto	i1l2995
  4998                           
  4999                           ;interrupts.c: 145: PIR1bits.TMR1IF = 0;
  5000  000060  909E               	bcf	3998,0,c	;volatile
  5001                           
  5002                           ;interrupts.c: 146: ConvertADC();
  5003  000062  ECBC  F00D         	call	i1_ConvertADC	;wreg free
  5004                           
  5005                           ;interrupts.c: 147: timer1_int_handler();
  5006  000066  EC1C  F00B         	call	_timer1_int_handler	;wreg free
  5007  00006A                     i1l2995:
  5008                           
  5009                           ;interrupts.c: 148: }
  5010                           ;interrupts.c: 151: if (PIR1bits.RCIF) {
  5011  00006A  AA9E               	btfss	3998,5,c	;volatile
  5012  00006C  D003               	goto	i1l57
  5013                           
  5014                           ;interrupts.c: 152: PIR1bits.RCIF = 0;
  5015  00006E  9A9E               	bcf	3998,5,c	;volatile
  5016                           
  5017                           ;interrupts.c: 153: uart_recv_int_handler();
  5018  000070  EC89  F008         	call	_uart_recv_int_handler	;wreg free
  5019  000074                     i1l57:
  5020  000074  C02E  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5021  000078  C02D  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5022  00007C  C02C  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5023  000080  C02B  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5024  000084  C02A  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5025  000088  C029  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5026  00008C  C028  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5027  000090  C027  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5028  000094  C026  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5029  000098  C025  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5030  00009C  C024  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5031  0000A0  C023  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5032  0000A4  C022  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5033  0000A8  C021  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5034  0000AC  C020  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5035  0000B0  C01F  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5036  0000B4  C01E  FFD8         	movff	??_InterruptHandlerLow,status
  5037  0000B8  0010               	retfie	
  5038  0000BA                     __end_of_InterruptHandlerLow:
  5039                           	opt stack 0
  5040                           pclatu	equ	0xFFB
  5041                           pclath	equ	0xFFA
  5042                           tblptru	equ	0xFF8
  5043                           tblptrh	equ	0xFF7
  5044                           tblptrl	equ	0xFF6
  5045                           tablat	equ	0xFF5
  5046                           prodh	equ	0xFF4
  5047                           prodl	equ	0xFF3
  5048                           intcon	equ	0xFF2
  5049                           postinc0	equ	0xFEE
  5050                           fsr0h	equ	0xFEA
  5051                           fsr0l	equ	0xFE9
  5052                           wreg	equ	0xFE8
  5053                           indf1	equ	0xFE7
  5054                           fsr1h	equ	0xFE2
  5055                           fsr1l	equ	0xFE1
  5056                           bsr	equ	0xFE0
  5057                           indf2	equ	0xFDF
  5058                           postinc2	equ	0xFDE
  5059                           postdec2	equ	0xFDD
  5060                           fsr2h	equ	0xFDA
  5061                           fsr2l	equ	0xFD9
  5062                           status	equ	0xFD8
  5063                           
  5064 ;; *************** function i1_ConvertADC *****************
  5065 ;; Defined at:
  5066 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcconv.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;		None
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;		None
  5071 ;; Return value:  Size  Location     Type
  5072 ;;		None               void
  5073 ;; Registers used:
  5074 ;;		None
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5080 ;;      Params:         0       0       0       0       0
  5081 ;;      Locals:         0       0       0       0       0
  5082 ;;      Temps:          0       0       0       0       0
  5083 ;;      Totals:         0       0       0       0       0
  5084 ;;Total ram usage:        0 bytes
  5085 ;; Hardware stack levels used:    1
  5086 ;; Hardware stack levels required when called:    5
  5087 ;; This function calls:
  5088 ;;		Nothing
  5089 ;; This function is called by:
  5090 ;;		_InterruptHandlerLow
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           	psect	text32
  5095  001B78                     __ptext32:
  5096                           	opt stack 0
  5097  001B78                     i1_ConvertADC:
  5098                           	opt stack 19
  5099                           
  5100                           ;incstack = 0
  5101  001B78  82C2               	bsf	4034,1,c	;volatile
  5102  001B7A  0012               	return	
  5103  001B7C                     __end_ofi1_ConvertADC:
  5104                           	opt stack 0
  5105                           pclatu	equ	0xFFB
  5106                           pclath	equ	0xFFA
  5107                           tblptru	equ	0xFF8
  5108                           tblptrh	equ	0xFF7
  5109                           tblptrl	equ	0xFF6
  5110                           tablat	equ	0xFF5
  5111                           prodh	equ	0xFF4
  5112                           prodl	equ	0xFF3
  5113                           intcon	equ	0xFF2
  5114                           postinc0	equ	0xFEE
  5115                           fsr0h	equ	0xFEA
  5116                           fsr0l	equ	0xFE9
  5117                           wreg	equ	0xFE8
  5118                           indf1	equ	0xFE7
  5119                           fsr1h	equ	0xFE2
  5120                           fsr1l	equ	0xFE1
  5121                           bsr	equ	0xFE0
  5122                           indf2	equ	0xFDF
  5123                           postinc2	equ	0xFDE
  5124                           postdec2	equ	0xFDD
  5125                           fsr2h	equ	0xFDA
  5126                           fsr2l	equ	0xFD9
  5127                           status	equ	0xFD8
  5128                           
  5129 ;; *************** function _uart_recv_int_handler *****************
  5130 ;; Defined at:
  5131 ;;		line 11 in file "../src/my_uart.c"
  5132 ;; Parameters:    Size  Location     Type
  5133 ;;		None
  5134 ;; Auto vars:     Size  Location     Type
  5135 ;;		None
  5136 ;; Return value:  Size  Location     Type
  5137 ;;		None               void
  5138 ;; Registers used:
  5139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5140 ;; Tracked objects:
  5141 ;;		On entry : 0/0
  5142 ;;		On exit  : 0/0
  5143 ;;		Unchanged: 0/0
  5144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5145 ;;      Params:         0       0       0       0       0
  5146 ;;      Locals:         0       0       0       0       0
  5147 ;;      Temps:          1       0       0       0       0
  5148 ;;      Totals:         1       0       0       0       0
  5149 ;;Total ram usage:        1 bytes
  5150 ;; Hardware stack levels used:    1
  5151 ;; Hardware stack levels required when called:    8
  5152 ;; This function calls:
  5153 ;;		_ReadUSART
  5154 ;;		_ToMainLow_sendmsg
  5155 ;; This function is called by:
  5156 ;;		_InterruptHandlerLow
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160                           	psect	text33
  5161  001112                     __ptext33:
  5162                           	opt stack 0
  5163  001112                     _uart_recv_int_handler:
  5164                           	opt stack 16
  5165                           
  5166                           ;my_uart.c: 12: if ((PIR1bits.RCIF)) {
  5167                           
  5168                           ;incstack = 0
  5169  001112  AA9E               	btfss	3998,5,c	;volatile
  5170  001114  D03C               	goto	i1l2981
  5171                           
  5172                           ;my_uart.c: 13: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5173  001116  EE20 F004          	lfsr	2,4
  5174  00111A  504D               	movf	_uc_ptr,w,c
  5175  00111C  26D9               	addwf	fsr2l,f,c
  5176  00111E  504E               	movf	_uc_ptr+1,w,c
  5177  001120  22DA               	addwfc	fsr2h,f,c
  5178  001122  50DF               	movf	indf2,w,c
  5179  001124  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5180  001126  501B               	movf	??_uart_recv_int_handler,w,c
  5181  001128  0D01               	mullw	1
  5182  00112A  50F3               	movf	prodl,w,c
  5183  00112C  244D               	addwf	_uc_ptr,w,c
  5184  00112E  6ED9               	movwf	fsr2l,c
  5185  001130  50F4               	movf	prodh,w,c
  5186  001132  204E               	addwfc	_uc_ptr+1,w,c
  5187  001134  6EDA               	movwf	fsr2h,c
  5188  001136  EC58  F00D         	call	_ReadUSART	;wreg free
  5189  00113A  6EDF               	movwf	indf2,c
  5190                           
  5191                           ;my_uart.c: 14: uc_ptr->buflen++;
  5192  00113C  EE20 F004          	lfsr	2,4
  5193  001140  504D               	movf	_uc_ptr,w,c
  5194  001142  26D9               	addwf	fsr2l,f,c
  5195  001144  504E               	movf	_uc_ptr+1,w,c
  5196  001146  22DA               	addwfc	fsr2h,f,c
  5197  001148  2ADF               	incf	indf2,f,c
  5198                           
  5199                           ;my_uart.c: 16: if (uc_ptr->buflen == 4) {
  5200  00114A  EE20 F004          	lfsr	2,4
  5201  00114E  504D               	movf	_uc_ptr,w,c
  5202  001150  26D9               	addwf	fsr2l,f,c
  5203  001152  504E               	movf	_uc_ptr+1,w,c
  5204  001154  22DA               	addwfc	fsr2h,f,c
  5205  001156  0E04               	movlw	4
  5206  001158  62DF               	cpfseq	indf2,c
  5207  00115A  D019               	goto	i1l2981
  5208                           
  5209                           ;my_uart.c: 17: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5210  00115C  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5211  00115E  0E1F               	movlw	31
  5212  001160  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5213  001162  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5214  001164  C04E  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5215  001168  C04D  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5216  00116C  EE20 F004          	lfsr	2,4
  5217  001170  504D               	movf	_uc_ptr,w,c
  5218  001172  26D9               	addwf	fsr2l,f,c
  5219  001174  504E               	movf	_uc_ptr+1,w,c
  5220  001176  22DA               	addwfc	fsr2h,f,c
  5221  001178  50DF               	movf	indf2,w,c
  5222  00117A  EC11  F00D         	call	_ToMainLow_sendmsg
  5223                           
  5224                           ;my_uart.c: 18: uc_ptr->buflen = 0;
  5225  00117E  EE20 F004          	lfsr	2,4
  5226  001182  504D               	movf	_uc_ptr,w,c
  5227  001184  26D9               	addwf	fsr2l,f,c
  5228  001186  504E               	movf	_uc_ptr+1,w,c
  5229  001188  22DA               	addwfc	fsr2h,f,c
  5230  00118A  0E00               	movlw	0
  5231  00118C  6EDF               	movwf	indf2,c
  5232  00118E                     i1l2981:
  5233                           
  5234                           ;my_uart.c: 19: }
  5235                           ;my_uart.c: 20: }
  5236                           ;my_uart.c: 21: if (USART_Status.OVERRUN_ERROR == 1) {
  5237  00118E  A650               	btfss	_USART_Status,3,c
  5238  001190  0012               	return	
  5239                           
  5240                           ;my_uart.c: 24: RCSTAbits.CREN = 0;
  5241  001192  98AB               	bcf	4011,4,c	;volatile
  5242                           
  5243                           ;my_uart.c: 25: RCSTAbits.CREN = 1;
  5244  001194  88AB               	bsf	4011,4,c	;volatile
  5245                           
  5246                           ;my_uart.c: 26: ToMainLow_sendmsg(0, 30, (void *) 0);
  5247  001196  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5248  001198  0E1E               	movlw	30
  5249  00119A  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5250  00119C  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5251  00119E  0E00               	movlw	0
  5252  0011A0  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5253  0011A2  0E00               	movlw	0
  5254  0011A4  6E18               	movwf	ToMainLow_sendmsg@data,c
  5255  0011A6  0E00               	movlw	0
  5256  0011A8  EC11  F00D         	call	_ToMainLow_sendmsg
  5257  0011AC  0012               	return	
  5258  0011AE                     __end_of_uart_recv_int_handler:
  5259                           	opt stack 0
  5260                           pclatu	equ	0xFFB
  5261                           pclath	equ	0xFFA
  5262                           tblptru	equ	0xFF8
  5263                           tblptrh	equ	0xFF7
  5264                           tblptrl	equ	0xFF6
  5265                           tablat	equ	0xFF5
  5266                           prodh	equ	0xFF4
  5267                           prodl	equ	0xFF3
  5268                           intcon	equ	0xFF2
  5269                           postinc0	equ	0xFEE
  5270                           fsr0h	equ	0xFEA
  5271                           fsr0l	equ	0xFE9
  5272                           wreg	equ	0xFE8
  5273                           indf1	equ	0xFE7
  5274                           fsr1h	equ	0xFE2
  5275                           fsr1l	equ	0xFE1
  5276                           bsr	equ	0xFE0
  5277                           indf2	equ	0xFDF
  5278                           postinc2	equ	0xFDE
  5279                           postdec2	equ	0xFDD
  5280                           fsr2h	equ	0xFDA
  5281                           fsr2l	equ	0xFD9
  5282                           status	equ	0xFD8
  5283                           
  5284 ;; *************** function _ReadUSART *****************
  5285 ;; Defined at:
  5286 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;		None
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;  data            1    0[COMRAM] unsigned char 
  5291 ;; Return value:  Size  Location     Type
  5292 ;;                  1    wreg      unsigned char 
  5293 ;; Registers used:
  5294 ;;		wreg, status,2, status,0
  5295 ;; Tracked objects:
  5296 ;;		On entry : 0/0
  5297 ;;		On exit  : 0/0
  5298 ;;		Unchanged: 0/0
  5299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5300 ;;      Params:         0       0       0       0       0
  5301 ;;      Locals:         1       0       0       0       0
  5302 ;;      Temps:          0       0       0       0       0
  5303 ;;      Totals:         1       0       0       0       0
  5304 ;;Total ram usage:        1 bytes
  5305 ;; Hardware stack levels used:    1
  5306 ;; Hardware stack levels required when called:    5
  5307 ;; This function calls:
  5308 ;;		Nothing
  5309 ;; This function is called by:
  5310 ;;		_uart_recv_int_handler
  5311 ;; This function uses a non-reentrant model
  5312 ;;
  5313                           
  5314                           	psect	text34
  5315  001AB0                     __ptext34:
  5316                           	opt stack 0
  5317  001AB0                     _ReadUSART:
  5318                           	opt stack 18
  5319                           
  5320                           ;incstack = 0
  5321  001AB0  0EF2               	movlw	242
  5322  001AB2  1650               	andwf	_USART_Status,f,c
  5323  001AB4  ACAB               	btfss	4011,6,c	;volatile
  5324  001AB6  D003               	goto	i1l506
  5325  001AB8  9050               	bcf	_USART_Status,0,c
  5326  001ABA  B0AB               	btfsc	4011,0,c	;volatile
  5327  001ABC  8050               	bsf	_USART_Status,0,c
  5328  001ABE                     i1l506:
  5329  001ABE  B4AB               	btfsc	4011,2,c	;volatile
  5330  001AC0  8450               	bsf	_USART_Status,2,c
  5331  001AC2  B2AB               	btfsc	4011,1,c	;volatile
  5332  001AC4  8650               	bsf	_USART_Status,3,c
  5333  001AC6  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5334  001ACA  5001               	movf	ReadUSART@data,w,c
  5335  001ACC  0012               	return	
  5336  001ACE                     __end_of_ReadUSART:
  5337                           	opt stack 0
  5338                           pclatu	equ	0xFFB
  5339                           pclath	equ	0xFFA
  5340                           tblptru	equ	0xFF8
  5341                           tblptrh	equ	0xFF7
  5342                           tblptrl	equ	0xFF6
  5343                           tablat	equ	0xFF5
  5344                           prodh	equ	0xFF4
  5345                           prodl	equ	0xFF3
  5346                           intcon	equ	0xFF2
  5347                           postinc0	equ	0xFEE
  5348                           fsr0h	equ	0xFEA
  5349                           fsr0l	equ	0xFE9
  5350                           wreg	equ	0xFE8
  5351                           indf1	equ	0xFE7
  5352                           fsr1h	equ	0xFE2
  5353                           fsr1l	equ	0xFE1
  5354                           bsr	equ	0xFE0
  5355                           indf2	equ	0xFDF
  5356                           postinc2	equ	0xFDE
  5357                           postdec2	equ	0xFDD
  5358                           fsr2h	equ	0xFDA
  5359                           fsr2l	equ	0xFD9
  5360                           status	equ	0xFD8
  5361                           
  5362 ;; *************** function _timer1_int_handler *****************
  5363 ;; Defined at:
  5364 ;;		line 34 in file "../src/user_interrupts.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;		None
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;  result          2   27[COMRAM] unsigned int 
  5369 ;; Return value:  Size  Location     Type
  5370 ;;		None               void
  5371 ;; Registers used:
  5372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/0
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5378 ;;      Params:         0       0       0       0       0
  5379 ;;      Locals:         2       0       0       0       0
  5380 ;;      Temps:          1       0       0       0       0
  5381 ;;      Totals:         3       0       0       0       0
  5382 ;;Total ram usage:        3 bytes
  5383 ;; Hardware stack levels used:    1
  5384 ;; Hardware stack levels required when called:    8
  5385 ;; This function calls:
  5386 ;;		_ReadTimer1
  5387 ;;		_ToMainLow_sendmsg
  5388 ;;		_WriteTimer1
  5389 ;; This function is called by:
  5390 ;;		_InterruptHandlerLow
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           	psect	text35
  5395  001638                     __ptext35:
  5396                           	opt stack 0
  5397  001638                     _timer1_int_handler:
  5398                           	opt stack 16
  5399                           
  5400                           ;user_interrupts.c: 35: unsigned int result;
  5401                           ;user_interrupts.c: 38: LATBbits.LATB1 = !LATBbits.LATB1;
  5402                           
  5403                           ;incstack = 0
  5404  001638  B28A               	btfsc	3978,1,c	;volatile
  5405  00163A  D002               	goto	i1u189_20
  5406  00163C  0E01               	movlw	1
  5407  00163E  D001               	goto	i1u189_26
  5408  001640                     i1u189_20:
  5409  001640  0E00               	movlw	0
  5410  001642                     i1u189_26:
  5411  001642  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  5412  001644  461B               	rlncf	??_timer1_int_handler,f,c
  5413  001646  508A               	movf	3978,w,c	;volatile
  5414  001648  181B               	xorwf	??_timer1_int_handler,w,c
  5415  00164A  0BFD               	andlw	-3
  5416  00164C  181B               	xorwf	??_timer1_int_handler,w,c
  5417  00164E  6E8A               	movwf	3978,c	;volatile
  5418                           
  5419                           ;user_interrupts.c: 39: result = ReadTimer1();
  5420  001650  EC96  F00D         	call	_ReadTimer1	;wreg free
  5421  001654  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  5422  001658  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5423                           
  5424                           ;user_interrupts.c: 40: ToMainLow_sendmsg(0, 11, (void *) 0);
  5425  00165C  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  5426  00165E  0E0B               	movlw	11
  5427  001660  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5428  001662  501B               	movf	??_timer1_int_handler& (0+255),w,c
  5429  001664  0E00               	movlw	0
  5430  001666  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5431  001668  0E00               	movlw	0
  5432  00166A  6E18               	movwf	ToMainLow_sendmsg@data,c
  5433  00166C  0E00               	movlw	0
  5434  00166E  EC11  F00D         	call	_ToMainLow_sendmsg
  5435                           
  5436                           ;user_interrupts.c: 43: WriteTimer1(0);
  5437  001672  0E00               	movlw	0
  5438  001674  6E02               	movwf	WriteTimer1@timer1+1,c
  5439  001676  0E00               	movlw	0
  5440  001678  6E01               	movwf	WriteTimer1@timer1,c
  5441  00167A  EC8D  F00D         	call	_WriteTimer1	;wreg free
  5442  00167E  0012               	return	
  5443  001680                     __end_of_timer1_int_handler:
  5444                           	opt stack 0
  5445                           pclatu	equ	0xFFB
  5446                           pclath	equ	0xFFA
  5447                           tblptru	equ	0xFF8
  5448                           tblptrh	equ	0xFF7
  5449                           tblptrl	equ	0xFF6
  5450                           tablat	equ	0xFF5
  5451                           prodh	equ	0xFF4
  5452                           prodl	equ	0xFF3
  5453                           intcon	equ	0xFF2
  5454                           postinc0	equ	0xFEE
  5455                           fsr0h	equ	0xFEA
  5456                           fsr0l	equ	0xFE9
  5457                           wreg	equ	0xFE8
  5458                           indf1	equ	0xFE7
  5459                           fsr1h	equ	0xFE2
  5460                           fsr1l	equ	0xFE1
  5461                           bsr	equ	0xFE0
  5462                           indf2	equ	0xFDF
  5463                           postinc2	equ	0xFDE
  5464                           postdec2	equ	0xFDD
  5465                           fsr2h	equ	0xFDA
  5466                           fsr2l	equ	0xFD9
  5467                           status	equ	0xFD8
  5468                           
  5469 ;; *************** function _WriteTimer1 *****************
  5470 ;; Defined at:
  5471 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;  timer1          2    0[COMRAM] unsigned int 
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;  timer           2    2[COMRAM] struct Timers
  5476 ;; Return value:  Size  Location     Type
  5477 ;;		None               void
  5478 ;; Registers used:
  5479 ;;		None
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5485 ;;      Params:         2       0       0       0       0
  5486 ;;      Locals:         2       0       0       0       0
  5487 ;;      Temps:          0       0       0       0       0
  5488 ;;      Totals:         4       0       0       0       0
  5489 ;;Total ram usage:        4 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:    5
  5492 ;; This function calls:
  5493 ;;		Nothing
  5494 ;; This function is called by:
  5495 ;;		_timer1_int_handler
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           	psect	text36
  5500  001B1A                     __ptext36:
  5501                           	opt stack 0
  5502  001B1A                     _WriteTimer1:
  5503                           	opt stack 18
  5504                           
  5505                           ;incstack = 0
  5506  001B1A  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5507  001B1E  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5508  001B22  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5509  001B26  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5510  001B2A  0012               	return	
  5511  001B2C                     __end_of_WriteTimer1:
  5512                           	opt stack 0
  5513                           pclatu	equ	0xFFB
  5514                           pclath	equ	0xFFA
  5515                           tblptru	equ	0xFF8
  5516                           tblptrh	equ	0xFF7
  5517                           tblptrl	equ	0xFF6
  5518                           tablat	equ	0xFF5
  5519                           prodh	equ	0xFF4
  5520                           prodl	equ	0xFF3
  5521                           intcon	equ	0xFF2
  5522                           postinc0	equ	0xFEE
  5523                           fsr0h	equ	0xFEA
  5524                           fsr0l	equ	0xFE9
  5525                           wreg	equ	0xFE8
  5526                           indf1	equ	0xFE7
  5527                           fsr1h	equ	0xFE2
  5528                           fsr1l	equ	0xFE1
  5529                           bsr	equ	0xFE0
  5530                           indf2	equ	0xFDF
  5531                           postinc2	equ	0xFDE
  5532                           postdec2	equ	0xFDD
  5533                           fsr2h	equ	0xFDA
  5534                           fsr2l	equ	0xFD9
  5535                           status	equ	0xFD8
  5536                           
  5537 ;; *************** function _ToMainLow_sendmsg *****************
  5538 ;; Defined at:
  5539 ;;		line 103 in file "../src/messages.c"
  5540 ;; Parameters:    Size  Location     Type
  5541 ;;  length          1    wreg     unsigned char 
  5542 ;;  msgtype         1   22[COMRAM] unsigned char 
  5543 ;;  data            2   23[COMRAM] PTR void 
  5544 ;;		 -> NULL(0), main@uc(5), 
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;  length          1   25[COMRAM] unsigned char 
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  1    wreg      char 
  5549 ;; Registers used:
  5550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5556 ;;      Params:         3       0       0       0       0
  5557 ;;      Locals:         1       0       0       0       0
  5558 ;;      Temps:          0       0       0       0       0
  5559 ;;      Totals:         4       0       0       0       0
  5560 ;;Total ram usage:        4 bytes
  5561 ;; Hardware stack levels used:    1
  5562 ;; Hardware stack levels required when called:    7
  5563 ;; This function calls:
  5564 ;;		i1_send_msg
  5565 ;; This function is called by:
  5566 ;;		_uart_recv_int_handler
  5567 ;;		_timer1_int_handler
  5568 ;; This function uses a non-reentrant model
  5569 ;;
  5570                           
  5571                           	psect	text37
  5572  001A22                     __ptext37:
  5573                           	opt stack 0
  5574  001A22                     _ToMainLow_sendmsg:
  5575                           	opt stack 16
  5576                           
  5577                           ;incstack = 0
  5578                           ;ToMainLow_sendmsg@length stored from wreg
  5579  001A22  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5580                           
  5581                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5582                           ;	Return value of _ToMainLow_sendmsg is never used
  5583  001A26  0100               	movlb	0	; () banked
  5584  001A28  0E00               	movlw	high _ToMainLow_MQ
  5585  001A2A  6E0C               	movwf	i1send_msg@qptr+1,c
  5586  001A2C  0100               	movlb	0	; () banked
  5587  001A2E  0E80               	movlw	low _ToMainLow_MQ
  5588  001A30  6E0B               	movwf	i1send_msg@qptr,c
  5589  001A32  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5590  001A36  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5591  001A3A  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5592  001A3E  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5593  001A42  EC8C  F007         	call	i1_send_msg	;wreg free
  5594  001A46  0012               	return	
  5595  001A48                     __end_of_ToMainLow_sendmsg:
  5596                           	opt stack 0
  5597                           pclatu	equ	0xFFB
  5598                           pclath	equ	0xFFA
  5599                           tblptru	equ	0xFF8
  5600                           tblptrh	equ	0xFF7
  5601                           tblptrl	equ	0xFF6
  5602                           tablat	equ	0xFF5
  5603                           prodh	equ	0xFF4
  5604                           prodl	equ	0xFF3
  5605                           intcon	equ	0xFF2
  5606                           postinc0	equ	0xFEE
  5607                           fsr0h	equ	0xFEA
  5608                           fsr0l	equ	0xFE9
  5609                           wreg	equ	0xFE8
  5610                           indf1	equ	0xFE7
  5611                           fsr1h	equ	0xFE2
  5612                           fsr1l	equ	0xFE1
  5613                           bsr	equ	0xFE0
  5614                           indf2	equ	0xFDF
  5615                           postinc2	equ	0xFDE
  5616                           postdec2	equ	0xFDD
  5617                           fsr2h	equ	0xFDA
  5618                           fsr2l	equ	0xFD9
  5619                           status	equ	0xFD8
  5620                           
  5621 ;; *************** function i1_send_msg *****************
  5622 ;; Defined at:
  5623 ;;		line 24 in file "../src/messages.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5626 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5627 ;;  length          1   12[COMRAM] unsigned char 
  5628 ;;  msgtype         1   13[COMRAM] unsigned char 
  5629 ;;  data            2   14[COMRAM] PTR void 
  5630 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), 
  5631 ;;		 -> main@ic(28), main@uc(5), 
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5634 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5635 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5636 ;;  send_msg        2   17[COMRAM] unsigned int 
  5637 ;;  send_msg        1   19[COMRAM] unsigned char 
  5638 ;; Return value:  Size  Location     Type
  5639 ;;                  1    wreg      char 
  5640 ;; Registers used:
  5641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5642 ;; Tracked objects:
  5643 ;;		On entry : 0/0
  5644 ;;		On exit  : 0/0
  5645 ;;		Unchanged: 0/0
  5646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5647 ;;      Params:         6       0       0       0       0
  5648 ;;      Locals:         5       0       0       0       0
  5649 ;;      Temps:          1       0       0       0       0
  5650 ;;      Totals:        12       0       0       0       0
  5651 ;;Total ram usage:       12 bytes
  5652 ;; Hardware stack levels used:    1
  5653 ;; Hardware stack levels required when called:    6
  5654 ;; This function calls:
  5655 ;;		i1_memcpy
  5656 ;; This function is called by:
  5657 ;;		_ToMainLow_sendmsg
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           	psect	text38
  5662  000F18                     __ptext38:
  5663                           	opt stack 0
  5664  000F18                     i1_send_msg:
  5665                           	opt stack 16
  5666                           
  5667                           ;messages.c: 25: unsigned char slot;
  5668                           ;messages.c: 27: msg *qmsg;
  5669                           ;messages.c: 28: size_t tlength = length;
  5670                           
  5671                           ;incstack = 0
  5672  000F18  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5673  000F1C  6A13               	clrf	i1send_msg@tlength+1,c
  5674                           
  5675                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5676  000F1E  EE20 F034          	lfsr	2,52
  5677  000F22  500B               	movf	i1send_msg@qptr,w,c
  5678  000F24  26D9               	addwf	fsr2l,f,c
  5679  000F26  500C               	movf	i1send_msg@qptr+1,w,c
  5680  000F28  22DA               	addwfc	fsr2h,f,c
  5681  000F2A  50DF               	movf	indf2,w,c
  5682  000F2C  6E14               	movwf	i1send_msg@slot,c
  5683                           
  5684                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5685  000F2E  5014               	movf	i1send_msg@slot,w,c
  5686  000F30  0D0D               	mullw	13
  5687  000F32  50F3               	movf	prodl,w,c
  5688  000F34  240B               	addwf	i1send_msg@qptr,w,c
  5689  000F36  6E15               	movwf	i1send_msg@qmsg,c
  5690  000F38  50F4               	movf	prodh,w,c
  5691  000F3A  200C               	addwfc	i1send_msg@qptr+1,w,c
  5692  000F3C  6E16               	movwf	i1send_msg@qmsg+1,c
  5693                           
  5694                           ;messages.c: 41: if (qmsg->full != 0) {
  5695  000F3E  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5696  000F42  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5697  000F46  50DF               	movf	indf2,w,c
  5698  000F48  B4D8               	btfsc	status,2,c
  5699  000F4A  D002               	goto	i1l2945
  5700                           
  5701                           ;messages.c: 42: return (-1);
  5702  000F4C  0EFF               	movlw	255
  5703  000F4E  0012               	return	
  5704  000F50                     i1l2945:
  5705                           
  5706                           ;messages.c: 43: }
  5707                           ;messages.c: 46: qmsg->length = length;
  5708  000F50  EE20 F001          	lfsr	2,1
  5709  000F54  5015               	movf	i1send_msg@qmsg,w,c
  5710  000F56  26D9               	addwf	fsr2l,f,c
  5711  000F58  5016               	movf	i1send_msg@qmsg+1,w,c
  5712  000F5A  22DA               	addwfc	fsr2h,f,c
  5713  000F5C  C00D  FFDF         	movff	i1send_msg@length,indf2
  5714                           
  5715                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5716  000F60  EE20 F002          	lfsr	2,2
  5717  000F64  5015               	movf	i1send_msg@qmsg,w,c
  5718  000F66  26D9               	addwf	fsr2l,f,c
  5719  000F68  5016               	movf	i1send_msg@qmsg+1,w,c
  5720  000F6A  22DA               	addwfc	fsr2h,f,c
  5721  000F6C  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5722                           
  5723                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5724  000F70  0E03               	movlw	3
  5725  000F72  2415               	addwf	i1send_msg@qmsg,w,c
  5726  000F74  6E01               	movwf	i1memcpy@d1,c
  5727  000F76  0E00               	movlw	0
  5728  000F78  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5729  000F7A  6E02               	movwf	i1memcpy@d1+1,c
  5730  000F7C  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5731  000F80  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5732  000F84  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5733  000F88  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5734  000F8C  ECE8  F00B         	call	i1_memcpy	;wreg free
  5735                           
  5736                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5737  000F90  EE20 F034          	lfsr	2,52
  5738  000F94  500B               	movf	i1send_msg@qptr,w,c
  5739  000F96  26D9               	addwf	fsr2l,f,c
  5740  000F98  500C               	movf	i1send_msg@qptr+1,w,c
  5741  000F9A  22DA               	addwfc	fsr2h,f,c
  5742  000F9C  EE10 F034          	lfsr	1,52
  5743  000FA0  500B               	movf	i1send_msg@qptr,w,c
  5744  000FA2  26E1               	addwf	fsr1l,f,c
  5745  000FA4  500C               	movf	i1send_msg@qptr+1,w,c
  5746  000FA6  22E2               	addwfc	fsr1h,f,c
  5747  000FA8  50E7               	movf	indf1,w,c
  5748  000FAA  6E11               	movwf	??i1_send_msg& (0+255),c
  5749  000FAC  2811               	incf	??i1_send_msg,w,c
  5750  000FAE  0B03               	andlw	3
  5751  000FB0  6EDF               	movwf	indf2,c
  5752                           
  5753                           ;messages.c: 59: qmsg->full = 1;
  5754  000FB2  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5755  000FB6  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5756  000FBA  0E01               	movlw	1
  5757  000FBC  6EDF               	movwf	indf2,c
  5758                           
  5759                           ;messages.c: 60: return (1);
  5760  000FBE  0E01               	movlw	1
  5761  000FC0  0012               	return	
  5762  000FC2                     __end_ofi1_send_msg:
  5763                           	opt stack 0
  5764                           pclatu	equ	0xFFB
  5765                           pclath	equ	0xFFA
  5766                           tblptru	equ	0xFF8
  5767                           tblptrh	equ	0xFF7
  5768                           tblptrl	equ	0xFF6
  5769                           tablat	equ	0xFF5
  5770                           prodh	equ	0xFF4
  5771                           prodl	equ	0xFF3
  5772                           intcon	equ	0xFF2
  5773                           postinc0	equ	0xFEE
  5774                           fsr0h	equ	0xFEA
  5775                           fsr0l	equ	0xFE9
  5776                           wreg	equ	0xFE8
  5777                           indf1	equ	0xFE7
  5778                           fsr1h	equ	0xFE2
  5779                           fsr1l	equ	0xFE1
  5780                           bsr	equ	0xFE0
  5781                           indf2	equ	0xFDF
  5782                           postinc2	equ	0xFDE
  5783                           postdec2	equ	0xFDD
  5784                           fsr2h	equ	0xFDA
  5785                           fsr2l	equ	0xFD9
  5786                           status	equ	0xFD8
  5787                           
  5788 ;; *************** function i1_memcpy *****************
  5789 ;; Defined at:
  5790 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;  d1              2    0[COMRAM] PTR void 
  5793 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5794 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5795 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  5796 ;;  s1              2    2[COMRAM] PTR const void 
  5797 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5798 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5799 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  5800 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  5801 ;;		 -> main@ic(28), main@uc(5), 
  5802 ;;  n               2    4[COMRAM] unsigned int 
  5803 ;; Auto vars:     Size  Location     Type
  5804 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5805 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5806 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5807 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  5808 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  5809 ;;		 -> main@ic(28), main@uc(5), 
  5810 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5811 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5812 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5813 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  5814 ;; Return value:  Size  Location     Type
  5815 ;;                  2    0[COMRAM] PTR void 
  5816 ;; Registers used:
  5817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5818 ;; Tracked objects:
  5819 ;;		On entry : 0/0
  5820 ;;		On exit  : 0/0
  5821 ;;		Unchanged: 0/0
  5822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5823 ;;      Params:         6       0       0       0       0
  5824 ;;      Locals:         4       0       0       0       0
  5825 ;;      Temps:          0       0       0       0       0
  5826 ;;      Totals:        10       0       0       0       0
  5827 ;;Total ram usage:       10 bytes
  5828 ;; Hardware stack levels used:    1
  5829 ;; Hardware stack levels required when called:    5
  5830 ;; This function calls:
  5831 ;;		Nothing
  5832 ;; This function is called by:
  5833 ;;		i1_send_msg
  5834 ;; This function uses a non-reentrant model
  5835 ;;
  5836                           
  5837                           	psect	text39
  5838  0017D0                     __ptext39:
  5839                           	opt stack 0
  5840  0017D0                     i1_memcpy:
  5841                           	opt stack 16
  5842                           
  5843                           ;incstack = 0
  5844  0017D0  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5845  0017D4  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5846  0017D8  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5847  0017DC  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5848  0017E0  D00E               	goto	i1l2921
  5849  0017E2                     i1l2915:
  5850  0017E2  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5851  0017E6  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5852  0017EA  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5853  0017EE  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5854  0017F2  CFDF FFE7          	movff	indf2,indf1
  5855  0017F6  4A09               	infsnz	i1memcpy@s,f,c
  5856  0017F8  2A0A               	incf	i1memcpy@s+1,f,c
  5857  0017FA  4A07               	infsnz	i1memcpy@d,f,c
  5858  0017FC  2A08               	incf	i1memcpy@d+1,f,c
  5859  0017FE                     i1l2921:
  5860  0017FE  0605               	decf	i1memcpy@n,f,c
  5861  001800  A0D8               	btfss	status,0,c
  5862  001802  0606               	decf	i1memcpy@n+1,f,c
  5863  001804  2805               	incf	i1memcpy@n& (0+255),w,c
  5864  001806  B4D8               	btfsc	status,2,c
  5865  001808  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5866  00180A  B4D8               	btfsc	status,2,c
  5867                           
  5868                           ;	Return value of i1_memcpy is never used
  5869  00180C  0012               	return	
  5870  00180E  D7E9               	goto	i1l2915
  5871  001810                     __end_ofi1_memcpy:
  5872                           	opt stack 0
  5873                           pclatu	equ	0xFFB
  5874                           pclath	equ	0xFFA
  5875                           tblptru	equ	0xFF8
  5876                           tblptrh	equ	0xFF7
  5877                           tblptrl	equ	0xFF6
  5878                           tablat	equ	0xFF5
  5879                           prodh	equ	0xFF4
  5880                           prodl	equ	0xFF3
  5881                           intcon	equ	0xFF2
  5882                           postinc0	equ	0xFEE
  5883                           fsr0h	equ	0xFEA
  5884                           fsr0l	equ	0xFE9
  5885                           wreg	equ	0xFE8
  5886                           indf1	equ	0xFE7
  5887                           fsr1h	equ	0xFE2
  5888                           fsr1l	equ	0xFE1
  5889                           bsr	equ	0xFE0
  5890                           indf2	equ	0xFDF
  5891                           postinc2	equ	0xFDE
  5892                           postdec2	equ	0xFDD
  5893                           fsr2h	equ	0xFDA
  5894                           fsr2l	equ	0xFD9
  5895                           status	equ	0xFD8
  5896                           
  5897 ;; *************** function _ReadTimer1 *****************
  5898 ;; Defined at:
  5899 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  5900 ;; Parameters:    Size  Location     Type
  5901 ;;		None
  5902 ;; Auto vars:     Size  Location     Type
  5903 ;;  timer           2    2[COMRAM] struct Timers
  5904 ;; Return value:  Size  Location     Type
  5905 ;;                  2    0[COMRAM] unsigned int 
  5906 ;; Registers used:
  5907 ;;		None
  5908 ;; Tracked objects:
  5909 ;;		On entry : 0/0
  5910 ;;		On exit  : 0/0
  5911 ;;		Unchanged: 0/0
  5912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5913 ;;      Params:         2       0       0       0       0
  5914 ;;      Locals:         2       0       0       0       0
  5915 ;;      Temps:          0       0       0       0       0
  5916 ;;      Totals:         4       0       0       0       0
  5917 ;;Total ram usage:        4 bytes
  5918 ;; Hardware stack levels used:    1
  5919 ;; Hardware stack levels required when called:    5
  5920 ;; This function calls:
  5921 ;;		Nothing
  5922 ;; This function is called by:
  5923 ;;		_timer1_int_handler
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926                           
  5927                           	psect	text40
  5928  001B2C                     __ptext40:
  5929                           	opt stack 0
  5930  001B2C                     _ReadTimer1:
  5931                           	opt stack 18
  5932                           
  5933                           ;incstack = 0
  5934  001B2C  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  5935  001B30  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  5936  001B34  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  5937  001B38  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  5938  001B3C  0012               	return	
  5939  001B3E                     __end_of_ReadTimer1:
  5940                           	opt stack 0
  5941                           pclatu	equ	0xFFB
  5942                           pclath	equ	0xFFA
  5943                           tblptru	equ	0xFF8
  5944                           tblptrh	equ	0xFF7
  5945                           tblptrl	equ	0xFF6
  5946                           tablat	equ	0xFF5
  5947                           prodh	equ	0xFF4
  5948                           prodl	equ	0xFF3
  5949                           intcon	equ	0xFF2
  5950                           postinc0	equ	0xFEE
  5951                           fsr0h	equ	0xFEA
  5952                           fsr0l	equ	0xFE9
  5953                           wreg	equ	0xFE8
  5954                           indf1	equ	0xFE7
  5955                           fsr1h	equ	0xFE2
  5956                           fsr1l	equ	0xFE1
  5957                           bsr	equ	0xFE0
  5958                           indf2	equ	0xFDF
  5959                           postinc2	equ	0xFDE
  5960                           postdec2	equ	0xFDD
  5961                           fsr2h	equ	0xFDA
  5962                           fsr2l	equ	0xFD9
  5963                           status	equ	0xFD8
  5964                           
  5965 ;; *************** function _InterruptHandlerHigh *****************
  5966 ;; Defined at:
  5967 ;;		line 92 in file "../src/interrupts.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;		None
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;  pureADCValue    2   25[BANK0 ] int 
  5972 ;; Return value:  Size  Location     Type
  5973 ;;		None               void
  5974 ;; Registers used:
  5975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5981 ;;      Params:         0       0       0       0       0
  5982 ;;      Locals:         0       2       0       0       0
  5983 ;;      Temps:          0      16       0       0       0
  5984 ;;      Totals:         0      18       0       0       0
  5985 ;;Total ram usage:       18 bytes
  5986 ;; Hardware stack levels used:    1
  5987 ;; Hardware stack levels required when called:    4
  5988 ;; This function calls:
  5989 ;;		_ReadADC
  5990 ;;		_SleepIfOkay
  5991 ;;		_i2c_int_handler
  5992 ;;		_timer0_int_handler
  5993 ;; This function is called by:
  5994 ;;		Interrupt level 2
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           	psect	intcode
  5999  000008                     __pintcode:
  6000                           	opt stack 0
  6001  000008                     _InterruptHandlerHigh:
  6002                           	opt stack 16
  6003                           
  6004                           ;incstack = 0
  6005  000008  CFFA F0C1          	movff	pclath,??_InterruptHandlerHigh+2
  6006  00000C  CFFB F0C2          	movff	pclatu,??_InterruptHandlerHigh+3
  6007  000010  EF30  F007         	goto	int_func
  6008                           pclatu	equ	0xFFB
  6009                           pclath	equ	0xFFA
  6010                           tblptru	equ	0xFF8
  6011                           tblptrh	equ	0xFF7
  6012                           tblptrl	equ	0xFF6
  6013                           tablat	equ	0xFF5
  6014                           prodh	equ	0xFF4
  6015                           prodl	equ	0xFF3
  6016                           intcon	equ	0xFF2
  6017                           postinc0	equ	0xFEE
  6018                           fsr0h	equ	0xFEA
  6019                           fsr0l	equ	0xFE9
  6020                           wreg	equ	0xFE8
  6021                           indf1	equ	0xFE7
  6022                           fsr1h	equ	0xFE2
  6023                           fsr1l	equ	0xFE1
  6024                           bsr	equ	0xFE0
  6025                           indf2	equ	0xFDF
  6026                           postinc2	equ	0xFDE
  6027                           postdec2	equ	0xFDD
  6028                           fsr2h	equ	0xFDA
  6029                           fsr2l	equ	0xFD9
  6030                           status	equ	0xFD8
  6031                           
  6032                           	psect	intcode_body
  6033  000E60                     __pintcode_body:
  6034                           	opt stack 16
  6035  000E60                     int_func:
  6036                           	opt stack 16
  6037  000E60  CFE9 F0C3          	movff	fsr0l,??_InterruptHandlerHigh+4
  6038  000E64  CFEA F0C4          	movff	fsr0h,??_InterruptHandlerHigh+5
  6039  000E68  CFE1 F0C5          	movff	fsr1l,??_InterruptHandlerHigh+6
  6040  000E6C  CFE2 F0C6          	movff	fsr1h,??_InterruptHandlerHigh+7
  6041  000E70  CFD9 F0C7          	movff	fsr2l,??_InterruptHandlerHigh+8
  6042  000E74  CFDA F0C8          	movff	fsr2h,??_InterruptHandlerHigh+9
  6043  000E78  CFF3 F0C9          	movff	prodl,??_InterruptHandlerHigh+10
  6044  000E7C  CFF4 F0CA          	movff	prodh,??_InterruptHandlerHigh+11
  6045  000E80  CFF6 F0CB          	movff	tblptrl,??_InterruptHandlerHigh+12
  6046  000E84  CFF7 F0CC          	movff	tblptrh,??_InterruptHandlerHigh+13
  6047  000E88  CFF8 F0CD          	movff	tblptru,??_InterruptHandlerHigh+14
  6048  000E8C  CFF5 F0CE          	movff	tablat,??_InterruptHandlerHigh+15
  6049                           
  6050                           ;interrupts.c: 97: if (PIR1bits.SSPIF) {
  6051  000E90  A69E               	btfss	3998,3,c	;volatile
  6052  000E92  D003               	goto	i2l3009
  6053                           
  6054                           ;interrupts.c: 99: PIR1bits.SSPIF = 0;
  6055  000E94  969E               	bcf	3998,3,c	;volatile
  6056                           
  6057                           ;interrupts.c: 101: i2c_int_handler();
  6058  000E96  EC5F  F000         	call	_i2c_int_handler	;wreg free
  6059  000E9A                     i2l3009:
  6060                           
  6061                           ;interrupts.c: 102: }
  6062                           ;interrupts.c: 105: if (INTCONbits.TMR0IF) {
  6063  000E9A  A4F2               	btfss	intcon,2,c	;volatile
  6064  000E9C  D003               	goto	i2l3015
  6065                           
  6066                           ;interrupts.c: 106: INTCONbits.TMR0IF = 0;
  6067  000E9E  94F2               	bcf	intcon,2,c	;volatile
  6068                           
  6069                           ;interrupts.c: 108: timer0_int_handler();
  6070  000EA0  ECE4  F009         	call	_timer0_int_handler	;wreg free
  6071  000EA4                     i2l3015:
  6072                           
  6073                           ;interrupts.c: 109: }
  6074                           ;interrupts.c: 114: if(PIR1bits.ADIF == 1)
  6075  000EA4  AC9E               	btfss	3998,6,c	;volatile
  6076  000EA6  D019               	goto	i2l3023
  6077                           
  6078                           ;interrupts.c: 115: {
  6079                           ;interrupts.c: 118: PIR1bits.ADIF = 0;
  6080  000EA8  9C9E               	bcf	3998,6,c	;volatile
  6081                           
  6082                           ;interrupts.c: 119: int pureADCValue = ReadADC();
  6083  000EAA  ECAE  F00D         	call	_ReadADC	;wreg free
  6084  000EAE  C02F  F0CF         	movff	?_ReadADC,InterruptHandlerHigh@pureADCValue
  6085  000EB2  C030  F0D0         	movff	?_ReadADC+1,InterruptHandlerHigh@pureADCValue+1
  6086                           
  6087                           ;interrupts.c: 120: ADCValue = pureADCValue >> 2;
  6088  000EB6  0100               	movlb	0	; () banked
  6089  000EB8  C0CF  F0BF         	movff	InterruptHandlerHigh@pureADCValue,??_InterruptHandlerHigh
  6090  000EBC  0100               	movlb	0	; () banked
  6091  000EBE  C0D0  F0C0         	movff	InterruptHandlerHigh@pureADCValue+1,??_InterruptHandlerHigh+1
  6092  000EC2  0100               	movlb	0	; () banked
  6093  000EC4  35C0               	rlcf	(??_InterruptHandlerHigh+1)& (0+255),w,b
  6094  000EC6  33C0               	rrcf	(??_InterruptHandlerHigh+1)& (0+255),f,b
  6095  000EC8  33BF               	rrcf	??_InterruptHandlerHigh& (0+255),f,b
  6096  000ECA  0100               	movlb	0	; () banked
  6097  000ECC  35C0               	rlcf	(??_InterruptHandlerHigh+1)& (0+255),w,b
  6098  000ECE  33C0               	rrcf	(??_InterruptHandlerHigh+1)& (0+255),f,b
  6099  000ED0  33BF               	rrcf	??_InterruptHandlerHigh& (0+255),f,b
  6100  000ED2  C0BF  F0E3         	movff	??_InterruptHandlerHigh,_ADCValue
  6101  000ED6  C0C0  F0E4         	movff	??_InterruptHandlerHigh+1,_ADCValue+1
  6102  000EDA                     i2l3023:
  6103                           
  6104                           ;interrupts.c: 123: }
  6105                           ;interrupts.c: 129: SleepIfOkay();
  6106  000EDA  ECF5  F00A         	call	_SleepIfOkay	;wreg free
  6107  000EDE  C0CE  FFF5         	movff	??_InterruptHandlerHigh+15,tablat
  6108  000EE2  C0CD  FFF8         	movff	??_InterruptHandlerHigh+14,tblptru
  6109  000EE6  C0CC  FFF7         	movff	??_InterruptHandlerHigh+13,tblptrh
  6110  000EEA  C0CB  FFF6         	movff	??_InterruptHandlerHigh+12,tblptrl
  6111  000EEE  C0CA  FFF4         	movff	??_InterruptHandlerHigh+11,prodh
  6112  000EF2  C0C9  FFF3         	movff	??_InterruptHandlerHigh+10,prodl
  6113  000EF6  C0C8  FFDA         	movff	??_InterruptHandlerHigh+9,fsr2h
  6114  000EFA  C0C7  FFD9         	movff	??_InterruptHandlerHigh+8,fsr2l
  6115  000EFE  C0C6  FFE2         	movff	??_InterruptHandlerHigh+7,fsr1h
  6116  000F02  C0C5  FFE1         	movff	??_InterruptHandlerHigh+6,fsr1l
  6117  000F06  C0C4  FFEA         	movff	??_InterruptHandlerHigh+5,fsr0h
  6118  000F0A  C0C3  FFE9         	movff	??_InterruptHandlerHigh+4,fsr0l
  6119  000F0E  C0C2  FFFB         	movff	??_InterruptHandlerHigh+3,pclatu
  6120  000F12  C0C1  FFFA         	movff	??_InterruptHandlerHigh+2,pclath
  6121  000F16  0011               	retfie		f
  6122  000F18                     __end_of_InterruptHandlerHigh:
  6123                           	opt stack 0
  6124                           pclatu	equ	0xFFB
  6125                           pclath	equ	0xFFA
  6126                           tblptru	equ	0xFF8
  6127                           tblptrh	equ	0xFF7
  6128                           tblptrl	equ	0xFF6
  6129                           tablat	equ	0xFF5
  6130                           prodh	equ	0xFF4
  6131                           prodl	equ	0xFF3
  6132                           intcon	equ	0xFF2
  6133                           postinc0	equ	0xFEE
  6134                           fsr0h	equ	0xFEA
  6135                           fsr0l	equ	0xFE9
  6136                           wreg	equ	0xFE8
  6137                           indf1	equ	0xFE7
  6138                           fsr1h	equ	0xFE2
  6139                           fsr1l	equ	0xFE1
  6140                           bsr	equ	0xFE0
  6141                           indf2	equ	0xFDF
  6142                           postinc2	equ	0xFDE
  6143                           postdec2	equ	0xFDD
  6144                           fsr2h	equ	0xFDA
  6145                           fsr2l	equ	0xFD9
  6146                           status	equ	0xFD8
  6147                           
  6148 ;; *************** function _timer0_int_handler *****************
  6149 ;; Defined at:
  6150 ;;		line 16 in file "../src/user_interrupts.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;		None
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;  val             2    4[BANK0 ] unsigned int 
  6155 ;;  msgtype         2    2[BANK0 ] int 
  6156 ;;  length          2    0[BANK0 ] int 
  6157 ;; Return value:  Size  Location     Type
  6158 ;;		None               void
  6159 ;; Registers used:
  6160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6161 ;; Tracked objects:
  6162 ;;		On entry : 0/0
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6166 ;;      Params:         0       0       0       0       0
  6167 ;;      Locals:         0       6       0       0       0
  6168 ;;      Temps:          1       0       0       0       0
  6169 ;;      Totals:         1       6       0       0       0
  6170 ;;Total ram usage:        7 bytes
  6171 ;; Hardware stack levels used:    1
  6172 ;; Hardware stack levels required when called:    3
  6173 ;; This function calls:
  6174 ;;		_FromMainHigh_recvmsg
  6175 ;;		_ToMainHigh_sendmsg
  6176 ;;		_WriteTimer0
  6177 ;; This function is called by:
  6178 ;;		_InterruptHandlerHigh
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           	psect	text42
  6183  0013C8                     __ptext42:
  6184                           	opt stack 0
  6185  0013C8                     _timer0_int_handler:
  6186                           	opt stack 16
  6187                           
  6188                           ;user_interrupts.c: 17: unsigned int val;
  6189                           ;user_interrupts.c: 18: int length, msgtype;
  6190                           ;user_interrupts.c: 21: LATBbits.LATB0 = !LATBbits.LATB0;
  6191                           
  6192                           ;incstack = 0
  6193  0013C8  B08A               	btfsc	3978,0,c	;volatile
  6194  0013CA  D002               	goto	i2u224_40
  6195  0013CC  0E01               	movlw	1
  6196  0013CE  D001               	goto	i2u224_46
  6197  0013D0                     i2u224_40:
  6198  0013D0  0E00               	movlw	0
  6199  0013D2                     i2u224_46:
  6200  0013D2  6E4C               	movwf	??_timer0_int_handler& (0+255),c
  6201  0013D4  508A               	movf	3978,w,c	;volatile
  6202  0013D6  184C               	xorwf	??_timer0_int_handler,w,c
  6203  0013D8  0BFE               	andlw	-2
  6204  0013DA  184C               	xorwf	??_timer0_int_handler,w,c
  6205  0013DC  6E8A               	movwf	3978,c	;volatile
  6206                           
  6207                           ;user_interrupts.c: 23: WriteTimer0(0);
  6208  0013DE  0E00               	movlw	0
  6209  0013E0  6E30               	movwf	WriteTimer0@timer0+1,c
  6210  0013E2  0E00               	movlw	0
  6211  0013E4  6E2F               	movwf	WriteTimer0@timer0,c
  6212  0013E6  EC9F  F00D         	call	_WriteTimer0	;wreg free
  6213                           
  6214                           ;user_interrupts.c: 25: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6215  0013EA  0100               	movlb	0	; () banked
  6216  0013EC  0E00               	movlw	high timer0_int_handler@msgtype
  6217  0013EE  6E48               	movwf	FromMainHigh_recvmsg@msgtype+1,c
  6218  0013F0  0100               	movlb	0	; () banked
  6219  0013F2  0EB8               	movlw	low timer0_int_handler@msgtype
  6220  0013F4  6E47               	movwf	FromMainHigh_recvmsg@msgtype,c
  6221  0013F6  0100               	movlb	0	; () banked
  6222  0013F8  0E00               	movlw	high timer0_int_handler@val
  6223  0013FA  6E4A               	movwf	FromMainHigh_recvmsg@data+1,c
  6224  0013FC  0100               	movlb	0	; () banked
  6225  0013FE  0EBA               	movlw	low timer0_int_handler@val
  6226  001400  6E49               	movwf	FromMainHigh_recvmsg@data,c
  6227  001402  0E02               	movlw	2
  6228  001404  ECE8  F00C         	call	_FromMainHigh_recvmsg
  6229  001408  0100               	movlb	0	; () banked
  6230  00140A  0100               	movlb	0	; () banked
  6231  00140C  6FB6               	movwf	timer0_int_handler@length& (0+255),b
  6232  00140E  0100               	movlb	0	; () banked
  6233  001410  6BB7               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6234  001412  0100               	movlb	0	; () banked
  6235  001414  BFB6               	btfsc	timer0_int_handler@length& (0+255),7,b
  6236  001416  07B7               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6237                           
  6238                           ; BSR set to: 0
  6239                           ;user_interrupts.c: 26: if (length == sizeof (val)) {
  6240  001418  0100               	movlb	0	; () banked
  6241  00141A  0100               	movlb	0	; () banked
  6242  00141C  51B6               	movf	timer0_int_handler@length& (0+255),w,b
  6243  00141E  0A02               	xorlw	2
  6244  001420  11B7               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6245  001422  A4D8               	btfss	status,2,c
  6246  001424  0012               	return	
  6247                           
  6248                           ; BSR set to: 0
  6249                           ;user_interrupts.c: 27: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6250  001426  6E4C               	movwf	??_timer0_int_handler& (0+255),c
  6251  001428  0E0A               	movlw	10
  6252  00142A  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  6253  00142C  504C               	movf	??_timer0_int_handler& (0+255),w,c
  6254  00142E  0100               	movlb	0	; () banked
  6255  001430  0E00               	movlw	high timer0_int_handler@val
  6256  001432  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  6257  001434  0100               	movlb	0	; () banked
  6258  001436  0EBA               	movlw	low timer0_int_handler@val
  6259  001438  6E46               	movwf	ToMainHigh_sendmsg@data,c
  6260  00143A  0E02               	movlw	2
  6261  00143C  EC24  F00D         	call	_ToMainHigh_sendmsg
  6262  001440  0012               	return	
  6263  001442                     __end_of_timer0_int_handler:
  6264                           	opt stack 0
  6265                           pclatu	equ	0xFFB
  6266                           pclath	equ	0xFFA
  6267                           tblptru	equ	0xFF8
  6268                           tblptrh	equ	0xFF7
  6269                           tblptrl	equ	0xFF6
  6270                           tablat	equ	0xFF5
  6271                           prodh	equ	0xFF4
  6272                           prodl	equ	0xFF3
  6273                           intcon	equ	0xFF2
  6274                           postinc0	equ	0xFEE
  6275                           fsr0h	equ	0xFEA
  6276                           fsr0l	equ	0xFE9
  6277                           wreg	equ	0xFE8
  6278                           indf1	equ	0xFE7
  6279                           fsr1h	equ	0xFE2
  6280                           fsr1l	equ	0xFE1
  6281                           bsr	equ	0xFE0
  6282                           indf2	equ	0xFDF
  6283                           postinc2	equ	0xFDE
  6284                           postdec2	equ	0xFDD
  6285                           fsr2h	equ	0xFDA
  6286                           fsr2l	equ	0xFD9
  6287                           status	equ	0xFD8
  6288                           
  6289 ;; *************** function _WriteTimer0 *****************
  6290 ;; Defined at:
  6291 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;  timer0          2   46[COMRAM] unsigned int 
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;  timer           2   48[COMRAM] struct Timers
  6296 ;; Return value:  Size  Location     Type
  6297 ;;		None               void
  6298 ;; Registers used:
  6299 ;;		None
  6300 ;; Tracked objects:
  6301 ;;		On entry : 0/0
  6302 ;;		On exit  : 0/0
  6303 ;;		Unchanged: 0/0
  6304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6305 ;;      Params:         2       0       0       0       0
  6306 ;;      Locals:         2       0       0       0       0
  6307 ;;      Temps:          0       0       0       0       0
  6308 ;;      Totals:         4       0       0       0       0
  6309 ;;Total ram usage:        4 bytes
  6310 ;; Hardware stack levels used:    1
  6311 ;; This function calls:
  6312 ;;		Nothing
  6313 ;; This function is called by:
  6314 ;;		_timer0_int_handler
  6315 ;; This function uses a non-reentrant model
  6316 ;;
  6317                           
  6318                           	psect	text43
  6319  001B3E                     __ptext43:
  6320                           	opt stack 0
  6321  001B3E                     _WriteTimer0:
  6322                           	opt stack 18
  6323                           
  6324                           ;incstack = 0
  6325  001B3E  C02F  F031         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6326  001B42  C030  F032         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6327  001B46  C032  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6328  001B4A  C031  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6329  001B4E  0012               	return	
  6330  001B50                     __end_of_WriteTimer0:
  6331                           	opt stack 0
  6332                           pclatu	equ	0xFFB
  6333                           pclath	equ	0xFFA
  6334                           tblptru	equ	0xFF8
  6335                           tblptrh	equ	0xFF7
  6336                           tblptrl	equ	0xFF6
  6337                           tablat	equ	0xFF5
  6338                           prodh	equ	0xFF4
  6339                           prodl	equ	0xFF3
  6340                           intcon	equ	0xFF2
  6341                           postinc0	equ	0xFEE
  6342                           fsr0h	equ	0xFEA
  6343                           fsr0l	equ	0xFE9
  6344                           wreg	equ	0xFE8
  6345                           indf1	equ	0xFE7
  6346                           fsr1h	equ	0xFE2
  6347                           fsr1l	equ	0xFE1
  6348                           bsr	equ	0xFE0
  6349                           indf2	equ	0xFDF
  6350                           postinc2	equ	0xFDE
  6351                           postdec2	equ	0xFDD
  6352                           fsr2h	equ	0xFDA
  6353                           fsr2l	equ	0xFD9
  6354                           status	equ	0xFD8
  6355                           
  6356 ;; *************** function _FromMainHigh_recvmsg *****************
  6357 ;; Defined at:
  6358 ;;		line 183 in file "../src/messages.c"
  6359 ;; Parameters:    Size  Location     Type
  6360 ;;  maxlength       1    wreg     unsigned char 
  6361 ;;  msgtype         2   70[COMRAM] PTR unsigned char 
  6362 ;;		 -> timer0_int_handler@msgtype(2), 
  6363 ;;  data            2   72[COMRAM] PTR void 
  6364 ;;		 -> timer0_int_handler@val(2), 
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;  maxlength       1   74[COMRAM] unsigned char 
  6367 ;; Return value:  Size  Location     Type
  6368 ;;                  1    wreg      char 
  6369 ;; Registers used:
  6370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6371 ;; Tracked objects:
  6372 ;;		On entry : 0/0
  6373 ;;		On exit  : 0/0
  6374 ;;		Unchanged: 0/0
  6375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6376 ;;      Params:         4       0       0       0       0
  6377 ;;      Locals:         1       0       0       0       0
  6378 ;;      Temps:          0       0       0       0       0
  6379 ;;      Totals:         5       0       0       0       0
  6380 ;;Total ram usage:        5 bytes
  6381 ;; Hardware stack levels used:    1
  6382 ;; Hardware stack levels required when called:    2
  6383 ;; This function calls:
  6384 ;;		i2_recv_msg
  6385 ;; This function is called by:
  6386 ;;		_timer0_int_handler
  6387 ;; This function uses a non-reentrant model
  6388 ;;
  6389                           
  6390                           	psect	text44
  6391  0019D0                     __ptext44:
  6392                           	opt stack 0
  6393  0019D0                     _FromMainHigh_recvmsg:
  6394                           	opt stack 16
  6395                           
  6396                           ;incstack = 0
  6397                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  6398  0019D0  CFE8 F04B          	movff	wreg,FromMainHigh_recvmsg@maxlength
  6399                           
  6400                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  6401  0019D4  0101               	movlb	1	; () banked
  6402  0019D6  0E01               	movlw	high _FromMainHigh_MQ
  6403  0019D8  6E3A               	movwf	i2recv_msg@qptr+1,c
  6404  0019DA  0101               	movlb	1	; () banked
  6405  0019DC  0E00               	movlw	low _FromMainHigh_MQ
  6406  0019DE  6E39               	movwf	i2recv_msg@qptr,c
  6407  0019E0  C04B  F03B         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  6408  0019E4  C048  F03D         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  6409  0019E8  C047  F03C         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  6410  0019EC  C04A  F03F         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  6411  0019F0  C049  F03E         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  6412  0019F4  EC63  F006         	call	i2_recv_msg	;wreg free
  6413  0019F8  0012               	return	
  6414  0019FA                     __end_of_FromMainHigh_recvmsg:
  6415                           	opt stack 0
  6416                           pclatu	equ	0xFFB
  6417                           pclath	equ	0xFFA
  6418                           tblptru	equ	0xFF8
  6419                           tblptrh	equ	0xFF7
  6420                           tblptrl	equ	0xFF6
  6421                           tablat	equ	0xFF5
  6422                           prodh	equ	0xFF4
  6423                           prodl	equ	0xFF3
  6424                           intcon	equ	0xFF2
  6425                           postinc0	equ	0xFEE
  6426                           fsr0h	equ	0xFEA
  6427                           fsr0l	equ	0xFE9
  6428                           wreg	equ	0xFE8
  6429                           indf1	equ	0xFE7
  6430                           fsr1h	equ	0xFE2
  6431                           fsr1l	equ	0xFE1
  6432                           bsr	equ	0xFE0
  6433                           indf2	equ	0xFDF
  6434                           postinc2	equ	0xFDE
  6435                           postdec2	equ	0xFDD
  6436                           fsr2h	equ	0xFDA
  6437                           fsr2l	equ	0xFD9
  6438                           status	equ	0xFD8
  6439                           
  6440 ;; *************** function i2_recv_msg *****************
  6441 ;; Defined at:
  6442 ;;		line 63 in file "../src/messages.c"
  6443 ;; Parameters:    Size  Location     Type
  6444 ;;  qptr            2   56[COMRAM] PTR struct __msg_queue
  6445 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6446 ;;  maxlength       1   58[COMRAM] unsigned char 
  6447 ;;  msgtype         2   59[COMRAM] PTR unsigned char 
  6448 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  6449 ;;  data            2   61[COMRAM] PTR void 
  6450 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;  recv_msg        2   68[COMRAM] PTR struct __msg
  6453 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6454 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6455 ;;  recv_msg        2   66[COMRAM] unsigned int 
  6456 ;;  recv_msg        1   65[COMRAM] unsigned char 
  6457 ;; Return value:  Size  Location     Type
  6458 ;;                  1    wreg      char 
  6459 ;; Registers used:
  6460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6461 ;; Tracked objects:
  6462 ;;		On entry : 0/0
  6463 ;;		On exit  : 0/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6466 ;;      Params:         7       0       0       0       0
  6467 ;;      Locals:         5       0       0       0       0
  6468 ;;      Temps:          2       0       0       0       0
  6469 ;;      Totals:        14       0       0       0       0
  6470 ;;Total ram usage:       14 bytes
  6471 ;; Hardware stack levels used:    1
  6472 ;; Hardware stack levels required when called:    1
  6473 ;; This function calls:
  6474 ;;		i2_memcpy
  6475 ;; This function is called by:
  6476 ;;		_FromMainHigh_recvmsg
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           
  6480                           	psect	text45
  6481  000CC6                     __ptext45:
  6482                           	opt stack 0
  6483  000CC6                     i2_recv_msg:
  6484                           	opt stack 16
  6485                           
  6486                           ;messages.c: 64: unsigned char slot;
  6487                           ;messages.c: 68: msg *qmsg;
  6488                           ;messages.c: 69: size_t tlength;
  6489                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6490                           
  6491                           ;incstack = 0
  6492  000CC6  EE20 F035          	lfsr	2,53
  6493  000CCA  5039               	movf	i2recv_msg@qptr,w,c
  6494  000CCC  26D9               	addwf	fsr2l,f,c
  6495  000CCE  503A               	movf	i2recv_msg@qptr+1,w,c
  6496  000CD0  22DA               	addwfc	fsr2h,f,c
  6497  000CD2  50DF               	movf	indf2,w,c
  6498  000CD4  6E42               	movwf	i2recv_msg@slot,c
  6499                           
  6500                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6501  000CD6  5042               	movf	i2recv_msg@slot,w,c
  6502  000CD8  0D0D               	mullw	13
  6503  000CDA  50F3               	movf	prodl,w,c
  6504  000CDC  2439               	addwf	i2recv_msg@qptr,w,c
  6505  000CDE  6E45               	movwf	i2recv_msg@qmsg,c
  6506  000CE0  50F4               	movf	prodh,w,c
  6507  000CE2  203A               	addwfc	i2recv_msg@qptr+1,w,c
  6508  000CE4  6E46               	movwf	i2recv_msg@qmsg+1,c
  6509                           
  6510                           ;messages.c: 74: if (qmsg->full == 1) {
  6511  000CE6  0E01               	movlw	1
  6512  000CE8  C045  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6513  000CEC  C046  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6514  000CF0  62DF               	cpfseq	indf2,c
  6515  000CF2  D050               	goto	i2l3499
  6516                           
  6517                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6518  000CF4  EE20 F001          	lfsr	2,1
  6519  000CF8  5045               	movf	i2recv_msg@qmsg,w,c
  6520  000CFA  26D9               	addwf	fsr2l,f,c
  6521  000CFC  5046               	movf	i2recv_msg@qmsg+1,w,c
  6522  000CFE  22DA               	addwfc	fsr2h,f,c
  6523  000D00  50DF               	movf	indf2,w,c
  6524  000D02  5C3B               	subwf	i2recv_msg@maxlength,w,c
  6525  000D04  B0D8               	btfsc	status,0,c
  6526  000D06  D002               	goto	i2l3483
  6527                           
  6528                           ;messages.c: 77: return (-3);
  6529  000D08  0EFD               	movlw	253
  6530  000D0A  0012               	return	
  6531  000D0C                     i2l3483:
  6532                           
  6533                           ;messages.c: 78: }
  6534                           ;messages.c: 80: tlength = qmsg->length;
  6535  000D0C  EE20 F001          	lfsr	2,1
  6536  000D10  5045               	movf	i2recv_msg@qmsg,w,c
  6537  000D12  26D9               	addwf	fsr2l,f,c
  6538  000D14  5046               	movf	i2recv_msg@qmsg+1,w,c
  6539  000D16  22DA               	addwfc	fsr2h,f,c
  6540  000D18  50DF               	movf	indf2,w,c
  6541  000D1A  6E40               	movwf	??i2_recv_msg& (0+255),c
  6542  000D1C  5040               	movf	??i2_recv_msg,w,c
  6543  000D1E  6E43               	movwf	i2recv_msg@tlength,c
  6544  000D20  6A44               	clrf	i2recv_msg@tlength+1,c
  6545                           
  6546                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6547  000D22  C03F  F030         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  6548  000D26  C03E  F02F         	movff	i2recv_msg@data,i2memcpy@d1
  6549  000D2A  0E03               	movlw	3
  6550  000D2C  2445               	addwf	i2recv_msg@qmsg,w,c
  6551  000D2E  6E40               	movwf	??i2_recv_msg& (0+255),c
  6552  000D30  0E00               	movlw	0
  6553  000D32  2046               	addwfc	i2recv_msg@qmsg+1,w,c
  6554  000D34  6E41               	movwf	(??i2_recv_msg+1)& (0+255),c
  6555  000D36  C040  F031         	movff	??i2_recv_msg,i2memcpy@s1
  6556  000D3A  C041  F032         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  6557  000D3E  C043  F033         	movff	i2recv_msg@tlength,i2memcpy@n
  6558  000D42  C044  F034         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  6559  000D46  EC08  F00C         	call	i2_memcpy	;wreg free
  6560                           
  6561                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6562  000D4A  EE20 F035          	lfsr	2,53
  6563  000D4E  5039               	movf	i2recv_msg@qptr,w,c
  6564  000D50  26D9               	addwf	fsr2l,f,c
  6565  000D52  503A               	movf	i2recv_msg@qptr+1,w,c
  6566  000D54  22DA               	addwfc	fsr2h,f,c
  6567  000D56  EE10 F035          	lfsr	1,53
  6568  000D5A  5039               	movf	i2recv_msg@qptr,w,c
  6569  000D5C  26E1               	addwf	fsr1l,f,c
  6570  000D5E  503A               	movf	i2recv_msg@qptr+1,w,c
  6571  000D60  22E2               	addwfc	fsr1h,f,c
  6572  000D62  50E7               	movf	indf1,w,c
  6573  000D64  6E40               	movwf	??i2_recv_msg& (0+255),c
  6574  000D66  2840               	incf	??i2_recv_msg,w,c
  6575  000D68  0B03               	andlw	3
  6576  000D6A  6EDF               	movwf	indf2,c
  6577                           
  6578                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6579  000D6C  EE20 F002          	lfsr	2,2
  6580  000D70  5045               	movf	i2recv_msg@qmsg,w,c
  6581  000D72  26D9               	addwf	fsr2l,f,c
  6582  000D74  5046               	movf	i2recv_msg@qmsg+1,w,c
  6583  000D76  22DA               	addwfc	fsr2h,f,c
  6584  000D78  C03C  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  6585  000D7C  C03D  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  6586  000D80  CFDF FFE7          	movff	indf2,indf1
  6587                           
  6588                           ;messages.c: 91: qmsg->full = 0;
  6589  000D84  C045  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6590  000D88  C046  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6591  000D8C  0E00               	movlw	0
  6592  000D8E  6EDF               	movwf	indf2,c
  6593                           
  6594                           ;messages.c: 92: return (tlength);
  6595  000D90  5043               	movf	i2recv_msg@tlength,w,c
  6596  000D92  0012               	return	
  6597  000D94                     i2l3499:
  6598                           
  6599                           ;messages.c: 94: return (-4);
  6600  000D94  0EFC               	movlw	252
  6601  000D96  0012               	return	
  6602  000D98                     __end_ofi2_recv_msg:
  6603                           	opt stack 0
  6604                           pclatu	equ	0xFFB
  6605                           pclath	equ	0xFFA
  6606                           tblptru	equ	0xFF8
  6607                           tblptrh	equ	0xFF7
  6608                           tblptrl	equ	0xFF6
  6609                           tablat	equ	0xFF5
  6610                           prodh	equ	0xFF4
  6611                           prodl	equ	0xFF3
  6612                           intcon	equ	0xFF2
  6613                           postinc0	equ	0xFEE
  6614                           fsr0h	equ	0xFEA
  6615                           fsr0l	equ	0xFE9
  6616                           wreg	equ	0xFE8
  6617                           indf1	equ	0xFE7
  6618                           fsr1h	equ	0xFE2
  6619                           fsr1l	equ	0xFE1
  6620                           bsr	equ	0xFE0
  6621                           indf2	equ	0xFDF
  6622                           postinc2	equ	0xFDE
  6623                           postdec2	equ	0xFDD
  6624                           fsr2h	equ	0xFDA
  6625                           fsr2l	equ	0xFD9
  6626                           status	equ	0xFD8
  6627                           
  6628 ;; *************** function _i2c_int_handler *****************
  6629 ;; Defined at:
  6630 ;;		line 100 in file "../src/my_i2c.c"
  6631 ;; Parameters:    Size  Location     Type
  6632 ;;		None
  6633 ;; Auto vars:     Size  Location     Type
  6634 ;;  error_buf       3    0[BANK0 ] unsigned char [3]
  6635 ;;  data_read       1    8[BANK0 ] unsigned char 
  6636 ;;  msg_ready       1    7[BANK0 ] unsigned char 
  6637 ;;  msg_to_send     1    6[BANK0 ] unsigned char 
  6638 ;;  i2c_data        1    5[BANK0 ] unsigned char 
  6639 ;;  overrun_erro    1    4[BANK0 ] unsigned char 
  6640 ;;  data_written    1    3[BANK0 ] unsigned char 
  6641 ;; Return value:  Size  Location     Type
  6642 ;;		None               void
  6643 ;; Registers used:
  6644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6645 ;; Tracked objects:
  6646 ;;		On entry : 0/0
  6647 ;;		On exit  : 0/0
  6648 ;;		Unchanged: 0/0
  6649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6650 ;;      Params:         0       0       0       0       0
  6651 ;;      Locals:         0       9       0       0       0
  6652 ;;      Temps:          2       0       0       0       0
  6653 ;;      Totals:         2       9       0       0       0
  6654 ;;Total ram usage:       11 bytes
  6655 ;; Hardware stack levels used:    1
  6656 ;; Hardware stack levels required when called:    3
  6657 ;; This function calls:
  6658 ;;		_ToMainHigh_sendmsg
  6659 ;;		_handle_start
  6660 ;; This function is called by:
  6661 ;;		_InterruptHandlerHigh
  6662 ;; This function uses a non-reentrant model
  6663 ;;
  6664                           
  6665                           	psect	text46
  6666  0000BE                     __ptext46:
  6667                           	opt stack 0
  6668  0000BE                     _i2c_int_handler:
  6669                           	opt stack 16
  6670                           
  6671                           ;my_i2c.c: 101: unsigned char i2c_data;
  6672                           ;my_i2c.c: 102: unsigned char data_read = 0;
  6673                           
  6674                           ;incstack = 0
  6675  0000BE  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6676  0000C0  0E00               	movlw	0
  6677  0000C2  0100               	movlb	0	; () banked
  6678  0000C4  0100               	movlb	0	; () banked
  6679  0000C6  6FBE               	movwf	i2c_int_handler@data_read& (0+255),b
  6680  0000C8  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6681                           
  6682                           ;my_i2c.c: 103: unsigned char data_written = 0;
  6683  0000CA  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6684  0000CC  0E00               	movlw	0
  6685  0000CE  0100               	movlb	0	; () banked
  6686  0000D0  0100               	movlb	0	; () banked
  6687  0000D2  6FB9               	movwf	i2c_int_handler@data_written& (0+255),b
  6688  0000D4  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6689                           
  6690                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  6691  0000D6  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6692  0000D8  0E00               	movlw	0
  6693  0000DA  0100               	movlb	0	; () banked
  6694  0000DC  0100               	movlb	0	; () banked
  6695  0000DE  6FBD               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6696  0000E0  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6697                           
  6698                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  6699  0000E2  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6700  0000E4  0E00               	movlw	0
  6701  0000E6  0100               	movlb	0	; () banked
  6702  0000E8  0100               	movlb	0	; () banked
  6703  0000EA  6FBC               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6704  0000EC  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6705                           
  6706                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  6707  0000EE  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6708  0000F0  0E00               	movlw	0
  6709  0000F2  0100               	movlb	0	; () banked
  6710  0000F4  0100               	movlb	0	; () banked
  6711  0000F6  6FBA               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6712  0000F8  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6713                           
  6714                           ; BSR set to: 0
  6715                           ;my_i2c.c: 107: unsigned char error_buf[3];
  6716                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  6717  0000FA  ACC6               	btfss	4038,6,c	;volatile
  6718  0000FC  D027               	goto	i2l3039
  6719                           
  6720                           ; BSR set to: 0
  6721                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  6722  0000FE  9CC6               	bcf	4038,6,c	;volatile
  6723                           
  6724                           ; BSR set to: 0
  6725                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  6726  000100  0100               	movlb	0	; () banked
  6727  000102  EE20 F00C          	lfsr	2,12
  6728  000106  0100               	movlb	0	; () banked
  6729  000108  51E1               	movf	_ic_ptr& (0+255),w,b
  6730  00010A  26D9               	addwf	fsr2l,f,c
  6731  00010C  0100               	movlb	0	; () banked
  6732  00010E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6733  000110  22DA               	addwfc	fsr2h,f,c
  6734  000112  0E05               	movlw	5
  6735  000114  6EDF               	movwf	indf2,c
  6736                           
  6737                           ; BSR set to: 0
  6738                           ;my_i2c.c: 116: overrun_error = 1;
  6739  000116  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6740  000118  0E01               	movlw	1
  6741  00011A  0100               	movlb	0	; () banked
  6742  00011C  0100               	movlb	0	; () banked
  6743  00011E  6FBA               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6744  000120  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6745                           
  6746                           ; BSR set to: 0
  6747                           ;my_i2c.c: 117: ic_ptr->error_count++;
  6748  000122  0100               	movlb	0	; () banked
  6749  000124  EE20 F00E          	lfsr	2,14
  6750  000128  0100               	movlb	0	; () banked
  6751  00012A  51E1               	movf	_ic_ptr& (0+255),w,b
  6752  00012C  26D9               	addwf	fsr2l,f,c
  6753  00012E  0100               	movlb	0	; () banked
  6754  000130  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6755  000132  22DA               	addwfc	fsr2h,f,c
  6756  000134  2ADF               	incf	indf2,f,c
  6757                           
  6758                           ; BSR set to: 0
  6759                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  6760  000136  0100               	movlb	0	; () banked
  6761  000138  EE20 F00D          	lfsr	2,13
  6762  00013C  0100               	movlb	0	; () banked
  6763  00013E  51E1               	movf	_ic_ptr& (0+255),w,b
  6764  000140  26D9               	addwf	fsr2l,f,c
  6765  000142  0100               	movlb	0	; () banked
  6766  000144  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6767  000146  22DA               	addwfc	fsr2h,f,c
  6768  000148  0E04               	movlw	4
  6769  00014A  6EDF               	movwf	indf2,c
  6770  00014C                     i2l3039:
  6771                           
  6772                           ; BSR set to: 0
  6773                           ;my_i2c.c: 119: }
  6774                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  6775  00014C  A0C7               	btfss	4039,0,c	;volatile
  6776  00014E  D008               	goto	i2l3045
  6777                           
  6778                           ; BSR set to: 0
  6779                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  6780  000150  CFC9 F0BB          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6781                           
  6782                           ; BSR set to: 0
  6783                           ;my_i2c.c: 123: data_read = 1;
  6784  000154  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6785  000156  0E01               	movlw	1
  6786  000158  0100               	movlb	0	; () banked
  6787  00015A  0100               	movlb	0	; () banked
  6788  00015C  6FBE               	movwf	i2c_int_handler@data_read& (0+255),b
  6789  00015E  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6790  000160                     i2l3045:
  6791                           
  6792                           ; BSR set to: 0
  6793                           ;my_i2c.c: 124: }
  6794                           ;my_i2c.c: 129: if (!overrun_error) {
  6795  000160  0100               	movlb	0	; () banked
  6796  000162  0100               	movlb	0	; () banked
  6797  000164  67BA               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6798  000166  D1B8               	goto	i2l284
  6799  000168  D1A1               	goto	i2l3133
  6800  00016A                     i2l286:
  6801                           
  6802                           ; BSR set to: 0
  6803                           ;my_i2c.c: 132: {
  6804                           ;my_i2c.c: 134: if (SSPSTATbits.S == 1) {
  6805  00016A  A6C7               	btfss	4039,3,c	;volatile
  6806  00016C  D1B5               	goto	i2l284
  6807                           
  6808                           ; BSR set to: 0
  6809                           ;my_i2c.c: 135: handle_start(data_read);
  6810  00016E  0100               	movlb	0	; () banked
  6811  000170  0100               	movlb	0	; () banked
  6812  000172  51BE               	movf	i2c_int_handler@data_read& (0+255),w,b
  6813  000174  ECCC  F006         	call	_handle_start
  6814                           
  6815                           ;my_i2c.c: 137: if (ic_ptr->status == 0x8) {
  6816  000178  0100               	movlb	0	; () banked
  6817  00017A  EE20 F00C          	lfsr	2,12
  6818  00017E  0100               	movlb	0	; () banked
  6819  000180  51E1               	movf	_ic_ptr& (0+255),w,b
  6820  000182  26D9               	addwf	fsr2l,f,c
  6821  000184  0100               	movlb	0	; () banked
  6822  000186  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6823  000188  22DA               	addwfc	fsr2h,f,c
  6824  00018A  0E08               	movlw	8
  6825  00018C  62DF               	cpfseq	indf2,c
  6826  00018E  D1A4               	goto	i2l284
  6827                           
  6828                           ; BSR set to: 0
  6829                           ;my_i2c.c: 138: data_read = 0;
  6830  000190  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6831  000192  0E00               	movlw	0
  6832  000194  0100               	movlb	0	; () banked
  6833  000196  0100               	movlb	0	; () banked
  6834  000198  6FBE               	movwf	i2c_int_handler@data_read& (0+255),b
  6835  00019A  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6836                           
  6837                           ;my_i2c.c: 139: msg_to_send = 1;
  6838  00019C  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6839  00019E  0E01               	movlw	1
  6840  0001A0  0100               	movlb	0	; () banked
  6841  0001A2  0100               	movlb	0	; () banked
  6842  0001A4  6FBC               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6843  0001A6  D175               	goto	L7
  6844  0001A8                     i2l290:
  6845                           
  6846                           ; BSR set to: 0
  6847                           ;my_i2c.c: 145: {
  6848                           ;my_i2c.c: 147: if (SSPSTATbits.P == 1) {
  6849  0001A8  A8C7               	btfss	4039,4,c	;volatile
  6850  0001AA  D02E               	goto	i2l3065
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;my_i2c.c: 150: ic_ptr->event_count++;
  6854  0001AC  0100               	movlb	0	; () banked
  6855  0001AE  EE20 F00B          	lfsr	2,11
  6856  0001B2  0100               	movlb	0	; () banked
  6857  0001B4  51E1               	movf	_ic_ptr& (0+255),w,b
  6858  0001B6  26D9               	addwf	fsr2l,f,c
  6859  0001B8  0100               	movlb	0	; () banked
  6860  0001BA  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6861  0001BC  22DA               	addwfc	fsr2h,f,c
  6862  0001BE  2ADF               	incf	indf2,f,c
  6863                           
  6864                           ; BSR set to: 0
  6865                           ;my_i2c.c: 151: if (data_read) {
  6866  0001C0  0100               	movlb	0	; () banked
  6867  0001C2  0100               	movlb	0	; () banked
  6868  0001C4  51BE               	movf	i2c_int_handler@data_read& (0+255),w,b
  6869  0001C6  B4D8               	btfsc	status,2,c
  6870  0001C8  D166               	goto	L9
  6871                           
  6872                           ; BSR set to: 0
  6873                           ;my_i2c.c: 152: if (SSPSTATbits.D_A == 0) {
  6874  0001CA  BAC7               	btfsc	4039,5,c	;volatile
  6875  0001CC  D007               	goto	i2l3063
  6876                           
  6877                           ; BSR set to: 0
  6878                           ;my_i2c.c: 153: msg_ready = 1;
  6879  0001CE  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6880  0001D0  0E01               	movlw	1
  6881  0001D2  0100               	movlb	0	; () banked
  6882  0001D4  0100               	movlb	0	; () banked
  6883  0001D6  6FBD               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6884  0001D8  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6885                           
  6886                           ;my_i2c.c: 154: } else {
  6887  0001DA  D15D               	goto	L9
  6888  0001DC                     i2l3063:
  6889                           
  6890                           ; BSR set to: 0
  6891                           ;my_i2c.c: 155: ic_ptr->error_count++;
  6892  0001DC  0100               	movlb	0	; () banked
  6893  0001DE  EE20 F00E          	lfsr	2,14
  6894  0001E2  0100               	movlb	0	; () banked
  6895  0001E4  51E1               	movf	_ic_ptr& (0+255),w,b
  6896  0001E6  26D9               	addwf	fsr2l,f,c
  6897  0001E8  0100               	movlb	0	; () banked
  6898  0001EA  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6899  0001EC  22DA               	addwfc	fsr2h,f,c
  6900  0001EE  2ADF               	incf	indf2,f,c
  6901                           
  6902                           ;my_i2c.c: 156: ic_ptr->error_code = 0x6;
  6903  0001F0  0100               	movlb	0	; () banked
  6904  0001F2  EE20 F00D          	lfsr	2,13
  6905  0001F6  0100               	movlb	0	; () banked
  6906  0001F8  51E1               	movf	_ic_ptr& (0+255),w,b
  6907  0001FA  26D9               	addwf	fsr2l,f,c
  6908  0001FC  0100               	movlb	0	; () banked
  6909  0001FE  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6910  000200  22DA               	addwfc	fsr2h,f,c
  6911  000202  0E06               	movlw	6
  6912  000204  6EDF               	movwf	indf2,c
  6913                           
  6914                           ; BSR set to: 0
  6915  000206  D147               	goto	L9
  6916  000208                     i2l3065:
  6917                           
  6918                           ; BSR set to: 0
  6919  000208  0100               	movlb	0	; () banked
  6920  00020A  0100               	movlb	0	; () banked
  6921  00020C  51BE               	movf	i2c_int_handler@data_read& (0+255),w,b
  6922  00020E  B4D8               	btfsc	status,2,c
  6923  000210  D163               	goto	i2l284
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;my_i2c.c: 161: ic_ptr->event_count++;
  6927  000212  0100               	movlb	0	; () banked
  6928  000214  EE20 F00B          	lfsr	2,11
  6929  000218  0100               	movlb	0	; () banked
  6930  00021A  51E1               	movf	_ic_ptr& (0+255),w,b
  6931  00021C  26D9               	addwf	fsr2l,f,c
  6932  00021E  0100               	movlb	0	; () banked
  6933  000220  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6934  000222  22DA               	addwfc	fsr2h,f,c
  6935  000224  2ADF               	incf	indf2,f,c
  6936                           
  6937                           ; BSR set to: 0
  6938                           ;my_i2c.c: 162: if (SSPSTATbits.D_A == 0) {
  6939  000226  BAC7               	btfsc	4039,5,c	;volatile
  6940  000228  D019               	goto	i2l3081
  6941                           
  6942                           ; BSR set to: 0
  6943                           ;my_i2c.c: 163: if (SSPSTATbits.R_W == 0) {
  6944  00022A  B4C7               	btfsc	4039,2,c	;volatile
  6945  00022C  D00B               	goto	i2l3075
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;my_i2c.c: 164: ic_ptr->status = 0x7;
  6949  00022E  0100               	movlb	0	; () banked
  6950  000230  EE20 F00C          	lfsr	2,12
  6951  000234  0100               	movlb	0	; () banked
  6952  000236  51E1               	movf	_ic_ptr& (0+255),w,b
  6953  000238  26D9               	addwf	fsr2l,f,c
  6954  00023A  0100               	movlb	0	; () banked
  6955  00023C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6956  00023E  22DA               	addwfc	fsr2h,f,c
  6957  000240  0E07               	movlw	7
  6958  000242  D071               	goto	L6
  6959  000244                     i2l3075:
  6960                           
  6961                           ; BSR set to: 0
  6962                           ;my_i2c.c: 166: ic_ptr->status = 0x8;
  6963  000244  0100               	movlb	0	; () banked
  6964  000246  EE20 F00C          	lfsr	2,12
  6965  00024A  0100               	movlb	0	; () banked
  6966  00024C  51E1               	movf	_ic_ptr& (0+255),w,b
  6967  00024E  26D9               	addwf	fsr2l,f,c
  6968  000250  0100               	movlb	0	; () banked
  6969  000252  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6970  000254  22DA               	addwfc	fsr2h,f,c
  6971  000256  0E08               	movlw	8
  6972  000258  6EDF               	movwf	indf2,c
  6973  00025A  D110               	goto	L10
  6974  00025C                     i2l3081:
  6975                           
  6976                           ; BSR set to: 0
  6977                           ;my_i2c.c: 172: ic_ptr->error_count++;
  6978  00025C  0100               	movlb	0	; () banked
  6979  00025E  EE20 F00E          	lfsr	2,14
  6980  000262  0100               	movlb	0	; () banked
  6981  000264  51E1               	movf	_ic_ptr& (0+255),w,b
  6982  000266  26D9               	addwf	fsr2l,f,c
  6983  000268  0100               	movlb	0	; () banked
  6984  00026A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6985  00026C  22DA               	addwfc	fsr2h,f,c
  6986  00026E  2ADF               	incf	indf2,f,c
  6987                           
  6988                           ;my_i2c.c: 173: ic_ptr->status = 0x5;
  6989  000270  0100               	movlb	0	; () banked
  6990  000272  EE20 F00C          	lfsr	2,12
  6991  000276  0100               	movlb	0	; () banked
  6992  000278  51E1               	movf	_ic_ptr& (0+255),w,b
  6993  00027A  26D9               	addwf	fsr2l,f,c
  6994  00027C  0100               	movlb	0	; () banked
  6995  00027E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6996  000280  22DA               	addwfc	fsr2h,f,c
  6997  000282  0E05               	movlw	5
  6998  000284  6EDF               	movwf	indf2,c
  6999                           
  7000                           ;my_i2c.c: 174: ic_ptr->error_code = 0x6;
  7001  000286  0100               	movlb	0	; () banked
  7002  000288  EE20 F00D          	lfsr	2,13
  7003  00028C  0100               	movlb	0	; () banked
  7004  00028E  51E1               	movf	_ic_ptr& (0+255),w,b
  7005  000290  26D9               	addwf	fsr2l,f,c
  7006  000292  0100               	movlb	0	; () banked
  7007  000294  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7008  000296  22DA               	addwfc	fsr2h,f,c
  7009  000298  0E06               	movlw	6
  7010  00029A  D045               	goto	L6
  7011  00029C                     i2l3083:
  7012                           
  7013                           ; BSR set to: 0
  7014                           ;my_i2c.c: 180: {
  7015                           ;my_i2c.c: 181: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7016  00029C  0100               	movlb	0	; () banked
  7017  00029E  EE20 F01A          	lfsr	2,26
  7018  0002A2  0100               	movlb	0	; () banked
  7019  0002A4  51E1               	movf	_ic_ptr& (0+255),w,b
  7020  0002A6  26D9               	addwf	fsr2l,f,c
  7021  0002A8  0100               	movlb	0	; () banked
  7022  0002AA  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7023  0002AC  22DA               	addwfc	fsr2h,f,c
  7024  0002AE  50DF               	movf	indf2,w,c
  7025  0002B0  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7026  0002B2  0100               	movlb	0	; () banked
  7027  0002B4  EE20 F019          	lfsr	2,25
  7028  0002B8  0100               	movlb	0	; () banked
  7029  0002BA  51E1               	movf	_ic_ptr& (0+255),w,b
  7030  0002BC  26D9               	addwf	fsr2l,f,c
  7031  0002BE  0100               	movlb	0	; () banked
  7032  0002C0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7033  0002C2  22DA               	addwfc	fsr2h,f,c
  7034  0002C4  50DF               	movf	indf2,w,c
  7035  0002C6  5C49               	subwf	??_i2c_int_handler,w,c
  7036  0002C8  B0D8               	btfsc	status,0,c
  7037  0002CA  D0E5               	goto	L9
  7038                           
  7039                           ; BSR set to: 0
  7040                           ;my_i2c.c: 182: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7041  0002CC  0100               	movlb	0	; () banked
  7042  0002CE  EE20 F01A          	lfsr	2,26
  7043  0002D2  0100               	movlb	0	; () banked
  7044  0002D4  51E1               	movf	_ic_ptr& (0+255),w,b
  7045  0002D6  26D9               	addwf	fsr2l,f,c
  7046  0002D8  0100               	movlb	0	; () banked
  7047  0002DA  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7048  0002DC  22DA               	addwfc	fsr2h,f,c
  7049  0002DE  50DF               	movf	indf2,w,c
  7050  0002E0  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7051  0002E2  5049               	movf	??_i2c_int_handler,w,c
  7052  0002E4  0D01               	mullw	1
  7053  0002E6  0E0F               	movlw	15
  7054  0002E8  26F3               	addwf	prodl,f,c
  7055  0002EA  0E00               	movlw	0
  7056  0002EC  22F4               	addwfc	prodh,f,c
  7057  0002EE  50F3               	movf	prodl,w,c
  7058  0002F0  0100               	movlb	0	; () banked
  7059  0002F2  0100               	movlb	0	; () banked
  7060  0002F4  25E1               	addwf	_ic_ptr& (0+255),w,b
  7061  0002F6  6ED9               	movwf	fsr2l,c
  7062  0002F8  50F4               	movf	prodh,w,c
  7063  0002FA  0100               	movlb	0	; () banked
  7064  0002FC  0100               	movlb	0	; () banked
  7065  0002FE  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7066  000300  6EDA               	movwf	fsr2h,c
  7067  000302  50DF               	movf	indf2,w,c
  7068  000304  6EC9               	movwf	4041,c	;volatile
  7069                           
  7070                           ; BSR set to: 0
  7071                           ;my_i2c.c: 183: ic_ptr->outbufind++;
  7072  000306  0100               	movlb	0	; () banked
  7073  000308  EE20 F01A          	lfsr	2,26
  7074  00030C  0100               	movlb	0	; () banked
  7075  00030E  51E1               	movf	_ic_ptr& (0+255),w,b
  7076  000310  26D9               	addwf	fsr2l,f,c
  7077  000312  0100               	movlb	0	; () banked
  7078  000314  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7079  000316  22DA               	addwfc	fsr2h,f,c
  7080  000318  2ADF               	incf	indf2,f,c
  7081                           
  7082                           ; BSR set to: 0
  7083                           ;my_i2c.c: 184: data_written = 1;
  7084  00031A  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7085  00031C  0E01               	movlw	1
  7086  00031E  0100               	movlb	0	; () banked
  7087  000320  0100               	movlb	0	; () banked
  7088  000322  6FB9               	movwf	i2c_int_handler@data_written& (0+255),b
  7089  000324  D0B6               	goto	L7
  7090  000326                     L6:
  7091  000326  6EDF               	movwf	indf2,c
  7092  000328  D0D7               	goto	i2l284
  7093  00032A                     i2l304:
  7094                           
  7095                           ; BSR set to: 0
  7096                           ;my_i2c.c: 192: {
  7097                           ;my_i2c.c: 194: if (SSPSTATbits.P == 1) {
  7098  00032A  A8C7               	btfss	4039,4,c	;volatile
  7099  00032C  D05E               	goto	i2l3111
  7100                           
  7101                           ; BSR set to: 0
  7102                           ;my_i2c.c: 196: ic_ptr->event_count++;
  7103  00032E  0100               	movlb	0	; () banked
  7104  000330  EE20 F00B          	lfsr	2,11
  7105  000334  0100               	movlb	0	; () banked
  7106  000336  51E1               	movf	_ic_ptr& (0+255),w,b
  7107  000338  26D9               	addwf	fsr2l,f,c
  7108  00033A  0100               	movlb	0	; () banked
  7109  00033C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7110  00033E  22DA               	addwfc	fsr2h,f,c
  7111  000340  2ADF               	incf	indf2,f,c
  7112                           
  7113                           ; BSR set to: 0
  7114                           ;my_i2c.c: 197: if (data_read) {
  7115  000342  0100               	movlb	0	; () banked
  7116  000344  0100               	movlb	0	; () banked
  7117  000346  51BE               	movf	i2c_int_handler@data_read& (0+255),w,b
  7118  000348  B4D8               	btfsc	status,2,c
  7119  00034A  D048               	goto	i2l3107
  7120                           
  7121                           ; BSR set to: 0
  7122                           ;my_i2c.c: 198: if (SSPSTATbits.D_A == 1) {
  7123  00034C  AAC7               	btfss	4039,5,c	;volatile
  7124  00034E  D025               	goto	i2l3105
  7125                           
  7126                           ; BSR set to: 0
  7127                           ;my_i2c.c: 199: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7128  000350  0100               	movlb	0	; () banked
  7129  000352  EE20 F00A          	lfsr	2,10
  7130  000356  0100               	movlb	0	; () banked
  7131  000358  51E1               	movf	_ic_ptr& (0+255),w,b
  7132  00035A  26D9               	addwf	fsr2l,f,c
  7133  00035C  0100               	movlb	0	; () banked
  7134  00035E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7135  000360  22DA               	addwfc	fsr2h,f,c
  7136  000362  50DF               	movf	indf2,w,c
  7137  000364  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7138  000366  5049               	movf	??_i2c_int_handler,w,c
  7139  000368  0D01               	mullw	1
  7140  00036A  50F3               	movf	prodl,w,c
  7141  00036C  0100               	movlb	0	; () banked
  7142  00036E  0100               	movlb	0	; () banked
  7143  000370  25E1               	addwf	_ic_ptr& (0+255),w,b
  7144  000372  6ED9               	movwf	fsr2l,c
  7145  000374  50F4               	movf	prodh,w,c
  7146  000376  0100               	movlb	0	; () banked
  7147  000378  0100               	movlb	0	; () banked
  7148  00037A  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7149  00037C  6EDA               	movwf	fsr2h,c
  7150  00037E  0100               	movlb	0	; () banked
  7151  000380  C0BB  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7152                           
  7153                           ; BSR set to: 0
  7154                           ;my_i2c.c: 200: ic_ptr->buflen++;
  7155  000384  0100               	movlb	0	; () banked
  7156  000386  EE20 F00A          	lfsr	2,10
  7157  00038A  0100               	movlb	0	; () banked
  7158  00038C  51E1               	movf	_ic_ptr& (0+255),w,b
  7159  00038E  26D9               	addwf	fsr2l,f,c
  7160  000390  0100               	movlb	0	; () banked
  7161  000392  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7162  000394  22DA               	addwfc	fsr2h,f,c
  7163  000396  2ADF               	incf	indf2,f,c
  7164  000398  D021               	goto	i2l3107
  7165  00039A                     i2l3105:
  7166                           
  7167                           ; BSR set to: 0
  7168                           ;my_i2c.c: 203: ic_ptr->error_count++;
  7169  00039A  0100               	movlb	0	; () banked
  7170  00039C  EE20 F00E          	lfsr	2,14
  7171  0003A0  0100               	movlb	0	; () banked
  7172  0003A2  51E1               	movf	_ic_ptr& (0+255),w,b
  7173  0003A4  26D9               	addwf	fsr2l,f,c
  7174  0003A6  0100               	movlb	0	; () banked
  7175  0003A8  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7176  0003AA  22DA               	addwfc	fsr2h,f,c
  7177  0003AC  2ADF               	incf	indf2,f,c
  7178                           
  7179                           ;my_i2c.c: 204: ic_ptr->error_code = 0x6;
  7180  0003AE  0100               	movlb	0	; () banked
  7181  0003B0  EE20 F00D          	lfsr	2,13
  7182  0003B4  0100               	movlb	0	; () banked
  7183  0003B6  51E1               	movf	_ic_ptr& (0+255),w,b
  7184  0003B8  26D9               	addwf	fsr2l,f,c
  7185  0003BA  0100               	movlb	0	; () banked
  7186  0003BC  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7187  0003BE  22DA               	addwfc	fsr2h,f,c
  7188  0003C0  0E06               	movlw	6
  7189  0003C2  6EDF               	movwf	indf2,c
  7190                           
  7191                           ;my_i2c.c: 205: ic_ptr->status = 0x5;
  7192  0003C4  0100               	movlb	0	; () banked
  7193  0003C6  EE20 F00C          	lfsr	2,12
  7194  0003CA  0100               	movlb	0	; () banked
  7195  0003CC  51E1               	movf	_ic_ptr& (0+255),w,b
  7196  0003CE  26D9               	addwf	fsr2l,f,c
  7197  0003D0  0100               	movlb	0	; () banked
  7198  0003D2  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7199  0003D4  22DA               	addwfc	fsr2h,f,c
  7200  0003D6  0E05               	movlw	5
  7201  0003D8  6EDF               	movwf	indf2,c
  7202  0003DA  D05D               	goto	L9
  7203  0003DC                     i2l3107:
  7204                           
  7205                           ; BSR set to: 0
  7206                           ;my_i2c.c: 208: msg_ready = 1;
  7207  0003DC  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7208  0003DE  0E01               	movlw	1
  7209  0003E0  0100               	movlb	0	; () banked
  7210  0003E2  0100               	movlb	0	; () banked
  7211  0003E4  6FBD               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7212  0003E6  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7213                           
  7214                           ; BSR set to: 0
  7215  0003E8  D056               	goto	L9
  7216  0003EA                     i2l3111:
  7217                           
  7218                           ; BSR set to: 0
  7219  0003EA  0100               	movlb	0	; () banked
  7220  0003EC  0100               	movlb	0	; () banked
  7221  0003EE  51BE               	movf	i2c_int_handler@data_read& (0+255),w,b
  7222  0003F0  B4D8               	btfsc	status,2,c
  7223  0003F2  D072               	goto	i2l284
  7224                           
  7225                           ; BSR set to: 0
  7226                           ;my_i2c.c: 212: ic_ptr->event_count++;
  7227  0003F4  0100               	movlb	0	; () banked
  7228  0003F6  EE20 F00B          	lfsr	2,11
  7229  0003FA  0100               	movlb	0	; () banked
  7230  0003FC  51E1               	movf	_ic_ptr& (0+255),w,b
  7231  0003FE  26D9               	addwf	fsr2l,f,c
  7232  000400  0100               	movlb	0	; () banked
  7233  000402  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7234  000404  22DA               	addwfc	fsr2h,f,c
  7235  000406  2ADF               	incf	indf2,f,c
  7236                           
  7237                           ; BSR set to: 0
  7238                           ;my_i2c.c: 213: if (SSPSTATbits.D_A == 1) {
  7239  000408  AAC7               	btfss	4039,5,c	;volatile
  7240  00040A  D025               	goto	i2l312
  7241                           
  7242                           ; BSR set to: 0
  7243                           ;my_i2c.c: 214: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7244  00040C  0100               	movlb	0	; () banked
  7245  00040E  EE20 F00A          	lfsr	2,10
  7246  000412  0100               	movlb	0	; () banked
  7247  000414  51E1               	movf	_ic_ptr& (0+255),w,b
  7248  000416  26D9               	addwf	fsr2l,f,c
  7249  000418  0100               	movlb	0	; () banked
  7250  00041A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7251  00041C  22DA               	addwfc	fsr2h,f,c
  7252  00041E  50DF               	movf	indf2,w,c
  7253  000420  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7254  000422  5049               	movf	??_i2c_int_handler,w,c
  7255  000424  0D01               	mullw	1
  7256  000426  50F3               	movf	prodl,w,c
  7257  000428  0100               	movlb	0	; () banked
  7258  00042A  0100               	movlb	0	; () banked
  7259  00042C  25E1               	addwf	_ic_ptr& (0+255),w,b
  7260  00042E  6ED9               	movwf	fsr2l,c
  7261  000430  50F4               	movf	prodh,w,c
  7262  000432  0100               	movlb	0	; () banked
  7263  000434  0100               	movlb	0	; () banked
  7264  000436  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7265  000438  6EDA               	movwf	fsr2h,c
  7266  00043A  0100               	movlb	0	; () banked
  7267  00043C  C0BB  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7268                           
  7269                           ; BSR set to: 0
  7270                           ;my_i2c.c: 215: ic_ptr->buflen++;
  7271  000440  0100               	movlb	0	; () banked
  7272  000442  EE20 F00A          	lfsr	2,10
  7273  000446  0100               	movlb	0	; () banked
  7274  000448  51E1               	movf	_ic_ptr& (0+255),w,b
  7275  00044A  26D9               	addwf	fsr2l,f,c
  7276  00044C  0100               	movlb	0	; () banked
  7277  00044E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7278  000450  22DA               	addwfc	fsr2h,f,c
  7279  000452  2ADF               	incf	indf2,f,c
  7280                           
  7281                           ;my_i2c.c: 216: } else {
  7282  000454  D041               	goto	i2l284
  7283  000456                     i2l312:
  7284                           
  7285                           ; BSR set to: 0
  7286                           ;my_i2c.c: 217: if (SSPSTATbits.R_W == 1) {
  7287  000456  A4C7               	btfss	4039,2,c	;volatile
  7288  000458  D6C1               	goto	i2l3063
  7289                           
  7290                           ; BSR set to: 0
  7291                           ;my_i2c.c: 218: ic_ptr->status = 0x8;
  7292  00045A  0100               	movlb	0	; () banked
  7293  00045C  EE20 F00C          	lfsr	2,12
  7294  000460  0100               	movlb	0	; () banked
  7295  000462  51E1               	movf	_ic_ptr& (0+255),w,b
  7296  000464  26D9               	addwf	fsr2l,f,c
  7297  000466  0100               	movlb	0	; () banked
  7298  000468  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7299  00046A  22DA               	addwfc	fsr2h,f,c
  7300  00046C  0E08               	movlw	8
  7301  00046E  6EDF               	movwf	indf2,c
  7302                           
  7303                           ; BSR set to: 0
  7304                           ;my_i2c.c: 219: msg_ready = 1;
  7305  000470  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7306  000472  0E01               	movlw	1
  7307  000474  0100               	movlb	0	; () banked
  7308  000476  0100               	movlb	0	; () banked
  7309  000478  6FBD               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7310  00047A  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7311  00047C                     L10:
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;my_i2c.c: 220: msg_to_send = 1;
  7315  00047C  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7316  00047E  0E01               	movlw	1
  7317  000480  0100               	movlb	0	; () banked
  7318  000482  0100               	movlb	0	; () banked
  7319  000484  6FBC               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7320  000486  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7321                           
  7322                           ; BSR set to: 0
  7323                           ;my_i2c.c: 222: data_read = 0;
  7324  000488  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7325  00048A  0E00               	movlw	0
  7326  00048C  0100               	movlb	0	; () banked
  7327  00048E  0100               	movlb	0	; () banked
  7328  000490  6FBE               	movwf	i2c_int_handler@data_read& (0+255),b
  7329  000492                     L7:
  7330  000492  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7331                           
  7332                           ;my_i2c.c: 223: } else {
  7333  000494  D021               	goto	i2l284
  7334  000496                     L9:
  7335                           
  7336                           ;my_i2c.c: 226: ic_ptr->status = 0x5;
  7337  000496  0100               	movlb	0	; () banked
  7338  000498  EE20 F00C          	lfsr	2,12
  7339  00049C  0100               	movlb	0	; () banked
  7340  00049E  51E1               	movf	_ic_ptr& (0+255),w,b
  7341  0004A0  26D9               	addwf	fsr2l,f,c
  7342  0004A2  0100               	movlb	0	; () banked
  7343  0004A4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7344  0004A6  22DA               	addwfc	fsr2h,f,c
  7345  0004A8  0E05               	movlw	5
  7346  0004AA  D73D               	goto	L6
  7347  0004AC                     i2l3133:
  7348                           
  7349                           ; BSR set to: 0
  7350  0004AC  0100               	movlb	0	; () banked
  7351  0004AE  EE20 F00C          	lfsr	2,12
  7352  0004B2  0100               	movlb	0	; () banked
  7353  0004B4  51E1               	movf	_ic_ptr& (0+255),w,b
  7354  0004B6  26D9               	addwf	fsr2l,f,c
  7355  0004B8  0100               	movlb	0	; () banked
  7356  0004BA  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7357  0004BC  22DA               	addwfc	fsr2h,f,c
  7358  0004BE  50DF               	movf	indf2,w,c
  7359                           
  7360                           ; Switch size 1, requested type "space"
  7361                           ; Number of cases is 4, Range of values is 5 to 8
  7362                           ; switch strategies available:
  7363                           ; Name         Instructions Cycles
  7364                           ; simple_byte           13     7 (average)
  7365                           ;	Chosen strategy is simple_byte
  7366  0004C0  0A05               	xorlw	5	; case 5
  7367  0004C2  B4D8               	btfsc	status,2,c
  7368  0004C4  D652               	goto	i2l286
  7369  0004C6  0A03               	xorlw	3	; case 6
  7370  0004C8  B4D8               	btfsc	status,2,c
  7371  0004CA  D66E               	goto	i2l290
  7372  0004CC  0A01               	xorlw	1	; case 7
  7373  0004CE  B4D8               	btfsc	status,2,c
  7374  0004D0  D72C               	goto	i2l304
  7375  0004D2  0A0F               	xorlw	15	; case 8
  7376  0004D4  B4D8               	btfsc	status,2,c
  7377  0004D6  D6E2               	goto	i2l3083
  7378  0004D8                     i2l284:
  7379                           
  7380                           ; BSR set to: 0
  7381                           ;my_i2c.c: 233: }
  7382                           ;my_i2c.c: 236: if (data_read || data_written) {
  7383  0004D8  0100               	movlb	0	; () banked
  7384  0004DA  0100               	movlb	0	; () banked
  7385  0004DC  67BE               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7386  0004DE  D005               	goto	i2l318
  7387                           
  7388                           ; BSR set to: 0
  7389  0004E0  0100               	movlb	0	; () banked
  7390  0004E2  0100               	movlb	0	; () banked
  7391  0004E4  51B9               	movf	i2c_int_handler@data_written& (0+255),w,b
  7392  0004E6  B4D8               	btfsc	status,2,c
  7393  0004E8  D002               	goto	i2l3139
  7394  0004EA                     i2l318:
  7395                           
  7396                           ; BSR set to: 0
  7397                           ;my_i2c.c: 238: if (SSPCON1bits.CKP == 0) {
  7398  0004EA  A8C6               	btfss	4038,4,c	;volatile
  7399                           
  7400                           ; BSR set to: 0
  7401                           ;my_i2c.c: 239: SSPCON1bits.CKP = 1;
  7402  0004EC  88C6               	bsf	4038,4,c	;volatile
  7403  0004EE                     i2l3139:
  7404                           
  7405                           ; BSR set to: 0
  7406                           ;my_i2c.c: 240: }
  7407                           ;my_i2c.c: 241: }
  7408                           ;my_i2c.c: 244: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7409  0004EE  0100               	movlb	0	; () banked
  7410  0004F0  EE20 F00A          	lfsr	2,10
  7411  0004F4  0100               	movlb	0	; () banked
  7412  0004F6  51E1               	movf	_ic_ptr& (0+255),w,b
  7413  0004F8  26D9               	addwf	fsr2l,f,c
  7414  0004FA  0100               	movlb	0	; () banked
  7415  0004FC  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7416  0004FE  22DA               	addwfc	fsr2h,f,c
  7417  000500  0E08               	movlw	8
  7418  000502  64DF               	cpfsgt	indf2,c
  7419  000504  D024               	goto	i2l3145
  7420                           
  7421                           ; BSR set to: 0
  7422  000506  0100               	movlb	0	; () banked
  7423  000508  0100               	movlb	0	; () banked
  7424  00050A  67BD               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7425  00050C  D020               	goto	i2l3145
  7426                           
  7427                           ; BSR set to: 0
  7428                           ;my_i2c.c: 245: ic_ptr->status = 0x5;
  7429  00050E  0100               	movlb	0	; () banked
  7430  000510  EE20 F00C          	lfsr	2,12
  7431  000514  0100               	movlb	0	; () banked
  7432  000516  51E1               	movf	_ic_ptr& (0+255),w,b
  7433  000518  26D9               	addwf	fsr2l,f,c
  7434  00051A  0100               	movlb	0	; () banked
  7435  00051C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7436  00051E  22DA               	addwfc	fsr2h,f,c
  7437  000520  0E05               	movlw	5
  7438  000522  6EDF               	movwf	indf2,c
  7439                           
  7440                           ;my_i2c.c: 246: ic_ptr->error_count++;
  7441  000524  0100               	movlb	0	; () banked
  7442  000526  EE20 F00E          	lfsr	2,14
  7443  00052A  0100               	movlb	0	; () banked
  7444  00052C  51E1               	movf	_ic_ptr& (0+255),w,b
  7445  00052E  26D9               	addwf	fsr2l,f,c
  7446  000530  0100               	movlb	0	; () banked
  7447  000532  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7448  000534  22DA               	addwfc	fsr2h,f,c
  7449  000536  2ADF               	incf	indf2,f,c
  7450                           
  7451                           ;my_i2c.c: 247: ic_ptr->error_code = 0x7;
  7452  000538  0100               	movlb	0	; () banked
  7453  00053A  EE20 F00D          	lfsr	2,13
  7454  00053E  0100               	movlb	0	; () banked
  7455  000540  51E1               	movf	_ic_ptr& (0+255),w,b
  7456  000542  26D9               	addwf	fsr2l,f,c
  7457  000544  0100               	movlb	0	; () banked
  7458  000546  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7459  000548  22DA               	addwfc	fsr2h,f,c
  7460  00054A  0E07               	movlw	7
  7461  00054C  6EDF               	movwf	indf2,c
  7462  00054E                     i2l3145:
  7463                           
  7464                           ; BSR set to: 0
  7465                           ;my_i2c.c: 248: }
  7466                           ;my_i2c.c: 250: if (msg_ready) {
  7467  00054E  0100               	movlb	0	; () banked
  7468  000550  0100               	movlb	0	; () banked
  7469  000552  51BD               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7470  000554  B4D8               	btfsc	status,2,c
  7471  000556  D03E               	goto	i2l3153
  7472                           
  7473                           ; BSR set to: 0
  7474                           ;my_i2c.c: 251: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7475  000558  0100               	movlb	0	; () banked
  7476  00055A  EE20 F00B          	lfsr	2,11
  7477  00055E  0100               	movlb	0	; () banked
  7478  000560  51E1               	movf	_ic_ptr& (0+255),w,b
  7479  000562  26D9               	addwf	fsr2l,f,c
  7480  000564  0100               	movlb	0	; () banked
  7481  000566  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7482  000568  22DA               	addwfc	fsr2h,f,c
  7483  00056A  0100               	movlb	0	; () banked
  7484  00056C  EE10 F00A          	lfsr	1,10
  7485  000570  0100               	movlb	0	; () banked
  7486  000572  51E1               	movf	_ic_ptr& (0+255),w,b
  7487  000574  26E1               	addwf	fsr1l,f,c
  7488  000576  0100               	movlb	0	; () banked
  7489  000578  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7490  00057A  22E2               	addwfc	fsr1h,f,c
  7491  00057C  50E7               	movf	indf1,w,c
  7492  00057E  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7493  000580  5049               	movf	??_i2c_int_handler,w,c
  7494  000582  0D01               	mullw	1
  7495  000584  50F3               	movf	prodl,w,c
  7496  000586  0100               	movlb	0	; () banked
  7497  000588  0100               	movlb	0	; () banked
  7498  00058A  25E1               	addwf	_ic_ptr& (0+255),w,b
  7499  00058C  6EE1               	movwf	fsr1l,c
  7500  00058E  50F4               	movf	prodh,w,c
  7501  000590  0100               	movlb	0	; () banked
  7502  000592  0100               	movlb	0	; () banked
  7503  000594  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7504  000596  6EE2               	movwf	fsr1h,c
  7505  000598  CFDF FFE7          	movff	indf2,indf1
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;my_i2c.c: 252: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7509  00059C  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7510  00059E  0E28               	movlw	40
  7511  0005A0  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7512  0005A2  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7513  0005A4  0100               	movlb	0	; () banked
  7514  0005A6  C0E2  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7515  0005AA  0100               	movlb	0	; () banked
  7516  0005AC  C0E1  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7517  0005B0  0100               	movlb	0	; () banked
  7518  0005B2  EE20 F00A          	lfsr	2,10
  7519  0005B6  0100               	movlb	0	; () banked
  7520  0005B8  51E1               	movf	_ic_ptr& (0+255),w,b
  7521  0005BA  26D9               	addwf	fsr2l,f,c
  7522  0005BC  0100               	movlb	0	; () banked
  7523  0005BE  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7524  0005C0  22DA               	addwfc	fsr2h,f,c
  7525  0005C2  50DF               	movf	indf2,w,c
  7526  0005C4  6E4A               	movwf	(??_i2c_int_handler+1)& (0+255),c
  7527  0005C6  284A               	incf	??_i2c_int_handler+1,w,c
  7528  0005C8  EC24  F00D         	call	_ToMainHigh_sendmsg
  7529                           
  7530                           ;my_i2c.c: 253: ic_ptr->buflen = 0;
  7531  0005CC  0100               	movlb	0	; () banked
  7532  0005CE  EE20 F00A          	lfsr	2,10
  7533  0005D2  D043               	goto	L8
  7534  0005D4                     i2l3153:
  7535                           
  7536                           ; BSR set to: 0
  7537  0005D4  0100               	movlb	0	; () banked
  7538  0005D6  EE20 F00E          	lfsr	2,14
  7539  0005DA  0100               	movlb	0	; () banked
  7540  0005DC  51E1               	movf	_ic_ptr& (0+255),w,b
  7541  0005DE  26D9               	addwf	fsr2l,f,c
  7542  0005E0  0100               	movlb	0	; () banked
  7543  0005E2  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7544  0005E4  22DA               	addwfc	fsr2h,f,c
  7545  0005E6  50DF               	movf	indf2,w,c
  7546  0005E8  B4D8               	btfsc	status,2,c
  7547  0005EA  D03F               	goto	i2l3161
  7548                           
  7549                           ; BSR set to: 0
  7550                           ;my_i2c.c: 255: error_buf[0] = ic_ptr->error_count;
  7551  0005EC  0100               	movlb	0	; () banked
  7552  0005EE  EE20 F00E          	lfsr	2,14
  7553  0005F2  0100               	movlb	0	; () banked
  7554  0005F4  51E1               	movf	_ic_ptr& (0+255),w,b
  7555  0005F6  26D9               	addwf	fsr2l,f,c
  7556  0005F8  0100               	movlb	0	; () banked
  7557  0005FA  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7558  0005FC  22DA               	addwfc	fsr2h,f,c
  7559  0005FE  50DF               	movf	indf2,w,c
  7560  000600  0100               	movlb	0	; () banked
  7561  000602  0100               	movlb	0	; () banked
  7562  000604  6FB6               	movwf	i2c_int_handler@error_buf& (0+255),b
  7563                           
  7564                           ;my_i2c.c: 256: error_buf[1] = ic_ptr->error_code;
  7565  000606  0100               	movlb	0	; () banked
  7566  000608  EE20 F00D          	lfsr	2,13
  7567  00060C  0100               	movlb	0	; () banked
  7568  00060E  51E1               	movf	_ic_ptr& (0+255),w,b
  7569  000610  26D9               	addwf	fsr2l,f,c
  7570  000612  0100               	movlb	0	; () banked
  7571  000614  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7572  000616  22DA               	addwfc	fsr2h,f,c
  7573  000618  50DF               	movf	indf2,w,c
  7574  00061A  0100               	movlb	0	; () banked
  7575  00061C  0100               	movlb	0	; () banked
  7576  00061E  6FB7               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7577                           
  7578                           ;my_i2c.c: 257: error_buf[2] = ic_ptr->event_count;
  7579  000620  0100               	movlb	0	; () banked
  7580  000622  EE20 F00B          	lfsr	2,11
  7581  000626  0100               	movlb	0	; () banked
  7582  000628  51E1               	movf	_ic_ptr& (0+255),w,b
  7583  00062A  26D9               	addwf	fsr2l,f,c
  7584  00062C  0100               	movlb	0	; () banked
  7585  00062E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7586  000630  22DA               	addwfc	fsr2h,f,c
  7587  000632  50DF               	movf	indf2,w,c
  7588  000634  0100               	movlb	0	; () banked
  7589  000636  0100               	movlb	0	; () banked
  7590  000638  6FB8               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7591                           
  7592                           ; BSR set to: 0
  7593                           ;my_i2c.c: 258: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7594  00063A  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7595  00063C  0E29               	movlw	41
  7596  00063E  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7597  000640  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7598  000642  0100               	movlb	0	; () banked
  7599  000644  0E00               	movlw	high i2c_int_handler@error_buf
  7600  000646  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  7601  000648  0100               	movlb	0	; () banked
  7602  00064A  0EB6               	movlw	low i2c_int_handler@error_buf
  7603  00064C  6E46               	movwf	ToMainHigh_sendmsg@data,c
  7604  00064E  0E03               	movlw	3
  7605  000650  EC24  F00D         	call	_ToMainHigh_sendmsg
  7606                           
  7607                           ;my_i2c.c: 259: ic_ptr->error_count = 0;
  7608  000654  0100               	movlb	0	; () banked
  7609  000656  EE20 F00E          	lfsr	2,14
  7610  00065A                     L8:
  7611  00065A  0100               	movlb	0	; () banked
  7612  00065C  51E1               	movf	_ic_ptr& (0+255),w,b
  7613  00065E  26D9               	addwf	fsr2l,f,c
  7614  000660  0100               	movlb	0	; () banked
  7615  000662  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7616  000664  22DA               	addwfc	fsr2h,f,c
  7617  000666  0E00               	movlw	0
  7618  000668  6EDF               	movwf	indf2,c
  7619  00066A                     i2l3161:
  7620                           
  7621                           ; BSR set to: 0
  7622                           ;my_i2c.c: 260: }
  7623                           ;my_i2c.c: 261: if (msg_to_send) {
  7624  00066A  0100               	movlb	0	; () banked
  7625  00066C  0100               	movlb	0	; () banked
  7626  00066E  51BC               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7627  000670  B4D8               	btfsc	status,2,c
  7628  000672  0012               	return	
  7629                           
  7630                           ; BSR set to: 0
  7631                           ;my_i2c.c: 263: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7632  000674  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7633  000676  0E2A               	movlw	42
  7634  000678  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7635  00067A  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7636  00067C  0100               	movlb	0	; () banked
  7637  00067E  C0E2  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7638  000682  0100               	movlb	0	; () banked
  7639  000684  C0E1  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7640  000688  0E00               	movlw	0
  7641  00068A  EC24  F00D         	call	_ToMainHigh_sendmsg
  7642                           
  7643                           ;my_i2c.c: 264: msg_to_send = 0;
  7644  00068E  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7645  000690  0E00               	movlw	0
  7646  000692  0100               	movlb	0	; () banked
  7647  000694  0100               	movlb	0	; () banked
  7648  000696  6FBC               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7649  000698  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7650  00069A  0012               	return	
  7651  00069C                     __end_of_i2c_int_handler:
  7652                           	opt stack 0
  7653                           pclatu	equ	0xFFB
  7654                           pclath	equ	0xFFA
  7655                           tblptru	equ	0xFF8
  7656                           tblptrh	equ	0xFF7
  7657                           tblptrl	equ	0xFF6
  7658                           tablat	equ	0xFF5
  7659                           prodh	equ	0xFF4
  7660                           prodl	equ	0xFF3
  7661                           intcon	equ	0xFF2
  7662                           postinc0	equ	0xFEE
  7663                           fsr0h	equ	0xFEA
  7664                           fsr0l	equ	0xFE9
  7665                           wreg	equ	0xFE8
  7666                           indf1	equ	0xFE7
  7667                           fsr1h	equ	0xFE2
  7668                           fsr1l	equ	0xFE1
  7669                           bsr	equ	0xFE0
  7670                           indf2	equ	0xFDF
  7671                           postinc2	equ	0xFDE
  7672                           postdec2	equ	0xFDD
  7673                           fsr2h	equ	0xFDA
  7674                           fsr2l	equ	0xFD9
  7675                           status	equ	0xFD8
  7676                           
  7677 ;; *************** function _handle_start *****************
  7678 ;; Defined at:
  7679 ;;		line 71 in file "../src/my_i2c.c"
  7680 ;; Parameters:    Size  Location     Type
  7681 ;;  data_read       1    wreg     unsigned char 
  7682 ;; Auto vars:     Size  Location     Type
  7683 ;;  data_read       1   46[COMRAM] unsigned char 
  7684 ;; Return value:  Size  Location     Type
  7685 ;;		None               void
  7686 ;; Registers used:
  7687 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7688 ;; Tracked objects:
  7689 ;;		On entry : 0/0
  7690 ;;		On exit  : 0/0
  7691 ;;		Unchanged: 0/0
  7692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7693 ;;      Params:         0       0       0       0       0
  7694 ;;      Locals:         1       0       0       0       0
  7695 ;;      Temps:          0       0       0       0       0
  7696 ;;      Totals:         1       0       0       0       0
  7697 ;;Total ram usage:        1 bytes
  7698 ;; Hardware stack levels used:    1
  7699 ;; This function calls:
  7700 ;;		Nothing
  7701 ;; This function is called by:
  7702 ;;		_i2c_int_handler
  7703 ;; This function uses a non-reentrant model
  7704 ;;
  7705                           
  7706                           	psect	text47
  7707  000D98                     __ptext47:
  7708                           	opt stack 0
  7709  000D98                     _handle_start:
  7710                           	opt stack 18
  7711                           
  7712                           ; BSR set to: 0
  7713                           ;incstack = 0
  7714                           ;handle_start@data_read stored from wreg
  7715  000D98  CFE8 F02F          	movff	wreg,handle_start@data_read
  7716                           
  7717                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  7718  000D9C  0100               	movlb	0	; () banked
  7719  000D9E  EE20 F00B          	lfsr	2,11
  7720  000DA2  0100               	movlb	0	; () banked
  7721  000DA4  51E1               	movf	_ic_ptr& (0+255),w,b
  7722  000DA6  26D9               	addwf	fsr2l,f,c
  7723  000DA8  0100               	movlb	0	; () banked
  7724  000DAA  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7725  000DAC  22DA               	addwfc	fsr2h,f,c
  7726  000DAE  0E01               	movlw	1
  7727  000DB0  6EDF               	movwf	indf2,c
  7728                           
  7729                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  7730  000DB2  0100               	movlb	0	; () banked
  7731  000DB4  EE20 F00A          	lfsr	2,10
  7732  000DB8  0100               	movlb	0	; () banked
  7733  000DBA  51E1               	movf	_ic_ptr& (0+255),w,b
  7734  000DBC  26D9               	addwf	fsr2l,f,c
  7735  000DBE  0100               	movlb	0	; () banked
  7736  000DC0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7737  000DC2  22DA               	addwfc	fsr2h,f,c
  7738  000DC4  0E00               	movlw	0
  7739  000DC6  6EDF               	movwf	indf2,c
  7740                           
  7741                           ; BSR set to: 0
  7742                           ;my_i2c.c: 75: if (data_read) {
  7743  000DC8  502F               	movf	handle_start@data_read,w,c
  7744  000DCA  B4D8               	btfsc	status,2,c
  7745  000DCC  D03D               	goto	i2l3403
  7746                           
  7747                           ; BSR set to: 0
  7748                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  7749  000DCE  AAC7               	btfss	4039,5,c	;volatile
  7750  000DD0  D021               	goto	i2l274
  7751                           
  7752                           ; BSR set to: 0
  7753                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  7754  000DD2  0100               	movlb	0	; () banked
  7755  000DD4  EE20 F00C          	lfsr	2,12
  7756  000DD8  0100               	movlb	0	; () banked
  7757  000DDA  51E1               	movf	_ic_ptr& (0+255),w,b
  7758  000DDC  26D9               	addwf	fsr2l,f,c
  7759  000DDE  0100               	movlb	0	; () banked
  7760  000DE0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7761  000DE2  22DA               	addwfc	fsr2h,f,c
  7762  000DE4  0E05               	movlw	5
  7763  000DE6  6EDF               	movwf	indf2,c
  7764                           
  7765                           ;my_i2c.c: 80: ic_ptr->error_count++;
  7766  000DE8  0100               	movlb	0	; () banked
  7767  000DEA  EE20 F00E          	lfsr	2,14
  7768  000DEE  0100               	movlb	0	; () banked
  7769  000DF0  51E1               	movf	_ic_ptr& (0+255),w,b
  7770  000DF2  26D9               	addwf	fsr2l,f,c
  7771  000DF4  0100               	movlb	0	; () banked
  7772  000DF6  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7773  000DF8  22DA               	addwfc	fsr2h,f,c
  7774  000DFA  2ADF               	incf	indf2,f,c
  7775                           
  7776                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  7777  000DFC  0100               	movlb	0	; () banked
  7778  000DFE  EE20 F00D          	lfsr	2,13
  7779  000E02  0100               	movlb	0	; () banked
  7780  000E04  51E1               	movf	_ic_ptr& (0+255),w,b
  7781  000E06  26D9               	addwf	fsr2l,f,c
  7782  000E08  0100               	movlb	0	; () banked
  7783  000E0A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7784  000E0C  22DA               	addwfc	fsr2h,f,c
  7785  000E0E  0E05               	movlw	5
  7786  000E10  6EDF               	movwf	indf2,c
  7787                           
  7788                           ;my_i2c.c: 82: } else {
  7789  000E12  0012               	return	
  7790  000E14                     i2l274:
  7791                           
  7792                           ; BSR set to: 0
  7793                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  7794  000E14  A4C7               	btfss	4039,2,c	;volatile
  7795  000E16  D00C               	goto	i2l3401
  7796                           
  7797                           ; BSR set to: 0
  7798                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  7799  000E18  0100               	movlb	0	; () banked
  7800  000E1A  EE20 F00C          	lfsr	2,12
  7801  000E1E  0100               	movlb	0	; () banked
  7802  000E20  51E1               	movf	_ic_ptr& (0+255),w,b
  7803  000E22  26D9               	addwf	fsr2l,f,c
  7804  000E24  0100               	movlb	0	; () banked
  7805  000E26  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7806  000E28  22DA               	addwfc	fsr2h,f,c
  7807  000E2A  0E08               	movlw	8
  7808  000E2C  6EDF               	movwf	indf2,c
  7809                           
  7810                           ;my_i2c.c: 85: } else {
  7811  000E2E  0012               	return	
  7812  000E30                     i2l3401:
  7813                           
  7814                           ; BSR set to: 0
  7815                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  7816  000E30  0100               	movlb	0	; () banked
  7817  000E32  EE20 F00C          	lfsr	2,12
  7818  000E36  0100               	movlb	0	; () banked
  7819  000E38  51E1               	movf	_ic_ptr& (0+255),w,b
  7820  000E3A  26D9               	addwf	fsr2l,f,c
  7821  000E3C  0100               	movlb	0	; () banked
  7822  000E3E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7823  000E40  22DA               	addwfc	fsr2h,f,c
  7824  000E42  0E07               	movlw	7
  7825  000E44  6EDF               	movwf	indf2,c
  7826  000E46  0012               	return	
  7827  000E48                     i2l3403:
  7828                           
  7829                           ; BSR set to: 0
  7830                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  7831  000E48  0100               	movlb	0	; () banked
  7832  000E4A  EE20 F00C          	lfsr	2,12
  7833  000E4E  0100               	movlb	0	; () banked
  7834  000E50  51E1               	movf	_ic_ptr& (0+255),w,b
  7835  000E52  26D9               	addwf	fsr2l,f,c
  7836  000E54  0100               	movlb	0	; () banked
  7837  000E56  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7838  000E58  22DA               	addwfc	fsr2h,f,c
  7839  000E5A  0E06               	movlw	6
  7840  000E5C  6EDF               	movwf	indf2,c
  7841  000E5E  0012               	return	
  7842  000E60                     __end_of_handle_start:
  7843                           	opt stack 0
  7844                           pclatu	equ	0xFFB
  7845                           pclath	equ	0xFFA
  7846                           tblptru	equ	0xFF8
  7847                           tblptrh	equ	0xFF7
  7848                           tblptrl	equ	0xFF6
  7849                           tablat	equ	0xFF5
  7850                           prodh	equ	0xFF4
  7851                           prodl	equ	0xFF3
  7852                           intcon	equ	0xFF2
  7853                           postinc0	equ	0xFEE
  7854                           fsr0h	equ	0xFEA
  7855                           fsr0l	equ	0xFE9
  7856                           wreg	equ	0xFE8
  7857                           indf1	equ	0xFE7
  7858                           fsr1h	equ	0xFE2
  7859                           fsr1l	equ	0xFE1
  7860                           bsr	equ	0xFE0
  7861                           indf2	equ	0xFDF
  7862                           postinc2	equ	0xFDE
  7863                           postdec2	equ	0xFDD
  7864                           fsr2h	equ	0xFDA
  7865                           fsr2l	equ	0xFD9
  7866                           status	equ	0xFD8
  7867                           
  7868 ;; *************** function _ToMainHigh_sendmsg *****************
  7869 ;; Defined at:
  7870 ;;		line 126 in file "../src/messages.c"
  7871 ;; Parameters:    Size  Location     Type
  7872 ;;  length          1    wreg     unsigned char 
  7873 ;;  msgtype         1   68[COMRAM] unsigned char 
  7874 ;;  data            2   69[COMRAM] PTR void 
  7875 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  7876 ;; Auto vars:     Size  Location     Type
  7877 ;;  length          1   71[COMRAM] unsigned char 
  7878 ;; Return value:  Size  Location     Type
  7879 ;;                  1    wreg      char 
  7880 ;; Registers used:
  7881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7882 ;; Tracked objects:
  7883 ;;		On entry : 0/0
  7884 ;;		On exit  : 0/0
  7885 ;;		Unchanged: 0/0
  7886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7887 ;;      Params:         3       0       0       0       0
  7888 ;;      Locals:         1       0       0       0       0
  7889 ;;      Temps:          0       0       0       0       0
  7890 ;;      Totals:         4       0       0       0       0
  7891 ;;Total ram usage:        4 bytes
  7892 ;; Hardware stack levels used:    1
  7893 ;; Hardware stack levels required when called:    2
  7894 ;; This function calls:
  7895 ;;		i2_send_msg
  7896 ;; This function is called by:
  7897 ;;		_i2c_int_handler
  7898 ;;		_timer0_int_handler
  7899 ;; This function uses a non-reentrant model
  7900 ;;
  7901                           
  7902                           	psect	text48
  7903  001A48                     __ptext48:
  7904                           	opt stack 0
  7905  001A48                     _ToMainHigh_sendmsg:
  7906                           	opt stack 16
  7907                           
  7908                           ; BSR set to: 0
  7909                           ;incstack = 0
  7910                           ;ToMainHigh_sendmsg@length stored from wreg
  7911  001A48  CFE8 F048          	movff	wreg,ToMainHigh_sendmsg@length
  7912                           
  7913                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7914                           ;	Return value of _ToMainHigh_sendmsg is never used
  7915  001A4C  0101               	movlb	1	; () banked
  7916  001A4E  0E01               	movlw	high _ToMainHigh_MQ
  7917  001A50  6E3A               	movwf	i2send_msg@qptr+1,c
  7918  001A52  0101               	movlb	1	; () banked
  7919  001A54  0E6C               	movlw	low _ToMainHigh_MQ
  7920  001A56  6E39               	movwf	i2send_msg@qptr,c
  7921  001A58  C048  F03B         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  7922  001A5C  C045  F03C         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7923  001A60  C047  F03E         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7924  001A64  C046  F03D         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  7925  001A68  ECE1  F007         	call	i2_send_msg	;wreg free
  7926  001A6C  0012               	return	
  7927  001A6E                     __end_of_ToMainHigh_sendmsg:
  7928                           	opt stack 0
  7929                           pclatu	equ	0xFFB
  7930                           pclath	equ	0xFFA
  7931                           tblptru	equ	0xFF8
  7932                           tblptrh	equ	0xFF7
  7933                           tblptrl	equ	0xFF6
  7934                           tablat	equ	0xFF5
  7935                           prodh	equ	0xFF4
  7936                           prodl	equ	0xFF3
  7937                           intcon	equ	0xFF2
  7938                           postinc0	equ	0xFEE
  7939                           fsr0h	equ	0xFEA
  7940                           fsr0l	equ	0xFE9
  7941                           wreg	equ	0xFE8
  7942                           indf1	equ	0xFE7
  7943                           fsr1h	equ	0xFE2
  7944                           fsr1l	equ	0xFE1
  7945                           bsr	equ	0xFE0
  7946                           indf2	equ	0xFDF
  7947                           postinc2	equ	0xFDE
  7948                           postdec2	equ	0xFDD
  7949                           fsr2h	equ	0xFDA
  7950                           fsr2l	equ	0xFD9
  7951                           status	equ	0xFD8
  7952                           
  7953 ;; *************** function i2_send_msg *****************
  7954 ;; Defined at:
  7955 ;;		line 24 in file "../src/messages.c"
  7956 ;; Parameters:    Size  Location     Type
  7957 ;;  qptr            2   56[COMRAM] PTR struct __msg_queue
  7958 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7959 ;;  length          1   58[COMRAM] unsigned char 
  7960 ;;  msgtype         1   59[COMRAM] unsigned char 
  7961 ;;  data            2   60[COMRAM] PTR void 
  7962 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), 
  7963 ;;		 -> main@ic(28), main@uc(5), 
  7964 ;; Auto vars:     Size  Location     Type
  7965 ;;  send_msg        2   66[COMRAM] PTR struct __msg
  7966 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7967 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7968 ;;  send_msg        2   63[COMRAM] unsigned int 
  7969 ;;  send_msg        1   65[COMRAM] unsigned char 
  7970 ;; Return value:  Size  Location     Type
  7971 ;;                  1    wreg      char 
  7972 ;; Registers used:
  7973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7974 ;; Tracked objects:
  7975 ;;		On entry : 0/0
  7976 ;;		On exit  : 0/0
  7977 ;;		Unchanged: 0/0
  7978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7979 ;;      Params:         6       0       0       0       0
  7980 ;;      Locals:         5       0       0       0       0
  7981 ;;      Temps:          1       0       0       0       0
  7982 ;;      Totals:        12       0       0       0       0
  7983 ;;Total ram usage:       12 bytes
  7984 ;; Hardware stack levels used:    1
  7985 ;; Hardware stack levels required when called:    1
  7986 ;; This function calls:
  7987 ;;		i2_memcpy
  7988 ;; This function is called by:
  7989 ;;		_ToMainHigh_sendmsg
  7990 ;; This function uses a non-reentrant model
  7991 ;;
  7992                           
  7993                           	psect	text49
  7994  000FC2                     __ptext49:
  7995                           	opt stack 0
  7996  000FC2                     i2_send_msg:
  7997                           	opt stack 16
  7998                           
  7999                           ;messages.c: 25: unsigned char slot;
  8000                           ;messages.c: 27: msg *qmsg;
  8001                           ;messages.c: 28: size_t tlength = length;
  8002                           
  8003                           ;incstack = 0
  8004  000FC2  C03B  F040         	movff	i2send_msg@length,i2send_msg@tlength
  8005  000FC6  6A41               	clrf	i2send_msg@tlength+1,c
  8006                           
  8007                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8008  000FC8  EE20 F034          	lfsr	2,52
  8009  000FCC  5039               	movf	i2send_msg@qptr,w,c
  8010  000FCE  26D9               	addwf	fsr2l,f,c
  8011  000FD0  503A               	movf	i2send_msg@qptr+1,w,c
  8012  000FD2  22DA               	addwfc	fsr2h,f,c
  8013  000FD4  50DF               	movf	indf2,w,c
  8014  000FD6  6E42               	movwf	i2send_msg@slot,c
  8015                           
  8016                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8017  000FD8  5042               	movf	i2send_msg@slot,w,c
  8018  000FDA  0D0D               	mullw	13
  8019  000FDC  50F3               	movf	prodl,w,c
  8020  000FDE  2439               	addwf	i2send_msg@qptr,w,c
  8021  000FE0  6E43               	movwf	i2send_msg@qmsg,c
  8022  000FE2  50F4               	movf	prodh,w,c
  8023  000FE4  203A               	addwfc	i2send_msg@qptr+1,w,c
  8024  000FE6  6E44               	movwf	i2send_msg@qmsg+1,c
  8025                           
  8026                           ;messages.c: 41: if (qmsg->full != 0) {
  8027  000FE8  C043  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8028  000FEC  C044  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8029  000FF0  50DF               	movf	indf2,w,c
  8030  000FF2  B4D8               	btfsc	status,2,c
  8031  000FF4  D002               	goto	i2l3459
  8032                           
  8033                           ;messages.c: 42: return (-1);
  8034  000FF6  0EFF               	movlw	255
  8035  000FF8  0012               	return	
  8036  000FFA                     i2l3459:
  8037                           
  8038                           ;messages.c: 43: }
  8039                           ;messages.c: 46: qmsg->length = length;
  8040  000FFA  EE20 F001          	lfsr	2,1
  8041  000FFE  5043               	movf	i2send_msg@qmsg,w,c
  8042  001000  26D9               	addwf	fsr2l,f,c
  8043  001002  5044               	movf	i2send_msg@qmsg+1,w,c
  8044  001004  22DA               	addwfc	fsr2h,f,c
  8045  001006  C03B  FFDF         	movff	i2send_msg@length,indf2
  8046                           
  8047                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8048  00100A  EE20 F002          	lfsr	2,2
  8049  00100E  5043               	movf	i2send_msg@qmsg,w,c
  8050  001010  26D9               	addwf	fsr2l,f,c
  8051  001012  5044               	movf	i2send_msg@qmsg+1,w,c
  8052  001014  22DA               	addwfc	fsr2h,f,c
  8053  001016  C03C  FFDF         	movff	i2send_msg@msgtype,indf2
  8054                           
  8055                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8056  00101A  0E03               	movlw	3
  8057  00101C  2443               	addwf	i2send_msg@qmsg,w,c
  8058  00101E  6E2F               	movwf	i2memcpy@d1,c
  8059  001020  0E00               	movlw	0
  8060  001022  2044               	addwfc	i2send_msg@qmsg+1,w,c
  8061  001024  6E30               	movwf	i2memcpy@d1+1,c
  8062  001026  C03E  F032         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8063  00102A  C03D  F031         	movff	i2send_msg@data,i2memcpy@s1
  8064  00102E  C040  F033         	movff	i2send_msg@tlength,i2memcpy@n
  8065  001032  C041  F034         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8066  001036  EC08  F00C         	call	i2_memcpy	;wreg free
  8067                           
  8068                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8069  00103A  EE20 F034          	lfsr	2,52
  8070  00103E  5039               	movf	i2send_msg@qptr,w,c
  8071  001040  26D9               	addwf	fsr2l,f,c
  8072  001042  503A               	movf	i2send_msg@qptr+1,w,c
  8073  001044  22DA               	addwfc	fsr2h,f,c
  8074  001046  EE10 F034          	lfsr	1,52
  8075  00104A  5039               	movf	i2send_msg@qptr,w,c
  8076  00104C  26E1               	addwf	fsr1l,f,c
  8077  00104E  503A               	movf	i2send_msg@qptr+1,w,c
  8078  001050  22E2               	addwfc	fsr1h,f,c
  8079  001052  50E7               	movf	indf1,w,c
  8080  001054  6E3F               	movwf	??i2_send_msg& (0+255),c
  8081  001056  283F               	incf	??i2_send_msg,w,c
  8082  001058  0B03               	andlw	3
  8083  00105A  6EDF               	movwf	indf2,c
  8084                           
  8085                           ;messages.c: 59: qmsg->full = 1;
  8086  00105C  C043  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8087  001060  C044  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8088  001064  0E01               	movlw	1
  8089  001066  6EDF               	movwf	indf2,c
  8090                           
  8091                           ;messages.c: 60: return (1);
  8092  001068  0E01               	movlw	1
  8093  00106A  0012               	return	
  8094  00106C                     __end_ofi2_send_msg:
  8095                           	opt stack 0
  8096                           pclatu	equ	0xFFB
  8097                           pclath	equ	0xFFA
  8098                           tblptru	equ	0xFF8
  8099                           tblptrh	equ	0xFF7
  8100                           tblptrl	equ	0xFF6
  8101                           tablat	equ	0xFF5
  8102                           prodh	equ	0xFF4
  8103                           prodl	equ	0xFF3
  8104                           intcon	equ	0xFF2
  8105                           postinc0	equ	0xFEE
  8106                           fsr0h	equ	0xFEA
  8107                           fsr0l	equ	0xFE9
  8108                           wreg	equ	0xFE8
  8109                           indf1	equ	0xFE7
  8110                           fsr1h	equ	0xFE2
  8111                           fsr1l	equ	0xFE1
  8112                           bsr	equ	0xFE0
  8113                           indf2	equ	0xFDF
  8114                           postinc2	equ	0xFDE
  8115                           postdec2	equ	0xFDD
  8116                           fsr2h	equ	0xFDA
  8117                           fsr2l	equ	0xFD9
  8118                           status	equ	0xFD8
  8119                           
  8120 ;; *************** function i2_memcpy *****************
  8121 ;; Defined at:
  8122 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  8123 ;; Parameters:    Size  Location     Type
  8124 ;;  d1              2   46[COMRAM] PTR void 
  8125 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8126 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8127 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  8128 ;;  s1              2   48[COMRAM] PTR const void 
  8129 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8130 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8131 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  8132 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  8133 ;;		 -> main@ic(28), main@uc(5), 
  8134 ;;  n               2   50[COMRAM] unsigned int 
  8135 ;; Auto vars:     Size  Location     Type
  8136 ;;  memcpy          2   54[COMRAM] PTR const unsigned char 
  8137 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8138 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8139 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  8140 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  8141 ;;		 -> main@ic(28), main@uc(5), 
  8142 ;;  memcpy          2   52[COMRAM] PTR unsigned char 
  8143 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8144 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8145 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  8146 ;; Return value:  Size  Location     Type
  8147 ;;                  2   46[COMRAM] PTR void 
  8148 ;; Registers used:
  8149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8150 ;; Tracked objects:
  8151 ;;		On entry : 0/0
  8152 ;;		On exit  : 0/0
  8153 ;;		Unchanged: 0/0
  8154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8155 ;;      Params:         6       0       0       0       0
  8156 ;;      Locals:         4       0       0       0       0
  8157 ;;      Temps:          0       0       0       0       0
  8158 ;;      Totals:        10       0       0       0       0
  8159 ;;Total ram usage:       10 bytes
  8160 ;; Hardware stack levels used:    1
  8161 ;; This function calls:
  8162 ;;		Nothing
  8163 ;; This function is called by:
  8164 ;;		i2_send_msg
  8165 ;;		i2_recv_msg
  8166 ;; This function uses a non-reentrant model
  8167 ;;
  8168                           
  8169                           	psect	text50
  8170  001810                     __ptext50:
  8171                           	opt stack 0
  8172  001810                     i2_memcpy:
  8173                           	opt stack 16
  8174                           
  8175                           ;incstack = 0
  8176  001810  C032  F038         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8177  001814  C031  F037         	movff	i2memcpy@s1,i2memcpy@s
  8178  001818  C030  F036         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8179  00181C  C02F  F035         	movff	i2memcpy@d1,i2memcpy@d
  8180  001820  D00E               	goto	i2l3515
  8181  001822                     i2l3509:
  8182  001822  C037  FFD9         	movff	i2memcpy@s,fsr2l
  8183  001826  C038  FFDA         	movff	i2memcpy@s+1,fsr2h
  8184  00182A  C035  FFE1         	movff	i2memcpy@d,fsr1l
  8185  00182E  C036  FFE2         	movff	i2memcpy@d+1,fsr1h
  8186  001832  CFDF FFE7          	movff	indf2,indf1
  8187  001836  4A37               	infsnz	i2memcpy@s,f,c
  8188  001838  2A38               	incf	i2memcpy@s+1,f,c
  8189  00183A  4A35               	infsnz	i2memcpy@d,f,c
  8190  00183C  2A36               	incf	i2memcpy@d+1,f,c
  8191  00183E                     i2l3515:
  8192  00183E  0633               	decf	i2memcpy@n,f,c
  8193  001840  A0D8               	btfss	status,0,c
  8194  001842  0634               	decf	i2memcpy@n+1,f,c
  8195  001844  2833               	incf	i2memcpy@n& (0+255),w,c
  8196  001846  B4D8               	btfsc	status,2,c
  8197  001848  2834               	incf	(i2memcpy@n+1)& (0+255),w,c
  8198  00184A  B4D8               	btfsc	status,2,c
  8199                           
  8200                           ;	Return value of i2_memcpy is never used
  8201  00184C  0012               	return	
  8202  00184E  D7E9               	goto	i2l3509
  8203  001850                     __end_ofi2_memcpy:
  8204                           	opt stack 0
  8205                           pclatu	equ	0xFFB
  8206                           pclath	equ	0xFFA
  8207                           tblptru	equ	0xFF8
  8208                           tblptrh	equ	0xFF7
  8209                           tblptrl	equ	0xFF6
  8210                           tablat	equ	0xFF5
  8211                           prodh	equ	0xFF4
  8212                           prodl	equ	0xFF3
  8213                           intcon	equ	0xFF2
  8214                           postinc0	equ	0xFEE
  8215                           fsr0h	equ	0xFEA
  8216                           fsr0l	equ	0xFE9
  8217                           wreg	equ	0xFE8
  8218                           indf1	equ	0xFE7
  8219                           fsr1h	equ	0xFE2
  8220                           fsr1l	equ	0xFE1
  8221                           bsr	equ	0xFE0
  8222                           indf2	equ	0xFDF
  8223                           postinc2	equ	0xFDE
  8224                           postdec2	equ	0xFDD
  8225                           fsr2h	equ	0xFDA
  8226                           fsr2l	equ	0xFD9
  8227                           status	equ	0xFD8
  8228                           
  8229 ;; *************** function _SleepIfOkay *****************
  8230 ;; Defined at:
  8231 ;;		line 228 in file "../src/messages.c"
  8232 ;; Parameters:    Size  Location     Type
  8233 ;;		None
  8234 ;; Auto vars:     Size  Location     Type
  8235 ;;		None
  8236 ;; Return value:  Size  Location     Type
  8237 ;;		None               void
  8238 ;; Registers used:
  8239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8240 ;; Tracked objects:
  8241 ;;		On entry : 0/0
  8242 ;;		On exit  : 0/0
  8243 ;;		Unchanged: 0/0
  8244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8245 ;;      Params:         0       0       0       0       0
  8246 ;;      Locals:         0       0       0       0       0
  8247 ;;      Temps:          0       0       0       0       0
  8248 ;;      Totals:         0       0       0       0       0
  8249 ;;Total ram usage:        0 bytes
  8250 ;; Hardware stack levels used:    1
  8251 ;; Hardware stack levels required when called:    2
  8252 ;; This function calls:
  8253 ;;		_enter_sleep_mode
  8254 ;;		i2_check_msg
  8255 ;;		i2_in_high_int
  8256 ;;		i2_in_low_int
  8257 ;; This function is called by:
  8258 ;;		_InterruptHandlerHigh
  8259 ;; This function uses a non-reentrant model
  8260 ;;
  8261                           
  8262                           	psect	text51
  8263  0015EA                     __ptext51:
  8264                           	opt stack 0
  8265  0015EA                     _SleepIfOkay:
  8266                           	opt stack 17
  8267                           
  8268                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8269                           
  8270                           ;incstack = 0
  8271  0015EA  664F               	tstfsz	_MQ_Main_Willing_to_block,c
  8272  0015EC  D001               	goto	i2l3185
  8273  0015EE  0012               	return	
  8274  0015F0                     i2l3185:
  8275                           
  8276                           ;messages.c: 232: }
  8277                           ;messages.c: 235: if (in_low_int()) {
  8278  0015F0  ECD1  F00C         	call	i2_in_low_int	;wreg free
  8279  0015F4  5032               	movf	?i2_in_low_int+1,w,c
  8280  0015F6  1031               	iorwf	?i2_in_low_int,w,c
  8281  0015F8  A4D8               	btfss	status,2,c
  8282  0015FA  0012               	return	
  8283                           
  8284                           ;messages.c: 237: }
  8285                           ;messages.c: 240: if (!in_high_int()) {
  8286                           
  8287                           ;messages.c: 236: return;
  8288  0015FC  ECA8  F00D         	call	i2_in_high_int	;wreg free
  8289  001600  5030               	movf	?i2_in_high_int+1,w,c
  8290  001602  102F               	iorwf	?i2_in_high_int,w,c
  8291  001604  B4D8               	btfsc	status,2,c
  8292  001606  0012               	return	
  8293                           
  8294                           ;messages.c: 242: }
  8295                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8296                           
  8297                           ;messages.c: 241: return;
  8298  001608  0101               	movlb	1	; () banked
  8299  00160A  0E01               	movlw	high _ToMainHigh_MQ
  8300  00160C  6E30               	movwf	i2check_msg@qptr+1,c
  8301  00160E  0101               	movlb	1	; () banked
  8302  001610  0E6C               	movlw	low _ToMainHigh_MQ
  8303  001612  6E2F               	movwf	i2check_msg@qptr,c
  8304  001614  EC37  F00D         	call	i2_check_msg	;wreg free
  8305  001618  0900               	iorlw	0
  8306  00161A  A4D8               	btfss	status,2,c
  8307  00161C  0012               	return	
  8308                           
  8309                           ;messages.c: 249: }
  8310                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8311                           
  8312                           ;messages.c: 248: return;
  8313  00161E  0100               	movlb	0	; () banked
  8314  001620  0E00               	movlw	high _ToMainLow_MQ
  8315  001622  6E30               	movwf	i2check_msg@qptr+1,c
  8316  001624  0100               	movlb	0	; () banked
  8317  001626  0E80               	movlw	low _ToMainLow_MQ
  8318  001628  6E2F               	movwf	i2check_msg@qptr,c
  8319  00162A  EC37  F00D         	call	i2_check_msg	;wreg free
  8320  00162E  0900               	iorlw	0
  8321  001630  B4D8               	btfsc	status,2,c
  8322                           
  8323                           ;messages.c: 252: }
  8324                           ;messages.c: 253: enter_sleep_mode();
  8325                           
  8326                           ;messages.c: 251: return;
  8327  001632  ECB7  F00D         	call	_enter_sleep_mode	;wreg free
  8328  001636  0012               	return	
  8329  001638                     __end_of_SleepIfOkay:
  8330                           	opt stack 0
  8331                           pclatu	equ	0xFFB
  8332                           pclath	equ	0xFFA
  8333                           tblptru	equ	0xFF8
  8334                           tblptrh	equ	0xFF7
  8335                           tblptrl	equ	0xFF6
  8336                           tablat	equ	0xFF5
  8337                           prodh	equ	0xFF4
  8338                           prodl	equ	0xFF3
  8339                           intcon	equ	0xFF2
  8340                           postinc0	equ	0xFEE
  8341                           fsr0h	equ	0xFEA
  8342                           fsr0l	equ	0xFE9
  8343                           wreg	equ	0xFE8
  8344                           indf1	equ	0xFE7
  8345                           fsr1h	equ	0xFE2
  8346                           fsr1l	equ	0xFE1
  8347                           bsr	equ	0xFE0
  8348                           indf2	equ	0xFDF
  8349                           postinc2	equ	0xFDE
  8350                           postdec2	equ	0xFDD
  8351                           fsr2h	equ	0xFDA
  8352                           fsr2l	equ	0xFD9
  8353                           status	equ	0xFD8
  8354                           
  8355 ;; *************** function i2_in_low_int *****************
  8356 ;; Defined at:
  8357 ;;		line 39 in file "../src/interrupts.c"
  8358 ;; Parameters:    Size  Location     Type
  8359 ;;		None
  8360 ;; Auto vars:     Size  Location     Type
  8361 ;;		None
  8362 ;; Return value:  Size  Location     Type
  8363 ;;                  2   48[COMRAM] int 
  8364 ;; Registers used:
  8365 ;;		wreg, status,2, status,0, cstack
  8366 ;; Tracked objects:
  8367 ;;		On entry : 0/0
  8368 ;;		On exit  : 0/0
  8369 ;;		Unchanged: 0/0
  8370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8371 ;;      Params:         2       0       0       0       0
  8372 ;;      Locals:         0       0       0       0       0
  8373 ;;      Temps:          0       0       0       0       0
  8374 ;;      Totals:         2       0       0       0       0
  8375 ;;Total ram usage:        2 bytes
  8376 ;; Hardware stack levels used:    1
  8377 ;; Hardware stack levels required when called:    1
  8378 ;; This function calls:
  8379 ;;		i2_in_high_int
  8380 ;; This function is called by:
  8381 ;;		_SleepIfOkay
  8382 ;; This function uses a non-reentrant model
  8383 ;;
  8384                           
  8385                           	psect	text52
  8386  0019A2                     __ptext52:
  8387                           	opt stack 0
  8388  0019A2                     i2_in_low_int:
  8389                           	opt stack 17
  8390                           
  8391                           ;interrupts.c: 40: if (INTCONbits.GIEL == 1) {
  8392                           
  8393                           ;incstack = 0
  8394  0019A2  ACF2               	btfss	intcon,6,c	;volatile
  8395  0019A4  D005               	goto	i2l3435
  8396                           
  8397                           ;interrupts.c: 41: return (0);
  8398  0019A6  0E00               	movlw	0
  8399  0019A8  6E32               	movwf	?i2_in_low_int+1,c
  8400  0019AA  0E00               	movlw	0
  8401  0019AC  6E31               	movwf	?i2_in_low_int,c
  8402  0019AE  0012               	return	
  8403  0019B0                     i2l3435:
  8404  0019B0  ECA8  F00D         	call	i2_in_high_int	;wreg free
  8405  0019B4  5030               	movf	?i2_in_high_int+1,w,c
  8406  0019B6  102F               	iorwf	?i2_in_high_int,w,c
  8407  0019B8  B4D8               	btfsc	status,2,c
  8408  0019BA  D005               	goto	i2l3443
  8409                           
  8410                           ;interrupts.c: 43: return (0);
  8411  0019BC  0E00               	movlw	0
  8412  0019BE  6E32               	movwf	?i2_in_low_int+1,c
  8413  0019C0  0E00               	movlw	0
  8414  0019C2  6E31               	movwf	?i2_in_low_int,c
  8415  0019C4  0012               	return	
  8416  0019C6                     i2l3443:
  8417                           
  8418                           ;interrupts.c: 45: return (1);
  8419  0019C6  0E00               	movlw	0
  8420  0019C8  6E32               	movwf	?i2_in_low_int+1,c
  8421  0019CA  0E01               	movlw	1
  8422  0019CC  6E31               	movwf	?i2_in_low_int,c
  8423  0019CE  0012               	return	
  8424  0019D0                     __end_ofi2_in_low_int:
  8425                           	opt stack 0
  8426                           pclatu	equ	0xFFB
  8427                           pclath	equ	0xFFA
  8428                           tblptru	equ	0xFF8
  8429                           tblptrh	equ	0xFF7
  8430                           tblptrl	equ	0xFF6
  8431                           tablat	equ	0xFF5
  8432                           prodh	equ	0xFF4
  8433                           prodl	equ	0xFF3
  8434                           intcon	equ	0xFF2
  8435                           postinc0	equ	0xFEE
  8436                           fsr0h	equ	0xFEA
  8437                           fsr0l	equ	0xFE9
  8438                           wreg	equ	0xFE8
  8439                           indf1	equ	0xFE7
  8440                           fsr1h	equ	0xFE2
  8441                           fsr1l	equ	0xFE1
  8442                           bsr	equ	0xFE0
  8443                           indf2	equ	0xFDF
  8444                           postinc2	equ	0xFDE
  8445                           postdec2	equ	0xFDD
  8446                           fsr2h	equ	0xFDA
  8447                           fsr2l	equ	0xFD9
  8448                           status	equ	0xFD8
  8449                           
  8450 ;; *************** function i2_in_high_int *****************
  8451 ;; Defined at:
  8452 ;;		line 31 in file "../src/interrupts.c"
  8453 ;; Parameters:    Size  Location     Type
  8454 ;;		None
  8455 ;; Auto vars:     Size  Location     Type
  8456 ;;		None
  8457 ;; Return value:  Size  Location     Type
  8458 ;;                  2   46[COMRAM] int 
  8459 ;; Registers used:
  8460 ;;		wreg, status,2
  8461 ;; Tracked objects:
  8462 ;;		On entry : 0/0
  8463 ;;		On exit  : 0/0
  8464 ;;		Unchanged: 0/0
  8465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8466 ;;      Params:         2       0       0       0       0
  8467 ;;      Locals:         0       0       0       0       0
  8468 ;;      Temps:          0       0       0       0       0
  8469 ;;      Totals:         2       0       0       0       0
  8470 ;;Total ram usage:        2 bytes
  8471 ;; Hardware stack levels used:    1
  8472 ;; This function calls:
  8473 ;;		Nothing
  8474 ;; This function is called by:
  8475 ;;		_SleepIfOkay
  8476 ;;		i2_in_low_int
  8477 ;; This function uses a non-reentrant model
  8478 ;;
  8479                           
  8480                           	psect	text53
  8481  001B50                     __ptext53:
  8482                           	opt stack 0
  8483  001B50                     i2_in_high_int:
  8484                           	opt stack 17
  8485                           
  8486                           ;interrupts.c: 32: return (!INTCONbits.GIEH);
  8487                           
  8488                           ;incstack = 0
  8489  001B50  0E00               	movlw	0
  8490  001B52  AEF2               	btfss	intcon,7,c	;volatile
  8491  001B54  0E01               	movlw	1
  8492  001B56  6E2F               	movwf	?i2_in_high_int,c
  8493  001B58  6A30               	clrf	?i2_in_high_int+1,c
  8494  001B5A  0012               	return	
  8495  001B5C                     __end_ofi2_in_high_int:
  8496                           	opt stack 0
  8497                           pclatu	equ	0xFFB
  8498                           pclath	equ	0xFFA
  8499                           tblptru	equ	0xFF8
  8500                           tblptrh	equ	0xFF7
  8501                           tblptrl	equ	0xFF6
  8502                           tablat	equ	0xFF5
  8503                           prodh	equ	0xFF4
  8504                           prodl	equ	0xFF3
  8505                           intcon	equ	0xFF2
  8506                           postinc0	equ	0xFEE
  8507                           fsr0h	equ	0xFEA
  8508                           fsr0l	equ	0xFE9
  8509                           wreg	equ	0xFE8
  8510                           indf1	equ	0xFE7
  8511                           fsr1h	equ	0xFE2
  8512                           fsr1l	equ	0xFE1
  8513                           bsr	equ	0xFE0
  8514                           indf2	equ	0xFDF
  8515                           postinc2	equ	0xFDE
  8516                           postdec2	equ	0xFDD
  8517                           fsr2h	equ	0xFDA
  8518                           fsr2l	equ	0xFD9
  8519                           status	equ	0xFD8
  8520                           
  8521 ;; *************** function i2_check_msg *****************
  8522 ;; Defined at:
  8523 ;;		line 222 in file "../src/messages.c"
  8524 ;; Parameters:    Size  Location     Type
  8525 ;;  qptr            2   46[COMRAM] PTR struct __msg_queue
  8526 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8527 ;; Auto vars:     Size  Location     Type
  8528 ;;		None
  8529 ;; Return value:  Size  Location     Type
  8530 ;;                  1    wreg      unsigned char 
  8531 ;; Registers used:
  8532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8533 ;; Tracked objects:
  8534 ;;		On entry : 0/0
  8535 ;;		On exit  : 0/0
  8536 ;;		Unchanged: 0/0
  8537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8538 ;;      Params:         2       0       0       0       0
  8539 ;;      Locals:         0       0       0       0       0
  8540 ;;      Temps:          1       0       0       0       0
  8541 ;;      Totals:         3       0       0       0       0
  8542 ;;Total ram usage:        3 bytes
  8543 ;; Hardware stack levels used:    1
  8544 ;; This function calls:
  8545 ;;		Nothing
  8546 ;; This function is called by:
  8547 ;;		_SleepIfOkay
  8548 ;; This function uses a non-reentrant model
  8549 ;;
  8550                           
  8551                           	psect	text54
  8552  001A6E                     __ptext54:
  8553                           	opt stack 0
  8554  001A6E                     i2_check_msg:
  8555                           	opt stack 18
  8556                           
  8557                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8558                           
  8559                           ;incstack = 0
  8560  001A6E  EE20 F035          	lfsr	2,53
  8561  001A72  502F               	movf	i2check_msg@qptr,w,c
  8562  001A74  26D9               	addwf	fsr2l,f,c
  8563  001A76  5030               	movf	i2check_msg@qptr+1,w,c
  8564  001A78  22DA               	addwfc	fsr2h,f,c
  8565  001A7A  50DF               	movf	indf2,w,c
  8566  001A7C  6E31               	movwf	??i2_check_msg& (0+255),c
  8567  001A7E  5031               	movf	??i2_check_msg,w,c
  8568  001A80  0D0D               	mullw	13
  8569  001A82  50F3               	movf	prodl,w,c
  8570  001A84  242F               	addwf	i2check_msg@qptr,w,c
  8571  001A86  6ED9               	movwf	fsr2l,c
  8572  001A88  50F4               	movf	prodh,w,c
  8573  001A8A  2030               	addwfc	i2check_msg@qptr+1,w,c
  8574  001A8C  6EDA               	movwf	fsr2h,c
  8575  001A8E  50DF               	movf	indf2,w,c
  8576  001A90  0012               	return	
  8577  001A92                     __end_ofi2_check_msg:
  8578                           	opt stack 0
  8579                           pclatu	equ	0xFFB
  8580                           pclath	equ	0xFFA
  8581                           tblptru	equ	0xFF8
  8582                           tblptrh	equ	0xFF7
  8583                           tblptrl	equ	0xFF6
  8584                           tablat	equ	0xFF5
  8585                           prodh	equ	0xFF4
  8586                           prodl	equ	0xFF3
  8587                           intcon	equ	0xFF2
  8588                           postinc0	equ	0xFEE
  8589                           fsr0h	equ	0xFEA
  8590                           fsr0l	equ	0xFE9
  8591                           wreg	equ	0xFE8
  8592                           indf1	equ	0xFE7
  8593                           fsr1h	equ	0xFE2
  8594                           fsr1l	equ	0xFE1
  8595                           bsr	equ	0xFE0
  8596                           indf2	equ	0xFDF
  8597                           postinc2	equ	0xFDE
  8598                           postdec2	equ	0xFDD
  8599                           fsr2h	equ	0xFDA
  8600                           fsr2l	equ	0xFD9
  8601                           status	equ	0xFD8
  8602                           
  8603 ;; *************** function _enter_sleep_mode *****************
  8604 ;; Defined at:
  8605 ;;		line 202 in file "../src/messages.c"
  8606 ;; Parameters:    Size  Location     Type
  8607 ;;		None
  8608 ;; Auto vars:     Size  Location     Type
  8609 ;;		None
  8610 ;; Return value:  Size  Location     Type
  8611 ;;		None               void
  8612 ;; Registers used:
  8613 ;;		None
  8614 ;; Tracked objects:
  8615 ;;		On entry : 0/0
  8616 ;;		On exit  : 0/0
  8617 ;;		Unchanged: 0/0
  8618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8619 ;;      Params:         0       0       0       0       0
  8620 ;;      Locals:         0       0       0       0       0
  8621 ;;      Temps:          0       0       0       0       0
  8622 ;;      Totals:         0       0       0       0       0
  8623 ;;Total ram usage:        0 bytes
  8624 ;; Hardware stack levels used:    1
  8625 ;; This function calls:
  8626 ;;		Nothing
  8627 ;; This function is called by:
  8628 ;;		_SleepIfOkay
  8629 ;; This function uses a non-reentrant model
  8630 ;;
  8631                           
  8632                           	psect	text55
  8633  001B6E                     __ptext55:
  8634                           	opt stack 0
  8635  001B6E                     _enter_sleep_mode:
  8636                           	opt stack 18
  8637                           
  8638                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8639                           
  8640                           ;incstack = 0
  8641  001B6E  8ED3               	bsf	4051,7,c	;volatile
  8642  001B70  0003               	sleep		;# 
  8643  001B72  0012               	return	
  8644  001B74                     __end_of_enter_sleep_mode:
  8645                           	opt stack 0
  8646                           pclatu	equ	0xFFB
  8647                           pclath	equ	0xFFA
  8648                           tblptru	equ	0xFF8
  8649                           tblptrh	equ	0xFF7
  8650                           tblptrl	equ	0xFF6
  8651                           tablat	equ	0xFF5
  8652                           prodh	equ	0xFF4
  8653                           prodl	equ	0xFF3
  8654                           intcon	equ	0xFF2
  8655                           postinc0	equ	0xFEE
  8656                           fsr0h	equ	0xFEA
  8657                           fsr0l	equ	0xFE9
  8658                           wreg	equ	0xFE8
  8659                           indf1	equ	0xFE7
  8660                           fsr1h	equ	0xFE2
  8661                           fsr1l	equ	0xFE1
  8662                           bsr	equ	0xFE0
  8663                           indf2	equ	0xFDF
  8664                           postinc2	equ	0xFDE
  8665                           postdec2	equ	0xFDD
  8666                           fsr2h	equ	0xFDA
  8667                           fsr2l	equ	0xFD9
  8668                           status	equ	0xFD8
  8669                           
  8670 ;; *************** function _ReadADC *****************
  8671 ;; Defined at:
  8672 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcread.c"
  8673 ;; Parameters:    Size  Location     Type
  8674 ;;		None
  8675 ;; Auto vars:     Size  Location     Type
  8676 ;;		None
  8677 ;; Return value:  Size  Location     Type
  8678 ;;                  2   46[COMRAM] int 
  8679 ;; Registers used:
  8680 ;;		wreg, status,2
  8681 ;; Tracked objects:
  8682 ;;		On entry : 0/0
  8683 ;;		On exit  : 0/0
  8684 ;;		Unchanged: 0/0
  8685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8686 ;;      Params:         2       0       0       0       0
  8687 ;;      Locals:         0       0       0       0       0
  8688 ;;      Temps:          0       0       0       0       0
  8689 ;;      Totals:         2       0       0       0       0
  8690 ;;Total ram usage:        2 bytes
  8691 ;; Hardware stack levels used:    1
  8692 ;; This function calls:
  8693 ;;		Nothing
  8694 ;; This function is called by:
  8695 ;;		_InterruptHandlerHigh
  8696 ;; This function uses a non-reentrant model
  8697 ;;
  8698                           
  8699                           	psect	text56
  8700  001B5C                     __ptext56:
  8701                           	opt stack 0
  8702  001B5C                     _ReadADC:
  8703                           	opt stack 19
  8704                           
  8705                           ;incstack = 0
  8706  001B5C  50C4               	movf	4036,w,c	;volatile
  8707  001B5E  6E30               	movwf	?_ReadADC+1,c
  8708  001B60  50C3               	movf	4035,w,c	;volatile
  8709  001B62  6E2F               	movwf	?_ReadADC,c
  8710  001B64  0012               	return	
  8711  001B66                     __end_of_ReadADC:
  8712                           	opt stack 0
  8713  0000                     pclatu	equ	0xFFB
  8714                           pclath	equ	0xFFA
  8715                           tblptru	equ	0xFF8
  8716                           tblptrh	equ	0xFF7
  8717                           tblptrl	equ	0xFF6
  8718                           tablat	equ	0xFF5
  8719                           prodh	equ	0xFF4
  8720                           prodl	equ	0xFF3
  8721                           intcon	equ	0xFF2
  8722                           postinc0	equ	0xFEE
  8723                           fsr0h	equ	0xFEA
  8724                           fsr0l	equ	0xFE9
  8725                           wreg	equ	0xFE8
  8726                           indf1	equ	0xFE7
  8727                           fsr1h	equ	0xFE2
  8728                           fsr1l	equ	0xFE1
  8729                           bsr	equ	0xFE0
  8730                           indf2	equ	0xFDF
  8731                           postinc2	equ	0xFDE
  8732                           postdec2	equ	0xFDD
  8733                           fsr2h	equ	0xFDA
  8734                           fsr2l	equ	0xFD9
  8735                           status	equ	0xFD8
  8736                           pclatu	equ	0xFFB
  8737                           pclath	equ	0xFFA
  8738                           tblptru	equ	0xFF8
  8739                           tblptrh	equ	0xFF7
  8740                           tblptrl	equ	0xFF6
  8741                           tablat	equ	0xFF5
  8742                           prodh	equ	0xFF4
  8743                           prodl	equ	0xFF3
  8744                           intcon	equ	0xFF2
  8745                           postinc0	equ	0xFEE
  8746                           fsr0h	equ	0xFEA
  8747                           fsr0l	equ	0xFE9
  8748                           wreg	equ	0xFE8
  8749                           indf1	equ	0xFE7
  8750                           fsr1h	equ	0xFE2
  8751                           fsr1l	equ	0xFE1
  8752                           bsr	equ	0xFE0
  8753                           indf2	equ	0xFDF
  8754                           postinc2	equ	0xFDE
  8755                           postdec2	equ	0xFDD
  8756                           fsr2h	equ	0xFDA
  8757                           fsr2l	equ	0xFD9
  8758                           status	equ	0xFD8
  8759                           
  8760                           	psect	rparam
  8761  0000                     pclatu	equ	0xFFB
  8762                           pclath	equ	0xFFA
  8763                           tblptru	equ	0xFF8
  8764                           tblptrh	equ	0xFF7
  8765                           tblptrl	equ	0xFF6
  8766                           tablat	equ	0xFF5
  8767                           prodh	equ	0xFF4
  8768                           prodl	equ	0xFF3
  8769                           intcon	equ	0xFF2
  8770                           postinc0	equ	0xFEE
  8771                           fsr0h	equ	0xFEA
  8772                           fsr0l	equ	0xFE9
  8773                           wreg	equ	0xFE8
  8774                           indf1	equ	0xFE7
  8775                           fsr1h	equ	0xFE2
  8776                           fsr1l	equ	0xFE1
  8777                           bsr	equ	0xFE0
  8778                           indf2	equ	0xFDF
  8779                           postinc2	equ	0xFDE
  8780                           postdec2	equ	0xFDD
  8781                           fsr2h	equ	0xFDA
  8782                           fsr2l	equ	0xFD9
  8783                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     76      80
    BANK0           128     43     101
    BANK1           256     74     236
    BANK2           256      0       0
    BANK3           256      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@t1thread_data(BANK1[2]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@t1thread_data(BANK1[2]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK1[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@t1thread_data(BANK1[2]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_timer0_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _initADC->_OpenADC
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0   11820
                                             20 BANK1     54    54      0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                            _initADC
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _returnADCValue
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     344
                                             27 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    3046
                                             10 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                             27 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2309
                                              6 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2062
                                             37 BANK0      6     0      6
                                              0 BANK1      6     6      0
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     279
                                             27 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     130
                                             27 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _returnADCValue                                       4     2      2      24
                                             27 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      86
                                             27 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      86
                                             27 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     390
                                             31 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     390
                                             27 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                             27 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initADC                                              4     4      0     283
                                             32 BANK0      4     4      0
                         _ConvertADC
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             27 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             27 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     270
                                             33 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             31 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             29 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             27 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                             27 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             27 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2480
                                             39 BANK0      4     0      4
                                             12 BANK1      1     1      0
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2480
                                             39 BANK0      4     0      4
                                             12 BANK1      1     1      0
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2233
                                             37 BANK0      2     2      0
                                              0 BANK1     12     5      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     636
                                             27 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     284
                                             27 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             27 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    4938
                                             29 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
                       i1_ConvertADC
 ---------------------------------------------------------------------------------
 (6) i1_ConvertADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    2416
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    2522
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2393
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    1943
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               18    18      0   11021
                                              9 BANK0     18    18      0
                            _ReadADC
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  7     7      0    6720
                                             75 COMRAM     1     1      0
                                              0 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     176
                                             46 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    2994
                                             70 COMRAM     5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    2747
                                             56 COMRAM    14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    11    11      0    3983
                                             72 COMRAM     2     2      0
                                              0 BANK0      9     9      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      31
                                             46 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    3368
                                             68 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2659
                                             56 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6    1108
                                             46 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     284
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             48 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     284
                                             46 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ReadADC                                             2     0      2       0
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _initADC
     _ConvertADC
     _OpenADC
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _returnADCValue
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   i1_ConvertADC

 _InterruptHandlerHigh (ROOT)
   _ReadADC
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0      10        0.0%
BANK1              100     4A      EC       6       92.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2B      65       5       78.9%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     4C      50       1       63.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A1       9        0.0%
DATA                 0      0     1A1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Thu Feb 06 17:08:38 2014

                main@uthread_data 01C2          _MQ_Main_Willing_to_block 004F  
                     _SSPSTATbits 000FC7         __end_of_ToMainLow_recvmsg 178E  
                              bsr 000FE0         __end_of_ToMainLow_sendmsg 1A48  
                ??_returnADCValue 00D3                      __CFG_CP0$OFF 000000  
               i2recv_msg@msgtype 003C                 i2recv_msg@tlength 0043  
                             l125 07BC                               l414 134A  
                             l444 18E6                               l446 18FE  
                             l447 1900                               l721 1AD2  
                             l492 1202                               l493 1204  
                             l494 1212                               l495 1214  
                             l488 11E2              __size_of_WriteTimer0 0012  
            __size_of_WriteTimer1 0012                    _FromMainLow_MQ 0136  
                             wreg 000FE8                      __CFG_IESO$ON 000000  
                    ?_in_high_int 00D1                  ??_init_uart_recv 00D3  
                 ReadTimer1@timer 0003               i2recv_msg@maxlength 003B  
                            l1033 12C0                              l2165 16B6  
                            l2157 1694                              l2179 16FA  
                            l3315 0C1E                              l3411 125E  
                            l2621 10BA                              l2613 108C  
                            l3413 1270                              l2527 18E8  
                            l3335 15D2                              l3415 1278  
                            l3255 07F4                              l3247 076A  
                            l3271 0864                              l3239 0728  
                            l3329 15AE                              l2641 0AD0  
                            l3281 0912                              l3249 07C2  
                            l3265 082C                              l3273 0882  
                            l3419 12AC                              l3259 080A  
                            l3267 0844                              l3349 09EA  
                            l3365 0AB0                              l2629 10E8  
                            l2645 0B54                              l3285 0964  
                            l2575 11E4                              l2567 11CE  
                            l3279 08C0                              l2679 1396  
                            _LATB 000F8A                              u1600 10F6  
                            u1606 10F8                              u2507 1AD4  
                            i1l57 0074                   _FromMainHigh_MQ 0100  
                   __CFG_FCMEN$ON 000000            ?_block_on_To_msgqueues 0001  
                            _main 069C                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              indf1 000FE7  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                       main@msgtype 01CE  
                      i1_send_msg 0F18                              pclat 000FFA  
                     i2_check_msg 1A6E                              prodh 000FF4  
                            prodl 000FF3             handle_start@data_read 002F  
                            start 00BA                        i2_recv_msg 0CC6  
                   __CFG_FOSC2$ON 000000                        i2_send_msg 0FC2  
       ToMainHigh_recvmsg@msgtype 00DD                   __end_of_ReadADC 1B66  
                  send_msg@length 00DD                   __end_of_OpenADC 134E  
     __size_of_timer0_int_handler 007A                       _Delay1KTCYx 1ACE  
                           ?_main 0001                             _T1CON 000FCD  
                 __end_of___lwmod 12CA                             i1l506 1ABE  
                      i1memcpy@d1 0001                             i2l312 0456  
                           i2l304 032A                             i2l318 04EA  
                           i2l274 0E14                             i2l290 01A8  
                           i2l284 04D8                             i2l286 016A  
                      i1memcpy@s1 0003       FromMainHigh_recvmsg@msgtype 0047  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR1H 000FCF  
                           _TMR0L 000FD6                             _TMR1L 000FCE  
                           _SPBRG 000FAF                             _TRISB 000F93  
                           _TXSTA 000FAC                        i2memcpy@d1 002F  
                      i2memcpy@s1 0031                      ?_init_queues 0001  
              returnADCValue@temp 00D3         __size_of_enter_sleep_mode 0006  
                 __end_of_initADC 174C                   __end_of_in_main 170A  
      ToMainLow_recvmsg@maxlength 01AE           timer0_lthread@msgbuffer 00D7  
                      _ConvertADC 1B74           i2c_configure_slave@addr 00D1  
                           tablat 000FF5                             status 000FD8  
                __end_ofi1_memcpy 1810                  __end_ofi2_memcpy 1850  
                 __initialization 1850                      __end_of_main 097E  
                      _ReadTimer1 1B2C       __size_of_timer1_int_handler 0048  
      __size_of_ToMainLow_recvmsg 0042        __size_of_ToMainLow_sendmsg 0026  
   __size_of_FromMainHigh_recvmsg 002A             __size_ofi2_in_low_int 002E  
   __size_of_FromMainHigh_sendmsg 0036                            ??_main 01B6  
                 send_msg@msgtype 00DE                     __activetblptr 000002  
                 send_msg@tlength 01A3              __end_of_handle_start 0E60  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                            _ADRESH 000FC4  
                          _ADRESL 000FC3           ??_uart_recv_int_handler 001B  
                          i1l2921 17FE                            i1l2915 17E2  
                          i2l3111 03EA                            i2l3023 0EDA  
                          i2l3015 0EA4                            i2l3105 039A  
                          i2l3009 0E9A                            i1l2945 0F50  
                          i2l3107 03DC                            i2l3133 04AC  
                          i2l3045 0160                            i1l2981 118E  
                          i2l3063 01DC                            i2l3039 014C  
                          i2l3401 0E30                            i2l3161 066A  
                          i2l3153 05D4                            i2l3145 054E  
                          i2l3081 025C                            i2l3065 0208  
                      _OpenTimer1 18CC                            i2l3403 0E48  
                          i2l3139 04EE                            i2l3083 029C  
                          i2l3075 0244                            i1l2995 006A  
                  __CFG_WDTEN$OFF 000000                            i2l3185 15F0  
                          i2l3443 19C6                            i2l3435 19B0  
                          i2l3515 183E                            i2l3509 1822  
                          i2l3459 0FFA                            i2l3483 0D0C  
                          i2l3499 0D94       __end_of_i2c_configure_slave 1A22  
                   ??_SleepIfOkay 0033                __size_of_ReadUSART 001E  
                          _OSCCON 000FD3                            _SPBRGH 000FB0  
                          _SSPADD 000FC8                            _SSPBUF 000FC9  
  __size_of_start_i2c_slave_reply 010E                       ?i1_send_msg 000B  
                       ??_ReadADC 0031     __end_of_start_i2c_slave_reply 0BC2  
              timer0_lthread@tptr 00D1                       ?i2_recv_msg 0039  
                       ??_OpenADC 00D3                      i2_in_low_int 19A2  
                     ?i2_send_msg 0039                    __CFG_XINST$OFF 000000  
              __size_of_OpenUSART 0092                   _i2c_int_handler 00BE  
                          _ic_ptr 00E1                         ??___lwmod 00D5  
                   main@msgbuffer 01B7                  __end_of_init_i2c 158C  
                OpenTimer1@config 00D1                            _memcpy 158C  
                          clear_0 1856                            clear_1 1862  
                          _uc_ptr 004D                            main@ic 01D0  
                          main@uc 01C7                  __end_of_recv_msg 0AB4  
     start_i2c_slave_reply@length 00D5                         ??_initADC 00D6  
                       ??_in_main 00D7                  __end_of_send_msg 0CC6  
                 initADC@ADCValue 00D8             timer0_int_handler@val 00BA  
         i2c_int_handler@i2c_data 00BB                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                     init_queue@i 00D4          ToMainLow_recvmsg@msgtype 00DD  
            __size_of_in_high_int 0012                       ?_ConvertADC 0001  
                 __CFG_FOSC$HSPLL 000000                        __accesstop 0080  
         __end_of__initialization 1884        __end_of_ToMainHigh_recvmsg 17D0  
      __end_of_ToMainHigh_sendmsg 1A6E       __end_of_init_timer1_lthread 1B08  
             __end_of_SleepIfOkay 1638                    __pcstackCOMRAM 0001  
                    __pidataBANK0 1B7C            __size_ofi2_in_high_int 000C  
                     ?_ReadTimer1 0001                __size_of_check_msg 0036  
               __end_of_ReadUSART 1ACE         timer0_int_handler@msgtype 00B8  
             __size_ofi1_send_msg 00AA                         ?i1_memcpy 0001  
   __size_of_InterruptHandlerHigh 0F10       __end_of_InterruptHandlerLow 00BA  
                       ?i2_memcpy 002F                     _ToMainHigh_MQ 016C  
             __size_ofi2_recv_msg 00D2                  _enter_sleep_mode 1B6E  
             __size_ofi2_send_msg 00AA              timer1_lthread@length 01B0  
                   ReadUSART@data 0001                 __end_of_OpenUSART 1240  
                   check_msg@qptr 00D1              timer1_lthread@retval 01B5  
         ??_block_on_To_msgqueues 00D7              __size_of_init_queues 006E  
                      __pbssBANK0 0080                        __pbssBANK1 0100  
                     ?_OpenTimer1 0001                        __pnvCOMRAM 004D  
         __end_of_i2c_int_handler 069C                      ?i2_check_msg 002F  
              timer1_lthread@tptr 01AC                 recv_msg@maxlength 01A4  
                 recv_msg@msgtype 01A5                   recv_msg@tlength 01AA  
           __size_of_handle_start 00C8                      ?_Delay1KTCYx 0001  
                WriteTimer0@timer 0031                           ?_memcpy 00D1  
                WriteTimer1@timer 0003                     ??_WriteTimer0 0031  
                   ??_WriteTimer1 0003               __size_of_ConvertADC 0004  
         __size_of_timer0_lthread 0012           __size_of_timer1_lthread 0072  
                      ??i1_memcpy 0007                        ??i2_memcpy 0035  
                i1send_msg@length 000D                     i2_in_high_int 1B50  
                         _SSPCON1 000FC6                           _SSPCON2 000FC5  
                         _SSPSTAT 000FC7               __size_of_ReadTimer1 0012  
               __end_of_check_msg 1970                         ?_init_i2c 00D1  
                     _SleepIfOkay 15EA                           _ReadADC 1B5C  
                       ?_recv_msg 01A2                           _OpenADC 12CA  
                      _in_low_int 1680                      _handle_start 0D98  
                         __Hparam 0000                         ?_send_msg 00DB  
                         __Lparam 0000        __end_of_timer0_int_handler 1442  
                init_uart_recv@uc 00D1                           ___lwmod 1240  
                   ?i1_ConvertADC 0001                   __CFG_STVREN$OFF 000000  
                         __pcinit 1850                   __size_of_memcpy 005E  
                      _init_queue 134E                           __ramtop 0400  
             __size_of_OpenTimer1 0038                           __ptext0 069C  
                         __ptext1 188E                           __ptext2 1442  
                         __ptext3 1240                           __ptext4 1904  
                         __ptext5 0BC2                           __ptext6 1AE4  
                         __ptext7 0AB4                           __ptext8 1970  
                         __ptext9 1A92                           _initADC 170A  
                         _in_main 16C6                         _T1CONbits 000FCD  
             __end_of_WriteTimer0 1B50               __end_of_WriteTimer1 1B2C  
                  ?i2_in_high_int 002F                    OpenADC@config2 00D1  
         __size_of_returnADCValue 0032                    __pintcode_body 0E60  
    __end_of_FromMainHigh_recvmsg 19FA              end_of_initialization 1884  
         timer1_lthread@msgbuffer 01B2      __end_of_FromMainHigh_sendmsg 193A  
  __size_of_uart_recv_int_handler 009C        FromMainHigh_sendmsg@length 01AB  
                         memcpy@d 00D7                           memcpy@n 00D5  
                         memcpy@s 00D9     __end_of_uart_recv_int_handler 11AE  
                      ??_init_i2c 00D3       i2c_int_handler@data_written 00B9  
                   __Lmediumconst 0000                           int_func 0E60  
                    ??i1_send_msg 0011                     ?_uart_lthread 00D1  
         __size_of_init_uart_recv 001E                  ?_i2c_int_handler 0001  
                    ??i2_recv_msg 0040                        ??_recv_msg 00DB  
                    ??i2_send_msg 003F                        ??_send_msg 01A2  
      __end_of_timer1_int_handler 1680                         _RCSTAbits 000FAB  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE         ToMainHigh_sendmsg@msgtype 0045  
                  ??i1_ConvertADC 0001                __end_ofi1_send_msg 0FC2  
     FromMainHigh_sendmsg@msgtype 01A8                         _TRISCbits 000F94  
              __end_ofi2_recv_msg 0D98                __end_ofi2_send_msg 106C  
                    ??_ConvertADC 00D1     FromMainHigh_recvmsg@maxlength 004B  
        timer1_int_handler@result 001C                    ??_uart_lthread 00D9  
                       _TXSTAbits 000FAC                        main@length 01CF  
                     ?_in_low_int 00D3             timer0_lthread@msgtype 00D3  
           _start_i2c_slave_reply 0AB4      __size_of_i2c_configure_slave 0028  
            __size_ofi2_check_msg 0024          __end_of_enter_sleep_mode 1B74  
                    ??_ReadTimer1 0003                _ToMainHigh_recvmsg 178E  
                       i1memcpy@d 0007                _ToMainHigh_sendmsg 1A48  
                       i1memcpy@n 0005                         i1memcpy@s 0009  
                  _timer0_lthread 1AE4                       ?_init_queue 00D1  
                       i2memcpy@d 0035                       _WriteTimer0 1B3E  
                     _WriteTimer1 1B1A                         i2memcpy@n 0033  
                       i2memcpy@s 0037                __end_of_ConvertADC 1B78  
                  _timer1_lthread 1442                    __end_of_memcpy 15EA  
               _enable_interrupts 1B66              __size_of_Delay1KTCYx 0016  
             ?_ToMainHigh_recvmsg 00DD                   ??i2_in_high_int 0031  
        i2c_int_handler@data_read 00BE               ?_ToMainHigh_sendmsg 0045  
              ?_enable_interrupts 0001               start_initialization 1850  
                   ??_in_high_int 00D3                         _ReadUSART 1AB0  
               __size_ofi1_memcpy 0040                 __size_ofi2_memcpy 0040  
             ??_enable_interrupts 00D1                      ??_OpenTimer1 00D1  
  __size_of_block_on_To_msgqueues 00A6                __end_of_ReadTimer1 1B3E  
   __end_of_block_on_To_msgqueues 1112                         _OpenUSART 11AE  
    __end_of_InterruptHandlerHigh 0F18                        init_i2c@ic 00D1  
            ??_ToMainHigh_recvmsg 00E1              ??_ToMainHigh_sendmsg 0048  
          __end_of_timer0_lthread 1AF6          i2c_int_handler@error_buf 00B6  
                     __pdataBANK0 00E3            __end_of_timer1_lthread 14B4  
       __end_of_enable_interrupts 1B6E                          ??_memcpy 00D7  
           timer1_lthread@msgtype 01AE              _FromMainHigh_recvmsg 19D0  
            _FromMainHigh_sendmsg 1904      __size_of_init_timer1_lthread 0012  
              __end_of_OpenTimer1 1904          i2c_int_handler@msg_ready 00BD  
                     __pbssCOMRAM 004F                        ?_ReadUSART 0001  
                   ??_init_queues 00D5                     __pcstackBANK0 00B6  
                   __pcstackBANK1 01A2               __size_of_in_low_int 0046  
        start_i2c_slave_reply@msg 00D1                    _returnADCValue 1970  
             __CFG_CCP2MX$DEFAULT 000000              __end_ofi1_ConvertADC 1B7C  
                 Delay1KTCYx@unit 00D1          ToMainLow_sendmsg@msgtype 0017  
    __size_of_InterruptHandlerLow 00A2               __end_of_in_high_int 1B1A  
                      ?_OpenUSART 00D1                      ?_SleepIfOkay 0001  
           ToMainLow_recvmsg@data 00DF                      _ToMainLow_MQ 0080  
             __size_of_init_queue 007A                    _init_uart_recv 1A92  
                        ?_ReadADC 002F                         _check_msg 193A  
                       __pnvBANK0 00E1            ?_start_i2c_slave_reply 00D1  
               __size_of_init_i2c 006A                 OpenADC@portconfig 00D2  
                        ?_OpenADC 00D1                      recv_msg@data 01A7  
                    recv_msg@qmsg 01AC                      recv_msg@slot 01A9  
                    recv_msg@qptr 01A2                 __size_of_recv_msg 0136  
                       __pintcode 0008                 __size_of_send_msg 0104  
                 ?_timer0_lthread 00D1                          ?___lwmod 00D1  
           ?_FromMainHigh_recvmsg 0047                   ?_timer1_lthread 01AC  
           ?_FromMainHigh_sendmsg 01A8                       __pintcodelo 0018  
          ToMainHigh_recvmsg@data 00DF              __end_of_uart_lthread 18CC  
                        ?_initADC 0001        i2c_int_handler@msg_to_send 00BC  
                        ?_in_main 00D5                 WriteTimer0@timer0 002F  
              _timer0_int_handler 13C8                 WriteTimer1@timer1 0001  
             uart_lthread@msgtype 00D3                          _ADCValue 00E3  
          __end_of_returnADCValue 19A2             ToMainLow_sendmsg@data 0018  
             ?_timer0_int_handler 0001                  uart_lthread@uptr 00D1  
          __end_of_init_uart_recv 1AB0               __end_of_init_queues 1522  
                   OpenADC@config 00D5                          _LATBbits 000F8A  
                 i2check_msg@qptr 002F                        ?_check_msg 00D1  
                        _IPR1bits 000F9F                          _PIE1bits 000F9D  
                   ?i2_in_low_int 0031                          i1u189_20 1640  
                        i1u189_26 1642                          i2u224_40 13D0  
                        i2u224_46 13D2                          _PIR1bits 000F9E  
          ToMainHigh_sendmsg@data 0046                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000              ??_timer0_int_handler 004C  
      __size_of_enable_interrupts 0008                 i1send_msg@msgtype 000E  
               i1send_msg@tlength 0012                        _ADCON0bits 000FC2  
            timer0_lthread@length 00D5                _timer1_int_handler 1638  
                        i1_memcpy 17D0              _InterruptHandlerHigh 0008  
                     ??_ReadUSART 0001                          i2_memcpy 1810  
            timer0_lthread@msgval 00D9          FromMainHigh_recvmsg@data 0049  
                 ?_returnADCValue 00D1                       _in_high_int 1B08  
                    send_msg@data 00DF               _i2c_configure_slave 19FA  
                    send_msg@qmsg 01A6                      send_msg@slot 01A5  
                    send_msg@qptr 00DB             uart_lthread@msgbuffer 00D7  
             ?_timer1_int_handler 0001                   ?_init_uart_recv 00D1  
                     ??_OpenUSART 00D3                   OpenUSART@config 00D6  
                  ??i2_in_low_int 0033             _uart_recv_int_handler 1112  
                    ??_in_low_int 00D5                  __size_of_ReadADC 000A  
                        __Hrparam 0000                  __size_of_OpenADC 0084  
            ?_i2c_configure_slave 0001                          __Lrparam 0000  
               ?_enter_sleep_mode 0001            ??_FromMainHigh_recvmsg 004B  
          ??_FromMainHigh_sendmsg 00E1              ??_timer1_int_handler 001B  
        __size_of_i2c_int_handler 05DE                ??_enter_sleep_mode 002F  
                __size_of___lwmod 008A                      ??_init_queue 00D3  
                    ?_WriteTimer0 002F                      ?_WriteTimer1 0001  
        FromMainHigh_sendmsg@data 01A9           ToMainLow_sendmsg@length 001A  
               main@t0thread_data 01C4             ?_InterruptHandlerHigh 0001  
                __size_of_initADC 0042                  __size_of_in_main 0044  
           __size_ofi1_ConvertADC 0004                 i2send_msg@msgtype 003C  
     ToMainHigh_recvmsg@maxlength 01AE                 i2send_msg@tlength 0040  
         init_timer1_lthread@tptr 00D1                       _init_queues 14B4  
              __end_of_in_low_int 16C6                          __ptext10 1AF6  
                        __ptext11 14B4                          __ptext20 16C6  
                        __ptext12 134E                          __ptext21 1680  
                        __ptext13 1522                          __ptext30 18CC  
                        __ptext22 1B08                          __ptext14 170A  
                        __ptext23 193A                          __ptext15 12CA  
                        __ptext40 1B2C                          __ptext32 1B78  
                        __ptext24 1ACE                          __ptext16 1B74  
                        __ptext33 1112                          __ptext25 174C  
                        __ptext17 19FA                          __ptext50 1810  
                        __ptext42 13C8                          __ptext34 1AB0  
                        __ptext26 178E                          __ptext18 1B66  
                        __ptext51 15EA                          __ptext43 1B3E  
                        __ptext35 1638                          __ptext27 097E  
                        __ptext19 106C                          __ptext52 19A2  
                        __ptext44 19D0                          __ptext36 1B1A  
                        __ptext28 158C                          __ptext53 1B50  
                        __ptext45 0CC6                          __ptext37 1A22  
                        __ptext29 11AE                          __ptext54 1A6E  
                        __ptext46 00BE                          __ptext38 0F18  
                        __ptext55 1B6E                          __ptext47 0D98  
                        __ptext39 17D0                          __ptext56 1B5C  
                        __ptext48 1A48                          __ptext49 0FC2  
                  i1send_msg@data 000F                    i1send_msg@qmsg 0015  
                  i1send_msg@slot 0014                    i1send_msg@qptr 000B  
              uart_lthread@length 00D5          timer0_int_handler@length 00B6  
                        _init_i2c 1522               _init_timer1_lthread 1AF6  
                   __size_of_main 02E2                     ??i2_check_msg 0031  
               main@t1thread_data 01CC                       ??_check_msg 00D3  
              __end_of_init_queue 13C8              __size_of_SleepIfOkay 004E  
                        _recv_msg 097E             ??_i2c_configure_slave 00D1  
                        _send_msg 0BC2                    init_queue@qptr 00D1  
           __size_of_uart_lthread 003E                    i2recv_msg@data 003E  
                  i2recv_msg@qmsg 0045                     ??_Delay1KTCYx 00D1  
                  i2recv_msg@slot 0042                    i2recv_msg@qptr 0039  
                    i1_ConvertADC 1B78               _InterruptHandlerLow 0018  
            ?_init_timer1_lthread 00D1                       _OSCTUNEbits 000F9B  
                      _INTCONbits 000FF2                    OpenUSART@spbrg 00D1  
                        memcpy@d1 00D1                          memcpy@s1 00D3  
           __end_ofi2_in_high_int 1B5C      i2c_int_handler@overrun_error 00BA  
                i2send_msg@length 003B                          intlevel1 0000  
                        intlevel2 0000              ?_InterruptHandlerLow 0001  
         ??_start_i2c_slave_reply 00D3                  ___lwmod@dividend 00D1  
          ?_uart_recv_int_handler 0001                      _uart_lthread 188E  
           _block_on_To_msgqueues 106C                     ?_handle_start 0001  
                ??_timer0_lthread 00D9       __size_of_ToMainHigh_recvmsg 0042  
     __size_of_ToMainHigh_sendmsg 0026                        _OSCCONbits 000FD3  
                ??_timer1_lthread 01B4          ToMainHigh_sendmsg@length 0048  
             __end_ofi2_check_msg 1A92             ??_init_timer1_lthread 00D3  
          ??_InterruptHandlerHigh 00BF                 _ToMainLow_recvmsg 174C  
               _ToMainLow_sendmsg 1A22                main@last_reg_recvd 01C6  
                 ___lwmod@divisor 00D3              __end_ofi2_in_low_int 19D0  
              ?_ToMainLow_recvmsg 00DD               __end_of_Delay1KTCYx 1AE4  
               ??_i2c_int_handler 0049                   ___lwmod@counter 00D6  
              ?_ToMainLow_sendmsg 0017                       _SSPCON1bits 000FC6  
                     _SSPCON2bits 000FC5                    i2send_msg@data 003D  
           ??_InterruptHandlerLow 001E               ??_ToMainLow_recvmsg 00E1  
                  i2send_msg@qmsg 0043                    i2send_msg@slot 0042  
                  i2send_msg@qptr 0039               ??_ToMainLow_sendmsg 001A  
                  ??_handle_start 002F  InterruptHandlerHigh@pureADCValue 00CF  
                    _USART_Status 0050  

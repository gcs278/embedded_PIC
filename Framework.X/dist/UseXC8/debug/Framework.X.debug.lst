

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Sun Feb 09 20:34:19 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    72  0000                     
    73                           	psect	idataCOMRAM
    74  001B46                     __pidataCOMRAM:
    75                           	opt stack 0
    76                           
    77                           ;initializer for _sendingPlaceHolder
    78  001B46  00ED               	dw	237
    79  0000                     _ADCON0	set	4034
    80  0000                     _ADCON0bits	set	4034
    81  0000                     _ADCON1	set	4033
    82  0000                     _ADCON2	set	4032
    83  0000                     _ADRESH	set	4036
    84  0000                     _ADRESL	set	4035
    85  0000                     _INTCON2bits	set	4081
    86  0000                     _INTCONbits	set	4082
    87  0000                     _IPR1bits	set	3999
    88  0000                     _LATB	set	3978
    89  0000                     _LATBbits	set	3978
    90  0000                     _OSCCON	set	4051
    91  0000                     _OSCCONbits	set	4051
    92  0000                     _OSCTUNEbits	set	3995
    93  0000                     _PIE1bits	set	3997
    94  0000                     _PIR1bits	set	3998
    95  0000                     _RCONbits	set	4048
    96  0000                     _RCREG	set	4014
    97  0000                     _RCSTA	set	4011
    98  0000                     _RCSTAbits	set	4011
    99  0000                     _SPBRG	set	4015
   100  0000                     _SPBRGH	set	4016
   101  0000                     _SSPADD	set	4040
   102  0000                     _SSPBUF	set	4041
   103  0000                     _SSPCON1	set	4038
   104  0000                     _SSPCON1bits	set	4038
   105  0000                     _SSPCON2	set	4037
   106  0000                     _SSPCON2bits	set	4037
   107  0000                     _SSPSTAT	set	4039
   108  0000                     _SSPSTATbits	set	4039
   109  0000                     _T0CON	set	4053
   110  0000                     _T0CONbits	set	4053
   111  0000                     _TMR0H	set	4055
   112  0000                     _TMR0L	set	4054
   113  0000                     _TMR1H	set	4047
   114  0000                     _TMR1L	set	4046
   115  0000                     _TRISB	set	3987
   116  0000                     _TRISBbits	set	3987
   117  0000                     _TRISCbits	set	3988
   118  0000                     _TXSTA	set	4012
   119  0000                     _TXSTAbits	set	4012
   120                           
   121                           	psect	nvCOMRAM
   122  000050                     __pnvCOMRAM:
   123                           	opt stack 0
   124  000050                     _uc_ptr:
   125                           	opt stack 0
   126  000050                     	ds	2
   127                           
   128                           	psect	nvBANK0
   129  0000CD                     __pnvBANK0:
   130                           	opt stack 0
   131  0000CD                     _ic_ptr:
   132                           	opt stack 0
   133  0000CD                     	ds	2
   134                           
   135                           ; #config settings
   136  0000                     
   137                           	psect	cinit
   138  001692                     __pcinit:
   139                           	opt stack 0
   140  001692                     start_initialization:
   141                           	opt stack 0
   142  001692                     __initialization:
   143                           	opt stack 0
   144                           
   145                           ; Clear objects allocated to BANK3 (237 bytes)
   146  001692  EE03  F000         	lfsr	0,__pbssBANK3
   147  001696  0EED               	movlw	237
   148  001698                     clear_0:
   149  001698  6AEE               	clrf	postinc0,c
   150  00169A  06E8               	decf	wreg,f,c
   151  00169C  E1FD               	bnz	clear_0
   152                           
   153                           ; Clear objects allocated to BANK2 (54 bytes)
   154  00169E  EE02  F000         	lfsr	0,__pbssBANK2
   155  0016A2  0E36               	movlw	54
   156  0016A4                     clear_1:
   157  0016A4  6AEE               	clrf	postinc0,c
   158  0016A6  06E8               	decf	wreg,f,c
   159  0016A8  E1FD               	bnz	clear_1
   160                           
   161                           ; Clear objects allocated to BANK1 (162 bytes)
   162  0016AA  EE01  F000         	lfsr	0,__pbssBANK1
   163  0016AE  0EA2               	movlw	162
   164  0016B0                     clear_2:
   165  0016B0  6AEE               	clrf	postinc0,c
   166  0016B2  06E8               	decf	wreg,f,c
   167  0016B4  E1FD               	bnz	clear_2
   168                           
   169                           ; Clear objects allocated to COMRAM (7 bytes)
   170  0016B6  EE00  F049         	lfsr	0,__pbssCOMRAM
   171  0016BA  0E07               	movlw	7
   172  0016BC                     clear_3:
   173  0016BC  6AEE               	clrf	postinc0,c
   174  0016BE  06E8               	decf	wreg,f,c
   175  0016C0  E1FD               	bnz	clear_3
   176                           
   177                           ; Initialize objects allocated to COMRAM (2 bytes)
   178                           ; load TBLPTR registers with __pidataCOMRAM
   179  0016C2  0E46               	movlw	low __pidataCOMRAM
   180  0016C4  6EF6               	movwf	tblptrl,c
   181  0016C6  0E1B               	movlw	high __pidataCOMRAM
   182  0016C8  6EF7               	movwf	tblptrh,c
   183  0016CA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   184  0016CC  6EF8               	movwf	tblptru,c
   185  0016CE  0009               	tblrd		*+	;fetch initializer
   186  0016D0  CFF5 F052          	movff	tablat,__pdataCOMRAM
   187  0016D4  0009               	tblrd		*+	;fetch initializer
   188  0016D6  CFF5 F053          	movff	tablat,__pdataCOMRAM+1
   189  0016DA                     end_of_initialization:
   190                           	opt stack 0
   191  0016DA                     __end_of__initialization:
   192                           	opt stack 0
   193  0016DA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   194  0016DC  6EF8               	movwf	tblptru,c
   195  0016DE  0100               	movlb	0
   196  0016E0  EF53  F003         	goto	_main	;jump to C main() function
   197                           tblptru	equ	0xFF8
   198                           tblptrh	equ	0xFF7
   199                           tblptrl	equ	0xFF6
   200                           tablat	equ	0xFF5
   201                           postinc0	equ	0xFEE
   202                           wreg	equ	0xFE8
   203                           
   204                           	psect	bssCOMRAM
   205  000049                     __pbssCOMRAM:
   206                           	opt stack 0
   207  000049                     _arrayPlaceHolder:
   208                           	opt stack 0
   209  000049                     	ds	2
   210  00004B                     _responding:
   211                           	opt stack 0
   212  00004B                     	ds	2
   213  00004D                     _ADCValue:
   214                           	opt stack 0
   215  00004D                     	ds	1
   216  00004E                     _MQ_Main_Willing_to_block:
   217                           	opt stack 0
   218  00004E                     	ds	1
   219  00004F                     _USART_Status:
   220                           	opt stack 0
   221  00004F                     	ds	1
   222                           tblptru	equ	0xFF8
   223                           tblptrh	equ	0xFF7
   224                           tblptrl	equ	0xFF6
   225                           tablat	equ	0xFF5
   226                           postinc0	equ	0xFEE
   227                           wreg	equ	0xFE8
   228                           
   229                           	psect	dataCOMRAM
   230  000052                     __pdataCOMRAM:
   231                           	opt stack 0
   232  000052                     _sendingPlaceHolder:
   233                           	opt stack 0
   234  000052                     	ds	2
   235                           tblptru	equ	0xFF8
   236                           tblptrh	equ	0xFF7
   237                           tblptrl	equ	0xFF6
   238                           tablat	equ	0xFF5
   239                           postinc0	equ	0xFEE
   240                           wreg	equ	0xFE8
   241                           
   242                           	psect	bssBANK1
   243  000100                     __pbssBANK1:
   244                           	opt stack 0
   245  000100                     _FromMainLow_MQ:
   246                           	opt stack 0
   247  000100                     	ds	54
   248  000136                     _ToMainHigh_MQ:
   249                           	opt stack 0
   250  000136                     	ds	54
   251  00016C                     _ToMainLow_MQ:
   252                           	opt stack 0
   253  00016C                     	ds	54
   254                           tblptru	equ	0xFF8
   255                           tblptrh	equ	0xFF7
   256                           tblptrl	equ	0xFF6
   257                           tablat	equ	0xFF5
   258                           postinc0	equ	0xFEE
   259                           wreg	equ	0xFE8
   260                           
   261                           	psect	bssBANK2
   262  000200                     __pbssBANK2:
   263                           	opt stack 0
   264  000200                     _FromMainHigh_MQ:
   265                           	opt stack 0
   266  000200                     	ds	54
   267                           tblptru	equ	0xFF8
   268                           tblptrh	equ	0xFF7
   269                           tblptrl	equ	0xFF6
   270                           tablat	equ	0xFF5
   271                           postinc0	equ	0xFEE
   272                           wreg	equ	0xFE8
   273                           
   274                           	psect	bssBANK3
   275  000300                     __pbssBANK3:
   276                           	opt stack 0
   277  000300                     _ADCArray:
   278                           	opt stack 0
   279  000300                     	ds	237
   280                           tblptru	equ	0xFF8
   281                           tblptrh	equ	0xFF7
   282                           tblptrl	equ	0xFF6
   283                           tablat	equ	0xFF5
   284                           postinc0	equ	0xFEE
   285                           wreg	equ	0xFE8
   286                           
   287                           	psect	cstackBANK1
   288  0001A2                     __pcstackBANK1:
   289                           	opt stack 0
   290  0001A2                     main@msgbuffer:
   291                           	opt stack 0
   292                           
   293                           ; 11 bytes @ 0x0
   294  0001A2                     	ds	11
   295  0001AD                     main@uthread_data:
   296                           	opt stack 0
   297                           
   298                           ; 2 bytes @ 0xB
   299  0001AD                     	ds	2
   300  0001AF                     main@last_reg_recvd:
   301                           	opt stack 0
   302                           
   303                           ; 1 bytes @ 0xD
   304  0001AF                     	ds	1
   305  0001B0                     main@t1thread_data:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0xE
   309  0001B0                     	ds	2
   310  0001B2                     main@t0thread_data:
   311                           	opt stack 0
   312                           
   313                           ; 2 bytes @ 0x10
   314  0001B2                     	ds	2
   315  0001B4                     main@uc:
   316                           	opt stack 0
   317                           
   318                           ; 5 bytes @ 0x12
   319  0001B4                     	ds	5
   320  0001B9                     main@msgtype:
   321                           	opt stack 0
   322                           
   323                           ; 1 bytes @ 0x17
   324  0001B9                     	ds	1
   325  0001BA                     main@length:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0x18
   329  0001BA                     	ds	1
   330  0001BB                     main@ic:
   331                           	opt stack 0
   332                           
   333                           ; 28 bytes @ 0x19
   334  0001BB                     	ds	28
   335                           tblptru	equ	0xFF8
   336                           tblptrh	equ	0xFF7
   337                           tblptrl	equ	0xFF6
   338                           tablat	equ	0xFF5
   339                           postinc0	equ	0xFEE
   340                           wreg	equ	0xFE8
   341                           
   342                           	psect	cstackBANK0
   343  000080                     __pcstackBANK0:
   344                           	opt stack 0
   345  000080                     i2c_int_handler@msgbuffer:
   346                           	opt stack 0
   347                           
   348                           ; 11 bytes @ 0x0
   349  000080                     	ds	11
   350  00008B                     i2c_int_handler@length:
   351                           	opt stack 0
   352                           
   353                           ; 2 bytes @ 0xB
   354  00008B                     	ds	2
   355  00008D                     i2c_int_handler@error_buf:
   356                           	opt stack 0
   357                           
   358                           ; 3 bytes @ 0xD
   359  00008D                     	ds	3
   360  000090                     i2c_int_handler@data_written:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x10
   364  000090                     	ds	1
   365  000091                     i2c_int_handler@overrun_error:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x11
   369  000091                     	ds	1
   370  000092                     i2c_int_handler@i2c_data:
   371                           	opt stack 0
   372                           
   373                           ; 1 bytes @ 0x12
   374  000092                     	ds	1
   375  000093                     i2c_int_handler@msg_to_send:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0x13
   379  000093                     	ds	1
   380  000094                     i2c_int_handler@msg_ready:
   381                           	opt stack 0
   382                           
   383                           ; 1 bytes @ 0x14
   384  000094                     	ds	1
   385  000095                     i2c_int_handler@data_read:
   386                           	opt stack 0
   387                           
   388                           ; 1 bytes @ 0x15
   389  000095                     	ds	1
   390  000096                     ??_InterruptHandlerHigh:
   391                           
   392                           ; 0 bytes @ 0x16
   393  000096                     	ds	16
   394  0000A6                     InterruptHandlerHigh@pureADCValue:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0x26
   398  0000A6                     	ds	2
   399  0000A8                     ?_in_high_int:
   400                           	opt stack 0
   401  0000A8                     ?___lwmod:
   402                           	opt stack 0
   403  0000A8                     i2c_configure_slave@addr:
   404                           	opt stack 0
   405  0000A8                     OpenADC@config2:
   406                           	opt stack 0
   407  0000A8                     OpenTimer0@config:
   408                           	opt stack 0
   409  0000A8                     Delay1KTCYx@unit:
   410                           	opt stack 0
   411  0000A8                     uart_lthread@uptr:
   412                           	opt stack 0
   413  0000A8                     init_timer1_lthread@tptr:
   414                           	opt stack 0
   415  0000A8                     init_timer0_lthread@tptr:
   416                           	opt stack 0
   417  0000A8                     init_uart_recv@uc:
   418                           	opt stack 0
   419  0000A8                     start_i2c_slave_reply@msg:
   420                           	opt stack 0
   421  0000A8                     init_i2c@ic:
   422                           	opt stack 0
   423  0000A8                     init_queue@qptr:
   424                           	opt stack 0
   425  0000A8                     check_msg@qptr:
   426                           	opt stack 0
   427  0000A8                     OpenUSART@spbrg:
   428                           	opt stack 0
   429  0000A8                     ___lwmod@dividend:
   430                           	opt stack 0
   431  0000A8                     memcpy@d1:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x28
   435  0000A8                     	ds	1
   436  0000A9                     OpenADC@portconfig:
   437                           	opt stack 0
   438                           
   439                           ; 1 bytes @ 0x29
   440  0000A9                     	ds	1
   441  0000AA                     ??_OpenADC:
   442  0000AA                     ??_OpenUSART:
   443  0000AA                     ??_start_i2c_slave_reply:
   444  0000AA                     ??_init_queue:
   445  0000AA                     ??_check_msg:
   446  0000AA                     ?_in_low_int:
   447                           	opt stack 0
   448  0000AA                     uart_lthread@msgtype:
   449                           	opt stack 0
   450  0000AA                     ___lwmod@divisor:
   451                           	opt stack 0
   452  0000AA                     memcpy@s1:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0x2A
   456  0000AA                     	ds	1
   457  0000AB                     init_queue@i:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0x2B
   461  0000AB                     	ds	1
   462  0000AC                     ??_init_queues:
   463  0000AC                     ??___lwmod:
   464  0000AC                     ?_in_main:
   465                           	opt stack 0
   466  0000AC                     start_i2c_slave_reply@length:
   467                           	opt stack 0
   468  0000AC                     OpenADC@config:
   469                           	opt stack 0
   470  0000AC                     uart_lthread@length:
   471                           	opt stack 0
   472  0000AC                     memcpy@n:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x2C
   476  0000AC                     	ds	1
   477  0000AD                     ??_initADC:
   478  0000AD                     OpenUSART@config:
   479                           	opt stack 0
   480  0000AD                     ___lwmod@counter:
   481                           	opt stack 0
   482                           
   483                           ; 1 bytes @ 0x2D
   484  0000AD                     	ds	1
   485  0000AE                     ??_block_on_To_msgqueues:
   486  0000AE                     uart_lthread@msgbuffer:
   487                           	opt stack 0
   488  0000AE                     memcpy@d:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0x2E
   492  0000AE                     	ds	1
   493  0000AF                     initADC@ADCValue:
   494                           	opt stack 0
   495                           
   496                           ; 2 bytes @ 0x2F
   497  0000AF                     	ds	1
   498  0000B0                     memcpy@s:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x30
   502  0000B0                     	ds	2
   503  0000B2                     send_msg@qptr:
   504                           	opt stack 0
   505  0000B2                     recv_msg@qptr:
   506                           	opt stack 0
   507                           
   508                           ; 2 bytes @ 0x32
   509  0000B2                     	ds	2
   510  0000B4                     send_msg@length:
   511                           	opt stack 0
   512  0000B4                     recv_msg@maxlength:
   513                           	opt stack 0
   514                           
   515                           ; 1 bytes @ 0x34
   516  0000B4                     	ds	1
   517  0000B5                     send_msg@msgtype:
   518                           	opt stack 0
   519  0000B5                     recv_msg@msgtype:
   520                           	opt stack 0
   521                           
   522                           ; 2 bytes @ 0x35
   523  0000B5                     	ds	1
   524  0000B6                     send_msg@data:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x36
   528  0000B6                     	ds	1
   529  0000B7                     recv_msg@data:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x37
   533  0000B7                     	ds	1
   534  0000B8                     ??_send_msg:
   535                           
   536                           ; 0 bytes @ 0x38
   537  0000B8                     	ds	1
   538  0000B9                     ??_recv_msg:
   539  0000B9                     send_msg@tlength:
   540                           	opt stack 0
   541                           
   542                           ; 2 bytes @ 0x39
   543  0000B9                     	ds	2
   544  0000BB                     send_msg@slot:
   545                           	opt stack 0
   546  0000BB                     recv_msg@slot:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x3B
   550  0000BB                     	ds	1
   551  0000BC                     send_msg@qmsg:
   552                           	opt stack 0
   553  0000BC                     recv_msg@tlength:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0x3C
   557  0000BC                     	ds	2
   558  0000BE                     FromMainHigh_sendmsg@msgtype:
   559                           	opt stack 0
   560  0000BE                     recv_msg@qmsg:
   561                           	opt stack 0
   562                           
   563                           ; 2 bytes @ 0x3E
   564  0000BE                     	ds	1
   565  0000BF                     FromMainHigh_sendmsg@data:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x3F
   569  0000BF                     	ds	1
   570  0000C0                     ToMainLow_recvmsg@msgtype:
   571                           	opt stack 0
   572  0000C0                     ToMainHigh_recvmsg@msgtype:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0x40
   576  0000C0                     	ds	1
   577  0000C1                     FromMainHigh_sendmsg@length:
   578                           	opt stack 0
   579                           
   580                           ; 1 bytes @ 0x41
   581  0000C1                     	ds	1
   582  0000C2                     timer1_lthread@tptr:
   583                           	opt stack 0
   584  0000C2                     timer0_lthread@tptr:
   585                           	opt stack 0
   586  0000C2                     ToMainLow_recvmsg@data:
   587                           	opt stack 0
   588  0000C2                     ToMainHigh_recvmsg@data:
   589                           	opt stack 0
   590                           
   591                           ; 2 bytes @ 0x42
   592  0000C2                     	ds	2
   593  0000C4                     ToMainLow_recvmsg@maxlength:
   594                           	opt stack 0
   595  0000C4                     ToMainHigh_recvmsg@maxlength:
   596                           	opt stack 0
   597  0000C4                     timer1_lthread@msgtype:
   598                           	opt stack 0
   599  0000C4                     timer0_lthread@msgtype:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x44
   603  0000C4                     	ds	2
   604  0000C6                     timer1_lthread@length:
   605                           	opt stack 0
   606  0000C6                     timer0_lthread@length:
   607                           	opt stack 0
   608                           
   609                           ; 2 bytes @ 0x46
   610  0000C6                     	ds	2
   611  0000C8                     timer1_lthread@msgbuffer:
   612                           	opt stack 0
   613  0000C8                     timer0_lthread@msgbuffer:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0x48
   617  0000C8                     	ds	2
   618  0000CA                     ??_timer1_lthread:
   619  0000CA                     ??_timer0_lthread:
   620                           
   621                           ; 0 bytes @ 0x4A
   622  0000CA                     	ds	1
   623  0000CB                     timer1_lthread@retval:
   624                           	opt stack 0
   625  0000CB                     timer0_lthread@retval:
   626                           	opt stack 0
   627                           
   628                           ; 1 bytes @ 0x4B
   629  0000CB                     	ds	1
   630  0000CC                     ??_main:
   631                           
   632                           ; 0 bytes @ 0x4C
   633  0000CC                     	ds	1
   634                           tblptru	equ	0xFF8
   635                           tblptrh	equ	0xFF7
   636                           tblptrl	equ	0xFF6
   637                           tablat	equ	0xFF5
   638                           postinc0	equ	0xFEE
   639                           wreg	equ	0xFE8
   640                           
   641                           	psect	cstackCOMRAM
   642  000001                     __pcstackCOMRAM:
   643                           	opt stack 0
   644  000001                     ReadUSART@data:
   645                           	opt stack 0
   646  000001                     i1memcpy@d1:
   647                           	opt stack 0
   648                           
   649                           ; 2 bytes @ 0x0
   650  000001                     	ds	2
   651  000003                     i1memcpy@s1:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x2
   655  000003                     	ds	2
   656  000005                     i1memcpy@n:
   657                           	opt stack 0
   658                           
   659                           ; 2 bytes @ 0x4
   660  000005                     	ds	2
   661  000007                     i1memcpy@d:
   662                           	opt stack 0
   663                           
   664                           ; 2 bytes @ 0x6
   665  000007                     	ds	2
   666  000009                     i1memcpy@s:
   667                           	opt stack 0
   668                           
   669                           ; 2 bytes @ 0x8
   670  000009                     	ds	2
   671  00000B                     i1send_msg@qptr:
   672                           	opt stack 0
   673                           
   674                           ; 2 bytes @ 0xA
   675  00000B                     	ds	2
   676  00000D                     i1send_msg@length:
   677                           	opt stack 0
   678                           
   679                           ; 1 bytes @ 0xC
   680  00000D                     	ds	1
   681  00000E                     i1send_msg@msgtype:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0xD
   685  00000E                     	ds	1
   686  00000F                     i1send_msg@data:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0xE
   690  00000F                     	ds	2
   691  000011                     ??i1_send_msg:
   692                           
   693                           ; 0 bytes @ 0x10
   694  000011                     	ds	1
   695  000012                     i1send_msg@tlength:
   696                           	opt stack 0
   697                           
   698                           ; 2 bytes @ 0x11
   699  000012                     	ds	2
   700  000014                     i1send_msg@slot:
   701                           	opt stack 0
   702                           
   703                           ; 1 bytes @ 0x13
   704  000014                     	ds	1
   705  000015                     i1send_msg@qmsg:
   706                           	opt stack 0
   707                           
   708                           ; 2 bytes @ 0x14
   709  000015                     	ds	2
   710  000017                     ToMainLow_sendmsg@msgtype:
   711                           	opt stack 0
   712                           
   713                           ; 1 bytes @ 0x16
   714  000017                     	ds	1
   715  000018                     ToMainLow_sendmsg@data:
   716                           	opt stack 0
   717                           
   718                           ; 2 bytes @ 0x17
   719  000018                     	ds	2
   720  00001A                     ToMainLow_sendmsg@length:
   721                           	opt stack 0
   722                           
   723                           ; 1 bytes @ 0x19
   724  00001A                     	ds	1
   725  00001B                     ??_uart_recv_int_handler:
   726                           
   727                           ; 0 bytes @ 0x1A
   728  00001B                     	ds	1
   729  00001C                     ??_InterruptHandlerLow:
   730                           
   731                           ; 0 bytes @ 0x1B
   732  00001C                     	ds	17
   733  00002D                     ?_ReadADC:
   734                           	opt stack 0
   735  00002D                     ?i2_in_high_int:
   736                           	opt stack 0
   737  00002D                     handle_start@data_read:
   738                           	opt stack 0
   739  00002D                     i2start_i2c_slave_reply@msg:
   740                           	opt stack 0
   741  00002D                     i2check_msg@qptr:
   742                           	opt stack 0
   743  00002D                     i2memcpy@d1:
   744                           	opt stack 0
   745                           
   746                           ; 2 bytes @ 0x2C
   747  00002D                     	ds	2
   748  00002F                     ??i2_start_i2c_slave_reply:
   749  00002F                     ??i2_check_msg:
   750  00002F                     ?i2_in_low_int:
   751                           	opt stack 0
   752  00002F                     i2memcpy@s1:
   753                           	opt stack 0
   754                           
   755                           ; 2 bytes @ 0x2E
   756  00002F                     	ds	2
   757  000031                     i2start_i2c_slave_reply@length:
   758                           	opt stack 0
   759  000031                     i2memcpy@n:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x30
   763  000031                     	ds	2
   764  000033                     i2memcpy@d:
   765                           	opt stack 0
   766                           
   767                           ; 2 bytes @ 0x32
   768  000033                     	ds	2
   769  000035                     i2memcpy@s:
   770                           	opt stack 0
   771                           
   772                           ; 2 bytes @ 0x34
   773  000035                     	ds	2
   774  000037                     i2send_msg@qptr:
   775                           	opt stack 0
   776                           
   777                           ; 2 bytes @ 0x36
   778  000037                     	ds	2
   779  000039                     i2send_msg@length:
   780                           	opt stack 0
   781                           
   782                           ; 1 bytes @ 0x38
   783  000039                     	ds	1
   784  00003A                     i2send_msg@msgtype:
   785                           	opt stack 0
   786                           
   787                           ; 1 bytes @ 0x39
   788  00003A                     	ds	1
   789  00003B                     i2send_msg@data:
   790                           	opt stack 0
   791                           
   792                           ; 2 bytes @ 0x3A
   793  00003B                     	ds	2
   794  00003D                     ??i2_send_msg:
   795                           
   796                           ; 0 bytes @ 0x3C
   797  00003D                     	ds	1
   798  00003E                     i2send_msg@tlength:
   799                           	opt stack 0
   800                           
   801                           ; 2 bytes @ 0x3D
   802  00003E                     	ds	2
   803  000040                     i2send_msg@slot:
   804                           	opt stack 0
   805                           
   806                           ; 1 bytes @ 0x3F
   807  000040                     	ds	1
   808  000041                     i2send_msg@qmsg:
   809                           	opt stack 0
   810                           
   811                           ; 2 bytes @ 0x40
   812  000041                     	ds	2
   813  000043                     ToMainHigh_sendmsg@msgtype:
   814                           	opt stack 0
   815                           
   816                           ; 1 bytes @ 0x42
   817  000043                     	ds	1
   818  000044                     ToMainHigh_sendmsg@data:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0x43
   822  000044                     	ds	2
   823  000046                     ToMainHigh_sendmsg@length:
   824                           	opt stack 0
   825                           
   826                           ; 1 bytes @ 0x45
   827  000046                     	ds	1
   828  000047                     ??_i2c_int_handler:
   829                           
   830                           ; 0 bytes @ 0x46
   831  000047                     	ds	2
   832                           tblptru	equ	0xFF8
   833                           tblptrh	equ	0xFF7
   834                           tblptrl	equ	0xFF6
   835                           tablat	equ	0xFF5
   836                           postinc0	equ	0xFEE
   837                           wreg	equ	0xFE8
   838                           
   839 ;;
   840 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   841 ;;
   842 ;; *************** function _main *****************
   843 ;; Defined at:
   844 ;;		line 113 in file "../src/main.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;		None
   847 ;; Auto vars:     Size  Location     Type
   848 ;;  ic             28   25[BANK1 ] struct __i2c_comm
   849 ;;  msgbuffer      11    0[BANK1 ] unsigned char [11]
   850 ;;  uc              5   18[BANK1 ] struct __uart_comm
   851 ;;  t0thread_dat    2   16[BANK1 ] struct __timer0_thread_s
   852 ;;  t1thread_dat    2   14[BANK1 ] struct __timer1_thread_s
   853 ;;  uthread_data    2   11[BANK1 ] struct __uart_thread_str
   854 ;;  length          1   24[BANK1 ] char 
   855 ;;  msgtype         1   23[BANK1 ] unsigned char 
   856 ;;  last_reg_rec    1   13[BANK1 ] unsigned char 
   857 ;;  i               1    0        unsigned char 
   858 ;;  c               1    0        unsigned char 
   859 ;; Return value:  Size  Location     Type
   860 ;;		None               void
   861 ;; Registers used:
   862 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   868 ;;      Params:         0       0       0       0       0
   869 ;;      Locals:         0       0      53       0       0
   870 ;;      Temps:          0       1       0       0       0
   871 ;;      Totals:         0       1      53       0       0
   872 ;;Total ram usage:       54 bytes
   873 ;; Hardware stack levels required when called:   14
   874 ;; This function calls:
   875 ;;		_OpenTimer0
   876 ;;		_OpenUSART
   877 ;;		_ToMainHigh_recvmsg
   878 ;;		_ToMainLow_recvmsg
   879 ;;		_block_on_To_msgqueues
   880 ;;		_enable_interrupts
   881 ;;		_i2c_configure_slave
   882 ;;		_initADC
   883 ;;		_init_i2c
   884 ;;		_init_queues
   885 ;;		_init_timer0_lthread
   886 ;;		_init_timer1_lthread
   887 ;;		_init_uart_recv
   888 ;;		_start_i2c_slave_reply
   889 ;;		_timer0_lthread
   890 ;;		_timer1_lthread
   891 ;;		_uart_lthread
   892 ;; This function is called by:
   893 ;;		Startup code after reset
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           	psect	text0
   898  0006A6                     __ptext0:
   899                           	opt stack 0
   900  0006A6                     _main:
   901                           	opt stack 16
   902                           
   903                           ;main.c: 114: OSCCON = 0x82;
   904                           
   905                           ;incstack = 0
   906  0006A6  0E82               	movlw	130
   907  0006A8  6ED3               	movwf	4051,c	;volatile
   908                           
   909                           ;main.c: 115: OSCTUNEbits.PLLEN = 0;
   910  0006AA  9C9B               	bcf	3995,6,c	;volatile
   911                           
   912                           ;main.c: 117: char c;
   913                           ;main.c: 118: signed char length;
   914                           ;main.c: 119: unsigned char msgtype;
   915                           ;main.c: 120: unsigned char last_reg_recvd;
   916                           ;main.c: 121: uart_comm uc;
   917                           ;main.c: 122: i2c_comm ic;
   918                           ;main.c: 123: unsigned char msgbuffer[10 + 1];
   919                           ;main.c: 124: unsigned char i;
   920                           ;main.c: 125: uart_thread_struct uthread_data;
   921                           ;main.c: 126: timer1_thread_struct t1thread_data;
   922                           ;main.c: 127: timer0_thread_struct t0thread_data;
   923                           ;main.c: 134: OSCCON = 0x82;
   924  0006AC  0E82               	movlw	130
   925  0006AE  6ED3               	movwf	4051,c	;volatile
   926                           
   927                           ;main.c: 135: OSCTUNEbits.PLLEN = 0;
   928  0006B0  9C9B               	bcf	3995,6,c	;volatile
   929                           
   930                           ;main.c: 139: init_uart_recv(&uc);
   931  0006B2  0101               	movlb	1	; () banked
   932  0006B4  0E01               	movlw	high main@uc
   933  0006B6  0100               	movlb	0	; () banked
   934  0006B8  0100               	movlb	0	; () banked
   935  0006BA  6FA9               	movwf	(init_uart_recv@uc+1)& (0+255),b
   936  0006BC  0101               	movlb	1	; () banked
   937  0006BE  0EB4               	movlw	low main@uc
   938  0006C0  0100               	movlb	0	; () banked
   939  0006C2  0100               	movlb	0	; () banked
   940  0006C4  6FA8               	movwf	init_uart_recv@uc& (0+255),b
   941  0006C6  EC47  F00D         	call	_init_uart_recv	;wreg free
   942                           
   943                           ;main.c: 142: init_i2c(&ic);
   944  0006CA  0101               	movlb	1	; () banked
   945  0006CC  0E01               	movlw	high main@ic
   946  0006CE  0100               	movlb	0	; () banked
   947  0006D0  0100               	movlb	0	; () banked
   948  0006D2  6FA9               	movwf	(init_i2c@ic+1)& (0+255),b
   949  0006D4  0101               	movlb	1	; () banked
   950  0006D6  0EBB               	movlw	low main@ic
   951  0006D8  0100               	movlb	0	; () banked
   952  0006DA  0100               	movlb	0	; () banked
   953  0006DC  6FA8               	movwf	init_i2c@ic& (0+255),b
   954  0006DE  ECB3  F00A         	call	_init_i2c	;wreg free
   955                           
   956                           ;main.c: 145: init_timer1_lthread(&t1thread_data);
   957  0006E2  0101               	movlb	1	; () banked
   958  0006E4  0E01               	movlw	high main@t1thread_data
   959  0006E6  0100               	movlb	0	; () banked
   960  0006E8  0100               	movlb	0	; () banked
   961  0006EA  6FA9               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   962  0006EC  0101               	movlb	1	; () banked
   963  0006EE  0EB0               	movlw	low main@t1thread_data
   964  0006F0  0100               	movlb	0	; () banked
   965  0006F2  0100               	movlb	0	; () banked
   966  0006F4  6FA8               	movwf	init_timer1_lthread@tptr& (0+255),b
   967  0006F6  EC70  F00D         	call	_init_timer1_lthread	;wreg free
   968                           
   969                           ;main.c: 147: init_timer0_lthread(&t0thread_data);
   970  0006FA  0101               	movlb	1	; () banked
   971  0006FC  0E01               	movlw	high main@t0thread_data
   972  0006FE  0100               	movlb	0	; () banked
   973  000700  0100               	movlb	0	; () banked
   974  000702  6FA9               	movwf	(init_timer0_lthread@tptr+1)& (0+255),b
   975  000704  0101               	movlb	1	; () banked
   976  000706  0EB2               	movlw	low main@t0thread_data
   977  000708  0100               	movlb	0	; () banked
   978  00070A  0100               	movlb	0	; () banked
   979  00070C  6FA8               	movwf	init_timer0_lthread@tptr& (0+255),b
   980  00070E  EC79  F00D         	call	_init_timer0_lthread	;wreg free
   981                           
   982                           ;main.c: 149: init_queues();
   983  000712  EC7C  F00A         	call	_init_queues	;wreg free
   984                           
   985                           ;main.c: 151: initADC();
   986  000716  ECE8  F00A         	call	_initADC	;wreg free
   987                           
   988                           ;main.c: 154: TRISB = 0x0;
   989  00071A  0E00               	movlw	0
   990  00071C  6E93               	movwf	3987,c	;volatile
   991                           
   992                           ;main.c: 155: LATB = 0x0;
   993  00071E  0E00               	movlw	0
   994  000720  6E8A               	movwf	3978,c	;volatile
   995                           
   996                           ;main.c: 167: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11111111);
   997  000722  0EDF               	movlw	223
   998  000724  ECE6  F00C         	call	_OpenTimer0
   999                           
  1000                           ;main.c: 172: enable_interrupts();
  1001  000728  EC8B  F00D         	call	_enable_interrupts	;wreg free
  1002                           
  1003                           ;main.c: 177: IPR1bits.TMR1IP = 0;
  1004  00072C  909F               	bcf	3999,0,c	;volatile
  1005                           
  1006                           ;main.c: 179: IPR1bits.RCIP = 0;
  1007  00072E  9A9F               	bcf	3999,5,c	;volatile
  1008                           
  1009                           ;main.c: 181: IPR1bits.SSPIP = 1;
  1010  000730  869F               	bsf	3999,3,c	;volatile
  1011                           
  1012                           ;main.c: 183: IPR1bits.ADIP = 1;
  1013  000732  8C9F               	bsf	3999,6,c	;volatile
  1014                           
  1015                           ;main.c: 193: i2c_configure_slave(0x9E);
  1016  000734  0E9E               	movlw	158
  1017  000736  ECFB  F00C         	call	_i2c_configure_slave
  1018                           
  1019                           ;main.c: 206: PIE1bits.SSPIE = 1;
  1020  00073A  869D               	bsf	3997,3,c	;volatile
  1021                           
  1022                           ;main.c: 209: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1023                           ;main.c: 210: 0b11111111 & 0b11101111, 0x19);
  1024  00073C  0E00               	movlw	0
  1025  00073E  0100               	movlb	0	; () banked
  1026  000740  0100               	movlb	0	; () banked
  1027  000742  6FA9               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1028  000744  0E19               	movlw	25
  1029  000746  0100               	movlb	0	; () banked
  1030  000748  6FA8               	movwf	OpenUSART@spbrg& (0+255),b
  1031  00074A  0E6C               	movlw	108
  1032  00074C  ECFD  F008         	call	_OpenUSART
  1033  000750                     l2713:
  1034                           
  1035                           ;main.c: 234: block_on_To_msgqueues();
  1036  000750  EC5C  F008         	call	_block_on_To_msgqueues	;wreg free
  1037                           
  1038                           ;main.c: 241: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1039  000754  0101               	movlb	1	; () banked
  1040  000756  0E01               	movlw	high main@msgtype
  1041  000758  0100               	movlb	0	; () banked
  1042  00075A  0100               	movlb	0	; () banked
  1043  00075C  6FC1               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1044  00075E  0101               	movlb	1	; () banked
  1045  000760  0EB9               	movlw	low main@msgtype
  1046  000762  0100               	movlb	0	; () banked
  1047  000764  0100               	movlb	0	; () banked
  1048  000766  6FC0               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1049  000768  0101               	movlb	1	; () banked
  1050  00076A  0E01               	movlw	high main@msgbuffer
  1051  00076C  0100               	movlb	0	; () banked
  1052  00076E  0100               	movlb	0	; () banked
  1053  000770  6FC3               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1054  000772  0101               	movlb	1	; () banked
  1055  000774  0EA2               	movlw	low main@msgbuffer
  1056  000776  0100               	movlb	0	; () banked
  1057  000778  0100               	movlb	0	; () banked
  1058  00077A  6FC2               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1059  00077C  0E0A               	movlw	10
  1060  00077E  ECFF  F00B         	call	_ToMainHigh_recvmsg
  1061  000782  0101               	movlb	1	; () banked
  1062  000784  0101               	movlb	1	; () banked
  1063  000786  6FBA               	movwf	main@length& (0+255),b
  1064                           
  1065                           ; BSR set to: 1
  1066                           ;main.c: 242: if (length < 0) {
  1067  000788  0101               	movlb	1	; () banked
  1068  00078A  0101               	movlb	1	; () banked
  1069  00078C  BFBA               	btfsc	main@length& (0+255),7,b
  1070  00078E  D061               	goto	l2739
  1071  000790  D051               	goto	l2737
  1072  000792                     l2721:
  1073                           
  1074                           ; BSR set to: 1
  1075                           ;main.c: 250: {
  1076                           ;main.c: 251: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1077  000792  0101               	movlb	1	; () banked
  1078  000794  0E01               	movlw	high main@t0thread_data
  1079  000796  0100               	movlb	0	; () banked
  1080  000798  0100               	movlb	0	; () banked
  1081  00079A  6FC3               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1082  00079C  0101               	movlb	1	; () banked
  1083  00079E  0EB2               	movlw	low main@t0thread_data
  1084  0007A0  0100               	movlb	0	; () banked
  1085  0007A2  0100               	movlb	0	; () banked
  1086  0007A4  6FC2               	movwf	timer0_lthread@tptr& (0+255),b
  1087  0007A6  0101               	movlb	1	; () banked
  1088  0007A8  0100               	movlb	0	; () banked
  1089  0007AA  C1B9  F0C4         	movff	main@msgtype,timer0_lthread@msgtype
  1090  0007AE  0100               	movlb	0	; () banked
  1091  0007B0  0100               	movlb	0	; () banked
  1092  0007B2  6BC5               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1093  0007B4  0101               	movlb	1	; () banked
  1094  0007B6  0101               	movlb	1	; () banked
  1095  0007B8  51BA               	movf	main@length& (0+255),w,b
  1096  0007BA  0100               	movlb	0	; () banked
  1097  0007BC  0100               	movlb	0	; () banked
  1098  0007BE  6FC6               	movwf	timer0_lthread@length& (0+255),b
  1099  0007C0  0100               	movlb	0	; () banked
  1100  0007C2  6BC7               	clrf	(timer0_lthread@length+1)& (0+255),b
  1101  0007C4  0100               	movlb	0	; () banked
  1102  0007C6  BFC6               	btfsc	timer0_lthread@length& (0+255),7,b
  1103  0007C8  07C7               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1104  0007CA  0101               	movlb	1	; () banked
  1105  0007CC  0E01               	movlw	high main@msgbuffer
  1106  0007CE  0100               	movlb	0	; () banked
  1107  0007D0  0100               	movlb	0	; () banked
  1108  0007D2  6FC9               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1109  0007D4  0101               	movlb	1	; () banked
  1110  0007D6  0EA2               	movlw	low main@msgbuffer
  1111  0007D8  0100               	movlb	0	; () banked
  1112  0007DA  0100               	movlb	0	; () banked
  1113  0007DC  6FC8               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1114  0007DE  EC43  F00A         	call	_timer0_lthread	;wreg free
  1115                           
  1116                           ;main.c: 252: break;
  1117  0007E2  D037               	goto	l2739
  1118  0007E4                     l327:
  1119                           
  1120                           ;main.c: 255: case 41:
  1121                           ;main.c: 256: {
  1122                           ;main.c: 259: last_reg_recvd = msgbuffer[0];
  1123  0007E4  C1A2  F1AF         	movff	main@msgbuffer,main@last_reg_recvd
  1124                           
  1125                           ;main.c: 260: break;
  1126  0007E8  D034               	goto	l2739
  1127  0007EA                     l2727:
  1128                           
  1129                           ;main.c: 288: {
  1130                           ;main.c: 289: length = 1;
  1131  0007EA  0100               	movlb	0	; () banked
  1132  0007EC  6FCC               	movwf	??_main& (0+255),b
  1133  0007EE  0E01               	movlw	1
  1134  0007F0  0101               	movlb	1	; () banked
  1135  0007F2  0101               	movlb	1	; () banked
  1136  0007F4  6FBA               	movwf	main@length& (0+255),b
  1137  0007F6  0100               	movlb	0	; () banked
  1138  0007F8  51CC               	movf	??_main& (0+255),w,b
  1139                           
  1140                           ;main.c: 292: break;
  1141  0007FA  D00C               	goto	l2733
  1142  0007FC                     l2731:
  1143  0007FC  0101               	movlb	1	; () banked
  1144  0007FE  0101               	movlb	1	; () banked
  1145  000800  51AF               	movf	main@last_reg_recvd& (0+255),w,b
  1146                           
  1147                           ; Switch size 1, requested type "space"
  1148                           ; Number of cases is 3, Range of values is 168 to 170
  1149                           ; switch strategies available:
  1150                           ; Name         Instructions Cycles
  1151                           ; simple_byte           10     6 (average)
  1152                           ;	Chosen strategy is simple_byte
  1153  000802  0AA8               	xorlw	168	; case 168
  1154  000804  B4D8               	btfsc	status,2,c
  1155  000806  D7F1               	goto	l2727
  1156  000808  0A01               	xorlw	1	; case 169
  1157  00080A  B4D8               	btfsc	status,2,c
  1158  00080C  D7EE               	goto	l2727
  1159  00080E  0A03               	xorlw	3	; case 170
  1160  000810  B4D8               	btfsc	status,2,c
  1161  000812  D7EB               	goto	l2727
  1162  000814                     l2733:
  1163                           
  1164                           ;main.c: 295: start_i2c_slave_reply(length, msgbuffer);
  1165  000814  0101               	movlb	1	; () banked
  1166  000816  0E01               	movlw	high main@msgbuffer
  1167  000818  0100               	movlb	0	; () banked
  1168  00081A  0100               	movlb	0	; () banked
  1169  00081C  6FA9               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1170  00081E  0101               	movlb	1	; () banked
  1171  000820  0EA2               	movlw	low main@msgbuffer
  1172  000822  0100               	movlb	0	; () banked
  1173  000824  0100               	movlb	0	; () banked
  1174  000826  6FA8               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1175  000828  0101               	movlb	1	; () banked
  1176  00082A  0101               	movlb	1	; () banked
  1177  00082C  51BA               	movf	main@length& (0+255),w,b
  1178  00082E  ECCB  F005         	call	_start_i2c_slave_reply
  1179                           
  1180                           ;main.c: 296: break;
  1181  000832  D00F               	goto	l2739
  1182  000834                     l2737:
  1183  000834  0101               	movlb	1	; () banked
  1184  000836  0101               	movlb	1	; () banked
  1185  000838  51B9               	movf	main@msgtype& (0+255),w,b
  1186                           
  1187                           ; Switch size 1, requested type "space"
  1188                           ; Number of cases is 4, Range of values is 10 to 42
  1189                           ; switch strategies available:
  1190                           ; Name         Instructions Cycles
  1191                           ; simple_byte           13     7 (average)
  1192                           ;	Chosen strategy is simple_byte
  1193  00083A  0A0A               	xorlw	10	; case 10
  1194  00083C  B4D8               	btfsc	status,2,c
  1195  00083E  D7A9               	goto	l2721
  1196  000840  0A22               	xorlw	34	; case 40
  1197  000842  B4D8               	btfsc	status,2,c
  1198  000844  D7CF               	goto	l327
  1199  000846  0A01               	xorlw	1	; case 41
  1200  000848  B4D8               	btfsc	status,2,c
  1201  00084A  D7CC               	goto	l327
  1202  00084C  0A03               	xorlw	3	; case 42
  1203  00084E  B4D8               	btfsc	status,2,c
  1204  000850  D7D5               	goto	l2731
  1205  000852                     l2739:
  1206                           
  1207                           ;main.c: 304: }
  1208                           ;main.c: 307: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1209  000852  0101               	movlb	1	; () banked
  1210  000854  0E01               	movlw	high main@msgtype
  1211  000856  0100               	movlb	0	; () banked
  1212  000858  0100               	movlb	0	; () banked
  1213  00085A  6FC1               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1214  00085C  0101               	movlb	1	; () banked
  1215  00085E  0EB9               	movlw	low main@msgtype
  1216  000860  0100               	movlb	0	; () banked
  1217  000862  0100               	movlb	0	; () banked
  1218  000864  6FC0               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1219  000866  0101               	movlb	1	; () banked
  1220  000868  0E01               	movlw	high main@msgbuffer
  1221  00086A  0100               	movlb	0	; () banked
  1222  00086C  0100               	movlb	0	; () banked
  1223  00086E  6FC3               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1224  000870  0101               	movlb	1	; () banked
  1225  000872  0EA2               	movlw	low main@msgbuffer
  1226  000874  0100               	movlb	0	; () banked
  1227  000876  0100               	movlb	0	; () banked
  1228  000878  6FC2               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1229  00087A  0E0A               	movlw	10
  1230  00087C  ECDE  F00B         	call	_ToMainLow_recvmsg
  1231  000880  0101               	movlb	1	; () banked
  1232  000882  0101               	movlb	1	; () banked
  1233  000884  6FBA               	movwf	main@length& (0+255),b
  1234                           
  1235                           ; BSR set to: 1
  1236                           ;main.c: 308: if (length < 0) {
  1237  000886  0101               	movlb	1	; () banked
  1238  000888  0101               	movlb	1	; () banked
  1239  00088A  BFBA               	btfsc	main@length& (0+255),7,b
  1240  00088C  D761               	goto	l2713
  1241  00088E  D052               	goto	l2751
  1242  000890                     l2745:
  1243                           
  1244                           ; BSR set to: 1
  1245                           ;main.c: 316: {
  1246                           ;main.c: 317: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1247  000890  0101               	movlb	1	; () banked
  1248  000892  0E01               	movlw	high main@t1thread_data
  1249  000894  0100               	movlb	0	; () banked
  1250  000896  0100               	movlb	0	; () banked
  1251  000898  6FC3               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1252  00089A  0101               	movlb	1	; () banked
  1253  00089C  0EB0               	movlw	low main@t1thread_data
  1254  00089E  0100               	movlb	0	; () banked
  1255  0008A0  0100               	movlb	0	; () banked
  1256  0008A2  6FC2               	movwf	timer1_lthread@tptr& (0+255),b
  1257  0008A4  0101               	movlb	1	; () banked
  1258  0008A6  0100               	movlb	0	; () banked
  1259  0008A8  C1B9  F0C4         	movff	main@msgtype,timer1_lthread@msgtype
  1260  0008AC  0100               	movlb	0	; () banked
  1261  0008AE  0100               	movlb	0	; () banked
  1262  0008B0  6BC5               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1263  0008B2  0101               	movlb	1	; () banked
  1264  0008B4  0101               	movlb	1	; () banked
  1265  0008B6  51BA               	movf	main@length& (0+255),w,b
  1266  0008B8  0100               	movlb	0	; () banked
  1267  0008BA  0100               	movlb	0	; () banked
  1268  0008BC  6FC6               	movwf	timer1_lthread@length& (0+255),b
  1269  0008BE  0100               	movlb	0	; () banked
  1270  0008C0  6BC7               	clrf	(timer1_lthread@length+1)& (0+255),b
  1271  0008C2  0100               	movlb	0	; () banked
  1272  0008C4  BFC6               	btfsc	timer1_lthread@length& (0+255),7,b
  1273  0008C6  07C7               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1274  0008C8  0101               	movlb	1	; () banked
  1275  0008CA  0E01               	movlw	high main@msgbuffer
  1276  0008CC  0100               	movlb	0	; () banked
  1277  0008CE  0100               	movlb	0	; () banked
  1278  0008D0  6FC9               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1279  0008D2  0101               	movlb	1	; () banked
  1280  0008D4  0EA2               	movlw	low main@msgbuffer
  1281  0008D6  0100               	movlb	0	; () banked
  1282  0008D8  0100               	movlb	0	; () banked
  1283  0008DA  6FC8               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1284  0008DC  EC0A  F00A         	call	_timer1_lthread	;wreg free
  1285                           
  1286                           ;main.c: 318: break;
  1287  0008E0  D737               	goto	l2713
  1288  0008E2                     l2747:
  1289                           
  1290                           ;main.c: 321: case 31:
  1291                           ;main.c: 322: {
  1292                           ;main.c: 323: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1293  0008E2  0101               	movlb	1	; () banked
  1294  0008E4  0E01               	movlw	high main@uthread_data
  1295  0008E6  0100               	movlb	0	; () banked
  1296  0008E8  0100               	movlb	0	; () banked
  1297  0008EA  6FA9               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1298  0008EC  0101               	movlb	1	; () banked
  1299  0008EE  0EAD               	movlw	low main@uthread_data
  1300  0008F0  0100               	movlb	0	; () banked
  1301  0008F2  0100               	movlb	0	; () banked
  1302  0008F4  6FA8               	movwf	uart_lthread@uptr& (0+255),b
  1303  0008F6  0101               	movlb	1	; () banked
  1304  0008F8  0100               	movlb	0	; () banked
  1305  0008FA  C1B9  F0AA         	movff	main@msgtype,uart_lthread@msgtype
  1306  0008FE  0100               	movlb	0	; () banked
  1307  000900  0100               	movlb	0	; () banked
  1308  000902  6BAB               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1309  000904  0101               	movlb	1	; () banked
  1310  000906  0101               	movlb	1	; () banked
  1311  000908  51BA               	movf	main@length& (0+255),w,b
  1312  00090A  0100               	movlb	0	; () banked
  1313  00090C  0100               	movlb	0	; () banked
  1314  00090E  6FAC               	movwf	uart_lthread@length& (0+255),b
  1315  000910  0100               	movlb	0	; () banked
  1316  000912  6BAD               	clrf	(uart_lthread@length+1)& (0+255),b
  1317  000914  0100               	movlb	0	; () banked
  1318  000916  BFAC               	btfsc	uart_lthread@length& (0+255),7,b
  1319  000918  07AD               	decf	(uart_lthread@length+1)& (0+255),f,b
  1320  00091A  0101               	movlb	1	; () banked
  1321  00091C  0E01               	movlw	high main@msgbuffer
  1322  00091E  0100               	movlb	0	; () banked
  1323  000920  0100               	movlb	0	; () banked
  1324  000922  6FAF               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1325  000924  0101               	movlb	1	; () banked
  1326  000926  0EA2               	movlw	low main@msgbuffer
  1327  000928  0100               	movlb	0	; () banked
  1328  00092A  0100               	movlb	0	; () banked
  1329  00092C  6FAE               	movwf	uart_lthread@msgbuffer& (0+255),b
  1330  00092E  EC60  F00C         	call	_uart_lthread	;wreg free
  1331                           
  1332                           ;main.c: 324: break;
  1333  000932  D70E               	goto	l2713
  1334  000934                     l2751:
  1335  000934  0101               	movlb	1	; () banked
  1336  000936  0101               	movlb	1	; () banked
  1337  000938  51B9               	movf	main@msgtype& (0+255),w,b
  1338                           
  1339                           ; Switch size 1, requested type "space"
  1340                           ; Number of cases is 3, Range of values is 11 to 31
  1341                           ; switch strategies available:
  1342                           ; Name         Instructions Cycles
  1343                           ; simple_byte           10     6 (average)
  1344                           ;	Chosen strategy is simple_byte
  1345  00093A  0A0B               	xorlw	11	; case 11
  1346  00093C  B4D8               	btfsc	status,2,c
  1347  00093E  D7A8               	goto	l2745
  1348  000940  0A15               	xorlw	21	; case 30
  1349  000942  B4D8               	btfsc	status,2,c
  1350  000944  D7CE               	goto	l2747
  1351  000946  0A01               	xorlw	1	; case 31
  1352  000948  B4D8               	btfsc	status,2,c
  1353  00094A  D7CB               	goto	l2747
  1354  00094C  D701               	goto	l2713
  1355  00094E                     __end_of_main:
  1356                           	opt stack 0
  1357                           tblptru	equ	0xFF8
  1358                           tblptrh	equ	0xFF7
  1359                           tblptrl	equ	0xFF6
  1360                           tablat	equ	0xFF5
  1361                           postinc0	equ	0xFEE
  1362                           wreg	equ	0xFE8
  1363                           status	equ	0xFD8
  1364                           
  1365 ;; *************** function _uart_lthread *****************
  1366 ;; Defined at:
  1367 ;;		line 9 in file "../src/uart_thread.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;  uptr            2   40[BANK0 ] PTR struct __uart_thread
  1370 ;;		 -> main@uthread_data(2), 
  1371 ;;  msgtype         2   42[BANK0 ] int 
  1372 ;;  length          2   44[BANK0 ] int 
  1373 ;;  msgbuffer       2   46[BANK0 ] PTR unsigned char 
  1374 ;;		 -> main@msgbuffer(11), 
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;		None
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  2   40[BANK0 ] int 
  1379 ;; Registers used:
  1380 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1386 ;;      Params:         0       8       0       0       0
  1387 ;;      Locals:         0       0       0       0       0
  1388 ;;      Temps:          0       0       0       0       0
  1389 ;;      Totals:         0       8       0       0       0
  1390 ;;Total ram usage:        8 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; Hardware stack levels required when called:   10
  1393 ;; This function calls:
  1394 ;;		Nothing
  1395 ;; This function is called by:
  1396 ;;		_main
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text1
  1401  0018C0                     __ptext1:
  1402                           	opt stack 0
  1403  0018C0                     _uart_lthread:
  1404                           	opt stack 19
  1405                           
  1406                           ;uart_thread.c: 10: if (msgtype == 30) {
  1407                           
  1408                           ; BSR set to: 1
  1409                           ;incstack = 0
  1410  0018C0  0100               	movlb	0	; () banked
  1411  0018C2  0100               	movlb	0	; () banked
  1412  0018C4  51AA               	movf	uart_lthread@msgtype& (0+255),w,b
  1413  0018C6  0A1E               	xorlw	30
  1414  0018C8  11AB               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1415  0018CA  B4D8               	btfsc	status,2,c
  1416  0018CC  0012               	return	
  1417                           
  1418                           ; BSR set to: 0
  1419                           
  1420                           ; BSR set to: 0
  1421                           
  1422                           ; BSR set to: 0
  1423                           ;uart_thread.c: 11: } else if (msgtype == 31) {
  1424  0018CE  0100               	movlb	0	; () banked
  1425  0018D0  0100               	movlb	0	; () banked
  1426  0018D2  51AA               	movf	uart_lthread@msgtype& (0+255),w,b
  1427  0018D4  0A1F               	xorlw	31
  1428  0018D6  11AB               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1429  0018D8  A4D8               	btfss	status,2,c
  1430  0018DA  0012               	return	
  1431                           
  1432                           ; BSR set to: 0
  1433                           ;uart_thread.c: 14: msgbuffer[length] = '\0';
  1434  0018DC  0100               	movlb	0	; () banked
  1435  0018DE  0100               	movlb	0	; () banked
  1436  0018E0  51AC               	movf	uart_lthread@length& (0+255),w,b
  1437  0018E2  0100               	movlb	0	; () banked
  1438  0018E4  0100               	movlb	0	; () banked
  1439  0018E6  25AE               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1440  0018E8  6ED9               	movwf	fsr2l,c
  1441  0018EA  0100               	movlb	0	; () banked
  1442  0018EC  0100               	movlb	0	; () banked
  1443  0018EE  51AD               	movf	(uart_lthread@length+1)& (0+255),w,b
  1444  0018F0  0100               	movlb	0	; () banked
  1445  0018F2  0100               	movlb	0	; () banked
  1446  0018F4  21AF               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1447  0018F6  6EDA               	movwf	fsr2h,c
  1448  0018F8  0E00               	movlw	0
  1449  0018FA  6EDF               	movwf	indf2,c
  1450  0018FC  0012               	return	
  1451  0018FE                     __end_of_uart_lthread:
  1452                           	opt stack 0
  1453                           tblptru	equ	0xFF8
  1454                           tblptrh	equ	0xFF7
  1455                           tblptrl	equ	0xFF6
  1456                           tablat	equ	0xFF5
  1457                           postinc0	equ	0xFEE
  1458                           wreg	equ	0xFE8
  1459                           indf2	equ	0xFDF
  1460                           fsr2h	equ	0xFDA
  1461                           fsr2l	equ	0xFD9
  1462                           status	equ	0xFD8
  1463                           
  1464 ;; *************** function _timer1_lthread *****************
  1465 ;; Defined at:
  1466 ;;		line 14 in file "../src/timer1_thread.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;  tptr            2   66[BANK0 ] PTR struct __timer1_thre
  1469 ;;		 -> main@t1thread_data(2), 
  1470 ;;  msgtype         2   68[BANK0 ] int 
  1471 ;;  length          2   70[BANK0 ] int 
  1472 ;;  msgbuffer       2   72[BANK0 ] PTR unsigned char 
  1473 ;;		 -> main@msgbuffer(11), 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  retval          1   75[BANK0 ] char 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  2   66[BANK0 ] int 
  1478 ;; Registers used:
  1479 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1485 ;;      Params:         0       8       0       0       0
  1486 ;;      Locals:         0       1       0       0       0
  1487 ;;      Temps:          0       1       0       0       0
  1488 ;;      Totals:         0      10       0       0       0
  1489 ;;Total ram usage:       10 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:   13
  1492 ;; This function calls:
  1493 ;;		_FromMainHigh_sendmsg
  1494 ;;		___lwmod
  1495 ;; This function is called by:
  1496 ;;		_main
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text2
  1501  001414                     __ptext2:
  1502                           	opt stack 0
  1503  001414                     _timer1_lthread:
  1504                           	opt stack 16
  1505                           
  1506                           ;timer1_thread.c: 15: signed char retval;
  1507                           ;timer1_thread.c: 17: tptr->msgcount++;
  1508                           
  1509                           ; BSR set to: 0
  1510                           ;incstack = 0
  1511  001414  C0C2  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1512  001418  C0C3  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1513  00141C  2ADE               	incf	postinc2,f,c
  1514  00141E  0E00               	movlw	0
  1515  001420  22DD               	addwfc	postdec2,f,c
  1516                           
  1517                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1518  001422  C0C2  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1519  001426  C0C3  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1520  00142A  0100               	movlb	0	; () banked
  1521  00142C  CFDE F0A8          	movff	postinc2,___lwmod@dividend
  1522  001430  0100               	movlb	0	; () banked
  1523  001432  CFDD F0A9          	movff	postdec2,___lwmod@dividend+1
  1524  001436  0E00               	movlw	0
  1525  001438  0100               	movlb	0	; () banked
  1526  00143A  0100               	movlb	0	; () banked
  1527  00143C  6FAB               	movwf	(___lwmod@divisor+1)& (0+255),b
  1528  00143E  0E0A               	movlw	10
  1529  001440  0100               	movlb	0	; () banked
  1530  001442  6FAA               	movwf	___lwmod@divisor& (0+255),b
  1531  001444  EC46  F009         	call	___lwmod	;wreg free
  1532  001448  0100               	movlb	0	; () banked
  1533  00144A  0100               	movlb	0	; () banked
  1534  00144C  51A8               	movf	?___lwmod& (0+255),w,b
  1535  00144E  0A09               	xorlw	9
  1536  001450  0100               	movlb	0	; () banked
  1537  001452  11A9               	iorwf	(?___lwmod+1)& (0+255),w,b
  1538  001454  A4D8               	btfss	status,2,c
  1539  001456  0012               	return	
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1543  001458  0100               	movlb	0	; () banked
  1544  00145A  6FCA               	movwf	??_timer1_lthread& (0+255),b
  1545  00145C  0E14               	movlw	20
  1546  00145E  0100               	movlb	0	; () banked
  1547  001460  0100               	movlb	0	; () banked
  1548  001462  6FBE               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1549  001464  0100               	movlb	0	; () banked
  1550  001466  51CA               	movf	??_timer1_lthread& (0+255),w,b
  1551  001468  0100               	movlb	0	; () banked
  1552  00146A  0100               	movlb	0	; () banked
  1553  00146C  C0C3  F0C0         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1554  001470  0100               	movlb	0	; () banked
  1555  001472  0100               	movlb	0	; () banked
  1556  001474  C0C2  F0BF         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1557  001478  0E02               	movlw	2
  1558  00147A  EC7F  F00C         	call	_FromMainHigh_sendmsg
  1559  00147E  0100               	movlb	0	; () banked
  1560  001480  0100               	movlb	0	; () banked
  1561  001482  6FCB               	movwf	timer1_lthread@retval& (0+255),b
  1562  001484  0012               	return	
  1563  001486                     __end_of_timer1_lthread:
  1564                           	opt stack 0
  1565                           tblptru	equ	0xFF8
  1566                           tblptrh	equ	0xFF7
  1567                           tblptrl	equ	0xFF6
  1568                           tablat	equ	0xFF5
  1569                           postinc0	equ	0xFEE
  1570                           wreg	equ	0xFE8
  1571                           indf2	equ	0xFDF
  1572                           postinc2	equ	0xFDE
  1573                           postdec2	equ	0xFDD
  1574                           fsr2h	equ	0xFDA
  1575                           fsr2l	equ	0xFD9
  1576                           status	equ	0xFD8
  1577                           
  1578 ;; *************** function _timer0_lthread *****************
  1579 ;; Defined at:
  1580 ;;		line 14 in file "../src/timer0_thread.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;  tptr            2   66[BANK0 ] PTR struct __timer0_thre
  1583 ;;		 -> main@t0thread_data(2), 
  1584 ;;  msgtype         2   68[BANK0 ] int 
  1585 ;;  length          2   70[BANK0 ] int 
  1586 ;;  msgbuffer       2   72[BANK0 ] PTR unsigned char 
  1587 ;;		 -> main@msgbuffer(11), 
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;  retval          1   75[BANK0 ] char 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  2   66[BANK0 ] int 
  1592 ;; Registers used:
  1593 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1599 ;;      Params:         0       8       0       0       0
  1600 ;;      Locals:         0       1       0       0       0
  1601 ;;      Temps:          0       1       0       0       0
  1602 ;;      Totals:         0      10       0       0       0
  1603 ;;Total ram usage:       10 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; Hardware stack levels required when called:   13
  1606 ;; This function calls:
  1607 ;;		_FromMainHigh_sendmsg
  1608 ;;		___lwmod
  1609 ;; This function is called by:
  1610 ;;		_main
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           	psect	text3
  1615  001486                     __ptext3:
  1616                           	opt stack 0
  1617  001486                     _timer0_lthread:
  1618                           	opt stack 16
  1619                           
  1620                           ;timer0_thread.c: 19: signed char retval;
  1621                           ;timer0_thread.c: 21: tptr->msgcount++;
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;incstack = 0
  1625  001486  C0C2  FFD9         	movff	timer0_lthread@tptr,fsr2l
  1626  00148A  C0C3  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  1627  00148E  2ADE               	incf	postinc2,f,c
  1628  001490  0E00               	movlw	0
  1629  001492  22DD               	addwfc	postdec2,f,c
  1630                           
  1631                           ;timer0_thread.c: 24: if ((tptr->msgcount % 10) == 9) {
  1632  001494  C0C2  FFD9         	movff	timer0_lthread@tptr,fsr2l
  1633  001498  C0C3  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  1634  00149C  0100               	movlb	0	; () banked
  1635  00149E  CFDE F0A8          	movff	postinc2,___lwmod@dividend
  1636  0014A2  0100               	movlb	0	; () banked
  1637  0014A4  CFDD F0A9          	movff	postdec2,___lwmod@dividend+1
  1638  0014A8  0E00               	movlw	0
  1639  0014AA  0100               	movlb	0	; () banked
  1640  0014AC  0100               	movlb	0	; () banked
  1641  0014AE  6FAB               	movwf	(___lwmod@divisor+1)& (0+255),b
  1642  0014B0  0E0A               	movlw	10
  1643  0014B2  0100               	movlb	0	; () banked
  1644  0014B4  6FAA               	movwf	___lwmod@divisor& (0+255),b
  1645  0014B6  EC46  F009         	call	___lwmod	;wreg free
  1646  0014BA  0100               	movlb	0	; () banked
  1647  0014BC  0100               	movlb	0	; () banked
  1648  0014BE  51A8               	movf	?___lwmod& (0+255),w,b
  1649  0014C0  0A09               	xorlw	9
  1650  0014C2  0100               	movlb	0	; () banked
  1651  0014C4  11A9               	iorwf	(?___lwmod+1)& (0+255),w,b
  1652  0014C6  A4D8               	btfss	status,2,c
  1653  0014C8  0012               	return	
  1654                           
  1655                           ; BSR set to: 0
  1656                           ;timer0_thread.c: 25: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1657  0014CA  0100               	movlb	0	; () banked
  1658  0014CC  6FCA               	movwf	??_timer0_lthread& (0+255),b
  1659  0014CE  0E14               	movlw	20
  1660  0014D0  0100               	movlb	0	; () banked
  1661  0014D2  0100               	movlb	0	; () banked
  1662  0014D4  6FBE               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1663  0014D6  0100               	movlb	0	; () banked
  1664  0014D8  51CA               	movf	??_timer0_lthread& (0+255),w,b
  1665  0014DA  0100               	movlb	0	; () banked
  1666  0014DC  0100               	movlb	0	; () banked
  1667  0014DE  C0C3  F0C0         	movff	timer0_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1668  0014E2  0100               	movlb	0	; () banked
  1669  0014E4  0100               	movlb	0	; () banked
  1670  0014E6  C0C2  F0BF         	movff	timer0_lthread@tptr,FromMainHigh_sendmsg@data
  1671  0014EA  0E02               	movlw	2
  1672  0014EC  EC7F  F00C         	call	_FromMainHigh_sendmsg
  1673  0014F0  0100               	movlb	0	; () banked
  1674  0014F2  0100               	movlb	0	; () banked
  1675  0014F4  6FCB               	movwf	timer0_lthread@retval& (0+255),b
  1676  0014F6  0012               	return	
  1677  0014F8                     __end_of_timer0_lthread:
  1678                           	opt stack 0
  1679                           tblptru	equ	0xFF8
  1680                           tblptrh	equ	0xFF7
  1681                           tblptrl	equ	0xFF6
  1682                           tablat	equ	0xFF5
  1683                           postinc0	equ	0xFEE
  1684                           wreg	equ	0xFE8
  1685                           indf2	equ	0xFDF
  1686                           postinc2	equ	0xFDE
  1687                           postdec2	equ	0xFDD
  1688                           fsr2h	equ	0xFDA
  1689                           fsr2l	equ	0xFD9
  1690                           status	equ	0xFD8
  1691                           
  1692 ;; *************** function ___lwmod *****************
  1693 ;; Defined at:
  1694 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;  dividend        2   40[BANK0 ] unsigned int 
  1697 ;;  divisor         2   42[BANK0 ] unsigned int 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  counter         1   45[BANK0 ] unsigned char 
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  2   40[BANK0 ] unsigned int 
  1702 ;; Registers used:
  1703 ;;		wreg, status,2, status,0
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1709 ;;      Params:         0       4       0       0       0
  1710 ;;      Locals:         0       1       0       0       0
  1711 ;;      Temps:          0       1       0       0       0
  1712 ;;      Totals:         0       6       0       0       0
  1713 ;;Total ram usage:        6 bytes
  1714 ;; Hardware stack levels used:    1
  1715 ;; Hardware stack levels required when called:   10
  1716 ;; This function calls:
  1717 ;;		Nothing
  1718 ;; This function is called by:
  1719 ;;		_timer1_lthread
  1720 ;;		_timer0_lthread
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text4
  1725  00128C                     __ptext4:
  1726                           	opt stack 0
  1727  00128C                     ___lwmod:
  1728                           	opt stack 18
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;incstack = 0
  1732  00128C  0100               	movlb	0	; () banked
  1733  00128E  0100               	movlb	0	; () banked
  1734  001290  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1735  001292  11AA               	iorwf	___lwmod@divisor& (0+255),w,b
  1736  001294  B4D8               	btfsc	status,2,c
  1737  001296  D03A               	goto	l1059
  1738                           
  1739                           ; BSR set to: 0
  1740  001298  0100               	movlb	0	; () banked
  1741  00129A  6FAC               	movwf	??___lwmod& (0+255),b
  1742  00129C  0E01               	movlw	1
  1743  00129E  0100               	movlb	0	; () banked
  1744  0012A0  0100               	movlb	0	; () banked
  1745  0012A2  6FAD               	movwf	___lwmod@counter& (0+255),b
  1746  0012A4  0100               	movlb	0	; () banked
  1747  0012A6  51AC               	movf	??___lwmod& (0+255),w,b
  1748  0012A8  D009               	goto	l2861
  1749  0012AA                     l2859:
  1750                           
  1751                           ; BSR set to: 0
  1752  0012AA  0100               	movlb	0	; () banked
  1753  0012AC  0100               	movlb	0	; () banked
  1754  0012AE  0100               	movlb	0	; () banked
  1755  0012B0  90D8               	bcf	status,0,c
  1756  0012B2  37AA               	rlcf	___lwmod@divisor& (0+255),f,b
  1757  0012B4  37AB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1758  0012B6  0100               	movlb	0	; () banked
  1759  0012B8  0100               	movlb	0	; () banked
  1760  0012BA  2BAD               	incf	___lwmod@counter& (0+255),f,b
  1761  0012BC                     l2861:
  1762                           
  1763                           ; BSR set to: 0
  1764  0012BC  0100               	movlb	0	; () banked
  1765  0012BE  0100               	movlb	0	; () banked
  1766  0012C0  AFAB               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1767  0012C2  D7F3               	goto	l2859
  1768  0012C4                     l2863:
  1769                           
  1770                           ; BSR set to: 0
  1771  0012C4  0100               	movlb	0	; () banked
  1772  0012C6  0100               	movlb	0	; () banked
  1773  0012C8  51AA               	movf	___lwmod@divisor& (0+255),w,b
  1774  0012CA  0100               	movlb	0	; () banked
  1775  0012CC  0100               	movlb	0	; () banked
  1776  0012CE  5DA8               	subwf	___lwmod@dividend& (0+255),w,b
  1777  0012D0  0100               	movlb	0	; () banked
  1778  0012D2  0100               	movlb	0	; () banked
  1779  0012D4  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1780  0012D6  0100               	movlb	0	; () banked
  1781  0012D8  0100               	movlb	0	; () banked
  1782  0012DA  59A9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1783  0012DC  A0D8               	btfss	status,0,c
  1784  0012DE  D00C               	goto	l2867
  1785                           
  1786                           ; BSR set to: 0
  1787  0012E0  0100               	movlb	0	; () banked
  1788  0012E2  0100               	movlb	0	; () banked
  1789  0012E4  51AA               	movf	___lwmod@divisor& (0+255),w,b
  1790  0012E6  0100               	movlb	0	; () banked
  1791  0012E8  0100               	movlb	0	; () banked
  1792  0012EA  5FA8               	subwf	___lwmod@dividend& (0+255),f,b
  1793  0012EC  0100               	movlb	0	; () banked
  1794  0012EE  0100               	movlb	0	; () banked
  1795  0012F0  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1796  0012F2  0100               	movlb	0	; () banked
  1797  0012F4  0100               	movlb	0	; () banked
  1798  0012F6  5BA9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1799  0012F8                     l2867:
  1800                           
  1801                           ; BSR set to: 0
  1802  0012F8  0100               	movlb	0	; () banked
  1803  0012FA  0100               	movlb	0	; () banked
  1804  0012FC  0100               	movlb	0	; () banked
  1805  0012FE  90D8               	bcf	status,0,c
  1806  001300  33AB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1807  001302  33AA               	rrcf	___lwmod@divisor& (0+255),f,b
  1808                           
  1809                           ; BSR set to: 0
  1810  001304  0100               	movlb	0	; () banked
  1811  001306  0100               	movlb	0	; () banked
  1812  001308  2FAD               	decfsz	___lwmod@counter& (0+255),f,b
  1813  00130A  D7DC               	goto	l2863
  1814  00130C                     l1059:
  1815                           
  1816                           ; BSR set to: 0
  1817  00130C  C0A8  F0A8         	movff	___lwmod@dividend,?___lwmod
  1818  001310  C0A9  F0A9         	movff	___lwmod@dividend+1,?___lwmod+1
  1819                           
  1820                           ; BSR set to: 0
  1821  001314  0012               	return	
  1822  001316                     __end_of___lwmod:
  1823                           	opt stack 0
  1824                           tblptru	equ	0xFF8
  1825                           tblptrh	equ	0xFF7
  1826                           tblptrl	equ	0xFF6
  1827                           tablat	equ	0xFF5
  1828                           postinc0	equ	0xFEE
  1829                           wreg	equ	0xFE8
  1830                           indf2	equ	0xFDF
  1831                           postinc2	equ	0xFDE
  1832                           postdec2	equ	0xFDD
  1833                           fsr2h	equ	0xFDA
  1834                           fsr2l	equ	0xFD9
  1835                           status	equ	0xFD8
  1836                           
  1837 ;; *************** function _FromMainHigh_sendmsg *****************
  1838 ;; Defined at:
  1839 ;;		line 174 in file "../src/messages.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;  length          1    wreg     unsigned char 
  1842 ;;  msgtype         1   62[BANK0 ] unsigned char 
  1843 ;;  data            2   63[BANK0 ] PTR void 
  1844 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  length          1   65[BANK0 ] unsigned char 
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      char 
  1849 ;; Registers used:
  1850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1856 ;;      Params:         0       3       0       0       0
  1857 ;;      Locals:         0       1       0       0       0
  1858 ;;      Temps:          0       0       0       0       0
  1859 ;;      Totals:         0       4       0       0       0
  1860 ;;Total ram usage:        4 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; Hardware stack levels required when called:   12
  1863 ;; This function calls:
  1864 ;;		_send_msg
  1865 ;; This function is called by:
  1866 ;;		_timer1_lthread
  1867 ;;		_timer0_lthread
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text5
  1872  0018FE                     __ptext5:
  1873                           	opt stack 0
  1874  0018FE                     _FromMainHigh_sendmsg:
  1875                           	opt stack 16
  1876                           
  1877                           ; BSR set to: 0
  1878                           ;incstack = 0
  1879                           ;FromMainHigh_sendmsg@length stored from wreg
  1880  0018FE  CFE8 F0C1          	movff	wreg,FromMainHigh_sendmsg@length
  1881                           
  1882                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1883  001902  0102               	movlb	2	; () banked
  1884  001904  0E02               	movlw	high _FromMainHigh_MQ
  1885  001906  0100               	movlb	0	; () banked
  1886  001908  0100               	movlb	0	; () banked
  1887  00190A  6FB3               	movwf	(send_msg@qptr+1)& (0+255),b
  1888  00190C  0102               	movlb	2	; () banked
  1889  00190E  0E00               	movlw	low _FromMainHigh_MQ
  1890  001910  0100               	movlb	0	; () banked
  1891  001912  0100               	movlb	0	; () banked
  1892  001914  6FB2               	movwf	send_msg@qptr& (0+255),b
  1893  001916  C0C1  F0B4         	movff	FromMainHigh_sendmsg@length,send_msg@length
  1894  00191A  C0BE  F0B5         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  1895  00191E  0100               	movlb	0	; () banked
  1896  001920  0100               	movlb	0	; () banked
  1897  001922  C0C0  F0B7         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  1898  001926  0100               	movlb	0	; () banked
  1899  001928  0100               	movlb	0	; () banked
  1900  00192A  C0BF  F0B6         	movff	FromMainHigh_sendmsg@data,send_msg@data
  1901  00192E  EC52  F006         	call	_send_msg	;wreg free
  1902  001932  0012               	return	
  1903  001934                     __end_of_FromMainHigh_sendmsg:
  1904                           	opt stack 0
  1905                           tblptru	equ	0xFF8
  1906                           tblptrh	equ	0xFF7
  1907                           tblptrl	equ	0xFF6
  1908                           tablat	equ	0xFF5
  1909                           postinc0	equ	0xFEE
  1910                           wreg	equ	0xFE8
  1911                           indf2	equ	0xFDF
  1912                           postinc2	equ	0xFDE
  1913                           postdec2	equ	0xFDD
  1914                           fsr2h	equ	0xFDA
  1915                           fsr2l	equ	0xFD9
  1916                           status	equ	0xFD8
  1917                           
  1918 ;; *************** function _send_msg *****************
  1919 ;; Defined at:
  1920 ;;		line 24 in file "../src/messages.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  qptr            2   50[BANK0 ] PTR struct __msg_queue
  1923 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1924 ;;  length          1   52[BANK0 ] unsigned char 
  1925 ;;  msgtype         1   53[BANK0 ] unsigned char 
  1926 ;;  data            2   54[BANK0 ] PTR void 
  1927 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  1928 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;  qmsg            2   60[BANK0 ] PTR struct __msg
  1931 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  1932 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1933 ;;  tlength         2   57[BANK0 ] unsigned int 
  1934 ;;  slot            1   59[BANK0 ] unsigned char 
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      char 
  1937 ;; Registers used:
  1938 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1944 ;;      Params:         0       6       0       0       0
  1945 ;;      Locals:         0       5       0       0       0
  1946 ;;      Temps:          0       1       0       0       0
  1947 ;;      Totals:         0      12       0       0       0
  1948 ;;Total ram usage:       12 bytes
  1949 ;; Hardware stack levels used:    1
  1950 ;; Hardware stack levels required when called:   11
  1951 ;; This function calls:
  1952 ;;		_memcpy
  1953 ;; This function is called by:
  1954 ;;		_FromMainHigh_sendmsg
  1955 ;;		_FromMainLow_sendmsg
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           	psect	text6
  1960  000CA4                     __ptext6:
  1961                           	opt stack 0
  1962  000CA4                     _send_msg:
  1963                           	opt stack 16
  1964                           
  1965                           ;messages.c: 25: unsigned char slot;
  1966                           ;messages.c: 27: msg *qmsg;
  1967                           ;messages.c: 28: size_t tlength = length;
  1968                           
  1969                           ;incstack = 0
  1970  000CA4  0100               	movlb	0	; () banked
  1971  000CA6  0100               	movlb	0	; () banked
  1972  000CA8  C0B4  F0B9         	movff	send_msg@length,send_msg@tlength
  1973  000CAC  0100               	movlb	0	; () banked
  1974  000CAE  0100               	movlb	0	; () banked
  1975  000CB0  6BBA               	clrf	(send_msg@tlength+1)& (0+255),b
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;messages.c: 38: slot = qptr->cur_write_ind;
  1979  000CB2  0100               	movlb	0	; () banked
  1980  000CB4  EE20 F034          	lfsr	2,52
  1981  000CB8  0100               	movlb	0	; () banked
  1982  000CBA  51B2               	movf	send_msg@qptr& (0+255),w,b
  1983  000CBC  26D9               	addwf	fsr2l,f,c
  1984  000CBE  0100               	movlb	0	; () banked
  1985  000CC0  51B3               	movf	(send_msg@qptr+1)& (0+255),w,b
  1986  000CC2  22DA               	addwfc	fsr2h,f,c
  1987  000CC4  50DF               	movf	indf2,w,c
  1988  000CC6  0100               	movlb	0	; () banked
  1989  000CC8  0100               	movlb	0	; () banked
  1990  000CCA  6FBB               	movwf	send_msg@slot& (0+255),b
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  1994  000CCC  0100               	movlb	0	; () banked
  1995  000CCE  0100               	movlb	0	; () banked
  1996  000CD0  51BB               	movf	send_msg@slot& (0+255),w,b
  1997  000CD2  0D0D               	mullw	13
  1998  000CD4  50F3               	movf	prodl,w,c
  1999  000CD6  0100               	movlb	0	; () banked
  2000  000CD8  0100               	movlb	0	; () banked
  2001  000CDA  25B2               	addwf	send_msg@qptr& (0+255),w,b
  2002  000CDC  0100               	movlb	0	; () banked
  2003  000CDE  0100               	movlb	0	; () banked
  2004  000CE0  6FBC               	movwf	send_msg@qmsg& (0+255),b
  2005  000CE2  50F4               	movf	prodh,w,c
  2006  000CE4  0100               	movlb	0	; () banked
  2007  000CE6  0100               	movlb	0	; () banked
  2008  000CE8  21B3               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2009  000CEA  0100               	movlb	0	; () banked
  2010  000CEC  6FBD               	movwf	(send_msg@qmsg+1)& (0+255),b
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;messages.c: 41: if (qmsg->full != 0) {
  2014  000CEE  C0BC  FFD9         	movff	send_msg@qmsg,fsr2l
  2015  000CF2  C0BD  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2016  000CF6  50DF               	movf	indf2,w,c
  2017  000CF8  B4D8               	btfsc	status,2,c
  2018  000CFA  D002               	goto	l2465
  2019                           
  2020                           ; BSR set to: 0
  2021                           ;messages.c: 42: return (-1);
  2022  000CFC  0EFF               	movlw	255
  2023  000CFE  0012               	return	
  2024  000D00                     l2465:
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;messages.c: 43: }
  2028                           ;messages.c: 46: qmsg->length = length;
  2029  000D00  0100               	movlb	0	; () banked
  2030  000D02  EE20 F001          	lfsr	2,1
  2031  000D06  0100               	movlb	0	; () banked
  2032  000D08  51BC               	movf	send_msg@qmsg& (0+255),w,b
  2033  000D0A  26D9               	addwf	fsr2l,f,c
  2034  000D0C  0100               	movlb	0	; () banked
  2035  000D0E  51BD               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2036  000D10  22DA               	addwfc	fsr2h,f,c
  2037  000D12  0100               	movlb	0	; () banked
  2038  000D14  C0B4  FFDF         	movff	send_msg@length,indf2
  2039                           
  2040                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2041  000D18  0100               	movlb	0	; () banked
  2042  000D1A  EE20 F002          	lfsr	2,2
  2043  000D1E  0100               	movlb	0	; () banked
  2044  000D20  51BC               	movf	send_msg@qmsg& (0+255),w,b
  2045  000D22  26D9               	addwf	fsr2l,f,c
  2046  000D24  0100               	movlb	0	; () banked
  2047  000D26  51BD               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2048  000D28  22DA               	addwfc	fsr2h,f,c
  2049  000D2A  0100               	movlb	0	; () banked
  2050  000D2C  C0B5  FFDF         	movff	send_msg@msgtype,indf2
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2054  000D30  0E03               	movlw	3
  2055  000D32  0100               	movlb	0	; () banked
  2056  000D34  0100               	movlb	0	; () banked
  2057  000D36  25BC               	addwf	send_msg@qmsg& (0+255),w,b
  2058  000D38  0100               	movlb	0	; () banked
  2059  000D3A  0100               	movlb	0	; () banked
  2060  000D3C  6FA8               	movwf	memcpy@d1& (0+255),b
  2061  000D3E  0E00               	movlw	0
  2062  000D40  0100               	movlb	0	; () banked
  2063  000D42  0100               	movlb	0	; () banked
  2064  000D44  21BD               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2065  000D46  0100               	movlb	0	; () banked
  2066  000D48  6FA9               	movwf	(memcpy@d1+1)& (0+255),b
  2067  000D4A  0100               	movlb	0	; () banked
  2068  000D4C  0100               	movlb	0	; () banked
  2069  000D4E  C0B7  F0AB         	movff	send_msg@data+1,memcpy@s1+1
  2070  000D52  0100               	movlb	0	; () banked
  2071  000D54  0100               	movlb	0	; () banked
  2072  000D56  C0B6  F0AA         	movff	send_msg@data,memcpy@s1
  2073  000D5A  C0B9  F0AC         	movff	send_msg@tlength,memcpy@n
  2074  000D5E  C0BA  F0AD         	movff	send_msg@tlength+1,memcpy@n+1
  2075  000D62  EC1A  F00B         	call	_memcpy	;wreg free
  2076                           
  2077                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2078  000D66  0100               	movlb	0	; () banked
  2079  000D68  EE20 F034          	lfsr	2,52
  2080  000D6C  0100               	movlb	0	; () banked
  2081  000D6E  51B2               	movf	send_msg@qptr& (0+255),w,b
  2082  000D70  26D9               	addwf	fsr2l,f,c
  2083  000D72  0100               	movlb	0	; () banked
  2084  000D74  51B3               	movf	(send_msg@qptr+1)& (0+255),w,b
  2085  000D76  22DA               	addwfc	fsr2h,f,c
  2086  000D78  0100               	movlb	0	; () banked
  2087  000D7A  EE10 F034          	lfsr	1,52
  2088  000D7E  0100               	movlb	0	; () banked
  2089  000D80  51B2               	movf	send_msg@qptr& (0+255),w,b
  2090  000D82  26E1               	addwf	fsr1l,f,c
  2091  000D84  0100               	movlb	0	; () banked
  2092  000D86  51B3               	movf	(send_msg@qptr+1)& (0+255),w,b
  2093  000D88  22E2               	addwfc	fsr1h,f,c
  2094  000D8A  50E7               	movf	indf1,w,c
  2095  000D8C  0100               	movlb	0	; () banked
  2096  000D8E  6FB8               	movwf	??_send_msg& (0+255),b
  2097  000D90  0100               	movlb	0	; () banked
  2098  000D92  29B8               	incf	??_send_msg& (0+255),w,b
  2099  000D94  0B03               	andlw	3
  2100  000D96  6EDF               	movwf	indf2,c
  2101                           
  2102                           ; BSR set to: 0
  2103                           ;messages.c: 59: qmsg->full = 1;
  2104  000D98  C0BC  FFD9         	movff	send_msg@qmsg,fsr2l
  2105  000D9C  C0BD  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2106  000DA0  0E01               	movlw	1
  2107  000DA2  6EDF               	movwf	indf2,c
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;messages.c: 60: return (1);
  2111  000DA4  0E01               	movlw	1
  2112  000DA6  0012               	return	
  2113  000DA8                     __end_of_send_msg:
  2114                           	opt stack 0
  2115                           tblptru	equ	0xFF8
  2116                           tblptrh	equ	0xFF7
  2117                           tblptrl	equ	0xFF6
  2118                           tablat	equ	0xFF5
  2119                           prodh	equ	0xFF4
  2120                           prodl	equ	0xFF3
  2121                           postinc0	equ	0xFEE
  2122                           wreg	equ	0xFE8
  2123                           indf1	equ	0xFE7
  2124                           fsr1h	equ	0xFE2
  2125                           fsr1l	equ	0xFE1
  2126                           indf2	equ	0xFDF
  2127                           postinc2	equ	0xFDE
  2128                           postdec2	equ	0xFDD
  2129                           fsr2h	equ	0xFDA
  2130                           fsr2l	equ	0xFD9
  2131                           status	equ	0xFD8
  2132                           
  2133 ;; *************** function _start_i2c_slave_reply *****************
  2134 ;; Defined at:
  2135 ;;		line 54 in file "../src/my_i2c.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;  length          1    wreg     unsigned char 
  2138 ;;  msg             2   40[BANK0 ] PTR unsigned char 
  2139 ;;		 -> main@msgbuffer(11), i2c_int_handler@msgbuffer(11), 
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;  length          1   44[BANK0 ] unsigned char 
  2142 ;; Return value:  Size  Location     Type
  2143 ;;		None               void
  2144 ;; Registers used:
  2145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2151 ;;      Params:         0       2       0       0       0
  2152 ;;      Locals:         0       1       0       0       0
  2153 ;;      Temps:          0       2       0       0       0
  2154 ;;      Totals:         0       5       0       0       0
  2155 ;;Total ram usage:        5 bytes
  2156 ;; Hardware stack levels used:    1
  2157 ;; Hardware stack levels required when called:   10
  2158 ;; This function calls:
  2159 ;;		Nothing
  2160 ;; This function is called by:
  2161 ;;		_main
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165                           	psect	text7
  2166  000B96                     __ptext7:
  2167                           	opt stack 0
  2168  000B96                     _start_i2c_slave_reply:
  2169                           	opt stack 19
  2170                           
  2171                           ; BSR set to: 0
  2172                           ;incstack = 0
  2173                           ;start_i2c_slave_reply@length stored from wreg
  2174  000B96  CFE8 F0AC          	movff	wreg,start_i2c_slave_reply@length
  2175                           
  2176                           ;my_i2c.c: 56: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2177  000B9A  0100               	movlb	0	; () banked
  2178  000B9C  EE20 F019          	lfsr	2,25
  2179  000BA0  0100               	movlb	0	; () banked
  2180  000BA2  51CD               	movf	_ic_ptr& (0+255),w,b
  2181  000BA4  26D9               	addwf	fsr2l,f,c
  2182  000BA6  0100               	movlb	0	; () banked
  2183  000BA8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2184  000BAA  22DA               	addwfc	fsr2h,f,c
  2185  000BAC  0E00               	movlw	0
  2186  000BAE  6EDF               	movwf	indf2,c
  2187  000BB0  D042               	goto	l2231
  2188  000BB2                     l2227:
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;my_i2c.c: 57: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2192  000BB2  0100               	movlb	0	; () banked
  2193  000BB4  EE20 F019          	lfsr	2,25
  2194  000BB8  0100               	movlb	0	; () banked
  2195  000BBA  51CD               	movf	_ic_ptr& (0+255),w,b
  2196  000BBC  26D9               	addwf	fsr2l,f,c
  2197  000BBE  0100               	movlb	0	; () banked
  2198  000BC0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2199  000BC2  22DA               	addwfc	fsr2h,f,c
  2200  000BC4  50DF               	movf	indf2,w,c
  2201  000BC6  0100               	movlb	0	; () banked
  2202  000BC8  6FAA               	movwf	??_start_i2c_slave_reply& (0+255),b
  2203  000BCA  0100               	movlb	0	; () banked
  2204  000BCC  51AA               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2205  000BCE  0D01               	mullw	1
  2206  000BD0  50F3               	movf	prodl,w,c
  2207  000BD2  0100               	movlb	0	; () banked
  2208  000BD4  0100               	movlb	0	; () banked
  2209  000BD6  25A8               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2210  000BD8  6ED9               	movwf	fsr2l,c
  2211  000BDA  50F4               	movf	prodh,w,c
  2212  000BDC  0100               	movlb	0	; () banked
  2213  000BDE  0100               	movlb	0	; () banked
  2214  000BE0  21A9               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2215  000BE2  6EDA               	movwf	fsr2h,c
  2216  000BE4  0100               	movlb	0	; () banked
  2217  000BE6  EE10 F019          	lfsr	1,25
  2218  000BEA  0100               	movlb	0	; () banked
  2219  000BEC  51CD               	movf	_ic_ptr& (0+255),w,b
  2220  000BEE  26E1               	addwf	fsr1l,f,c
  2221  000BF0  0100               	movlb	0	; () banked
  2222  000BF2  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2223  000BF4  22E2               	addwfc	fsr1h,f,c
  2224  000BF6  50E7               	movf	indf1,w,c
  2225  000BF8  0100               	movlb	0	; () banked
  2226  000BFA  6FAB               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2227  000BFC  0100               	movlb	0	; () banked
  2228  000BFE  51AB               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2229  000C00  0D01               	mullw	1
  2230  000C02  0E0F               	movlw	15
  2231  000C04  26F3               	addwf	prodl,f,c
  2232  000C06  0E00               	movlw	0
  2233  000C08  22F4               	addwfc	prodh,f,c
  2234  000C0A  50F3               	movf	prodl,w,c
  2235  000C0C  0100               	movlb	0	; () banked
  2236  000C0E  0100               	movlb	0	; () banked
  2237  000C10  25CD               	addwf	_ic_ptr& (0+255),w,b
  2238  000C12  6EE1               	movwf	fsr1l,c
  2239  000C14  50F4               	movf	prodh,w,c
  2240  000C16  0100               	movlb	0	; () banked
  2241  000C18  0100               	movlb	0	; () banked
  2242  000C1A  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2243  000C1C  6EE2               	movwf	fsr1h,c
  2244  000C1E  CFDF FFE7          	movff	indf2,indf1
  2245                           
  2246                           ; BSR set to: 0
  2247  000C22  0100               	movlb	0	; () banked
  2248  000C24  EE20 F019          	lfsr	2,25
  2249  000C28  0100               	movlb	0	; () banked
  2250  000C2A  51CD               	movf	_ic_ptr& (0+255),w,b
  2251  000C2C  26D9               	addwf	fsr2l,f,c
  2252  000C2E  0100               	movlb	0	; () banked
  2253  000C30  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2254  000C32  22DA               	addwfc	fsr2h,f,c
  2255  000C34  2ADF               	incf	indf2,f,c
  2256  000C36                     l2231:
  2257                           
  2258                           ; BSR set to: 0
  2259  000C36  0100               	movlb	0	; () banked
  2260  000C38  EE20 F019          	lfsr	2,25
  2261  000C3C  0100               	movlb	0	; () banked
  2262  000C3E  51CD               	movf	_ic_ptr& (0+255),w,b
  2263  000C40  26D9               	addwf	fsr2l,f,c
  2264  000C42  0100               	movlb	0	; () banked
  2265  000C44  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2266  000C46  22DA               	addwfc	fsr2h,f,c
  2267  000C48  50DF               	movf	indf2,w,c
  2268  000C4A  0100               	movlb	0	; () banked
  2269  000C4C  6FAA               	movwf	??_start_i2c_slave_reply& (0+255),b
  2270  000C4E  0100               	movlb	0	; () banked
  2271  000C50  0100               	movlb	0	; () banked
  2272  000C52  51AC               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2273  000C54  0100               	movlb	0	; () banked
  2274  000C56  5DAA               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2275  000C58  A0D8               	btfss	status,0,c
  2276  000C5A  D7AB               	goto	l2227
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;my_i2c.c: 58: }
  2280                           ;my_i2c.c: 59: ic_ptr->outbuflen = length;
  2281                           
  2282                           ; BSR set to: 0
  2283  000C5C  0100               	movlb	0	; () banked
  2284  000C5E  EE20 F019          	lfsr	2,25
  2285  000C62  0100               	movlb	0	; () banked
  2286  000C64  51CD               	movf	_ic_ptr& (0+255),w,b
  2287  000C66  26D9               	addwf	fsr2l,f,c
  2288  000C68  0100               	movlb	0	; () banked
  2289  000C6A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2290  000C6C  22DA               	addwfc	fsr2h,f,c
  2291  000C6E  0100               	movlb	0	; () banked
  2292  000C70  C0AC  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2293                           
  2294                           ;my_i2c.c: 60: ic_ptr->outbufind = 1;
  2295  000C74  0100               	movlb	0	; () banked
  2296  000C76  EE20 F01A          	lfsr	2,26
  2297  000C7A  0100               	movlb	0	; () banked
  2298  000C7C  51CD               	movf	_ic_ptr& (0+255),w,b
  2299  000C7E  26D9               	addwf	fsr2l,f,c
  2300  000C80  0100               	movlb	0	; () banked
  2301  000C82  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2302  000C84  22DA               	addwfc	fsr2h,f,c
  2303  000C86  0E01               	movlw	1
  2304  000C88  6EDF               	movwf	indf2,c
  2305                           
  2306                           ;my_i2c.c: 63: SSPBUF = ic_ptr->outbuffer[0];
  2307  000C8A  0100               	movlb	0	; () banked
  2308  000C8C  EE20 F00F          	lfsr	2,15
  2309  000C90  0100               	movlb	0	; () banked
  2310  000C92  51CD               	movf	_ic_ptr& (0+255),w,b
  2311  000C94  26D9               	addwf	fsr2l,f,c
  2312  000C96  0100               	movlb	0	; () banked
  2313  000C98  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2314  000C9A  22DA               	addwfc	fsr2h,f,c
  2315  000C9C  50DF               	movf	indf2,w,c
  2316  000C9E  6EC9               	movwf	4041,c	;volatile
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;my_i2c.c: 66: SSPCON1bits.CKP = 1;
  2320  000CA0  88C6               	bsf	4038,4,c	;volatile
  2321                           
  2322                           ; BSR set to: 0
  2323  000CA2  0012               	return	
  2324  000CA4                     __end_of_start_i2c_slave_reply:
  2325                           	opt stack 0
  2326                           tblptru	equ	0xFF8
  2327                           tblptrh	equ	0xFF7
  2328                           tblptrl	equ	0xFF6
  2329                           tablat	equ	0xFF5
  2330                           prodh	equ	0xFF4
  2331                           prodl	equ	0xFF3
  2332                           postinc0	equ	0xFEE
  2333                           wreg	equ	0xFE8
  2334                           indf1	equ	0xFE7
  2335                           fsr1h	equ	0xFE2
  2336                           fsr1l	equ	0xFE1
  2337                           indf2	equ	0xFDF
  2338                           postinc2	equ	0xFDE
  2339                           postdec2	equ	0xFDD
  2340                           fsr2h	equ	0xFDA
  2341                           fsr2l	equ	0xFD9
  2342                           status	equ	0xFD8
  2343                           
  2344 ;; *************** function _init_uart_recv *****************
  2345 ;; Defined at:
  2346 ;;		line 30 in file "../src/my_uart.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  uc              2   40[BANK0 ] PTR struct __uart_comm
  2349 ;;		 -> main@uc(5), 
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;		None
  2352 ;; Return value:  Size  Location     Type
  2353 ;;		None               void
  2354 ;; Registers used:
  2355 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2361 ;;      Params:         0       2       0       0       0
  2362 ;;      Locals:         0       0       0       0       0
  2363 ;;      Temps:          0       0       0       0       0
  2364 ;;      Totals:         0       2       0       0       0
  2365 ;;Total ram usage:        2 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; Hardware stack levels required when called:   10
  2368 ;; This function calls:
  2369 ;;		Nothing
  2370 ;; This function is called by:
  2371 ;;		_main
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text8
  2376  001A8E                     __ptext8:
  2377                           	opt stack 0
  2378  001A8E                     _init_uart_recv:
  2379                           	opt stack 19
  2380                           
  2381                           ;my_uart.c: 31: uc_ptr = uc;
  2382                           
  2383                           ; BSR set to: 0
  2384                           ;incstack = 0
  2385  001A8E  0100               	movlb	0	; () banked
  2386  001A90  C0A9  F051         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2387  001A94  0100               	movlb	0	; () banked
  2388  001A96  C0A8  F050         	movff	init_uart_recv@uc,_uc_ptr
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;my_uart.c: 32: uc_ptr->buflen = 0;
  2392  001A9A  EE20 F004          	lfsr	2,4
  2393  001A9E  5050               	movf	_uc_ptr,w,c
  2394  001AA0  26D9               	addwf	fsr2l,f,c
  2395  001AA2  5051               	movf	_uc_ptr+1,w,c
  2396  001AA4  22DA               	addwfc	fsr2h,f,c
  2397  001AA6  0E00               	movlw	0
  2398  001AA8  6EDF               	movwf	indf2,c
  2399                           
  2400                           ; BSR set to: 0
  2401  001AAA  0012               	return	
  2402  001AAC                     __end_of_init_uart_recv:
  2403                           	opt stack 0
  2404                           tblptru	equ	0xFF8
  2405                           tblptrh	equ	0xFF7
  2406                           tblptrl	equ	0xFF6
  2407                           tablat	equ	0xFF5
  2408                           prodh	equ	0xFF4
  2409                           prodl	equ	0xFF3
  2410                           postinc0	equ	0xFEE
  2411                           wreg	equ	0xFE8
  2412                           indf1	equ	0xFE7
  2413                           fsr1h	equ	0xFE2
  2414                           fsr1l	equ	0xFE1
  2415                           indf2	equ	0xFDF
  2416                           postinc2	equ	0xFDE
  2417                           postdec2	equ	0xFDD
  2418                           fsr2h	equ	0xFDA
  2419                           fsr2l	equ	0xFD9
  2420                           status	equ	0xFD8
  2421                           
  2422 ;; *************** function _init_timer1_lthread *****************
  2423 ;; Defined at:
  2424 ;;		line 6 in file "../src/timer1_thread.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  tptr            2   40[BANK0 ] PTR struct __timer1_thre
  2427 ;;		 -> main@t1thread_data(2), 
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;		None
  2430 ;; Return value:  Size  Location     Type
  2431 ;;		None               void
  2432 ;; Registers used:
  2433 ;;		wreg, fsr2l, fsr2h
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2439 ;;      Params:         0       2       0       0       0
  2440 ;;      Locals:         0       0       0       0       0
  2441 ;;      Temps:          0       0       0       0       0
  2442 ;;      Totals:         0       2       0       0       0
  2443 ;;Total ram usage:        2 bytes
  2444 ;; Hardware stack levels used:    1
  2445 ;; Hardware stack levels required when called:   10
  2446 ;; This function calls:
  2447 ;;		Nothing
  2448 ;; This function is called by:
  2449 ;;		_main
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           	psect	text9
  2454  001AE0                     __ptext9:
  2455                           	opt stack 0
  2456  001AE0                     _init_timer1_lthread:
  2457                           	opt stack 19
  2458                           
  2459                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;incstack = 0
  2463  001AE0  C0A8  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2464  001AE4  C0A9  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2465  001AE8  0E00               	movlw	0
  2466  001AEA  6EDE               	movwf	postinc2,c
  2467  001AEC  0E00               	movlw	0
  2468  001AEE  6EDD               	movwf	postdec2,c
  2469  001AF0  0012               	return	
  2470  001AF2                     __end_of_init_timer1_lthread:
  2471                           	opt stack 0
  2472                           tblptru	equ	0xFF8
  2473                           tblptrh	equ	0xFF7
  2474                           tblptrl	equ	0xFF6
  2475                           tablat	equ	0xFF5
  2476                           prodh	equ	0xFF4
  2477                           prodl	equ	0xFF3
  2478                           postinc0	equ	0xFEE
  2479                           wreg	equ	0xFE8
  2480                           indf1	equ	0xFE7
  2481                           fsr1h	equ	0xFE2
  2482                           fsr1l	equ	0xFE1
  2483                           indf2	equ	0xFDF
  2484                           postinc2	equ	0xFDE
  2485                           postdec2	equ	0xFDD
  2486                           fsr2h	equ	0xFDA
  2487                           fsr2l	equ	0xFD9
  2488                           status	equ	0xFD8
  2489                           
  2490 ;; *************** function _init_timer0_lthread *****************
  2491 ;; Defined at:
  2492 ;;		line 10 in file "../src/timer0_thread.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  tptr            2   40[BANK0 ] PTR struct __timer0_thre
  2495 ;;		 -> main@t0thread_data(2), 
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;		None               void
  2500 ;; Registers used:
  2501 ;;		wreg, fsr2l, fsr2h
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2507 ;;      Params:         0       2       0       0       0
  2508 ;;      Locals:         0       0       0       0       0
  2509 ;;      Temps:          0       0       0       0       0
  2510 ;;      Totals:         0       2       0       0       0
  2511 ;;Total ram usage:        2 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; Hardware stack levels required when called:   10
  2514 ;; This function calls:
  2515 ;;		Nothing
  2516 ;; This function is called by:
  2517 ;;		_main
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text10
  2522  001AF2                     __ptext10:
  2523                           	opt stack 0
  2524  001AF2                     _init_timer0_lthread:
  2525                           	opt stack 19
  2526                           
  2527                           ;timer0_thread.c: 11: tptr->msgcount = 0;
  2528                           
  2529                           ;incstack = 0
  2530  001AF2  C0A8  FFD9         	movff	init_timer0_lthread@tptr,fsr2l
  2531  001AF6  C0A9  FFDA         	movff	init_timer0_lthread@tptr+1,fsr2h
  2532  001AFA  0E00               	movlw	0
  2533  001AFC  6EDE               	movwf	postinc2,c
  2534  001AFE  0E00               	movlw	0
  2535  001B00  6EDD               	movwf	postdec2,c
  2536  001B02  0012               	return	
  2537  001B04                     __end_of_init_timer0_lthread:
  2538                           	opt stack 0
  2539                           tblptru	equ	0xFF8
  2540                           tblptrh	equ	0xFF7
  2541                           tblptrl	equ	0xFF6
  2542                           tablat	equ	0xFF5
  2543                           prodh	equ	0xFF4
  2544                           prodl	equ	0xFF3
  2545                           postinc0	equ	0xFEE
  2546                           wreg	equ	0xFE8
  2547                           indf1	equ	0xFE7
  2548                           fsr1h	equ	0xFE2
  2549                           fsr1l	equ	0xFE1
  2550                           indf2	equ	0xFDF
  2551                           postinc2	equ	0xFDE
  2552                           postdec2	equ	0xFDD
  2553                           fsr2h	equ	0xFDA
  2554                           fsr2l	equ	0xFD9
  2555                           status	equ	0xFD8
  2556                           
  2557 ;; *************** function _init_queues *****************
  2558 ;; Defined at:
  2559 ;;		line 194 in file "../src/messages.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;		None
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;		None
  2564 ;; Return value:  Size  Location     Type
  2565 ;;		None               void
  2566 ;; Registers used:
  2567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2573 ;;      Params:         0       0       0       0       0
  2574 ;;      Locals:         0       0       0       0       0
  2575 ;;      Temps:          0       1       0       0       0
  2576 ;;      Totals:         0       1       0       0       0
  2577 ;;Total ram usage:        1 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:   11
  2580 ;; This function calls:
  2581 ;;		_init_queue
  2582 ;; This function is called by:
  2583 ;;		_main
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           	psect	text11
  2588  0014F8                     __ptext11:
  2589                           	opt stack 0
  2590  0014F8                     _init_queues:
  2591                           	opt stack 18
  2592                           
  2593                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2594                           
  2595                           ;incstack = 0
  2596  0014F8  0100               	movlb	0	; () banked
  2597  0014FA  6FAC               	movwf	??_init_queues& (0+255),b
  2598  0014FC  0E00               	movlw	0
  2599  0014FE  6E4E               	movwf	_MQ_Main_Willing_to_block,c
  2600  001500  0100               	movlb	0	; () banked
  2601  001502  51AC               	movf	??_init_queues& (0+255),w,b
  2602                           
  2603                           ; BSR set to: 0
  2604                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2605  001504  0101               	movlb	1	; () banked
  2606  001506  0E01               	movlw	high _ToMainLow_MQ
  2607  001508  0100               	movlb	0	; () banked
  2608  00150A  0100               	movlb	0	; () banked
  2609  00150C  6FA9               	movwf	(init_queue@qptr+1)& (0+255),b
  2610  00150E  0101               	movlb	1	; () banked
  2611  001510  0E6C               	movlw	low _ToMainLow_MQ
  2612  001512  0100               	movlb	0	; () banked
  2613  001514  0100               	movlb	0	; () banked
  2614  001516  6FA8               	movwf	init_queue@qptr& (0+255),b
  2615  001518  ECCD  F009         	call	_init_queue	;wreg free
  2616                           
  2617                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2618  00151C  0101               	movlb	1	; () banked
  2619  00151E  0E01               	movlw	high _ToMainHigh_MQ
  2620  001520  0100               	movlb	0	; () banked
  2621  001522  0100               	movlb	0	; () banked
  2622  001524  6FA9               	movwf	(init_queue@qptr+1)& (0+255),b
  2623  001526  0101               	movlb	1	; () banked
  2624  001528  0E36               	movlw	low _ToMainHigh_MQ
  2625  00152A  0100               	movlb	0	; () banked
  2626  00152C  0100               	movlb	0	; () banked
  2627  00152E  6FA8               	movwf	init_queue@qptr& (0+255),b
  2628  001530  ECCD  F009         	call	_init_queue	;wreg free
  2629                           
  2630                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2631  001534  0101               	movlb	1	; () banked
  2632  001536  0E01               	movlw	high _FromMainLow_MQ
  2633  001538  0100               	movlb	0	; () banked
  2634  00153A  0100               	movlb	0	; () banked
  2635  00153C  6FA9               	movwf	(init_queue@qptr+1)& (0+255),b
  2636  00153E  0101               	movlb	1	; () banked
  2637  001540  0E00               	movlw	low _FromMainLow_MQ
  2638  001542  0100               	movlb	0	; () banked
  2639  001544  0100               	movlb	0	; () banked
  2640  001546  6FA8               	movwf	init_queue@qptr& (0+255),b
  2641  001548  ECCD  F009         	call	_init_queue	;wreg free
  2642                           
  2643                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2644  00154C  0102               	movlb	2	; () banked
  2645  00154E  0E02               	movlw	high _FromMainHigh_MQ
  2646  001550  0100               	movlb	0	; () banked
  2647  001552  0100               	movlb	0	; () banked
  2648  001554  6FA9               	movwf	(init_queue@qptr+1)& (0+255),b
  2649  001556  0102               	movlb	2	; () banked
  2650  001558  0E00               	movlw	low _FromMainHigh_MQ
  2651  00155A  0100               	movlb	0	; () banked
  2652  00155C  0100               	movlb	0	; () banked
  2653  00155E  6FA8               	movwf	init_queue@qptr& (0+255),b
  2654  001560  ECCD  F009         	call	_init_queue	;wreg free
  2655  001564  0012               	return	
  2656  001566                     __end_of_init_queues:
  2657                           	opt stack 0
  2658                           tblptru	equ	0xFF8
  2659                           tblptrh	equ	0xFF7
  2660                           tblptrl	equ	0xFF6
  2661                           tablat	equ	0xFF5
  2662                           prodh	equ	0xFF4
  2663                           prodl	equ	0xFF3
  2664                           postinc0	equ	0xFEE
  2665                           wreg	equ	0xFE8
  2666                           indf1	equ	0xFE7
  2667                           fsr1h	equ	0xFE2
  2668                           fsr1l	equ	0xFE1
  2669                           indf2	equ	0xFDF
  2670                           postinc2	equ	0xFDE
  2671                           postdec2	equ	0xFDD
  2672                           fsr2h	equ	0xFDA
  2673                           fsr2l	equ	0xFD9
  2674                           status	equ	0xFD8
  2675                           
  2676 ;; *************** function _init_queue *****************
  2677 ;; Defined at:
  2678 ;;		line 14 in file "../src/messages.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;  qptr            2   40[BANK0 ] PTR struct __msg_queue
  2681 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;  i               1   43[BANK0 ] unsigned char 
  2684 ;; Return value:  Size  Location     Type
  2685 ;;		None               void
  2686 ;; Registers used:
  2687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2693 ;;      Params:         0       2       0       0       0
  2694 ;;      Locals:         0       1       0       0       0
  2695 ;;      Temps:          0       1       0       0       0
  2696 ;;      Totals:         0       4       0       0       0
  2697 ;;Total ram usage:        4 bytes
  2698 ;; Hardware stack levels used:    1
  2699 ;; Hardware stack levels required when called:   10
  2700 ;; This function calls:
  2701 ;;		Nothing
  2702 ;; This function is called by:
  2703 ;;		_init_queues
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           	psect	text12
  2708  00139A                     __ptext12:
  2709                           	opt stack 0
  2710  00139A                     _init_queue:
  2711                           	opt stack 18
  2712                           
  2713                           ;messages.c: 15: unsigned char i;
  2714                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2715                           
  2716                           ;incstack = 0
  2717  00139A  0100               	movlb	0	; () banked
  2718  00139C  EE20 F034          	lfsr	2,52
  2719  0013A0  0100               	movlb	0	; () banked
  2720  0013A2  51A8               	movf	init_queue@qptr& (0+255),w,b
  2721  0013A4  26D9               	addwf	fsr2l,f,c
  2722  0013A6  0100               	movlb	0	; () banked
  2723  0013A8  51A9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2724  0013AA  22DA               	addwfc	fsr2h,f,c
  2725  0013AC  0E00               	movlw	0
  2726  0013AE  6EDF               	movwf	indf2,c
  2727                           
  2728                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2729  0013B0  0100               	movlb	0	; () banked
  2730  0013B2  EE20 F035          	lfsr	2,53
  2731  0013B6  0100               	movlb	0	; () banked
  2732  0013B8  51A8               	movf	init_queue@qptr& (0+255),w,b
  2733  0013BA  26D9               	addwf	fsr2l,f,c
  2734  0013BC  0100               	movlb	0	; () banked
  2735  0013BE  51A9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2736  0013C0  22DA               	addwfc	fsr2h,f,c
  2737  0013C2  0E00               	movlw	0
  2738  0013C4  6EDF               	movwf	indf2,c
  2739                           
  2740                           ; BSR set to: 0
  2741                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2742  0013C6  0100               	movlb	0	; () banked
  2743  0013C8  6FAA               	movwf	??_init_queue& (0+255),b
  2744  0013CA  0E00               	movlw	0
  2745  0013CC  0100               	movlb	0	; () banked
  2746  0013CE  0100               	movlb	0	; () banked
  2747  0013D0  6FAB               	movwf	init_queue@i& (0+255),b
  2748  0013D2  0100               	movlb	0	; () banked
  2749  0013D4  51AA               	movf	??_init_queue& (0+255),w,b
  2750                           
  2751                           ; BSR set to: 0
  2752  0013D6  0E03               	movlw	3
  2753  0013D8  0100               	movlb	0	; () banked
  2754  0013DA  0100               	movlb	0	; () banked
  2755  0013DC  65AB               	cpfsgt	init_queue@i& (0+255),b
  2756  0013DE  D001               	goto	l2447
  2757  0013E0  0012               	return	
  2758  0013E2                     l2447:
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;messages.c: 20: qptr->queue[i].full = 0;
  2762  0013E2  0100               	movlb	0	; () banked
  2763  0013E4  0100               	movlb	0	; () banked
  2764  0013E6  51AB               	movf	init_queue@i& (0+255),w,b
  2765  0013E8  0D0D               	mullw	13
  2766  0013EA  50F3               	movf	prodl,w,c
  2767  0013EC  0100               	movlb	0	; () banked
  2768  0013EE  0100               	movlb	0	; () banked
  2769  0013F0  25A8               	addwf	init_queue@qptr& (0+255),w,b
  2770  0013F2  6ED9               	movwf	fsr2l,c
  2771  0013F4  50F4               	movf	prodh,w,c
  2772  0013F6  0100               	movlb	0	; () banked
  2773  0013F8  0100               	movlb	0	; () banked
  2774  0013FA  21A9               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2775  0013FC  6EDA               	movwf	fsr2h,c
  2776  0013FE  0E00               	movlw	0
  2777  001400  6EDF               	movwf	indf2,c
  2778                           
  2779                           ; BSR set to: 0
  2780  001402  0100               	movlb	0	; () banked
  2781  001404  0100               	movlb	0	; () banked
  2782  001406  2BAB               	incf	init_queue@i& (0+255),f,b
  2783                           
  2784                           ; BSR set to: 0
  2785  001408  0E03               	movlw	3
  2786  00140A  0100               	movlb	0	; () banked
  2787  00140C  0100               	movlb	0	; () banked
  2788  00140E  65AB               	cpfsgt	init_queue@i& (0+255),b
  2789  001410  D7E8               	goto	l2447
  2790  001412  0012               	return	
  2791  001414                     __end_of_init_queue:
  2792                           	opt stack 0
  2793                           tblptru	equ	0xFF8
  2794                           tblptrh	equ	0xFF7
  2795                           tblptrl	equ	0xFF6
  2796                           tablat	equ	0xFF5
  2797                           prodh	equ	0xFF4
  2798                           prodl	equ	0xFF3
  2799                           postinc0	equ	0xFEE
  2800                           wreg	equ	0xFE8
  2801                           indf1	equ	0xFE7
  2802                           fsr1h	equ	0xFE2
  2803                           fsr1l	equ	0xFE1
  2804                           indf2	equ	0xFDF
  2805                           postinc2	equ	0xFDE
  2806                           postdec2	equ	0xFDD
  2807                           fsr2h	equ	0xFDA
  2808                           fsr2l	equ	0xFD9
  2809                           status	equ	0xFD8
  2810                           
  2811 ;; *************** function _init_i2c *****************
  2812 ;; Defined at:
  2813 ;;		line 302 in file "../src/my_i2c.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  ic              2   40[BANK0 ] PTR struct __i2c_comm
  2816 ;;		 -> main@ic(28), 
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;		None
  2819 ;; Return value:  Size  Location     Type
  2820 ;;		None               void
  2821 ;; Registers used:
  2822 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2828 ;;      Params:         0       2       0       0       0
  2829 ;;      Locals:         0       0       0       0       0
  2830 ;;      Temps:          0       0       0       0       0
  2831 ;;      Totals:         0       2       0       0       0
  2832 ;;Total ram usage:        2 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; Hardware stack levels required when called:   10
  2835 ;; This function calls:
  2836 ;;		Nothing
  2837 ;; This function is called by:
  2838 ;;		_main
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           	psect	text13
  2843  001566                     __ptext13:
  2844                           	opt stack 0
  2845  001566                     _init_i2c:
  2846                           	opt stack 19
  2847                           
  2848                           ;my_i2c.c: 303: ic_ptr = ic;
  2849                           
  2850                           ; BSR set to: 0
  2851                           ;incstack = 0
  2852  001566  0100               	movlb	0	; () banked
  2853  001568  0100               	movlb	0	; () banked
  2854  00156A  C0A9  F0CE         	movff	init_i2c@ic+1,_ic_ptr+1
  2855  00156E  0100               	movlb	0	; () banked
  2856  001570  0100               	movlb	0	; () banked
  2857  001572  C0A8  F0CD         	movff	init_i2c@ic,_ic_ptr
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;my_i2c.c: 304: ic_ptr->buflen = 0;
  2861  001576  0100               	movlb	0	; () banked
  2862  001578  EE20 F00A          	lfsr	2,10
  2863  00157C  0100               	movlb	0	; () banked
  2864  00157E  51CD               	movf	_ic_ptr& (0+255),w,b
  2865  001580  26D9               	addwf	fsr2l,f,c
  2866  001582  0100               	movlb	0	; () banked
  2867  001584  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2868  001586  22DA               	addwfc	fsr2h,f,c
  2869  001588  0E00               	movlw	0
  2870  00158A  6EDF               	movwf	indf2,c
  2871                           
  2872                           ; BSR set to: 0
  2873                           ;my_i2c.c: 305: ic_ptr->event_count = 0;
  2874  00158C  0100               	movlb	0	; () banked
  2875  00158E  EE20 F00B          	lfsr	2,11
  2876  001592  0100               	movlb	0	; () banked
  2877  001594  51CD               	movf	_ic_ptr& (0+255),w,b
  2878  001596  26D9               	addwf	fsr2l,f,c
  2879  001598  0100               	movlb	0	; () banked
  2880  00159A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2881  00159C  22DA               	addwfc	fsr2h,f,c
  2882  00159E  0E00               	movlw	0
  2883  0015A0  6EDF               	movwf	indf2,c
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;my_i2c.c: 306: ic_ptr->status = 0x5;
  2887  0015A2  0100               	movlb	0	; () banked
  2888  0015A4  EE20 F00C          	lfsr	2,12
  2889  0015A8  0100               	movlb	0	; () banked
  2890  0015AA  51CD               	movf	_ic_ptr& (0+255),w,b
  2891  0015AC  26D9               	addwf	fsr2l,f,c
  2892  0015AE  0100               	movlb	0	; () banked
  2893  0015B0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2894  0015B2  22DA               	addwfc	fsr2h,f,c
  2895  0015B4  0E05               	movlw	5
  2896  0015B6  6EDF               	movwf	indf2,c
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;my_i2c.c: 307: ic_ptr->error_count = 0;
  2900  0015B8  0100               	movlb	0	; () banked
  2901  0015BA  EE20 F00E          	lfsr	2,14
  2902  0015BE  0100               	movlb	0	; () banked
  2903  0015C0  51CD               	movf	_ic_ptr& (0+255),w,b
  2904  0015C2  26D9               	addwf	fsr2l,f,c
  2905  0015C4  0100               	movlb	0	; () banked
  2906  0015C6  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2907  0015C8  22DA               	addwfc	fsr2h,f,c
  2908  0015CA  0E00               	movlw	0
  2909  0015CC  6EDF               	movwf	indf2,c
  2910                           
  2911                           ; BSR set to: 0
  2912  0015CE  0012               	return	
  2913  0015D0                     __end_of_init_i2c:
  2914                           	opt stack 0
  2915                           tblptru	equ	0xFF8
  2916                           tblptrh	equ	0xFF7
  2917                           tblptrl	equ	0xFF6
  2918                           tablat	equ	0xFF5
  2919                           prodh	equ	0xFF4
  2920                           prodl	equ	0xFF3
  2921                           postinc0	equ	0xFEE
  2922                           wreg	equ	0xFE8
  2923                           indf1	equ	0xFE7
  2924                           fsr1h	equ	0xFE2
  2925                           fsr1l	equ	0xFE1
  2926                           indf2	equ	0xFDF
  2927                           postinc2	equ	0xFDE
  2928                           postdec2	equ	0xFDD
  2929                           fsr2h	equ	0xFDA
  2930                           fsr2l	equ	0xFD9
  2931                           status	equ	0xFD8
  2932                           
  2933 ;; *************** function _initADC *****************
  2934 ;; Defined at:
  2935 ;;		line 98 in file "../src/main.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;		None
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;  ADCValue        2   47[BANK0 ] int 
  2940 ;; Return value:  Size  Location     Type
  2941 ;;		None               void
  2942 ;; Registers used:
  2943 ;;		wreg, status,2, status,0, cstack
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2949 ;;      Params:         0       0       0       0       0
  2950 ;;      Locals:         0       2       0       0       0
  2951 ;;      Temps:          0       2       0       0       0
  2952 ;;      Totals:         0       4       0       0       0
  2953 ;;Total ram usage:        4 bytes
  2954 ;; Hardware stack levels used:    1
  2955 ;; Hardware stack levels required when called:   11
  2956 ;; This function calls:
  2957 ;;		_ConvertADC
  2958 ;;		_OpenADC
  2959 ;; This function is called by:
  2960 ;;		_main
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           	psect	text14
  2965  0015D0                     __ptext14:
  2966                           	opt stack 0
  2967  0015D0                     _initADC:
  2968                           	opt stack 18
  2969                           
  2970                           ;main.c: 100: TRISBbits.TRISB7 = 0;
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;incstack = 0
  2974  0015D0  9E93               	bcf	3987,7,c	;volatile
  2975                           
  2976                           ;main.c: 101: LATBbits.LATB7 = !LATBbits.LATB7;
  2977  0015D2  BE8A               	btfsc	3978,7,c	;volatile
  2978  0015D4  D002               	goto	u1660
  2979  0015D6  0E01               	movlw	1
  2980  0015D8  D001               	goto	u1666
  2981  0015DA                     u1660:
  2982  0015DA  0E00               	movlw	0
  2983  0015DC                     u1666:
  2984  0015DC  0100               	movlb	0	; () banked
  2985  0015DE  6FAD               	movwf	??_initADC& (0+255),b
  2986  0015E0  0100               	movlb	0	; () banked
  2987  0015E2  33AD               	rrcf	??_initADC& (0+255),f,b
  2988  0015E4  33AD               	rrcf	??_initADC& (0+255),f,b
  2989  0015E6  508A               	movf	3978,w,c	;volatile
  2990  0015E8  0100               	movlb	0	; () banked
  2991  0015EA  19AD               	xorwf	??_initADC& (0+255),w,b
  2992  0015EC  0B7F               	andlw	-129
  2993  0015EE  19AD               	xorwf	??_initADC& (0+255),w,b
  2994  0015F0  6E8A               	movwf	3978,c	;volatile
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;main.c: 102: int ADCValue = 0;
  2998  0015F2  0E00               	movlw	0
  2999  0015F4  0100               	movlb	0	; () banked
  3000  0015F6  0100               	movlb	0	; () banked
  3001  0015F8  6FB0               	movwf	(initADC@ADCValue+1)& (0+255),b
  3002  0015FA  0E00               	movlw	0
  3003  0015FC  0100               	movlb	0	; () banked
  3004  0015FE  6FAF               	movwf	initADC@ADCValue& (0+255),b
  3005                           
  3006                           ; BSR set to: 0
  3007                           ;main.c: 104: OpenADC(0b10001111 & 0b11111111 & 0b11111111, 0b10000111 & 0b11111111 & 0b
      +                          11111110 & 0b11111101, 0b11111111);
  3008  001600  0100               	movlb	0	; () banked
  3009  001602  6FAD               	movwf	??_initADC& (0+255),b
  3010  001604  0E84               	movlw	132
  3011  001606  0100               	movlb	0	; () banked
  3012  001608  0100               	movlb	0	; () banked
  3013  00160A  6FA8               	movwf	OpenADC@config2& (0+255),b
  3014  00160C  0100               	movlb	0	; () banked
  3015  00160E  51AD               	movf	??_initADC& (0+255),w,b
  3016  001610  0100               	movlb	0	; () banked
  3017  001612  6FAE               	movwf	(??_initADC+1)& (0+255),b
  3018  001614  0EFF               	movlw	255
  3019  001616  0100               	movlb	0	; () banked
  3020  001618  0100               	movlb	0	; () banked
  3021  00161A  6FA9               	movwf	OpenADC@portconfig& (0+255),b
  3022  00161C  0100               	movlb	0	; () banked
  3023  00161E  51AE               	movf	(??_initADC+1)& (0+255),w,b
  3024  001620  0E8F               	movlw	143
  3025  001622  EC8B  F009         	call	_OpenADC
  3026                           
  3027                           ;main.c: 105: (PIR1bits.ADIF=0,INTCONbits.PEIE=1,PIE1bits.ADIE=1);
  3028  001626  9C9E               	bcf	3998,6,c	;volatile
  3029  001628  8CF2               	bsf	intcon,6,c	;volatile
  3030  00162A  8C9D               	bsf	3997,6,c	;volatile
  3031                           
  3032                           ;main.c: 106: (INTCONbits.GIE = 1);
  3033  00162C  8EF2               	bsf	intcon,7,c	;volatile
  3034                           
  3035                           ;main.c: 107: ConvertADC();
  3036  00162E  EC9F  F00D         	call	_ConvertADC	;wreg free
  3037  001632  0012               	return	
  3038  001634                     __end_of_initADC:
  3039                           	opt stack 0
  3040                           tblptru	equ	0xFF8
  3041                           tblptrh	equ	0xFF7
  3042                           tblptrl	equ	0xFF6
  3043                           tablat	equ	0xFF5
  3044                           prodh	equ	0xFF4
  3045                           prodl	equ	0xFF3
  3046                           intcon	equ	0xFF2
  3047                           postinc0	equ	0xFEE
  3048                           wreg	equ	0xFE8
  3049                           indf1	equ	0xFE7
  3050                           fsr1h	equ	0xFE2
  3051                           fsr1l	equ	0xFE1
  3052                           indf2	equ	0xFDF
  3053                           postinc2	equ	0xFDE
  3054                           postdec2	equ	0xFDD
  3055                           fsr2h	equ	0xFDA
  3056                           fsr2l	equ	0xFD9
  3057                           status	equ	0xFD8
  3058                           
  3059 ;; *************** function _OpenADC *****************
  3060 ;; Defined at:
  3061 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;  config          1    wreg     unsigned char 
  3064 ;;  config2         1   40[BANK0 ] unsigned char 
  3065 ;;  portconfig      1   41[BANK0 ] unsigned char 
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;  config          1   44[BANK0 ] unsigned char 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;		None               void
  3070 ;; Registers used:
  3071 ;;		wreg, status,2, status,0
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3077 ;;      Params:         0       2       0       0       0
  3078 ;;      Locals:         0       1       0       0       0
  3079 ;;      Temps:          0       2       0       0       0
  3080 ;;      Totals:         0       5       0       0       0
  3081 ;;Total ram usage:        5 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; Hardware stack levels required when called:   10
  3084 ;; This function calls:
  3085 ;;		Nothing
  3086 ;; This function is called by:
  3087 ;;		_initADC
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           	psect	text15
  3092  001316                     __ptext15:
  3093                           	opt stack 0
  3094  001316                     _OpenADC:
  3095                           	opt stack 18
  3096                           
  3097                           ;incstack = 0
  3098                           ;OpenADC@config stored from wreg
  3099  001316  CFE8 F0AC          	movff	wreg,OpenADC@config
  3100  00131A  0E00               	movlw	0
  3101  00131C  6EC2               	movwf	4034,c	;volatile
  3102  00131E  0E00               	movlw	0
  3103  001320  6EC0               	movwf	4032,c	;volatile
  3104  001322  0100               	movlb	0	; () banked
  3105  001324  0100               	movlb	0	; () banked
  3106  001326  90D8               	bcf	status,0,c
  3107  001328  31A8               	rrcf	OpenADC@config2& (0+255),w,b
  3108  00132A  0B3C               	andlw	60
  3109  00132C  6EC2               	movwf	4034,c	;volatile
  3110                           
  3111                           ; BSR set to: 0
  3112  00132E  C0A8  F0AA         	movff	OpenADC@config2,??_OpenADC
  3113  001332  0100               	movlb	0	; () banked
  3114  001334  3BAA               	swapf	??_OpenADC& (0+255),f,b
  3115  001336  0EF0               	movlw	240
  3116  001338  17AA               	andwf	??_OpenADC& (0+255),f,b
  3117  00133A  0E30               	movlw	48
  3118  00133C  0100               	movlb	0	; () banked
  3119  00133E  17AA               	andwf	??_OpenADC& (0+255),f,b
  3120  001340  0100               	movlb	0	; () banked
  3121  001342  0100               	movlb	0	; () banked
  3122  001344  51A9               	movf	OpenADC@portconfig& (0+255),w,b
  3123  001346  0B0F               	andlw	15
  3124  001348  0100               	movlb	0	; () banked
  3125  00134A  11AA               	iorwf	??_OpenADC& (0+255),w,b
  3126  00134C  6EC1               	movwf	4033,c	;volatile
  3127                           
  3128                           ; BSR set to: 0
  3129  00134E  C0AC  F0AA         	movff	OpenADC@config,??_OpenADC
  3130  001352  0100               	movlb	0	; () banked
  3131  001354  90D8               	bcf	status,0,c
  3132  001356  37AA               	rlcf	??_OpenADC& (0+255),f,b
  3133  001358  0100               	movlb	0	; () banked
  3134  00135A  90D8               	bcf	status,0,c
  3135  00135C  37AA               	rlcf	??_OpenADC& (0+255),f,b
  3136  00135E  0E38               	movlw	56
  3137  001360  0100               	movlb	0	; () banked
  3138  001362  17AA               	andwf	??_OpenADC& (0+255),f,b
  3139  001364  C0AC  F0AB         	movff	OpenADC@config,??_OpenADC+1
  3140  001368  0100               	movlb	0	; () banked
  3141  00136A  3BAB               	swapf	(??_OpenADC+1)& (0+255),f,b
  3142  00136C  0E0F               	movlw	15
  3143  00136E  17AB               	andwf	(??_OpenADC+1)& (0+255),f,b
  3144  001370  0E07               	movlw	7
  3145  001372  0100               	movlb	0	; () banked
  3146  001374  17AB               	andwf	(??_OpenADC+1)& (0+255),f,b
  3147  001376  0100               	movlb	0	; () banked
  3148  001378  0100               	movlb	0	; () banked
  3149  00137A  51AC               	movf	OpenADC@config& (0+255),w,b
  3150  00137C  0B80               	andlw	128
  3151  00137E  0100               	movlb	0	; () banked
  3152  001380  11AB               	iorwf	(??_OpenADC+1)& (0+255),w,b
  3153  001382  0100               	movlb	0	; () banked
  3154  001384  11AA               	iorwf	??_OpenADC& (0+255),w,b
  3155  001386  6EC0               	movwf	4032,c	;volatile
  3156                           
  3157                           ; BSR set to: 0
  3158  001388  0100               	movlb	0	; () banked
  3159  00138A  0100               	movlb	0	; () banked
  3160  00138C  AFA8               	btfss	OpenADC@config2& (0+255),7,b
  3161  00138E  D003               	goto	l444
  3162                           
  3163                           ; BSR set to: 0
  3164  001390  9C9E               	bcf	3998,6,c	;volatile
  3165  001392  8C9D               	bsf	3997,6,c	;volatile
  3166  001394  8CF2               	bsf	intcon,6,c	;volatile
  3167  001396                     l444:
  3168                           
  3169                           ; BSR set to: 0
  3170  001396  80C2               	bsf	4034,0,c	;volatile
  3171                           
  3172                           ; BSR set to: 0
  3173  001398  0012               	return	
  3174  00139A                     __end_of_OpenADC:
  3175                           	opt stack 0
  3176                           tblptru	equ	0xFF8
  3177                           tblptrh	equ	0xFF7
  3178                           tblptrl	equ	0xFF6
  3179                           tablat	equ	0xFF5
  3180                           prodh	equ	0xFF4
  3181                           prodl	equ	0xFF3
  3182                           intcon	equ	0xFF2
  3183                           postinc0	equ	0xFEE
  3184                           wreg	equ	0xFE8
  3185                           indf1	equ	0xFE7
  3186                           fsr1h	equ	0xFE2
  3187                           fsr1l	equ	0xFE1
  3188                           indf2	equ	0xFDF
  3189                           postinc2	equ	0xFDE
  3190                           postdec2	equ	0xFDD
  3191                           fsr2h	equ	0xFDA
  3192                           fsr2l	equ	0xFD9
  3193                           status	equ	0xFD8
  3194                           
  3195 ;; *************** function _ConvertADC *****************
  3196 ;; Defined at:
  3197 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcconv.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;		None
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;		None               void
  3204 ;; Registers used:
  3205 ;;		None
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3211 ;;      Params:         0       0       0       0       0
  3212 ;;      Locals:         0       0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0
  3214 ;;      Totals:         0       0       0       0       0
  3215 ;;Total ram usage:        0 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:   10
  3218 ;; This function calls:
  3219 ;;		Nothing
  3220 ;; This function is called by:
  3221 ;;		_initADC
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           	psect	text16
  3226  001B3E                     __ptext16:
  3227                           	opt stack 0
  3228  001B3E                     _ConvertADC:
  3229                           	opt stack 18
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;incstack = 0
  3233  001B3E  82C2               	bsf	4034,1,c	;volatile
  3234  001B40  0012               	return	
  3235  001B42                     __end_of_ConvertADC:
  3236                           	opt stack 0
  3237                           tblptru	equ	0xFF8
  3238                           tblptrh	equ	0xFF7
  3239                           tblptrl	equ	0xFF6
  3240                           tablat	equ	0xFF5
  3241                           prodh	equ	0xFF4
  3242                           prodl	equ	0xFF3
  3243                           intcon	equ	0xFF2
  3244                           postinc0	equ	0xFEE
  3245                           wreg	equ	0xFE8
  3246                           indf1	equ	0xFE7
  3247                           fsr1h	equ	0xFE2
  3248                           fsr1l	equ	0xFE1
  3249                           indf2	equ	0xFDF
  3250                           postinc2	equ	0xFDE
  3251                           postdec2	equ	0xFDD
  3252                           fsr2h	equ	0xFDA
  3253                           fsr2l	equ	0xFD9
  3254                           status	equ	0xFD8
  3255                           
  3256 ;; *************** function _i2c_configure_slave *****************
  3257 ;; Defined at:
  3258 ;;		line 313 in file "../src/my_i2c.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  addr            1    wreg     unsigned char 
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;  addr            1   40[BANK0 ] unsigned char 
  3263 ;; Return value:  Size  Location     Type
  3264 ;;		None               void
  3265 ;; Registers used:
  3266 ;;		wreg, status,2, status,0
  3267 ;; Tracked objects:
  3268 ;;		On entry : 0/0
  3269 ;;		On exit  : 0/0
  3270 ;;		Unchanged: 0/0
  3271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3272 ;;      Params:         0       0       0       0       0
  3273 ;;      Locals:         0       1       0       0       0
  3274 ;;      Temps:          0       0       0       0       0
  3275 ;;      Totals:         0       1       0       0       0
  3276 ;;Total ram usage:        1 bytes
  3277 ;; Hardware stack levels used:    1
  3278 ;; Hardware stack levels required when called:   10
  3279 ;; This function calls:
  3280 ;;		Nothing
  3281 ;; This function is called by:
  3282 ;;		_main
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           	psect	text17
  3287  0019F6                     __ptext17:
  3288                           	opt stack 0
  3289  0019F6                     _i2c_configure_slave:
  3290                           	opt stack 19
  3291                           
  3292                           ;incstack = 0
  3293                           ;i2c_configure_slave@addr stored from wreg
  3294  0019F6  CFE8 F0A8          	movff	wreg,i2c_configure_slave@addr
  3295                           
  3296                           ;my_i2c.c: 316: TRISCbits.TRISC3 = 1;
  3297  0019FA  8694               	bsf	3988,3,c	;volatile
  3298                           
  3299                           ;my_i2c.c: 317: TRISCbits.TRISC4 = 1;
  3300  0019FC  8894               	bsf	3988,4,c	;volatile
  3301                           
  3302                           ;my_i2c.c: 319: SSPADD = addr;
  3303  0019FE  C0A8  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3304                           
  3305                           ;my_i2c.c: 321: SSPSTAT = 0x0;
  3306  001A02  0E00               	movlw	0
  3307  001A04  6EC7               	movwf	4039,c	;volatile
  3308                           
  3309                           ;my_i2c.c: 322: SSPCON1 = 0x0;
  3310  001A06  0E00               	movlw	0
  3311  001A08  6EC6               	movwf	4038,c	;volatile
  3312                           
  3313                           ;my_i2c.c: 323: SSPCON2 = 0x0;
  3314  001A0A  0E00               	movlw	0
  3315  001A0C  6EC5               	movwf	4037,c	;volatile
  3316                           
  3317                           ;my_i2c.c: 324: SSPCON1 |= 0x0E;
  3318  001A0E  0E0E               	movlw	14
  3319  001A10  12C6               	iorwf	4038,f,c	;volatile
  3320                           
  3321                           ;my_i2c.c: 325: SSPSTAT |= 0b10000000;
  3322  001A12  8EC7               	bsf	4039,7,c	;volatile
  3323                           
  3324                           ;my_i2c.c: 327: TRISCbits.TRISC3 = 1;
  3325  001A14  8694               	bsf	3988,3,c	;volatile
  3326                           
  3327                           ;my_i2c.c: 328: TRISCbits.TRISC4 = 1;
  3328  001A16  8894               	bsf	3988,4,c	;volatile
  3329                           
  3330                           ;my_i2c.c: 338: SSPCON2bits.SEN = 1;
  3331  001A18  80C5               	bsf	4037,0,c	;volatile
  3332                           
  3333                           ;my_i2c.c: 339: SSPCON1 |= 0b00100000;
  3334  001A1A  8AC6               	bsf	4038,5,c	;volatile
  3335  001A1C  0012               	return	
  3336  001A1E                     __end_of_i2c_configure_slave:
  3337                           	opt stack 0
  3338                           tblptru	equ	0xFF8
  3339                           tblptrh	equ	0xFF7
  3340                           tblptrl	equ	0xFF6
  3341                           tablat	equ	0xFF5
  3342                           prodh	equ	0xFF4
  3343                           prodl	equ	0xFF3
  3344                           intcon	equ	0xFF2
  3345                           postinc0	equ	0xFEE
  3346                           wreg	equ	0xFE8
  3347                           indf1	equ	0xFE7
  3348                           fsr1h	equ	0xFE2
  3349                           fsr1l	equ	0xFE1
  3350                           indf2	equ	0xFDF
  3351                           postinc2	equ	0xFDE
  3352                           postdec2	equ	0xFDD
  3353                           fsr2h	equ	0xFDA
  3354                           fsr2l	equ	0xFD9
  3355                           status	equ	0xFD8
  3356                           
  3357 ;; *************** function _enable_interrupts *****************
  3358 ;; Defined at:
  3359 ;;		line 41 in file "../src/interrupts.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;		None
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;		None
  3364 ;; Return value:  Size  Location     Type
  3365 ;;		None               void
  3366 ;; Registers used:
  3367 ;;		None
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3373 ;;      Params:         0       0       0       0       0
  3374 ;;      Locals:         0       0       0       0       0
  3375 ;;      Temps:          0       0       0       0       0
  3376 ;;      Totals:         0       0       0       0       0
  3377 ;;Total ram usage:        0 bytes
  3378 ;; Hardware stack levels used:    1
  3379 ;; Hardware stack levels required when called:   10
  3380 ;; This function calls:
  3381 ;;		Nothing
  3382 ;; This function is called by:
  3383 ;;		_main
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           	psect	text18
  3388  001B16                     __ptext18:
  3389                           	opt stack 0
  3390  001B16                     _enable_interrupts:
  3391                           	opt stack 19
  3392                           
  3393                           ;interrupts.c: 44: RCONbits.IPEN = 1;
  3394                           
  3395                           ;incstack = 0
  3396  001B16  8ED0               	bsf	4048,7,c	;volatile
  3397                           
  3398                           ;interrupts.c: 45: INTCONbits.GIEH = 1;
  3399  001B18  8EF2               	bsf	intcon,7,c	;volatile
  3400                           
  3401                           ;interrupts.c: 46: INTCONbits.GIEL = 1;
  3402  001B1A  8CF2               	bsf	intcon,6,c	;volatile
  3403                           
  3404                           ;interrupts.c: 48: INTCONbits.TMR0IE = 1;
  3405  001B1C  8AF2               	bsf	intcon,5,c	;volatile
  3406                           
  3407                           ;interrupts.c: 50: INTCON2bits.TMR0IP = 1;
  3408  001B1E  84F1               	bsf	intcon2,2,c	;volatile
  3409  001B20  0012               	return	
  3410  001B22                     __end_of_enable_interrupts:
  3411                           	opt stack 0
  3412                           tblptru	equ	0xFF8
  3413                           tblptrh	equ	0xFF7
  3414                           tblptrl	equ	0xFF6
  3415                           tablat	equ	0xFF5
  3416                           prodh	equ	0xFF4
  3417                           prodl	equ	0xFF3
  3418                           intcon	equ	0xFF2
  3419                           intcon2	equ	0xFF1
  3420                           postinc0	equ	0xFEE
  3421                           wreg	equ	0xFE8
  3422                           indf1	equ	0xFE7
  3423                           fsr1h	equ	0xFE2
  3424                           fsr1l	equ	0xFE1
  3425                           indf2	equ	0xFDF
  3426                           postinc2	equ	0xFDE
  3427                           postdec2	equ	0xFDD
  3428                           fsr2h	equ	0xFDA
  3429                           fsr2l	equ	0xFD9
  3430                           status	equ	0xFD8
  3431                           
  3432 ;; *************** function _block_on_To_msgqueues *****************
  3433 ;; Defined at:
  3434 ;;		line 258 in file "../src/messages.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;		None
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;		None
  3439 ;; Return value:  Size  Location     Type
  3440 ;;		None               void
  3441 ;; Registers used:
  3442 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3448 ;;      Params:         0       0       0       0       0
  3449 ;;      Locals:         0       0       0       0       0
  3450 ;;      Temps:          0       1       0       0       0
  3451 ;;      Totals:         0       1       0       0       0
  3452 ;;Total ram usage:        1 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; Hardware stack levels required when called:   13
  3455 ;; This function calls:
  3456 ;;		_Delay1KTCYx
  3457 ;;		_check_msg
  3458 ;;		_in_main
  3459 ;; This function is called by:
  3460 ;;		_main
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           	psect	text19
  3465  0010B8                     __ptext19:
  3466                           	opt stack 0
  3467  0010B8                     _block_on_To_msgqueues:
  3468                           	opt stack 16
  3469                           
  3470                           ;messages.c: 259: if (!in_main()) {
  3471                           
  3472                           ;incstack = 0
  3473  0010B8  ECBC  F00B         	call	_in_main	;wreg free
  3474  0010BC  0100               	movlb	0	; () banked
  3475  0010BE  0100               	movlb	0	; () banked
  3476  0010C0  51AD               	movf	(?_in_main+1)& (0+255),w,b
  3477  0010C2  0100               	movlb	0	; () banked
  3478  0010C4  11AC               	iorwf	?_in_main& (0+255),w,b
  3479  0010C6  B4D8               	btfsc	status,2,c
  3480  0010C8  0012               	return	
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;messages.c: 261: }
  3484                           ;messages.c: 262: LATBbits.LATB3 = 1;
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;messages.c: 260: return;
  3488  0010CA  868A               	bsf	3978,3,c	;volatile
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3492  0010CC  0100               	movlb	0	; () banked
  3493  0010CE  6FAE               	movwf	??_block_on_To_msgqueues& (0+255),b
  3494  0010D0  0E01               	movlw	1
  3495  0010D2  6E4E               	movwf	_MQ_Main_Willing_to_block,c
  3496  0010D4  0100               	movlb	0	; () banked
  3497  0010D6  51AE               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3498  0010D8                     l2603:
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3502  0010D8  0101               	movlb	1	; () banked
  3503  0010DA  0E01               	movlw	high _ToMainHigh_MQ
  3504  0010DC  0100               	movlb	0	; () banked
  3505  0010DE  0100               	movlb	0	; () banked
  3506  0010E0  6FA9               	movwf	(check_msg@qptr+1)& (0+255),b
  3507  0010E2  0101               	movlb	1	; () banked
  3508  0010E4  0E36               	movlw	low _ToMainHigh_MQ
  3509  0010E6  0100               	movlb	0	; () banked
  3510  0010E8  0100               	movlb	0	; () banked
  3511  0010EA  6FA8               	movwf	check_msg@qptr& (0+255),b
  3512  0010EC  EC9A  F00C         	call	_check_msg	;wreg free
  3513  0010F0  0900               	iorlw	0
  3514  0010F2  B4D8               	btfsc	status,2,c
  3515  0010F4  D008               	goto	l2611
  3516                           
  3517                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3518  0010F6  0100               	movlb	0	; () banked
  3519  0010F8  6FAE               	movwf	??_block_on_To_msgqueues& (0+255),b
  3520  0010FA  0E00               	movlw	0
  3521  0010FC  6E4E               	movwf	_MQ_Main_Willing_to_block,c
  3522  0010FE  0100               	movlb	0	; () banked
  3523  001100  51AE               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;messages.c: 267: LATBbits.LATB3 = 0;
  3527  001102  968A               	bcf	3978,3,c	;volatile
  3528  001104  0012               	return	
  3529  001106                     l2611:
  3530                           
  3531                           ;messages.c: 269: }
  3532                           ;messages.c: 270: if (check_msg(&ToMainLow_MQ)) {
  3533  001106  0101               	movlb	1	; () banked
  3534  001108  0E01               	movlw	high _ToMainLow_MQ
  3535  00110A  0100               	movlb	0	; () banked
  3536  00110C  0100               	movlb	0	; () banked
  3537  00110E  6FA9               	movwf	(check_msg@qptr+1)& (0+255),b
  3538  001110  0101               	movlb	1	; () banked
  3539  001112  0E6C               	movlw	low _ToMainLow_MQ
  3540  001114  0100               	movlb	0	; () banked
  3541  001116  0100               	movlb	0	; () banked
  3542  001118  6FA8               	movwf	check_msg@qptr& (0+255),b
  3543  00111A  EC9A  F00C         	call	_check_msg	;wreg free
  3544  00111E  0900               	iorlw	0
  3545  001120  B4D8               	btfsc	status,2,c
  3546  001122  D008               	goto	l2619
  3547                           
  3548                           ;messages.c: 271: MQ_Main_Willing_to_block = 0;
  3549  001124  0100               	movlb	0	; () banked
  3550  001126  6FAE               	movwf	??_block_on_To_msgqueues& (0+255),b
  3551  001128  0E00               	movlw	0
  3552  00112A  6E4E               	movwf	_MQ_Main_Willing_to_block,c
  3553  00112C  0100               	movlb	0	; () banked
  3554  00112E  51AE               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3555                           
  3556                           ; BSR set to: 0
  3557                           ;messages.c: 272: LATBbits.LATB3 = 0;
  3558  001130  968A               	bcf	3978,3,c	;volatile
  3559  001132  0012               	return	
  3560  001134                     l2619:
  3561                           
  3562                           ;messages.c: 274: }
  3563                           ;messages.c: 275: Delay1KTCYx(10);
  3564  001134  0E0A               	movlw	10
  3565  001136  EC65  F00D         	call	_Delay1KTCYx
  3566                           
  3567                           ;messages.c: 276: LATBbits.LATB3 = !LATBbits.LATB3;
  3568  00113A  B68A               	btfsc	3978,3,c	;volatile
  3569  00113C  D002               	goto	u1630
  3570  00113E  0E01               	movlw	1
  3571  001140  D001               	goto	u1636
  3572  001142                     u1630:
  3573  001142  0E00               	movlw	0
  3574  001144                     u1636:
  3575  001144  0100               	movlb	0	; () banked
  3576  001146  6FAE               	movwf	??_block_on_To_msgqueues& (0+255),b
  3577  001148  0100               	movlb	0	; () banked
  3578  00114A  47AE               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3579  00114C  47AE               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3580  00114E  47AE               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3581  001150  508A               	movf	3978,w,c	;volatile
  3582  001152  0100               	movlb	0	; () banked
  3583  001154  19AE               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  3584  001156  0BF7               	andlw	-9
  3585  001158  19AE               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  3586  00115A  6E8A               	movwf	3978,c	;volatile
  3587  00115C  D7BD               	goto	l2603
  3588  00115E                     __end_of_block_on_To_msgqueues:
  3589                           	opt stack 0
  3590                           tblptru	equ	0xFF8
  3591                           tblptrh	equ	0xFF7
  3592                           tblptrl	equ	0xFF6
  3593                           tablat	equ	0xFF5
  3594                           prodh	equ	0xFF4
  3595                           prodl	equ	0xFF3
  3596                           intcon	equ	0xFF2
  3597                           intcon2	equ	0xFF1
  3598                           postinc0	equ	0xFEE
  3599                           wreg	equ	0xFE8
  3600                           indf1	equ	0xFE7
  3601                           fsr1h	equ	0xFE2
  3602                           fsr1l	equ	0xFE1
  3603                           indf2	equ	0xFDF
  3604                           postinc2	equ	0xFDE
  3605                           postdec2	equ	0xFDD
  3606                           fsr2h	equ	0xFDA
  3607                           fsr2l	equ	0xFD9
  3608                           status	equ	0xFD8
  3609                           
  3610 ;; *************** function _in_main *****************
  3611 ;; Defined at:
  3612 ;;		line 71 in file "../src/interrupts.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;		None
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;		None
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  2   44[BANK0 ] int 
  3619 ;; Registers used:
  3620 ;;		wreg, status,2, status,0, cstack
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3626 ;;      Params:         0       2       0       0       0
  3627 ;;      Locals:         0       0       0       0       0
  3628 ;;      Temps:          0       0       0       0       0
  3629 ;;      Totals:         0       2       0       0       0
  3630 ;;Total ram usage:        2 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; Hardware stack levels required when called:   12
  3633 ;; This function calls:
  3634 ;;		_in_high_int
  3635 ;;		_in_low_int
  3636 ;; This function is called by:
  3637 ;;		_block_on_To_msgqueues
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           	psect	text20
  3642  001778                     __ptext20:
  3643                           	opt stack 0
  3644  001778                     _in_main:
  3645                           	opt stack 16
  3646                           
  3647                           ;interrupts.c: 72: if ((!in_low_int()) && (!in_high_int())) {
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;incstack = 0
  3651  001778  EC99  F00B         	call	_in_low_int	;wreg free
  3652  00177C  0100               	movlb	0	; () banked
  3653  00177E  0100               	movlb	0	; () banked
  3654  001780  51AB               	movf	(?_in_low_int+1)& (0+255),w,b
  3655  001782  0100               	movlb	0	; () banked
  3656  001784  11AA               	iorwf	?_in_low_int& (0+255),w,b
  3657  001786  A4D8               	btfss	status,2,c
  3658  001788  D011               	goto	l2633
  3659                           
  3660                           ; BSR set to: 0
  3661  00178A  EC82  F00D         	call	_in_high_int	;wreg free
  3662  00178E  0100               	movlb	0	; () banked
  3663  001790  0100               	movlb	0	; () banked
  3664  001792  51A9               	movf	(?_in_high_int+1)& (0+255),w,b
  3665  001794  0100               	movlb	0	; () banked
  3666  001796  11A8               	iorwf	?_in_high_int& (0+255),w,b
  3667  001798  A4D8               	btfss	status,2,c
  3668  00179A  D008               	goto	l2633
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;interrupts.c: 73: return (1);
  3672  00179C  0E00               	movlw	0
  3673  00179E  0100               	movlb	0	; () banked
  3674  0017A0  0100               	movlb	0	; () banked
  3675  0017A2  6FAD               	movwf	(?_in_main+1)& (0+255),b
  3676  0017A4  0E01               	movlw	1
  3677  0017A6  0100               	movlb	0	; () banked
  3678  0017A8  6FAC               	movwf	?_in_main& (0+255),b
  3679  0017AA  0012               	return	
  3680  0017AC                     l2633:
  3681                           
  3682                           ; BSR set to: 0
  3683                           ;interrupts.c: 75: return (0);
  3684  0017AC  0E00               	movlw	0
  3685  0017AE  0100               	movlb	0	; () banked
  3686  0017B0  0100               	movlb	0	; () banked
  3687  0017B2  6FAD               	movwf	(?_in_main+1)& (0+255),b
  3688  0017B4  0E00               	movlw	0
  3689  0017B6  0100               	movlb	0	; () banked
  3690  0017B8  6FAC               	movwf	?_in_main& (0+255),b
  3691  0017BA  0012               	return	
  3692  0017BC                     __end_of_in_main:
  3693                           	opt stack 0
  3694                           tblptru	equ	0xFF8
  3695                           tblptrh	equ	0xFF7
  3696                           tblptrl	equ	0xFF6
  3697                           tablat	equ	0xFF5
  3698                           prodh	equ	0xFF4
  3699                           prodl	equ	0xFF3
  3700                           intcon	equ	0xFF2
  3701                           intcon2	equ	0xFF1
  3702                           postinc0	equ	0xFEE
  3703                           wreg	equ	0xFE8
  3704                           indf1	equ	0xFE7
  3705                           fsr1h	equ	0xFE2
  3706                           fsr1l	equ	0xFE1
  3707                           indf2	equ	0xFDF
  3708                           postinc2	equ	0xFDE
  3709                           postdec2	equ	0xFDD
  3710                           fsr2h	equ	0xFDA
  3711                           fsr2l	equ	0xFD9
  3712                           status	equ	0xFD8
  3713                           
  3714 ;; *************** function _in_low_int *****************
  3715 ;; Defined at:
  3716 ;;		line 61 in file "../src/interrupts.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;		None
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;		None
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  2   42[BANK0 ] int 
  3723 ;; Registers used:
  3724 ;;		wreg, status,2, status,0, cstack
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3730 ;;      Params:         0       2       0       0       0
  3731 ;;      Locals:         0       0       0       0       0
  3732 ;;      Temps:          0       0       0       0       0
  3733 ;;      Totals:         0       2       0       0       0
  3734 ;;Total ram usage:        2 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; Hardware stack levels required when called:   11
  3737 ;; This function calls:
  3738 ;;		_in_high_int
  3739 ;; This function is called by:
  3740 ;;		_in_main
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           	psect	text21
  3745  001732                     __ptext21:
  3746                           	opt stack 0
  3747  001732                     _in_low_int:
  3748                           	opt stack 16
  3749                           
  3750                           ;interrupts.c: 62: if (INTCONbits.GIEL == 1) {
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;incstack = 0
  3754  001732  ACF2               	btfss	intcon,6,c	;volatile
  3755  001734  D008               	goto	l2581
  3756                           
  3757                           ;interrupts.c: 63: return (0);
  3758  001736  0E00               	movlw	0
  3759  001738  0100               	movlb	0	; () banked
  3760  00173A  0100               	movlb	0	; () banked
  3761  00173C  6FAB               	movwf	(?_in_low_int+1)& (0+255),b
  3762  00173E  0E00               	movlw	0
  3763  001740  0100               	movlb	0	; () banked
  3764  001742  6FAA               	movwf	?_in_low_int& (0+255),b
  3765  001744  0012               	return	
  3766  001746                     l2581:
  3767  001746  EC82  F00D         	call	_in_high_int	;wreg free
  3768  00174A  0100               	movlb	0	; () banked
  3769  00174C  0100               	movlb	0	; () banked
  3770  00174E  51A9               	movf	(?_in_high_int+1)& (0+255),w,b
  3771  001750  0100               	movlb	0	; () banked
  3772  001752  11A8               	iorwf	?_in_high_int& (0+255),w,b
  3773  001754  B4D8               	btfsc	status,2,c
  3774  001756  D008               	goto	l2589
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;interrupts.c: 65: return (0);
  3778  001758  0E00               	movlw	0
  3779  00175A  0100               	movlb	0	; () banked
  3780  00175C  0100               	movlb	0	; () banked
  3781  00175E  6FAB               	movwf	(?_in_low_int+1)& (0+255),b
  3782  001760  0E00               	movlw	0
  3783  001762  0100               	movlb	0	; () banked
  3784  001764  6FAA               	movwf	?_in_low_int& (0+255),b
  3785  001766  0012               	return	
  3786  001768                     l2589:
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;interrupts.c: 67: return (1);
  3790  001768  0E00               	movlw	0
  3791  00176A  0100               	movlb	0	; () banked
  3792  00176C  0100               	movlb	0	; () banked
  3793  00176E  6FAB               	movwf	(?_in_low_int+1)& (0+255),b
  3794  001770  0E01               	movlw	1
  3795  001772  0100               	movlb	0	; () banked
  3796  001774  6FAA               	movwf	?_in_low_int& (0+255),b
  3797  001776  0012               	return	
  3798  001778                     __end_of_in_low_int:
  3799                           	opt stack 0
  3800                           tblptru	equ	0xFF8
  3801                           tblptrh	equ	0xFF7
  3802                           tblptrl	equ	0xFF6
  3803                           tablat	equ	0xFF5
  3804                           prodh	equ	0xFF4
  3805                           prodl	equ	0xFF3
  3806                           intcon	equ	0xFF2
  3807                           intcon2	equ	0xFF1
  3808                           postinc0	equ	0xFEE
  3809                           wreg	equ	0xFE8
  3810                           indf1	equ	0xFE7
  3811                           fsr1h	equ	0xFE2
  3812                           fsr1l	equ	0xFE1
  3813                           indf2	equ	0xFDF
  3814                           postinc2	equ	0xFDE
  3815                           postdec2	equ	0xFDD
  3816                           fsr2h	equ	0xFDA
  3817                           fsr2l	equ	0xFD9
  3818                           status	equ	0xFD8
  3819                           
  3820 ;; *************** function _in_high_int *****************
  3821 ;; Defined at:
  3822 ;;		line 53 in file "../src/interrupts.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;		None
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;		None
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  2   40[BANK0 ] int 
  3829 ;; Registers used:
  3830 ;;		wreg, status,2
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3836 ;;      Params:         0       2       0       0       0
  3837 ;;      Locals:         0       0       0       0       0
  3838 ;;      Temps:          0       0       0       0       0
  3839 ;;      Totals:         0       2       0       0       0
  3840 ;;Total ram usage:        2 bytes
  3841 ;; Hardware stack levels used:    1
  3842 ;; Hardware stack levels required when called:   10
  3843 ;; This function calls:
  3844 ;;		Nothing
  3845 ;; This function is called by:
  3846 ;;		_in_low_int
  3847 ;;		_in_main
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           	psect	text22
  3852  001B04                     __ptext22:
  3853                           	opt stack 0
  3854  001B04                     _in_high_int:
  3855                           	opt stack 16
  3856                           
  3857                           ;interrupts.c: 54: return (!INTCONbits.GIEH);
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;incstack = 0
  3861  001B04  0E00               	movlw	0
  3862  001B06  AEF2               	btfss	intcon,7,c	;volatile
  3863  001B08  0E01               	movlw	1
  3864  001B0A  0100               	movlb	0	; () banked
  3865  001B0C  0100               	movlb	0	; () banked
  3866  001B0E  6FA8               	movwf	?_in_high_int& (0+255),b
  3867  001B10  0100               	movlb	0	; () banked
  3868  001B12  6BA9               	clrf	(?_in_high_int+1)& (0+255),b
  3869  001B14  0012               	return	
  3870  001B16                     __end_of_in_high_int:
  3871                           	opt stack 0
  3872                           tblptru	equ	0xFF8
  3873                           tblptrh	equ	0xFF7
  3874                           tblptrl	equ	0xFF6
  3875                           tablat	equ	0xFF5
  3876                           prodh	equ	0xFF4
  3877                           prodl	equ	0xFF3
  3878                           intcon	equ	0xFF2
  3879                           intcon2	equ	0xFF1
  3880                           postinc0	equ	0xFEE
  3881                           wreg	equ	0xFE8
  3882                           indf1	equ	0xFE7
  3883                           fsr1h	equ	0xFE2
  3884                           fsr1l	equ	0xFE1
  3885                           indf2	equ	0xFDF
  3886                           postinc2	equ	0xFDE
  3887                           postdec2	equ	0xFDD
  3888                           fsr2h	equ	0xFDA
  3889                           fsr2l	equ	0xFD9
  3890                           status	equ	0xFD8
  3891                           
  3892 ;; *************** function _check_msg *****************
  3893 ;; Defined at:
  3894 ;;		line 222 in file "../src/messages.c"
  3895 ;; Parameters:    Size  Location     Type
  3896 ;;  qptr            2   40[BANK0 ] PTR struct __msg_queue
  3897 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3898 ;; Auto vars:     Size  Location     Type
  3899 ;;		None
  3900 ;; Return value:  Size  Location     Type
  3901 ;;                  1    wreg      unsigned char 
  3902 ;; Registers used:
  3903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3909 ;;      Params:         0       2       0       0       0
  3910 ;;      Locals:         0       0       0       0       0
  3911 ;;      Temps:          0       1       0       0       0
  3912 ;;      Totals:         0       3       0       0       0
  3913 ;;Total ram usage:        3 bytes
  3914 ;; Hardware stack levels used:    1
  3915 ;; Hardware stack levels required when called:   10
  3916 ;; This function calls:
  3917 ;;		Nothing
  3918 ;; This function is called by:
  3919 ;;		_block_on_To_msgqueues
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           	psect	text23
  3924  001934                     __ptext23:
  3925                           	opt stack 0
  3926  001934                     _check_msg:
  3927                           	opt stack 18
  3928                           
  3929                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;incstack = 0
  3933  001934  0100               	movlb	0	; () banked
  3934  001936  EE20 F035          	lfsr	2,53
  3935  00193A  0100               	movlb	0	; () banked
  3936  00193C  51A8               	movf	check_msg@qptr& (0+255),w,b
  3937  00193E  26D9               	addwf	fsr2l,f,c
  3938  001940  0100               	movlb	0	; () banked
  3939  001942  51A9               	movf	(check_msg@qptr+1)& (0+255),w,b
  3940  001944  22DA               	addwfc	fsr2h,f,c
  3941  001946  50DF               	movf	indf2,w,c
  3942  001948  0100               	movlb	0	; () banked
  3943  00194A  6FAA               	movwf	??_check_msg& (0+255),b
  3944  00194C  0100               	movlb	0	; () banked
  3945  00194E  51AA               	movf	??_check_msg& (0+255),w,b
  3946  001950  0D0D               	mullw	13
  3947  001952  50F3               	movf	prodl,w,c
  3948  001954  0100               	movlb	0	; () banked
  3949  001956  0100               	movlb	0	; () banked
  3950  001958  25A8               	addwf	check_msg@qptr& (0+255),w,b
  3951  00195A  6ED9               	movwf	fsr2l,c
  3952  00195C  50F4               	movf	prodh,w,c
  3953  00195E  0100               	movlb	0	; () banked
  3954  001960  0100               	movlb	0	; () banked
  3955  001962  21A9               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3956  001964  6EDA               	movwf	fsr2h,c
  3957  001966  50DF               	movf	indf2,w,c
  3958  001968  0012               	return	
  3959  00196A                     __end_of_check_msg:
  3960                           	opt stack 0
  3961                           tblptru	equ	0xFF8
  3962                           tblptrh	equ	0xFF7
  3963                           tblptrl	equ	0xFF6
  3964                           tablat	equ	0xFF5
  3965                           prodh	equ	0xFF4
  3966                           prodl	equ	0xFF3
  3967                           intcon	equ	0xFF2
  3968                           intcon2	equ	0xFF1
  3969                           postinc0	equ	0xFEE
  3970                           wreg	equ	0xFE8
  3971                           indf1	equ	0xFE7
  3972                           fsr1h	equ	0xFE2
  3973                           fsr1l	equ	0xFE1
  3974                           indf2	equ	0xFDF
  3975                           postinc2	equ	0xFDE
  3976                           postdec2	equ	0xFDD
  3977                           fsr2h	equ	0xFDA
  3978                           fsr2l	equ	0xFD9
  3979                           status	equ	0xFD8
  3980                           
  3981 ;; *************** function _Delay1KTCYx *****************
  3982 ;; Defined at:
  3983 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  unit            1    wreg     unsigned char 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  unit            1   40[BANK0 ] unsigned char 
  3988 ;; Return value:  Size  Location     Type
  3989 ;;		None               void
  3990 ;; Registers used:
  3991 ;;		wreg
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3997 ;;      Params:         0       0       0       0       0
  3998 ;;      Locals:         0       1       0       0       0
  3999 ;;      Temps:          0       0       0       0       0
  4000 ;;      Totals:         0       1       0       0       0
  4001 ;;Total ram usage:        1 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; Hardware stack levels required when called:   10
  4004 ;; This function calls:
  4005 ;;		Nothing
  4006 ;; This function is called by:
  4007 ;;		_block_on_To_msgqueues
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text24
  4012  001ACA                     __ptext24:
  4013                           	opt stack 0
  4014  001ACA                     _Delay1KTCYx:
  4015                           	opt stack 18
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;incstack = 0
  4019                           ;Delay1KTCYx@unit stored from wreg
  4020  001ACA  CFE8 F0A8          	movff	wreg,Delay1KTCYx@unit
  4021  001ACE                     l747:
  4022  001ACE  0EFA               	movlw	250
  4023  001AD0                     u2507:
  4024  001AD0  F000               	nop	
  4025  001AD2  2EE8               	decfsz	wreg,f,c
  4026  001AD4  D7FD               	goto	u2507
  4027  001AD6  0100               	movlb	0	; () banked
  4028  001AD8  0100               	movlb	0	; () banked
  4029  001ADA  2FA8               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4030  001ADC  D7F8               	goto	l747
  4031  001ADE  0012               	return	
  4032  001AE0                     __end_of_Delay1KTCYx:
  4033                           	opt stack 0
  4034                           tblptru	equ	0xFF8
  4035                           tblptrh	equ	0xFF7
  4036                           tblptrl	equ	0xFF6
  4037                           tablat	equ	0xFF5
  4038                           prodh	equ	0xFF4
  4039                           prodl	equ	0xFF3
  4040                           intcon	equ	0xFF2
  4041                           intcon2	equ	0xFF1
  4042                           postinc0	equ	0xFEE
  4043                           wreg	equ	0xFE8
  4044                           indf1	equ	0xFE7
  4045                           fsr1h	equ	0xFE2
  4046                           fsr1l	equ	0xFE1
  4047                           indf2	equ	0xFDF
  4048                           postinc2	equ	0xFDE
  4049                           postdec2	equ	0xFDD
  4050                           fsr2h	equ	0xFDA
  4051                           fsr2l	equ	0xFD9
  4052                           status	equ	0xFD8
  4053                           
  4054 ;; *************** function _ToMainLow_recvmsg *****************
  4055 ;; Defined at:
  4056 ;;		line 112 in file "../src/messages.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;  maxlength       1    wreg     unsigned char 
  4059 ;;  msgtype         2   64[BANK0 ] PTR unsigned char 
  4060 ;;		 -> main@msgtype(1), 
  4061 ;;  data            2   66[BANK0 ] PTR void 
  4062 ;;		 -> main@msgbuffer(11), 
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;  maxlength       1   68[BANK0 ] unsigned char 
  4065 ;; Return value:  Size  Location     Type
  4066 ;;                  1    wreg      char 
  4067 ;; Registers used:
  4068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4069 ;; Tracked objects:
  4070 ;;		On entry : 0/0
  4071 ;;		On exit  : 0/0
  4072 ;;		Unchanged: 0/0
  4073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4074 ;;      Params:         0       4       0       0       0
  4075 ;;      Locals:         0       1       0       0       0
  4076 ;;      Temps:          0       0       0       0       0
  4077 ;;      Totals:         0       5       0       0       0
  4078 ;;Total ram usage:        5 bytes
  4079 ;; Hardware stack levels used:    1
  4080 ;; Hardware stack levels required when called:   12
  4081 ;; This function calls:
  4082 ;;		_recv_msg
  4083 ;; This function is called by:
  4084 ;;		_main
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           	psect	text25
  4089  0017BC                     __ptext25:
  4090                           	opt stack 0
  4091  0017BC                     _ToMainLow_recvmsg:
  4092                           	opt stack 17
  4093                           
  4094                           ; BSR set to: 0
  4095                           ;incstack = 0
  4096                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4097  0017BC  CFE8 F0C4          	movff	wreg,ToMainLow_recvmsg@maxlength
  4098                           
  4099                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4100  0017C0  0101               	movlb	1	; () banked
  4101  0017C2  0E01               	movlw	high _ToMainLow_MQ
  4102  0017C4  0100               	movlb	0	; () banked
  4103  0017C6  0100               	movlb	0	; () banked
  4104  0017C8  6FB3               	movwf	(recv_msg@qptr+1)& (0+255),b
  4105  0017CA  0101               	movlb	1	; () banked
  4106  0017CC  0E6C               	movlw	low _ToMainLow_MQ
  4107  0017CE  0100               	movlb	0	; () banked
  4108  0017D0  0100               	movlb	0	; () banked
  4109  0017D2  6FB2               	movwf	recv_msg@qptr& (0+255),b
  4110  0017D4  C0C4  F0B4         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4111  0017D8  0100               	movlb	0	; () banked
  4112  0017DA  0100               	movlb	0	; () banked
  4113  0017DC  C0C1  F0B6         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4114  0017E0  0100               	movlb	0	; () banked
  4115  0017E2  0100               	movlb	0	; () banked
  4116  0017E4  C0C0  F0B5         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4117  0017E8  0100               	movlb	0	; () banked
  4118  0017EA  0100               	movlb	0	; () banked
  4119  0017EC  C0C3  F0B8         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4120  0017F0  0100               	movlb	0	; () banked
  4121  0017F2  0100               	movlb	0	; () banked
  4122  0017F4  C0C2  F0B7         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4123  0017F8  ECA7  F004         	call	_recv_msg	;wreg free
  4124  0017FC  0012               	return	
  4125  0017FE                     __end_of_ToMainLow_recvmsg:
  4126                           	opt stack 0
  4127                           tblptru	equ	0xFF8
  4128                           tblptrh	equ	0xFF7
  4129                           tblptrl	equ	0xFF6
  4130                           tablat	equ	0xFF5
  4131                           prodh	equ	0xFF4
  4132                           prodl	equ	0xFF3
  4133                           intcon	equ	0xFF2
  4134                           intcon2	equ	0xFF1
  4135                           postinc0	equ	0xFEE
  4136                           wreg	equ	0xFE8
  4137                           indf1	equ	0xFE7
  4138                           fsr1h	equ	0xFE2
  4139                           fsr1l	equ	0xFE1
  4140                           indf2	equ	0xFDF
  4141                           postinc2	equ	0xFDE
  4142                           postdec2	equ	0xFDD
  4143                           fsr2h	equ	0xFDA
  4144                           fsr2l	equ	0xFD9
  4145                           status	equ	0xFD8
  4146                           
  4147 ;; *************** function _ToMainHigh_recvmsg *****************
  4148 ;; Defined at:
  4149 ;;		line 135 in file "../src/messages.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;  maxlength       1    wreg     unsigned char 
  4152 ;;  msgtype         2   64[BANK0 ] PTR unsigned char 
  4153 ;;		 -> main@msgtype(1), 
  4154 ;;  data            2   66[BANK0 ] PTR void 
  4155 ;;		 -> main@msgbuffer(11), 
  4156 ;; Auto vars:     Size  Location     Type
  4157 ;;  maxlength       1   68[BANK0 ] unsigned char 
  4158 ;; Return value:  Size  Location     Type
  4159 ;;                  1    wreg      char 
  4160 ;; Registers used:
  4161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4162 ;; Tracked objects:
  4163 ;;		On entry : 0/0
  4164 ;;		On exit  : 0/0
  4165 ;;		Unchanged: 0/0
  4166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4167 ;;      Params:         0       4       0       0       0
  4168 ;;      Locals:         0       1       0       0       0
  4169 ;;      Temps:          0       0       0       0       0
  4170 ;;      Totals:         0       5       0       0       0
  4171 ;;Total ram usage:        5 bytes
  4172 ;; Hardware stack levels used:    1
  4173 ;; Hardware stack levels required when called:   12
  4174 ;; This function calls:
  4175 ;;		_recv_msg
  4176 ;; This function is called by:
  4177 ;;		_main
  4178 ;; This function uses a non-reentrant model
  4179 ;;
  4180                           
  4181                           	psect	text26
  4182  0017FE                     __ptext26:
  4183                           	opt stack 0
  4184  0017FE                     _ToMainHigh_recvmsg:
  4185                           	opt stack 17
  4186                           
  4187                           ;incstack = 0
  4188                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4189  0017FE  CFE8 F0C4          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4190                           
  4191                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4192  001802  0101               	movlb	1	; () banked
  4193  001804  0E01               	movlw	high _ToMainHigh_MQ
  4194  001806  0100               	movlb	0	; () banked
  4195  001808  0100               	movlb	0	; () banked
  4196  00180A  6FB3               	movwf	(recv_msg@qptr+1)& (0+255),b
  4197  00180C  0101               	movlb	1	; () banked
  4198  00180E  0E36               	movlw	low _ToMainHigh_MQ
  4199  001810  0100               	movlb	0	; () banked
  4200  001812  0100               	movlb	0	; () banked
  4201  001814  6FB2               	movwf	recv_msg@qptr& (0+255),b
  4202  001816  C0C4  F0B4         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4203  00181A  0100               	movlb	0	; () banked
  4204  00181C  0100               	movlb	0	; () banked
  4205  00181E  C0C1  F0B6         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4206  001822  0100               	movlb	0	; () banked
  4207  001824  0100               	movlb	0	; () banked
  4208  001826  C0C0  F0B5         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4209  00182A  0100               	movlb	0	; () banked
  4210  00182C  0100               	movlb	0	; () banked
  4211  00182E  C0C3  F0B8         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4212  001832  0100               	movlb	0	; () banked
  4213  001834  0100               	movlb	0	; () banked
  4214  001836  C0C2  F0B7         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4215  00183A  ECA7  F004         	call	_recv_msg	;wreg free
  4216  00183E  0012               	return	
  4217  001840                     __end_of_ToMainHigh_recvmsg:
  4218                           	opt stack 0
  4219                           tblptru	equ	0xFF8
  4220                           tblptrh	equ	0xFF7
  4221                           tblptrl	equ	0xFF6
  4222                           tablat	equ	0xFF5
  4223                           prodh	equ	0xFF4
  4224                           prodl	equ	0xFF3
  4225                           intcon	equ	0xFF2
  4226                           intcon2	equ	0xFF1
  4227                           postinc0	equ	0xFEE
  4228                           wreg	equ	0xFE8
  4229                           indf1	equ	0xFE7
  4230                           fsr1h	equ	0xFE2
  4231                           fsr1l	equ	0xFE1
  4232                           indf2	equ	0xFDF
  4233                           postinc2	equ	0xFDE
  4234                           postdec2	equ	0xFDD
  4235                           fsr2h	equ	0xFDA
  4236                           fsr2l	equ	0xFD9
  4237                           status	equ	0xFD8
  4238                           
  4239 ;; *************** function _recv_msg *****************
  4240 ;; Defined at:
  4241 ;;		line 63 in file "../src/messages.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;  qptr            2   50[BANK0 ] PTR struct __msg_queue
  4244 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4245 ;;  maxlength       1   52[BANK0 ] unsigned char 
  4246 ;;  msgtype         2   53[BANK0 ] PTR unsigned char 
  4247 ;;		 -> main@msgtype(1), timer0_int_handler@msgtype(2), 
  4248 ;;  data            2   55[BANK0 ] PTR void 
  4249 ;;		 -> main@msgbuffer(11), timer0_int_handler@val(2), 
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;  qmsg            2   62[BANK0 ] PTR struct __msg
  4252 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4253 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4254 ;;  tlength         2   60[BANK0 ] unsigned int 
  4255 ;;  slot            1   59[BANK0 ] unsigned char 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  1    wreg      char 
  4258 ;; Registers used:
  4259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4265 ;;      Params:         0       7       0       0       0
  4266 ;;      Locals:         0       5       0       0       0
  4267 ;;      Temps:          0       2       0       0       0
  4268 ;;      Totals:         0      14       0       0       0
  4269 ;;Total ram usage:       14 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; Hardware stack levels required when called:   11
  4272 ;; This function calls:
  4273 ;;		_memcpy
  4274 ;; This function is called by:
  4275 ;;		_ToMainLow_recvmsg
  4276 ;;		_ToMainHigh_recvmsg
  4277 ;;		_FromMainLow_recvmsg
  4278 ;;		_FromMainHigh_recvmsg
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           	psect	text27
  4283  00094E                     __ptext27:
  4284                           	opt stack 0
  4285  00094E                     _recv_msg:
  4286                           	opt stack 17
  4287                           
  4288                           ;messages.c: 64: unsigned char slot;
  4289                           ;messages.c: 68: msg *qmsg;
  4290                           ;messages.c: 69: size_t tlength;
  4291                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4292                           
  4293                           ;incstack = 0
  4294  00094E  0100               	movlb	0	; () banked
  4295  000950  EE20 F035          	lfsr	2,53
  4296  000954  0100               	movlb	0	; () banked
  4297  000956  51B2               	movf	recv_msg@qptr& (0+255),w,b
  4298  000958  26D9               	addwf	fsr2l,f,c
  4299  00095A  0100               	movlb	0	; () banked
  4300  00095C  51B3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4301  00095E  22DA               	addwfc	fsr2h,f,c
  4302  000960  50DF               	movf	indf2,w,c
  4303  000962  0100               	movlb	0	; () banked
  4304  000964  0100               	movlb	0	; () banked
  4305  000966  6FBB               	movwf	recv_msg@slot& (0+255),b
  4306                           
  4307                           ; BSR set to: 0
  4308                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4309  000968  0100               	movlb	0	; () banked
  4310  00096A  0100               	movlb	0	; () banked
  4311  00096C  51BB               	movf	recv_msg@slot& (0+255),w,b
  4312  00096E  0D0D               	mullw	13
  4313  000970  50F3               	movf	prodl,w,c
  4314  000972  0100               	movlb	0	; () banked
  4315  000974  0100               	movlb	0	; () banked
  4316  000976  25B2               	addwf	recv_msg@qptr& (0+255),w,b
  4317  000978  0100               	movlb	0	; () banked
  4318  00097A  0100               	movlb	0	; () banked
  4319  00097C  6FBE               	movwf	recv_msg@qmsg& (0+255),b
  4320  00097E  50F4               	movf	prodh,w,c
  4321  000980  0100               	movlb	0	; () banked
  4322  000982  0100               	movlb	0	; () banked
  4323  000984  21B3               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4324  000986  0100               	movlb	0	; () banked
  4325  000988  6FBF               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;messages.c: 74: if (qmsg->full == 1) {
  4329  00098A  0E01               	movlw	1
  4330  00098C  C0BE  FFD9         	movff	recv_msg@qmsg,fsr2l
  4331  000990  C0BF  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4332  000994  62DF               	cpfseq	indf2,c
  4333  000996  D074               	goto	l2515
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4337  000998  0100               	movlb	0	; () banked
  4338  00099A  EE20 F001          	lfsr	2,1
  4339  00099E  0100               	movlb	0	; () banked
  4340  0009A0  51BE               	movf	recv_msg@qmsg& (0+255),w,b
  4341  0009A2  26D9               	addwf	fsr2l,f,c
  4342  0009A4  0100               	movlb	0	; () banked
  4343  0009A6  51BF               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4344  0009A8  22DA               	addwfc	fsr2h,f,c
  4345  0009AA  50DF               	movf	indf2,w,c
  4346  0009AC  0100               	movlb	0	; () banked
  4347  0009AE  0100               	movlb	0	; () banked
  4348  0009B0  5DB4               	subwf	recv_msg@maxlength& (0+255),w,b
  4349  0009B2  B0D8               	btfsc	status,0,c
  4350  0009B4  D002               	goto	l2499
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;messages.c: 77: return (-3);
  4354  0009B6  0EFD               	movlw	253
  4355  0009B8  0012               	return	
  4356  0009BA                     l2499:
  4357                           
  4358                           ; BSR set to: 0
  4359                           ;messages.c: 78: }
  4360                           ;messages.c: 80: tlength = qmsg->length;
  4361  0009BA  0100               	movlb	0	; () banked
  4362  0009BC  EE20 F001          	lfsr	2,1
  4363  0009C0  0100               	movlb	0	; () banked
  4364  0009C2  51BE               	movf	recv_msg@qmsg& (0+255),w,b
  4365  0009C4  26D9               	addwf	fsr2l,f,c
  4366  0009C6  0100               	movlb	0	; () banked
  4367  0009C8  51BF               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4368  0009CA  22DA               	addwfc	fsr2h,f,c
  4369  0009CC  50DF               	movf	indf2,w,c
  4370  0009CE  0100               	movlb	0	; () banked
  4371  0009D0  6FB9               	movwf	??_recv_msg& (0+255),b
  4372  0009D2  0100               	movlb	0	; () banked
  4373  0009D4  51B9               	movf	??_recv_msg& (0+255),w,b
  4374  0009D6  0100               	movlb	0	; () banked
  4375  0009D8  0100               	movlb	0	; () banked
  4376  0009DA  6FBC               	movwf	recv_msg@tlength& (0+255),b
  4377  0009DC  0100               	movlb	0	; () banked
  4378  0009DE  6BBD               	clrf	(recv_msg@tlength+1)& (0+255),b
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4382  0009E0  0100               	movlb	0	; () banked
  4383  0009E2  0100               	movlb	0	; () banked
  4384  0009E4  C0B8  F0A9         	movff	recv_msg@data+1,memcpy@d1+1
  4385  0009E8  0100               	movlb	0	; () banked
  4386  0009EA  0100               	movlb	0	; () banked
  4387  0009EC  C0B7  F0A8         	movff	recv_msg@data,memcpy@d1
  4388  0009F0  0E03               	movlw	3
  4389  0009F2  0100               	movlb	0	; () banked
  4390  0009F4  0100               	movlb	0	; () banked
  4391  0009F6  25BE               	addwf	recv_msg@qmsg& (0+255),w,b
  4392  0009F8  0100               	movlb	0	; () banked
  4393  0009FA  6FB9               	movwf	??_recv_msg& (0+255),b
  4394  0009FC  0E00               	movlw	0
  4395  0009FE  0100               	movlb	0	; () banked
  4396  000A00  0100               	movlb	0	; () banked
  4397  000A02  21BF               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4398  000A04  0100               	movlb	0	; () banked
  4399  000A06  6FBA               	movwf	(??_recv_msg+1)& (0+255),b
  4400  000A08  C0B9  F0AA         	movff	??_recv_msg,memcpy@s1
  4401  000A0C  C0BA  F0AB         	movff	??_recv_msg+1,memcpy@s1+1
  4402  000A10  C0BC  F0AC         	movff	recv_msg@tlength,memcpy@n
  4403  000A14  C0BD  F0AD         	movff	recv_msg@tlength+1,memcpy@n+1
  4404  000A18  EC1A  F00B         	call	_memcpy	;wreg free
  4405                           
  4406                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4407  000A1C  0100               	movlb	0	; () banked
  4408  000A1E  EE20 F035          	lfsr	2,53
  4409  000A22  0100               	movlb	0	; () banked
  4410  000A24  51B2               	movf	recv_msg@qptr& (0+255),w,b
  4411  000A26  26D9               	addwf	fsr2l,f,c
  4412  000A28  0100               	movlb	0	; () banked
  4413  000A2A  51B3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4414  000A2C  22DA               	addwfc	fsr2h,f,c
  4415  000A2E  0100               	movlb	0	; () banked
  4416  000A30  EE10 F035          	lfsr	1,53
  4417  000A34  0100               	movlb	0	; () banked
  4418  000A36  51B2               	movf	recv_msg@qptr& (0+255),w,b
  4419  000A38  26E1               	addwf	fsr1l,f,c
  4420  000A3A  0100               	movlb	0	; () banked
  4421  000A3C  51B3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4422  000A3E  22E2               	addwfc	fsr1h,f,c
  4423  000A40  50E7               	movf	indf1,w,c
  4424  000A42  0100               	movlb	0	; () banked
  4425  000A44  6FB9               	movwf	??_recv_msg& (0+255),b
  4426  000A46  0100               	movlb	0	; () banked
  4427  000A48  29B9               	incf	??_recv_msg& (0+255),w,b
  4428  000A4A  0B03               	andlw	3
  4429  000A4C  6EDF               	movwf	indf2,c
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4433  000A4E  0100               	movlb	0	; () banked
  4434  000A50  EE20 F002          	lfsr	2,2
  4435  000A54  0100               	movlb	0	; () banked
  4436  000A56  51BE               	movf	recv_msg@qmsg& (0+255),w,b
  4437  000A58  26D9               	addwf	fsr2l,f,c
  4438  000A5A  0100               	movlb	0	; () banked
  4439  000A5C  51BF               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4440  000A5E  22DA               	addwfc	fsr2h,f,c
  4441  000A60  C0B5  FFE1         	movff	recv_msg@msgtype,fsr1l
  4442  000A64  C0B6  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4443  000A68  CFDF FFE7          	movff	indf2,indf1
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;messages.c: 91: qmsg->full = 0;
  4447  000A6C  C0BE  FFD9         	movff	recv_msg@qmsg,fsr2l
  4448  000A70  C0BF  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4449  000A74  0E00               	movlw	0
  4450  000A76  6EDF               	movwf	indf2,c
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;messages.c: 92: return (tlength);
  4454  000A78  0100               	movlb	0	; () banked
  4455  000A7A  0100               	movlb	0	; () banked
  4456  000A7C  51BC               	movf	recv_msg@tlength& (0+255),w,b
  4457  000A7E  0012               	return	
  4458  000A80                     l2515:
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;messages.c: 94: return (-4);
  4462  000A80  0EFC               	movlw	252
  4463  000A82  0012               	return	
  4464  000A84                     __end_of_recv_msg:
  4465                           	opt stack 0
  4466                           tblptru	equ	0xFF8
  4467                           tblptrh	equ	0xFF7
  4468                           tblptrl	equ	0xFF6
  4469                           tablat	equ	0xFF5
  4470                           prodh	equ	0xFF4
  4471                           prodl	equ	0xFF3
  4472                           intcon	equ	0xFF2
  4473                           intcon2	equ	0xFF1
  4474                           postinc0	equ	0xFEE
  4475                           wreg	equ	0xFE8
  4476                           indf1	equ	0xFE7
  4477                           fsr1h	equ	0xFE2
  4478                           fsr1l	equ	0xFE1
  4479                           indf2	equ	0xFDF
  4480                           postinc2	equ	0xFDE
  4481                           postdec2	equ	0xFDD
  4482                           fsr2h	equ	0xFDA
  4483                           fsr2l	equ	0xFD9
  4484                           status	equ	0xFD8
  4485                           
  4486 ;; *************** function _memcpy *****************
  4487 ;; Defined at:
  4488 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;  d1              2   40[BANK0 ] PTR void 
  4491 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4492 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4493 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  4494 ;;  s1              2   42[BANK0 ] PTR const void 
  4495 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4496 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4497 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  4498 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4499 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  4500 ;;  n               2   44[BANK0 ] unsigned int 
  4501 ;; Auto vars:     Size  Location     Type
  4502 ;;  s               2   48[BANK0 ] PTR const unsigned char 
  4503 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4504 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4505 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  4506 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4507 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  4508 ;;  d               2   46[BANK0 ] PTR unsigned char 
  4509 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4510 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4511 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  4512 ;; Return value:  Size  Location     Type
  4513 ;;                  2   40[BANK0 ] PTR void 
  4514 ;; Registers used:
  4515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4516 ;; Tracked objects:
  4517 ;;		On entry : 0/0
  4518 ;;		On exit  : 0/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4521 ;;      Params:         0       6       0       0       0
  4522 ;;      Locals:         0       4       0       0       0
  4523 ;;      Temps:          0       0       0       0       0
  4524 ;;      Totals:         0      10       0       0       0
  4525 ;;Total ram usage:       10 bytes
  4526 ;; Hardware stack levels used:    1
  4527 ;; Hardware stack levels required when called:   10
  4528 ;; This function calls:
  4529 ;;		Nothing
  4530 ;; This function is called by:
  4531 ;;		_send_msg
  4532 ;;		_recv_msg
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	text28
  4537  001634                     __ptext28:
  4538                           	opt stack 0
  4539  001634                     _memcpy:
  4540                           	opt stack 16
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;incstack = 0
  4544  001634  0100               	movlb	0	; () banked
  4545  001636  0100               	movlb	0	; () banked
  4546  001638  C0AB  F0B1         	movff	memcpy@s1+1,memcpy@s+1
  4547  00163C  0100               	movlb	0	; () banked
  4548  00163E  0100               	movlb	0	; () banked
  4549  001640  C0AA  F0B0         	movff	memcpy@s1,memcpy@s
  4550  001644  0100               	movlb	0	; () banked
  4551  001646  0100               	movlb	0	; () banked
  4552  001648  C0A9  F0AF         	movff	memcpy@d1+1,memcpy@d+1
  4553  00164C  0100               	movlb	0	; () banked
  4554  00164E  0100               	movlb	0	; () banked
  4555  001650  C0A8  F0AE         	movff	memcpy@d1,memcpy@d
  4556  001654  D012               	goto	l2485
  4557  001656                     l2479:
  4558                           
  4559                           ; BSR set to: 0
  4560  001656  C0B0  FFD9         	movff	memcpy@s,fsr2l
  4561  00165A  C0B1  FFDA         	movff	memcpy@s+1,fsr2h
  4562  00165E  C0AE  FFE1         	movff	memcpy@d,fsr1l
  4563  001662  C0AF  FFE2         	movff	memcpy@d+1,fsr1h
  4564  001666  CFDF FFE7          	movff	indf2,indf1
  4565                           
  4566                           ; BSR set to: 0
  4567  00166A  0100               	movlb	0	; () banked
  4568  00166C  0100               	movlb	0	; () banked
  4569  00166E  4BB0               	infsnz	memcpy@s& (0+255),f,b
  4570  001670  2BB1               	incf	(memcpy@s+1)& (0+255),f,b
  4571                           
  4572                           ; BSR set to: 0
  4573  001672  0100               	movlb	0	; () banked
  4574  001674  0100               	movlb	0	; () banked
  4575  001676  4BAE               	infsnz	memcpy@d& (0+255),f,b
  4576  001678  2BAF               	incf	(memcpy@d+1)& (0+255),f,b
  4577  00167A                     l2485:
  4578                           
  4579                           ; BSR set to: 0
  4580  00167A  0100               	movlb	0	; () banked
  4581  00167C  0100               	movlb	0	; () banked
  4582  00167E  07AC               	decf	memcpy@n& (0+255),f,b
  4583  001680  A0D8               	btfss	status,0,c
  4584  001682  07AD               	decf	(memcpy@n+1)& (0+255),f,b
  4585  001684  0100               	movlb	0	; () banked
  4586  001686  29AC               	incf	memcpy@n& (0+255),w,b
  4587  001688  B4D8               	btfsc	status,2,c
  4588  00168A  29AD               	incf	(memcpy@n+1)& (0+255),w,b
  4589  00168C  B4D8               	btfsc	status,2,c
  4590                           
  4591                           ; BSR set to: 0
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;	Return value of _memcpy is never used
  4595  00168E  0012               	return	
  4596  001690  D7E2               	goto	l2479
  4597  001692                     __end_of_memcpy:
  4598                           	opt stack 0
  4599                           tblptru	equ	0xFF8
  4600                           tblptrh	equ	0xFF7
  4601                           tblptrl	equ	0xFF6
  4602                           tablat	equ	0xFF5
  4603                           prodh	equ	0xFF4
  4604                           prodl	equ	0xFF3
  4605                           intcon	equ	0xFF2
  4606                           intcon2	equ	0xFF1
  4607                           postinc0	equ	0xFEE
  4608                           wreg	equ	0xFE8
  4609                           indf1	equ	0xFE7
  4610                           fsr1h	equ	0xFE2
  4611                           fsr1l	equ	0xFE1
  4612                           indf2	equ	0xFDF
  4613                           postinc2	equ	0xFDE
  4614                           postdec2	equ	0xFDD
  4615                           fsr2h	equ	0xFDA
  4616                           fsr2l	equ	0xFD9
  4617                           status	equ	0xFD8
  4618                           
  4619 ;; *************** function _OpenUSART *****************
  4620 ;; Defined at:
  4621 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;  config          1    wreg     unsigned char 
  4624 ;;  spbrg           2   40[BANK0 ] unsigned int 
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;  config          1   45[BANK0 ] unsigned char 
  4627 ;; Return value:  Size  Location     Type
  4628 ;;		None               void
  4629 ;; Registers used:
  4630 ;;		wreg, status,2
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4636 ;;      Params:         0       2       0       0       0
  4637 ;;      Locals:         0       1       0       0       0
  4638 ;;      Temps:          0       3       0       0       0
  4639 ;;      Totals:         0       6       0       0       0
  4640 ;;Total ram usage:        6 bytes
  4641 ;; Hardware stack levels used:    1
  4642 ;; Hardware stack levels required when called:   10
  4643 ;; This function calls:
  4644 ;;		Nothing
  4645 ;; This function is called by:
  4646 ;;		_main
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           
  4650                           	psect	text29
  4651  0011FA                     __ptext29:
  4652                           	opt stack 0
  4653  0011FA                     _OpenUSART:
  4654                           	opt stack 19
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;incstack = 0
  4658                           ;OpenUSART@config stored from wreg
  4659  0011FA  CFE8 F0AD          	movff	wreg,OpenUSART@config
  4660  0011FE  0E00               	movlw	0
  4661  001200  6EAC               	movwf	4012,c	;volatile
  4662  001202  0E00               	movlw	0
  4663  001204  6EAB               	movwf	4011,c	;volatile
  4664  001206  0100               	movlb	0	; () banked
  4665  001208  0100               	movlb	0	; () banked
  4666  00120A  B1AD               	btfsc	OpenUSART@config& (0+255),0,b
  4667                           
  4668                           ; BSR set to: 0
  4669  00120C  88AC               	bsf	4012,4,c	;volatile
  4670                           
  4671                           ; BSR set to: 0
  4672                           
  4673                           ; BSR set to: 0
  4674  00120E  0100               	movlb	0	; () banked
  4675  001210  0100               	movlb	0	; () banked
  4676  001212  A3AD               	btfss	OpenUSART@config& (0+255),1,b
  4677  001214  D002               	goto	l2777
  4678                           
  4679                           ; BSR set to: 0
  4680  001216  8CAC               	bsf	4012,6,c	;volatile
  4681  001218  8CAB               	bsf	4011,6,c	;volatile
  4682  00121A                     l2777:
  4683                           
  4684                           ; BSR set to: 0
  4685  00121A  0100               	movlb	0	; () banked
  4686  00121C  0100               	movlb	0	; () banked
  4687  00121E  B5AD               	btfsc	OpenUSART@config& (0+255),2,b
  4688                           
  4689                           ; BSR set to: 0
  4690  001220  8EAC               	bsf	4012,7,c	;volatile
  4691                           
  4692                           ; BSR set to: 0
  4693                           
  4694                           ; BSR set to: 0
  4695  001222  0100               	movlb	0	; () banked
  4696  001224  0100               	movlb	0	; () banked
  4697  001226  A7AD               	btfss	OpenUSART@config& (0+255),3,b
  4698  001228  D002               	goto	l514
  4699                           
  4700                           ; BSR set to: 0
  4701  00122A  88AB               	bsf	4011,4,c	;volatile
  4702  00122C  D001               	goto	l2785
  4703  00122E                     l514:
  4704                           
  4705                           ; BSR set to: 0
  4706  00122E  8AAB               	bsf	4011,5,c	;volatile
  4707  001230                     l2785:
  4708                           
  4709                           ; BSR set to: 0
  4710  001230  0100               	movlb	0	; () banked
  4711  001232  0100               	movlb	0	; () banked
  4712  001234  B9AD               	btfsc	OpenUSART@config& (0+255),4,b
  4713                           
  4714                           ; BSR set to: 0
  4715  001236  84AC               	bsf	4012,2,c	;volatile
  4716                           
  4717                           ; BSR set to: 0
  4718  001238  989E               	bcf	3998,4,c	;volatile
  4719                           
  4720                           ; BSR set to: 0
  4721  00123A  0100               	movlb	0	; () banked
  4722  00123C  0100               	movlb	0	; () banked
  4723  00123E  BBAD               	btfsc	OpenUSART@config& (0+255),5,b
  4724                           
  4725                           ; BSR set to: 0
  4726  001240  86AB               	bsf	4011,3,c	;volatile
  4727                           
  4728                           ; BSR set to: 0
  4729                           
  4730                           ; BSR set to: 0
  4731  001242  0100               	movlb	0	; () banked
  4732  001244  0100               	movlb	0	; () banked
  4733  001246  ADAD               	btfss	OpenUSART@config& (0+255),6,b
  4734  001248  D002               	goto	l518
  4735                           
  4736                           ; BSR set to: 0
  4737  00124A  8A9D               	bsf	3997,5,c	;volatile
  4738  00124C  D001               	goto	l519
  4739  00124E                     l518:
  4740                           
  4741                           ; BSR set to: 0
  4742  00124E  9A9D               	bcf	3997,5,c	;volatile
  4743  001250                     l519:
  4744                           
  4745                           ; BSR set to: 0
  4746  001250  9A9E               	bcf	3998,5,c	;volatile
  4747                           
  4748                           ; BSR set to: 0
  4749  001252  0100               	movlb	0	; () banked
  4750  001254  0100               	movlb	0	; () banked
  4751  001256  AFAD               	btfss	OpenUSART@config& (0+255),7,b
  4752  001258  D002               	goto	l520
  4753                           
  4754                           ; BSR set to: 0
  4755  00125A  889D               	bsf	3997,4,c	;volatile
  4756  00125C  D001               	goto	l521
  4757  00125E                     l520:
  4758                           
  4759                           ; BSR set to: 0
  4760  00125E  989D               	bcf	3997,4,c	;volatile
  4761  001260                     l521:
  4762                           
  4763                           ; BSR set to: 0
  4764  001260  C0A8  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4765                           
  4766                           ; BSR set to: 0
  4767  001264  0100               	movlb	0	; () banked
  4768  001266  C0A9  F0AA         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4769  00126A  C0AA  F0AB         	movff	??_OpenUSART,??_OpenUSART+1
  4770  00126E  0100               	movlb	0	; () banked
  4771  001270  6BAC               	clrf	(??_OpenUSART+2)& (0+255),b
  4772  001272  0100               	movlb	0	; () banked
  4773  001274  51AB               	movf	(??_OpenUSART+1)& (0+255),w,b
  4774  001276  6EB0               	movwf	4016,c	;volatile
  4775                           
  4776                           ; BSR set to: 0
  4777  001278  8AAC               	bsf	4012,5,c	;volatile
  4778                           
  4779                           ; BSR set to: 0
  4780  00127A  8EAB               	bsf	4011,7,c	;volatile
  4781                           
  4782                           ; BSR set to: 0
  4783  00127C  9C94               	bcf	3988,6,c	;volatile
  4784                           
  4785                           ; BSR set to: 0
  4786  00127E  8E94               	bsf	3988,7,c	;volatile
  4787                           
  4788                           ; BSR set to: 0
  4789  001280  A8AC               	btfss	4012,4,c	;volatile
  4790  001282  0012               	return	
  4791                           
  4792                           ; BSR set to: 0
  4793  001284  BEAC               	btfsc	4012,7,c	;volatile
  4794  001286  0012               	return	
  4795                           
  4796                           ; BSR set to: 0
  4797  001288  8C94               	bsf	3988,6,c	;volatile
  4798  00128A  0012               	return	
  4799  00128C                     __end_of_OpenUSART:
  4800                           	opt stack 0
  4801                           tblptru	equ	0xFF8
  4802                           tblptrh	equ	0xFF7
  4803                           tblptrl	equ	0xFF6
  4804                           tablat	equ	0xFF5
  4805                           prodh	equ	0xFF4
  4806                           prodl	equ	0xFF3
  4807                           intcon	equ	0xFF2
  4808                           intcon2	equ	0xFF1
  4809                           postinc0	equ	0xFEE
  4810                           wreg	equ	0xFE8
  4811                           indf1	equ	0xFE7
  4812                           fsr1h	equ	0xFE2
  4813                           fsr1l	equ	0xFE1
  4814                           indf2	equ	0xFDF
  4815                           postinc2	equ	0xFDE
  4816                           postdec2	equ	0xFDD
  4817                           fsr2h	equ	0xFDA
  4818                           fsr2l	equ	0xFD9
  4819                           status	equ	0xFD8
  4820                           
  4821 ;; *************** function _OpenTimer0 *****************
  4822 ;; Defined at:
  4823 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;  config          1    wreg     unsigned char 
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;  config          1   40[BANK0 ] unsigned char 
  4828 ;; Return value:  Size  Location     Type
  4829 ;;		None               void
  4830 ;; Registers used:
  4831 ;;		wreg, status,2, status,0
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4837 ;;      Params:         0       0       0       0       0
  4838 ;;      Locals:         0       1       0       0       0
  4839 ;;      Temps:          0       0       0       0       0
  4840 ;;      Totals:         0       1       0       0       0
  4841 ;;Total ram usage:        1 bytes
  4842 ;; Hardware stack levels used:    1
  4843 ;; Hardware stack levels required when called:   10
  4844 ;; This function calls:
  4845 ;;		Nothing
  4846 ;; This function is called by:
  4847 ;;		_main
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           	psect	text30
  4852  0019CC                     __ptext30:
  4853                           	opt stack 0
  4854  0019CC                     _OpenTimer0:
  4855                           	opt stack 19
  4856                           
  4857                           ; BSR set to: 0
  4858                           ;incstack = 0
  4859                           ;OpenTimer0@config stored from wreg
  4860  0019CC  CFE8 F0A8          	movff	wreg,OpenTimer0@config
  4861  0019D0  0100               	movlb	0	; () banked
  4862  0019D2  0100               	movlb	0	; () banked
  4863  0019D4  51A8               	movf	OpenTimer0@config& (0+255),w,b
  4864  0019D6  0B7F               	andlw	127
  4865  0019D8  6ED5               	movwf	4053,c	;volatile
  4866                           
  4867                           ; BSR set to: 0
  4868  0019DA  0E00               	movlw	0
  4869  0019DC  6ED7               	movwf	4055,c	;volatile
  4870                           
  4871                           ; BSR set to: 0
  4872  0019DE  0E00               	movlw	0
  4873  0019E0  6ED6               	movwf	4054,c	;volatile
  4874                           
  4875                           ; BSR set to: 0
  4876  0019E2  94F2               	bcf	intcon,2,c	;volatile
  4877                           
  4878                           ; BSR set to: 0
  4879  0019E4  0100               	movlb	0	; () banked
  4880  0019E6  0100               	movlb	0	; () banked
  4881  0019E8  AFA8               	btfss	OpenTimer0@config& (0+255),7,b
  4882  0019EA  D002               	goto	l465
  4883                           
  4884                           ; BSR set to: 0
  4885  0019EC  8AF2               	bsf	intcon,5,c	;volatile
  4886  0019EE  D001               	goto	l466
  4887  0019F0                     l465:
  4888                           
  4889                           ; BSR set to: 0
  4890  0019F0  9AF2               	bcf	intcon,5,c	;volatile
  4891  0019F2                     l466:
  4892                           
  4893                           ; BSR set to: 0
  4894  0019F2  8ED5               	bsf	4053,7,c	;volatile
  4895                           
  4896                           ; BSR set to: 0
  4897  0019F4  0012               	return	
  4898  0019F6                     __end_of_OpenTimer0:
  4899                           	opt stack 0
  4900                           tblptru	equ	0xFF8
  4901                           tblptrh	equ	0xFF7
  4902                           tblptrl	equ	0xFF6
  4903                           tablat	equ	0xFF5
  4904                           prodh	equ	0xFF4
  4905                           prodl	equ	0xFF3
  4906                           intcon	equ	0xFF2
  4907                           intcon2	equ	0xFF1
  4908                           postinc0	equ	0xFEE
  4909                           wreg	equ	0xFE8
  4910                           indf1	equ	0xFE7
  4911                           fsr1h	equ	0xFE2
  4912                           fsr1l	equ	0xFE1
  4913                           indf2	equ	0xFDF
  4914                           postinc2	equ	0xFDE
  4915                           postdec2	equ	0xFDD
  4916                           fsr2h	equ	0xFDA
  4917                           fsr2l	equ	0xFD9
  4918                           status	equ	0xFD8
  4919                           
  4920 ;; *************** function _InterruptHandlerLow *****************
  4921 ;; Defined at:
  4922 ;;		line 179 in file "../src/interrupts.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;		None
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;		None
  4927 ;; Return value:  Size  Location     Type
  4928 ;;		None               void
  4929 ;; Registers used:
  4930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4936 ;;      Params:         0       0       0       0       0
  4937 ;;      Locals:         0       0       0       0       0
  4938 ;;      Temps:         17       0       0       0       0
  4939 ;;      Totals:        17       0       0       0       0
  4940 ;;Total ram usage:       17 bytes
  4941 ;; Hardware stack levels used:    1
  4942 ;; Hardware stack levels required when called:    9
  4943 ;; This function calls:
  4944 ;;		_uart_recv_int_handler
  4945 ;; This function is called by:
  4946 ;;		Interrupt level 1
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           	psect	intcodelo
  4951  000018                     __pintcodelo:
  4952                           	opt stack 0
  4953  000018                     _InterruptHandlerLow:
  4954                           	opt stack 16
  4955                           
  4956                           ; BSR set to: 0
  4957                           ;incstack = 0
  4958  000018  CFD8 F01C          	movff	status,??_InterruptHandlerLow
  4959  00001C  CFE8 F01D          	movff	wreg,??_InterruptHandlerLow+1
  4960  000020  CFE0 F01E          	movff	bsr,??_InterruptHandlerLow+2
  4961  000024  CFFA F01F          	movff	pclath,??_InterruptHandlerLow+3
  4962  000028  CFFB F020          	movff	pclatu,??_InterruptHandlerLow+4
  4963  00002C  CFE9 F021          	movff	fsr0l,??_InterruptHandlerLow+5
  4964  000030  CFEA F022          	movff	fsr0h,??_InterruptHandlerLow+6
  4965  000034  CFE1 F023          	movff	fsr1l,??_InterruptHandlerLow+7
  4966  000038  CFE2 F024          	movff	fsr1h,??_InterruptHandlerLow+8
  4967  00003C  CFD9 F025          	movff	fsr2l,??_InterruptHandlerLow+9
  4968  000040  CFDA F026          	movff	fsr2h,??_InterruptHandlerLow+10
  4969  000044  CFF3 F027          	movff	prodl,??_InterruptHandlerLow+11
  4970  000048  CFF4 F028          	movff	prodh,??_InterruptHandlerLow+12
  4971  00004C  CFF6 F029          	movff	tblptrl,??_InterruptHandlerLow+13
  4972  000050  CFF7 F02A          	movff	tblptrh,??_InterruptHandlerLow+14
  4973  000054  CFF8 F02B          	movff	tblptru,??_InterruptHandlerLow+15
  4974  000058  CFF5 F02C          	movff	tablat,??_InterruptHandlerLow+16
  4975                           
  4976                           ;interrupts.c: 181: if (PIR1bits.TMR1IF) {
  4977  00005C  B09E               	btfsc	3998,0,c	;volatile
  4978                           
  4979                           ;interrupts.c: 182: PIR1bits.TMR1IF = 0;
  4980  00005E  909E               	bcf	3998,0,c	;volatile
  4981                           
  4982                           ;interrupts.c: 184: }
  4983                           ;interrupts.c: 187: if (PIR1bits.RCIF) {
  4984  000060  AA9E               	btfss	3998,5,c	;volatile
  4985  000062  D003               	goto	i1l422
  4986                           
  4987                           ;interrupts.c: 188: PIR1bits.RCIF = 0;
  4988  000064  9A9E               	bcf	3998,5,c	;volatile
  4989                           
  4990                           ;interrupts.c: 189: uart_recv_int_handler();
  4991  000066  ECAF  F008         	call	_uart_recv_int_handler	;wreg free
  4992  00006A                     i1l422:
  4993  00006A  C02C  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4994  00006E  C02B  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4995  000072  C02A  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4996  000076  C029  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4997  00007A  C028  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4998  00007E  C027  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4999  000082  C026  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5000  000086  C025  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5001  00008A  C024  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5002  00008E  C023  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5003  000092  C022  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5004  000096  C021  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5005  00009A  C020  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5006  00009E  C01F  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5007  0000A2  C01E  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5008  0000A6  C01D  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5009  0000AA  C01C  FFD8         	movff	??_InterruptHandlerLow,status
  5010  0000AE  0010               	retfie	
  5011  0000B0                     __end_of_InterruptHandlerLow:
  5012                           	opt stack 0
  5013                           pclatu	equ	0xFFB
  5014                           pclath	equ	0xFFA
  5015                           tblptru	equ	0xFF8
  5016                           tblptrh	equ	0xFF7
  5017                           tblptrl	equ	0xFF6
  5018                           tablat	equ	0xFF5
  5019                           prodh	equ	0xFF4
  5020                           prodl	equ	0xFF3
  5021                           intcon	equ	0xFF2
  5022                           intcon2	equ	0xFF1
  5023                           postinc0	equ	0xFEE
  5024                           fsr0h	equ	0xFEA
  5025                           fsr0l	equ	0xFE9
  5026                           wreg	equ	0xFE8
  5027                           indf1	equ	0xFE7
  5028                           fsr1h	equ	0xFE2
  5029                           fsr1l	equ	0xFE1
  5030                           bsr	equ	0xFE0
  5031                           indf2	equ	0xFDF
  5032                           postinc2	equ	0xFDE
  5033                           postdec2	equ	0xFDD
  5034                           fsr2h	equ	0xFDA
  5035                           fsr2l	equ	0xFD9
  5036                           status	equ	0xFD8
  5037                           
  5038 ;; *************** function _uart_recv_int_handler *****************
  5039 ;; Defined at:
  5040 ;;		line 11 in file "../src/my_uart.c"
  5041 ;; Parameters:    Size  Location     Type
  5042 ;;		None
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;		None
  5045 ;; Return value:  Size  Location     Type
  5046 ;;		None               void
  5047 ;; Registers used:
  5048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/0
  5051 ;;		On exit  : 0/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5054 ;;      Params:         0       0       0       0       0
  5055 ;;      Locals:         0       0       0       0       0
  5056 ;;      Temps:          1       0       0       0       0
  5057 ;;      Totals:         1       0       0       0       0
  5058 ;;Total ram usage:        1 bytes
  5059 ;; Hardware stack levels used:    1
  5060 ;; Hardware stack levels required when called:    8
  5061 ;; This function calls:
  5062 ;;		_ReadUSART
  5063 ;;		_ToMainLow_sendmsg
  5064 ;; This function is called by:
  5065 ;;		_InterruptHandlerLow
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           
  5069                           	psect	text32
  5070  00115E                     __ptext32:
  5071                           	opt stack 0
  5072  00115E                     _uart_recv_int_handler:
  5073                           	opt stack 16
  5074                           
  5075                           ;my_uart.c: 12: if ((PIR1bits.RCIF)) {
  5076                           
  5077                           ;incstack = 0
  5078  00115E  AA9E               	btfss	3998,5,c	;volatile
  5079  001160  D03C               	goto	i1l2997
  5080                           
  5081                           ;my_uart.c: 13: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5082  001162  EE20 F004          	lfsr	2,4
  5083  001166  5050               	movf	_uc_ptr,w,c
  5084  001168  26D9               	addwf	fsr2l,f,c
  5085  00116A  5051               	movf	_uc_ptr+1,w,c
  5086  00116C  22DA               	addwfc	fsr2h,f,c
  5087  00116E  50DF               	movf	indf2,w,c
  5088  001170  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5089  001172  501B               	movf	??_uart_recv_int_handler,w,c
  5090  001174  0D01               	mullw	1
  5091  001176  50F3               	movf	prodl,w,c
  5092  001178  2450               	addwf	_uc_ptr,w,c
  5093  00117A  6ED9               	movwf	fsr2l,c
  5094  00117C  50F4               	movf	prodh,w,c
  5095  00117E  2051               	addwfc	_uc_ptr+1,w,c
  5096  001180  6EDA               	movwf	fsr2h,c
  5097  001182  EC56  F00D         	call	_ReadUSART	;wreg free
  5098  001186  6EDF               	movwf	indf2,c
  5099                           
  5100                           ;my_uart.c: 14: uc_ptr->buflen++;
  5101  001188  EE20 F004          	lfsr	2,4
  5102  00118C  5050               	movf	_uc_ptr,w,c
  5103  00118E  26D9               	addwf	fsr2l,f,c
  5104  001190  5051               	movf	_uc_ptr+1,w,c
  5105  001192  22DA               	addwfc	fsr2h,f,c
  5106  001194  2ADF               	incf	indf2,f,c
  5107                           
  5108                           ;my_uart.c: 16: if (uc_ptr->buflen == 4) {
  5109  001196  EE20 F004          	lfsr	2,4
  5110  00119A  5050               	movf	_uc_ptr,w,c
  5111  00119C  26D9               	addwf	fsr2l,f,c
  5112  00119E  5051               	movf	_uc_ptr+1,w,c
  5113  0011A0  22DA               	addwfc	fsr2h,f,c
  5114  0011A2  0E04               	movlw	4
  5115  0011A4  62DF               	cpfseq	indf2,c
  5116  0011A6  D019               	goto	i1l2997
  5117                           
  5118                           ;my_uart.c: 17: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5119  0011A8  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5120  0011AA  0E1F               	movlw	31
  5121  0011AC  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5122  0011AE  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5123  0011B0  C051  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5124  0011B4  C050  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5125  0011B8  EE20 F004          	lfsr	2,4
  5126  0011BC  5050               	movf	_uc_ptr,w,c
  5127  0011BE  26D9               	addwf	fsr2l,f,c
  5128  0011C0  5051               	movf	_uc_ptr+1,w,c
  5129  0011C2  22DA               	addwfc	fsr2h,f,c
  5130  0011C4  50DF               	movf	indf2,w,c
  5131  0011C6  EC0F  F00D         	call	_ToMainLow_sendmsg
  5132                           
  5133                           ;my_uart.c: 18: uc_ptr->buflen = 0;
  5134  0011CA  EE20 F004          	lfsr	2,4
  5135  0011CE  5050               	movf	_uc_ptr,w,c
  5136  0011D0  26D9               	addwf	fsr2l,f,c
  5137  0011D2  5051               	movf	_uc_ptr+1,w,c
  5138  0011D4  22DA               	addwfc	fsr2h,f,c
  5139  0011D6  0E00               	movlw	0
  5140  0011D8  6EDF               	movwf	indf2,c
  5141  0011DA                     i1l2997:
  5142                           
  5143                           ;my_uart.c: 19: }
  5144                           ;my_uart.c: 20: }
  5145                           ;my_uart.c: 21: if (USART_Status.OVERRUN_ERROR == 1) {
  5146  0011DA  A64F               	btfss	_USART_Status,3,c
  5147  0011DC  0012               	return	
  5148                           
  5149                           ;my_uart.c: 24: RCSTAbits.CREN = 0;
  5150  0011DE  98AB               	bcf	4011,4,c	;volatile
  5151                           
  5152                           ;my_uart.c: 25: RCSTAbits.CREN = 1;
  5153  0011E0  88AB               	bsf	4011,4,c	;volatile
  5154                           
  5155                           ;my_uart.c: 26: ToMainLow_sendmsg(0, 30, (void *) 0);
  5156  0011E2  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5157  0011E4  0E1E               	movlw	30
  5158  0011E6  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5159  0011E8  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5160  0011EA  0E00               	movlw	0
  5161  0011EC  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5162  0011EE  0E00               	movlw	0
  5163  0011F0  6E18               	movwf	ToMainLow_sendmsg@data,c
  5164  0011F2  0E00               	movlw	0
  5165  0011F4  EC0F  F00D         	call	_ToMainLow_sendmsg
  5166  0011F8  0012               	return	
  5167  0011FA                     __end_of_uart_recv_int_handler:
  5168                           	opt stack 0
  5169                           pclatu	equ	0xFFB
  5170                           pclath	equ	0xFFA
  5171                           tblptru	equ	0xFF8
  5172                           tblptrh	equ	0xFF7
  5173                           tblptrl	equ	0xFF6
  5174                           tablat	equ	0xFF5
  5175                           prodh	equ	0xFF4
  5176                           prodl	equ	0xFF3
  5177                           intcon	equ	0xFF2
  5178                           intcon2	equ	0xFF1
  5179                           postinc0	equ	0xFEE
  5180                           fsr0h	equ	0xFEA
  5181                           fsr0l	equ	0xFE9
  5182                           wreg	equ	0xFE8
  5183                           indf1	equ	0xFE7
  5184                           fsr1h	equ	0xFE2
  5185                           fsr1l	equ	0xFE1
  5186                           bsr	equ	0xFE0
  5187                           indf2	equ	0xFDF
  5188                           postinc2	equ	0xFDE
  5189                           postdec2	equ	0xFDD
  5190                           fsr2h	equ	0xFDA
  5191                           fsr2l	equ	0xFD9
  5192                           status	equ	0xFD8
  5193                           
  5194 ;; *************** function _ToMainLow_sendmsg *****************
  5195 ;; Defined at:
  5196 ;;		line 103 in file "../src/messages.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;  length          1    wreg     unsigned char 
  5199 ;;  msgtype         1   22[COMRAM] unsigned char 
  5200 ;;  data            2   23[COMRAM] PTR void 
  5201 ;;		 -> main@uc(5), NULL(0), 
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;  length          1   25[COMRAM] unsigned char 
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  1    wreg      char 
  5206 ;; Registers used:
  5207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5213 ;;      Params:         3       0       0       0       0
  5214 ;;      Locals:         1       0       0       0       0
  5215 ;;      Temps:          0       0       0       0       0
  5216 ;;      Totals:         4       0       0       0       0
  5217 ;;Total ram usage:        4 bytes
  5218 ;; Hardware stack levels used:    1
  5219 ;; Hardware stack levels required when called:    7
  5220 ;; This function calls:
  5221 ;;		i1_send_msg
  5222 ;; This function is called by:
  5223 ;;		_uart_recv_int_handler
  5224 ;;		_timer1_int_handler
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           	psect	text33
  5229  001A1E                     __ptext33:
  5230                           	opt stack 0
  5231  001A1E                     _ToMainLow_sendmsg:
  5232                           	opt stack 16
  5233                           
  5234                           ;incstack = 0
  5235                           ;ToMainLow_sendmsg@length stored from wreg
  5236  001A1E  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5237                           
  5238                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5239                           ;	Return value of _ToMainLow_sendmsg is never used
  5240  001A22  0101               	movlb	1	; () banked
  5241  001A24  0E01               	movlw	high _ToMainLow_MQ
  5242  001A26  6E0C               	movwf	i1send_msg@qptr+1,c
  5243  001A28  0101               	movlb	1	; () banked
  5244  001A2A  0E6C               	movlw	low _ToMainLow_MQ
  5245  001A2C  6E0B               	movwf	i1send_msg@qptr,c
  5246  001A2E  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5247  001A32  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5248  001A36  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5249  001A3A  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5250  001A3E  ECB2  F007         	call	i1_send_msg	;wreg free
  5251  001A42  0012               	return	
  5252  001A44                     __end_of_ToMainLow_sendmsg:
  5253                           	opt stack 0
  5254                           pclatu	equ	0xFFB
  5255                           pclath	equ	0xFFA
  5256                           tblptru	equ	0xFF8
  5257                           tblptrh	equ	0xFF7
  5258                           tblptrl	equ	0xFF6
  5259                           tablat	equ	0xFF5
  5260                           prodh	equ	0xFF4
  5261                           prodl	equ	0xFF3
  5262                           intcon	equ	0xFF2
  5263                           intcon2	equ	0xFF1
  5264                           postinc0	equ	0xFEE
  5265                           fsr0h	equ	0xFEA
  5266                           fsr0l	equ	0xFE9
  5267                           wreg	equ	0xFE8
  5268                           indf1	equ	0xFE7
  5269                           fsr1h	equ	0xFE2
  5270                           fsr1l	equ	0xFE1
  5271                           bsr	equ	0xFE0
  5272                           indf2	equ	0xFDF
  5273                           postinc2	equ	0xFDE
  5274                           postdec2	equ	0xFDD
  5275                           fsr2h	equ	0xFDA
  5276                           fsr2l	equ	0xFD9
  5277                           status	equ	0xFD8
  5278                           
  5279 ;; *************** function i1_send_msg *****************
  5280 ;; Defined at:
  5281 ;;		line 24 in file "../src/messages.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5284 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5285 ;;  length          1   12[COMRAM] unsigned char 
  5286 ;;  msgtype         1   13[COMRAM] unsigned char 
  5287 ;;  data            2   14[COMRAM] PTR void 
  5288 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  5289 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5292 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5293 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5294 ;;  send_msg        2   17[COMRAM] unsigned int 
  5295 ;;  send_msg        1   19[COMRAM] unsigned char 
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  1    wreg      char 
  5298 ;; Registers used:
  5299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5305 ;;      Params:         6       0       0       0       0
  5306 ;;      Locals:         5       0       0       0       0
  5307 ;;      Temps:          1       0       0       0       0
  5308 ;;      Totals:        12       0       0       0       0
  5309 ;;Total ram usage:       12 bytes
  5310 ;; Hardware stack levels used:    1
  5311 ;; Hardware stack levels required when called:    6
  5312 ;; This function calls:
  5313 ;;		i1_memcpy
  5314 ;; This function is called by:
  5315 ;;		_ToMainLow_sendmsg
  5316 ;; This function uses a non-reentrant model
  5317 ;;
  5318                           
  5319                           	psect	text34
  5320  000F64                     __ptext34:
  5321                           	opt stack 0
  5322  000F64                     i1_send_msg:
  5323                           	opt stack 16
  5324                           
  5325                           ;messages.c: 25: unsigned char slot;
  5326                           ;messages.c: 27: msg *qmsg;
  5327                           ;messages.c: 28: size_t tlength = length;
  5328                           
  5329                           ;incstack = 0
  5330  000F64  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5331  000F68  6A13               	clrf	i1send_msg@tlength+1,c
  5332                           
  5333                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5334  000F6A  EE20 F034          	lfsr	2,52
  5335  000F6E  500B               	movf	i1send_msg@qptr,w,c
  5336  000F70  26D9               	addwf	fsr2l,f,c
  5337  000F72  500C               	movf	i1send_msg@qptr+1,w,c
  5338  000F74  22DA               	addwfc	fsr2h,f,c
  5339  000F76  50DF               	movf	indf2,w,c
  5340  000F78  6E14               	movwf	i1send_msg@slot,c
  5341                           
  5342                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5343  000F7A  5014               	movf	i1send_msg@slot,w,c
  5344  000F7C  0D0D               	mullw	13
  5345  000F7E  50F3               	movf	prodl,w,c
  5346  000F80  240B               	addwf	i1send_msg@qptr,w,c
  5347  000F82  6E15               	movwf	i1send_msg@qmsg,c
  5348  000F84  50F4               	movf	prodh,w,c
  5349  000F86  200C               	addwfc	i1send_msg@qptr+1,w,c
  5350  000F88  6E16               	movwf	i1send_msg@qmsg+1,c
  5351                           
  5352                           ;messages.c: 41: if (qmsg->full != 0) {
  5353  000F8A  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5354  000F8E  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5355  000F92  50DF               	movf	indf2,w,c
  5356  000F94  B4D8               	btfsc	status,2,c
  5357  000F96  D002               	goto	i1l2969
  5358                           
  5359                           ;messages.c: 42: return (-1);
  5360  000F98  0EFF               	movlw	255
  5361  000F9A  0012               	return	
  5362  000F9C                     i1l2969:
  5363                           
  5364                           ;messages.c: 43: }
  5365                           ;messages.c: 46: qmsg->length = length;
  5366  000F9C  EE20 F001          	lfsr	2,1
  5367  000FA0  5015               	movf	i1send_msg@qmsg,w,c
  5368  000FA2  26D9               	addwf	fsr2l,f,c
  5369  000FA4  5016               	movf	i1send_msg@qmsg+1,w,c
  5370  000FA6  22DA               	addwfc	fsr2h,f,c
  5371  000FA8  C00D  FFDF         	movff	i1send_msg@length,indf2
  5372                           
  5373                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5374  000FAC  EE20 F002          	lfsr	2,2
  5375  000FB0  5015               	movf	i1send_msg@qmsg,w,c
  5376  000FB2  26D9               	addwf	fsr2l,f,c
  5377  000FB4  5016               	movf	i1send_msg@qmsg+1,w,c
  5378  000FB6  22DA               	addwfc	fsr2h,f,c
  5379  000FB8  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5380                           
  5381                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5382  000FBC  0E03               	movlw	3
  5383  000FBE  2415               	addwf	i1send_msg@qmsg,w,c
  5384  000FC0  6E01               	movwf	i1memcpy@d1,c
  5385  000FC2  0E00               	movlw	0
  5386  000FC4  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5387  000FC6  6E02               	movwf	i1memcpy@d1+1,c
  5388  000FC8  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5389  000FCC  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5390  000FD0  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5391  000FD4  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5392  000FD8  EC20  F00C         	call	i1_memcpy	;wreg free
  5393                           
  5394                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5395  000FDC  EE20 F034          	lfsr	2,52
  5396  000FE0  500B               	movf	i1send_msg@qptr,w,c
  5397  000FE2  26D9               	addwf	fsr2l,f,c
  5398  000FE4  500C               	movf	i1send_msg@qptr+1,w,c
  5399  000FE6  22DA               	addwfc	fsr2h,f,c
  5400  000FE8  EE10 F034          	lfsr	1,52
  5401  000FEC  500B               	movf	i1send_msg@qptr,w,c
  5402  000FEE  26E1               	addwf	fsr1l,f,c
  5403  000FF0  500C               	movf	i1send_msg@qptr+1,w,c
  5404  000FF2  22E2               	addwfc	fsr1h,f,c
  5405  000FF4  50E7               	movf	indf1,w,c
  5406  000FF6  6E11               	movwf	??i1_send_msg& (0+255),c
  5407  000FF8  2811               	incf	??i1_send_msg,w,c
  5408  000FFA  0B03               	andlw	3
  5409  000FFC  6EDF               	movwf	indf2,c
  5410                           
  5411                           ;messages.c: 59: qmsg->full = 1;
  5412  000FFE  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5413  001002  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5414  001006  0E01               	movlw	1
  5415  001008  6EDF               	movwf	indf2,c
  5416                           
  5417                           ;messages.c: 60: return (1);
  5418  00100A  0E01               	movlw	1
  5419  00100C  0012               	return	
  5420  00100E                     __end_ofi1_send_msg:
  5421                           	opt stack 0
  5422                           pclatu	equ	0xFFB
  5423                           pclath	equ	0xFFA
  5424                           tblptru	equ	0xFF8
  5425                           tblptrh	equ	0xFF7
  5426                           tblptrl	equ	0xFF6
  5427                           tablat	equ	0xFF5
  5428                           prodh	equ	0xFF4
  5429                           prodl	equ	0xFF3
  5430                           intcon	equ	0xFF2
  5431                           intcon2	equ	0xFF1
  5432                           postinc0	equ	0xFEE
  5433                           fsr0h	equ	0xFEA
  5434                           fsr0l	equ	0xFE9
  5435                           wreg	equ	0xFE8
  5436                           indf1	equ	0xFE7
  5437                           fsr1h	equ	0xFE2
  5438                           fsr1l	equ	0xFE1
  5439                           bsr	equ	0xFE0
  5440                           indf2	equ	0xFDF
  5441                           postinc2	equ	0xFDE
  5442                           postdec2	equ	0xFDD
  5443                           fsr2h	equ	0xFDA
  5444                           fsr2l	equ	0xFD9
  5445                           status	equ	0xFD8
  5446                           
  5447 ;; *************** function i1_memcpy *****************
  5448 ;; Defined at:
  5449 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  5450 ;; Parameters:    Size  Location     Type
  5451 ;;  d1              2    0[COMRAM] PTR void 
  5452 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5453 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5454 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  5455 ;;  s1              2    2[COMRAM] PTR const void 
  5456 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5457 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5458 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  5459 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5460 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  5461 ;;  n               2    4[COMRAM] unsigned int 
  5462 ;; Auto vars:     Size  Location     Type
  5463 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5464 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5465 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5466 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  5467 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5468 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  5469 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5470 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5471 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5472 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  2    0[COMRAM] PTR void 
  5475 ;; Registers used:
  5476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5482 ;;      Params:         6       0       0       0       0
  5483 ;;      Locals:         4       0       0       0       0
  5484 ;;      Temps:          0       0       0       0       0
  5485 ;;      Totals:        10       0       0       0       0
  5486 ;;Total ram usage:       10 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; Hardware stack levels required when called:    5
  5489 ;; This function calls:
  5490 ;;		Nothing
  5491 ;; This function is called by:
  5492 ;;		i1_send_msg
  5493 ;; This function uses a non-reentrant model
  5494 ;;
  5495                           
  5496                           	psect	text35
  5497  001840                     __ptext35:
  5498                           	opt stack 0
  5499  001840                     i1_memcpy:
  5500                           	opt stack 16
  5501                           
  5502                           ;incstack = 0
  5503  001840  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5504  001844  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5505  001848  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5506  00184C  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5507  001850  D00E               	goto	i1l2945
  5508  001852                     i1l2939:
  5509  001852  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5510  001856  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5511  00185A  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5512  00185E  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5513  001862  CFDF FFE7          	movff	indf2,indf1
  5514  001866  4A09               	infsnz	i1memcpy@s,f,c
  5515  001868  2A0A               	incf	i1memcpy@s+1,f,c
  5516  00186A  4A07               	infsnz	i1memcpy@d,f,c
  5517  00186C  2A08               	incf	i1memcpy@d+1,f,c
  5518  00186E                     i1l2945:
  5519  00186E  0605               	decf	i1memcpy@n,f,c
  5520  001870  A0D8               	btfss	status,0,c
  5521  001872  0606               	decf	i1memcpy@n+1,f,c
  5522  001874  2805               	incf	i1memcpy@n& (0+255),w,c
  5523  001876  B4D8               	btfsc	status,2,c
  5524  001878  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5525  00187A  B4D8               	btfsc	status,2,c
  5526                           
  5527                           ;	Return value of i1_memcpy is never used
  5528  00187C  0012               	return	
  5529  00187E  D7E9               	goto	i1l2939
  5530  001880                     __end_ofi1_memcpy:
  5531                           	opt stack 0
  5532                           pclatu	equ	0xFFB
  5533                           pclath	equ	0xFFA
  5534                           tblptru	equ	0xFF8
  5535                           tblptrh	equ	0xFF7
  5536                           tblptrl	equ	0xFF6
  5537                           tablat	equ	0xFF5
  5538                           prodh	equ	0xFF4
  5539                           prodl	equ	0xFF3
  5540                           intcon	equ	0xFF2
  5541                           intcon2	equ	0xFF1
  5542                           postinc0	equ	0xFEE
  5543                           fsr0h	equ	0xFEA
  5544                           fsr0l	equ	0xFE9
  5545                           wreg	equ	0xFE8
  5546                           indf1	equ	0xFE7
  5547                           fsr1h	equ	0xFE2
  5548                           fsr1l	equ	0xFE1
  5549                           bsr	equ	0xFE0
  5550                           indf2	equ	0xFDF
  5551                           postinc2	equ	0xFDE
  5552                           postdec2	equ	0xFDD
  5553                           fsr2h	equ	0xFDA
  5554                           fsr2l	equ	0xFD9
  5555                           status	equ	0xFD8
  5556                           
  5557 ;; *************** function _ReadUSART *****************
  5558 ;; Defined at:
  5559 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  5560 ;; Parameters:    Size  Location     Type
  5561 ;;		None
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;  data            1    0[COMRAM] unsigned char 
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  1    wreg      unsigned char 
  5566 ;; Registers used:
  5567 ;;		wreg, status,2, status,0
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5573 ;;      Params:         0       0       0       0       0
  5574 ;;      Locals:         1       0       0       0       0
  5575 ;;      Temps:          0       0       0       0       0
  5576 ;;      Totals:         1       0       0       0       0
  5577 ;;Total ram usage:        1 bytes
  5578 ;; Hardware stack levels used:    1
  5579 ;; Hardware stack levels required when called:    5
  5580 ;; This function calls:
  5581 ;;		Nothing
  5582 ;; This function is called by:
  5583 ;;		_uart_recv_int_handler
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587                           	psect	text36
  5588  001AAC                     __ptext36:
  5589                           	opt stack 0
  5590  001AAC                     _ReadUSART:
  5591                           	opt stack 18
  5592                           
  5593                           ;incstack = 0
  5594  001AAC  0EF2               	movlw	242
  5595  001AAE  164F               	andwf	_USART_Status,f,c
  5596  001AB0  ACAB               	btfss	4011,6,c	;volatile
  5597  001AB2  D003               	goto	i1l532
  5598  001AB4  904F               	bcf	_USART_Status,0,c
  5599  001AB6  B0AB               	btfsc	4011,0,c	;volatile
  5600  001AB8  804F               	bsf	_USART_Status,0,c
  5601  001ABA                     i1l532:
  5602  001ABA  B4AB               	btfsc	4011,2,c	;volatile
  5603  001ABC  844F               	bsf	_USART_Status,2,c
  5604  001ABE  B2AB               	btfsc	4011,1,c	;volatile
  5605  001AC0  864F               	bsf	_USART_Status,3,c
  5606  001AC2  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5607  001AC6  5001               	movf	ReadUSART@data,w,c
  5608  001AC8  0012               	return	
  5609  001ACA                     __end_of_ReadUSART:
  5610                           	opt stack 0
  5611                           pclatu	equ	0xFFB
  5612                           pclath	equ	0xFFA
  5613                           tblptru	equ	0xFF8
  5614                           tblptrh	equ	0xFF7
  5615                           tblptrl	equ	0xFF6
  5616                           tablat	equ	0xFF5
  5617                           prodh	equ	0xFF4
  5618                           prodl	equ	0xFF3
  5619                           intcon	equ	0xFF2
  5620                           intcon2	equ	0xFF1
  5621                           postinc0	equ	0xFEE
  5622                           fsr0h	equ	0xFEA
  5623                           fsr0l	equ	0xFE9
  5624                           wreg	equ	0xFE8
  5625                           indf1	equ	0xFE7
  5626                           fsr1h	equ	0xFE2
  5627                           fsr1l	equ	0xFE1
  5628                           bsr	equ	0xFE0
  5629                           indf2	equ	0xFDF
  5630                           postinc2	equ	0xFDE
  5631                           postdec2	equ	0xFDD
  5632                           fsr2h	equ	0xFDA
  5633                           fsr2l	equ	0xFD9
  5634                           status	equ	0xFD8
  5635                           
  5636 ;; *************** function _InterruptHandlerHigh *****************
  5637 ;; Defined at:
  5638 ;;		line 114 in file "../src/interrupts.c"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;		None
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;  pureADCValue    2   38[BANK0 ] int 
  5643 ;; Return value:  Size  Location     Type
  5644 ;;		None               void
  5645 ;; Registers used:
  5646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5652 ;;      Params:         0       0       0       0       0
  5653 ;;      Locals:         0       2       0       0       0
  5654 ;;      Temps:          0      16       0       0       0
  5655 ;;      Totals:         0      18       0       0       0
  5656 ;;Total ram usage:       18 bytes
  5657 ;; Hardware stack levels used:    1
  5658 ;; Hardware stack levels required when called:    4
  5659 ;; This function calls:
  5660 ;;		_ReadADC
  5661 ;;		_SleepIfOkay
  5662 ;;		_i2c_int_handler
  5663 ;;		i2_ConvertADC
  5664 ;; This function is called by:
  5665 ;;		Interrupt level 2
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           
  5669                           	psect	intcode
  5670  000008                     __pintcode:
  5671                           	opt stack 0
  5672  000008                     _InterruptHandlerHigh:
  5673                           	opt stack 16
  5674                           
  5675                           ;incstack = 0
  5676  000008  CFFA F098          	movff	pclath,??_InterruptHandlerHigh+2
  5677  00000C  CFFB F099          	movff	pclatu,??_InterruptHandlerHigh+3
  5678  000010  EF42  F005         	goto	int_func
  5679                           pclatu	equ	0xFFB
  5680                           pclath	equ	0xFFA
  5681                           tblptru	equ	0xFF8
  5682                           tblptrh	equ	0xFF7
  5683                           tblptrl	equ	0xFF6
  5684                           tablat	equ	0xFF5
  5685                           prodh	equ	0xFF4
  5686                           prodl	equ	0xFF3
  5687                           intcon	equ	0xFF2
  5688                           intcon2	equ	0xFF1
  5689                           postinc0	equ	0xFEE
  5690                           fsr0h	equ	0xFEA
  5691                           fsr0l	equ	0xFE9
  5692                           wreg	equ	0xFE8
  5693                           indf1	equ	0xFE7
  5694                           fsr1h	equ	0xFE2
  5695                           fsr1l	equ	0xFE1
  5696                           bsr	equ	0xFE0
  5697                           indf2	equ	0xFDF
  5698                           postinc2	equ	0xFDE
  5699                           postdec2	equ	0xFDD
  5700                           fsr2h	equ	0xFDA
  5701                           fsr2l	equ	0xFD9
  5702                           status	equ	0xFD8
  5703                           
  5704                           	psect	intcode_body
  5705  000A84                     __pintcode_body:
  5706                           	opt stack 16
  5707  000A84                     int_func:
  5708                           	opt stack 16
  5709  000A84  CFE9 F09A          	movff	fsr0l,??_InterruptHandlerHigh+4
  5710  000A88  CFEA F09B          	movff	fsr0h,??_InterruptHandlerHigh+5
  5711  000A8C  CFE1 F09C          	movff	fsr1l,??_InterruptHandlerHigh+6
  5712  000A90  CFE2 F09D          	movff	fsr1h,??_InterruptHandlerHigh+7
  5713  000A94  CFD9 F09E          	movff	fsr2l,??_InterruptHandlerHigh+8
  5714  000A98  CFDA F09F          	movff	fsr2h,??_InterruptHandlerHigh+9
  5715  000A9C  CFF3 F0A0          	movff	prodl,??_InterruptHandlerHigh+10
  5716  000AA0  CFF4 F0A1          	movff	prodh,??_InterruptHandlerHigh+11
  5717  000AA4  CFF6 F0A2          	movff	tblptrl,??_InterruptHandlerHigh+12
  5718  000AA8  CFF7 F0A3          	movff	tblptrh,??_InterruptHandlerHigh+13
  5719  000AAC  CFF8 F0A4          	movff	tblptru,??_InterruptHandlerHigh+14
  5720  000AB0  CFF5 F0A5          	movff	tablat,??_InterruptHandlerHigh+15
  5721                           
  5722                           ;interrupts.c: 119: if (PIR1bits.SSPIF) {
  5723  000AB4  A69E               	btfss	3998,3,c	;volatile
  5724  000AB6  D003               	goto	i2l3225
  5725                           
  5726                           ;interrupts.c: 121: PIR1bits.SSPIF = 0;
  5727  000AB8  969E               	bcf	3998,3,c	;volatile
  5728                           
  5729                           ;interrupts.c: 123: i2c_int_handler();
  5730  000ABA  EC5A  F000         	call	_i2c_int_handler	;wreg free
  5731  000ABE                     i2l3225:
  5732                           
  5733                           ;interrupts.c: 124: }
  5734                           ;interrupts.c: 127: if (INTCONbits.TMR0IF) {
  5735  000ABE  A4F2               	btfss	intcon,2,c	;volatile
  5736  000AC0  D013               	goto	i2l3233
  5737                           
  5738                           ;interrupts.c: 128: INTCONbits.TMR0IF = 0;
  5739  000AC2  94F2               	bcf	intcon,2,c	;volatile
  5740                           
  5741                           ;interrupts.c: 131: LATBbits.LATB7 = !LATBbits.LATB7;
  5742  000AC4  BE8A               	btfsc	3978,7,c	;volatile
  5743  000AC6  D002               	goto	i2u241_40
  5744  000AC8  0E01               	movlw	1
  5745  000ACA  D001               	goto	i2u241_46
  5746  000ACC                     i2u241_40:
  5747  000ACC  0E00               	movlw	0
  5748  000ACE                     i2u241_46:
  5749  000ACE  0100               	movlb	0	; () banked
  5750  000AD0  6F96               	movwf	??_InterruptHandlerHigh& (0+255),b
  5751  000AD2  0100               	movlb	0	; () banked
  5752  000AD4  3396               	rrcf	??_InterruptHandlerHigh& (0+255),f,b
  5753  000AD6  3396               	rrcf	??_InterruptHandlerHigh& (0+255),f,b
  5754  000AD8  508A               	movf	3978,w,c	;volatile
  5755  000ADA  0100               	movlb	0	; () banked
  5756  000ADC  1996               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  5757  000ADE  0B7F               	andlw	-129
  5758  000AE0  1996               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  5759  000AE2  6E8A               	movwf	3978,c	;volatile
  5760                           
  5761                           ; BSR set to: 0
  5762                           ;interrupts.c: 132: ConvertADC();
  5763  000AE4  ECA1  F00D         	call	i2_ConvertADC	;wreg free
  5764  000AE8                     i2l3233:
  5765                           
  5766                           ;interrupts.c: 133: }
  5767                           ;interrupts.c: 138: if(PIR1bits.ADIF == 1)
  5768  000AE8  AC9E               	btfss	3998,6,c	;volatile
  5769  000AEA  D036               	goto	i2l3251
  5770                           
  5771                           ;interrupts.c: 139: {
  5772                           ;interrupts.c: 142: PIR1bits.ADIF = 0;
  5773  000AEC  9C9E               	bcf	3998,6,c	;volatile
  5774                           
  5775                           ;interrupts.c: 143: int pureADCValue = ReadADC();
  5776  000AEE  EC97  F00D         	call	_ReadADC	;wreg free
  5777  000AF2  C02D  F0A6         	movff	?_ReadADC,InterruptHandlerHigh@pureADCValue
  5778  000AF6  C02E  F0A7         	movff	?_ReadADC+1,InterruptHandlerHigh@pureADCValue+1
  5779                           
  5780                           ;interrupts.c: 144: ADCValue = pureADCValue >> 2;
  5781  000AFA  0100               	movlb	0	; () banked
  5782  000AFC  C0A6  F096         	movff	InterruptHandlerHigh@pureADCValue,??_InterruptHandlerHigh
  5783  000B00  0100               	movlb	0	; () banked
  5784  000B02  C0A7  F097         	movff	InterruptHandlerHigh@pureADCValue+1,??_InterruptHandlerHigh+1
  5785  000B06  0100               	movlb	0	; () banked
  5786  000B08  3597               	rlcf	(??_InterruptHandlerHigh+1)& (0+255),w,b
  5787  000B0A  3397               	rrcf	(??_InterruptHandlerHigh+1)& (0+255),f,b
  5788  000B0C  3396               	rrcf	??_InterruptHandlerHigh& (0+255),f,b
  5789  000B0E  0100               	movlb	0	; () banked
  5790  000B10  3597               	rlcf	(??_InterruptHandlerHigh+1)& (0+255),w,b
  5791  000B12  3397               	rrcf	(??_InterruptHandlerHigh+1)& (0+255),f,b
  5792  000B14  3396               	rrcf	??_InterruptHandlerHigh& (0+255),f,b
  5793  000B16  0100               	movlb	0	; () banked
  5794  000B18  5196               	movf	??_InterruptHandlerHigh& (0+255),w,b
  5795  000B1A  6E4D               	movwf	_ADCValue,c
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;interrupts.c: 145: if(responding == 0)
  5799  000B1C  504C               	movf	_responding+1,w,c
  5800  000B1E  104B               	iorwf	_responding,w,c
  5801  000B20  A4D8               	btfss	status,2,c
  5802  000B22  D01A               	goto	i2l3251
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;interrupts.c: 146: {
  5806                           ;interrupts.c: 147: if(arrayPlaceHolder == 237)
  5807  000B24  5049               	movf	_arrayPlaceHolder,w,c
  5808  000B26  0AED               	xorlw	237
  5809  000B28  104A               	iorwf	_arrayPlaceHolder+1,w,c
  5810  000B2A  A4D8               	btfss	status,2,c
  5811  000B2C  D009               	goto	i2l3247
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;interrupts.c: 148: {
  5815                           ;interrupts.c: 149: responding = 1;
  5816  000B2E  0E00               	movlw	0
  5817  000B30  6E4C               	movwf	_responding+1,c
  5818  000B32  0E01               	movlw	1
  5819  000B34  6E4B               	movwf	_responding,c
  5820                           
  5821                           ;interrupts.c: 150: arrayPlaceHolder = 0;
  5822  000B36  0E00               	movlw	0
  5823  000B38  6E4A               	movwf	_arrayPlaceHolder+1,c
  5824  000B3A  0E00               	movlw	0
  5825  000B3C  6E49               	movwf	_arrayPlaceHolder,c
  5826                           
  5827                           ;interrupts.c: 151: }
  5828  000B3E  D00C               	goto	i2l3251
  5829  000B40                     i2l3247:
  5830                           
  5831                           ; BSR set to: 0
  5832                           ;interrupts.c: 152: else
  5833                           ;interrupts.c: 153: {
  5834                           ;interrupts.c: 154: ADCArray[arrayPlaceHolder] = ADCValue;
  5835  000B40  0103               	movlb	3	; () banked
  5836  000B42  0E00               	movlw	low _ADCArray
  5837  000B44  2449               	addwf	_arrayPlaceHolder,w,c
  5838  000B46  6ED9               	movwf	fsr2l,c
  5839  000B48  0103               	movlb	3	; () banked
  5840  000B4A  0E03               	movlw	high _ADCArray
  5841  000B4C  204A               	addwfc	_arrayPlaceHolder+1,w,c
  5842  000B4E  6EDA               	movwf	fsr2h,c
  5843  000B50  C04D  FFDF         	movff	_ADCValue,indf2
  5844                           
  5845                           ; BSR set to: 3
  5846                           ;interrupts.c: 155: arrayPlaceHolder++;
  5847  000B54  4A49               	infsnz	_arrayPlaceHolder,f,c
  5848  000B56  2A4A               	incf	_arrayPlaceHolder+1,f,c
  5849  000B58                     i2l3251:
  5850                           
  5851                           ;interrupts.c: 156: }
  5852                           ;interrupts.c: 157: }
  5853                           ;interrupts.c: 160: }
  5854                           ;interrupts.c: 166: SleepIfOkay();
  5855  000B58  EC72  F00B         	call	_SleepIfOkay	;wreg free
  5856  000B5C  C0A5  FFF5         	movff	??_InterruptHandlerHigh+15,tablat
  5857  000B60  C0A4  FFF8         	movff	??_InterruptHandlerHigh+14,tblptru
  5858  000B64  C0A3  FFF7         	movff	??_InterruptHandlerHigh+13,tblptrh
  5859  000B68  C0A2  FFF6         	movff	??_InterruptHandlerHigh+12,tblptrl
  5860  000B6C  C0A1  FFF4         	movff	??_InterruptHandlerHigh+11,prodh
  5861  000B70  C0A0  FFF3         	movff	??_InterruptHandlerHigh+10,prodl
  5862  000B74  C09F  FFDA         	movff	??_InterruptHandlerHigh+9,fsr2h
  5863  000B78  C09E  FFD9         	movff	??_InterruptHandlerHigh+8,fsr2l
  5864  000B7C  C09D  FFE2         	movff	??_InterruptHandlerHigh+7,fsr1h
  5865  000B80  C09C  FFE1         	movff	??_InterruptHandlerHigh+6,fsr1l
  5866  000B84  C09B  FFEA         	movff	??_InterruptHandlerHigh+5,fsr0h
  5867  000B88  C09A  FFE9         	movff	??_InterruptHandlerHigh+4,fsr0l
  5868  000B8C  C099  FFFB         	movff	??_InterruptHandlerHigh+3,pclatu
  5869  000B90  C098  FFFA         	movff	??_InterruptHandlerHigh+2,pclath
  5870  000B94  0011               	retfie		f
  5871  000B96                     __end_of_InterruptHandlerHigh:
  5872                           	opt stack 0
  5873                           pclatu	equ	0xFFB
  5874                           pclath	equ	0xFFA
  5875                           tblptru	equ	0xFF8
  5876                           tblptrh	equ	0xFF7
  5877                           tblptrl	equ	0xFF6
  5878                           tablat	equ	0xFF5
  5879                           prodh	equ	0xFF4
  5880                           prodl	equ	0xFF3
  5881                           intcon	equ	0xFF2
  5882                           intcon2	equ	0xFF1
  5883                           postinc0	equ	0xFEE
  5884                           fsr0h	equ	0xFEA
  5885                           fsr0l	equ	0xFE9
  5886                           wreg	equ	0xFE8
  5887                           indf1	equ	0xFE7
  5888                           fsr1h	equ	0xFE2
  5889                           fsr1l	equ	0xFE1
  5890                           bsr	equ	0xFE0
  5891                           indf2	equ	0xFDF
  5892                           postinc2	equ	0xFDE
  5893                           postdec2	equ	0xFDD
  5894                           fsr2h	equ	0xFDA
  5895                           fsr2l	equ	0xFD9
  5896                           status	equ	0xFD8
  5897                           
  5898 ;; *************** function i2_ConvertADC *****************
  5899 ;; Defined at:
  5900 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcconv.c"
  5901 ;; Parameters:    Size  Location     Type
  5902 ;;		None
  5903 ;; Auto vars:     Size  Location     Type
  5904 ;;		None
  5905 ;; Return value:  Size  Location     Type
  5906 ;;		None               void
  5907 ;; Registers used:
  5908 ;;		None
  5909 ;; Tracked objects:
  5910 ;;		On entry : 0/0
  5911 ;;		On exit  : 0/0
  5912 ;;		Unchanged: 0/0
  5913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5914 ;;      Params:         0       0       0       0       0
  5915 ;;      Locals:         0       0       0       0       0
  5916 ;;      Temps:          0       0       0       0       0
  5917 ;;      Totals:         0       0       0       0       0
  5918 ;;Total ram usage:        0 bytes
  5919 ;; Hardware stack levels used:    1
  5920 ;; This function calls:
  5921 ;;		Nothing
  5922 ;; This function is called by:
  5923 ;;		_InterruptHandlerHigh
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926                           
  5927                           	psect	text38
  5928  001B42                     __ptext38:
  5929                           	opt stack 0
  5930  001B42                     i2_ConvertADC:
  5931                           	opt stack 19
  5932                           
  5933                           ;incstack = 0
  5934  001B42  82C2               	bsf	4034,1,c	;volatile
  5935  001B44  0012               	return	
  5936  001B46                     __end_ofi2_ConvertADC:
  5937                           	opt stack 0
  5938                           pclatu	equ	0xFFB
  5939                           pclath	equ	0xFFA
  5940                           tblptru	equ	0xFF8
  5941                           tblptrh	equ	0xFF7
  5942                           tblptrl	equ	0xFF6
  5943                           tablat	equ	0xFF5
  5944                           prodh	equ	0xFF4
  5945                           prodl	equ	0xFF3
  5946                           intcon	equ	0xFF2
  5947                           intcon2	equ	0xFF1
  5948                           postinc0	equ	0xFEE
  5949                           fsr0h	equ	0xFEA
  5950                           fsr0l	equ	0xFE9
  5951                           wreg	equ	0xFE8
  5952                           indf1	equ	0xFE7
  5953                           fsr1h	equ	0xFE2
  5954                           fsr1l	equ	0xFE1
  5955                           bsr	equ	0xFE0
  5956                           indf2	equ	0xFDF
  5957                           postinc2	equ	0xFDE
  5958                           postdec2	equ	0xFDD
  5959                           fsr2h	equ	0xFDA
  5960                           fsr2l	equ	0xFD9
  5961                           status	equ	0xFD8
  5962                           
  5963 ;; *************** function _i2c_int_handler *****************
  5964 ;; Defined at:
  5965 ;;		line 101 in file "../src/my_i2c.c"
  5966 ;; Parameters:    Size  Location     Type
  5967 ;;		None
  5968 ;; Auto vars:     Size  Location     Type
  5969 ;;  msgbuffer      11    0[BANK0 ] unsigned char [11]
  5970 ;;  length          2   11[BANK0 ] int 
  5971 ;;  error_buf       3   13[BANK0 ] unsigned char [3]
  5972 ;;  data_read       1   21[BANK0 ] unsigned char 
  5973 ;;  msg_ready       1   20[BANK0 ] unsigned char 
  5974 ;;  msg_to_send     1   19[BANK0 ] unsigned char 
  5975 ;;  i2c_data        1   18[BANK0 ] unsigned char 
  5976 ;;  overrun_erro    1   17[BANK0 ] unsigned char 
  5977 ;;  data_written    1   16[BANK0 ] unsigned char 
  5978 ;; Return value:  Size  Location     Type
  5979 ;;		None               void
  5980 ;; Registers used:
  5981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5982 ;; Tracked objects:
  5983 ;;		On entry : 0/0
  5984 ;;		On exit  : 0/0
  5985 ;;		Unchanged: 0/0
  5986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5987 ;;      Params:         0       0       0       0       0
  5988 ;;      Locals:         0      22       0       0       0
  5989 ;;      Temps:          2       0       0       0       0
  5990 ;;      Totals:         2      22       0       0       0
  5991 ;;Total ram usage:       24 bytes
  5992 ;; Hardware stack levels used:    1
  5993 ;; Hardware stack levels required when called:    3
  5994 ;; This function calls:
  5995 ;;		_ToMainHigh_sendmsg
  5996 ;;		_handle_start
  5997 ;;		_returnADCValue
  5998 ;;		i2_start_i2c_slave_reply
  5999 ;; This function is called by:
  6000 ;;		_InterruptHandlerHigh
  6001 ;; This function uses a non-reentrant model
  6002 ;;
  6003                           
  6004                           	psect	text39
  6005  0000B4                     __ptext39:
  6006                           	opt stack 0
  6007  0000B4                     _i2c_int_handler:
  6008                           	opt stack 16
  6009                           
  6010                           ;my_i2c.c: 102: unsigned char i2c_data;
  6011                           ;my_i2c.c: 103: unsigned char data_read = 0;
  6012                           
  6013                           ;incstack = 0
  6014  0000B4  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6015  0000B6  0E00               	movlw	0
  6016  0000B8  0100               	movlb	0	; () banked
  6017  0000BA  0100               	movlb	0	; () banked
  6018  0000BC  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  6019  0000BE  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6020                           
  6021                           ;my_i2c.c: 104: unsigned char data_written = 0;
  6022  0000C0  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6023  0000C2  0E00               	movlw	0
  6024  0000C4  0100               	movlb	0	; () banked
  6025  0000C6  0100               	movlb	0	; () banked
  6026  0000C8  6F90               	movwf	i2c_int_handler@data_written& (0+255),b
  6027  0000CA  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6028                           
  6029                           ;my_i2c.c: 105: unsigned char msg_ready = 0;
  6030  0000CC  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6031  0000CE  0E00               	movlw	0
  6032  0000D0  0100               	movlb	0	; () banked
  6033  0000D2  0100               	movlb	0	; () banked
  6034  0000D4  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6035  0000D6  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6036                           
  6037                           ;my_i2c.c: 106: unsigned char msg_to_send = 0;
  6038  0000D8  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6039  0000DA  0E00               	movlw	0
  6040  0000DC  0100               	movlb	0	; () banked
  6041  0000DE  0100               	movlb	0	; () banked
  6042  0000E0  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6043  0000E2  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6044                           
  6045                           ;my_i2c.c: 107: unsigned char overrun_error = 0;
  6046  0000E4  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6047  0000E6  0E00               	movlw	0
  6048  0000E8  0100               	movlb	0	; () banked
  6049  0000EA  0100               	movlb	0	; () banked
  6050  0000EC  6F91               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6051  0000EE  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6052                           
  6053                           ; BSR set to: 0
  6054                           ;my_i2c.c: 108: unsigned char error_buf[3];
  6055                           ;my_i2c.c: 111: if (SSPCON1bits.SSPOV == 1) {
  6056  0000F0  ACC6               	btfss	4038,6,c	;volatile
  6057  0000F2  D027               	goto	i2l3053
  6058                           
  6059                           ; BSR set to: 0
  6060                           ;my_i2c.c: 112: SSPCON1bits.SSPOV = 0;
  6061  0000F4  9CC6               	bcf	4038,6,c	;volatile
  6062                           
  6063                           ; BSR set to: 0
  6064                           ;my_i2c.c: 116: ic_ptr->status = 0x5;
  6065  0000F6  0100               	movlb	0	; () banked
  6066  0000F8  EE20 F00C          	lfsr	2,12
  6067  0000FC  0100               	movlb	0	; () banked
  6068  0000FE  51CD               	movf	_ic_ptr& (0+255),w,b
  6069  000100  26D9               	addwf	fsr2l,f,c
  6070  000102  0100               	movlb	0	; () banked
  6071  000104  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6072  000106  22DA               	addwfc	fsr2h,f,c
  6073  000108  0E05               	movlw	5
  6074  00010A  6EDF               	movwf	indf2,c
  6075                           
  6076                           ; BSR set to: 0
  6077                           ;my_i2c.c: 117: overrun_error = 1;
  6078  00010C  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6079  00010E  0E01               	movlw	1
  6080  000110  0100               	movlb	0	; () banked
  6081  000112  0100               	movlb	0	; () banked
  6082  000114  6F91               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6083  000116  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6084                           
  6085                           ; BSR set to: 0
  6086                           ;my_i2c.c: 118: ic_ptr->error_count++;
  6087  000118  0100               	movlb	0	; () banked
  6088  00011A  EE20 F00E          	lfsr	2,14
  6089  00011E  0100               	movlb	0	; () banked
  6090  000120  51CD               	movf	_ic_ptr& (0+255),w,b
  6091  000122  26D9               	addwf	fsr2l,f,c
  6092  000124  0100               	movlb	0	; () banked
  6093  000126  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6094  000128  22DA               	addwfc	fsr2h,f,c
  6095  00012A  2ADF               	incf	indf2,f,c
  6096                           
  6097                           ; BSR set to: 0
  6098                           ;my_i2c.c: 119: ic_ptr->error_code = 0x4;
  6099  00012C  0100               	movlb	0	; () banked
  6100  00012E  EE20 F00D          	lfsr	2,13
  6101  000132  0100               	movlb	0	; () banked
  6102  000134  51CD               	movf	_ic_ptr& (0+255),w,b
  6103  000136  26D9               	addwf	fsr2l,f,c
  6104  000138  0100               	movlb	0	; () banked
  6105  00013A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6106  00013C  22DA               	addwfc	fsr2h,f,c
  6107  00013E  0E04               	movlw	4
  6108  000140  6EDF               	movwf	indf2,c
  6109  000142                     i2l3053:
  6110                           
  6111                           ; BSR set to: 0
  6112                           ;my_i2c.c: 120: }
  6113                           ;my_i2c.c: 122: if (SSPSTATbits.BF == 1) {
  6114  000142  A0C7               	btfss	4039,0,c	;volatile
  6115  000144  D008               	goto	i2l3059
  6116                           
  6117                           ; BSR set to: 0
  6118                           ;my_i2c.c: 123: i2c_data = SSPBUF;
  6119  000146  CFC9 F092          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6120                           
  6121                           ; BSR set to: 0
  6122                           ;my_i2c.c: 124: data_read = 1;
  6123  00014A  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6124  00014C  0E01               	movlw	1
  6125  00014E  0100               	movlb	0	; () banked
  6126  000150  0100               	movlb	0	; () banked
  6127  000152  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  6128  000154  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6129  000156                     i2l3059:
  6130                           
  6131                           ; BSR set to: 0
  6132                           ;my_i2c.c: 125: }
  6133                           ;my_i2c.c: 130: if (!overrun_error) {
  6134  000156  0100               	movlb	0	; () banked
  6135  000158  0100               	movlb	0	; () banked
  6136  00015A  6791               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6137  00015C  D1B8               	goto	i2l121
  6138  00015E  D1A1               	goto	i2l3147
  6139  000160                     i2l123:
  6140                           
  6141                           ; BSR set to: 0
  6142                           ;my_i2c.c: 133: {
  6143                           ;my_i2c.c: 135: if (SSPSTATbits.S == 1) {
  6144  000160  A6C7               	btfss	4039,3,c	;volatile
  6145  000162  D1B5               	goto	i2l121
  6146                           
  6147                           ; BSR set to: 0
  6148                           ;my_i2c.c: 136: handle_start(data_read);
  6149  000164  0100               	movlb	0	; () banked
  6150  000166  0100               	movlb	0	; () banked
  6151  000168  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6152  00016A  EC4E  F007         	call	_handle_start
  6153                           
  6154                           ;my_i2c.c: 138: if (ic_ptr->status == 0x8) {
  6155  00016E  0100               	movlb	0	; () banked
  6156  000170  EE20 F00C          	lfsr	2,12
  6157  000174  0100               	movlb	0	; () banked
  6158  000176  51CD               	movf	_ic_ptr& (0+255),w,b
  6159  000178  26D9               	addwf	fsr2l,f,c
  6160  00017A  0100               	movlb	0	; () banked
  6161  00017C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6162  00017E  22DA               	addwfc	fsr2h,f,c
  6163  000180  0E08               	movlw	8
  6164  000182  62DF               	cpfseq	indf2,c
  6165  000184  D1A4               	goto	i2l121
  6166                           
  6167                           ; BSR set to: 0
  6168                           ;my_i2c.c: 139: data_read = 0;
  6169  000186  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6170  000188  0E00               	movlw	0
  6171  00018A  0100               	movlb	0	; () banked
  6172  00018C  0100               	movlb	0	; () banked
  6173  00018E  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  6174  000190  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6175                           
  6176                           ;my_i2c.c: 140: msg_to_send = 1;
  6177  000192  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6178  000194  0E01               	movlw	1
  6179  000196  0100               	movlb	0	; () banked
  6180  000198  0100               	movlb	0	; () banked
  6181  00019A  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6182  00019C  D175               	goto	L6
  6183  00019E                     i2l127:
  6184                           
  6185                           ; BSR set to: 0
  6186                           ;my_i2c.c: 146: {
  6187                           ;my_i2c.c: 148: if (SSPSTATbits.P == 1) {
  6188  00019E  A8C7               	btfss	4039,4,c	;volatile
  6189  0001A0  D02E               	goto	i2l3079
  6190                           
  6191                           ; BSR set to: 0
  6192                           ;my_i2c.c: 151: ic_ptr->event_count++;
  6193  0001A2  0100               	movlb	0	; () banked
  6194  0001A4  EE20 F00B          	lfsr	2,11
  6195  0001A8  0100               	movlb	0	; () banked
  6196  0001AA  51CD               	movf	_ic_ptr& (0+255),w,b
  6197  0001AC  26D9               	addwf	fsr2l,f,c
  6198  0001AE  0100               	movlb	0	; () banked
  6199  0001B0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6200  0001B2  22DA               	addwfc	fsr2h,f,c
  6201  0001B4  2ADF               	incf	indf2,f,c
  6202                           
  6203                           ; BSR set to: 0
  6204                           ;my_i2c.c: 152: if (data_read) {
  6205  0001B6  0100               	movlb	0	; () banked
  6206  0001B8  0100               	movlb	0	; () banked
  6207  0001BA  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6208  0001BC  B4D8               	btfsc	status,2,c
  6209  0001BE  D166               	goto	L8
  6210                           
  6211                           ; BSR set to: 0
  6212                           ;my_i2c.c: 153: if (SSPSTATbits.D_A == 0) {
  6213  0001C0  BAC7               	btfsc	4039,5,c	;volatile
  6214  0001C2  D007               	goto	i2l3077
  6215                           
  6216                           ; BSR set to: 0
  6217                           ;my_i2c.c: 154: msg_ready = 1;
  6218  0001C4  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6219  0001C6  0E01               	movlw	1
  6220  0001C8  0100               	movlb	0	; () banked
  6221  0001CA  0100               	movlb	0	; () banked
  6222  0001CC  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6223  0001CE  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6224                           
  6225                           ;my_i2c.c: 155: } else {
  6226  0001D0  D15D               	goto	L8
  6227  0001D2                     i2l3077:
  6228                           
  6229                           ; BSR set to: 0
  6230                           ;my_i2c.c: 156: ic_ptr->error_count++;
  6231  0001D2  0100               	movlb	0	; () banked
  6232  0001D4  EE20 F00E          	lfsr	2,14
  6233  0001D8  0100               	movlb	0	; () banked
  6234  0001DA  51CD               	movf	_ic_ptr& (0+255),w,b
  6235  0001DC  26D9               	addwf	fsr2l,f,c
  6236  0001DE  0100               	movlb	0	; () banked
  6237  0001E0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6238  0001E2  22DA               	addwfc	fsr2h,f,c
  6239  0001E4  2ADF               	incf	indf2,f,c
  6240                           
  6241                           ;my_i2c.c: 157: ic_ptr->error_code = 0x6;
  6242  0001E6  0100               	movlb	0	; () banked
  6243  0001E8  EE20 F00D          	lfsr	2,13
  6244  0001EC  0100               	movlb	0	; () banked
  6245  0001EE  51CD               	movf	_ic_ptr& (0+255),w,b
  6246  0001F0  26D9               	addwf	fsr2l,f,c
  6247  0001F2  0100               	movlb	0	; () banked
  6248  0001F4  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6249  0001F6  22DA               	addwfc	fsr2h,f,c
  6250  0001F8  0E06               	movlw	6
  6251  0001FA  6EDF               	movwf	indf2,c
  6252                           
  6253                           ; BSR set to: 0
  6254  0001FC  D147               	goto	L8
  6255  0001FE                     i2l3079:
  6256                           
  6257                           ; BSR set to: 0
  6258  0001FE  0100               	movlb	0	; () banked
  6259  000200  0100               	movlb	0	; () banked
  6260  000202  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6261  000204  B4D8               	btfsc	status,2,c
  6262  000206  D163               	goto	i2l121
  6263                           
  6264                           ; BSR set to: 0
  6265                           ;my_i2c.c: 162: ic_ptr->event_count++;
  6266  000208  0100               	movlb	0	; () banked
  6267  00020A  EE20 F00B          	lfsr	2,11
  6268  00020E  0100               	movlb	0	; () banked
  6269  000210  51CD               	movf	_ic_ptr& (0+255),w,b
  6270  000212  26D9               	addwf	fsr2l,f,c
  6271  000214  0100               	movlb	0	; () banked
  6272  000216  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6273  000218  22DA               	addwfc	fsr2h,f,c
  6274  00021A  2ADF               	incf	indf2,f,c
  6275                           
  6276                           ; BSR set to: 0
  6277                           ;my_i2c.c: 163: if (SSPSTATbits.D_A == 0) {
  6278  00021C  BAC7               	btfsc	4039,5,c	;volatile
  6279  00021E  D019               	goto	i2l3095
  6280                           
  6281                           ; BSR set to: 0
  6282                           ;my_i2c.c: 164: if (SSPSTATbits.R_W == 0) {
  6283  000220  B4C7               	btfsc	4039,2,c	;volatile
  6284  000222  D00B               	goto	i2l3089
  6285                           
  6286                           ; BSR set to: 0
  6287                           ;my_i2c.c: 165: ic_ptr->status = 0x7;
  6288  000224  0100               	movlb	0	; () banked
  6289  000226  EE20 F00C          	lfsr	2,12
  6290  00022A  0100               	movlb	0	; () banked
  6291  00022C  51CD               	movf	_ic_ptr& (0+255),w,b
  6292  00022E  26D9               	addwf	fsr2l,f,c
  6293  000230  0100               	movlb	0	; () banked
  6294  000232  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6295  000234  22DA               	addwfc	fsr2h,f,c
  6296  000236  0E07               	movlw	7
  6297  000238  D071               	goto	L5
  6298  00023A                     i2l3089:
  6299                           
  6300                           ; BSR set to: 0
  6301                           ;my_i2c.c: 167: ic_ptr->status = 0x8;
  6302  00023A  0100               	movlb	0	; () banked
  6303  00023C  EE20 F00C          	lfsr	2,12
  6304  000240  0100               	movlb	0	; () banked
  6305  000242  51CD               	movf	_ic_ptr& (0+255),w,b
  6306  000244  26D9               	addwf	fsr2l,f,c
  6307  000246  0100               	movlb	0	; () banked
  6308  000248  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6309  00024A  22DA               	addwfc	fsr2h,f,c
  6310  00024C  0E08               	movlw	8
  6311  00024E  6EDF               	movwf	indf2,c
  6312  000250  D110               	goto	L9
  6313  000252                     i2l3095:
  6314                           
  6315                           ; BSR set to: 0
  6316                           ;my_i2c.c: 173: ic_ptr->error_count++;
  6317  000252  0100               	movlb	0	; () banked
  6318  000254  EE20 F00E          	lfsr	2,14
  6319  000258  0100               	movlb	0	; () banked
  6320  00025A  51CD               	movf	_ic_ptr& (0+255),w,b
  6321  00025C  26D9               	addwf	fsr2l,f,c
  6322  00025E  0100               	movlb	0	; () banked
  6323  000260  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6324  000262  22DA               	addwfc	fsr2h,f,c
  6325  000264  2ADF               	incf	indf2,f,c
  6326                           
  6327                           ;my_i2c.c: 174: ic_ptr->status = 0x5;
  6328  000266  0100               	movlb	0	; () banked
  6329  000268  EE20 F00C          	lfsr	2,12
  6330  00026C  0100               	movlb	0	; () banked
  6331  00026E  51CD               	movf	_ic_ptr& (0+255),w,b
  6332  000270  26D9               	addwf	fsr2l,f,c
  6333  000272  0100               	movlb	0	; () banked
  6334  000274  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6335  000276  22DA               	addwfc	fsr2h,f,c
  6336  000278  0E05               	movlw	5
  6337  00027A  6EDF               	movwf	indf2,c
  6338                           
  6339                           ;my_i2c.c: 175: ic_ptr->error_code = 0x6;
  6340  00027C  0100               	movlb	0	; () banked
  6341  00027E  EE20 F00D          	lfsr	2,13
  6342  000282  0100               	movlb	0	; () banked
  6343  000284  51CD               	movf	_ic_ptr& (0+255),w,b
  6344  000286  26D9               	addwf	fsr2l,f,c
  6345  000288  0100               	movlb	0	; () banked
  6346  00028A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6347  00028C  22DA               	addwfc	fsr2h,f,c
  6348  00028E  0E06               	movlw	6
  6349  000290  D045               	goto	L5
  6350  000292                     i2l3097:
  6351                           
  6352                           ; BSR set to: 0
  6353                           ;my_i2c.c: 181: {
  6354                           ;my_i2c.c: 182: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6355  000292  0100               	movlb	0	; () banked
  6356  000294  EE20 F01A          	lfsr	2,26
  6357  000298  0100               	movlb	0	; () banked
  6358  00029A  51CD               	movf	_ic_ptr& (0+255),w,b
  6359  00029C  26D9               	addwf	fsr2l,f,c
  6360  00029E  0100               	movlb	0	; () banked
  6361  0002A0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6362  0002A2  22DA               	addwfc	fsr2h,f,c
  6363  0002A4  50DF               	movf	indf2,w,c
  6364  0002A6  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6365  0002A8  0100               	movlb	0	; () banked
  6366  0002AA  EE20 F019          	lfsr	2,25
  6367  0002AE  0100               	movlb	0	; () banked
  6368  0002B0  51CD               	movf	_ic_ptr& (0+255),w,b
  6369  0002B2  26D9               	addwf	fsr2l,f,c
  6370  0002B4  0100               	movlb	0	; () banked
  6371  0002B6  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6372  0002B8  22DA               	addwfc	fsr2h,f,c
  6373  0002BA  50DF               	movf	indf2,w,c
  6374  0002BC  5C47               	subwf	??_i2c_int_handler,w,c
  6375  0002BE  B0D8               	btfsc	status,0,c
  6376  0002C0  D0E5               	goto	L8
  6377                           
  6378                           ; BSR set to: 0
  6379                           ;my_i2c.c: 183: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6380  0002C2  0100               	movlb	0	; () banked
  6381  0002C4  EE20 F01A          	lfsr	2,26
  6382  0002C8  0100               	movlb	0	; () banked
  6383  0002CA  51CD               	movf	_ic_ptr& (0+255),w,b
  6384  0002CC  26D9               	addwf	fsr2l,f,c
  6385  0002CE  0100               	movlb	0	; () banked
  6386  0002D0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6387  0002D2  22DA               	addwfc	fsr2h,f,c
  6388  0002D4  50DF               	movf	indf2,w,c
  6389  0002D6  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6390  0002D8  5047               	movf	??_i2c_int_handler,w,c
  6391  0002DA  0D01               	mullw	1
  6392  0002DC  0E0F               	movlw	15
  6393  0002DE  26F3               	addwf	prodl,f,c
  6394  0002E0  0E00               	movlw	0
  6395  0002E2  22F4               	addwfc	prodh,f,c
  6396  0002E4  50F3               	movf	prodl,w,c
  6397  0002E6  0100               	movlb	0	; () banked
  6398  0002E8  0100               	movlb	0	; () banked
  6399  0002EA  25CD               	addwf	_ic_ptr& (0+255),w,b
  6400  0002EC  6ED9               	movwf	fsr2l,c
  6401  0002EE  50F4               	movf	prodh,w,c
  6402  0002F0  0100               	movlb	0	; () banked
  6403  0002F2  0100               	movlb	0	; () banked
  6404  0002F4  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6405  0002F6  6EDA               	movwf	fsr2h,c
  6406  0002F8  50DF               	movf	indf2,w,c
  6407  0002FA  6EC9               	movwf	4041,c	;volatile
  6408                           
  6409                           ; BSR set to: 0
  6410                           ;my_i2c.c: 184: ic_ptr->outbufind++;
  6411  0002FC  0100               	movlb	0	; () banked
  6412  0002FE  EE20 F01A          	lfsr	2,26
  6413  000302  0100               	movlb	0	; () banked
  6414  000304  51CD               	movf	_ic_ptr& (0+255),w,b
  6415  000306  26D9               	addwf	fsr2l,f,c
  6416  000308  0100               	movlb	0	; () banked
  6417  00030A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6418  00030C  22DA               	addwfc	fsr2h,f,c
  6419  00030E  2ADF               	incf	indf2,f,c
  6420                           
  6421                           ; BSR set to: 0
  6422                           ;my_i2c.c: 185: data_written = 1;
  6423  000310  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6424  000312  0E01               	movlw	1
  6425  000314  0100               	movlb	0	; () banked
  6426  000316  0100               	movlb	0	; () banked
  6427  000318  6F90               	movwf	i2c_int_handler@data_written& (0+255),b
  6428  00031A  D0B6               	goto	L6
  6429  00031C                     L5:
  6430  00031C  6EDF               	movwf	indf2,c
  6431  00031E  D0D7               	goto	i2l121
  6432  000320                     i2l141:
  6433                           
  6434                           ; BSR set to: 0
  6435                           ;my_i2c.c: 193: {
  6436                           ;my_i2c.c: 195: if (SSPSTATbits.P == 1) {
  6437  000320  A8C7               	btfss	4039,4,c	;volatile
  6438  000322  D05E               	goto	i2l3125
  6439                           
  6440                           ; BSR set to: 0
  6441                           ;my_i2c.c: 197: ic_ptr->event_count++;
  6442  000324  0100               	movlb	0	; () banked
  6443  000326  EE20 F00B          	lfsr	2,11
  6444  00032A  0100               	movlb	0	; () banked
  6445  00032C  51CD               	movf	_ic_ptr& (0+255),w,b
  6446  00032E  26D9               	addwf	fsr2l,f,c
  6447  000330  0100               	movlb	0	; () banked
  6448  000332  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6449  000334  22DA               	addwfc	fsr2h,f,c
  6450  000336  2ADF               	incf	indf2,f,c
  6451                           
  6452                           ; BSR set to: 0
  6453                           ;my_i2c.c: 198: if (data_read) {
  6454  000338  0100               	movlb	0	; () banked
  6455  00033A  0100               	movlb	0	; () banked
  6456  00033C  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6457  00033E  B4D8               	btfsc	status,2,c
  6458  000340  D048               	goto	i2l3121
  6459                           
  6460                           ; BSR set to: 0
  6461                           ;my_i2c.c: 199: if (SSPSTATbits.D_A == 1) {
  6462  000342  AAC7               	btfss	4039,5,c	;volatile
  6463  000344  D025               	goto	i2l3119
  6464                           
  6465                           ; BSR set to: 0
  6466                           ;my_i2c.c: 200: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6467  000346  0100               	movlb	0	; () banked
  6468  000348  EE20 F00A          	lfsr	2,10
  6469  00034C  0100               	movlb	0	; () banked
  6470  00034E  51CD               	movf	_ic_ptr& (0+255),w,b
  6471  000350  26D9               	addwf	fsr2l,f,c
  6472  000352  0100               	movlb	0	; () banked
  6473  000354  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6474  000356  22DA               	addwfc	fsr2h,f,c
  6475  000358  50DF               	movf	indf2,w,c
  6476  00035A  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6477  00035C  5047               	movf	??_i2c_int_handler,w,c
  6478  00035E  0D01               	mullw	1
  6479  000360  50F3               	movf	prodl,w,c
  6480  000362  0100               	movlb	0	; () banked
  6481  000364  0100               	movlb	0	; () banked
  6482  000366  25CD               	addwf	_ic_ptr& (0+255),w,b
  6483  000368  6ED9               	movwf	fsr2l,c
  6484  00036A  50F4               	movf	prodh,w,c
  6485  00036C  0100               	movlb	0	; () banked
  6486  00036E  0100               	movlb	0	; () banked
  6487  000370  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6488  000372  6EDA               	movwf	fsr2h,c
  6489  000374  0100               	movlb	0	; () banked
  6490  000376  C092  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6491                           
  6492                           ; BSR set to: 0
  6493                           ;my_i2c.c: 201: ic_ptr->buflen++;
  6494  00037A  0100               	movlb	0	; () banked
  6495  00037C  EE20 F00A          	lfsr	2,10
  6496  000380  0100               	movlb	0	; () banked
  6497  000382  51CD               	movf	_ic_ptr& (0+255),w,b
  6498  000384  26D9               	addwf	fsr2l,f,c
  6499  000386  0100               	movlb	0	; () banked
  6500  000388  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6501  00038A  22DA               	addwfc	fsr2h,f,c
  6502  00038C  2ADF               	incf	indf2,f,c
  6503  00038E  D021               	goto	i2l3121
  6504  000390                     i2l3119:
  6505                           
  6506                           ; BSR set to: 0
  6507                           ;my_i2c.c: 204: ic_ptr->error_count++;
  6508  000390  0100               	movlb	0	; () banked
  6509  000392  EE20 F00E          	lfsr	2,14
  6510  000396  0100               	movlb	0	; () banked
  6511  000398  51CD               	movf	_ic_ptr& (0+255),w,b
  6512  00039A  26D9               	addwf	fsr2l,f,c
  6513  00039C  0100               	movlb	0	; () banked
  6514  00039E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6515  0003A0  22DA               	addwfc	fsr2h,f,c
  6516  0003A2  2ADF               	incf	indf2,f,c
  6517                           
  6518                           ;my_i2c.c: 205: ic_ptr->error_code = 0x6;
  6519  0003A4  0100               	movlb	0	; () banked
  6520  0003A6  EE20 F00D          	lfsr	2,13
  6521  0003AA  0100               	movlb	0	; () banked
  6522  0003AC  51CD               	movf	_ic_ptr& (0+255),w,b
  6523  0003AE  26D9               	addwf	fsr2l,f,c
  6524  0003B0  0100               	movlb	0	; () banked
  6525  0003B2  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6526  0003B4  22DA               	addwfc	fsr2h,f,c
  6527  0003B6  0E06               	movlw	6
  6528  0003B8  6EDF               	movwf	indf2,c
  6529                           
  6530                           ;my_i2c.c: 206: ic_ptr->status = 0x5;
  6531  0003BA  0100               	movlb	0	; () banked
  6532  0003BC  EE20 F00C          	lfsr	2,12
  6533  0003C0  0100               	movlb	0	; () banked
  6534  0003C2  51CD               	movf	_ic_ptr& (0+255),w,b
  6535  0003C4  26D9               	addwf	fsr2l,f,c
  6536  0003C6  0100               	movlb	0	; () banked
  6537  0003C8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6538  0003CA  22DA               	addwfc	fsr2h,f,c
  6539  0003CC  0E05               	movlw	5
  6540  0003CE  6EDF               	movwf	indf2,c
  6541  0003D0  D05D               	goto	L8
  6542  0003D2                     i2l3121:
  6543                           
  6544                           ; BSR set to: 0
  6545                           ;my_i2c.c: 209: msg_ready = 1;
  6546  0003D2  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6547  0003D4  0E01               	movlw	1
  6548  0003D6  0100               	movlb	0	; () banked
  6549  0003D8  0100               	movlb	0	; () banked
  6550  0003DA  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6551  0003DC  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6552                           
  6553                           ; BSR set to: 0
  6554  0003DE  D056               	goto	L8
  6555  0003E0                     i2l3125:
  6556                           
  6557                           ; BSR set to: 0
  6558  0003E0  0100               	movlb	0	; () banked
  6559  0003E2  0100               	movlb	0	; () banked
  6560  0003E4  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6561  0003E6  B4D8               	btfsc	status,2,c
  6562  0003E8  D072               	goto	i2l121
  6563                           
  6564                           ; BSR set to: 0
  6565                           ;my_i2c.c: 213: ic_ptr->event_count++;
  6566  0003EA  0100               	movlb	0	; () banked
  6567  0003EC  EE20 F00B          	lfsr	2,11
  6568  0003F0  0100               	movlb	0	; () banked
  6569  0003F2  51CD               	movf	_ic_ptr& (0+255),w,b
  6570  0003F4  26D9               	addwf	fsr2l,f,c
  6571  0003F6  0100               	movlb	0	; () banked
  6572  0003F8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6573  0003FA  22DA               	addwfc	fsr2h,f,c
  6574  0003FC  2ADF               	incf	indf2,f,c
  6575                           
  6576                           ; BSR set to: 0
  6577                           ;my_i2c.c: 214: if (SSPSTATbits.D_A == 1) {
  6578  0003FE  AAC7               	btfss	4039,5,c	;volatile
  6579  000400  D025               	goto	i2l149
  6580                           
  6581                           ; BSR set to: 0
  6582                           ;my_i2c.c: 215: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6583  000402  0100               	movlb	0	; () banked
  6584  000404  EE20 F00A          	lfsr	2,10
  6585  000408  0100               	movlb	0	; () banked
  6586  00040A  51CD               	movf	_ic_ptr& (0+255),w,b
  6587  00040C  26D9               	addwf	fsr2l,f,c
  6588  00040E  0100               	movlb	0	; () banked
  6589  000410  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6590  000412  22DA               	addwfc	fsr2h,f,c
  6591  000414  50DF               	movf	indf2,w,c
  6592  000416  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6593  000418  5047               	movf	??_i2c_int_handler,w,c
  6594  00041A  0D01               	mullw	1
  6595  00041C  50F3               	movf	prodl,w,c
  6596  00041E  0100               	movlb	0	; () banked
  6597  000420  0100               	movlb	0	; () banked
  6598  000422  25CD               	addwf	_ic_ptr& (0+255),w,b
  6599  000424  6ED9               	movwf	fsr2l,c
  6600  000426  50F4               	movf	prodh,w,c
  6601  000428  0100               	movlb	0	; () banked
  6602  00042A  0100               	movlb	0	; () banked
  6603  00042C  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6604  00042E  6EDA               	movwf	fsr2h,c
  6605  000430  0100               	movlb	0	; () banked
  6606  000432  C092  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6607                           
  6608                           ; BSR set to: 0
  6609                           ;my_i2c.c: 216: ic_ptr->buflen++;
  6610  000436  0100               	movlb	0	; () banked
  6611  000438  EE20 F00A          	lfsr	2,10
  6612  00043C  0100               	movlb	0	; () banked
  6613  00043E  51CD               	movf	_ic_ptr& (0+255),w,b
  6614  000440  26D9               	addwf	fsr2l,f,c
  6615  000442  0100               	movlb	0	; () banked
  6616  000444  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6617  000446  22DA               	addwfc	fsr2h,f,c
  6618  000448  2ADF               	incf	indf2,f,c
  6619                           
  6620                           ;my_i2c.c: 217: } else {
  6621  00044A  D041               	goto	i2l121
  6622  00044C                     i2l149:
  6623                           
  6624                           ; BSR set to: 0
  6625                           ;my_i2c.c: 218: if (SSPSTATbits.R_W == 1) {
  6626  00044C  A4C7               	btfss	4039,2,c	;volatile
  6627  00044E  D6C1               	goto	i2l3077
  6628                           
  6629                           ; BSR set to: 0
  6630                           ;my_i2c.c: 219: ic_ptr->status = 0x8;
  6631  000450  0100               	movlb	0	; () banked
  6632  000452  EE20 F00C          	lfsr	2,12
  6633  000456  0100               	movlb	0	; () banked
  6634  000458  51CD               	movf	_ic_ptr& (0+255),w,b
  6635  00045A  26D9               	addwf	fsr2l,f,c
  6636  00045C  0100               	movlb	0	; () banked
  6637  00045E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6638  000460  22DA               	addwfc	fsr2h,f,c
  6639  000462  0E08               	movlw	8
  6640  000464  6EDF               	movwf	indf2,c
  6641                           
  6642                           ; BSR set to: 0
  6643                           ;my_i2c.c: 220: msg_ready = 1;
  6644  000466  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6645  000468  0E01               	movlw	1
  6646  00046A  0100               	movlb	0	; () banked
  6647  00046C  0100               	movlb	0	; () banked
  6648  00046E  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6649  000470  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6650  000472                     L9:
  6651                           
  6652                           ; BSR set to: 0
  6653                           ;my_i2c.c: 221: msg_to_send = 1;
  6654  000472  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6655  000474  0E01               	movlw	1
  6656  000476  0100               	movlb	0	; () banked
  6657  000478  0100               	movlb	0	; () banked
  6658  00047A  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6659  00047C  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6660                           
  6661                           ; BSR set to: 0
  6662                           ;my_i2c.c: 223: data_read = 0;
  6663  00047E  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6664  000480  0E00               	movlw	0
  6665  000482  0100               	movlb	0	; () banked
  6666  000484  0100               	movlb	0	; () banked
  6667  000486  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  6668  000488                     L6:
  6669  000488  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6670                           
  6671                           ;my_i2c.c: 224: } else {
  6672  00048A  D021               	goto	i2l121
  6673  00048C                     L8:
  6674                           
  6675                           ;my_i2c.c: 227: ic_ptr->status = 0x5;
  6676  00048C  0100               	movlb	0	; () banked
  6677  00048E  EE20 F00C          	lfsr	2,12
  6678  000492  0100               	movlb	0	; () banked
  6679  000494  51CD               	movf	_ic_ptr& (0+255),w,b
  6680  000496  26D9               	addwf	fsr2l,f,c
  6681  000498  0100               	movlb	0	; () banked
  6682  00049A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6683  00049C  22DA               	addwfc	fsr2h,f,c
  6684  00049E  0E05               	movlw	5
  6685  0004A0  D73D               	goto	L5
  6686  0004A2                     i2l3147:
  6687                           
  6688                           ; BSR set to: 0
  6689  0004A2  0100               	movlb	0	; () banked
  6690  0004A4  EE20 F00C          	lfsr	2,12
  6691  0004A8  0100               	movlb	0	; () banked
  6692  0004AA  51CD               	movf	_ic_ptr& (0+255),w,b
  6693  0004AC  26D9               	addwf	fsr2l,f,c
  6694  0004AE  0100               	movlb	0	; () banked
  6695  0004B0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6696  0004B2  22DA               	addwfc	fsr2h,f,c
  6697  0004B4  50DF               	movf	indf2,w,c
  6698                           
  6699                           ; Switch size 1, requested type "space"
  6700                           ; Number of cases is 4, Range of values is 5 to 8
  6701                           ; switch strategies available:
  6702                           ; Name         Instructions Cycles
  6703                           ; simple_byte           13     7 (average)
  6704                           ;	Chosen strategy is simple_byte
  6705  0004B6  0A05               	xorlw	5	; case 5
  6706  0004B8  B4D8               	btfsc	status,2,c
  6707  0004BA  D652               	goto	i2l123
  6708  0004BC  0A03               	xorlw	3	; case 6
  6709  0004BE  B4D8               	btfsc	status,2,c
  6710  0004C0  D66E               	goto	i2l127
  6711  0004C2  0A01               	xorlw	1	; case 7
  6712  0004C4  B4D8               	btfsc	status,2,c
  6713  0004C6  D72C               	goto	i2l141
  6714  0004C8  0A0F               	xorlw	15	; case 8
  6715  0004CA  B4D8               	btfsc	status,2,c
  6716  0004CC  D6E2               	goto	i2l3097
  6717  0004CE                     i2l121:
  6718                           
  6719                           ; BSR set to: 0
  6720                           ;my_i2c.c: 234: }
  6721                           ;my_i2c.c: 237: if (data_read || data_written) {
  6722  0004CE  0100               	movlb	0	; () banked
  6723  0004D0  0100               	movlb	0	; () banked
  6724  0004D2  6795               	tstfsz	i2c_int_handler@data_read& (0+255),b
  6725  0004D4  D005               	goto	i2l155
  6726                           
  6727                           ; BSR set to: 0
  6728  0004D6  0100               	movlb	0	; () banked
  6729  0004D8  0100               	movlb	0	; () banked
  6730  0004DA  5190               	movf	i2c_int_handler@data_written& (0+255),w,b
  6731  0004DC  B4D8               	btfsc	status,2,c
  6732  0004DE  D002               	goto	i2l3153
  6733  0004E0                     i2l155:
  6734                           
  6735                           ; BSR set to: 0
  6736                           ;my_i2c.c: 239: if (SSPCON1bits.CKP == 0) {
  6737  0004E0  A8C6               	btfss	4038,4,c	;volatile
  6738                           
  6739                           ; BSR set to: 0
  6740                           ;my_i2c.c: 240: SSPCON1bits.CKP = 1;
  6741  0004E2  88C6               	bsf	4038,4,c	;volatile
  6742  0004E4                     i2l3153:
  6743                           
  6744                           ; BSR set to: 0
  6745                           ;my_i2c.c: 241: }
  6746                           ;my_i2c.c: 242: }
  6747                           ;my_i2c.c: 245: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  6748  0004E4  0100               	movlb	0	; () banked
  6749  0004E6  EE20 F00A          	lfsr	2,10
  6750  0004EA  0100               	movlb	0	; () banked
  6751  0004EC  51CD               	movf	_ic_ptr& (0+255),w,b
  6752  0004EE  26D9               	addwf	fsr2l,f,c
  6753  0004F0  0100               	movlb	0	; () banked
  6754  0004F2  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6755  0004F4  22DA               	addwfc	fsr2h,f,c
  6756  0004F6  0E08               	movlw	8
  6757  0004F8  64DF               	cpfsgt	indf2,c
  6758  0004FA  D024               	goto	i2l3159
  6759                           
  6760                           ; BSR set to: 0
  6761  0004FC  0100               	movlb	0	; () banked
  6762  0004FE  0100               	movlb	0	; () banked
  6763  000500  6794               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  6764  000502  D020               	goto	i2l3159
  6765                           
  6766                           ; BSR set to: 0
  6767                           ;my_i2c.c: 246: ic_ptr->status = 0x5;
  6768  000504  0100               	movlb	0	; () banked
  6769  000506  EE20 F00C          	lfsr	2,12
  6770  00050A  0100               	movlb	0	; () banked
  6771  00050C  51CD               	movf	_ic_ptr& (0+255),w,b
  6772  00050E  26D9               	addwf	fsr2l,f,c
  6773  000510  0100               	movlb	0	; () banked
  6774  000512  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6775  000514  22DA               	addwfc	fsr2h,f,c
  6776  000516  0E05               	movlw	5
  6777  000518  6EDF               	movwf	indf2,c
  6778                           
  6779                           ;my_i2c.c: 247: ic_ptr->error_count++;
  6780  00051A  0100               	movlb	0	; () banked
  6781  00051C  EE20 F00E          	lfsr	2,14
  6782  000520  0100               	movlb	0	; () banked
  6783  000522  51CD               	movf	_ic_ptr& (0+255),w,b
  6784  000524  26D9               	addwf	fsr2l,f,c
  6785  000526  0100               	movlb	0	; () banked
  6786  000528  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6787  00052A  22DA               	addwfc	fsr2h,f,c
  6788  00052C  2ADF               	incf	indf2,f,c
  6789                           
  6790                           ;my_i2c.c: 248: ic_ptr->error_code = 0x7;
  6791  00052E  0100               	movlb	0	; () banked
  6792  000530  EE20 F00D          	lfsr	2,13
  6793  000534  0100               	movlb	0	; () banked
  6794  000536  51CD               	movf	_ic_ptr& (0+255),w,b
  6795  000538  26D9               	addwf	fsr2l,f,c
  6796  00053A  0100               	movlb	0	; () banked
  6797  00053C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6798  00053E  22DA               	addwfc	fsr2h,f,c
  6799  000540  0E07               	movlw	7
  6800  000542  6EDF               	movwf	indf2,c
  6801  000544                     i2l3159:
  6802                           
  6803                           ; BSR set to: 0
  6804                           ;my_i2c.c: 249: }
  6805                           ;my_i2c.c: 251: if (msg_ready) {
  6806  000544  0100               	movlb	0	; () banked
  6807  000546  0100               	movlb	0	; () banked
  6808  000548  5194               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  6809  00054A  B4D8               	btfsc	status,2,c
  6810  00054C  D03E               	goto	i2l3167
  6811                           
  6812                           ; BSR set to: 0
  6813                           ;my_i2c.c: 252: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  6814  00054E  0100               	movlb	0	; () banked
  6815  000550  EE20 F00B          	lfsr	2,11
  6816  000554  0100               	movlb	0	; () banked
  6817  000556  51CD               	movf	_ic_ptr& (0+255),w,b
  6818  000558  26D9               	addwf	fsr2l,f,c
  6819  00055A  0100               	movlb	0	; () banked
  6820  00055C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6821  00055E  22DA               	addwfc	fsr2h,f,c
  6822  000560  0100               	movlb	0	; () banked
  6823  000562  EE10 F00A          	lfsr	1,10
  6824  000566  0100               	movlb	0	; () banked
  6825  000568  51CD               	movf	_ic_ptr& (0+255),w,b
  6826  00056A  26E1               	addwf	fsr1l,f,c
  6827  00056C  0100               	movlb	0	; () banked
  6828  00056E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6829  000570  22E2               	addwfc	fsr1h,f,c
  6830  000572  50E7               	movf	indf1,w,c
  6831  000574  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6832  000576  5047               	movf	??_i2c_int_handler,w,c
  6833  000578  0D01               	mullw	1
  6834  00057A  50F3               	movf	prodl,w,c
  6835  00057C  0100               	movlb	0	; () banked
  6836  00057E  0100               	movlb	0	; () banked
  6837  000580  25CD               	addwf	_ic_ptr& (0+255),w,b
  6838  000582  6EE1               	movwf	fsr1l,c
  6839  000584  50F4               	movf	prodh,w,c
  6840  000586  0100               	movlb	0	; () banked
  6841  000588  0100               	movlb	0	; () banked
  6842  00058A  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6843  00058C  6EE2               	movwf	fsr1h,c
  6844  00058E  CFDF FFE7          	movff	indf2,indf1
  6845                           
  6846                           ; BSR set to: 0
  6847                           ;my_i2c.c: 253: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  6848  000592  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6849  000594  0E28               	movlw	40
  6850  000596  6E43               	movwf	ToMainHigh_sendmsg@msgtype,c
  6851  000598  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6852  00059A  0100               	movlb	0	; () banked
  6853  00059C  C0CE  F045         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  6854  0005A0  0100               	movlb	0	; () banked
  6855  0005A2  C0CD  F044         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  6856  0005A6  0100               	movlb	0	; () banked
  6857  0005A8  EE20 F00A          	lfsr	2,10
  6858  0005AC  0100               	movlb	0	; () banked
  6859  0005AE  51CD               	movf	_ic_ptr& (0+255),w,b
  6860  0005B0  26D9               	addwf	fsr2l,f,c
  6861  0005B2  0100               	movlb	0	; () banked
  6862  0005B4  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6863  0005B6  22DA               	addwfc	fsr2h,f,c
  6864  0005B8  50DF               	movf	indf2,w,c
  6865  0005BA  6E48               	movwf	(??_i2c_int_handler+1)& (0+255),c
  6866  0005BC  2848               	incf	??_i2c_int_handler+1,w,c
  6867  0005BE  EC22  F00D         	call	_ToMainHigh_sendmsg
  6868                           
  6869                           ;my_i2c.c: 254: ic_ptr->buflen = 0;
  6870  0005C2  0100               	movlb	0	; () banked
  6871  0005C4  EE20 F00A          	lfsr	2,10
  6872  0005C8  D043               	goto	L7
  6873  0005CA                     i2l3167:
  6874                           
  6875                           ; BSR set to: 0
  6876  0005CA  0100               	movlb	0	; () banked
  6877  0005CC  EE20 F00E          	lfsr	2,14
  6878  0005D0  0100               	movlb	0	; () banked
  6879  0005D2  51CD               	movf	_ic_ptr& (0+255),w,b
  6880  0005D4  26D9               	addwf	fsr2l,f,c
  6881  0005D6  0100               	movlb	0	; () banked
  6882  0005D8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6883  0005DA  22DA               	addwfc	fsr2h,f,c
  6884  0005DC  50DF               	movf	indf2,w,c
  6885  0005DE  B4D8               	btfsc	status,2,c
  6886  0005E0  D03F               	goto	i2l3175
  6887                           
  6888                           ; BSR set to: 0
  6889                           ;my_i2c.c: 256: error_buf[0] = ic_ptr->error_count;
  6890  0005E2  0100               	movlb	0	; () banked
  6891  0005E4  EE20 F00E          	lfsr	2,14
  6892  0005E8  0100               	movlb	0	; () banked
  6893  0005EA  51CD               	movf	_ic_ptr& (0+255),w,b
  6894  0005EC  26D9               	addwf	fsr2l,f,c
  6895  0005EE  0100               	movlb	0	; () banked
  6896  0005F0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6897  0005F2  22DA               	addwfc	fsr2h,f,c
  6898  0005F4  50DF               	movf	indf2,w,c
  6899  0005F6  0100               	movlb	0	; () banked
  6900  0005F8  0100               	movlb	0	; () banked
  6901  0005FA  6F8D               	movwf	i2c_int_handler@error_buf& (0+255),b
  6902                           
  6903                           ;my_i2c.c: 257: error_buf[1] = ic_ptr->error_code;
  6904  0005FC  0100               	movlb	0	; () banked
  6905  0005FE  EE20 F00D          	lfsr	2,13
  6906  000602  0100               	movlb	0	; () banked
  6907  000604  51CD               	movf	_ic_ptr& (0+255),w,b
  6908  000606  26D9               	addwf	fsr2l,f,c
  6909  000608  0100               	movlb	0	; () banked
  6910  00060A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6911  00060C  22DA               	addwfc	fsr2h,f,c
  6912  00060E  50DF               	movf	indf2,w,c
  6913  000610  0100               	movlb	0	; () banked
  6914  000612  0100               	movlb	0	; () banked
  6915  000614  6F8E               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  6916                           
  6917                           ;my_i2c.c: 258: error_buf[2] = ic_ptr->event_count;
  6918  000616  0100               	movlb	0	; () banked
  6919  000618  EE20 F00B          	lfsr	2,11
  6920  00061C  0100               	movlb	0	; () banked
  6921  00061E  51CD               	movf	_ic_ptr& (0+255),w,b
  6922  000620  26D9               	addwf	fsr2l,f,c
  6923  000622  0100               	movlb	0	; () banked
  6924  000624  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6925  000626  22DA               	addwfc	fsr2h,f,c
  6926  000628  50DF               	movf	indf2,w,c
  6927  00062A  0100               	movlb	0	; () banked
  6928  00062C  0100               	movlb	0	; () banked
  6929  00062E  6F8F               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  6930                           
  6931                           ; BSR set to: 0
  6932                           ;my_i2c.c: 259: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  6933  000630  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6934  000632  0E29               	movlw	41
  6935  000634  6E43               	movwf	ToMainHigh_sendmsg@msgtype,c
  6936  000636  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6937  000638  0100               	movlb	0	; () banked
  6938  00063A  0E00               	movlw	high i2c_int_handler@error_buf
  6939  00063C  6E45               	movwf	ToMainHigh_sendmsg@data+1,c
  6940  00063E  0100               	movlb	0	; () banked
  6941  000640  0E8D               	movlw	low i2c_int_handler@error_buf
  6942  000642  6E44               	movwf	ToMainHigh_sendmsg@data,c
  6943  000644  0E03               	movlw	3
  6944  000646  EC22  F00D         	call	_ToMainHigh_sendmsg
  6945                           
  6946                           ;my_i2c.c: 260: ic_ptr->error_count = 0;
  6947  00064A  0100               	movlb	0	; () banked
  6948  00064C  EE20 F00E          	lfsr	2,14
  6949  000650                     L7:
  6950  000650  0100               	movlb	0	; () banked
  6951  000652  51CD               	movf	_ic_ptr& (0+255),w,b
  6952  000654  26D9               	addwf	fsr2l,f,c
  6953  000656  0100               	movlb	0	; () banked
  6954  000658  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6955  00065A  22DA               	addwfc	fsr2h,f,c
  6956  00065C  0E00               	movlw	0
  6957  00065E  6EDF               	movwf	indf2,c
  6958  000660                     i2l3175:
  6959                           
  6960                           ; BSR set to: 0
  6961                           ;my_i2c.c: 261: }
  6962                           ;my_i2c.c: 262: if (msg_to_send) {
  6963  000660  0100               	movlb	0	; () banked
  6964  000662  0100               	movlb	0	; () banked
  6965  000664  5193               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  6966  000666  B4D8               	btfsc	status,2,c
  6967  000668  0012               	return	
  6968                           
  6969                           ; BSR set to: 0
  6970                           ;my_i2c.c: 263: int length;
  6971                           ;my_i2c.c: 264: unsigned char msgbuffer[10 + 1];
  6972                           ;my_i2c.c: 265: length = 2;
  6973  00066A  0E00               	movlw	0
  6974  00066C  0100               	movlb	0	; () banked
  6975  00066E  0100               	movlb	0	; () banked
  6976  000670  6F8C               	movwf	(i2c_int_handler@length+1)& (0+255),b
  6977  000672  0E02               	movlw	2
  6978  000674  0100               	movlb	0	; () banked
  6979  000676  6F8B               	movwf	i2c_int_handler@length& (0+255),b
  6980                           
  6981                           ; BSR set to: 0
  6982                           ;my_i2c.c: 267: msgbuffer[0] = returnADCValue();
  6983  000678  ECB5  F00C         	call	_returnADCValue	;wreg free
  6984  00067C  0100               	movlb	0	; () banked
  6985  00067E  0100               	movlb	0	; () banked
  6986  000680  6F80               	movwf	i2c_int_handler@msgbuffer& (0+255),b
  6987                           
  6988                           ; BSR set to: 0
  6989                           ;my_i2c.c: 294: start_i2c_slave_reply(length, msgbuffer);
  6990  000682  0100               	movlb	0	; () banked
  6991  000684  0E00               	movlw	high i2c_int_handler@msgbuffer
  6992  000686  6E2E               	movwf	i2start_i2c_slave_reply@msg+1,c
  6993  000688  0100               	movlb	0	; () banked
  6994  00068A  0E80               	movlw	low i2c_int_handler@msgbuffer
  6995  00068C  6E2D               	movwf	i2start_i2c_slave_reply@msg,c
  6996  00068E  0100               	movlb	0	; () banked
  6997  000690  0100               	movlb	0	; () banked
  6998  000692  518B               	movf	i2c_int_handler@length& (0+255),w,b
  6999  000694  ECD4  F006         	call	i2_start_i2c_slave_reply
  7000                           
  7001                           ;my_i2c.c: 295: msg_to_send = 0;
  7002  000698  6E47               	movwf	??_i2c_int_handler& (0+255),c
  7003  00069A  0E00               	movlw	0
  7004  00069C  0100               	movlb	0	; () banked
  7005  00069E  0100               	movlb	0	; () banked
  7006  0006A0  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7007  0006A2  5047               	movf	??_i2c_int_handler& (0+255),w,c
  7008  0006A4  0012               	return	
  7009  0006A6                     __end_of_i2c_int_handler:
  7010                           	opt stack 0
  7011                           pclatu	equ	0xFFB
  7012                           pclath	equ	0xFFA
  7013                           tblptru	equ	0xFF8
  7014                           tblptrh	equ	0xFF7
  7015                           tblptrl	equ	0xFF6
  7016                           tablat	equ	0xFF5
  7017                           prodh	equ	0xFF4
  7018                           prodl	equ	0xFF3
  7019                           intcon	equ	0xFF2
  7020                           intcon2	equ	0xFF1
  7021                           postinc0	equ	0xFEE
  7022                           fsr0h	equ	0xFEA
  7023                           fsr0l	equ	0xFE9
  7024                           wreg	equ	0xFE8
  7025                           indf1	equ	0xFE7
  7026                           fsr1h	equ	0xFE2
  7027                           fsr1l	equ	0xFE1
  7028                           bsr	equ	0xFE0
  7029                           indf2	equ	0xFDF
  7030                           postinc2	equ	0xFDE
  7031                           postdec2	equ	0xFDD
  7032                           fsr2h	equ	0xFDA
  7033                           fsr2l	equ	0xFD9
  7034                           status	equ	0xFD8
  7035                           
  7036 ;; *************** function i2_start_i2c_slave_reply *****************
  7037 ;; Defined at:
  7038 ;;		line 54 in file "../src/my_i2c.c"
  7039 ;; Parameters:    Size  Location     Type
  7040 ;;  length          1    wreg     unsigned char 
  7041 ;;  msg             2   44[COMRAM] PTR unsigned char 
  7042 ;;		 -> main@msgbuffer(11), i2c_int_handler@msgbuffer(11), 
  7043 ;; Auto vars:     Size  Location     Type
  7044 ;;  length          1   48[COMRAM] unsigned char 
  7045 ;; Return value:  Size  Location     Type
  7046 ;;		None               void
  7047 ;; Registers used:
  7048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7049 ;; Tracked objects:
  7050 ;;		On entry : 0/0
  7051 ;;		On exit  : 0/0
  7052 ;;		Unchanged: 0/0
  7053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7054 ;;      Params:         2       0       0       0       0
  7055 ;;      Locals:         1       0       0       0       0
  7056 ;;      Temps:          2       0       0       0       0
  7057 ;;      Totals:         5       0       0       0       0
  7058 ;;Total ram usage:        5 bytes
  7059 ;; Hardware stack levels used:    1
  7060 ;; This function calls:
  7061 ;;		Nothing
  7062 ;; This function is called by:
  7063 ;;		_i2c_int_handler
  7064 ;; This function uses a non-reentrant model
  7065 ;;
  7066                           
  7067                           	psect	text40
  7068  000DA8                     __ptext40:
  7069                           	opt stack 0
  7070  000DA8                     i2_start_i2c_slave_reply:
  7071                           	opt stack 18
  7072                           
  7073                           ; BSR set to: 0
  7074                           ;incstack = 0
  7075                           ;i2start_i2c_slave_reply@length stored from wreg
  7076  000DA8  CFE8 F031          	movff	wreg,i2start_i2c_slave_reply@length
  7077                           
  7078                           ;my_i2c.c: 56: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  7079  000DAC  0100               	movlb	0	; () banked
  7080  000DAE  EE20 F019          	lfsr	2,25
  7081  000DB2  0100               	movlb	0	; () banked
  7082  000DB4  51CD               	movf	_ic_ptr& (0+255),w,b
  7083  000DB6  26D9               	addwf	fsr2l,f,c
  7084  000DB8  0100               	movlb	0	; () banked
  7085  000DBA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7086  000DBC  22DA               	addwfc	fsr2h,f,c
  7087  000DBE  0E00               	movlw	0
  7088  000DC0  6EDF               	movwf	indf2,c
  7089  000DC2  D03A               	goto	i2l3263
  7090  000DC4                     i2l3259:
  7091                           
  7092                           ; BSR set to: 0
  7093                           ;my_i2c.c: 57: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  7094  000DC4  0100               	movlb	0	; () banked
  7095  000DC6  EE20 F019          	lfsr	2,25
  7096  000DCA  0100               	movlb	0	; () banked
  7097  000DCC  51CD               	movf	_ic_ptr& (0+255),w,b
  7098  000DCE  26D9               	addwf	fsr2l,f,c
  7099  000DD0  0100               	movlb	0	; () banked
  7100  000DD2  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7101  000DD4  22DA               	addwfc	fsr2h,f,c
  7102  000DD6  50DF               	movf	indf2,w,c
  7103  000DD8  6E2F               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  7104  000DDA  502F               	movf	??i2_start_i2c_slave_reply,w,c
  7105  000DDC  0D01               	mullw	1
  7106  000DDE  50F3               	movf	prodl,w,c
  7107  000DE0  242D               	addwf	i2start_i2c_slave_reply@msg,w,c
  7108  000DE2  6ED9               	movwf	fsr2l,c
  7109  000DE4  50F4               	movf	prodh,w,c
  7110  000DE6  202E               	addwfc	i2start_i2c_slave_reply@msg+1,w,c
  7111  000DE8  6EDA               	movwf	fsr2h,c
  7112  000DEA  0100               	movlb	0	; () banked
  7113  000DEC  EE10 F019          	lfsr	1,25
  7114  000DF0  0100               	movlb	0	; () banked
  7115  000DF2  51CD               	movf	_ic_ptr& (0+255),w,b
  7116  000DF4  26E1               	addwf	fsr1l,f,c
  7117  000DF6  0100               	movlb	0	; () banked
  7118  000DF8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7119  000DFA  22E2               	addwfc	fsr1h,f,c
  7120  000DFC  50E7               	movf	indf1,w,c
  7121  000DFE  6E30               	movwf	(??i2_start_i2c_slave_reply+1)& (0+255),c
  7122  000E00  5030               	movf	??i2_start_i2c_slave_reply+1,w,c
  7123  000E02  0D01               	mullw	1
  7124  000E04  0E0F               	movlw	15
  7125  000E06  26F3               	addwf	prodl,f,c
  7126  000E08  0E00               	movlw	0
  7127  000E0A  22F4               	addwfc	prodh,f,c
  7128  000E0C  50F3               	movf	prodl,w,c
  7129  000E0E  0100               	movlb	0	; () banked
  7130  000E10  0100               	movlb	0	; () banked
  7131  000E12  25CD               	addwf	_ic_ptr& (0+255),w,b
  7132  000E14  6EE1               	movwf	fsr1l,c
  7133  000E16  50F4               	movf	prodh,w,c
  7134  000E18  0100               	movlb	0	; () banked
  7135  000E1A  0100               	movlb	0	; () banked
  7136  000E1C  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7137  000E1E  6EE2               	movwf	fsr1h,c
  7138  000E20  CFDF FFE7          	movff	indf2,indf1
  7139                           
  7140                           ; BSR set to: 0
  7141  000E24  0100               	movlb	0	; () banked
  7142  000E26  EE20 F019          	lfsr	2,25
  7143  000E2A  0100               	movlb	0	; () banked
  7144  000E2C  51CD               	movf	_ic_ptr& (0+255),w,b
  7145  000E2E  26D9               	addwf	fsr2l,f,c
  7146  000E30  0100               	movlb	0	; () banked
  7147  000E32  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7148  000E34  22DA               	addwfc	fsr2h,f,c
  7149  000E36  2ADF               	incf	indf2,f,c
  7150  000E38                     i2l3263:
  7151                           
  7152                           ; BSR set to: 0
  7153  000E38  0100               	movlb	0	; () banked
  7154  000E3A  EE20 F019          	lfsr	2,25
  7155  000E3E  0100               	movlb	0	; () banked
  7156  000E40  51CD               	movf	_ic_ptr& (0+255),w,b
  7157  000E42  26D9               	addwf	fsr2l,f,c
  7158  000E44  0100               	movlb	0	; () banked
  7159  000E46  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7160  000E48  22DA               	addwfc	fsr2h,f,c
  7161  000E4A  50DF               	movf	indf2,w,c
  7162  000E4C  6E2F               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  7163  000E4E  5031               	movf	i2start_i2c_slave_reply@length,w,c
  7164  000E50  5C2F               	subwf	??i2_start_i2c_slave_reply,w,c
  7165  000E52  A0D8               	btfss	status,0,c
  7166  000E54  D7B7               	goto	i2l3259
  7167                           
  7168                           ; BSR set to: 0
  7169                           ;my_i2c.c: 58: }
  7170                           ;my_i2c.c: 59: ic_ptr->outbuflen = length;
  7171                           
  7172                           ; BSR set to: 0
  7173  000E56  0100               	movlb	0	; () banked
  7174  000E58  EE20 F019          	lfsr	2,25
  7175  000E5C  0100               	movlb	0	; () banked
  7176  000E5E  51CD               	movf	_ic_ptr& (0+255),w,b
  7177  000E60  26D9               	addwf	fsr2l,f,c
  7178  000E62  0100               	movlb	0	; () banked
  7179  000E64  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7180  000E66  22DA               	addwfc	fsr2h,f,c
  7181  000E68  C031  FFDF         	movff	i2start_i2c_slave_reply@length,indf2
  7182                           
  7183                           ;my_i2c.c: 60: ic_ptr->outbufind = 1;
  7184  000E6C  0100               	movlb	0	; () banked
  7185  000E6E  EE20 F01A          	lfsr	2,26
  7186  000E72  0100               	movlb	0	; () banked
  7187  000E74  51CD               	movf	_ic_ptr& (0+255),w,b
  7188  000E76  26D9               	addwf	fsr2l,f,c
  7189  000E78  0100               	movlb	0	; () banked
  7190  000E7A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7191  000E7C  22DA               	addwfc	fsr2h,f,c
  7192  000E7E  0E01               	movlw	1
  7193  000E80  6EDF               	movwf	indf2,c
  7194                           
  7195                           ;my_i2c.c: 63: SSPBUF = ic_ptr->outbuffer[0];
  7196  000E82  0100               	movlb	0	; () banked
  7197  000E84  EE20 F00F          	lfsr	2,15
  7198  000E88  0100               	movlb	0	; () banked
  7199  000E8A  51CD               	movf	_ic_ptr& (0+255),w,b
  7200  000E8C  26D9               	addwf	fsr2l,f,c
  7201  000E8E  0100               	movlb	0	; () banked
  7202  000E90  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7203  000E92  22DA               	addwfc	fsr2h,f,c
  7204  000E94  50DF               	movf	indf2,w,c
  7205  000E96  6EC9               	movwf	4041,c	;volatile
  7206                           
  7207                           ; BSR set to: 0
  7208                           ;my_i2c.c: 66: SSPCON1bits.CKP = 1;
  7209  000E98  88C6               	bsf	4038,4,c	;volatile
  7210                           
  7211                           ; BSR set to: 0
  7212  000E9A  0012               	return	
  7213  000E9C                     __end_ofi2_start_i2c_slave_reply:
  7214                           	opt stack 0
  7215                           pclatu	equ	0xFFB
  7216                           pclath	equ	0xFFA
  7217                           tblptru	equ	0xFF8
  7218                           tblptrh	equ	0xFF7
  7219                           tblptrl	equ	0xFF6
  7220                           tablat	equ	0xFF5
  7221                           prodh	equ	0xFF4
  7222                           prodl	equ	0xFF3
  7223                           intcon	equ	0xFF2
  7224                           intcon2	equ	0xFF1
  7225                           postinc0	equ	0xFEE
  7226                           fsr0h	equ	0xFEA
  7227                           fsr0l	equ	0xFE9
  7228                           wreg	equ	0xFE8
  7229                           indf1	equ	0xFE7
  7230                           fsr1h	equ	0xFE2
  7231                           fsr1l	equ	0xFE1
  7232                           bsr	equ	0xFE0
  7233                           indf2	equ	0xFDF
  7234                           postinc2	equ	0xFDE
  7235                           postdec2	equ	0xFDD
  7236                           fsr2h	equ	0xFDA
  7237                           fsr2l	equ	0xFD9
  7238                           status	equ	0xFD8
  7239                           
  7240 ;; *************** function _returnADCValue *****************
  7241 ;; Defined at:
  7242 ;;		line 29 in file "../src/interrupts.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;		None
  7245 ;; Auto vars:     Size  Location     Type
  7246 ;;		None
  7247 ;; Return value:  Size  Location     Type
  7248 ;;                  1    wreg      unsigned char 
  7249 ;; Registers used:
  7250 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7251 ;; Tracked objects:
  7252 ;;		On entry : 0/0
  7253 ;;		On exit  : 0/0
  7254 ;;		Unchanged: 0/0
  7255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7256 ;;      Params:         0       0       0       0       0
  7257 ;;      Locals:         0       0       0       0       0
  7258 ;;      Temps:          0       0       0       0       0
  7259 ;;      Totals:         0       0       0       0       0
  7260 ;;Total ram usage:        0 bytes
  7261 ;; Hardware stack levels used:    1
  7262 ;; This function calls:
  7263 ;;		Nothing
  7264 ;; This function is called by:
  7265 ;;		_i2c_int_handler
  7266 ;; This function uses a non-reentrant model
  7267 ;;
  7268                           
  7269                           	psect	text41
  7270  00196A                     __ptext41:
  7271                           	opt stack 0
  7272  00196A                     _returnADCValue:
  7273                           	opt stack 18
  7274                           
  7275                           ;interrupts.c: 31: if(sendingPlaceHolder == 237)
  7276                           
  7277                           ; BSR set to: 0
  7278                           ;incstack = 0
  7279  00196A  5052               	movf	_sendingPlaceHolder,w,c
  7280  00196C  0AED               	xorlw	237
  7281  00196E  1053               	iorwf	_sendingPlaceHolder+1,w,c
  7282  001970  A4D8               	btfss	status,2,c
  7283  001972  D009               	goto	i2l3189
  7284                           
  7285                           ;interrupts.c: 32: {
  7286                           ;interrupts.c: 33: responding = 0;
  7287  001974  0E00               	movlw	0
  7288  001976  6E4C               	movwf	_responding+1,c
  7289  001978  0E00               	movlw	0
  7290  00197A  6E4B               	movwf	_responding,c
  7291                           
  7292                           ;interrupts.c: 34: sendingPlaceHolder = 0;
  7293  00197C  0E00               	movlw	0
  7294  00197E  6E53               	movwf	_sendingPlaceHolder+1,c
  7295  001980  0E00               	movlw	0
  7296  001982  6E52               	movwf	_sendingPlaceHolder,c
  7297                           
  7298                           ;interrupts.c: 35: }
  7299  001984  D002               	goto	i2l3191
  7300  001986                     i2l3189:
  7301                           
  7302                           ;interrupts.c: 36: else
  7303                           ;interrupts.c: 37: sendingPlaceHolder++;
  7304  001986  4A52               	infsnz	_sendingPlaceHolder,f,c
  7305  001988  2A53               	incf	_sendingPlaceHolder+1,f,c
  7306  00198A                     i2l3191:
  7307                           
  7308                           ;interrupts.c: 38: return ADCArray[sendingPlaceHolder];
  7309  00198A  0103               	movlb	3	; () banked
  7310  00198C  0E00               	movlw	low _ADCArray
  7311  00198E  2452               	addwf	_sendingPlaceHolder,w,c
  7312  001990  6ED9               	movwf	fsr2l,c
  7313  001992  0103               	movlb	3	; () banked
  7314  001994  0E03               	movlw	high _ADCArray
  7315  001996  2053               	addwfc	_sendingPlaceHolder+1,w,c
  7316  001998  6EDA               	movwf	fsr2h,c
  7317  00199A  50DF               	movf	indf2,w,c
  7318  00199C  0012               	return	
  7319  00199E                     __end_of_returnADCValue:
  7320                           	opt stack 0
  7321                           pclatu	equ	0xFFB
  7322                           pclath	equ	0xFFA
  7323                           tblptru	equ	0xFF8
  7324                           tblptrh	equ	0xFF7
  7325                           tblptrl	equ	0xFF6
  7326                           tablat	equ	0xFF5
  7327                           prodh	equ	0xFF4
  7328                           prodl	equ	0xFF3
  7329                           intcon	equ	0xFF2
  7330                           intcon2	equ	0xFF1
  7331                           postinc0	equ	0xFEE
  7332                           fsr0h	equ	0xFEA
  7333                           fsr0l	equ	0xFE9
  7334                           wreg	equ	0xFE8
  7335                           indf1	equ	0xFE7
  7336                           fsr1h	equ	0xFE2
  7337                           fsr1l	equ	0xFE1
  7338                           bsr	equ	0xFE0
  7339                           indf2	equ	0xFDF
  7340                           postinc2	equ	0xFDE
  7341                           postdec2	equ	0xFDD
  7342                           fsr2h	equ	0xFDA
  7343                           fsr2l	equ	0xFD9
  7344                           status	equ	0xFD8
  7345                           
  7346 ;; *************** function _handle_start *****************
  7347 ;; Defined at:
  7348 ;;		line 72 in file "../src/my_i2c.c"
  7349 ;; Parameters:    Size  Location     Type
  7350 ;;  data_read       1    wreg     unsigned char 
  7351 ;; Auto vars:     Size  Location     Type
  7352 ;;  data_read       1   44[COMRAM] unsigned char 
  7353 ;; Return value:  Size  Location     Type
  7354 ;;		None               void
  7355 ;; Registers used:
  7356 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7357 ;; Tracked objects:
  7358 ;;		On entry : 0/0
  7359 ;;		On exit  : 0/0
  7360 ;;		Unchanged: 0/0
  7361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7362 ;;      Params:         0       0       0       0       0
  7363 ;;      Locals:         1       0       0       0       0
  7364 ;;      Temps:          0       0       0       0       0
  7365 ;;      Totals:         1       0       0       0       0
  7366 ;;Total ram usage:        1 bytes
  7367 ;; Hardware stack levels used:    1
  7368 ;; This function calls:
  7369 ;;		Nothing
  7370 ;; This function is called by:
  7371 ;;		_i2c_int_handler
  7372 ;; This function uses a non-reentrant model
  7373 ;;
  7374                           
  7375                           	psect	text42
  7376  000E9C                     __ptext42:
  7377                           	opt stack 0
  7378  000E9C                     _handle_start:
  7379                           	opt stack 18
  7380                           
  7381                           ; BSR set to: 3
  7382                           ;incstack = 0
  7383                           ;handle_start@data_read stored from wreg
  7384  000E9C  CFE8 F02D          	movff	wreg,handle_start@data_read
  7385                           
  7386                           ;my_i2c.c: 73: ic_ptr->event_count = 1;
  7387  000EA0  0100               	movlb	0	; () banked
  7388  000EA2  EE20 F00B          	lfsr	2,11
  7389  000EA6  0100               	movlb	0	; () banked
  7390  000EA8  51CD               	movf	_ic_ptr& (0+255),w,b
  7391  000EAA  26D9               	addwf	fsr2l,f,c
  7392  000EAC  0100               	movlb	0	; () banked
  7393  000EAE  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7394  000EB0  22DA               	addwfc	fsr2h,f,c
  7395  000EB2  0E01               	movlw	1
  7396  000EB4  6EDF               	movwf	indf2,c
  7397                           
  7398                           ;my_i2c.c: 74: ic_ptr->buflen = 0;
  7399  000EB6  0100               	movlb	0	; () banked
  7400  000EB8  EE20 F00A          	lfsr	2,10
  7401  000EBC  0100               	movlb	0	; () banked
  7402  000EBE  51CD               	movf	_ic_ptr& (0+255),w,b
  7403  000EC0  26D9               	addwf	fsr2l,f,c
  7404  000EC2  0100               	movlb	0	; () banked
  7405  000EC4  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7406  000EC6  22DA               	addwfc	fsr2h,f,c
  7407  000EC8  0E00               	movlw	0
  7408  000ECA  6EDF               	movwf	indf2,c
  7409                           
  7410                           ; BSR set to: 0
  7411                           ;my_i2c.c: 76: if (data_read) {
  7412  000ECC  502D               	movf	handle_start@data_read,w,c
  7413  000ECE  B4D8               	btfsc	status,2,c
  7414  000ED0  D03D               	goto	i2l3037
  7415                           
  7416                           ; BSR set to: 0
  7417                           ;my_i2c.c: 77: if (SSPSTATbits.D_A == 1) {
  7418  000ED2  AAC7               	btfss	4039,5,c	;volatile
  7419  000ED4  D021               	goto	i2l111
  7420                           
  7421                           ; BSR set to: 0
  7422                           ;my_i2c.c: 80: ic_ptr->status = 0x5;
  7423  000ED6  0100               	movlb	0	; () banked
  7424  000ED8  EE20 F00C          	lfsr	2,12
  7425  000EDC  0100               	movlb	0	; () banked
  7426  000EDE  51CD               	movf	_ic_ptr& (0+255),w,b
  7427  000EE0  26D9               	addwf	fsr2l,f,c
  7428  000EE2  0100               	movlb	0	; () banked
  7429  000EE4  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7430  000EE6  22DA               	addwfc	fsr2h,f,c
  7431  000EE8  0E05               	movlw	5
  7432  000EEA  6EDF               	movwf	indf2,c
  7433                           
  7434                           ;my_i2c.c: 81: ic_ptr->error_count++;
  7435  000EEC  0100               	movlb	0	; () banked
  7436  000EEE  EE20 F00E          	lfsr	2,14
  7437  000EF2  0100               	movlb	0	; () banked
  7438  000EF4  51CD               	movf	_ic_ptr& (0+255),w,b
  7439  000EF6  26D9               	addwf	fsr2l,f,c
  7440  000EF8  0100               	movlb	0	; () banked
  7441  000EFA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7442  000EFC  22DA               	addwfc	fsr2h,f,c
  7443  000EFE  2ADF               	incf	indf2,f,c
  7444                           
  7445                           ;my_i2c.c: 82: ic_ptr->error_code = 0x5;
  7446  000F00  0100               	movlb	0	; () banked
  7447  000F02  EE20 F00D          	lfsr	2,13
  7448  000F06  0100               	movlb	0	; () banked
  7449  000F08  51CD               	movf	_ic_ptr& (0+255),w,b
  7450  000F0A  26D9               	addwf	fsr2l,f,c
  7451  000F0C  0100               	movlb	0	; () banked
  7452  000F0E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7453  000F10  22DA               	addwfc	fsr2h,f,c
  7454  000F12  0E05               	movlw	5
  7455  000F14  6EDF               	movwf	indf2,c
  7456                           
  7457                           ;my_i2c.c: 83: } else {
  7458  000F16  0012               	return	
  7459  000F18                     i2l111:
  7460                           
  7461                           ; BSR set to: 0
  7462                           ;my_i2c.c: 84: if (SSPSTATbits.R_W == 1) {
  7463  000F18  A4C7               	btfss	4039,2,c	;volatile
  7464  000F1A  D00C               	goto	i2l3035
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;my_i2c.c: 85: ic_ptr->status = 0x8;
  7468  000F1C  0100               	movlb	0	; () banked
  7469  000F1E  EE20 F00C          	lfsr	2,12
  7470  000F22  0100               	movlb	0	; () banked
  7471  000F24  51CD               	movf	_ic_ptr& (0+255),w,b
  7472  000F26  26D9               	addwf	fsr2l,f,c
  7473  000F28  0100               	movlb	0	; () banked
  7474  000F2A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7475  000F2C  22DA               	addwfc	fsr2h,f,c
  7476  000F2E  0E08               	movlw	8
  7477  000F30  6EDF               	movwf	indf2,c
  7478                           
  7479                           ;my_i2c.c: 86: } else {
  7480  000F32  0012               	return	
  7481  000F34                     i2l3035:
  7482                           
  7483                           ; BSR set to: 0
  7484                           ;my_i2c.c: 87: ic_ptr->status = 0x7;
  7485  000F34  0100               	movlb	0	; () banked
  7486  000F36  EE20 F00C          	lfsr	2,12
  7487  000F3A  0100               	movlb	0	; () banked
  7488  000F3C  51CD               	movf	_ic_ptr& (0+255),w,b
  7489  000F3E  26D9               	addwf	fsr2l,f,c
  7490  000F40  0100               	movlb	0	; () banked
  7491  000F42  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7492  000F44  22DA               	addwfc	fsr2h,f,c
  7493  000F46  0E07               	movlw	7
  7494  000F48  6EDF               	movwf	indf2,c
  7495  000F4A  0012               	return	
  7496  000F4C                     i2l3037:
  7497                           
  7498                           ; BSR set to: 0
  7499                           ;my_i2c.c: 91: ic_ptr->status = 0x6;
  7500  000F4C  0100               	movlb	0	; () banked
  7501  000F4E  EE20 F00C          	lfsr	2,12
  7502  000F52  0100               	movlb	0	; () banked
  7503  000F54  51CD               	movf	_ic_ptr& (0+255),w,b
  7504  000F56  26D9               	addwf	fsr2l,f,c
  7505  000F58  0100               	movlb	0	; () banked
  7506  000F5A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7507  000F5C  22DA               	addwfc	fsr2h,f,c
  7508  000F5E  0E06               	movlw	6
  7509  000F60  6EDF               	movwf	indf2,c
  7510  000F62  0012               	return	
  7511  000F64                     __end_of_handle_start:
  7512                           	opt stack 0
  7513                           pclatu	equ	0xFFB
  7514                           pclath	equ	0xFFA
  7515                           tblptru	equ	0xFF8
  7516                           tblptrh	equ	0xFF7
  7517                           tblptrl	equ	0xFF6
  7518                           tablat	equ	0xFF5
  7519                           prodh	equ	0xFF4
  7520                           prodl	equ	0xFF3
  7521                           intcon	equ	0xFF2
  7522                           intcon2	equ	0xFF1
  7523                           postinc0	equ	0xFEE
  7524                           fsr0h	equ	0xFEA
  7525                           fsr0l	equ	0xFE9
  7526                           wreg	equ	0xFE8
  7527                           indf1	equ	0xFE7
  7528                           fsr1h	equ	0xFE2
  7529                           fsr1l	equ	0xFE1
  7530                           bsr	equ	0xFE0
  7531                           indf2	equ	0xFDF
  7532                           postinc2	equ	0xFDE
  7533                           postdec2	equ	0xFDD
  7534                           fsr2h	equ	0xFDA
  7535                           fsr2l	equ	0xFD9
  7536                           status	equ	0xFD8
  7537                           
  7538 ;; *************** function _ToMainHigh_sendmsg *****************
  7539 ;; Defined at:
  7540 ;;		line 126 in file "../src/messages.c"
  7541 ;; Parameters:    Size  Location     Type
  7542 ;;  length          1    wreg     unsigned char 
  7543 ;;  msgtype         1   66[COMRAM] unsigned char 
  7544 ;;  data            2   67[COMRAM] PTR void 
  7545 ;;		 -> main@ic(28), i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  7546 ;; Auto vars:     Size  Location     Type
  7547 ;;  length          1   69[COMRAM] unsigned char 
  7548 ;; Return value:  Size  Location     Type
  7549 ;;                  1    wreg      char 
  7550 ;; Registers used:
  7551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7552 ;; Tracked objects:
  7553 ;;		On entry : 0/0
  7554 ;;		On exit  : 0/0
  7555 ;;		Unchanged: 0/0
  7556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7557 ;;      Params:         3       0       0       0       0
  7558 ;;      Locals:         1       0       0       0       0
  7559 ;;      Temps:          0       0       0       0       0
  7560 ;;      Totals:         4       0       0       0       0
  7561 ;;Total ram usage:        4 bytes
  7562 ;; Hardware stack levels used:    1
  7563 ;; Hardware stack levels required when called:    2
  7564 ;; This function calls:
  7565 ;;		i2_send_msg
  7566 ;; This function is called by:
  7567 ;;		_i2c_int_handler
  7568 ;;		_timer0_int_handler
  7569 ;; This function uses a non-reentrant model
  7570 ;;
  7571                           
  7572                           	psect	text43
  7573  001A44                     __ptext43:
  7574                           	opt stack 0
  7575  001A44                     _ToMainHigh_sendmsg:
  7576                           	opt stack 16
  7577                           
  7578                           ; BSR set to: 0
  7579                           ;incstack = 0
  7580                           ;ToMainHigh_sendmsg@length stored from wreg
  7581  001A44  CFE8 F046          	movff	wreg,ToMainHigh_sendmsg@length
  7582                           
  7583                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7584                           ;	Return value of _ToMainHigh_sendmsg is never used
  7585  001A48  0101               	movlb	1	; () banked
  7586  001A4A  0E01               	movlw	high _ToMainHigh_MQ
  7587  001A4C  6E38               	movwf	i2send_msg@qptr+1,c
  7588  001A4E  0101               	movlb	1	; () banked
  7589  001A50  0E36               	movlw	low _ToMainHigh_MQ
  7590  001A52  6E37               	movwf	i2send_msg@qptr,c
  7591  001A54  C046  F039         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  7592  001A58  C043  F03A         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7593  001A5C  C045  F03C         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7594  001A60  C044  F03B         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  7595  001A64  EC07  F008         	call	i2_send_msg	;wreg free
  7596  001A68  0012               	return	
  7597  001A6A                     __end_of_ToMainHigh_sendmsg:
  7598                           	opt stack 0
  7599                           pclatu	equ	0xFFB
  7600                           pclath	equ	0xFFA
  7601                           tblptru	equ	0xFF8
  7602                           tblptrh	equ	0xFF7
  7603                           tblptrl	equ	0xFF6
  7604                           tablat	equ	0xFF5
  7605                           prodh	equ	0xFF4
  7606                           prodl	equ	0xFF3
  7607                           intcon	equ	0xFF2
  7608                           intcon2	equ	0xFF1
  7609                           postinc0	equ	0xFEE
  7610                           fsr0h	equ	0xFEA
  7611                           fsr0l	equ	0xFE9
  7612                           wreg	equ	0xFE8
  7613                           indf1	equ	0xFE7
  7614                           fsr1h	equ	0xFE2
  7615                           fsr1l	equ	0xFE1
  7616                           bsr	equ	0xFE0
  7617                           indf2	equ	0xFDF
  7618                           postinc2	equ	0xFDE
  7619                           postdec2	equ	0xFDD
  7620                           fsr2h	equ	0xFDA
  7621                           fsr2l	equ	0xFD9
  7622                           status	equ	0xFD8
  7623                           
  7624 ;; *************** function i2_send_msg *****************
  7625 ;; Defined at:
  7626 ;;		line 24 in file "../src/messages.c"
  7627 ;; Parameters:    Size  Location     Type
  7628 ;;  qptr            2   54[COMRAM] PTR struct __msg_queue
  7629 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7630 ;;  length          1   56[COMRAM] unsigned char 
  7631 ;;  msgtype         1   57[COMRAM] unsigned char 
  7632 ;;  data            2   58[COMRAM] PTR void 
  7633 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  7634 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;  send_msg        2   64[COMRAM] PTR struct __msg
  7637 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7638 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7639 ;;  send_msg        2   61[COMRAM] unsigned int 
  7640 ;;  send_msg        1   63[COMRAM] unsigned char 
  7641 ;; Return value:  Size  Location     Type
  7642 ;;                  1    wreg      char 
  7643 ;; Registers used:
  7644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7645 ;; Tracked objects:
  7646 ;;		On entry : 0/0
  7647 ;;		On exit  : 0/0
  7648 ;;		Unchanged: 0/0
  7649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7650 ;;      Params:         6       0       0       0       0
  7651 ;;      Locals:         5       0       0       0       0
  7652 ;;      Temps:          1       0       0       0       0
  7653 ;;      Totals:        12       0       0       0       0
  7654 ;;Total ram usage:       12 bytes
  7655 ;; Hardware stack levels used:    1
  7656 ;; Hardware stack levels required when called:    1
  7657 ;; This function calls:
  7658 ;;		i2_memcpy
  7659 ;; This function is called by:
  7660 ;;		_ToMainHigh_sendmsg
  7661 ;; This function uses a non-reentrant model
  7662 ;;
  7663                           
  7664                           	psect	text44
  7665  00100E                     __ptext44:
  7666                           	opt stack 0
  7667  00100E                     i2_send_msg:
  7668                           	opt stack 16
  7669                           
  7670                           ;messages.c: 25: unsigned char slot;
  7671                           ;messages.c: 27: msg *qmsg;
  7672                           ;messages.c: 28: size_t tlength = length;
  7673                           
  7674                           ;incstack = 0
  7675  00100E  C039  F03E         	movff	i2send_msg@length,i2send_msg@tlength
  7676  001012  6A3F               	clrf	i2send_msg@tlength+1,c
  7677                           
  7678                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7679  001014  EE20 F034          	lfsr	2,52
  7680  001018  5037               	movf	i2send_msg@qptr,w,c
  7681  00101A  26D9               	addwf	fsr2l,f,c
  7682  00101C  5038               	movf	i2send_msg@qptr+1,w,c
  7683  00101E  22DA               	addwfc	fsr2h,f,c
  7684  001020  50DF               	movf	indf2,w,c
  7685  001022  6E40               	movwf	i2send_msg@slot,c
  7686                           
  7687                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7688  001024  5040               	movf	i2send_msg@slot,w,c
  7689  001026  0D0D               	mullw	13
  7690  001028  50F3               	movf	prodl,w,c
  7691  00102A  2437               	addwf	i2send_msg@qptr,w,c
  7692  00102C  6E41               	movwf	i2send_msg@qmsg,c
  7693  00102E  50F4               	movf	prodh,w,c
  7694  001030  2038               	addwfc	i2send_msg@qptr+1,w,c
  7695  001032  6E42               	movwf	i2send_msg@qmsg+1,c
  7696                           
  7697                           ;messages.c: 41: if (qmsg->full != 0) {
  7698  001034  C041  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7699  001038  C042  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7700  00103C  50DF               	movf	indf2,w,c
  7701  00103E  B4D8               	btfsc	status,2,c
  7702  001040  D002               	goto	i2l3281
  7703                           
  7704                           ;messages.c: 42: return (-1);
  7705  001042  0EFF               	movlw	255
  7706  001044  0012               	return	
  7707  001046                     i2l3281:
  7708                           
  7709                           ;messages.c: 43: }
  7710                           ;messages.c: 46: qmsg->length = length;
  7711  001046  EE20 F001          	lfsr	2,1
  7712  00104A  5041               	movf	i2send_msg@qmsg,w,c
  7713  00104C  26D9               	addwf	fsr2l,f,c
  7714  00104E  5042               	movf	i2send_msg@qmsg+1,w,c
  7715  001050  22DA               	addwfc	fsr2h,f,c
  7716  001052  C039  FFDF         	movff	i2send_msg@length,indf2
  7717                           
  7718                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7719  001056  EE20 F002          	lfsr	2,2
  7720  00105A  5041               	movf	i2send_msg@qmsg,w,c
  7721  00105C  26D9               	addwf	fsr2l,f,c
  7722  00105E  5042               	movf	i2send_msg@qmsg+1,w,c
  7723  001060  22DA               	addwfc	fsr2h,f,c
  7724  001062  C03A  FFDF         	movff	i2send_msg@msgtype,indf2
  7725                           
  7726                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7727  001066  0E03               	movlw	3
  7728  001068  2441               	addwf	i2send_msg@qmsg,w,c
  7729  00106A  6E2D               	movwf	i2memcpy@d1,c
  7730  00106C  0E00               	movlw	0
  7731  00106E  2042               	addwfc	i2send_msg@qmsg+1,w,c
  7732  001070  6E2E               	movwf	i2memcpy@d1+1,c
  7733  001072  C03C  F030         	movff	i2send_msg@data+1,i2memcpy@s1+1
  7734  001076  C03B  F02F         	movff	i2send_msg@data,i2memcpy@s1
  7735  00107A  C03E  F031         	movff	i2send_msg@tlength,i2memcpy@n
  7736  00107E  C03F  F032         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  7737  001082  EC40  F00C         	call	i2_memcpy	;wreg free
  7738                           
  7739                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7740  001086  EE20 F034          	lfsr	2,52
  7741  00108A  5037               	movf	i2send_msg@qptr,w,c
  7742  00108C  26D9               	addwf	fsr2l,f,c
  7743  00108E  5038               	movf	i2send_msg@qptr+1,w,c
  7744  001090  22DA               	addwfc	fsr2h,f,c
  7745  001092  EE10 F034          	lfsr	1,52
  7746  001096  5037               	movf	i2send_msg@qptr,w,c
  7747  001098  26E1               	addwf	fsr1l,f,c
  7748  00109A  5038               	movf	i2send_msg@qptr+1,w,c
  7749  00109C  22E2               	addwfc	fsr1h,f,c
  7750  00109E  50E7               	movf	indf1,w,c
  7751  0010A0  6E3D               	movwf	??i2_send_msg& (0+255),c
  7752  0010A2  283D               	incf	??i2_send_msg,w,c
  7753  0010A4  0B03               	andlw	3
  7754  0010A6  6EDF               	movwf	indf2,c
  7755                           
  7756                           ;messages.c: 59: qmsg->full = 1;
  7757  0010A8  C041  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7758  0010AC  C042  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7759  0010B0  0E01               	movlw	1
  7760  0010B2  6EDF               	movwf	indf2,c
  7761                           
  7762                           ;messages.c: 60: return (1);
  7763  0010B4  0E01               	movlw	1
  7764  0010B6  0012               	return	
  7765  0010B8                     __end_ofi2_send_msg:
  7766                           	opt stack 0
  7767                           pclatu	equ	0xFFB
  7768                           pclath	equ	0xFFA
  7769                           tblptru	equ	0xFF8
  7770                           tblptrh	equ	0xFF7
  7771                           tblptrl	equ	0xFF6
  7772                           tablat	equ	0xFF5
  7773                           prodh	equ	0xFF4
  7774                           prodl	equ	0xFF3
  7775                           intcon	equ	0xFF2
  7776                           intcon2	equ	0xFF1
  7777                           postinc0	equ	0xFEE
  7778                           fsr0h	equ	0xFEA
  7779                           fsr0l	equ	0xFE9
  7780                           wreg	equ	0xFE8
  7781                           indf1	equ	0xFE7
  7782                           fsr1h	equ	0xFE2
  7783                           fsr1l	equ	0xFE1
  7784                           bsr	equ	0xFE0
  7785                           indf2	equ	0xFDF
  7786                           postinc2	equ	0xFDE
  7787                           postdec2	equ	0xFDD
  7788                           fsr2h	equ	0xFDA
  7789                           fsr2l	equ	0xFD9
  7790                           status	equ	0xFD8
  7791                           
  7792 ;; *************** function i2_memcpy *****************
  7793 ;; Defined at:
  7794 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  7795 ;; Parameters:    Size  Location     Type
  7796 ;;  d1              2   44[COMRAM] PTR void 
  7797 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7798 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7799 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  7800 ;;  s1              2   46[COMRAM] PTR const void 
  7801 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7802 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7803 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  7804 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7805 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  7806 ;;  n               2   48[COMRAM] unsigned int 
  7807 ;; Auto vars:     Size  Location     Type
  7808 ;;  memcpy          2   52[COMRAM] PTR const unsigned char 
  7809 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7810 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7811 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  7812 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7813 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  7814 ;;  memcpy          2   50[COMRAM] PTR unsigned char 
  7815 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7816 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7817 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  7818 ;; Return value:  Size  Location     Type
  7819 ;;                  2   44[COMRAM] PTR void 
  7820 ;; Registers used:
  7821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7822 ;; Tracked objects:
  7823 ;;		On entry : 0/0
  7824 ;;		On exit  : 0/0
  7825 ;;		Unchanged: 0/0
  7826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7827 ;;      Params:         6       0       0       0       0
  7828 ;;      Locals:         4       0       0       0       0
  7829 ;;      Temps:          0       0       0       0       0
  7830 ;;      Totals:        10       0       0       0       0
  7831 ;;Total ram usage:       10 bytes
  7832 ;; Hardware stack levels used:    1
  7833 ;; This function calls:
  7834 ;;		Nothing
  7835 ;; This function is called by:
  7836 ;;		i2_send_msg
  7837 ;; This function uses a non-reentrant model
  7838 ;;
  7839                           
  7840                           	psect	text45
  7841  001880                     __ptext45:
  7842                           	opt stack 0
  7843  001880                     i2_memcpy:
  7844                           	opt stack 16
  7845                           
  7846                           ;incstack = 0
  7847  001880  C030  F036         	movff	i2memcpy@s1+1,i2memcpy@s+1
  7848  001884  C02F  F035         	movff	i2memcpy@s1,i2memcpy@s
  7849  001888  C02E  F034         	movff	i2memcpy@d1+1,i2memcpy@d+1
  7850  00188C  C02D  F033         	movff	i2memcpy@d1,i2memcpy@d
  7851  001890  D00E               	goto	i2l3331
  7852  001892                     i2l3325:
  7853  001892  C035  FFD9         	movff	i2memcpy@s,fsr2l
  7854  001896  C036  FFDA         	movff	i2memcpy@s+1,fsr2h
  7855  00189A  C033  FFE1         	movff	i2memcpy@d,fsr1l
  7856  00189E  C034  FFE2         	movff	i2memcpy@d+1,fsr1h
  7857  0018A2  CFDF FFE7          	movff	indf2,indf1
  7858  0018A6  4A35               	infsnz	i2memcpy@s,f,c
  7859  0018A8  2A36               	incf	i2memcpy@s+1,f,c
  7860  0018AA  4A33               	infsnz	i2memcpy@d,f,c
  7861  0018AC  2A34               	incf	i2memcpy@d+1,f,c
  7862  0018AE                     i2l3331:
  7863  0018AE  0631               	decf	i2memcpy@n,f,c
  7864  0018B0  A0D8               	btfss	status,0,c
  7865  0018B2  0632               	decf	i2memcpy@n+1,f,c
  7866  0018B4  2831               	incf	i2memcpy@n& (0+255),w,c
  7867  0018B6  B4D8               	btfsc	status,2,c
  7868  0018B8  2832               	incf	(i2memcpy@n+1)& (0+255),w,c
  7869  0018BA  B4D8               	btfsc	status,2,c
  7870                           
  7871                           ;	Return value of i2_memcpy is never used
  7872  0018BC  0012               	return	
  7873  0018BE  D7E9               	goto	i2l3325
  7874  0018C0                     __end_ofi2_memcpy:
  7875                           	opt stack 0
  7876                           pclatu	equ	0xFFB
  7877                           pclath	equ	0xFFA
  7878                           tblptru	equ	0xFF8
  7879                           tblptrh	equ	0xFF7
  7880                           tblptrl	equ	0xFF6
  7881                           tablat	equ	0xFF5
  7882                           prodh	equ	0xFF4
  7883                           prodl	equ	0xFF3
  7884                           intcon	equ	0xFF2
  7885                           intcon2	equ	0xFF1
  7886                           postinc0	equ	0xFEE
  7887                           fsr0h	equ	0xFEA
  7888                           fsr0l	equ	0xFE9
  7889                           wreg	equ	0xFE8
  7890                           indf1	equ	0xFE7
  7891                           fsr1h	equ	0xFE2
  7892                           fsr1l	equ	0xFE1
  7893                           bsr	equ	0xFE0
  7894                           indf2	equ	0xFDF
  7895                           postinc2	equ	0xFDE
  7896                           postdec2	equ	0xFDD
  7897                           fsr2h	equ	0xFDA
  7898                           fsr2l	equ	0xFD9
  7899                           status	equ	0xFD8
  7900                           
  7901 ;; *************** function _SleepIfOkay *****************
  7902 ;; Defined at:
  7903 ;;		line 228 in file "../src/messages.c"
  7904 ;; Parameters:    Size  Location     Type
  7905 ;;		None
  7906 ;; Auto vars:     Size  Location     Type
  7907 ;;		None
  7908 ;; Return value:  Size  Location     Type
  7909 ;;		None               void
  7910 ;; Registers used:
  7911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7912 ;; Tracked objects:
  7913 ;;		On entry : 0/0
  7914 ;;		On exit  : 0/0
  7915 ;;		Unchanged: 0/0
  7916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7917 ;;      Params:         0       0       0       0       0
  7918 ;;      Locals:         0       0       0       0       0
  7919 ;;      Temps:          0       0       0       0       0
  7920 ;;      Totals:         0       0       0       0       0
  7921 ;;Total ram usage:        0 bytes
  7922 ;; Hardware stack levels used:    1
  7923 ;; Hardware stack levels required when called:    2
  7924 ;; This function calls:
  7925 ;;		_enter_sleep_mode
  7926 ;;		i2_check_msg
  7927 ;;		i2_in_high_int
  7928 ;;		i2_in_low_int
  7929 ;; This function is called by:
  7930 ;;		_InterruptHandlerHigh
  7931 ;; This function uses a non-reentrant model
  7932 ;;
  7933                           
  7934                           	psect	text46
  7935  0016E4                     __ptext46:
  7936                           	opt stack 0
  7937  0016E4                     _SleepIfOkay:
  7938                           	opt stack 17
  7939                           
  7940                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  7941                           
  7942                           ;incstack = 0
  7943  0016E4  664E               	tstfsz	_MQ_Main_Willing_to_block,c
  7944  0016E6  D001               	goto	i2l3201
  7945  0016E8  0012               	return	
  7946  0016EA                     i2l3201:
  7947                           
  7948                           ;messages.c: 232: }
  7949                           ;messages.c: 235: if (in_low_int()) {
  7950  0016EA  ECCF  F00C         	call	i2_in_low_int	;wreg free
  7951  0016EE  5030               	movf	?i2_in_low_int+1,w,c
  7952  0016F0  102F               	iorwf	?i2_in_low_int,w,c
  7953  0016F2  A4D8               	btfss	status,2,c
  7954  0016F4  0012               	return	
  7955                           
  7956                           ;messages.c: 237: }
  7957                           ;messages.c: 240: if (!in_high_int()) {
  7958                           
  7959                           ;messages.c: 236: return;
  7960  0016F6  EC91  F00D         	call	i2_in_high_int	;wreg free
  7961  0016FA  502E               	movf	?i2_in_high_int+1,w,c
  7962  0016FC  102D               	iorwf	?i2_in_high_int,w,c
  7963  0016FE  B4D8               	btfsc	status,2,c
  7964  001700  0012               	return	
  7965                           
  7966                           ;messages.c: 242: }
  7967                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  7968                           
  7969                           ;messages.c: 241: return;
  7970  001702  0101               	movlb	1	; () banked
  7971  001704  0E01               	movlw	high _ToMainHigh_MQ
  7972  001706  6E2E               	movwf	i2check_msg@qptr+1,c
  7973  001708  0101               	movlb	1	; () banked
  7974  00170A  0E36               	movlw	low _ToMainHigh_MQ
  7975  00170C  6E2D               	movwf	i2check_msg@qptr,c
  7976  00170E  EC35  F00D         	call	i2_check_msg	;wreg free
  7977  001712  0900               	iorlw	0
  7978  001714  A4D8               	btfss	status,2,c
  7979  001716  0012               	return	
  7980                           
  7981                           ;messages.c: 249: }
  7982                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  7983                           
  7984                           ;messages.c: 248: return;
  7985  001718  0101               	movlb	1	; () banked
  7986  00171A  0E01               	movlw	high _ToMainLow_MQ
  7987  00171C  6E2E               	movwf	i2check_msg@qptr+1,c
  7988  00171E  0101               	movlb	1	; () banked
  7989  001720  0E6C               	movlw	low _ToMainLow_MQ
  7990  001722  6E2D               	movwf	i2check_msg@qptr,c
  7991  001724  EC35  F00D         	call	i2_check_msg	;wreg free
  7992  001728  0900               	iorlw	0
  7993  00172A  B4D8               	btfsc	status,2,c
  7994                           
  7995                           ;messages.c: 252: }
  7996                           ;messages.c: 253: enter_sleep_mode();
  7997                           
  7998                           ;messages.c: 251: return;
  7999  00172C  EC9C  F00D         	call	_enter_sleep_mode	;wreg free
  8000  001730  0012               	return	
  8001  001732                     __end_of_SleepIfOkay:
  8002                           	opt stack 0
  8003                           pclatu	equ	0xFFB
  8004                           pclath	equ	0xFFA
  8005                           tblptru	equ	0xFF8
  8006                           tblptrh	equ	0xFF7
  8007                           tblptrl	equ	0xFF6
  8008                           tablat	equ	0xFF5
  8009                           prodh	equ	0xFF4
  8010                           prodl	equ	0xFF3
  8011                           intcon	equ	0xFF2
  8012                           intcon2	equ	0xFF1
  8013                           postinc0	equ	0xFEE
  8014                           fsr0h	equ	0xFEA
  8015                           fsr0l	equ	0xFE9
  8016                           wreg	equ	0xFE8
  8017                           indf1	equ	0xFE7
  8018                           fsr1h	equ	0xFE2
  8019                           fsr1l	equ	0xFE1
  8020                           bsr	equ	0xFE0
  8021                           indf2	equ	0xFDF
  8022                           postinc2	equ	0xFDE
  8023                           postdec2	equ	0xFDD
  8024                           fsr2h	equ	0xFDA
  8025                           fsr2l	equ	0xFD9
  8026                           status	equ	0xFD8
  8027                           
  8028 ;; *************** function i2_in_low_int *****************
  8029 ;; Defined at:
  8030 ;;		line 61 in file "../src/interrupts.c"
  8031 ;; Parameters:    Size  Location     Type
  8032 ;;		None
  8033 ;; Auto vars:     Size  Location     Type
  8034 ;;		None
  8035 ;; Return value:  Size  Location     Type
  8036 ;;                  2   46[COMRAM] int 
  8037 ;; Registers used:
  8038 ;;		wreg, status,2, status,0, cstack
  8039 ;; Tracked objects:
  8040 ;;		On entry : 0/0
  8041 ;;		On exit  : 0/0
  8042 ;;		Unchanged: 0/0
  8043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8044 ;;      Params:         2       0       0       0       0
  8045 ;;      Locals:         0       0       0       0       0
  8046 ;;      Temps:          0       0       0       0       0
  8047 ;;      Totals:         2       0       0       0       0
  8048 ;;Total ram usage:        2 bytes
  8049 ;; Hardware stack levels used:    1
  8050 ;; Hardware stack levels required when called:    1
  8051 ;; This function calls:
  8052 ;;		i2_in_high_int
  8053 ;; This function is called by:
  8054 ;;		_SleepIfOkay
  8055 ;; This function uses a non-reentrant model
  8056 ;;
  8057                           
  8058                           	psect	text47
  8059  00199E                     __ptext47:
  8060                           	opt stack 0
  8061  00199E                     i2_in_low_int:
  8062                           	opt stack 17
  8063                           
  8064                           ;interrupts.c: 62: if (INTCONbits.GIEL == 1) {
  8065                           
  8066                           ;incstack = 0
  8067  00199E  ACF2               	btfss	intcon,6,c	;volatile
  8068  0019A0  D005               	goto	i2l3309
  8069                           
  8070                           ;interrupts.c: 63: return (0);
  8071  0019A2  0E00               	movlw	0
  8072  0019A4  6E30               	movwf	?i2_in_low_int+1,c
  8073  0019A6  0E00               	movlw	0
  8074  0019A8  6E2F               	movwf	?i2_in_low_int,c
  8075  0019AA  0012               	return	
  8076  0019AC                     i2l3309:
  8077  0019AC  EC91  F00D         	call	i2_in_high_int	;wreg free
  8078  0019B0  502E               	movf	?i2_in_high_int+1,w,c
  8079  0019B2  102D               	iorwf	?i2_in_high_int,w,c
  8080  0019B4  B4D8               	btfsc	status,2,c
  8081  0019B6  D005               	goto	i2l3317
  8082                           
  8083                           ;interrupts.c: 65: return (0);
  8084  0019B8  0E00               	movlw	0
  8085  0019BA  6E30               	movwf	?i2_in_low_int+1,c
  8086  0019BC  0E00               	movlw	0
  8087  0019BE  6E2F               	movwf	?i2_in_low_int,c
  8088  0019C0  0012               	return	
  8089  0019C2                     i2l3317:
  8090                           
  8091                           ;interrupts.c: 67: return (1);
  8092  0019C2  0E00               	movlw	0
  8093  0019C4  6E30               	movwf	?i2_in_low_int+1,c
  8094  0019C6  0E01               	movlw	1
  8095  0019C8  6E2F               	movwf	?i2_in_low_int,c
  8096  0019CA  0012               	return	
  8097  0019CC                     __end_ofi2_in_low_int:
  8098                           	opt stack 0
  8099                           pclatu	equ	0xFFB
  8100                           pclath	equ	0xFFA
  8101                           tblptru	equ	0xFF8
  8102                           tblptrh	equ	0xFF7
  8103                           tblptrl	equ	0xFF6
  8104                           tablat	equ	0xFF5
  8105                           prodh	equ	0xFF4
  8106                           prodl	equ	0xFF3
  8107                           intcon	equ	0xFF2
  8108                           intcon2	equ	0xFF1
  8109                           postinc0	equ	0xFEE
  8110                           fsr0h	equ	0xFEA
  8111                           fsr0l	equ	0xFE9
  8112                           wreg	equ	0xFE8
  8113                           indf1	equ	0xFE7
  8114                           fsr1h	equ	0xFE2
  8115                           fsr1l	equ	0xFE1
  8116                           bsr	equ	0xFE0
  8117                           indf2	equ	0xFDF
  8118                           postinc2	equ	0xFDE
  8119                           postdec2	equ	0xFDD
  8120                           fsr2h	equ	0xFDA
  8121                           fsr2l	equ	0xFD9
  8122                           status	equ	0xFD8
  8123                           
  8124 ;; *************** function i2_in_high_int *****************
  8125 ;; Defined at:
  8126 ;;		line 53 in file "../src/interrupts.c"
  8127 ;; Parameters:    Size  Location     Type
  8128 ;;		None
  8129 ;; Auto vars:     Size  Location     Type
  8130 ;;		None
  8131 ;; Return value:  Size  Location     Type
  8132 ;;                  2   44[COMRAM] int 
  8133 ;; Registers used:
  8134 ;;		wreg, status,2
  8135 ;; Tracked objects:
  8136 ;;		On entry : 0/0
  8137 ;;		On exit  : 0/0
  8138 ;;		Unchanged: 0/0
  8139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8140 ;;      Params:         2       0       0       0       0
  8141 ;;      Locals:         0       0       0       0       0
  8142 ;;      Temps:          0       0       0       0       0
  8143 ;;      Totals:         2       0       0       0       0
  8144 ;;Total ram usage:        2 bytes
  8145 ;; Hardware stack levels used:    1
  8146 ;; This function calls:
  8147 ;;		Nothing
  8148 ;; This function is called by:
  8149 ;;		_SleepIfOkay
  8150 ;;		i2_in_low_int
  8151 ;; This function uses a non-reentrant model
  8152 ;;
  8153                           
  8154                           	psect	text48
  8155  001B22                     __ptext48:
  8156                           	opt stack 0
  8157  001B22                     i2_in_high_int:
  8158                           	opt stack 17
  8159                           
  8160                           ;interrupts.c: 54: return (!INTCONbits.GIEH);
  8161                           
  8162                           ;incstack = 0
  8163  001B22  0E00               	movlw	0
  8164  001B24  AEF2               	btfss	intcon,7,c	;volatile
  8165  001B26  0E01               	movlw	1
  8166  001B28  6E2D               	movwf	?i2_in_high_int,c
  8167  001B2A  6A2E               	clrf	?i2_in_high_int+1,c
  8168  001B2C  0012               	return	
  8169  001B2E                     __end_ofi2_in_high_int:
  8170                           	opt stack 0
  8171                           pclatu	equ	0xFFB
  8172                           pclath	equ	0xFFA
  8173                           tblptru	equ	0xFF8
  8174                           tblptrh	equ	0xFF7
  8175                           tblptrl	equ	0xFF6
  8176                           tablat	equ	0xFF5
  8177                           prodh	equ	0xFF4
  8178                           prodl	equ	0xFF3
  8179                           intcon	equ	0xFF2
  8180                           intcon2	equ	0xFF1
  8181                           postinc0	equ	0xFEE
  8182                           fsr0h	equ	0xFEA
  8183                           fsr0l	equ	0xFE9
  8184                           wreg	equ	0xFE8
  8185                           indf1	equ	0xFE7
  8186                           fsr1h	equ	0xFE2
  8187                           fsr1l	equ	0xFE1
  8188                           bsr	equ	0xFE0
  8189                           indf2	equ	0xFDF
  8190                           postinc2	equ	0xFDE
  8191                           postdec2	equ	0xFDD
  8192                           fsr2h	equ	0xFDA
  8193                           fsr2l	equ	0xFD9
  8194                           status	equ	0xFD8
  8195                           
  8196 ;; *************** function i2_check_msg *****************
  8197 ;; Defined at:
  8198 ;;		line 222 in file "../src/messages.c"
  8199 ;; Parameters:    Size  Location     Type
  8200 ;;  qptr            2   44[COMRAM] PTR struct __msg_queue
  8201 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8202 ;; Auto vars:     Size  Location     Type
  8203 ;;		None
  8204 ;; Return value:  Size  Location     Type
  8205 ;;                  1    wreg      unsigned char 
  8206 ;; Registers used:
  8207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8208 ;; Tracked objects:
  8209 ;;		On entry : 0/0
  8210 ;;		On exit  : 0/0
  8211 ;;		Unchanged: 0/0
  8212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8213 ;;      Params:         2       0       0       0       0
  8214 ;;      Locals:         0       0       0       0       0
  8215 ;;      Temps:          1       0       0       0       0
  8216 ;;      Totals:         3       0       0       0       0
  8217 ;;Total ram usage:        3 bytes
  8218 ;; Hardware stack levels used:    1
  8219 ;; This function calls:
  8220 ;;		Nothing
  8221 ;; This function is called by:
  8222 ;;		_SleepIfOkay
  8223 ;; This function uses a non-reentrant model
  8224 ;;
  8225                           
  8226                           	psect	text49
  8227  001A6A                     __ptext49:
  8228                           	opt stack 0
  8229  001A6A                     i2_check_msg:
  8230                           	opt stack 18
  8231                           
  8232                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8233                           
  8234                           ;incstack = 0
  8235  001A6A  EE20 F035          	lfsr	2,53
  8236  001A6E  502D               	movf	i2check_msg@qptr,w,c
  8237  001A70  26D9               	addwf	fsr2l,f,c
  8238  001A72  502E               	movf	i2check_msg@qptr+1,w,c
  8239  001A74  22DA               	addwfc	fsr2h,f,c
  8240  001A76  50DF               	movf	indf2,w,c
  8241  001A78  6E2F               	movwf	??i2_check_msg& (0+255),c
  8242  001A7A  502F               	movf	??i2_check_msg,w,c
  8243  001A7C  0D0D               	mullw	13
  8244  001A7E  50F3               	movf	prodl,w,c
  8245  001A80  242D               	addwf	i2check_msg@qptr,w,c
  8246  001A82  6ED9               	movwf	fsr2l,c
  8247  001A84  50F4               	movf	prodh,w,c
  8248  001A86  202E               	addwfc	i2check_msg@qptr+1,w,c
  8249  001A88  6EDA               	movwf	fsr2h,c
  8250  001A8A  50DF               	movf	indf2,w,c
  8251  001A8C  0012               	return	
  8252  001A8E                     __end_ofi2_check_msg:
  8253                           	opt stack 0
  8254                           pclatu	equ	0xFFB
  8255                           pclath	equ	0xFFA
  8256                           tblptru	equ	0xFF8
  8257                           tblptrh	equ	0xFF7
  8258                           tblptrl	equ	0xFF6
  8259                           tablat	equ	0xFF5
  8260                           prodh	equ	0xFF4
  8261                           prodl	equ	0xFF3
  8262                           intcon	equ	0xFF2
  8263                           intcon2	equ	0xFF1
  8264                           postinc0	equ	0xFEE
  8265                           fsr0h	equ	0xFEA
  8266                           fsr0l	equ	0xFE9
  8267                           wreg	equ	0xFE8
  8268                           indf1	equ	0xFE7
  8269                           fsr1h	equ	0xFE2
  8270                           fsr1l	equ	0xFE1
  8271                           bsr	equ	0xFE0
  8272                           indf2	equ	0xFDF
  8273                           postinc2	equ	0xFDE
  8274                           postdec2	equ	0xFDD
  8275                           fsr2h	equ	0xFDA
  8276                           fsr2l	equ	0xFD9
  8277                           status	equ	0xFD8
  8278                           
  8279 ;; *************** function _enter_sleep_mode *****************
  8280 ;; Defined at:
  8281 ;;		line 202 in file "../src/messages.c"
  8282 ;; Parameters:    Size  Location     Type
  8283 ;;		None
  8284 ;; Auto vars:     Size  Location     Type
  8285 ;;		None
  8286 ;; Return value:  Size  Location     Type
  8287 ;;		None               void
  8288 ;; Registers used:
  8289 ;;		None
  8290 ;; Tracked objects:
  8291 ;;		On entry : 0/0
  8292 ;;		On exit  : 0/0
  8293 ;;		Unchanged: 0/0
  8294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8295 ;;      Params:         0       0       0       0       0
  8296 ;;      Locals:         0       0       0       0       0
  8297 ;;      Temps:          0       0       0       0       0
  8298 ;;      Totals:         0       0       0       0       0
  8299 ;;Total ram usage:        0 bytes
  8300 ;; Hardware stack levels used:    1
  8301 ;; This function calls:
  8302 ;;		Nothing
  8303 ;; This function is called by:
  8304 ;;		_SleepIfOkay
  8305 ;; This function uses a non-reentrant model
  8306 ;;
  8307                           
  8308                           	psect	text50
  8309  001B38                     __ptext50:
  8310                           	opt stack 0
  8311  001B38                     _enter_sleep_mode:
  8312                           	opt stack 18
  8313                           
  8314                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8315                           
  8316                           ;incstack = 0
  8317  001B38  8ED3               	bsf	4051,7,c	;volatile
  8318  001B3A  0003               	sleep		;# 
  8319  001B3C  0012               	return	
  8320  001B3E                     __end_of_enter_sleep_mode:
  8321                           	opt stack 0
  8322                           pclatu	equ	0xFFB
  8323                           pclath	equ	0xFFA
  8324                           tblptru	equ	0xFF8
  8325                           tblptrh	equ	0xFF7
  8326                           tblptrl	equ	0xFF6
  8327                           tablat	equ	0xFF5
  8328                           prodh	equ	0xFF4
  8329                           prodl	equ	0xFF3
  8330                           intcon	equ	0xFF2
  8331                           intcon2	equ	0xFF1
  8332                           postinc0	equ	0xFEE
  8333                           fsr0h	equ	0xFEA
  8334                           fsr0l	equ	0xFE9
  8335                           wreg	equ	0xFE8
  8336                           indf1	equ	0xFE7
  8337                           fsr1h	equ	0xFE2
  8338                           fsr1l	equ	0xFE1
  8339                           bsr	equ	0xFE0
  8340                           indf2	equ	0xFDF
  8341                           postinc2	equ	0xFDE
  8342                           postdec2	equ	0xFDD
  8343                           fsr2h	equ	0xFDA
  8344                           fsr2l	equ	0xFD9
  8345                           status	equ	0xFD8
  8346                           
  8347 ;; *************** function _ReadADC *****************
  8348 ;; Defined at:
  8349 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcread.c"
  8350 ;; Parameters:    Size  Location     Type
  8351 ;;		None
  8352 ;; Auto vars:     Size  Location     Type
  8353 ;;		None
  8354 ;; Return value:  Size  Location     Type
  8355 ;;                  2   44[COMRAM] int 
  8356 ;; Registers used:
  8357 ;;		wreg, status,2
  8358 ;; Tracked objects:
  8359 ;;		On entry : 0/0
  8360 ;;		On exit  : 0/0
  8361 ;;		Unchanged: 0/0
  8362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8363 ;;      Params:         2       0       0       0       0
  8364 ;;      Locals:         0       0       0       0       0
  8365 ;;      Temps:          0       0       0       0       0
  8366 ;;      Totals:         2       0       0       0       0
  8367 ;;Total ram usage:        2 bytes
  8368 ;; Hardware stack levels used:    1
  8369 ;; This function calls:
  8370 ;;		Nothing
  8371 ;; This function is called by:
  8372 ;;		_InterruptHandlerHigh
  8373 ;; This function uses a non-reentrant model
  8374 ;;
  8375                           
  8376                           	psect	text51
  8377  001B2E                     __ptext51:
  8378                           	opt stack 0
  8379  001B2E                     _ReadADC:
  8380                           	opt stack 19
  8381                           
  8382                           ;incstack = 0
  8383  001B2E  50C4               	movf	4036,w,c	;volatile
  8384  001B30  6E2E               	movwf	?_ReadADC+1,c
  8385  001B32  50C3               	movf	4035,w,c	;volatile
  8386  001B34  6E2D               	movwf	?_ReadADC,c
  8387  001B36  0012               	return	
  8388  001B38                     __end_of_ReadADC:
  8389                           	opt stack 0
  8390  0000                     pclatu	equ	0xFFB
  8391                           pclath	equ	0xFFA
  8392                           tblptru	equ	0xFF8
  8393                           tblptrh	equ	0xFF7
  8394                           tblptrl	equ	0xFF6
  8395                           tablat	equ	0xFF5
  8396                           prodh	equ	0xFF4
  8397                           prodl	equ	0xFF3
  8398                           intcon	equ	0xFF2
  8399                           intcon2	equ	0xFF1
  8400                           postinc0	equ	0xFEE
  8401                           fsr0h	equ	0xFEA
  8402                           fsr0l	equ	0xFE9
  8403                           wreg	equ	0xFE8
  8404                           indf1	equ	0xFE7
  8405                           fsr1h	equ	0xFE2
  8406                           fsr1l	equ	0xFE1
  8407                           bsr	equ	0xFE0
  8408                           indf2	equ	0xFDF
  8409                           postinc2	equ	0xFDE
  8410                           postdec2	equ	0xFDD
  8411                           fsr2h	equ	0xFDA
  8412                           fsr2l	equ	0xFD9
  8413                           status	equ	0xFD8
  8414                           pclatu	equ	0xFFB
  8415                           pclath	equ	0xFFA
  8416                           tblptru	equ	0xFF8
  8417                           tblptrh	equ	0xFF7
  8418                           tblptrl	equ	0xFF6
  8419                           tablat	equ	0xFF5
  8420                           prodh	equ	0xFF4
  8421                           prodl	equ	0xFF3
  8422                           intcon	equ	0xFF2
  8423                           intcon2	equ	0xFF1
  8424                           postinc0	equ	0xFEE
  8425                           fsr0h	equ	0xFEA
  8426                           fsr0l	equ	0xFE9
  8427                           wreg	equ	0xFE8
  8428                           indf1	equ	0xFE7
  8429                           fsr1h	equ	0xFE2
  8430                           fsr1l	equ	0xFE1
  8431                           bsr	equ	0xFE0
  8432                           indf2	equ	0xFDF
  8433                           postinc2	equ	0xFDE
  8434                           postdec2	equ	0xFDD
  8435                           fsr2h	equ	0xFDA
  8436                           fsr2l	equ	0xFD9
  8437                           status	equ	0xFD8
  8438                           
  8439                           	psect	rparam
  8440  0000                     pclatu	equ	0xFFB
  8441                           pclath	equ	0xFFA
  8442                           tblptru	equ	0xFF8
  8443                           tblptrh	equ	0xFF7
  8444                           tblptrl	equ	0xFF6
  8445                           tablat	equ	0xFF5
  8446                           prodh	equ	0xFF4
  8447                           prodl	equ	0xFF3
  8448                           intcon	equ	0xFF2
  8449                           intcon2	equ	0xFF1
  8450                           postinc0	equ	0xFEE
  8451                           fsr0h	equ	0xFEA
  8452                           fsr0l	equ	0xFE9
  8453                           wreg	equ	0xFE8
  8454                           indf1	equ	0xFE7
  8455                           fsr1h	equ	0xFE2
  8456                           fsr1l	equ	0xFE1
  8457                           bsr	equ	0xFE0
  8458                           indf2	equ	0xFDF
  8459                           postinc2	equ	0xFDE
  8460                           postdec2	equ	0xFDD
  8461                           fsr2h	equ	0xFDA
  8462                           fsr2l	equ	0xFD9
  8463                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         460
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     72      83
    BANK0           128     77      79
    BANK1           256     53     215
    BANK2           256      0      54
    BANK3           256      0     237

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK1[11]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), timer0_int_handler@val(COMRAM[2]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK1[11]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), timer0_int_handler@val(COMRAM[2]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> main@t0thread_data(BANK1[2]), main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[5]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), NULL(NULL[0]), timer0_int_handler@val(COMRAM[2]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> main@t0thread_data(BANK1[2]), main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[5]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), NULL(NULL[0]), timer0_int_handler@val(COMRAM[2]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> main@ic(BANK1[28]), i2c_int_handler@error_buf(BANK0[3]), NULL(NULL[0]), timer0_int_handler@val(COMRAM[2]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> main@uc(BANK1[5]), NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> main@msgtype(BANK1[1]), timer0_int_handler@msgtype(COMRAM[2]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), timer0_int_handler@val(COMRAM[2]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK1[11]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), timer0_int_handler@val(COMRAM[2]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> main@t0thread_data(BANK1[2]), main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[5]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), NULL(NULL[0]), timer0_int_handler@val(COMRAM[2]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), i2c_int_handler@msgbuffer(BANK0[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), NULL(NULL[0]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), NULL(NULL[0]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    init_timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_i2c_int_handler
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_timer0_lthread
    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _timer0_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _initADC->_OpenADC
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0   12342
                                             76 BANK0      1     1      0
                                              0 BANK1     53    53      0
                         _OpenTimer0
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                            _initADC
                           _init_i2c
                        _init_queues
                _init_timer0_lthread
                _init_timer1_lthread
                     _init_uart_recv
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     344
                                             40 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    2583
                                             66 BANK0     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8    2583
                                             66 BANK0     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     263
                                             40 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    1975
                                             62 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1653
                                             50 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     168
                                             40 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      86
                                             40 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      86
                                             40 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer0_lthread                                  2     0      2      86
                                             40 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     390
                                             44 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     390
                                             40 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                             40 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initADC                                              4     4      0     283
                                             45 BANK0      4     4      0
                         _ConvertADC
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             40 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             40 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     270
                                             46 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             44 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             42 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             40 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                             40 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             40 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2077
                                             64 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2077
                                             64 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1883
                                             50 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     504
                                             40 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     284
                                             40 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             40 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    2416
                                             27 COMRAM    17    17      0
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    2416
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2393
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    1943
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               18    18      0    4229
                                             22 BANK0     18    18      0
                            _ReadADC
                        _SleepIfOkay
                    _i2c_int_handler
                       i2_ConvertADC
 ---------------------------------------------------------------------------------
 (11) i2_ConvertADC                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    24    24      0    3911
                                             70 COMRAM     2     2      0
                                              0 BANK0     22    22      0
                 _ToMainHigh_sendmsg
                       _handle_start
                     _returnADCValue
            i2_start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (12) i2_start_i2c_slave_reply                             5     3      2     318
                                             44 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (12) _returnADCValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      31
                                             44 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    2902
                                             66 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2347
                                             54 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     796
                                             44 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     284
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             46 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             44 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     284
                                             44 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ReadADC                                             2     0      2       0
                                             44 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _initADC
     _ConvertADC
     _OpenADC
   _init_i2c
   _init_queues
     _init_queue
   _init_timer0_lthread
   _init_timer1_lthread
   _init_uart_recv
   _start_i2c_slave_reply
   _timer0_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _ReadADC
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
     _returnADCValue
     i2_start_i2c_slave_reply
   i2_ConvertADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      ED      12       92.6%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      36       8       21.1%
BITBANK1           100      0       0      10        0.0%
BANK1              100     35      D7       6       84.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     4D      4F       5       61.7%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     48      53       1       65.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     29C       9        0.0%
DATA                 0      0     29C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sun Feb 09 20:34:19 2014

                main@uthread_data 01AD          _MQ_Main_Willing_to_block 004E  
                     _SSPSTATbits 000FC7         __end_of_ToMainLow_recvmsg 17FE  
                              bsr 000FE0         __end_of_ToMainLow_sendmsg 1A44  
                ??_returnADCValue 002D                      __CFG_CP0$OFF 000000  
                             l327 07E4                               l520 125E  
                             l521 1260                               l514 122E  
                             l444 1396                               l518 124E  
                             l519 1250                               l465 19F0  
                             l466 19F2                               l747 1ACE  
                  _FromMainLow_MQ 0100                               wreg 000FE8  
                    __CFG_IESO$ON 000000                      ?_in_high_int 00A8  
                ??_init_uart_recv 00AA                              l1059 130C  
                            l2231 0C36                              l2227 0BB2  
                            l2515 0A80                              l2611 1106  
                            l2603 10D8                              l2447 13E2  
                            l2633 17AC                              l2465 0D00  
                            l2721 0792                              l2713 0750  
                            l2619 1134                              l2731 07FC  
                            l2485 167A                              l2581 1746  
                            l2733 0814                              l2479 1656  
                            l2751 0934                              l2727 07EA  
                            l2745 0890                              l2737 0834  
                            l2499 09BA                              l2747 08E2  
                            l2739 0852                              l2589 1768  
                            l2861 12BC                              l2863 12C4  
                            l2785 1230                              l2777 121A  
                            l2867 12F8                              l2859 12AA  
                            _LATB 000F8A                              u1630 1142  
                            u2507 1AD0                              u1636 1144  
                            u1660 15DA                              u1666 15DC  
                 _FromMainHigh_MQ 0200                     __CFG_FCMEN$ON 000000  
          ?_block_on_To_msgqueues 0001                              _main 06A6  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            indf1 000FE7                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                     main@msgtype 01B9                        i1_send_msg 0F64  
                            pclat 000FFA                       i2_check_msg 1A6A  
                            prodh 000FF4                              prodl 000FF3  
           handle_start@data_read 002D                              start 00B0  
                   __CFG_FOSC2$ON 000000                        i2_send_msg 100E  
       ToMainHigh_recvmsg@msgtype 00C0                   __end_of_ReadADC 1B38  
                  send_msg@length 00B4     i2start_i2c_slave_reply@length 0031  
                 __end_of_OpenADC 139A                       _Delay1KTCYx 1ACA  
                           ?_main 0001                             _T0CON 000FD5  
                           i1l422 006A                             i2l111 0F18  
                           i2l121 04CE                   __end_of___lwmod 1316  
                      i1memcpy@d1 0001                             i2l123 0160  
                           i1l532 1ABA                             i2l141 0320  
                           i2l127 019E                             i2l155 04E0  
                           i2l149 044C                        i1memcpy@s1 0003  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR1H 000FCF  
                           _TMR0L 000FD6                             _TMR1L 000FCE  
                           _SPBRG 000FAF                             _TRISB 000F93  
                           _TXSTA 000FAC                        i2memcpy@d1 002D  
                      i2memcpy@s1 002F                      ?_init_queues 0001  
       __size_of_enter_sleep_mode 0006                   __end_of_initADC 1634  
                 __end_of_in_main 17BC        ToMainLow_recvmsg@maxlength 00C4  
         timer0_lthread@msgbuffer 00C8                        _ConvertADC 1B3E  
         i2c_configure_slave@addr 00A8                             tablat 000FF5  
                           status 000FD8                  __end_ofi1_memcpy 1880  
                __end_ofi2_memcpy 18C0                   __initialization 1692  
                    __end_of_main 094E        __size_of_ToMainLow_recvmsg 0042  
      __size_of_ToMainLow_sendmsg 0026             __size_ofi2_in_low_int 002E  
   __size_of_FromMainHigh_sendmsg 0036                            ??_main 00CC  
                 send_msg@msgtype 00B5                     __activetblptr 000002  
                 send_msg@tlength 00B9              __end_of_handle_start 0F64  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                            _ADRESH 000FC4  
                          _ADRESL 000FC3           ??_uart_recv_int_handler 001B  
                          i2l3201 16EA                            i2l3121 03D2  
                          i1l2945 186E                            i2l3035 0F34  
                          i1l2939 1852                            i2l3037 0F4C  
                          i2l3125 03E0                            i2l3053 0142  
                          i2l3119 0390                            i2l3153 04E4  
                          i2l3233 0AE8                            i2l3225 0ABE  
                          i1l2969 0F9C                        _OpenTimer0 19CC  
                          i2l3331 18AE                            i2l3147 04A2  
                          i2l3059 0156                            i2l3251 0B58  
                          i2l3317 19C2                            i2l3309 19AC  
                          i2l3325 1892                            i2l3077 01D2  
                          i1l2997 11DA                    __CFG_WDTEN$OFF 000000  
                          i2l3191 198A                            i2l3263 0E38  
                          i2l3175 0660                            i2l3167 05CA  
                          i2l3159 0544                            i2l3095 0252  
                          i2l3079 01FE                            i2l3247 0B40  
                          i2l3281 1046                            i2l3097 0292  
                          i2l3089 023A                            i2l3259 0DC4  
                          i2l3189 1986       __end_of_i2c_configure_slave 1A1E  
                   ??_SleepIfOkay 0031                __size_of_ReadUSART 001E  
                          _OSCCON 000FD3                            _SPBRGH 000FB0  
                          _SSPADD 000FC8                _sendingPlaceHolder 0052  
                          _SSPBUF 000FC9    __size_of_start_i2c_slave_reply 010E  
                     ?i1_send_msg 000B                         ??_ReadADC 002F  
   __end_of_start_i2c_slave_reply 0CA4                timer0_lthread@tptr 00C2  
                       ??_OpenADC 00AA                      i2_in_low_int 199E  
                     ?i2_send_msg 0037                    __CFG_XINST$OFF 000000  
              __size_of_OpenUSART 0092                   _i2c_int_handler 00B4  
                OpenTimer0@config 00A8                            _ic_ptr 00CD  
                       ??___lwmod 00AC                     main@msgbuffer 01A2  
                __end_of_init_i2c 15D0                            _memcpy 1634  
                          clear_0 1698                            clear_1 16A4  
                          clear_2 16B0                            clear_3 16BC  
                          _uc_ptr 0050                            main@ic 01BB  
                          main@uc 01B4                  __end_of_recv_msg 0A84  
     start_i2c_slave_reply@length 00AC                         ??_initADC 00AD  
                       ??_in_main 00AE                  __end_of_send_msg 0DA8  
                    __pdataCOMRAM 0052                   initADC@ADCValue 00AF  
         i2c_int_handler@i2c_data 0092                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                     init_queue@i 00AB          ?i2_start_i2c_slave_reply 002D  
        ToMainLow_recvmsg@msgtype 00C0              __size_of_in_high_int 0012  
                     ?_ConvertADC 0001                   __CFG_FOSC$HSPLL 000000  
                      __accesstop 0080           __end_of__initialization 16DA  
      __end_of_ToMainHigh_recvmsg 1840        __end_of_ToMainHigh_sendmsg 1A6A  
     __end_of_init_timer0_lthread 1B04       __end_of_init_timer1_lthread 1AF2  
             __end_of_SleepIfOkay 1732                    __pcstackCOMRAM 0001  
          __size_ofi2_in_high_int 000C                __size_of_check_msg 0036  
               __end_of_ReadUSART 1ACA               __size_ofi1_send_msg 00AA  
                       ?i1_memcpy 0001     __size_of_InterruptHandlerHigh 0B8E  
     __end_of_InterruptHandlerLow 00B0                         ?i2_memcpy 002D  
                   _ToMainHigh_MQ 0136                  _enter_sleep_mode 1B38  
             __size_ofi2_send_msg 00AA              timer1_lthread@length 00C6  
                   ReadUSART@data 0001                 __end_of_OpenUSART 128C  
                   check_msg@qptr 00A8              timer1_lthread@retval 00CB  
         ??_block_on_To_msgqueues 00AE              __size_of_init_queues 006E  
                      __pbssBANK1 0100                        __pbssBANK2 0200  
                      __pbssBANK3 0300                       ?_OpenTimer0 0001  
                      __pnvCOMRAM 0050           __end_of_i2c_int_handler 06A6  
                    ?i2_check_msg 002D                timer1_lthread@tptr 00C2  
               recv_msg@maxlength 00B4                   recv_msg@msgtype 00B5  
                 recv_msg@tlength 00BC             __size_of_handle_start 00C8  
                    ?_Delay1KTCYx 0001                           ?_memcpy 00A8  
             __size_of_ConvertADC 0004           __size_of_timer0_lthread 0072  
         __size_of_timer1_lthread 0072   __end_ofi2_start_i2c_slave_reply 0E9C  
                      ??i1_memcpy 0007                        ??i2_memcpy 0033  
      i2start_i2c_slave_reply@msg 002D                  i1send_msg@length 000D  
                   i2_in_high_int 1B22                           _SSPCON1 000FC6  
                         _SSPCON2 000FC5                           _SSPSTAT 000FC7  
               __end_of_check_msg 196A                         ?_init_i2c 00A8  
                     _SleepIfOkay 16E4                           _ReadADC 1B2E  
                       ?_recv_msg 00B2                           _OpenADC 1316  
                      _in_low_int 1732                      _handle_start 0E9C  
                         __Hparam 0000                         ?_send_msg 00B2  
                         __Lparam 0000                  init_uart_recv@uc 00A8  
                         ___lwmod 128C                   __CFG_STVREN$OFF 000000  
                         __pcinit 1692                   __size_of_memcpy 005E  
                      _init_queue 139A                           __ramtop 0400  
             __size_of_OpenTimer0 002A                           __ptext0 06A6  
                         __ptext1 18C0                           __ptext2 1414  
                         __ptext3 1486                           __ptext4 128C  
                         __ptext5 18FE                           __ptext6 0CA4  
                         __ptext7 0B96                           __ptext8 1A8E  
                         __ptext9 1AE0                         _T0CONbits 000FD5  
                         _initADC 15D0                           _in_main 1778  
                  ?i2_in_high_int 002D                    OpenADC@config2 00A8  
         __size_of_returnADCValue 0034                    __pintcode_body 0A84  
            end_of_initialization 16DA           timer1_lthread@msgbuffer 00C8  
    __end_of_FromMainHigh_sendmsg 1934                     ?i2_ConvertADC 0001  
  __size_of_uart_recv_int_handler 009C        FromMainHigh_sendmsg@length 00C1  
                         memcpy@d 00AE                           memcpy@n 00AC  
                         memcpy@s 00B0     __end_of_uart_recv_int_handler 11FA  
                      ??_init_i2c 00AA       i2c_int_handler@data_written 0090  
                   __Lmediumconst 0000                           int_func 0A84  
                    ??i1_send_msg 0011                     ?_uart_lthread 00A8  
         __size_of_init_uart_recv 001E                  ?_i2c_int_handler 0001  
                      ??_recv_msg 00B9                      ??i2_send_msg 003D  
                      ??_send_msg 00B8                         _RCSTAbits 000FAB  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE         ToMainHigh_sendmsg@msgtype 0043  
                      _responding 004B                __end_ofi1_send_msg 100E  
     FromMainHigh_sendmsg@msgtype 00BE                         _TRISBbits 000F93  
                       _TRISCbits 000F94                __end_ofi2_send_msg 10B8  
                  ??i2_ConvertADC 002D                      ??_ConvertADC 00A8  
                  ??_uart_lthread 00B0                         _TXSTAbits 000FAC  
                      main@length 01BA                       ?_in_low_int 00AA  
           timer0_lthread@msgtype 00C4  __size_ofi2_start_i2c_slave_reply 00F4  
                _arrayPlaceHolder 0049             _start_i2c_slave_reply 0B96  
    __size_of_i2c_configure_slave 0028              __size_ofi2_check_msg 0024  
        __end_of_enter_sleep_mode 1B3E                _ToMainHigh_recvmsg 17FE  
                       i1memcpy@d 0007                _ToMainHigh_sendmsg 1A44  
                       i1memcpy@n 0005                         i1memcpy@s 0009  
                   __pidataCOMRAM 1B46                    _timer0_lthread 1486  
                     ?_init_queue 00A8                         i2memcpy@d 0033  
                       i2memcpy@n 0031                         i2memcpy@s 0035  
              __end_of_ConvertADC 1B42                    _timer1_lthread 1414  
                  __end_of_memcpy 1692                 _enable_interrupts 1B16  
            __size_of_Delay1KTCYx 0016               ?_ToMainHigh_recvmsg 00C0  
                 ??i2_in_high_int 002F          i2c_int_handler@data_read 0095  
             ?_ToMainHigh_sendmsg 0043                ?_enable_interrupts 0001  
             start_initialization 1692                     ??_in_high_int 00AA  
                       _ReadUSART 1AAC                 __size_ofi1_memcpy 0040  
               __size_ofi2_memcpy 0040             i2c_int_handler@length 008B  
             ??_enable_interrupts 00A8                      ??_OpenTimer0 00A8  
  __size_of_block_on_To_msgqueues 00A6     __end_of_block_on_To_msgqueues 115E  
                       _OpenUSART 11FA      __end_of_InterruptHandlerHigh 0B96  
                      init_i2c@ic 00A8              ??_ToMainHigh_recvmsg 00C4  
            ??_ToMainHigh_sendmsg 0046            __end_of_timer0_lthread 14F8  
        i2c_int_handler@error_buf 008D            __end_of_timer1_lthread 1486  
       __end_of_enable_interrupts 1B22                          ??_memcpy 00AE  
           timer1_lthread@msgtype 00C4      __size_of_init_timer0_lthread 0012  
            _FromMainHigh_sendmsg 18FE      __size_of_init_timer1_lthread 0012  
              __end_of_OpenTimer0 19F6          i2c_int_handler@msg_ready 0094  
        i2c_int_handler@msgbuffer 0080                       __pbssCOMRAM 0049  
                      ?_ReadUSART 0001                     ??_init_queues 00AC  
                   __pcstackBANK0 0080                     __pcstackBANK1 01A2  
             __size_of_in_low_int 0046          start_i2c_slave_reply@msg 00A8  
                  _returnADCValue 196A               __CFG_CCP2MX$DEFAULT 000000  
                 Delay1KTCYx@unit 00A8          ToMainLow_sendmsg@msgtype 0017  
    __size_of_InterruptHandlerLow 0098               __end_of_in_high_int 1B16  
                      ?_OpenUSART 00A8                      ?_SleepIfOkay 0001  
           ToMainLow_recvmsg@data 00C2                      _ToMainLow_MQ 016C  
             __size_of_init_queue 007A                    _init_uart_recv 1A8E  
                        ?_ReadADC 002D                         _check_msg 1934  
                       __pnvBANK0 00CD            ?_start_i2c_slave_reply 00A8  
               __size_of_init_i2c 006A                 OpenADC@portconfig 00A9  
                        ?_OpenADC 00A8                      recv_msg@data 00B7  
                    recv_msg@qmsg 00BE                      recv_msg@slot 00BB  
                    recv_msg@qptr 00B2                 __size_of_recv_msg 0136  
                       __pintcode 0008                 __size_of_send_msg 0104  
                 ?_timer0_lthread 00C2                          ?___lwmod 00A8  
            __end_ofi2_ConvertADC 1B46                   ?_timer1_lthread 00C2  
           ?_FromMainHigh_sendmsg 00BE                       __pintcodelo 0018  
          ToMainHigh_recvmsg@data 00C2              __end_of_uart_lthread 18FE  
                        ?_initADC 0001        i2c_int_handler@msg_to_send 0093  
                        ?_in_main 00AC                          _ADCArray 0300  
             uart_lthread@msgtype 00AA                          _ADCValue 004D  
         init_timer0_lthread@tptr 00A8            __end_of_returnADCValue 199E  
           ToMainLow_sendmsg@data 0018                  uart_lthread@uptr 00A8  
          __end_of_init_uart_recv 1AAC               __end_of_init_queues 1566  
                   OpenADC@config 00AC                          _LATBbits 000F8A  
                 i2check_msg@qptr 002D                        ?_check_msg 00A8  
                        _IPR1bits 000F9F                          _PIE1bits 000F9D  
         i2_start_i2c_slave_reply 0DA8                     ?i2_in_low_int 002F  
                        i2u241_40 0ACC                          i2u241_46 0ACE  
                        _PIR1bits 000F9E            ToMainHigh_sendmsg@data 0044  
                        _RCONbits 000FD0                  __CFG_WDTPS$32768 000000  
      __size_of_enable_interrupts 000C                 i1send_msg@msgtype 000E  
               i1send_msg@tlength 0012                        _ADCON0bits 000FC2  
            timer0_lthread@length 00C6                          i1_memcpy 1840  
            _InterruptHandlerHigh 0008                       ??_ReadUSART 0001  
                        i2_memcpy 1880              timer0_lthread@retval 00CB  
                 ?_returnADCValue 0001                       _in_high_int 1B04  
                    send_msg@data 00B6               _i2c_configure_slave 19F6  
                    send_msg@qmsg 00BC                      send_msg@slot 00BB  
                    send_msg@qptr 00B2                       _INTCON2bits 000FF1  
           uart_lthread@msgbuffer 00AE                   ?_init_uart_recv 00A8  
                     ??_OpenUSART 00AA                   OpenUSART@config 00AD  
                  ??i2_in_low_int 0031             _uart_recv_int_handler 115E  
                    ??_in_low_int 00AC                  __size_of_ReadADC 000A  
                        __Hrparam 0000                  __size_of_OpenADC 0084  
            ?_i2c_configure_slave 0001                          __Lrparam 0000  
               ?_enter_sleep_mode 0001            ??_FromMainHigh_sendmsg 00C1  
        __size_of_i2c_int_handler 05F2                ??_enter_sleep_mode 002D  
                __size_of___lwmod 008A                      ??_init_queue 00AA  
        FromMainHigh_sendmsg@data 00BF           ToMainLow_sendmsg@length 001A  
               main@t0thread_data 01B2             ?_InterruptHandlerHigh 0001  
                __size_of_initADC 0064                  __size_of_in_main 0044  
               i2send_msg@msgtype 003A       ToMainHigh_recvmsg@maxlength 00C4  
               i2send_msg@tlength 003E           init_timer1_lthread@tptr 00A8  
                     _init_queues 14F8                __end_of_in_low_int 1778  
                        __ptext10 1AF2                          __ptext11 14F8  
                        __ptext20 1778                          __ptext12 139A  
                        __ptext21 1732                          __ptext13 1566  
                        __ptext30 19CC                          __ptext22 1B04  
                        __ptext14 15D0                          __ptext23 1934  
                        __ptext15 1316                          __ptext40 0DA8  
                        __ptext32 115E                          __ptext24 1ACA  
                        __ptext16 1B3E                          __ptext41 196A  
                        __ptext33 1A1E                          __ptext25 17BC  
                        __ptext17 19F6                          __ptext50 1B38  
                        __ptext42 0E9C                          __ptext34 0F64  
                        __ptext26 17FE                          __ptext18 1B16  
                        __ptext51 1B2E                          __ptext43 1A44  
                        __ptext35 1840                          __ptext27 094E  
                        __ptext19 10B8                          __ptext44 100E  
                        __ptext36 1AAC                          __ptext28 1634  
                        __ptext45 1880                          __ptext29 11FA  
                        __ptext46 16E4                          __ptext38 1B42  
                        __ptext47 199E                          __ptext39 00B4  
                        __ptext48 1B22                          __ptext49 1A6A  
                  i1send_msg@data 000F                    i1send_msg@qmsg 0015  
                  i1send_msg@slot 0014                    i1send_msg@qptr 000B  
              uart_lthread@length 00AC               _init_timer0_lthread 1AF2  
       ??i2_start_i2c_slave_reply 002F                          _init_i2c 1566  
             _init_timer1_lthread 1AE0                     __size_of_main 02A8  
                   ??i2_check_msg 002F                 main@t1thread_data 01B0  
                     ??_check_msg 00AA                __end_of_init_queue 1414  
            __size_of_SleepIfOkay 004E                          _recv_msg 094E  
           ??_i2c_configure_slave 00A8             __size_ofi2_ConvertADC 0004  
                        _send_msg 0CA4                    init_queue@qptr 00A8  
           __size_of_uart_lthread 003E                     ??_Delay1KTCYx 00A8  
            ?_init_timer0_lthread 00A8               _InterruptHandlerLow 0018  
            ?_init_timer1_lthread 00A8                       _OSCTUNEbits 000F9B  
                      _INTCONbits 000FF2                    OpenUSART@spbrg 00A8  
                        memcpy@d1 00A8                          memcpy@s1 00AA  
           __end_ofi2_in_high_int 1B2E      i2c_int_handler@overrun_error 0091  
                i2send_msg@length 0039                          intlevel1 0000  
                        intlevel2 0000                      i2_ConvertADC 1B42  
            ?_InterruptHandlerLow 0001           ??_start_i2c_slave_reply 00AA  
                ___lwmod@dividend 00A8            ?_uart_recv_int_handler 0001  
                    _uart_lthread 18C0             _block_on_To_msgqueues 10B8  
                   ?_handle_start 0001                  ??_timer0_lthread 00CA  
     __size_of_ToMainHigh_recvmsg 0042       __size_of_ToMainHigh_sendmsg 0026  
                      _OSCCONbits 000FD3                  ??_timer1_lthread 00CA  
        ToMainHigh_sendmsg@length 0046               __end_ofi2_check_msg 1A8E  
           ??_init_timer0_lthread 00AA             ??_init_timer1_lthread 00AA  
          ??_InterruptHandlerHigh 0096                 _ToMainLow_recvmsg 17BC  
               _ToMainLow_sendmsg 1A1E                main@last_reg_recvd 01AF  
                 ___lwmod@divisor 00AA              __end_ofi2_in_low_int 19CC  
              ?_ToMainLow_recvmsg 00C0               __end_of_Delay1KTCYx 1AE0  
               ??_i2c_int_handler 0047                   ___lwmod@counter 00AD  
              ?_ToMainLow_sendmsg 0017                       _SSPCON1bits 000FC6  
                     _SSPCON2bits 000FC5                    i2send_msg@data 003B  
           ??_InterruptHandlerLow 001C               ??_ToMainLow_recvmsg 00C4  
                  i2send_msg@qmsg 0041                    i2send_msg@slot 0040  
                  i2send_msg@qptr 0037               ??_ToMainLow_sendmsg 001A  
                  ??_handle_start 002D  InterruptHandlerHigh@pureADCValue 00A6  
                    _USART_Status 004F  



Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Feb 10 20:03:24 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    68  0000                     
    69                           	psect	idataCOMRAM
    70  001AAC                     __pidataCOMRAM:
    71                           	opt stack 0
    72                           
    73                           ;initializer for _sendingPlaceHolder
    74  001AAC  015E               	dw	350
    75  0000                     _ADCON0	set	4034
    76  0000                     _ADCON0bits	set	4034
    77  0000                     _ADCON1	set	4033
    78  0000                     _ADCON2	set	4032
    79  0000                     _ADRESH	set	4036
    80  0000                     _ADRESL	set	4035
    81  0000                     _INTCON2bits	set	4081
    82  0000                     _INTCONbits	set	4082
    83  0000                     _IPR1bits	set	3999
    84  0000                     _LATB	set	3978
    85  0000                     _LATBbits	set	3978
    86  0000                     _LATDbits	set	3980
    87  0000                     _OSCCON	set	4051
    88  0000                     _OSCCONbits	set	4051
    89  0000                     _OSCTUNEbits	set	3995
    90  0000                     _PIE1bits	set	3997
    91  0000                     _PIR1bits	set	3998
    92  0000                     _RCONbits	set	4048
    93  0000                     _RCREG	set	4014
    94  0000                     _RCSTA	set	4011
    95  0000                     _RCSTAbits	set	4011
    96  0000                     _SPBRG	set	4015
    97  0000                     _SPBRGH	set	4016
    98  0000                     _SSPADD	set	4040
    99  0000                     _SSPBUF	set	4041
   100  0000                     _SSPCON1	set	4038
   101  0000                     _SSPCON1bits	set	4038
   102  0000                     _SSPCON2	set	4037
   103  0000                     _SSPCON2bits	set	4037
   104  0000                     _SSPSTAT	set	4039
   105  0000                     _SSPSTATbits	set	4039
   106  0000                     _T0CON	set	4053
   107  0000                     _T0CONbits	set	4053
   108  0000                     _TMR0H	set	4055
   109  0000                     _TMR0L	set	4054
   110  0000                     _TMR1H	set	4047
   111  0000                     _TMR1L	set	4046
   112  0000                     _TRISB	set	3987
   113  0000                     _TRISCbits	set	3988
   114  0000                     _TRISDbits	set	3989
   115  0000                     _TXSTA	set	4012
   116  0000                     _TXSTAbits	set	4012
   117                           
   118                           	psect	nvCOMRAM
   119  00004F                     __pnvCOMRAM:
   120                           	opt stack 0
   121  00004F                     _uc_ptr:
   122                           	opt stack 0
   123  00004F                     	ds	2
   124                           
   125                           	psect	nvBANK0
   126  0000CD                     __pnvBANK0:
   127                           	opt stack 0
   128  0000CD                     _ic_ptr:
   129                           	opt stack 0
   130  0000CD                     	ds	2
   131                           
   132                           ; #config settings
   133  0000                     
   134                           	psect	cinit
   135  0015FC                     __pcinit:
   136                           	opt stack 0
   137  0015FC                     start_initialization:
   138                           	opt stack 0
   139  0015FC                     __initialization:
   140                           	opt stack 0
   141                           
   142                           ; Clear objects allocated to BIGRAM (350 bytes)
   143  0015FC  EE02  F036         	lfsr	0,__pbssBIGRAM
   144  001600  EE11 F05E          	lfsr	1,350
   145  001604                     clear_0:
   146  001604  6AEE               	clrf	postinc0,c
   147  001606  50E5               	movf	postdec1,w,c
   148  001608  50E1               	movf	fsr1l,w,c
   149  00160A  E1FC               	bnz	clear_0
   150  00160C  50E2               	movf	fsr1h,w,c
   151  00160E  E1FA               	bnz	clear_0
   152                           
   153                           ; Clear objects allocated to BANK2 (54 bytes)
   154  001610  EE02  F000         	lfsr	0,__pbssBANK2
   155  001614  0E36               	movlw	54
   156  001616                     clear_1:
   157  001616  6AEE               	clrf	postinc0,c
   158  001618  06E8               	decf	wreg,f,c
   159  00161A  E1FD               	bnz	clear_1
   160                           
   161                           ; Clear objects allocated to BANK1 (162 bytes)
   162  00161C  EE01  F000         	lfsr	0,__pbssBANK1
   163  001620  0EA2               	movlw	162
   164  001622                     clear_2:
   165  001622  6AEE               	clrf	postinc0,c
   166  001624  06E8               	decf	wreg,f,c
   167  001626  E1FD               	bnz	clear_2
   168                           
   169                           ; Clear objects allocated to BANK0 (1 bytes)
   170  001628  0100               	movlb	0
   171  00162A  6BCF               	clrf	__pbssBANK0& (0+255),b
   172                           
   173                           ; Clear objects allocated to COMRAM (6 bytes)
   174  00162C  6A4E               	clrf	(__pbssCOMRAM+5)& (0+255),c
   175  00162E  6A4D               	clrf	(__pbssCOMRAM+4)& (0+255),c
   176  001630  6A4C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   177  001632  6A4B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   178  001634  6A4A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   179  001636  6A49               	clrf	__pbssCOMRAM& (0+255),c
   180                           
   181                           ; Initialize objects allocated to COMRAM (2 bytes)
   182                           ; load TBLPTR registers with __pidataCOMRAM
   183  001638  0EAC               	movlw	low __pidataCOMRAM
   184  00163A  6EF6               	movwf	tblptrl,c
   185  00163C  0E1A               	movlw	high __pidataCOMRAM
   186  00163E  6EF7               	movwf	tblptrh,c
   187  001640  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   188  001642  6EF8               	movwf	tblptru,c
   189  001644  0009               	tblrd		*+	;fetch initializer
   190  001646  CFF5 F051          	movff	tablat,__pdataCOMRAM
   191  00164A  0009               	tblrd		*+	;fetch initializer
   192  00164C  CFF5 F052          	movff	tablat,__pdataCOMRAM+1
   193  001650                     end_of_initialization:
   194                           	opt stack 0
   195  001650                     __end_of__initialization:
   196                           	opt stack 0
   197  001650  0E00               	movlw	low (__Lmediumconst shr (0+16))
   198  001652  6EF8               	movwf	tblptru,c
   199  001654  0100               	movlb	0
   200  001656  EF53  F003         	goto	_main	;jump to C main() function
   201                           tblptru	equ	0xFF8
   202                           tblptrh	equ	0xFF7
   203                           tblptrl	equ	0xFF6
   204                           tablat	equ	0xFF5
   205                           postinc0	equ	0xFEE
   206                           wreg	equ	0xFE8
   207                           postdec1	equ	0xFE5
   208                           fsr1h	equ	0xFE2
   209                           fsr1l	equ	0xFE1
   210                           
   211                           	psect	bssCOMRAM
   212  000049                     __pbssCOMRAM:
   213                           	opt stack 0
   214  000049                     _arrayPlaceHolder:
   215                           	opt stack 0
   216  000049                     	ds	2
   217  00004B                     _responding:
   218                           	opt stack 0
   219  00004B                     	ds	2
   220  00004D                     _ADCValue:
   221                           	opt stack 0
   222  00004D                     	ds	1
   223  00004E                     _USART_Status:
   224                           	opt stack 0
   225  00004E                     	ds	1
   226                           tblptru	equ	0xFF8
   227                           tblptrh	equ	0xFF7
   228                           tblptrl	equ	0xFF6
   229                           tablat	equ	0xFF5
   230                           postinc0	equ	0xFEE
   231                           wreg	equ	0xFE8
   232                           postdec1	equ	0xFE5
   233                           fsr1h	equ	0xFE2
   234                           fsr1l	equ	0xFE1
   235                           
   236                           	psect	dataCOMRAM
   237  000051                     __pdataCOMRAM:
   238                           	opt stack 0
   239  000051                     _sendingPlaceHolder:
   240                           	opt stack 0
   241  000051                     	ds	2
   242                           tblptru	equ	0xFF8
   243                           tblptrh	equ	0xFF7
   244                           tblptrl	equ	0xFF6
   245                           tablat	equ	0xFF5
   246                           postinc0	equ	0xFEE
   247                           wreg	equ	0xFE8
   248                           postdec1	equ	0xFE5
   249                           fsr1h	equ	0xFE2
   250                           fsr1l	equ	0xFE1
   251                           
   252                           	psect	bssBANK0
   253  0000CF                     __pbssBANK0:
   254                           	opt stack 0
   255  0000CF                     _MQ_Main_Willing_to_block:
   256                           	opt stack 0
   257  0000CF                     	ds	1
   258                           tblptru	equ	0xFF8
   259                           tblptrh	equ	0xFF7
   260                           tblptrl	equ	0xFF6
   261                           tablat	equ	0xFF5
   262                           postinc0	equ	0xFEE
   263                           wreg	equ	0xFE8
   264                           postdec1	equ	0xFE5
   265                           fsr1h	equ	0xFE2
   266                           fsr1l	equ	0xFE1
   267                           
   268                           	psect	bssBANK1
   269  000100                     __pbssBANK1:
   270                           	opt stack 0
   271  000100                     _FromMainLow_MQ:
   272                           	opt stack 0
   273  000100                     	ds	54
   274  000136                     _ToMainHigh_MQ:
   275                           	opt stack 0
   276  000136                     	ds	54
   277  00016C                     _ToMainLow_MQ:
   278                           	opt stack 0
   279  00016C                     	ds	54
   280                           tblptru	equ	0xFF8
   281                           tblptrh	equ	0xFF7
   282                           tblptrl	equ	0xFF6
   283                           tablat	equ	0xFF5
   284                           postinc0	equ	0xFEE
   285                           wreg	equ	0xFE8
   286                           postdec1	equ	0xFE5
   287                           fsr1h	equ	0xFE2
   288                           fsr1l	equ	0xFE1
   289                           
   290                           	psect	bssBANK2
   291  000200                     __pbssBANK2:
   292                           	opt stack 0
   293  000200                     _FromMainHigh_MQ:
   294                           	opt stack 0
   295  000200                     	ds	54
   296                           tblptru	equ	0xFF8
   297                           tblptrh	equ	0xFF7
   298                           tblptrl	equ	0xFF6
   299                           tablat	equ	0xFF5
   300                           postinc0	equ	0xFEE
   301                           wreg	equ	0xFE8
   302                           postdec1	equ	0xFE5
   303                           fsr1h	equ	0xFE2
   304                           fsr1l	equ	0xFE1
   305                           
   306                           	psect	bssBIGRAM
   307  000236                     __pbssBIGRAM:
   308                           	opt stack 0
   309  000236                     _ADCArray:
   310                           	opt stack 0
   311  000236                     	ds	350
   312                           tblptru	equ	0xFF8
   313                           tblptrh	equ	0xFF7
   314                           tblptrl	equ	0xFF6
   315                           tablat	equ	0xFF5
   316                           postinc0	equ	0xFEE
   317                           wreg	equ	0xFE8
   318                           postdec1	equ	0xFE5
   319                           fsr1h	equ	0xFE2
   320                           fsr1l	equ	0xFE1
   321                           
   322                           	psect	cstackBANK1
   323  0001A2                     __pcstackBANK1:
   324                           	opt stack 0
   325  0001A2                     main@msgbuffer:
   326                           	opt stack 0
   327                           
   328                           ; 11 bytes @ 0x0
   329  0001A2                     	ds	11
   330  0001AD                     main@uthread_data:
   331                           	opt stack 0
   332                           
   333                           ; 2 bytes @ 0xB
   334  0001AD                     	ds	2
   335  0001AF                     main@last_reg_recvd:
   336                           	opt stack 0
   337                           
   338                           ; 1 bytes @ 0xD
   339  0001AF                     	ds	1
   340  0001B0                     main@t1thread_data:
   341                           	opt stack 0
   342                           
   343                           ; 2 bytes @ 0xE
   344  0001B0                     	ds	2
   345  0001B2                     main@t0thread_data:
   346                           	opt stack 0
   347                           
   348                           ; 2 bytes @ 0x10
   349  0001B2                     	ds	2
   350  0001B4                     main@uc:
   351                           	opt stack 0
   352                           
   353                           ; 5 bytes @ 0x12
   354  0001B4                     	ds	5
   355  0001B9                     main@msgtype:
   356                           	opt stack 0
   357                           
   358                           ; 1 bytes @ 0x17
   359  0001B9                     	ds	1
   360  0001BA                     main@length:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x18
   364  0001BA                     	ds	1
   365  0001BB                     main@ic:
   366                           	opt stack 0
   367                           
   368                           ; 28 bytes @ 0x19
   369  0001BB                     	ds	28
   370                           tblptru	equ	0xFF8
   371                           tblptrh	equ	0xFF7
   372                           tblptrl	equ	0xFF6
   373                           tablat	equ	0xFF5
   374                           postinc0	equ	0xFEE
   375                           wreg	equ	0xFE8
   376                           postdec1	equ	0xFE5
   377                           fsr1h	equ	0xFE2
   378                           fsr1l	equ	0xFE1
   379                           
   380                           	psect	cstackBANK0
   381  000080                     __pcstackBANK0:
   382                           	opt stack 0
   383  000080                     i2c_int_handler@msgbuffer:
   384                           	opt stack 0
   385                           
   386                           ; 11 bytes @ 0x0
   387  000080                     	ds	11
   388  00008B                     i2c_int_handler@length:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0xB
   392  00008B                     	ds	2
   393  00008D                     i2c_int_handler@error_buf:
   394                           	opt stack 0
   395                           
   396                           ; 3 bytes @ 0xD
   397  00008D                     	ds	3
   398  000090                     i2c_int_handler@data_written:
   399                           	opt stack 0
   400                           
   401                           ; 1 bytes @ 0x10
   402  000090                     	ds	1
   403  000091                     i2c_int_handler@overrun_error:
   404                           	opt stack 0
   405                           
   406                           ; 1 bytes @ 0x11
   407  000091                     	ds	1
   408  000092                     i2c_int_handler@i2c_data:
   409                           	opt stack 0
   410                           
   411                           ; 1 bytes @ 0x12
   412  000092                     	ds	1
   413  000093                     i2c_int_handler@msg_to_send:
   414                           	opt stack 0
   415                           
   416                           ; 1 bytes @ 0x13
   417  000093                     	ds	1
   418  000094                     i2c_int_handler@msg_ready:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0x14
   422  000094                     	ds	1
   423  000095                     i2c_int_handler@data_read:
   424                           	opt stack 0
   425                           
   426                           ; 1 bytes @ 0x15
   427  000095                     	ds	1
   428  000096                     ??_InterruptHandlerHigh:
   429                           
   430                           ; 0 bytes @ 0x16
   431  000096                     	ds	16
   432  0000A6                     InterruptHandlerHigh@pureADCValue:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x26
   436  0000A6                     	ds	2
   437  0000A8                     ?_in_high_int:
   438                           	opt stack 0
   439  0000A8                     ?___lwmod:
   440                           	opt stack 0
   441  0000A8                     i2c_configure_slave@addr:
   442                           	opt stack 0
   443  0000A8                     OpenADC@config2:
   444                           	opt stack 0
   445  0000A8                     OpenTimer0@config:
   446                           	opt stack 0
   447  0000A8                     Delay1KTCYx@unit:
   448                           	opt stack 0
   449  0000A8                     uart_lthread@uptr:
   450                           	opt stack 0
   451  0000A8                     init_timer1_lthread@tptr:
   452                           	opt stack 0
   453  0000A8                     init_timer0_lthread@tptr:
   454                           	opt stack 0
   455  0000A8                     init_uart_recv@uc:
   456                           	opt stack 0
   457  0000A8                     start_i2c_slave_reply@msg:
   458                           	opt stack 0
   459  0000A8                     init_i2c@ic:
   460                           	opt stack 0
   461  0000A8                     init_queue@qptr:
   462                           	opt stack 0
   463  0000A8                     check_msg@qptr:
   464                           	opt stack 0
   465  0000A8                     OpenUSART@spbrg:
   466                           	opt stack 0
   467  0000A8                     ___lwmod@dividend:
   468                           	opt stack 0
   469  0000A8                     memcpy@d1:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x28
   473  0000A8                     	ds	1
   474  0000A9                     OpenADC@portconfig:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0x29
   478  0000A9                     	ds	1
   479  0000AA                     ??_OpenADC:
   480  0000AA                     ??_OpenUSART:
   481  0000AA                     ??_start_i2c_slave_reply:
   482  0000AA                     ??_init_queue:
   483  0000AA                     ??_check_msg:
   484  0000AA                     ?_in_low_int:
   485                           	opt stack 0
   486  0000AA                     uart_lthread@msgtype:
   487                           	opt stack 0
   488  0000AA                     ___lwmod@divisor:
   489                           	opt stack 0
   490  0000AA                     memcpy@s1:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x2A
   494  0000AA                     	ds	1
   495  0000AB                     init_queue@i:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x2B
   499  0000AB                     	ds	1
   500  0000AC                     ??_init_queues:
   501  0000AC                     ??___lwmod:
   502  0000AC                     ?_in_main:
   503                           	opt stack 0
   504  0000AC                     start_i2c_slave_reply@length:
   505                           	opt stack 0
   506  0000AC                     OpenADC@config:
   507                           	opt stack 0
   508  0000AC                     uart_lthread@length:
   509                           	opt stack 0
   510  0000AC                     memcpy@n:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x2C
   514  0000AC                     	ds	1
   515  0000AD                     ??_initADC:
   516  0000AD                     OpenUSART@config:
   517                           	opt stack 0
   518  0000AD                     ___lwmod@counter:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0x2D
   522  0000AD                     	ds	1
   523  0000AE                     ??_block_on_To_msgqueues:
   524  0000AE                     uart_lthread@msgbuffer:
   525                           	opt stack 0
   526  0000AE                     memcpy@d:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x2E
   530  0000AE                     	ds	1
   531  0000AF                     initADC@ADCValue:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x2F
   535  0000AF                     	ds	1
   536  0000B0                     memcpy@s:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x30
   540  0000B0                     	ds	2
   541  0000B2                     send_msg@qptr:
   542                           	opt stack 0
   543  0000B2                     recv_msg@qptr:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0x32
   547  0000B2                     	ds	2
   548  0000B4                     send_msg@length:
   549                           	opt stack 0
   550  0000B4                     recv_msg@maxlength:
   551                           	opt stack 0
   552                           
   553                           ; 1 bytes @ 0x34
   554  0000B4                     	ds	1
   555  0000B5                     send_msg@msgtype:
   556                           	opt stack 0
   557  0000B5                     recv_msg@msgtype:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x35
   561  0000B5                     	ds	1
   562  0000B6                     send_msg@data:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x36
   566  0000B6                     	ds	1
   567  0000B7                     recv_msg@data:
   568                           	opt stack 0
   569                           
   570                           ; 2 bytes @ 0x37
   571  0000B7                     	ds	1
   572  0000B8                     ??_send_msg:
   573                           
   574                           ; 0 bytes @ 0x38
   575  0000B8                     	ds	1
   576  0000B9                     ??_recv_msg:
   577  0000B9                     send_msg@tlength:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x39
   581  0000B9                     	ds	2
   582  0000BB                     send_msg@slot:
   583                           	opt stack 0
   584  0000BB                     recv_msg@slot:
   585                           	opt stack 0
   586                           
   587                           ; 1 bytes @ 0x3B
   588  0000BB                     	ds	1
   589  0000BC                     send_msg@qmsg:
   590                           	opt stack 0
   591  0000BC                     recv_msg@tlength:
   592                           	opt stack 0
   593                           
   594                           ; 2 bytes @ 0x3C
   595  0000BC                     	ds	2
   596  0000BE                     FromMainHigh_sendmsg@msgtype:
   597                           	opt stack 0
   598  0000BE                     recv_msg@qmsg:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0x3E
   602  0000BE                     	ds	1
   603  0000BF                     FromMainHigh_sendmsg@data:
   604                           	opt stack 0
   605                           
   606                           ; 2 bytes @ 0x3F
   607  0000BF                     	ds	1
   608  0000C0                     ToMainLow_recvmsg@msgtype:
   609                           	opt stack 0
   610  0000C0                     ToMainHigh_recvmsg@msgtype:
   611                           	opt stack 0
   612                           
   613                           ; 2 bytes @ 0x40
   614  0000C0                     	ds	1
   615  0000C1                     FromMainHigh_sendmsg@length:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0x41
   619  0000C1                     	ds	1
   620  0000C2                     timer1_lthread@tptr:
   621                           	opt stack 0
   622  0000C2                     timer0_lthread@tptr:
   623                           	opt stack 0
   624  0000C2                     ToMainLow_recvmsg@data:
   625                           	opt stack 0
   626  0000C2                     ToMainHigh_recvmsg@data:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0x42
   630  0000C2                     	ds	2
   631  0000C4                     ToMainLow_recvmsg@maxlength:
   632                           	opt stack 0
   633  0000C4                     ToMainHigh_recvmsg@maxlength:
   634                           	opt stack 0
   635  0000C4                     timer1_lthread@msgtype:
   636                           	opt stack 0
   637  0000C4                     timer0_lthread@msgtype:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x44
   641  0000C4                     	ds	2
   642  0000C6                     timer1_lthread@length:
   643                           	opt stack 0
   644  0000C6                     timer0_lthread@length:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x46
   648  0000C6                     	ds	2
   649  0000C8                     timer1_lthread@msgbuffer:
   650                           	opt stack 0
   651  0000C8                     timer0_lthread@msgbuffer:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x48
   655  0000C8                     	ds	2
   656  0000CA                     ??_timer1_lthread:
   657  0000CA                     ??_timer0_lthread:
   658                           
   659                           ; 0 bytes @ 0x4A
   660  0000CA                     	ds	1
   661  0000CB                     timer1_lthread@retval:
   662                           	opt stack 0
   663  0000CB                     timer0_lthread@retval:
   664                           	opt stack 0
   665                           
   666                           ; 1 bytes @ 0x4B
   667  0000CB                     	ds	1
   668  0000CC                     ??_main:
   669                           
   670                           ; 0 bytes @ 0x4C
   671  0000CC                     	ds	1
   672                           tblptru	equ	0xFF8
   673                           tblptrh	equ	0xFF7
   674                           tblptrl	equ	0xFF6
   675                           tablat	equ	0xFF5
   676                           postinc0	equ	0xFEE
   677                           wreg	equ	0xFE8
   678                           postdec1	equ	0xFE5
   679                           fsr1h	equ	0xFE2
   680                           fsr1l	equ	0xFE1
   681                           
   682                           	psect	cstackCOMRAM
   683  000001                     __pcstackCOMRAM:
   684                           	opt stack 0
   685  000001                     ReadUSART@data:
   686                           	opt stack 0
   687  000001                     i1memcpy@d1:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0x0
   691  000001                     	ds	2
   692  000003                     i1memcpy@s1:
   693                           	opt stack 0
   694                           
   695                           ; 2 bytes @ 0x2
   696  000003                     	ds	2
   697  000005                     i1memcpy@n:
   698                           	opt stack 0
   699                           
   700                           ; 2 bytes @ 0x4
   701  000005                     	ds	2
   702  000007                     i1memcpy@d:
   703                           	opt stack 0
   704                           
   705                           ; 2 bytes @ 0x6
   706  000007                     	ds	2
   707  000009                     i1memcpy@s:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x8
   711  000009                     	ds	2
   712  00000B                     i1send_msg@qptr:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0xA
   716  00000B                     	ds	2
   717  00000D                     i1send_msg@length:
   718                           	opt stack 0
   719                           
   720                           ; 1 bytes @ 0xC
   721  00000D                     	ds	1
   722  00000E                     i1send_msg@msgtype:
   723                           	opt stack 0
   724                           
   725                           ; 1 bytes @ 0xD
   726  00000E                     	ds	1
   727  00000F                     i1send_msg@data:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0xE
   731  00000F                     	ds	2
   732  000011                     ??i1_send_msg:
   733                           
   734                           ; 0 bytes @ 0x10
   735  000011                     	ds	1
   736  000012                     i1send_msg@tlength:
   737                           	opt stack 0
   738                           
   739                           ; 2 bytes @ 0x11
   740  000012                     	ds	2
   741  000014                     i1send_msg@slot:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0x13
   745  000014                     	ds	1
   746  000015                     i1send_msg@qmsg:
   747                           	opt stack 0
   748                           
   749                           ; 2 bytes @ 0x14
   750  000015                     	ds	2
   751  000017                     ToMainLow_sendmsg@msgtype:
   752                           	opt stack 0
   753                           
   754                           ; 1 bytes @ 0x16
   755  000017                     	ds	1
   756  000018                     ToMainLow_sendmsg@data:
   757                           	opt stack 0
   758                           
   759                           ; 2 bytes @ 0x17
   760  000018                     	ds	2
   761  00001A                     ToMainLow_sendmsg@length:
   762                           	opt stack 0
   763                           
   764                           ; 1 bytes @ 0x19
   765  00001A                     	ds	1
   766  00001B                     ??_uart_recv_int_handler:
   767                           
   768                           ; 0 bytes @ 0x1A
   769  00001B                     	ds	1
   770  00001C                     ??_InterruptHandlerLow:
   771                           
   772                           ; 0 bytes @ 0x1B
   773  00001C                     	ds	17
   774  00002D                     ?_ReadADC:
   775                           	opt stack 0
   776  00002D                     handle_start@data_read:
   777                           	opt stack 0
   778  00002D                     i2start_i2c_slave_reply@msg:
   779                           	opt stack 0
   780  00002D                     i2memcpy@d1:
   781                           	opt stack 0
   782                           
   783                           ; 2 bytes @ 0x2C
   784  00002D                     	ds	2
   785  00002F                     ??i2_start_i2c_slave_reply:
   786  00002F                     i2memcpy@s1:
   787                           	opt stack 0
   788                           
   789                           ; 2 bytes @ 0x2E
   790  00002F                     	ds	2
   791  000031                     i2start_i2c_slave_reply@length:
   792                           	opt stack 0
   793  000031                     i2memcpy@n:
   794                           	opt stack 0
   795                           
   796                           ; 2 bytes @ 0x30
   797  000031                     	ds	2
   798  000033                     i2memcpy@d:
   799                           	opt stack 0
   800                           
   801                           ; 2 bytes @ 0x32
   802  000033                     	ds	2
   803  000035                     i2memcpy@s:
   804                           	opt stack 0
   805                           
   806                           ; 2 bytes @ 0x34
   807  000035                     	ds	2
   808  000037                     i2send_msg@qptr:
   809                           	opt stack 0
   810                           
   811                           ; 2 bytes @ 0x36
   812  000037                     	ds	2
   813  000039                     i2send_msg@length:
   814                           	opt stack 0
   815                           
   816                           ; 1 bytes @ 0x38
   817  000039                     	ds	1
   818  00003A                     i2send_msg@msgtype:
   819                           	opt stack 0
   820                           
   821                           ; 1 bytes @ 0x39
   822  00003A                     	ds	1
   823  00003B                     i2send_msg@data:
   824                           	opt stack 0
   825                           
   826                           ; 2 bytes @ 0x3A
   827  00003B                     	ds	2
   828  00003D                     ??i2_send_msg:
   829                           
   830                           ; 0 bytes @ 0x3C
   831  00003D                     	ds	1
   832  00003E                     i2send_msg@tlength:
   833                           	opt stack 0
   834                           
   835                           ; 2 bytes @ 0x3D
   836  00003E                     	ds	2
   837  000040                     i2send_msg@slot:
   838                           	opt stack 0
   839                           
   840                           ; 1 bytes @ 0x3F
   841  000040                     	ds	1
   842  000041                     i2send_msg@qmsg:
   843                           	opt stack 0
   844                           
   845                           ; 2 bytes @ 0x40
   846  000041                     	ds	2
   847  000043                     ToMainHigh_sendmsg@msgtype:
   848                           	opt stack 0
   849                           
   850                           ; 1 bytes @ 0x42
   851  000043                     	ds	1
   852  000044                     ToMainHigh_sendmsg@data:
   853                           	opt stack 0
   854                           
   855                           ; 2 bytes @ 0x43
   856  000044                     	ds	2
   857  000046                     ToMainHigh_sendmsg@length:
   858                           	opt stack 0
   859                           
   860                           ; 1 bytes @ 0x45
   861  000046                     	ds	1
   862  000047                     ??_i2c_int_handler:
   863                           
   864                           ; 0 bytes @ 0x46
   865  000047                     	ds	2
   866                           tblptru	equ	0xFF8
   867                           tblptrh	equ	0xFF7
   868                           tblptrl	equ	0xFF6
   869                           tablat	equ	0xFF5
   870                           postinc0	equ	0xFEE
   871                           wreg	equ	0xFE8
   872                           postdec1	equ	0xFE5
   873                           fsr1h	equ	0xFE2
   874                           fsr1l	equ	0xFE1
   875                           
   876 ;;
   877 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   878 ;;
   879 ;; *************** function _main *****************
   880 ;; Defined at:
   881 ;;		line 116 in file "../src/main.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;		None
   884 ;; Auto vars:     Size  Location     Type
   885 ;;  ic             28   25[BANK1 ] struct __i2c_comm
   886 ;;  msgbuffer      11    0[BANK1 ] unsigned char [11]
   887 ;;  uc              5   18[BANK1 ] struct __uart_comm
   888 ;;  t0thread_dat    2   16[BANK1 ] struct __timer0_thread_s
   889 ;;  t1thread_dat    2   14[BANK1 ] struct __timer1_thread_s
   890 ;;  uthread_data    2   11[BANK1 ] struct __uart_thread_str
   891 ;;  length          1   24[BANK1 ] char 
   892 ;;  msgtype         1   23[BANK1 ] unsigned char 
   893 ;;  last_reg_rec    1   13[BANK1 ] unsigned char 
   894 ;;  i               1    0        unsigned char 
   895 ;;  c               1    0        unsigned char 
   896 ;; Return value:  Size  Location     Type
   897 ;;		None               void
   898 ;; Registers used:
   899 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   905 ;;      Params:         0       0       0       0       0
   906 ;;      Locals:         0       0      53       0       0
   907 ;;      Temps:          0       1       0       0       0
   908 ;;      Totals:         0       1      53       0       0
   909 ;;Total ram usage:       54 bytes
   910 ;; Hardware stack levels required when called:   14
   911 ;; This function calls:
   912 ;;		_OpenTimer0
   913 ;;		_OpenUSART
   914 ;;		_ToMainHigh_recvmsg
   915 ;;		_ToMainLow_recvmsg
   916 ;;		_block_on_To_msgqueues
   917 ;;		_enable_interrupts
   918 ;;		_i2c_configure_slave
   919 ;;		_initADC
   920 ;;		_init_i2c
   921 ;;		_init_queues
   922 ;;		_init_timer0_lthread
   923 ;;		_init_timer1_lthread
   924 ;;		_init_uart_recv
   925 ;;		_start_i2c_slave_reply
   926 ;;		_timer0_lthread
   927 ;;		_timer1_lthread
   928 ;;		_uart_lthread
   929 ;; This function is called by:
   930 ;;		Startup code after reset
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           	psect	text0
   935  0006A6                     __ptext0:
   936                           	opt stack 0
   937  0006A6                     _main:
   938                           	opt stack 16
   939                           
   940                           ;main.c: 117: OSCCON = 0x82;
   941                           
   942                           ;incstack = 0
   943  0006A6  0E82               	movlw	130
   944  0006A8  6ED3               	movwf	4051,c	;volatile
   945                           
   946                           ;main.c: 118: OSCTUNEbits.PLLEN = 0;
   947  0006AA  9C9B               	bcf	3995,6,c	;volatile
   948                           
   949                           ;main.c: 120: char c;
   950                           ;main.c: 121: signed char length;
   951                           ;main.c: 122: unsigned char msgtype;
   952                           ;main.c: 123: unsigned char last_reg_recvd;
   953                           ;main.c: 124: uart_comm uc;
   954                           ;main.c: 125: i2c_comm ic;
   955                           ;main.c: 126: unsigned char msgbuffer[10 + 1];
   956                           ;main.c: 127: unsigned char i;
   957                           ;main.c: 128: uart_thread_struct uthread_data;
   958                           ;main.c: 129: timer1_thread_struct t1thread_data;
   959                           ;main.c: 130: timer0_thread_struct t0thread_data;
   960                           ;main.c: 137: OSCCON = 0x82;
   961  0006AC  0E82               	movlw	130
   962  0006AE  6ED3               	movwf	4051,c	;volatile
   963                           
   964                           ;main.c: 138: OSCTUNEbits.PLLEN = 0;
   965  0006B0  9C9B               	bcf	3995,6,c	;volatile
   966                           
   967                           ;main.c: 142: init_uart_recv(&uc);
   968  0006B2  0101               	movlb	1	; () banked
   969  0006B4  0E01               	movlw	high main@uc
   970  0006B6  0100               	movlb	0	; () banked
   971  0006B8  0100               	movlb	0	; () banked
   972  0006BA  6FA9               	movwf	(init_uart_recv@uc+1)& (0+255),b
   973  0006BC  0101               	movlb	1	; () banked
   974  0006BE  0EB4               	movlw	low main@uc
   975  0006C0  0100               	movlb	0	; () banked
   976  0006C2  0100               	movlb	0	; () banked
   977  0006C4  6FA8               	movwf	init_uart_recv@uc& (0+255),b
   978  0006C6  EC03  F00D         	call	_init_uart_recv	;wreg free
   979                           
   980                           ;main.c: 145: init_i2c(&ic);
   981  0006CA  0101               	movlb	1	; () banked
   982  0006CC  0E01               	movlw	high main@ic
   983  0006CE  0100               	movlb	0	; () banked
   984  0006D0  0100               	movlb	0	; () banked
   985  0006D2  6FA9               	movwf	(init_i2c@ic+1)& (0+255),b
   986  0006D4  0101               	movlb	1	; () banked
   987  0006D6  0EBB               	movlw	low main@ic
   988  0006D8  0100               	movlb	0	; () banked
   989  0006DA  0100               	movlb	0	; () banked
   990  0006DC  6FA8               	movwf	init_i2c@ic& (0+255),b
   991  0006DE  ECC9  F00A         	call	_init_i2c	;wreg free
   992                           
   993                           ;main.c: 148: init_timer1_lthread(&t1thread_data);
   994  0006E2  0101               	movlb	1	; () banked
   995  0006E4  0E01               	movlw	high main@t1thread_data
   996  0006E6  0100               	movlb	0	; () banked
   997  0006E8  0100               	movlb	0	; () banked
   998  0006EA  6FA9               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   999  0006EC  0101               	movlb	1	; () banked
  1000  0006EE  0EB0               	movlw	low main@t1thread_data
  1001  0006F0  0100               	movlb	0	; () banked
  1002  0006F2  0100               	movlb	0	; () banked
  1003  0006F4  6FA8               	movwf	init_timer1_lthread@tptr& (0+255),b
  1004  0006F6  EC2C  F00D         	call	_init_timer1_lthread	;wreg free
  1005                           
  1006                           ;main.c: 150: init_timer0_lthread(&t0thread_data);
  1007  0006FA  0101               	movlb	1	; () banked
  1008  0006FC  0E01               	movlw	high main@t0thread_data
  1009  0006FE  0100               	movlb	0	; () banked
  1010  000700  0100               	movlb	0	; () banked
  1011  000702  6FA9               	movwf	(init_timer0_lthread@tptr+1)& (0+255),b
  1012  000704  0101               	movlb	1	; () banked
  1013  000706  0EB2               	movlw	low main@t0thread_data
  1014  000708  0100               	movlb	0	; () banked
  1015  00070A  0100               	movlb	0	; () banked
  1016  00070C  6FA8               	movwf	init_timer0_lthread@tptr& (0+255),b
  1017  00070E  EC35  F00D         	call	_init_timer0_lthread	;wreg free
  1018                           
  1019                           ;main.c: 152: init_queues();
  1020  000712  EC90  F00A         	call	_init_queues	;wreg free
  1021                           
  1022                           ;main.c: 154: initADC();
  1023  000716  EC5C  F00B         	call	_initADC	;wreg free
  1024                           
  1025                           ;main.c: 157: TRISB = 0x0;
  1026  00071A  0E00               	movlw	0
  1027  00071C  6E93               	movwf	3987,c	;volatile
  1028                           
  1029                           ;main.c: 158: LATB = 0x0;
  1030  00071E  0E00               	movlw	0
  1031  000720  6E8A               	movwf	3978,c	;volatile
  1032                           
  1033                           ;main.c: 170: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11111111);
  1034  000722  0EDF               	movlw	223
  1035  000724  ECB4  F00C         	call	_OpenTimer0
  1036                           
  1037                           ;main.c: 175: enable_interrupts();
  1038  000728  EC47  F00D         	call	_enable_interrupts	;wreg free
  1039                           
  1040                           ;main.c: 180: IPR1bits.TMR1IP = 0;
  1041  00072C  909F               	bcf	3999,0,c	;volatile
  1042                           
  1043                           ;main.c: 182: IPR1bits.RCIP = 0;
  1044  00072E  9A9F               	bcf	3999,5,c	;volatile
  1045                           
  1046                           ;main.c: 184: IPR1bits.SSPIP = 1;
  1047  000730  869F               	bsf	3999,3,c	;volatile
  1048                           
  1049                           ;main.c: 186: IPR1bits.ADIP = 1;
  1050  000732  8C9F               	bsf	3999,6,c	;volatile
  1051                           
  1052                           ;main.c: 196: i2c_configure_slave(0x9E);
  1053  000734  0E9E               	movlw	158
  1054  000736  ECC9  F00C         	call	_i2c_configure_slave
  1055                           
  1056                           ;main.c: 209: PIE1bits.SSPIE = 1;
  1057  00073A  869D               	bsf	3997,3,c	;volatile
  1058                           
  1059                           ;main.c: 212: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1060                           ;main.c: 213: 0b11111111 & 0b11101111, 0x19);
  1061  00073C  0E00               	movlw	0
  1062  00073E  0100               	movlb	0	; () banked
  1063  000740  0100               	movlb	0	; () banked
  1064  000742  6FA9               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1065  000744  0E19               	movlw	25
  1066  000746  0100               	movlb	0	; () banked
  1067  000748  6FA8               	movwf	OpenUSART@spbrg& (0+255),b
  1068  00074A  0E6C               	movlw	108
  1069  00074C  EC11  F009         	call	_OpenUSART
  1070  000750                     l2649:
  1071                           
  1072                           ;main.c: 237: block_on_To_msgqueues();
  1073  000750  ECC0  F007         	call	_block_on_To_msgqueues	;wreg free
  1074                           
  1075                           ;main.c: 244: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1076  000754  0101               	movlb	1	; () banked
  1077  000756  0E01               	movlw	high main@msgtype
  1078  000758  0100               	movlb	0	; () banked
  1079  00075A  0100               	movlb	0	; () banked
  1080  00075C  6FC1               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1081  00075E  0101               	movlb	1	; () banked
  1082  000760  0EB9               	movlw	low main@msgtype
  1083  000762  0100               	movlb	0	; () banked
  1084  000764  0100               	movlb	0	; () banked
  1085  000766  6FC0               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1086  000768  0101               	movlb	1	; () banked
  1087  00076A  0E01               	movlw	high main@msgbuffer
  1088  00076C  0100               	movlb	0	; () banked
  1089  00076E  0100               	movlb	0	; () banked
  1090  000770  6FC3               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1091  000772  0101               	movlb	1	; () banked
  1092  000774  0EA2               	movlw	low main@msgbuffer
  1093  000776  0100               	movlb	0	; () banked
  1094  000778  0100               	movlb	0	; () banked
  1095  00077A  6FC2               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1096  00077C  0E0A               	movlw	10
  1097  00077E  ECE5  F00B         	call	_ToMainHigh_recvmsg
  1098  000782  0101               	movlb	1	; () banked
  1099  000784  0101               	movlb	1	; () banked
  1100  000786  6FBA               	movwf	main@length& (0+255),b
  1101                           
  1102                           ; BSR set to: 1
  1103                           ;main.c: 245: if (length < 0) {
  1104  000788  0101               	movlb	1	; () banked
  1105  00078A  0101               	movlb	1	; () banked
  1106  00078C  BFBA               	btfsc	main@length& (0+255),7,b
  1107  00078E  D061               	goto	l2675
  1108  000790  D051               	goto	l2673
  1109  000792                     l2657:
  1110                           
  1111                           ; BSR set to: 1
  1112                           ;main.c: 253: {
  1113                           ;main.c: 254: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1114  000792  0101               	movlb	1	; () banked
  1115  000794  0E01               	movlw	high main@t0thread_data
  1116  000796  0100               	movlb	0	; () banked
  1117  000798  0100               	movlb	0	; () banked
  1118  00079A  6FC3               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1119  00079C  0101               	movlb	1	; () banked
  1120  00079E  0EB2               	movlw	low main@t0thread_data
  1121  0007A0  0100               	movlb	0	; () banked
  1122  0007A2  0100               	movlb	0	; () banked
  1123  0007A4  6FC2               	movwf	timer0_lthread@tptr& (0+255),b
  1124  0007A6  0101               	movlb	1	; () banked
  1125  0007A8  0100               	movlb	0	; () banked
  1126  0007AA  C1B9  F0C4         	movff	main@msgtype,timer0_lthread@msgtype
  1127  0007AE  0100               	movlb	0	; () banked
  1128  0007B0  0100               	movlb	0	; () banked
  1129  0007B2  6BC5               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1130  0007B4  0101               	movlb	1	; () banked
  1131  0007B6  0101               	movlb	1	; () banked
  1132  0007B8  51BA               	movf	main@length& (0+255),w,b
  1133  0007BA  0100               	movlb	0	; () banked
  1134  0007BC  0100               	movlb	0	; () banked
  1135  0007BE  6FC6               	movwf	timer0_lthread@length& (0+255),b
  1136  0007C0  0100               	movlb	0	; () banked
  1137  0007C2  6BC7               	clrf	(timer0_lthread@length+1)& (0+255),b
  1138  0007C4  0100               	movlb	0	; () banked
  1139  0007C6  BFC6               	btfsc	timer0_lthread@length& (0+255),7,b
  1140  0007C8  07C7               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1141  0007CA  0101               	movlb	1	; () banked
  1142  0007CC  0E01               	movlw	high main@msgbuffer
  1143  0007CE  0100               	movlb	0	; () banked
  1144  0007D0  0100               	movlb	0	; () banked
  1145  0007D2  6FC9               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1146  0007D4  0101               	movlb	1	; () banked
  1147  0007D6  0EA2               	movlw	low main@msgbuffer
  1148  0007D8  0100               	movlb	0	; () banked
  1149  0007DA  0100               	movlb	0	; () banked
  1150  0007DC  6FC8               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1151  0007DE  EC57  F00A         	call	_timer0_lthread	;wreg free
  1152                           
  1153                           ;main.c: 255: break;
  1154  0007E2  D037               	goto	l2675
  1155  0007E4                     l325:
  1156                           
  1157                           ;main.c: 258: case 41:
  1158                           ;main.c: 259: {
  1159                           ;main.c: 262: last_reg_recvd = msgbuffer[0];
  1160  0007E4  C1A2  F1AF         	movff	main@msgbuffer,main@last_reg_recvd
  1161                           
  1162                           ;main.c: 263: break;
  1163  0007E8  D034               	goto	l2675
  1164  0007EA                     l2663:
  1165                           
  1166                           ;main.c: 291: {
  1167                           ;main.c: 292: length = 1;
  1168  0007EA  0100               	movlb	0	; () banked
  1169  0007EC  6FCC               	movwf	??_main& (0+255),b
  1170  0007EE  0E01               	movlw	1
  1171  0007F0  0101               	movlb	1	; () banked
  1172  0007F2  0101               	movlb	1	; () banked
  1173  0007F4  6FBA               	movwf	main@length& (0+255),b
  1174  0007F6  0100               	movlb	0	; () banked
  1175  0007F8  51CC               	movf	??_main& (0+255),w,b
  1176                           
  1177                           ;main.c: 295: break;
  1178  0007FA  D00C               	goto	l2669
  1179  0007FC                     l2667:
  1180  0007FC  0101               	movlb	1	; () banked
  1181  0007FE  0101               	movlb	1	; () banked
  1182  000800  51AF               	movf	main@last_reg_recvd& (0+255),w,b
  1183                           
  1184                           ; Switch size 1, requested type "space"
  1185                           ; Number of cases is 3, Range of values is 168 to 170
  1186                           ; switch strategies available:
  1187                           ; Name         Instructions Cycles
  1188                           ; simple_byte           10     6 (average)
  1189                           ;	Chosen strategy is simple_byte
  1190  000802  0AA8               	xorlw	168	; case 168
  1191  000804  B4D8               	btfsc	status,2,c
  1192  000806  D7F1               	goto	l2663
  1193  000808  0A01               	xorlw	1	; case 169
  1194  00080A  B4D8               	btfsc	status,2,c
  1195  00080C  D7EE               	goto	l2663
  1196  00080E  0A03               	xorlw	3	; case 170
  1197  000810  B4D8               	btfsc	status,2,c
  1198  000812  D7EB               	goto	l2663
  1199  000814                     l2669:
  1200                           
  1201                           ;main.c: 298: start_i2c_slave_reply(length, msgbuffer);
  1202  000814  0101               	movlb	1	; () banked
  1203  000816  0E01               	movlw	high main@msgbuffer
  1204  000818  0100               	movlb	0	; () banked
  1205  00081A  0100               	movlb	0	; () banked
  1206  00081C  6FA9               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1207  00081E  0101               	movlb	1	; () banked
  1208  000820  0EA2               	movlw	low main@msgbuffer
  1209  000822  0100               	movlb	0	; () banked
  1210  000824  0100               	movlb	0	; () banked
  1211  000826  6FA8               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1212  000828  0101               	movlb	1	; () banked
  1213  00082A  0101               	movlb	1	; () banked
  1214  00082C  51BA               	movf	main@length& (0+255),w,b
  1215  00082E  ECD9  F005         	call	_start_i2c_slave_reply
  1216                           
  1217                           ;main.c: 299: break;
  1218  000832  D00F               	goto	l2675
  1219  000834                     l2673:
  1220  000834  0101               	movlb	1	; () banked
  1221  000836  0101               	movlb	1	; () banked
  1222  000838  51B9               	movf	main@msgtype& (0+255),w,b
  1223                           
  1224                           ; Switch size 1, requested type "space"
  1225                           ; Number of cases is 4, Range of values is 10 to 42
  1226                           ; switch strategies available:
  1227                           ; Name         Instructions Cycles
  1228                           ; simple_byte           13     7 (average)
  1229                           ;	Chosen strategy is simple_byte
  1230  00083A  0A0A               	xorlw	10	; case 10
  1231  00083C  B4D8               	btfsc	status,2,c
  1232  00083E  D7A9               	goto	l2657
  1233  000840  0A22               	xorlw	34	; case 40
  1234  000842  B4D8               	btfsc	status,2,c
  1235  000844  D7CF               	goto	l325
  1236  000846  0A01               	xorlw	1	; case 41
  1237  000848  B4D8               	btfsc	status,2,c
  1238  00084A  D7CC               	goto	l325
  1239  00084C  0A03               	xorlw	3	; case 42
  1240  00084E  B4D8               	btfsc	status,2,c
  1241  000850  D7D5               	goto	l2667
  1242  000852                     l2675:
  1243                           
  1244                           ;main.c: 307: }
  1245                           ;main.c: 310: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1246  000852  0101               	movlb	1	; () banked
  1247  000854  0E01               	movlw	high main@msgtype
  1248  000856  0100               	movlb	0	; () banked
  1249  000858  0100               	movlb	0	; () banked
  1250  00085A  6FC1               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1251  00085C  0101               	movlb	1	; () banked
  1252  00085E  0EB9               	movlw	low main@msgtype
  1253  000860  0100               	movlb	0	; () banked
  1254  000862  0100               	movlb	0	; () banked
  1255  000864  6FC0               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1256  000866  0101               	movlb	1	; () banked
  1257  000868  0E01               	movlw	high main@msgbuffer
  1258  00086A  0100               	movlb	0	; () banked
  1259  00086C  0100               	movlb	0	; () banked
  1260  00086E  6FC3               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1261  000870  0101               	movlb	1	; () banked
  1262  000872  0EA2               	movlw	low main@msgbuffer
  1263  000874  0100               	movlb	0	; () banked
  1264  000876  0100               	movlb	0	; () banked
  1265  000878  6FC2               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1266  00087A  0E0A               	movlw	10
  1267  00087C  ECC4  F00B         	call	_ToMainLow_recvmsg
  1268  000880  0101               	movlb	1	; () banked
  1269  000882  0101               	movlb	1	; () banked
  1270  000884  6FBA               	movwf	main@length& (0+255),b
  1271                           
  1272                           ; BSR set to: 1
  1273                           ;main.c: 311: if (length < 0) {
  1274  000886  0101               	movlb	1	; () banked
  1275  000888  0101               	movlb	1	; () banked
  1276  00088A  BFBA               	btfsc	main@length& (0+255),7,b
  1277  00088C  D761               	goto	l2649
  1278  00088E  D052               	goto	l2687
  1279  000890                     l2681:
  1280                           
  1281                           ; BSR set to: 1
  1282                           ;main.c: 319: {
  1283                           ;main.c: 320: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1284  000890  0101               	movlb	1	; () banked
  1285  000892  0E01               	movlw	high main@t1thread_data
  1286  000894  0100               	movlb	0	; () banked
  1287  000896  0100               	movlb	0	; () banked
  1288  000898  6FC3               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1289  00089A  0101               	movlb	1	; () banked
  1290  00089C  0EB0               	movlw	low main@t1thread_data
  1291  00089E  0100               	movlb	0	; () banked
  1292  0008A0  0100               	movlb	0	; () banked
  1293  0008A2  6FC2               	movwf	timer1_lthread@tptr& (0+255),b
  1294  0008A4  0101               	movlb	1	; () banked
  1295  0008A6  0100               	movlb	0	; () banked
  1296  0008A8  C1B9  F0C4         	movff	main@msgtype,timer1_lthread@msgtype
  1297  0008AC  0100               	movlb	0	; () banked
  1298  0008AE  0100               	movlb	0	; () banked
  1299  0008B0  6BC5               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1300  0008B2  0101               	movlb	1	; () banked
  1301  0008B4  0101               	movlb	1	; () banked
  1302  0008B6  51BA               	movf	main@length& (0+255),w,b
  1303  0008B8  0100               	movlb	0	; () banked
  1304  0008BA  0100               	movlb	0	; () banked
  1305  0008BC  6FC6               	movwf	timer1_lthread@length& (0+255),b
  1306  0008BE  0100               	movlb	0	; () banked
  1307  0008C0  6BC7               	clrf	(timer1_lthread@length+1)& (0+255),b
  1308  0008C2  0100               	movlb	0	; () banked
  1309  0008C4  BFC6               	btfsc	timer1_lthread@length& (0+255),7,b
  1310  0008C6  07C7               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1311  0008C8  0101               	movlb	1	; () banked
  1312  0008CA  0E01               	movlw	high main@msgbuffer
  1313  0008CC  0100               	movlb	0	; () banked
  1314  0008CE  0100               	movlb	0	; () banked
  1315  0008D0  6FC9               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1316  0008D2  0101               	movlb	1	; () banked
  1317  0008D4  0EA2               	movlw	low main@msgbuffer
  1318  0008D6  0100               	movlb	0	; () banked
  1319  0008D8  0100               	movlb	0	; () banked
  1320  0008DA  6FC8               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1321  0008DC  EC1E  F00A         	call	_timer1_lthread	;wreg free
  1322                           
  1323                           ;main.c: 321: break;
  1324  0008E0  D737               	goto	l2649
  1325  0008E2                     l2683:
  1326                           
  1327                           ;main.c: 324: case 31:
  1328                           ;main.c: 325: {
  1329                           ;main.c: 326: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1330  0008E2  0101               	movlb	1	; () banked
  1331  0008E4  0E01               	movlw	high main@uthread_data
  1332  0008E6  0100               	movlb	0	; () banked
  1333  0008E8  0100               	movlb	0	; () banked
  1334  0008EA  6FA9               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1335  0008EC  0101               	movlb	1	; () banked
  1336  0008EE  0EAD               	movlw	low main@uthread_data
  1337  0008F0  0100               	movlb	0	; () banked
  1338  0008F2  0100               	movlb	0	; () banked
  1339  0008F4  6FA8               	movwf	uart_lthread@uptr& (0+255),b
  1340  0008F6  0101               	movlb	1	; () banked
  1341  0008F8  0100               	movlb	0	; () banked
  1342  0008FA  C1B9  F0AA         	movff	main@msgtype,uart_lthread@msgtype
  1343  0008FE  0100               	movlb	0	; () banked
  1344  000900  0100               	movlb	0	; () banked
  1345  000902  6BAB               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1346  000904  0101               	movlb	1	; () banked
  1347  000906  0101               	movlb	1	; () banked
  1348  000908  51BA               	movf	main@length& (0+255),w,b
  1349  00090A  0100               	movlb	0	; () banked
  1350  00090C  0100               	movlb	0	; () banked
  1351  00090E  6FAC               	movwf	uart_lthread@length& (0+255),b
  1352  000910  0100               	movlb	0	; () banked
  1353  000912  6BAD               	clrf	(uart_lthread@length+1)& (0+255),b
  1354  000914  0100               	movlb	0	; () banked
  1355  000916  BFAC               	btfsc	uart_lthread@length& (0+255),7,b
  1356  000918  07AD               	decf	(uart_lthread@length+1)& (0+255),f,b
  1357  00091A  0101               	movlb	1	; () banked
  1358  00091C  0E01               	movlw	high main@msgbuffer
  1359  00091E  0100               	movlb	0	; () banked
  1360  000920  0100               	movlb	0	; () banked
  1361  000922  6FAF               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1362  000924  0101               	movlb	1	; () banked
  1363  000926  0EA2               	movlw	low main@msgbuffer
  1364  000928  0100               	movlb	0	; () banked
  1365  00092A  0100               	movlb	0	; () banked
  1366  00092C  6FAE               	movwf	uart_lthread@msgbuffer& (0+255),b
  1367  00092E  EC46  F00C         	call	_uart_lthread	;wreg free
  1368                           
  1369                           ;main.c: 327: break;
  1370  000932  D70E               	goto	l2649
  1371  000934                     l2687:
  1372  000934  0101               	movlb	1	; () banked
  1373  000936  0101               	movlb	1	; () banked
  1374  000938  51B9               	movf	main@msgtype& (0+255),w,b
  1375                           
  1376                           ; Switch size 1, requested type "space"
  1377                           ; Number of cases is 3, Range of values is 11 to 31
  1378                           ; switch strategies available:
  1379                           ; Name         Instructions Cycles
  1380                           ; simple_byte           10     6 (average)
  1381                           ;	Chosen strategy is simple_byte
  1382  00093A  0A0B               	xorlw	11	; case 11
  1383  00093C  B4D8               	btfsc	status,2,c
  1384  00093E  D7A8               	goto	l2681
  1385  000940  0A15               	xorlw	21	; case 30
  1386  000942  B4D8               	btfsc	status,2,c
  1387  000944  D7CE               	goto	l2683
  1388  000946  0A01               	xorlw	1	; case 31
  1389  000948  B4D8               	btfsc	status,2,c
  1390  00094A  D7CB               	goto	l2683
  1391  00094C  D701               	goto	l2649
  1392  00094E                     __end_of_main:
  1393                           	opt stack 0
  1394                           tblptru	equ	0xFF8
  1395                           tblptrh	equ	0xFF7
  1396                           tblptrl	equ	0xFF6
  1397                           tablat	equ	0xFF5
  1398                           postinc0	equ	0xFEE
  1399                           wreg	equ	0xFE8
  1400                           postdec1	equ	0xFE5
  1401                           fsr1h	equ	0xFE2
  1402                           fsr1l	equ	0xFE1
  1403                           status	equ	0xFD8
  1404                           
  1405 ;; *************** function _uart_lthread *****************
  1406 ;; Defined at:
  1407 ;;		line 9 in file "../src/uart_thread.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;  uptr            2   40[BANK0 ] PTR struct __uart_thread
  1410 ;;		 -> main@uthread_data(2), 
  1411 ;;  msgtype         2   42[BANK0 ] int 
  1412 ;;  length          2   44[BANK0 ] int 
  1413 ;;  msgbuffer       2   46[BANK0 ] PTR unsigned char 
  1414 ;;		 -> main@msgbuffer(11), 
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;		None
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  2   40[BANK0 ] int 
  1419 ;; Registers used:
  1420 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1426 ;;      Params:         0       8       0       0       0
  1427 ;;      Locals:         0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0
  1429 ;;      Totals:         0       8       0       0       0
  1430 ;;Total ram usage:        8 bytes
  1431 ;; Hardware stack levels used:    1
  1432 ;; Hardware stack levels required when called:   10
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_main
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text1
  1441  00188C                     __ptext1:
  1442                           	opt stack 0
  1443  00188C                     _uart_lthread:
  1444                           	opt stack 19
  1445                           
  1446                           ;uart_thread.c: 10: if (msgtype == 30) {
  1447                           
  1448                           ; BSR set to: 1
  1449                           ;incstack = 0
  1450  00188C  0100               	movlb	0	; () banked
  1451  00188E  0100               	movlb	0	; () banked
  1452  001890  51AA               	movf	uart_lthread@msgtype& (0+255),w,b
  1453  001892  0A1E               	xorlw	30
  1454  001894  11AB               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1455  001896  B4D8               	btfsc	status,2,c
  1456  001898  0012               	return	
  1457                           
  1458                           ; BSR set to: 0
  1459                           
  1460                           ; BSR set to: 0
  1461                           
  1462                           ; BSR set to: 0
  1463                           ;uart_thread.c: 11: } else if (msgtype == 31) {
  1464  00189A  0100               	movlb	0	; () banked
  1465  00189C  0100               	movlb	0	; () banked
  1466  00189E  51AA               	movf	uart_lthread@msgtype& (0+255),w,b
  1467  0018A0  0A1F               	xorlw	31
  1468  0018A2  11AB               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1469  0018A4  A4D8               	btfss	status,2,c
  1470  0018A6  0012               	return	
  1471                           
  1472                           ; BSR set to: 0
  1473                           ;uart_thread.c: 14: msgbuffer[length] = '\0';
  1474  0018A8  0100               	movlb	0	; () banked
  1475  0018AA  0100               	movlb	0	; () banked
  1476  0018AC  51AC               	movf	uart_lthread@length& (0+255),w,b
  1477  0018AE  0100               	movlb	0	; () banked
  1478  0018B0  0100               	movlb	0	; () banked
  1479  0018B2  25AE               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1480  0018B4  6ED9               	movwf	fsr2l,c
  1481  0018B6  0100               	movlb	0	; () banked
  1482  0018B8  0100               	movlb	0	; () banked
  1483  0018BA  51AD               	movf	(uart_lthread@length+1)& (0+255),w,b
  1484  0018BC  0100               	movlb	0	; () banked
  1485  0018BE  0100               	movlb	0	; () banked
  1486  0018C0  21AF               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1487  0018C2  6EDA               	movwf	fsr2h,c
  1488  0018C4  0E00               	movlw	0
  1489  0018C6  6EDF               	movwf	indf2,c
  1490  0018C8  0012               	return	
  1491  0018CA                     __end_of_uart_lthread:
  1492                           	opt stack 0
  1493                           tblptru	equ	0xFF8
  1494                           tblptrh	equ	0xFF7
  1495                           tblptrl	equ	0xFF6
  1496                           tablat	equ	0xFF5
  1497                           postinc0	equ	0xFEE
  1498                           wreg	equ	0xFE8
  1499                           postdec1	equ	0xFE5
  1500                           fsr1h	equ	0xFE2
  1501                           fsr1l	equ	0xFE1
  1502                           indf2	equ	0xFDF
  1503                           fsr2h	equ	0xFDA
  1504                           fsr2l	equ	0xFD9
  1505                           status	equ	0xFD8
  1506                           
  1507 ;; *************** function _timer1_lthread *****************
  1508 ;; Defined at:
  1509 ;;		line 14 in file "../src/timer1_thread.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  tptr            2   66[BANK0 ] PTR struct __timer1_thre
  1512 ;;		 -> main@t1thread_data(2), 
  1513 ;;  msgtype         2   68[BANK0 ] int 
  1514 ;;  length          2   70[BANK0 ] int 
  1515 ;;  msgbuffer       2   72[BANK0 ] PTR unsigned char 
  1516 ;;		 -> main@msgbuffer(11), 
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;  retval          1   75[BANK0 ] char 
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  2   66[BANK0 ] int 
  1521 ;; Registers used:
  1522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1528 ;;      Params:         0       8       0       0       0
  1529 ;;      Locals:         0       1       0       0       0
  1530 ;;      Temps:          0       1       0       0       0
  1531 ;;      Totals:         0      10       0       0       0
  1532 ;;Total ram usage:       10 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; Hardware stack levels required when called:   13
  1535 ;; This function calls:
  1536 ;;		_FromMainHigh_sendmsg
  1537 ;;		___lwmod
  1538 ;; This function is called by:
  1539 ;;		_main
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text2
  1544  00143C                     __ptext2:
  1545                           	opt stack 0
  1546  00143C                     _timer1_lthread:
  1547                           	opt stack 16
  1548                           
  1549                           ;timer1_thread.c: 15: signed char retval;
  1550                           ;timer1_thread.c: 17: tptr->msgcount++;
  1551                           
  1552                           ; BSR set to: 0
  1553                           ;incstack = 0
  1554  00143C  C0C2  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1555  001440  C0C3  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1556  001444  2ADE               	incf	postinc2,f,c
  1557  001446  0E00               	movlw	0
  1558  001448  22DD               	addwfc	postdec2,f,c
  1559                           
  1560                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1561  00144A  C0C2  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1562  00144E  C0C3  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1563  001452  0100               	movlb	0	; () banked
  1564  001454  CFDE F0A8          	movff	postinc2,___lwmod@dividend
  1565  001458  0100               	movlb	0	; () banked
  1566  00145A  CFDD F0A9          	movff	postdec2,___lwmod@dividend+1
  1567  00145E  0E00               	movlw	0
  1568  001460  0100               	movlb	0	; () banked
  1569  001462  0100               	movlb	0	; () banked
  1570  001464  6FAB               	movwf	(___lwmod@divisor+1)& (0+255),b
  1571  001466  0E0A               	movlw	10
  1572  001468  0100               	movlb	0	; () banked
  1573  00146A  6FAA               	movwf	___lwmod@divisor& (0+255),b
  1574  00146C  EC5A  F009         	call	___lwmod	;wreg free
  1575  001470  0100               	movlb	0	; () banked
  1576  001472  0100               	movlb	0	; () banked
  1577  001474  51A8               	movf	?___lwmod& (0+255),w,b
  1578  001476  0A09               	xorlw	9
  1579  001478  0100               	movlb	0	; () banked
  1580  00147A  11A9               	iorwf	(?___lwmod+1)& (0+255),w,b
  1581  00147C  A4D8               	btfss	status,2,c
  1582  00147E  0012               	return	
  1583                           
  1584                           ; BSR set to: 0
  1585                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1586  001480  0100               	movlb	0	; () banked
  1587  001482  6FCA               	movwf	??_timer1_lthread& (0+255),b
  1588  001484  0E14               	movlw	20
  1589  001486  0100               	movlb	0	; () banked
  1590  001488  0100               	movlb	0	; () banked
  1591  00148A  6FBE               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1592  00148C  0100               	movlb	0	; () banked
  1593  00148E  51CA               	movf	??_timer1_lthread& (0+255),w,b
  1594  001490  0100               	movlb	0	; () banked
  1595  001492  0100               	movlb	0	; () banked
  1596  001494  C0C3  F0C0         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1597  001498  0100               	movlb	0	; () banked
  1598  00149A  0100               	movlb	0	; () banked
  1599  00149C  C0C2  F0BF         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1600  0014A0  0E02               	movlw	2
  1601  0014A2  EC65  F00C         	call	_FromMainHigh_sendmsg
  1602  0014A6  0100               	movlb	0	; () banked
  1603  0014A8  0100               	movlb	0	; () banked
  1604  0014AA  6FCB               	movwf	timer1_lthread@retval& (0+255),b
  1605  0014AC  0012               	return	
  1606  0014AE                     __end_of_timer1_lthread:
  1607                           	opt stack 0
  1608                           tblptru	equ	0xFF8
  1609                           tblptrh	equ	0xFF7
  1610                           tblptrl	equ	0xFF6
  1611                           tablat	equ	0xFF5
  1612                           postinc0	equ	0xFEE
  1613                           wreg	equ	0xFE8
  1614                           postdec1	equ	0xFE5
  1615                           fsr1h	equ	0xFE2
  1616                           fsr1l	equ	0xFE1
  1617                           indf2	equ	0xFDF
  1618                           postinc2	equ	0xFDE
  1619                           postdec2	equ	0xFDD
  1620                           fsr2h	equ	0xFDA
  1621                           fsr2l	equ	0xFD9
  1622                           status	equ	0xFD8
  1623                           
  1624 ;; *************** function _timer0_lthread *****************
  1625 ;; Defined at:
  1626 ;;		line 14 in file "../src/timer0_thread.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  tptr            2   66[BANK0 ] PTR struct __timer0_thre
  1629 ;;		 -> main@t0thread_data(2), 
  1630 ;;  msgtype         2   68[BANK0 ] int 
  1631 ;;  length          2   70[BANK0 ] int 
  1632 ;;  msgbuffer       2   72[BANK0 ] PTR unsigned char 
  1633 ;;		 -> main@msgbuffer(11), 
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;  retval          1   75[BANK0 ] char 
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  2   66[BANK0 ] int 
  1638 ;; Registers used:
  1639 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1645 ;;      Params:         0       8       0       0       0
  1646 ;;      Locals:         0       1       0       0       0
  1647 ;;      Temps:          0       1       0       0       0
  1648 ;;      Totals:         0      10       0       0       0
  1649 ;;Total ram usage:       10 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; Hardware stack levels required when called:   13
  1652 ;; This function calls:
  1653 ;;		_FromMainHigh_sendmsg
  1654 ;;		___lwmod
  1655 ;; This function is called by:
  1656 ;;		_main
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           	psect	text3
  1661  0014AE                     __ptext3:
  1662                           	opt stack 0
  1663  0014AE                     _timer0_lthread:
  1664                           	opt stack 16
  1665                           
  1666                           ;timer0_thread.c: 19: signed char retval;
  1667                           ;timer0_thread.c: 21: tptr->msgcount++;
  1668                           
  1669                           ; BSR set to: 0
  1670                           ;incstack = 0
  1671  0014AE  C0C2  FFD9         	movff	timer0_lthread@tptr,fsr2l
  1672  0014B2  C0C3  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  1673  0014B6  2ADE               	incf	postinc2,f,c
  1674  0014B8  0E00               	movlw	0
  1675  0014BA  22DD               	addwfc	postdec2,f,c
  1676                           
  1677                           ;timer0_thread.c: 24: if ((tptr->msgcount % 10) == 9) {
  1678  0014BC  C0C2  FFD9         	movff	timer0_lthread@tptr,fsr2l
  1679  0014C0  C0C3  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  1680  0014C4  0100               	movlb	0	; () banked
  1681  0014C6  CFDE F0A8          	movff	postinc2,___lwmod@dividend
  1682  0014CA  0100               	movlb	0	; () banked
  1683  0014CC  CFDD F0A9          	movff	postdec2,___lwmod@dividend+1
  1684  0014D0  0E00               	movlw	0
  1685  0014D2  0100               	movlb	0	; () banked
  1686  0014D4  0100               	movlb	0	; () banked
  1687  0014D6  6FAB               	movwf	(___lwmod@divisor+1)& (0+255),b
  1688  0014D8  0E0A               	movlw	10
  1689  0014DA  0100               	movlb	0	; () banked
  1690  0014DC  6FAA               	movwf	___lwmod@divisor& (0+255),b
  1691  0014DE  EC5A  F009         	call	___lwmod	;wreg free
  1692  0014E2  0100               	movlb	0	; () banked
  1693  0014E4  0100               	movlb	0	; () banked
  1694  0014E6  51A8               	movf	?___lwmod& (0+255),w,b
  1695  0014E8  0A09               	xorlw	9
  1696  0014EA  0100               	movlb	0	; () banked
  1697  0014EC  11A9               	iorwf	(?___lwmod+1)& (0+255),w,b
  1698  0014EE  A4D8               	btfss	status,2,c
  1699  0014F0  0012               	return	
  1700                           
  1701                           ; BSR set to: 0
  1702                           ;timer0_thread.c: 25: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1703  0014F2  0100               	movlb	0	; () banked
  1704  0014F4  6FCA               	movwf	??_timer0_lthread& (0+255),b
  1705  0014F6  0E14               	movlw	20
  1706  0014F8  0100               	movlb	0	; () banked
  1707  0014FA  0100               	movlb	0	; () banked
  1708  0014FC  6FBE               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1709  0014FE  0100               	movlb	0	; () banked
  1710  001500  51CA               	movf	??_timer0_lthread& (0+255),w,b
  1711  001502  0100               	movlb	0	; () banked
  1712  001504  0100               	movlb	0	; () banked
  1713  001506  C0C3  F0C0         	movff	timer0_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1714  00150A  0100               	movlb	0	; () banked
  1715  00150C  0100               	movlb	0	; () banked
  1716  00150E  C0C2  F0BF         	movff	timer0_lthread@tptr,FromMainHigh_sendmsg@data
  1717  001512  0E02               	movlw	2
  1718  001514  EC65  F00C         	call	_FromMainHigh_sendmsg
  1719  001518  0100               	movlb	0	; () banked
  1720  00151A  0100               	movlb	0	; () banked
  1721  00151C  6FCB               	movwf	timer0_lthread@retval& (0+255),b
  1722  00151E  0012               	return	
  1723  001520                     __end_of_timer0_lthread:
  1724                           	opt stack 0
  1725                           tblptru	equ	0xFF8
  1726                           tblptrh	equ	0xFF7
  1727                           tblptrl	equ	0xFF6
  1728                           tablat	equ	0xFF5
  1729                           postinc0	equ	0xFEE
  1730                           wreg	equ	0xFE8
  1731                           postdec1	equ	0xFE5
  1732                           fsr1h	equ	0xFE2
  1733                           fsr1l	equ	0xFE1
  1734                           indf2	equ	0xFDF
  1735                           postinc2	equ	0xFDE
  1736                           postdec2	equ	0xFDD
  1737                           fsr2h	equ	0xFDA
  1738                           fsr2l	equ	0xFD9
  1739                           status	equ	0xFD8
  1740                           
  1741 ;; *************** function ___lwmod *****************
  1742 ;; Defined at:
  1743 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  dividend        2   40[BANK0 ] unsigned int 
  1746 ;;  divisor         2   42[BANK0 ] unsigned int 
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  counter         1   45[BANK0 ] unsigned char 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  2   40[BANK0 ] unsigned int 
  1751 ;; Registers used:
  1752 ;;		wreg, status,2, status,0
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1758 ;;      Params:         0       4       0       0       0
  1759 ;;      Locals:         0       1       0       0       0
  1760 ;;      Temps:          0       1       0       0       0
  1761 ;;      Totals:         0       6       0       0       0
  1762 ;;Total ram usage:        6 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:   10
  1765 ;; This function calls:
  1766 ;;		Nothing
  1767 ;; This function is called by:
  1768 ;;		_timer1_lthread
  1769 ;;		_timer0_lthread
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           	psect	text4
  1774  0012B4                     __ptext4:
  1775                           	opt stack 0
  1776  0012B4                     ___lwmod:
  1777                           	opt stack 18
  1778                           
  1779                           ; BSR set to: 0
  1780                           ;incstack = 0
  1781  0012B4  0100               	movlb	0	; () banked
  1782  0012B6  0100               	movlb	0	; () banked
  1783  0012B8  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1784  0012BA  11AA               	iorwf	___lwmod@divisor& (0+255),w,b
  1785  0012BC  B4D8               	btfsc	status,2,c
  1786  0012BE  D03A               	goto	l1055
  1787                           
  1788                           ; BSR set to: 0
  1789  0012C0  0100               	movlb	0	; () banked
  1790  0012C2  6FAC               	movwf	??___lwmod& (0+255),b
  1791  0012C4  0E01               	movlw	1
  1792  0012C6  0100               	movlb	0	; () banked
  1793  0012C8  0100               	movlb	0	; () banked
  1794  0012CA  6FAD               	movwf	___lwmod@counter& (0+255),b
  1795  0012CC  0100               	movlb	0	; () banked
  1796  0012CE  51AC               	movf	??___lwmod& (0+255),w,b
  1797  0012D0  D009               	goto	l2793
  1798  0012D2                     l2791:
  1799                           
  1800                           ; BSR set to: 0
  1801  0012D2  0100               	movlb	0	; () banked
  1802  0012D4  0100               	movlb	0	; () banked
  1803  0012D6  0100               	movlb	0	; () banked
  1804  0012D8  90D8               	bcf	status,0,c
  1805  0012DA  37AA               	rlcf	___lwmod@divisor& (0+255),f,b
  1806  0012DC  37AB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1807  0012DE  0100               	movlb	0	; () banked
  1808  0012E0  0100               	movlb	0	; () banked
  1809  0012E2  2BAD               	incf	___lwmod@counter& (0+255),f,b
  1810  0012E4                     l2793:
  1811                           
  1812                           ; BSR set to: 0
  1813  0012E4  0100               	movlb	0	; () banked
  1814  0012E6  0100               	movlb	0	; () banked
  1815  0012E8  AFAB               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1816  0012EA  D7F3               	goto	l2791
  1817  0012EC                     l2795:
  1818                           
  1819                           ; BSR set to: 0
  1820  0012EC  0100               	movlb	0	; () banked
  1821  0012EE  0100               	movlb	0	; () banked
  1822  0012F0  51AA               	movf	___lwmod@divisor& (0+255),w,b
  1823  0012F2  0100               	movlb	0	; () banked
  1824  0012F4  0100               	movlb	0	; () banked
  1825  0012F6  5DA8               	subwf	___lwmod@dividend& (0+255),w,b
  1826  0012F8  0100               	movlb	0	; () banked
  1827  0012FA  0100               	movlb	0	; () banked
  1828  0012FC  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1829  0012FE  0100               	movlb	0	; () banked
  1830  001300  0100               	movlb	0	; () banked
  1831  001302  59A9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1832  001304  A0D8               	btfss	status,0,c
  1833  001306  D00C               	goto	l2799
  1834                           
  1835                           ; BSR set to: 0
  1836  001308  0100               	movlb	0	; () banked
  1837  00130A  0100               	movlb	0	; () banked
  1838  00130C  51AA               	movf	___lwmod@divisor& (0+255),w,b
  1839  00130E  0100               	movlb	0	; () banked
  1840  001310  0100               	movlb	0	; () banked
  1841  001312  5FA8               	subwf	___lwmod@dividend& (0+255),f,b
  1842  001314  0100               	movlb	0	; () banked
  1843  001316  0100               	movlb	0	; () banked
  1844  001318  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1845  00131A  0100               	movlb	0	; () banked
  1846  00131C  0100               	movlb	0	; () banked
  1847  00131E  5BA9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1848  001320                     l2799:
  1849                           
  1850                           ; BSR set to: 0
  1851  001320  0100               	movlb	0	; () banked
  1852  001322  0100               	movlb	0	; () banked
  1853  001324  0100               	movlb	0	; () banked
  1854  001326  90D8               	bcf	status,0,c
  1855  001328  33AB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1856  00132A  33AA               	rrcf	___lwmod@divisor& (0+255),f,b
  1857                           
  1858                           ; BSR set to: 0
  1859  00132C  0100               	movlb	0	; () banked
  1860  00132E  0100               	movlb	0	; () banked
  1861  001330  2FAD               	decfsz	___lwmod@counter& (0+255),f,b
  1862  001332  D7DC               	goto	l2795
  1863  001334                     l1055:
  1864                           
  1865                           ; BSR set to: 0
  1866  001334  C0A8  F0A8         	movff	___lwmod@dividend,?___lwmod
  1867  001338  C0A9  F0A9         	movff	___lwmod@dividend+1,?___lwmod+1
  1868                           
  1869                           ; BSR set to: 0
  1870  00133C  0012               	return	
  1871  00133E                     __end_of___lwmod:
  1872                           	opt stack 0
  1873                           tblptru	equ	0xFF8
  1874                           tblptrh	equ	0xFF7
  1875                           tblptrl	equ	0xFF6
  1876                           tablat	equ	0xFF5
  1877                           postinc0	equ	0xFEE
  1878                           wreg	equ	0xFE8
  1879                           postdec1	equ	0xFE5
  1880                           fsr1h	equ	0xFE2
  1881                           fsr1l	equ	0xFE1
  1882                           indf2	equ	0xFDF
  1883                           postinc2	equ	0xFDE
  1884                           postdec2	equ	0xFDD
  1885                           fsr2h	equ	0xFDA
  1886                           fsr2l	equ	0xFD9
  1887                           status	equ	0xFD8
  1888                           
  1889 ;; *************** function _FromMainHigh_sendmsg *****************
  1890 ;; Defined at:
  1891 ;;		line 174 in file "../src/messages.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;  length          1    wreg     unsigned char 
  1894 ;;  msgtype         1   62[BANK0 ] unsigned char 
  1895 ;;  data            2   63[BANK0 ] PTR void 
  1896 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), 
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;  length          1   65[BANK0 ] unsigned char 
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  1    wreg      char 
  1901 ;; Registers used:
  1902 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1908 ;;      Params:         0       3       0       0       0
  1909 ;;      Locals:         0       1       0       0       0
  1910 ;;      Temps:          0       0       0       0       0
  1911 ;;      Totals:         0       4       0       0       0
  1912 ;;Total ram usage:        4 bytes
  1913 ;; Hardware stack levels used:    1
  1914 ;; Hardware stack levels required when called:   12
  1915 ;; This function calls:
  1916 ;;		_send_msg
  1917 ;; This function is called by:
  1918 ;;		_timer1_lthread
  1919 ;;		_timer0_lthread
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           	psect	text5
  1924  0018CA                     __ptext5:
  1925                           	opt stack 0
  1926  0018CA                     _FromMainHigh_sendmsg:
  1927                           	opt stack 16
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;incstack = 0
  1931                           ;FromMainHigh_sendmsg@length stored from wreg
  1932  0018CA  CFE8 F0C1          	movff	wreg,FromMainHigh_sendmsg@length
  1933                           
  1934                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1935  0018CE  0102               	movlb	2	; () banked
  1936  0018D0  0E02               	movlw	high _FromMainHigh_MQ
  1937  0018D2  0100               	movlb	0	; () banked
  1938  0018D4  0100               	movlb	0	; () banked
  1939  0018D6  6FB3               	movwf	(send_msg@qptr+1)& (0+255),b
  1940  0018D8  0102               	movlb	2	; () banked
  1941  0018DA  0E00               	movlw	low _FromMainHigh_MQ
  1942  0018DC  0100               	movlb	0	; () banked
  1943  0018DE  0100               	movlb	0	; () banked
  1944  0018E0  6FB2               	movwf	send_msg@qptr& (0+255),b
  1945  0018E2  C0C1  F0B4         	movff	FromMainHigh_sendmsg@length,send_msg@length
  1946  0018E6  C0BE  F0B5         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  1947  0018EA  0100               	movlb	0	; () banked
  1948  0018EC  0100               	movlb	0	; () banked
  1949  0018EE  C0C0  F0B7         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  1950  0018F2  0100               	movlb	0	; () banked
  1951  0018F4  0100               	movlb	0	; () banked
  1952  0018F6  C0BF  F0B6         	movff	FromMainHigh_sendmsg@data,send_msg@data
  1953  0018FA  EC60  F006         	call	_send_msg	;wreg free
  1954  0018FE  0012               	return	
  1955  001900                     __end_of_FromMainHigh_sendmsg:
  1956                           	opt stack 0
  1957                           tblptru	equ	0xFF8
  1958                           tblptrh	equ	0xFF7
  1959                           tblptrl	equ	0xFF6
  1960                           tablat	equ	0xFF5
  1961                           postinc0	equ	0xFEE
  1962                           wreg	equ	0xFE8
  1963                           postdec1	equ	0xFE5
  1964                           fsr1h	equ	0xFE2
  1965                           fsr1l	equ	0xFE1
  1966                           indf2	equ	0xFDF
  1967                           postinc2	equ	0xFDE
  1968                           postdec2	equ	0xFDD
  1969                           fsr2h	equ	0xFDA
  1970                           fsr2l	equ	0xFD9
  1971                           status	equ	0xFD8
  1972                           
  1973 ;; *************** function _send_msg *****************
  1974 ;; Defined at:
  1975 ;;		line 24 in file "../src/messages.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;  qptr            2   50[BANK0 ] PTR struct __msg_queue
  1978 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1979 ;;  length          1   52[BANK0 ] unsigned char 
  1980 ;;  msgtype         1   53[BANK0 ] unsigned char 
  1981 ;;  data            2   54[BANK0 ] PTR void 
  1982 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  1983 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;  qmsg            2   60[BANK0 ] PTR struct __msg
  1986 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  1987 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1988 ;;  tlength         2   57[BANK0 ] unsigned int 
  1989 ;;  slot            1   59[BANK0 ] unsigned char 
  1990 ;; Return value:  Size  Location     Type
  1991 ;;                  1    wreg      char 
  1992 ;; Registers used:
  1993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1999 ;;      Params:         0       6       0       0       0
  2000 ;;      Locals:         0       5       0       0       0
  2001 ;;      Temps:          0       1       0       0       0
  2002 ;;      Totals:         0      12       0       0       0
  2003 ;;Total ram usage:       12 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; Hardware stack levels required when called:   11
  2006 ;; This function calls:
  2007 ;;		_memcpy
  2008 ;; This function is called by:
  2009 ;;		_FromMainHigh_sendmsg
  2010 ;;		_FromMainLow_sendmsg
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           	psect	text6
  2015  000CC0                     __ptext6:
  2016                           	opt stack 0
  2017  000CC0                     _send_msg:
  2018                           	opt stack 16
  2019                           
  2020                           ;messages.c: 25: unsigned char slot;
  2021                           ;messages.c: 27: msg *qmsg;
  2022                           ;messages.c: 28: size_t tlength = length;
  2023                           
  2024                           ;incstack = 0
  2025  000CC0  0100               	movlb	0	; () banked
  2026  000CC2  0100               	movlb	0	; () banked
  2027  000CC4  C0B4  F0B9         	movff	send_msg@length,send_msg@tlength
  2028  000CC8  0100               	movlb	0	; () banked
  2029  000CCA  0100               	movlb	0	; () banked
  2030  000CCC  6BBA               	clrf	(send_msg@tlength+1)& (0+255),b
  2031                           
  2032                           ; BSR set to: 0
  2033                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2034  000CCE  0100               	movlb	0	; () banked
  2035  000CD0  EE20 F034          	lfsr	2,52
  2036  000CD4  0100               	movlb	0	; () banked
  2037  000CD6  51B2               	movf	send_msg@qptr& (0+255),w,b
  2038  000CD8  26D9               	addwf	fsr2l,f,c
  2039  000CDA  0100               	movlb	0	; () banked
  2040  000CDC  51B3               	movf	(send_msg@qptr+1)& (0+255),w,b
  2041  000CDE  22DA               	addwfc	fsr2h,f,c
  2042  000CE0  50DF               	movf	indf2,w,c
  2043  000CE2  0100               	movlb	0	; () banked
  2044  000CE4  0100               	movlb	0	; () banked
  2045  000CE6  6FBB               	movwf	send_msg@slot& (0+255),b
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2049  000CE8  0100               	movlb	0	; () banked
  2050  000CEA  0100               	movlb	0	; () banked
  2051  000CEC  51BB               	movf	send_msg@slot& (0+255),w,b
  2052  000CEE  0D0D               	mullw	13
  2053  000CF0  50F3               	movf	prodl,w,c
  2054  000CF2  0100               	movlb	0	; () banked
  2055  000CF4  0100               	movlb	0	; () banked
  2056  000CF6  25B2               	addwf	send_msg@qptr& (0+255),w,b
  2057  000CF8  0100               	movlb	0	; () banked
  2058  000CFA  0100               	movlb	0	; () banked
  2059  000CFC  6FBC               	movwf	send_msg@qmsg& (0+255),b
  2060  000CFE  50F4               	movf	prodh,w,c
  2061  000D00  0100               	movlb	0	; () banked
  2062  000D02  0100               	movlb	0	; () banked
  2063  000D04  21B3               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2064  000D06  0100               	movlb	0	; () banked
  2065  000D08  6FBD               	movwf	(send_msg@qmsg+1)& (0+255),b
  2066                           
  2067                           ; BSR set to: 0
  2068                           ;messages.c: 41: if (qmsg->full != 0) {
  2069  000D0A  C0BC  FFD9         	movff	send_msg@qmsg,fsr2l
  2070  000D0E  C0BD  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2071  000D12  50DF               	movf	indf2,w,c
  2072  000D14  B4D8               	btfsc	status,2,c
  2073  000D16  D002               	goto	l2403
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;messages.c: 42: return (-1);
  2077  000D18  0EFF               	movlw	255
  2078  000D1A  0012               	return	
  2079  000D1C                     l2403:
  2080                           
  2081                           ; BSR set to: 0
  2082                           ;messages.c: 43: }
  2083                           ;messages.c: 46: qmsg->length = length;
  2084  000D1C  0100               	movlb	0	; () banked
  2085  000D1E  EE20 F001          	lfsr	2,1
  2086  000D22  0100               	movlb	0	; () banked
  2087  000D24  51BC               	movf	send_msg@qmsg& (0+255),w,b
  2088  000D26  26D9               	addwf	fsr2l,f,c
  2089  000D28  0100               	movlb	0	; () banked
  2090  000D2A  51BD               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2091  000D2C  22DA               	addwfc	fsr2h,f,c
  2092  000D2E  0100               	movlb	0	; () banked
  2093  000D30  C0B4  FFDF         	movff	send_msg@length,indf2
  2094                           
  2095                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2096  000D34  0100               	movlb	0	; () banked
  2097  000D36  EE20 F002          	lfsr	2,2
  2098  000D3A  0100               	movlb	0	; () banked
  2099  000D3C  51BC               	movf	send_msg@qmsg& (0+255),w,b
  2100  000D3E  26D9               	addwf	fsr2l,f,c
  2101  000D40  0100               	movlb	0	; () banked
  2102  000D42  51BD               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2103  000D44  22DA               	addwfc	fsr2h,f,c
  2104  000D46  0100               	movlb	0	; () banked
  2105  000D48  C0B5  FFDF         	movff	send_msg@msgtype,indf2
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2109  000D4C  0E03               	movlw	3
  2110  000D4E  0100               	movlb	0	; () banked
  2111  000D50  0100               	movlb	0	; () banked
  2112  000D52  25BC               	addwf	send_msg@qmsg& (0+255),w,b
  2113  000D54  0100               	movlb	0	; () banked
  2114  000D56  0100               	movlb	0	; () banked
  2115  000D58  6FA8               	movwf	memcpy@d1& (0+255),b
  2116  000D5A  0E00               	movlw	0
  2117  000D5C  0100               	movlb	0	; () banked
  2118  000D5E  0100               	movlb	0	; () banked
  2119  000D60  21BD               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2120  000D62  0100               	movlb	0	; () banked
  2121  000D64  6FA9               	movwf	(memcpy@d1+1)& (0+255),b
  2122  000D66  0100               	movlb	0	; () banked
  2123  000D68  0100               	movlb	0	; () banked
  2124  000D6A  C0B7  F0AB         	movff	send_msg@data+1,memcpy@s1+1
  2125  000D6E  0100               	movlb	0	; () banked
  2126  000D70  0100               	movlb	0	; () banked
  2127  000D72  C0B6  F0AA         	movff	send_msg@data,memcpy@s1
  2128  000D76  C0B9  F0AC         	movff	send_msg@tlength,memcpy@n
  2129  000D7A  C0BA  F0AD         	movff	send_msg@tlength+1,memcpy@n+1
  2130  000D7E  EC2D  F00B         	call	_memcpy	;wreg free
  2131                           
  2132                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2133  000D82  0100               	movlb	0	; () banked
  2134  000D84  EE20 F034          	lfsr	2,52
  2135  000D88  0100               	movlb	0	; () banked
  2136  000D8A  51B2               	movf	send_msg@qptr& (0+255),w,b
  2137  000D8C  26D9               	addwf	fsr2l,f,c
  2138  000D8E  0100               	movlb	0	; () banked
  2139  000D90  51B3               	movf	(send_msg@qptr+1)& (0+255),w,b
  2140  000D92  22DA               	addwfc	fsr2h,f,c
  2141  000D94  0100               	movlb	0	; () banked
  2142  000D96  EE10 F034          	lfsr	1,52
  2143  000D9A  0100               	movlb	0	; () banked
  2144  000D9C  51B2               	movf	send_msg@qptr& (0+255),w,b
  2145  000D9E  26E1               	addwf	fsr1l,f,c
  2146  000DA0  0100               	movlb	0	; () banked
  2147  000DA2  51B3               	movf	(send_msg@qptr+1)& (0+255),w,b
  2148  000DA4  22E2               	addwfc	fsr1h,f,c
  2149  000DA6  50E7               	movf	indf1,w,c
  2150  000DA8  0100               	movlb	0	; () banked
  2151  000DAA  6FB8               	movwf	??_send_msg& (0+255),b
  2152  000DAC  0100               	movlb	0	; () banked
  2153  000DAE  29B8               	incf	??_send_msg& (0+255),w,b
  2154  000DB0  0B03               	andlw	3
  2155  000DB2  6EDF               	movwf	indf2,c
  2156                           
  2157                           ; BSR set to: 0
  2158                           ;messages.c: 59: qmsg->full = 1;
  2159  000DB4  C0BC  FFD9         	movff	send_msg@qmsg,fsr2l
  2160  000DB8  C0BD  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2161  000DBC  0E01               	movlw	1
  2162  000DBE  6EDF               	movwf	indf2,c
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;messages.c: 60: return (1);
  2166  000DC0  0E01               	movlw	1
  2167  000DC2  0012               	return	
  2168  000DC4                     __end_of_send_msg:
  2169                           	opt stack 0
  2170                           tblptru	equ	0xFF8
  2171                           tblptrh	equ	0xFF7
  2172                           tblptrl	equ	0xFF6
  2173                           tablat	equ	0xFF5
  2174                           prodh	equ	0xFF4
  2175                           prodl	equ	0xFF3
  2176                           postinc0	equ	0xFEE
  2177                           wreg	equ	0xFE8
  2178                           indf1	equ	0xFE7
  2179                           postdec1	equ	0xFE5
  2180                           fsr1h	equ	0xFE2
  2181                           fsr1l	equ	0xFE1
  2182                           indf2	equ	0xFDF
  2183                           postinc2	equ	0xFDE
  2184                           postdec2	equ	0xFDD
  2185                           fsr2h	equ	0xFDA
  2186                           fsr2l	equ	0xFD9
  2187                           status	equ	0xFD8
  2188                           
  2189 ;; *************** function _start_i2c_slave_reply *****************
  2190 ;; Defined at:
  2191 ;;		line 54 in file "../src/my_i2c.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  length          1    wreg     unsigned char 
  2194 ;;  msg             2   40[BANK0 ] PTR unsigned char 
  2195 ;;		 -> main@msgbuffer(11), i2c_int_handler@msgbuffer(11), 
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;  length          1   44[BANK0 ] unsigned char 
  2198 ;; Return value:  Size  Location     Type
  2199 ;;		None               void
  2200 ;; Registers used:
  2201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2207 ;;      Params:         0       2       0       0       0
  2208 ;;      Locals:         0       1       0       0       0
  2209 ;;      Temps:          0       2       0       0       0
  2210 ;;      Totals:         0       5       0       0       0
  2211 ;;Total ram usage:        5 bytes
  2212 ;; Hardware stack levels used:    1
  2213 ;; Hardware stack levels required when called:   10
  2214 ;; This function calls:
  2215 ;;		Nothing
  2216 ;; This function is called by:
  2217 ;;		_main
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text7
  2222  000BB2                     __ptext7:
  2223                           	opt stack 0
  2224  000BB2                     _start_i2c_slave_reply:
  2225                           	opt stack 19
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;incstack = 0
  2229                           ;start_i2c_slave_reply@length stored from wreg
  2230  000BB2  CFE8 F0AC          	movff	wreg,start_i2c_slave_reply@length
  2231                           
  2232                           ;my_i2c.c: 56: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2233  000BB6  0100               	movlb	0	; () banked
  2234  000BB8  EE20 F019          	lfsr	2,25
  2235  000BBC  0100               	movlb	0	; () banked
  2236  000BBE  51CD               	movf	_ic_ptr& (0+255),w,b
  2237  000BC0  26D9               	addwf	fsr2l,f,c
  2238  000BC2  0100               	movlb	0	; () banked
  2239  000BC4  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2240  000BC6  22DA               	addwfc	fsr2h,f,c
  2241  000BC8  0E00               	movlw	0
  2242  000BCA  6EDF               	movwf	indf2,c
  2243  000BCC  D042               	goto	l2169
  2244  000BCE                     l2165:
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;my_i2c.c: 57: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2248  000BCE  0100               	movlb	0	; () banked
  2249  000BD0  EE20 F019          	lfsr	2,25
  2250  000BD4  0100               	movlb	0	; () banked
  2251  000BD6  51CD               	movf	_ic_ptr& (0+255),w,b
  2252  000BD8  26D9               	addwf	fsr2l,f,c
  2253  000BDA  0100               	movlb	0	; () banked
  2254  000BDC  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2255  000BDE  22DA               	addwfc	fsr2h,f,c
  2256  000BE0  50DF               	movf	indf2,w,c
  2257  000BE2  0100               	movlb	0	; () banked
  2258  000BE4  6FAA               	movwf	??_start_i2c_slave_reply& (0+255),b
  2259  000BE6  0100               	movlb	0	; () banked
  2260  000BE8  51AA               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2261  000BEA  0D01               	mullw	1
  2262  000BEC  50F3               	movf	prodl,w,c
  2263  000BEE  0100               	movlb	0	; () banked
  2264  000BF0  0100               	movlb	0	; () banked
  2265  000BF2  25A8               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2266  000BF4  6ED9               	movwf	fsr2l,c
  2267  000BF6  50F4               	movf	prodh,w,c
  2268  000BF8  0100               	movlb	0	; () banked
  2269  000BFA  0100               	movlb	0	; () banked
  2270  000BFC  21A9               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2271  000BFE  6EDA               	movwf	fsr2h,c
  2272  000C00  0100               	movlb	0	; () banked
  2273  000C02  EE10 F019          	lfsr	1,25
  2274  000C06  0100               	movlb	0	; () banked
  2275  000C08  51CD               	movf	_ic_ptr& (0+255),w,b
  2276  000C0A  26E1               	addwf	fsr1l,f,c
  2277  000C0C  0100               	movlb	0	; () banked
  2278  000C0E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2279  000C10  22E2               	addwfc	fsr1h,f,c
  2280  000C12  50E7               	movf	indf1,w,c
  2281  000C14  0100               	movlb	0	; () banked
  2282  000C16  6FAB               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2283  000C18  0100               	movlb	0	; () banked
  2284  000C1A  51AB               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2285  000C1C  0D01               	mullw	1
  2286  000C1E  0E0F               	movlw	15
  2287  000C20  26F3               	addwf	prodl,f,c
  2288  000C22  0E00               	movlw	0
  2289  000C24  22F4               	addwfc	prodh,f,c
  2290  000C26  50F3               	movf	prodl,w,c
  2291  000C28  0100               	movlb	0	; () banked
  2292  000C2A  0100               	movlb	0	; () banked
  2293  000C2C  25CD               	addwf	_ic_ptr& (0+255),w,b
  2294  000C2E  6EE1               	movwf	fsr1l,c
  2295  000C30  50F4               	movf	prodh,w,c
  2296  000C32  0100               	movlb	0	; () banked
  2297  000C34  0100               	movlb	0	; () banked
  2298  000C36  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2299  000C38  6EE2               	movwf	fsr1h,c
  2300  000C3A  CFDF FFE7          	movff	indf2,indf1
  2301                           
  2302                           ; BSR set to: 0
  2303  000C3E  0100               	movlb	0	; () banked
  2304  000C40  EE20 F019          	lfsr	2,25
  2305  000C44  0100               	movlb	0	; () banked
  2306  000C46  51CD               	movf	_ic_ptr& (0+255),w,b
  2307  000C48  26D9               	addwf	fsr2l,f,c
  2308  000C4A  0100               	movlb	0	; () banked
  2309  000C4C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2310  000C4E  22DA               	addwfc	fsr2h,f,c
  2311  000C50  2ADF               	incf	indf2,f,c
  2312  000C52                     l2169:
  2313                           
  2314                           ; BSR set to: 0
  2315  000C52  0100               	movlb	0	; () banked
  2316  000C54  EE20 F019          	lfsr	2,25
  2317  000C58  0100               	movlb	0	; () banked
  2318  000C5A  51CD               	movf	_ic_ptr& (0+255),w,b
  2319  000C5C  26D9               	addwf	fsr2l,f,c
  2320  000C5E  0100               	movlb	0	; () banked
  2321  000C60  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2322  000C62  22DA               	addwfc	fsr2h,f,c
  2323  000C64  50DF               	movf	indf2,w,c
  2324  000C66  0100               	movlb	0	; () banked
  2325  000C68  6FAA               	movwf	??_start_i2c_slave_reply& (0+255),b
  2326  000C6A  0100               	movlb	0	; () banked
  2327  000C6C  0100               	movlb	0	; () banked
  2328  000C6E  51AC               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2329  000C70  0100               	movlb	0	; () banked
  2330  000C72  5DAA               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2331  000C74  A0D8               	btfss	status,0,c
  2332  000C76  D7AB               	goto	l2165
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;my_i2c.c: 58: }
  2336                           ;my_i2c.c: 59: ic_ptr->outbuflen = length;
  2337                           
  2338                           ; BSR set to: 0
  2339  000C78  0100               	movlb	0	; () banked
  2340  000C7A  EE20 F019          	lfsr	2,25
  2341  000C7E  0100               	movlb	0	; () banked
  2342  000C80  51CD               	movf	_ic_ptr& (0+255),w,b
  2343  000C82  26D9               	addwf	fsr2l,f,c
  2344  000C84  0100               	movlb	0	; () banked
  2345  000C86  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2346  000C88  22DA               	addwfc	fsr2h,f,c
  2347  000C8A  0100               	movlb	0	; () banked
  2348  000C8C  C0AC  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2349                           
  2350                           ;my_i2c.c: 60: ic_ptr->outbufind = 1;
  2351  000C90  0100               	movlb	0	; () banked
  2352  000C92  EE20 F01A          	lfsr	2,26
  2353  000C96  0100               	movlb	0	; () banked
  2354  000C98  51CD               	movf	_ic_ptr& (0+255),w,b
  2355  000C9A  26D9               	addwf	fsr2l,f,c
  2356  000C9C  0100               	movlb	0	; () banked
  2357  000C9E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2358  000CA0  22DA               	addwfc	fsr2h,f,c
  2359  000CA2  0E01               	movlw	1
  2360  000CA4  6EDF               	movwf	indf2,c
  2361                           
  2362                           ;my_i2c.c: 63: SSPBUF = ic_ptr->outbuffer[0];
  2363  000CA6  0100               	movlb	0	; () banked
  2364  000CA8  EE20 F00F          	lfsr	2,15
  2365  000CAC  0100               	movlb	0	; () banked
  2366  000CAE  51CD               	movf	_ic_ptr& (0+255),w,b
  2367  000CB0  26D9               	addwf	fsr2l,f,c
  2368  000CB2  0100               	movlb	0	; () banked
  2369  000CB4  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2370  000CB6  22DA               	addwfc	fsr2h,f,c
  2371  000CB8  50DF               	movf	indf2,w,c
  2372  000CBA  6EC9               	movwf	4041,c	;volatile
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;my_i2c.c: 66: SSPCON1bits.CKP = 1;
  2376  000CBC  88C6               	bsf	4038,4,c	;volatile
  2377                           
  2378                           ; BSR set to: 0
  2379  000CBE  0012               	return	
  2380  000CC0                     __end_of_start_i2c_slave_reply:
  2381                           	opt stack 0
  2382                           tblptru	equ	0xFF8
  2383                           tblptrh	equ	0xFF7
  2384                           tblptrl	equ	0xFF6
  2385                           tablat	equ	0xFF5
  2386                           prodh	equ	0xFF4
  2387                           prodl	equ	0xFF3
  2388                           postinc0	equ	0xFEE
  2389                           wreg	equ	0xFE8
  2390                           indf1	equ	0xFE7
  2391                           postdec1	equ	0xFE5
  2392                           fsr1h	equ	0xFE2
  2393                           fsr1l	equ	0xFE1
  2394                           indf2	equ	0xFDF
  2395                           postinc2	equ	0xFDE
  2396                           postdec2	equ	0xFDD
  2397                           fsr2h	equ	0xFDA
  2398                           fsr2l	equ	0xFD9
  2399                           status	equ	0xFD8
  2400                           
  2401 ;; *************** function _init_uart_recv *****************
  2402 ;; Defined at:
  2403 ;;		line 30 in file "../src/my_uart.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  uc              2   40[BANK0 ] PTR struct __uart_comm
  2406 ;;		 -> main@uc(5), 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;		None
  2409 ;; Return value:  Size  Location     Type
  2410 ;;		None               void
  2411 ;; Registers used:
  2412 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2418 ;;      Params:         0       2       0       0       0
  2419 ;;      Locals:         0       0       0       0       0
  2420 ;;      Temps:          0       0       0       0       0
  2421 ;;      Totals:         0       2       0       0       0
  2422 ;;Total ram usage:        2 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; Hardware stack levels required when called:   10
  2425 ;; This function calls:
  2426 ;;		Nothing
  2427 ;; This function is called by:
  2428 ;;		_main
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text8
  2433  001A06                     __ptext8:
  2434                           	opt stack 0
  2435  001A06                     _init_uart_recv:
  2436                           	opt stack 19
  2437                           
  2438                           ;my_uart.c: 31: uc_ptr = uc;
  2439                           
  2440                           ; BSR set to: 0
  2441                           ;incstack = 0
  2442  001A06  0100               	movlb	0	; () banked
  2443  001A08  C0A9  F050         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2444  001A0C  0100               	movlb	0	; () banked
  2445  001A0E  C0A8  F04F         	movff	init_uart_recv@uc,_uc_ptr
  2446                           
  2447                           ; BSR set to: 0
  2448                           ;my_uart.c: 32: uc_ptr->buflen = 0;
  2449  001A12  EE20 F004          	lfsr	2,4
  2450  001A16  504F               	movf	_uc_ptr,w,c
  2451  001A18  26D9               	addwf	fsr2l,f,c
  2452  001A1A  5050               	movf	_uc_ptr+1,w,c
  2453  001A1C  22DA               	addwfc	fsr2h,f,c
  2454  001A1E  0E00               	movlw	0
  2455  001A20  6EDF               	movwf	indf2,c
  2456                           
  2457                           ; BSR set to: 0
  2458  001A22  0012               	return	
  2459  001A24                     __end_of_init_uart_recv:
  2460                           	opt stack 0
  2461                           tblptru	equ	0xFF8
  2462                           tblptrh	equ	0xFF7
  2463                           tblptrl	equ	0xFF6
  2464                           tablat	equ	0xFF5
  2465                           prodh	equ	0xFF4
  2466                           prodl	equ	0xFF3
  2467                           postinc0	equ	0xFEE
  2468                           wreg	equ	0xFE8
  2469                           indf1	equ	0xFE7
  2470                           postdec1	equ	0xFE5
  2471                           fsr1h	equ	0xFE2
  2472                           fsr1l	equ	0xFE1
  2473                           indf2	equ	0xFDF
  2474                           postinc2	equ	0xFDE
  2475                           postdec2	equ	0xFDD
  2476                           fsr2h	equ	0xFDA
  2477                           fsr2l	equ	0xFD9
  2478                           status	equ	0xFD8
  2479                           
  2480 ;; *************** function _init_timer1_lthread *****************
  2481 ;; Defined at:
  2482 ;;		line 6 in file "../src/timer1_thread.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  tptr            2   40[BANK0 ] PTR struct __timer1_thre
  2485 ;;		 -> main@t1thread_data(2), 
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;		None
  2488 ;; Return value:  Size  Location     Type
  2489 ;;		None               void
  2490 ;; Registers used:
  2491 ;;		wreg, fsr2l, fsr2h
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2497 ;;      Params:         0       2       0       0       0
  2498 ;;      Locals:         0       0       0       0       0
  2499 ;;      Temps:          0       0       0       0       0
  2500 ;;      Totals:         0       2       0       0       0
  2501 ;;Total ram usage:        2 bytes
  2502 ;; Hardware stack levels used:    1
  2503 ;; Hardware stack levels required when called:   10
  2504 ;; This function calls:
  2505 ;;		Nothing
  2506 ;; This function is called by:
  2507 ;;		_main
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           	psect	text9
  2512  001A58                     __ptext9:
  2513                           	opt stack 0
  2514  001A58                     _init_timer1_lthread:
  2515                           	opt stack 19
  2516                           
  2517                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2518                           
  2519                           ; BSR set to: 0
  2520                           ;incstack = 0
  2521  001A58  C0A8  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2522  001A5C  C0A9  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2523  001A60  0E00               	movlw	0
  2524  001A62  6EDE               	movwf	postinc2,c
  2525  001A64  0E00               	movlw	0
  2526  001A66  6EDD               	movwf	postdec2,c
  2527  001A68  0012               	return	
  2528  001A6A                     __end_of_init_timer1_lthread:
  2529                           	opt stack 0
  2530                           tblptru	equ	0xFF8
  2531                           tblptrh	equ	0xFF7
  2532                           tblptrl	equ	0xFF6
  2533                           tablat	equ	0xFF5
  2534                           prodh	equ	0xFF4
  2535                           prodl	equ	0xFF3
  2536                           postinc0	equ	0xFEE
  2537                           wreg	equ	0xFE8
  2538                           indf1	equ	0xFE7
  2539                           postdec1	equ	0xFE5
  2540                           fsr1h	equ	0xFE2
  2541                           fsr1l	equ	0xFE1
  2542                           indf2	equ	0xFDF
  2543                           postinc2	equ	0xFDE
  2544                           postdec2	equ	0xFDD
  2545                           fsr2h	equ	0xFDA
  2546                           fsr2l	equ	0xFD9
  2547                           status	equ	0xFD8
  2548                           
  2549 ;; *************** function _init_timer0_lthread *****************
  2550 ;; Defined at:
  2551 ;;		line 10 in file "../src/timer0_thread.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  tptr            2   40[BANK0 ] PTR struct __timer0_thre
  2554 ;;		 -> main@t0thread_data(2), 
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;		None
  2557 ;; Return value:  Size  Location     Type
  2558 ;;		None               void
  2559 ;; Registers used:
  2560 ;;		wreg, fsr2l, fsr2h
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2566 ;;      Params:         0       2       0       0       0
  2567 ;;      Locals:         0       0       0       0       0
  2568 ;;      Temps:          0       0       0       0       0
  2569 ;;      Totals:         0       2       0       0       0
  2570 ;;Total ram usage:        2 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:   10
  2573 ;; This function calls:
  2574 ;;		Nothing
  2575 ;; This function is called by:
  2576 ;;		_main
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text10
  2581  001A6A                     __ptext10:
  2582                           	opt stack 0
  2583  001A6A                     _init_timer0_lthread:
  2584                           	opt stack 19
  2585                           
  2586                           ;timer0_thread.c: 11: tptr->msgcount = 0;
  2587                           
  2588                           ;incstack = 0
  2589  001A6A  C0A8  FFD9         	movff	init_timer0_lthread@tptr,fsr2l
  2590  001A6E  C0A9  FFDA         	movff	init_timer0_lthread@tptr+1,fsr2h
  2591  001A72  0E00               	movlw	0
  2592  001A74  6EDE               	movwf	postinc2,c
  2593  001A76  0E00               	movlw	0
  2594  001A78  6EDD               	movwf	postdec2,c
  2595  001A7A  0012               	return	
  2596  001A7C                     __end_of_init_timer0_lthread:
  2597                           	opt stack 0
  2598                           tblptru	equ	0xFF8
  2599                           tblptrh	equ	0xFF7
  2600                           tblptrl	equ	0xFF6
  2601                           tablat	equ	0xFF5
  2602                           prodh	equ	0xFF4
  2603                           prodl	equ	0xFF3
  2604                           postinc0	equ	0xFEE
  2605                           wreg	equ	0xFE8
  2606                           indf1	equ	0xFE7
  2607                           postdec1	equ	0xFE5
  2608                           fsr1h	equ	0xFE2
  2609                           fsr1l	equ	0xFE1
  2610                           indf2	equ	0xFDF
  2611                           postinc2	equ	0xFDE
  2612                           postdec2	equ	0xFDD
  2613                           fsr2h	equ	0xFDA
  2614                           fsr2l	equ	0xFD9
  2615                           status	equ	0xFD8
  2616                           
  2617 ;; *************** function _init_queues *****************
  2618 ;; Defined at:
  2619 ;;		line 194 in file "../src/messages.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;		None
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;		None               void
  2626 ;; Registers used:
  2627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2633 ;;      Params:         0       0       0       0       0
  2634 ;;      Locals:         0       0       0       0       0
  2635 ;;      Temps:          0       1       0       0       0
  2636 ;;      Totals:         0       1       0       0       0
  2637 ;;Total ram usage:        1 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; Hardware stack levels required when called:   11
  2640 ;; This function calls:
  2641 ;;		_init_queue
  2642 ;; This function is called by:
  2643 ;;		_main
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           	psect	text11
  2648  001520                     __ptext11:
  2649                           	opt stack 0
  2650  001520                     _init_queues:
  2651                           	opt stack 18
  2652                           
  2653                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2654                           
  2655                           ;incstack = 0
  2656  001520  0100               	movlb	0	; () banked
  2657  001522  6FAC               	movwf	??_init_queues& (0+255),b
  2658  001524  0E00               	movlw	0
  2659  001526  0100               	movlb	0	; () banked
  2660  001528  0100               	movlb	0	; () banked
  2661  00152A  6FCF               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2662  00152C  0100               	movlb	0	; () banked
  2663  00152E  51AC               	movf	??_init_queues& (0+255),w,b
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2667  001530  0101               	movlb	1	; () banked
  2668  001532  0E01               	movlw	high _ToMainLow_MQ
  2669  001534  0100               	movlb	0	; () banked
  2670  001536  0100               	movlb	0	; () banked
  2671  001538  6FA9               	movwf	(init_queue@qptr+1)& (0+255),b
  2672  00153A  0101               	movlb	1	; () banked
  2673  00153C  0E6C               	movlw	low _ToMainLow_MQ
  2674  00153E  0100               	movlb	0	; () banked
  2675  001540  0100               	movlb	0	; () banked
  2676  001542  6FA8               	movwf	init_queue@qptr& (0+255),b
  2677  001544  ECE1  F009         	call	_init_queue	;wreg free
  2678                           
  2679                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2680  001548  0101               	movlb	1	; () banked
  2681  00154A  0E01               	movlw	high _ToMainHigh_MQ
  2682  00154C  0100               	movlb	0	; () banked
  2683  00154E  0100               	movlb	0	; () banked
  2684  001550  6FA9               	movwf	(init_queue@qptr+1)& (0+255),b
  2685  001552  0101               	movlb	1	; () banked
  2686  001554  0E36               	movlw	low _ToMainHigh_MQ
  2687  001556  0100               	movlb	0	; () banked
  2688  001558  0100               	movlb	0	; () banked
  2689  00155A  6FA8               	movwf	init_queue@qptr& (0+255),b
  2690  00155C  ECE1  F009         	call	_init_queue	;wreg free
  2691                           
  2692                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2693  001560  0101               	movlb	1	; () banked
  2694  001562  0E01               	movlw	high _FromMainLow_MQ
  2695  001564  0100               	movlb	0	; () banked
  2696  001566  0100               	movlb	0	; () banked
  2697  001568  6FA9               	movwf	(init_queue@qptr+1)& (0+255),b
  2698  00156A  0101               	movlb	1	; () banked
  2699  00156C  0E00               	movlw	low _FromMainLow_MQ
  2700  00156E  0100               	movlb	0	; () banked
  2701  001570  0100               	movlb	0	; () banked
  2702  001572  6FA8               	movwf	init_queue@qptr& (0+255),b
  2703  001574  ECE1  F009         	call	_init_queue	;wreg free
  2704                           
  2705                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2706  001578  0102               	movlb	2	; () banked
  2707  00157A  0E02               	movlw	high _FromMainHigh_MQ
  2708  00157C  0100               	movlb	0	; () banked
  2709  00157E  0100               	movlb	0	; () banked
  2710  001580  6FA9               	movwf	(init_queue@qptr+1)& (0+255),b
  2711  001582  0102               	movlb	2	; () banked
  2712  001584  0E00               	movlw	low _FromMainHigh_MQ
  2713  001586  0100               	movlb	0	; () banked
  2714  001588  0100               	movlb	0	; () banked
  2715  00158A  6FA8               	movwf	init_queue@qptr& (0+255),b
  2716  00158C  ECE1  F009         	call	_init_queue	;wreg free
  2717  001590  0012               	return	
  2718  001592                     __end_of_init_queues:
  2719                           	opt stack 0
  2720                           tblptru	equ	0xFF8
  2721                           tblptrh	equ	0xFF7
  2722                           tblptrl	equ	0xFF6
  2723                           tablat	equ	0xFF5
  2724                           prodh	equ	0xFF4
  2725                           prodl	equ	0xFF3
  2726                           postinc0	equ	0xFEE
  2727                           wreg	equ	0xFE8
  2728                           indf1	equ	0xFE7
  2729                           postdec1	equ	0xFE5
  2730                           fsr1h	equ	0xFE2
  2731                           fsr1l	equ	0xFE1
  2732                           indf2	equ	0xFDF
  2733                           postinc2	equ	0xFDE
  2734                           postdec2	equ	0xFDD
  2735                           fsr2h	equ	0xFDA
  2736                           fsr2l	equ	0xFD9
  2737                           status	equ	0xFD8
  2738                           
  2739 ;; *************** function _init_queue *****************
  2740 ;; Defined at:
  2741 ;;		line 14 in file "../src/messages.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;  qptr            2   40[BANK0 ] PTR struct __msg_queue
  2744 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;  i               1   43[BANK0 ] unsigned char 
  2747 ;; Return value:  Size  Location     Type
  2748 ;;		None               void
  2749 ;; Registers used:
  2750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2756 ;;      Params:         0       2       0       0       0
  2757 ;;      Locals:         0       1       0       0       0
  2758 ;;      Temps:          0       1       0       0       0
  2759 ;;      Totals:         0       4       0       0       0
  2760 ;;Total ram usage:        4 bytes
  2761 ;; Hardware stack levels used:    1
  2762 ;; Hardware stack levels required when called:   10
  2763 ;; This function calls:
  2764 ;;		Nothing
  2765 ;; This function is called by:
  2766 ;;		_init_queues
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           	psect	text12
  2771  0013C2                     __ptext12:
  2772                           	opt stack 0
  2773  0013C2                     _init_queue:
  2774                           	opt stack 18
  2775                           
  2776                           ;messages.c: 15: unsigned char i;
  2777                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2778                           
  2779                           ;incstack = 0
  2780  0013C2  0100               	movlb	0	; () banked
  2781  0013C4  EE20 F034          	lfsr	2,52
  2782  0013C8  0100               	movlb	0	; () banked
  2783  0013CA  51A8               	movf	init_queue@qptr& (0+255),w,b
  2784  0013CC  26D9               	addwf	fsr2l,f,c
  2785  0013CE  0100               	movlb	0	; () banked
  2786  0013D0  51A9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2787  0013D2  22DA               	addwfc	fsr2h,f,c
  2788  0013D4  0E00               	movlw	0
  2789  0013D6  6EDF               	movwf	indf2,c
  2790                           
  2791                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2792  0013D8  0100               	movlb	0	; () banked
  2793  0013DA  EE20 F035          	lfsr	2,53
  2794  0013DE  0100               	movlb	0	; () banked
  2795  0013E0  51A8               	movf	init_queue@qptr& (0+255),w,b
  2796  0013E2  26D9               	addwf	fsr2l,f,c
  2797  0013E4  0100               	movlb	0	; () banked
  2798  0013E6  51A9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2799  0013E8  22DA               	addwfc	fsr2h,f,c
  2800  0013EA  0E00               	movlw	0
  2801  0013EC  6EDF               	movwf	indf2,c
  2802                           
  2803                           ; BSR set to: 0
  2804                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2805  0013EE  0100               	movlb	0	; () banked
  2806  0013F0  6FAA               	movwf	??_init_queue& (0+255),b
  2807  0013F2  0E00               	movlw	0
  2808  0013F4  0100               	movlb	0	; () banked
  2809  0013F6  0100               	movlb	0	; () banked
  2810  0013F8  6FAB               	movwf	init_queue@i& (0+255),b
  2811  0013FA  0100               	movlb	0	; () banked
  2812  0013FC  51AA               	movf	??_init_queue& (0+255),w,b
  2813                           
  2814                           ; BSR set to: 0
  2815  0013FE  0E03               	movlw	3
  2816  001400  0100               	movlb	0	; () banked
  2817  001402  0100               	movlb	0	; () banked
  2818  001404  65AB               	cpfsgt	init_queue@i& (0+255),b
  2819  001406  D001               	goto	l2385
  2820  001408  0012               	return	
  2821  00140A                     l2385:
  2822                           
  2823                           ; BSR set to: 0
  2824                           ;messages.c: 20: qptr->queue[i].full = 0;
  2825  00140A  0100               	movlb	0	; () banked
  2826  00140C  0100               	movlb	0	; () banked
  2827  00140E  51AB               	movf	init_queue@i& (0+255),w,b
  2828  001410  0D0D               	mullw	13
  2829  001412  50F3               	movf	prodl,w,c
  2830  001414  0100               	movlb	0	; () banked
  2831  001416  0100               	movlb	0	; () banked
  2832  001418  25A8               	addwf	init_queue@qptr& (0+255),w,b
  2833  00141A  6ED9               	movwf	fsr2l,c
  2834  00141C  50F4               	movf	prodh,w,c
  2835  00141E  0100               	movlb	0	; () banked
  2836  001420  0100               	movlb	0	; () banked
  2837  001422  21A9               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2838  001424  6EDA               	movwf	fsr2h,c
  2839  001426  0E00               	movlw	0
  2840  001428  6EDF               	movwf	indf2,c
  2841                           
  2842                           ; BSR set to: 0
  2843  00142A  0100               	movlb	0	; () banked
  2844  00142C  0100               	movlb	0	; () banked
  2845  00142E  2BAB               	incf	init_queue@i& (0+255),f,b
  2846                           
  2847                           ; BSR set to: 0
  2848  001430  0E03               	movlw	3
  2849  001432  0100               	movlb	0	; () banked
  2850  001434  0100               	movlb	0	; () banked
  2851  001436  65AB               	cpfsgt	init_queue@i& (0+255),b
  2852  001438  D7E8               	goto	l2385
  2853  00143A  0012               	return	
  2854  00143C                     __end_of_init_queue:
  2855                           	opt stack 0
  2856                           tblptru	equ	0xFF8
  2857                           tblptrh	equ	0xFF7
  2858                           tblptrl	equ	0xFF6
  2859                           tablat	equ	0xFF5
  2860                           prodh	equ	0xFF4
  2861                           prodl	equ	0xFF3
  2862                           postinc0	equ	0xFEE
  2863                           wreg	equ	0xFE8
  2864                           indf1	equ	0xFE7
  2865                           postdec1	equ	0xFE5
  2866                           fsr1h	equ	0xFE2
  2867                           fsr1l	equ	0xFE1
  2868                           indf2	equ	0xFDF
  2869                           postinc2	equ	0xFDE
  2870                           postdec2	equ	0xFDD
  2871                           fsr2h	equ	0xFDA
  2872                           fsr2l	equ	0xFD9
  2873                           status	equ	0xFD8
  2874                           
  2875 ;; *************** function _init_i2c *****************
  2876 ;; Defined at:
  2877 ;;		line 302 in file "../src/my_i2c.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  ic              2   40[BANK0 ] PTR struct __i2c_comm
  2880 ;;		 -> main@ic(28), 
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;		None
  2883 ;; Return value:  Size  Location     Type
  2884 ;;		None               void
  2885 ;; Registers used:
  2886 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2892 ;;      Params:         0       2       0       0       0
  2893 ;;      Locals:         0       0       0       0       0
  2894 ;;      Temps:          0       0       0       0       0
  2895 ;;      Totals:         0       2       0       0       0
  2896 ;;Total ram usage:        2 bytes
  2897 ;; Hardware stack levels used:    1
  2898 ;; Hardware stack levels required when called:   10
  2899 ;; This function calls:
  2900 ;;		Nothing
  2901 ;; This function is called by:
  2902 ;;		_main
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           	psect	text13
  2907  001592                     __ptext13:
  2908                           	opt stack 0
  2909  001592                     _init_i2c:
  2910                           	opt stack 19
  2911                           
  2912                           ;my_i2c.c: 303: ic_ptr = ic;
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;incstack = 0
  2916  001592  0100               	movlb	0	; () banked
  2917  001594  0100               	movlb	0	; () banked
  2918  001596  C0A9  F0CE         	movff	init_i2c@ic+1,_ic_ptr+1
  2919  00159A  0100               	movlb	0	; () banked
  2920  00159C  0100               	movlb	0	; () banked
  2921  00159E  C0A8  F0CD         	movff	init_i2c@ic,_ic_ptr
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;my_i2c.c: 304: ic_ptr->buflen = 0;
  2925  0015A2  0100               	movlb	0	; () banked
  2926  0015A4  EE20 F00A          	lfsr	2,10
  2927  0015A8  0100               	movlb	0	; () banked
  2928  0015AA  51CD               	movf	_ic_ptr& (0+255),w,b
  2929  0015AC  26D9               	addwf	fsr2l,f,c
  2930  0015AE  0100               	movlb	0	; () banked
  2931  0015B0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2932  0015B2  22DA               	addwfc	fsr2h,f,c
  2933  0015B4  0E00               	movlw	0
  2934  0015B6  6EDF               	movwf	indf2,c
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;my_i2c.c: 305: ic_ptr->event_count = 0;
  2938  0015B8  0100               	movlb	0	; () banked
  2939  0015BA  EE20 F00B          	lfsr	2,11
  2940  0015BE  0100               	movlb	0	; () banked
  2941  0015C0  51CD               	movf	_ic_ptr& (0+255),w,b
  2942  0015C2  26D9               	addwf	fsr2l,f,c
  2943  0015C4  0100               	movlb	0	; () banked
  2944  0015C6  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2945  0015C8  22DA               	addwfc	fsr2h,f,c
  2946  0015CA  0E00               	movlw	0
  2947  0015CC  6EDF               	movwf	indf2,c
  2948                           
  2949                           ; BSR set to: 0
  2950                           ;my_i2c.c: 306: ic_ptr->status = 0x5;
  2951  0015CE  0100               	movlb	0	; () banked
  2952  0015D0  EE20 F00C          	lfsr	2,12
  2953  0015D4  0100               	movlb	0	; () banked
  2954  0015D6  51CD               	movf	_ic_ptr& (0+255),w,b
  2955  0015D8  26D9               	addwf	fsr2l,f,c
  2956  0015DA  0100               	movlb	0	; () banked
  2957  0015DC  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2958  0015DE  22DA               	addwfc	fsr2h,f,c
  2959  0015E0  0E05               	movlw	5
  2960  0015E2  6EDF               	movwf	indf2,c
  2961                           
  2962                           ; BSR set to: 0
  2963                           ;my_i2c.c: 307: ic_ptr->error_count = 0;
  2964  0015E4  0100               	movlb	0	; () banked
  2965  0015E6  EE20 F00E          	lfsr	2,14
  2966  0015EA  0100               	movlb	0	; () banked
  2967  0015EC  51CD               	movf	_ic_ptr& (0+255),w,b
  2968  0015EE  26D9               	addwf	fsr2l,f,c
  2969  0015F0  0100               	movlb	0	; () banked
  2970  0015F2  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2971  0015F4  22DA               	addwfc	fsr2h,f,c
  2972  0015F6  0E00               	movlw	0
  2973  0015F8  6EDF               	movwf	indf2,c
  2974                           
  2975                           ; BSR set to: 0
  2976  0015FA  0012               	return	
  2977  0015FC                     __end_of_init_i2c:
  2978                           	opt stack 0
  2979                           tblptru	equ	0xFF8
  2980                           tblptrh	equ	0xFF7
  2981                           tblptrl	equ	0xFF6
  2982                           tablat	equ	0xFF5
  2983                           prodh	equ	0xFF4
  2984                           prodl	equ	0xFF3
  2985                           postinc0	equ	0xFEE
  2986                           wreg	equ	0xFE8
  2987                           indf1	equ	0xFE7
  2988                           postdec1	equ	0xFE5
  2989                           fsr1h	equ	0xFE2
  2990                           fsr1l	equ	0xFE1
  2991                           indf2	equ	0xFDF
  2992                           postinc2	equ	0xFDE
  2993                           postdec2	equ	0xFDD
  2994                           fsr2h	equ	0xFDA
  2995                           fsr2l	equ	0xFD9
  2996                           status	equ	0xFD8
  2997                           
  2998 ;; *************** function _initADC *****************
  2999 ;; Defined at:
  3000 ;;		line 99 in file "../src/main.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;		None
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;  ADCValue        2   47[BANK0 ] int 
  3005 ;; Return value:  Size  Location     Type
  3006 ;;		None               void
  3007 ;; Registers used:
  3008 ;;		wreg, status,2, status,0, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3014 ;;      Params:         0       0       0       0       0
  3015 ;;      Locals:         0       2       0       0       0
  3016 ;;      Temps:          0       2       0       0       0
  3017 ;;      Totals:         0       4       0       0       0
  3018 ;;Total ram usage:        4 bytes
  3019 ;; Hardware stack levels used:    1
  3020 ;; Hardware stack levels required when called:   11
  3021 ;; This function calls:
  3022 ;;		_ConvertADC
  3023 ;;		_OpenADC
  3024 ;; This function is called by:
  3025 ;;		_main
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           	psect	text14
  3030  0016B8                     __ptext14:
  3031                           	opt stack 0
  3032  0016B8                     _initADC:
  3033                           	opt stack 18
  3034                           
  3035                           ;main.c: 101: TRISDbits.TRISD7 = 0;
  3036                           
  3037                           ; BSR set to: 0
  3038                           ;incstack = 0
  3039  0016B8  9E95               	bcf	3989,7,c	;volatile
  3040                           
  3041                           ;main.c: 102: TRISDbits.TRISD6 = 0;
  3042  0016BA  9C95               	bcf	3989,6,c	;volatile
  3043                           
  3044                           ;main.c: 105: int ADCValue = 0;
  3045  0016BC  0E00               	movlw	0
  3046  0016BE  0100               	movlb	0	; () banked
  3047  0016C0  0100               	movlb	0	; () banked
  3048  0016C2  6FB0               	movwf	(initADC@ADCValue+1)& (0+255),b
  3049  0016C4  0E00               	movlw	0
  3050  0016C6  0100               	movlb	0	; () banked
  3051  0016C8  6FAF               	movwf	initADC@ADCValue& (0+255),b
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;main.c: 107: OpenADC(0b10001111 & 0b11111111 & 0b11111111, 0b10000111 & 0b11111111 & 0b
      +                          11111110 & 0b11111101, 0b11111111);
  3055  0016CA  0100               	movlb	0	; () banked
  3056  0016CC  6FAD               	movwf	??_initADC& (0+255),b
  3057  0016CE  0E84               	movlw	132
  3058  0016D0  0100               	movlb	0	; () banked
  3059  0016D2  0100               	movlb	0	; () banked
  3060  0016D4  6FA8               	movwf	OpenADC@config2& (0+255),b
  3061  0016D6  0100               	movlb	0	; () banked
  3062  0016D8  51AD               	movf	??_initADC& (0+255),w,b
  3063  0016DA  0100               	movlb	0	; () banked
  3064  0016DC  6FAE               	movwf	(??_initADC+1)& (0+255),b
  3065  0016DE  0EFF               	movlw	255
  3066  0016E0  0100               	movlb	0	; () banked
  3067  0016E2  0100               	movlb	0	; () banked
  3068  0016E4  6FA9               	movwf	OpenADC@portconfig& (0+255),b
  3069  0016E6  0100               	movlb	0	; () banked
  3070  0016E8  51AE               	movf	(??_initADC+1)& (0+255),w,b
  3071  0016EA  0E8F               	movlw	143
  3072  0016EC  EC9F  F009         	call	_OpenADC
  3073                           
  3074                           ;main.c: 108: (PIR1bits.ADIF=0,INTCONbits.PEIE=1,PIE1bits.ADIE=1);
  3075  0016F0  9C9E               	bcf	3998,6,c	;volatile
  3076  0016F2  8CF2               	bsf	intcon,6,c	;volatile
  3077  0016F4  8C9D               	bsf	3997,6,c	;volatile
  3078                           
  3079                           ;main.c: 109: (INTCONbits.GIE = 1);
  3080  0016F6  8EF2               	bsf	intcon,7,c	;volatile
  3081                           
  3082                           ;main.c: 110: ConvertADC();
  3083  0016F8  EC52  F00D         	call	_ConvertADC	;wreg free
  3084  0016FC  0012               	return	
  3085  0016FE                     __end_of_initADC:
  3086                           	opt stack 0
  3087                           tblptru	equ	0xFF8
  3088                           tblptrh	equ	0xFF7
  3089                           tblptrl	equ	0xFF6
  3090                           tablat	equ	0xFF5
  3091                           prodh	equ	0xFF4
  3092                           prodl	equ	0xFF3
  3093                           intcon	equ	0xFF2
  3094                           postinc0	equ	0xFEE
  3095                           wreg	equ	0xFE8
  3096                           indf1	equ	0xFE7
  3097                           postdec1	equ	0xFE5
  3098                           fsr1h	equ	0xFE2
  3099                           fsr1l	equ	0xFE1
  3100                           indf2	equ	0xFDF
  3101                           postinc2	equ	0xFDE
  3102                           postdec2	equ	0xFDD
  3103                           fsr2h	equ	0xFDA
  3104                           fsr2l	equ	0xFD9
  3105                           status	equ	0xFD8
  3106                           
  3107 ;; *************** function _OpenADC *****************
  3108 ;; Defined at:
  3109 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  config          1    wreg     unsigned char 
  3112 ;;  config2         1   40[BANK0 ] unsigned char 
  3113 ;;  portconfig      1   41[BANK0 ] unsigned char 
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;  config          1   44[BANK0 ] unsigned char 
  3116 ;; Return value:  Size  Location     Type
  3117 ;;		None               void
  3118 ;; Registers used:
  3119 ;;		wreg, status,2, status,0
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3125 ;;      Params:         0       2       0       0       0
  3126 ;;      Locals:         0       1       0       0       0
  3127 ;;      Temps:          0       2       0       0       0
  3128 ;;      Totals:         0       5       0       0       0
  3129 ;;Total ram usage:        5 bytes
  3130 ;; Hardware stack levels used:    1
  3131 ;; Hardware stack levels required when called:   10
  3132 ;; This function calls:
  3133 ;;		Nothing
  3134 ;; This function is called by:
  3135 ;;		_initADC
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           	psect	text15
  3140  00133E                     __ptext15:
  3141                           	opt stack 0
  3142  00133E                     _OpenADC:
  3143                           	opt stack 18
  3144                           
  3145                           ;incstack = 0
  3146                           ;OpenADC@config stored from wreg
  3147  00133E  CFE8 F0AC          	movff	wreg,OpenADC@config
  3148  001342  0E00               	movlw	0
  3149  001344  6EC2               	movwf	4034,c	;volatile
  3150  001346  0E00               	movlw	0
  3151  001348  6EC0               	movwf	4032,c	;volatile
  3152  00134A  0100               	movlb	0	; () banked
  3153  00134C  0100               	movlb	0	; () banked
  3154  00134E  90D8               	bcf	status,0,c
  3155  001350  31A8               	rrcf	OpenADC@config2& (0+255),w,b
  3156  001352  0B3C               	andlw	60
  3157  001354  6EC2               	movwf	4034,c	;volatile
  3158                           
  3159                           ; BSR set to: 0
  3160  001356  C0A8  F0AA         	movff	OpenADC@config2,??_OpenADC
  3161  00135A  0100               	movlb	0	; () banked
  3162  00135C  3BAA               	swapf	??_OpenADC& (0+255),f,b
  3163  00135E  0EF0               	movlw	240
  3164  001360  17AA               	andwf	??_OpenADC& (0+255),f,b
  3165  001362  0E30               	movlw	48
  3166  001364  0100               	movlb	0	; () banked
  3167  001366  17AA               	andwf	??_OpenADC& (0+255),f,b
  3168  001368  0100               	movlb	0	; () banked
  3169  00136A  0100               	movlb	0	; () banked
  3170  00136C  51A9               	movf	OpenADC@portconfig& (0+255),w,b
  3171  00136E  0B0F               	andlw	15
  3172  001370  0100               	movlb	0	; () banked
  3173  001372  11AA               	iorwf	??_OpenADC& (0+255),w,b
  3174  001374  6EC1               	movwf	4033,c	;volatile
  3175                           
  3176                           ; BSR set to: 0
  3177  001376  C0AC  F0AA         	movff	OpenADC@config,??_OpenADC
  3178  00137A  0100               	movlb	0	; () banked
  3179  00137C  90D8               	bcf	status,0,c
  3180  00137E  37AA               	rlcf	??_OpenADC& (0+255),f,b
  3181  001380  0100               	movlb	0	; () banked
  3182  001382  90D8               	bcf	status,0,c
  3183  001384  37AA               	rlcf	??_OpenADC& (0+255),f,b
  3184  001386  0E38               	movlw	56
  3185  001388  0100               	movlb	0	; () banked
  3186  00138A  17AA               	andwf	??_OpenADC& (0+255),f,b
  3187  00138C  C0AC  F0AB         	movff	OpenADC@config,??_OpenADC+1
  3188  001390  0100               	movlb	0	; () banked
  3189  001392  3BAB               	swapf	(??_OpenADC+1)& (0+255),f,b
  3190  001394  0E0F               	movlw	15
  3191  001396  17AB               	andwf	(??_OpenADC+1)& (0+255),f,b
  3192  001398  0E07               	movlw	7
  3193  00139A  0100               	movlb	0	; () banked
  3194  00139C  17AB               	andwf	(??_OpenADC+1)& (0+255),f,b
  3195  00139E  0100               	movlb	0	; () banked
  3196  0013A0  0100               	movlb	0	; () banked
  3197  0013A2  51AC               	movf	OpenADC@config& (0+255),w,b
  3198  0013A4  0B80               	andlw	128
  3199  0013A6  0100               	movlb	0	; () banked
  3200  0013A8  11AB               	iorwf	(??_OpenADC+1)& (0+255),w,b
  3201  0013AA  0100               	movlb	0	; () banked
  3202  0013AC  11AA               	iorwf	??_OpenADC& (0+255),w,b
  3203  0013AE  6EC0               	movwf	4032,c	;volatile
  3204                           
  3205                           ; BSR set to: 0
  3206  0013B0  0100               	movlb	0	; () banked
  3207  0013B2  0100               	movlb	0	; () banked
  3208  0013B4  AFA8               	btfss	OpenADC@config2& (0+255),7,b
  3209  0013B6  D003               	goto	l440
  3210                           
  3211                           ; BSR set to: 0
  3212  0013B8  9C9E               	bcf	3998,6,c	;volatile
  3213  0013BA  8C9D               	bsf	3997,6,c	;volatile
  3214  0013BC  8CF2               	bsf	intcon,6,c	;volatile
  3215  0013BE                     l440:
  3216                           
  3217                           ; BSR set to: 0
  3218  0013BE  80C2               	bsf	4034,0,c	;volatile
  3219                           
  3220                           ; BSR set to: 0
  3221  0013C0  0012               	return	
  3222  0013C2                     __end_of_OpenADC:
  3223                           	opt stack 0
  3224                           tblptru	equ	0xFF8
  3225                           tblptrh	equ	0xFF7
  3226                           tblptrl	equ	0xFF6
  3227                           tablat	equ	0xFF5
  3228                           prodh	equ	0xFF4
  3229                           prodl	equ	0xFF3
  3230                           intcon	equ	0xFF2
  3231                           postinc0	equ	0xFEE
  3232                           wreg	equ	0xFE8
  3233                           indf1	equ	0xFE7
  3234                           postdec1	equ	0xFE5
  3235                           fsr1h	equ	0xFE2
  3236                           fsr1l	equ	0xFE1
  3237                           indf2	equ	0xFDF
  3238                           postinc2	equ	0xFDE
  3239                           postdec2	equ	0xFDD
  3240                           fsr2h	equ	0xFDA
  3241                           fsr2l	equ	0xFD9
  3242                           status	equ	0xFD8
  3243                           
  3244 ;; *************** function _ConvertADC *****************
  3245 ;; Defined at:
  3246 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcconv.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;		None
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;		None
  3251 ;; Return value:  Size  Location     Type
  3252 ;;		None               void
  3253 ;; Registers used:
  3254 ;;		None
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3260 ;;      Params:         0       0       0       0       0
  3261 ;;      Locals:         0       0       0       0       0
  3262 ;;      Temps:          0       0       0       0       0
  3263 ;;      Totals:         0       0       0       0       0
  3264 ;;Total ram usage:        0 bytes
  3265 ;; Hardware stack levels used:    1
  3266 ;; Hardware stack levels required when called:   10
  3267 ;; This function calls:
  3268 ;;		Nothing
  3269 ;; This function is called by:
  3270 ;;		_initADC
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           	psect	text16
  3275  001AA4                     __ptext16:
  3276                           	opt stack 0
  3277  001AA4                     _ConvertADC:
  3278                           	opt stack 18
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;incstack = 0
  3282  001AA4  82C2               	bsf	4034,1,c	;volatile
  3283  001AA6  0012               	return	
  3284  001AA8                     __end_of_ConvertADC:
  3285                           	opt stack 0
  3286                           tblptru	equ	0xFF8
  3287                           tblptrh	equ	0xFF7
  3288                           tblptrl	equ	0xFF6
  3289                           tablat	equ	0xFF5
  3290                           prodh	equ	0xFF4
  3291                           prodl	equ	0xFF3
  3292                           intcon	equ	0xFF2
  3293                           postinc0	equ	0xFEE
  3294                           wreg	equ	0xFE8
  3295                           indf1	equ	0xFE7
  3296                           postdec1	equ	0xFE5
  3297                           fsr1h	equ	0xFE2
  3298                           fsr1l	equ	0xFE1
  3299                           indf2	equ	0xFDF
  3300                           postinc2	equ	0xFDE
  3301                           postdec2	equ	0xFDD
  3302                           fsr2h	equ	0xFDA
  3303                           fsr2l	equ	0xFD9
  3304                           status	equ	0xFD8
  3305                           
  3306 ;; *************** function _i2c_configure_slave *****************
  3307 ;; Defined at:
  3308 ;;		line 313 in file "../src/my_i2c.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  addr            1    wreg     unsigned char 
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;  addr            1   40[BANK0 ] unsigned char 
  3313 ;; Return value:  Size  Location     Type
  3314 ;;		None               void
  3315 ;; Registers used:
  3316 ;;		wreg, status,2, status,0
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3322 ;;      Params:         0       0       0       0       0
  3323 ;;      Locals:         0       1       0       0       0
  3324 ;;      Temps:          0       0       0       0       0
  3325 ;;      Totals:         0       1       0       0       0
  3326 ;;Total ram usage:        1 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; Hardware stack levels required when called:   10
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_main
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text17
  3337  001992                     __ptext17:
  3338                           	opt stack 0
  3339  001992                     _i2c_configure_slave:
  3340                           	opt stack 19
  3341                           
  3342                           ;incstack = 0
  3343                           ;i2c_configure_slave@addr stored from wreg
  3344  001992  CFE8 F0A8          	movff	wreg,i2c_configure_slave@addr
  3345                           
  3346                           ;my_i2c.c: 316: TRISCbits.TRISC3 = 1;
  3347  001996  8694               	bsf	3988,3,c	;volatile
  3348                           
  3349                           ;my_i2c.c: 317: TRISCbits.TRISC4 = 1;
  3350  001998  8894               	bsf	3988,4,c	;volatile
  3351                           
  3352                           ;my_i2c.c: 319: SSPADD = addr;
  3353  00199A  C0A8  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3354                           
  3355                           ;my_i2c.c: 321: SSPSTAT = 0x0;
  3356  00199E  0E00               	movlw	0
  3357  0019A0  6EC7               	movwf	4039,c	;volatile
  3358                           
  3359                           ;my_i2c.c: 322: SSPCON1 = 0x0;
  3360  0019A2  0E00               	movlw	0
  3361  0019A4  6EC6               	movwf	4038,c	;volatile
  3362                           
  3363                           ;my_i2c.c: 323: SSPCON2 = 0x0;
  3364  0019A6  0E00               	movlw	0
  3365  0019A8  6EC5               	movwf	4037,c	;volatile
  3366                           
  3367                           ;my_i2c.c: 324: SSPCON1 |= 0x0E;
  3368  0019AA  0E0E               	movlw	14
  3369  0019AC  12C6               	iorwf	4038,f,c	;volatile
  3370                           
  3371                           ;my_i2c.c: 325: SSPSTAT |= 0b10000000;
  3372  0019AE  8EC7               	bsf	4039,7,c	;volatile
  3373                           
  3374                           ;my_i2c.c: 327: TRISCbits.TRISC3 = 1;
  3375  0019B0  8694               	bsf	3988,3,c	;volatile
  3376                           
  3377                           ;my_i2c.c: 328: TRISCbits.TRISC4 = 1;
  3378  0019B2  8894               	bsf	3988,4,c	;volatile
  3379                           
  3380                           ;my_i2c.c: 338: SSPCON2bits.SEN = 1;
  3381  0019B4  80C5               	bsf	4037,0,c	;volatile
  3382                           
  3383                           ;my_i2c.c: 339: SSPCON1 |= 0b00100000;
  3384  0019B6  8AC6               	bsf	4038,5,c	;volatile
  3385  0019B8  0012               	return	
  3386  0019BA                     __end_of_i2c_configure_slave:
  3387                           	opt stack 0
  3388                           tblptru	equ	0xFF8
  3389                           tblptrh	equ	0xFF7
  3390                           tblptrl	equ	0xFF6
  3391                           tablat	equ	0xFF5
  3392                           prodh	equ	0xFF4
  3393                           prodl	equ	0xFF3
  3394                           intcon	equ	0xFF2
  3395                           postinc0	equ	0xFEE
  3396                           wreg	equ	0xFE8
  3397                           indf1	equ	0xFE7
  3398                           postdec1	equ	0xFE5
  3399                           fsr1h	equ	0xFE2
  3400                           fsr1l	equ	0xFE1
  3401                           indf2	equ	0xFDF
  3402                           postinc2	equ	0xFDE
  3403                           postdec2	equ	0xFDD
  3404                           fsr2h	equ	0xFDA
  3405                           fsr2l	equ	0xFD9
  3406                           status	equ	0xFD8
  3407                           
  3408 ;; *************** function _enable_interrupts *****************
  3409 ;; Defined at:
  3410 ;;		line 41 in file "../src/interrupts.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;		None
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;		None
  3415 ;; Return value:  Size  Location     Type
  3416 ;;		None               void
  3417 ;; Registers used:
  3418 ;;		None
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3424 ;;      Params:         0       0       0       0       0
  3425 ;;      Locals:         0       0       0       0       0
  3426 ;;      Temps:          0       0       0       0       0
  3427 ;;      Totals:         0       0       0       0       0
  3428 ;;Total ram usage:        0 bytes
  3429 ;; Hardware stack levels used:    1
  3430 ;; Hardware stack levels required when called:   10
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_main
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           	psect	text18
  3439  001A8E                     __ptext18:
  3440                           	opt stack 0
  3441  001A8E                     _enable_interrupts:
  3442                           	opt stack 19
  3443                           
  3444                           ;interrupts.c: 44: RCONbits.IPEN = 1;
  3445                           
  3446                           ;incstack = 0
  3447  001A8E  8ED0               	bsf	4048,7,c	;volatile
  3448                           
  3449                           ;interrupts.c: 45: INTCONbits.GIEH = 1;
  3450  001A90  8EF2               	bsf	intcon,7,c	;volatile
  3451                           
  3452                           ;interrupts.c: 46: INTCONbits.GIEL = 1;
  3453  001A92  8CF2               	bsf	intcon,6,c	;volatile
  3454                           
  3455                           ;interrupts.c: 48: INTCONbits.TMR0IE = 1;
  3456  001A94  8AF2               	bsf	intcon,5,c	;volatile
  3457                           
  3458                           ;interrupts.c: 50: INTCON2bits.TMR0IP = 1;
  3459  001A96  84F1               	bsf	intcon2,2,c	;volatile
  3460  001A98  0012               	return	
  3461  001A9A                     __end_of_enable_interrupts:
  3462                           	opt stack 0
  3463                           tblptru	equ	0xFF8
  3464                           tblptrh	equ	0xFF7
  3465                           tblptrl	equ	0xFF6
  3466                           tablat	equ	0xFF5
  3467                           prodh	equ	0xFF4
  3468                           prodl	equ	0xFF3
  3469                           intcon	equ	0xFF2
  3470                           intcon2	equ	0xFF1
  3471                           postinc0	equ	0xFEE
  3472                           wreg	equ	0xFE8
  3473                           indf1	equ	0xFE7
  3474                           postdec1	equ	0xFE5
  3475                           fsr1h	equ	0xFE2
  3476                           fsr1l	equ	0xFE1
  3477                           indf2	equ	0xFDF
  3478                           postinc2	equ	0xFDE
  3479                           postdec2	equ	0xFDD
  3480                           fsr2h	equ	0xFDA
  3481                           fsr2l	equ	0xFD9
  3482                           status	equ	0xFD8
  3483                           
  3484 ;; *************** function _block_on_To_msgqueues *****************
  3485 ;; Defined at:
  3486 ;;		line 258 in file "../src/messages.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;		None
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;		None
  3491 ;; Return value:  Size  Location     Type
  3492 ;;		None               void
  3493 ;; Registers used:
  3494 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3500 ;;      Params:         0       0       0       0       0
  3501 ;;      Locals:         0       0       0       0       0
  3502 ;;      Temps:          0       1       0       0       0
  3503 ;;      Totals:         0       1       0       0       0
  3504 ;;Total ram usage:        1 bytes
  3505 ;; Hardware stack levels used:    1
  3506 ;; Hardware stack levels required when called:   13
  3507 ;; This function calls:
  3508 ;;		_Delay1KTCYx
  3509 ;;		_check_msg
  3510 ;;		_in_main
  3511 ;; This function is called by:
  3512 ;;		_main
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text19
  3517  000F80                     __ptext19:
  3518                           	opt stack 0
  3519  000F80                     _block_on_To_msgqueues:
  3520                           	opt stack 16
  3521                           
  3522                           ;messages.c: 259: if (!in_main()) {
  3523                           
  3524                           ;incstack = 0
  3525  000F80  ECA2  F00B         	call	_in_main	;wreg free
  3526  000F84  0100               	movlb	0	; () banked
  3527  000F86  0100               	movlb	0	; () banked
  3528  000F88  51AD               	movf	(?_in_main+1)& (0+255),w,b
  3529  000F8A  0100               	movlb	0	; () banked
  3530  000F8C  11AC               	iorwf	?_in_main& (0+255),w,b
  3531  000F8E  B4D8               	btfsc	status,2,c
  3532  000F90  0012               	return	
  3533                           
  3534                           ; BSR set to: 0
  3535                           ;messages.c: 261: }
  3536                           ;messages.c: 262: LATBbits.LATB3 = 1;
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;messages.c: 260: return;
  3540  000F92  868A               	bsf	3978,3,c	;volatile
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3544  000F94  0100               	movlb	0	; () banked
  3545  000F96  6FAE               	movwf	??_block_on_To_msgqueues& (0+255),b
  3546  000F98  0E01               	movlw	1
  3547  000F9A  0100               	movlb	0	; () banked
  3548  000F9C  0100               	movlb	0	; () banked
  3549  000F9E  6FCF               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3550  000FA0  0100               	movlb	0	; () banked
  3551  000FA2  51AE               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3552  000FA4                     l2541:
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3556  000FA4  0101               	movlb	1	; () banked
  3557  000FA6  0E01               	movlw	high _ToMainHigh_MQ
  3558  000FA8  0100               	movlb	0	; () banked
  3559  000FAA  0100               	movlb	0	; () banked
  3560  000FAC  6FA9               	movwf	(check_msg@qptr+1)& (0+255),b
  3561  000FAE  0101               	movlb	1	; () banked
  3562  000FB0  0E36               	movlw	low _ToMainHigh_MQ
  3563  000FB2  0100               	movlb	0	; () banked
  3564  000FB4  0100               	movlb	0	; () banked
  3565  000FB6  6FA8               	movwf	check_msg@qptr& (0+255),b
  3566  000FB8  EC80  F00C         	call	_check_msg	;wreg free
  3567  000FBC  0900               	iorlw	0
  3568  000FBE  B4D8               	btfsc	status,2,c
  3569  000FC0  D00A               	goto	l2549
  3570                           
  3571                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3572  000FC2  0100               	movlb	0	; () banked
  3573  000FC4  6FAE               	movwf	??_block_on_To_msgqueues& (0+255),b
  3574  000FC6  0E00               	movlw	0
  3575  000FC8  0100               	movlb	0	; () banked
  3576  000FCA  0100               	movlb	0	; () banked
  3577  000FCC  6FCF               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3578  000FCE  0100               	movlb	0	; () banked
  3579  000FD0  51AE               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;messages.c: 267: LATBbits.LATB3 = 0;
  3583  000FD2  968A               	bcf	3978,3,c	;volatile
  3584  000FD4  0012               	return	
  3585  000FD6                     l2549:
  3586                           
  3587                           ;messages.c: 269: }
  3588                           ;messages.c: 270: if (check_msg(&ToMainLow_MQ)) {
  3589  000FD6  0101               	movlb	1	; () banked
  3590  000FD8  0E01               	movlw	high _ToMainLow_MQ
  3591  000FDA  0100               	movlb	0	; () banked
  3592  000FDC  0100               	movlb	0	; () banked
  3593  000FDE  6FA9               	movwf	(check_msg@qptr+1)& (0+255),b
  3594  000FE0  0101               	movlb	1	; () banked
  3595  000FE2  0E6C               	movlw	low _ToMainLow_MQ
  3596  000FE4  0100               	movlb	0	; () banked
  3597  000FE6  0100               	movlb	0	; () banked
  3598  000FE8  6FA8               	movwf	check_msg@qptr& (0+255),b
  3599  000FEA  EC80  F00C         	call	_check_msg	;wreg free
  3600  000FEE  0900               	iorlw	0
  3601  000FF0  B4D8               	btfsc	status,2,c
  3602  000FF2  D00A               	goto	l2557
  3603                           
  3604                           ;messages.c: 271: MQ_Main_Willing_to_block = 0;
  3605  000FF4  0100               	movlb	0	; () banked
  3606  000FF6  6FAE               	movwf	??_block_on_To_msgqueues& (0+255),b
  3607  000FF8  0E00               	movlw	0
  3608  000FFA  0100               	movlb	0	; () banked
  3609  000FFC  0100               	movlb	0	; () banked
  3610  000FFE  6FCF               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3611  001000  0100               	movlb	0	; () banked
  3612  001002  51AE               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3613                           
  3614                           ; BSR set to: 0
  3615                           ;messages.c: 272: LATBbits.LATB3 = 0;
  3616  001004  968A               	bcf	3978,3,c	;volatile
  3617  001006  0012               	return	
  3618  001008                     l2557:
  3619                           
  3620                           ;messages.c: 274: }
  3621                           ;messages.c: 275: Delay1KTCYx(10);
  3622  001008  0E0A               	movlw	10
  3623  00100A  EC21  F00D         	call	_Delay1KTCYx
  3624                           
  3625                           ;messages.c: 276: LATBbits.LATB3 = !LATBbits.LATB3;
  3626  00100E  B68A               	btfsc	3978,3,c	;volatile
  3627  001010  D002               	goto	u1590
  3628  001012  0E01               	movlw	1
  3629  001014  D001               	goto	u1596
  3630  001016                     u1590:
  3631  001016  0E00               	movlw	0
  3632  001018                     u1596:
  3633  001018  0100               	movlb	0	; () banked
  3634  00101A  6FAE               	movwf	??_block_on_To_msgqueues& (0+255),b
  3635  00101C  0100               	movlb	0	; () banked
  3636  00101E  47AE               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3637  001020  47AE               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3638  001022  47AE               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3639  001024  508A               	movf	3978,w,c	;volatile
  3640  001026  0100               	movlb	0	; () banked
  3641  001028  19AE               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  3642  00102A  0BF7               	andlw	-9
  3643  00102C  19AE               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  3644  00102E  6E8A               	movwf	3978,c	;volatile
  3645  001030  D7B9               	goto	l2541
  3646  001032                     __end_of_block_on_To_msgqueues:
  3647                           	opt stack 0
  3648                           tblptru	equ	0xFF8
  3649                           tblptrh	equ	0xFF7
  3650                           tblptrl	equ	0xFF6
  3651                           tablat	equ	0xFF5
  3652                           prodh	equ	0xFF4
  3653                           prodl	equ	0xFF3
  3654                           intcon	equ	0xFF2
  3655                           intcon2	equ	0xFF1
  3656                           postinc0	equ	0xFEE
  3657                           wreg	equ	0xFE8
  3658                           indf1	equ	0xFE7
  3659                           postdec1	equ	0xFE5
  3660                           fsr1h	equ	0xFE2
  3661                           fsr1l	equ	0xFE1
  3662                           indf2	equ	0xFDF
  3663                           postinc2	equ	0xFDE
  3664                           postdec2	equ	0xFDD
  3665                           fsr2h	equ	0xFDA
  3666                           fsr2l	equ	0xFD9
  3667                           status	equ	0xFD8
  3668                           
  3669 ;; *************** function _in_main *****************
  3670 ;; Defined at:
  3671 ;;		line 71 in file "../src/interrupts.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;		None
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  2   44[BANK0 ] int 
  3678 ;; Registers used:
  3679 ;;		wreg, status,2, status,0, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3685 ;;      Params:         0       2       0       0       0
  3686 ;;      Locals:         0       0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0
  3688 ;;      Totals:         0       2       0       0       0
  3689 ;;Total ram usage:        2 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:   12
  3692 ;; This function calls:
  3693 ;;		_in_high_int
  3694 ;;		_in_low_int
  3695 ;; This function is called by:
  3696 ;;		_block_on_To_msgqueues
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700                           	psect	text20
  3701  001744                     __ptext20:
  3702                           	opt stack 0
  3703  001744                     _in_main:
  3704                           	opt stack 16
  3705                           
  3706                           ;interrupts.c: 72: if ((!in_low_int()) && (!in_high_int())) {
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;incstack = 0
  3710  001744  EC7F  F00B         	call	_in_low_int	;wreg free
  3711  001748  0100               	movlb	0	; () banked
  3712  00174A  0100               	movlb	0	; () banked
  3713  00174C  51AB               	movf	(?_in_low_int+1)& (0+255),w,b
  3714  00174E  0100               	movlb	0	; () banked
  3715  001750  11AA               	iorwf	?_in_low_int& (0+255),w,b
  3716  001752  A4D8               	btfss	status,2,c
  3717  001754  D011               	goto	l2571
  3718                           
  3719                           ; BSR set to: 0
  3720  001756  EC3E  F00D         	call	_in_high_int	;wreg free
  3721  00175A  0100               	movlb	0	; () banked
  3722  00175C  0100               	movlb	0	; () banked
  3723  00175E  51A9               	movf	(?_in_high_int+1)& (0+255),w,b
  3724  001760  0100               	movlb	0	; () banked
  3725  001762  11A8               	iorwf	?_in_high_int& (0+255),w,b
  3726  001764  A4D8               	btfss	status,2,c
  3727  001766  D008               	goto	l2571
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;interrupts.c: 73: return (1);
  3731  001768  0E00               	movlw	0
  3732  00176A  0100               	movlb	0	; () banked
  3733  00176C  0100               	movlb	0	; () banked
  3734  00176E  6FAD               	movwf	(?_in_main+1)& (0+255),b
  3735  001770  0E01               	movlw	1
  3736  001772  0100               	movlb	0	; () banked
  3737  001774  6FAC               	movwf	?_in_main& (0+255),b
  3738  001776  0012               	return	
  3739  001778                     l2571:
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;interrupts.c: 75: return (0);
  3743  001778  0E00               	movlw	0
  3744  00177A  0100               	movlb	0	; () banked
  3745  00177C  0100               	movlb	0	; () banked
  3746  00177E  6FAD               	movwf	(?_in_main+1)& (0+255),b
  3747  001780  0E00               	movlw	0
  3748  001782  0100               	movlb	0	; () banked
  3749  001784  6FAC               	movwf	?_in_main& (0+255),b
  3750  001786  0012               	return	
  3751  001788                     __end_of_in_main:
  3752                           	opt stack 0
  3753                           tblptru	equ	0xFF8
  3754                           tblptrh	equ	0xFF7
  3755                           tblptrl	equ	0xFF6
  3756                           tablat	equ	0xFF5
  3757                           prodh	equ	0xFF4
  3758                           prodl	equ	0xFF3
  3759                           intcon	equ	0xFF2
  3760                           intcon2	equ	0xFF1
  3761                           postinc0	equ	0xFEE
  3762                           wreg	equ	0xFE8
  3763                           indf1	equ	0xFE7
  3764                           postdec1	equ	0xFE5
  3765                           fsr1h	equ	0xFE2
  3766                           fsr1l	equ	0xFE1
  3767                           indf2	equ	0xFDF
  3768                           postinc2	equ	0xFDE
  3769                           postdec2	equ	0xFDD
  3770                           fsr2h	equ	0xFDA
  3771                           fsr2l	equ	0xFD9
  3772                           status	equ	0xFD8
  3773                           
  3774 ;; *************** function _in_low_int *****************
  3775 ;; Defined at:
  3776 ;;		line 61 in file "../src/interrupts.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;		None
  3779 ;; Auto vars:     Size  Location     Type
  3780 ;;		None
  3781 ;; Return value:  Size  Location     Type
  3782 ;;                  2   42[BANK0 ] int 
  3783 ;; Registers used:
  3784 ;;		wreg, status,2, status,0, cstack
  3785 ;; Tracked objects:
  3786 ;;		On entry : 0/0
  3787 ;;		On exit  : 0/0
  3788 ;;		Unchanged: 0/0
  3789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3790 ;;      Params:         0       2       0       0       0
  3791 ;;      Locals:         0       0       0       0       0
  3792 ;;      Temps:          0       0       0       0       0
  3793 ;;      Totals:         0       2       0       0       0
  3794 ;;Total ram usage:        2 bytes
  3795 ;; Hardware stack levels used:    1
  3796 ;; Hardware stack levels required when called:   11
  3797 ;; This function calls:
  3798 ;;		_in_high_int
  3799 ;; This function is called by:
  3800 ;;		_in_main
  3801 ;;		_SleepIfOkay
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           	psect	text21
  3806  0016FE                     __ptext21:
  3807                           	opt stack 0
  3808  0016FE                     _in_low_int:
  3809                           	opt stack 16
  3810                           
  3811                           ;interrupts.c: 62: if (INTCONbits.GIEL == 1) {
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;incstack = 0
  3815  0016FE  ACF2               	btfss	intcon,6,c	;volatile
  3816  001700  D008               	goto	l2519
  3817                           
  3818                           ;interrupts.c: 63: return (0);
  3819  001702  0E00               	movlw	0
  3820  001704  0100               	movlb	0	; () banked
  3821  001706  0100               	movlb	0	; () banked
  3822  001708  6FAB               	movwf	(?_in_low_int+1)& (0+255),b
  3823  00170A  0E00               	movlw	0
  3824  00170C  0100               	movlb	0	; () banked
  3825  00170E  6FAA               	movwf	?_in_low_int& (0+255),b
  3826  001710  0012               	return	
  3827  001712                     l2519:
  3828  001712  EC3E  F00D         	call	_in_high_int	;wreg free
  3829  001716  0100               	movlb	0	; () banked
  3830  001718  0100               	movlb	0	; () banked
  3831  00171A  51A9               	movf	(?_in_high_int+1)& (0+255),w,b
  3832  00171C  0100               	movlb	0	; () banked
  3833  00171E  11A8               	iorwf	?_in_high_int& (0+255),w,b
  3834  001720  B4D8               	btfsc	status,2,c
  3835  001722  D008               	goto	l2527
  3836                           
  3837                           ; BSR set to: 0
  3838                           ;interrupts.c: 65: return (0);
  3839  001724  0E00               	movlw	0
  3840  001726  0100               	movlb	0	; () banked
  3841  001728  0100               	movlb	0	; () banked
  3842  00172A  6FAB               	movwf	(?_in_low_int+1)& (0+255),b
  3843  00172C  0E00               	movlw	0
  3844  00172E  0100               	movlb	0	; () banked
  3845  001730  6FAA               	movwf	?_in_low_int& (0+255),b
  3846  001732  0012               	return	
  3847  001734                     l2527:
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;interrupts.c: 67: return (1);
  3851  001734  0E00               	movlw	0
  3852  001736  0100               	movlb	0	; () banked
  3853  001738  0100               	movlb	0	; () banked
  3854  00173A  6FAB               	movwf	(?_in_low_int+1)& (0+255),b
  3855  00173C  0E01               	movlw	1
  3856  00173E  0100               	movlb	0	; () banked
  3857  001740  6FAA               	movwf	?_in_low_int& (0+255),b
  3858  001742  0012               	return	
  3859  001744                     __end_of_in_low_int:
  3860                           	opt stack 0
  3861                           tblptru	equ	0xFF8
  3862                           tblptrh	equ	0xFF7
  3863                           tblptrl	equ	0xFF6
  3864                           tablat	equ	0xFF5
  3865                           prodh	equ	0xFF4
  3866                           prodl	equ	0xFF3
  3867                           intcon	equ	0xFF2
  3868                           intcon2	equ	0xFF1
  3869                           postinc0	equ	0xFEE
  3870                           wreg	equ	0xFE8
  3871                           indf1	equ	0xFE7
  3872                           postdec1	equ	0xFE5
  3873                           fsr1h	equ	0xFE2
  3874                           fsr1l	equ	0xFE1
  3875                           indf2	equ	0xFDF
  3876                           postinc2	equ	0xFDE
  3877                           postdec2	equ	0xFDD
  3878                           fsr2h	equ	0xFDA
  3879                           fsr2l	equ	0xFD9
  3880                           status	equ	0xFD8
  3881                           
  3882 ;; *************** function _in_high_int *****************
  3883 ;; Defined at:
  3884 ;;		line 53 in file "../src/interrupts.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;		None
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;		None
  3889 ;; Return value:  Size  Location     Type
  3890 ;;                  2   40[BANK0 ] int 
  3891 ;; Registers used:
  3892 ;;		wreg, status,2
  3893 ;; Tracked objects:
  3894 ;;		On entry : 0/0
  3895 ;;		On exit  : 0/0
  3896 ;;		Unchanged: 0/0
  3897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3898 ;;      Params:         0       2       0       0       0
  3899 ;;      Locals:         0       0       0       0       0
  3900 ;;      Temps:          0       0       0       0       0
  3901 ;;      Totals:         0       2       0       0       0
  3902 ;;Total ram usage:        2 bytes
  3903 ;; Hardware stack levels used:    1
  3904 ;; Hardware stack levels required when called:   10
  3905 ;; This function calls:
  3906 ;;		Nothing
  3907 ;; This function is called by:
  3908 ;;		_in_low_int
  3909 ;;		_in_main
  3910 ;;		_SleepIfOkay
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914                           	psect	text22
  3915  001A7C                     __ptext22:
  3916                           	opt stack 0
  3917  001A7C                     _in_high_int:
  3918                           	opt stack 16
  3919                           
  3920                           ;interrupts.c: 54: return (!INTCONbits.GIEH);
  3921                           
  3922                           ; BSR set to: 0
  3923                           ;incstack = 0
  3924  001A7C  0E00               	movlw	0
  3925  001A7E  AEF2               	btfss	intcon,7,c	;volatile
  3926  001A80  0E01               	movlw	1
  3927  001A82  0100               	movlb	0	; () banked
  3928  001A84  0100               	movlb	0	; () banked
  3929  001A86  6FA8               	movwf	?_in_high_int& (0+255),b
  3930  001A88  0100               	movlb	0	; () banked
  3931  001A8A  6BA9               	clrf	(?_in_high_int+1)& (0+255),b
  3932  001A8C  0012               	return	
  3933  001A8E                     __end_of_in_high_int:
  3934                           	opt stack 0
  3935                           tblptru	equ	0xFF8
  3936                           tblptrh	equ	0xFF7
  3937                           tblptrl	equ	0xFF6
  3938                           tablat	equ	0xFF5
  3939                           prodh	equ	0xFF4
  3940                           prodl	equ	0xFF3
  3941                           intcon	equ	0xFF2
  3942                           intcon2	equ	0xFF1
  3943                           postinc0	equ	0xFEE
  3944                           wreg	equ	0xFE8
  3945                           indf1	equ	0xFE7
  3946                           postdec1	equ	0xFE5
  3947                           fsr1h	equ	0xFE2
  3948                           fsr1l	equ	0xFE1
  3949                           indf2	equ	0xFDF
  3950                           postinc2	equ	0xFDE
  3951                           postdec2	equ	0xFDD
  3952                           fsr2h	equ	0xFDA
  3953                           fsr2l	equ	0xFD9
  3954                           status	equ	0xFD8
  3955                           
  3956 ;; *************** function _check_msg *****************
  3957 ;; Defined at:
  3958 ;;		line 222 in file "../src/messages.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;  qptr            2   40[BANK0 ] PTR struct __msg_queue
  3961 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;		None
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  1    wreg      unsigned char 
  3966 ;; Registers used:
  3967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3973 ;;      Params:         0       2       0       0       0
  3974 ;;      Locals:         0       0       0       0       0
  3975 ;;      Temps:          0       1       0       0       0
  3976 ;;      Totals:         0       3       0       0       0
  3977 ;;Total ram usage:        3 bytes
  3978 ;; Hardware stack levels used:    1
  3979 ;; Hardware stack levels required when called:   10
  3980 ;; This function calls:
  3981 ;;		Nothing
  3982 ;; This function is called by:
  3983 ;;		_block_on_To_msgqueues
  3984 ;;		_SleepIfOkay
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           	psect	text23
  3989  001900                     __ptext23:
  3990                           	opt stack 0
  3991  001900                     _check_msg:
  3992                           	opt stack 18
  3993                           
  3994                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;incstack = 0
  3998  001900  0100               	movlb	0	; () banked
  3999  001902  EE20 F035          	lfsr	2,53
  4000  001906  0100               	movlb	0	; () banked
  4001  001908  51A8               	movf	check_msg@qptr& (0+255),w,b
  4002  00190A  26D9               	addwf	fsr2l,f,c
  4003  00190C  0100               	movlb	0	; () banked
  4004  00190E  51A9               	movf	(check_msg@qptr+1)& (0+255),w,b
  4005  001910  22DA               	addwfc	fsr2h,f,c
  4006  001912  50DF               	movf	indf2,w,c
  4007  001914  0100               	movlb	0	; () banked
  4008  001916  6FAA               	movwf	??_check_msg& (0+255),b
  4009  001918  0100               	movlb	0	; () banked
  4010  00191A  51AA               	movf	??_check_msg& (0+255),w,b
  4011  00191C  0D0D               	mullw	13
  4012  00191E  50F3               	movf	prodl,w,c
  4013  001920  0100               	movlb	0	; () banked
  4014  001922  0100               	movlb	0	; () banked
  4015  001924  25A8               	addwf	check_msg@qptr& (0+255),w,b
  4016  001926  6ED9               	movwf	fsr2l,c
  4017  001928  50F4               	movf	prodh,w,c
  4018  00192A  0100               	movlb	0	; () banked
  4019  00192C  0100               	movlb	0	; () banked
  4020  00192E  21A9               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4021  001930  6EDA               	movwf	fsr2h,c
  4022  001932  50DF               	movf	indf2,w,c
  4023  001934  0012               	return	
  4024  001936                     __end_of_check_msg:
  4025                           	opt stack 0
  4026                           tblptru	equ	0xFF8
  4027                           tblptrh	equ	0xFF7
  4028                           tblptrl	equ	0xFF6
  4029                           tablat	equ	0xFF5
  4030                           prodh	equ	0xFF4
  4031                           prodl	equ	0xFF3
  4032                           intcon	equ	0xFF2
  4033                           intcon2	equ	0xFF1
  4034                           postinc0	equ	0xFEE
  4035                           wreg	equ	0xFE8
  4036                           indf1	equ	0xFE7
  4037                           postdec1	equ	0xFE5
  4038                           fsr1h	equ	0xFE2
  4039                           fsr1l	equ	0xFE1
  4040                           indf2	equ	0xFDF
  4041                           postinc2	equ	0xFDE
  4042                           postdec2	equ	0xFDD
  4043                           fsr2h	equ	0xFDA
  4044                           fsr2l	equ	0xFD9
  4045                           status	equ	0xFD8
  4046                           
  4047 ;; *************** function _Delay1KTCYx *****************
  4048 ;; Defined at:
  4049 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;  unit            1    wreg     unsigned char 
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;  unit            1   40[BANK0 ] unsigned char 
  4054 ;; Return value:  Size  Location     Type
  4055 ;;		None               void
  4056 ;; Registers used:
  4057 ;;		wreg
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4063 ;;      Params:         0       0       0       0       0
  4064 ;;      Locals:         0       1       0       0       0
  4065 ;;      Temps:          0       0       0       0       0
  4066 ;;      Totals:         0       1       0       0       0
  4067 ;;Total ram usage:        1 bytes
  4068 ;; Hardware stack levels used:    1
  4069 ;; Hardware stack levels required when called:   10
  4070 ;; This function calls:
  4071 ;;		Nothing
  4072 ;; This function is called by:
  4073 ;;		_block_on_To_msgqueues
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           	psect	text24
  4078  001A42                     __ptext24:
  4079                           	opt stack 0
  4080  001A42                     _Delay1KTCYx:
  4081                           	opt stack 18
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;incstack = 0
  4085                           ;Delay1KTCYx@unit stored from wreg
  4086  001A42  CFE8 F0A8          	movff	wreg,Delay1KTCYx@unit
  4087  001A46                     l743:
  4088  001A46  0EFA               	movlw	250
  4089  001A48                     u2387:
  4090  001A48  F000               	nop	
  4091  001A4A  2EE8               	decfsz	wreg,f,c
  4092  001A4C  D7FD               	goto	u2387
  4093  001A4E  0100               	movlb	0	; () banked
  4094  001A50  0100               	movlb	0	; () banked
  4095  001A52  2FA8               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4096  001A54  D7F8               	goto	l743
  4097  001A56  0012               	return	
  4098  001A58                     __end_of_Delay1KTCYx:
  4099                           	opt stack 0
  4100                           tblptru	equ	0xFF8
  4101                           tblptrh	equ	0xFF7
  4102                           tblptrl	equ	0xFF6
  4103                           tablat	equ	0xFF5
  4104                           prodh	equ	0xFF4
  4105                           prodl	equ	0xFF3
  4106                           intcon	equ	0xFF2
  4107                           intcon2	equ	0xFF1
  4108                           postinc0	equ	0xFEE
  4109                           wreg	equ	0xFE8
  4110                           indf1	equ	0xFE7
  4111                           postdec1	equ	0xFE5
  4112                           fsr1h	equ	0xFE2
  4113                           fsr1l	equ	0xFE1
  4114                           indf2	equ	0xFDF
  4115                           postinc2	equ	0xFDE
  4116                           postdec2	equ	0xFDD
  4117                           fsr2h	equ	0xFDA
  4118                           fsr2l	equ	0xFD9
  4119                           status	equ	0xFD8
  4120                           
  4121 ;; *************** function _ToMainLow_recvmsg *****************
  4122 ;; Defined at:
  4123 ;;		line 112 in file "../src/messages.c"
  4124 ;; Parameters:    Size  Location     Type
  4125 ;;  maxlength       1    wreg     unsigned char 
  4126 ;;  msgtype         2   64[BANK0 ] PTR unsigned char 
  4127 ;;		 -> main@msgtype(1), 
  4128 ;;  data            2   66[BANK0 ] PTR void 
  4129 ;;		 -> main@msgbuffer(11), 
  4130 ;; Auto vars:     Size  Location     Type
  4131 ;;  maxlength       1   68[BANK0 ] unsigned char 
  4132 ;; Return value:  Size  Location     Type
  4133 ;;                  1    wreg      char 
  4134 ;; Registers used:
  4135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4136 ;; Tracked objects:
  4137 ;;		On entry : 0/0
  4138 ;;		On exit  : 0/0
  4139 ;;		Unchanged: 0/0
  4140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4141 ;;      Params:         0       4       0       0       0
  4142 ;;      Locals:         0       1       0       0       0
  4143 ;;      Temps:          0       0       0       0       0
  4144 ;;      Totals:         0       5       0       0       0
  4145 ;;Total ram usage:        5 bytes
  4146 ;; Hardware stack levels used:    1
  4147 ;; Hardware stack levels required when called:   12
  4148 ;; This function calls:
  4149 ;;		_recv_msg
  4150 ;; This function is called by:
  4151 ;;		_main
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           	psect	text25
  4156  001788                     __ptext25:
  4157                           	opt stack 0
  4158  001788                     _ToMainLow_recvmsg:
  4159                           	opt stack 17
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;incstack = 0
  4163                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4164  001788  CFE8 F0C4          	movff	wreg,ToMainLow_recvmsg@maxlength
  4165                           
  4166                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4167  00178C  0101               	movlb	1	; () banked
  4168  00178E  0E01               	movlw	high _ToMainLow_MQ
  4169  001790  0100               	movlb	0	; () banked
  4170  001792  0100               	movlb	0	; () banked
  4171  001794  6FB3               	movwf	(recv_msg@qptr+1)& (0+255),b
  4172  001796  0101               	movlb	1	; () banked
  4173  001798  0E6C               	movlw	low _ToMainLow_MQ
  4174  00179A  0100               	movlb	0	; () banked
  4175  00179C  0100               	movlb	0	; () banked
  4176  00179E  6FB2               	movwf	recv_msg@qptr& (0+255),b
  4177  0017A0  C0C4  F0B4         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4178  0017A4  0100               	movlb	0	; () banked
  4179  0017A6  0100               	movlb	0	; () banked
  4180  0017A8  C0C1  F0B6         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4181  0017AC  0100               	movlb	0	; () banked
  4182  0017AE  0100               	movlb	0	; () banked
  4183  0017B0  C0C0  F0B5         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4184  0017B4  0100               	movlb	0	; () banked
  4185  0017B6  0100               	movlb	0	; () banked
  4186  0017B8  C0C3  F0B8         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4187  0017BC  0100               	movlb	0	; () banked
  4188  0017BE  0100               	movlb	0	; () banked
  4189  0017C0  C0C2  F0B7         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4190  0017C4  ECA7  F004         	call	_recv_msg	;wreg free
  4191  0017C8  0012               	return	
  4192  0017CA                     __end_of_ToMainLow_recvmsg:
  4193                           	opt stack 0
  4194                           tblptru	equ	0xFF8
  4195                           tblptrh	equ	0xFF7
  4196                           tblptrl	equ	0xFF6
  4197                           tablat	equ	0xFF5
  4198                           prodh	equ	0xFF4
  4199                           prodl	equ	0xFF3
  4200                           intcon	equ	0xFF2
  4201                           intcon2	equ	0xFF1
  4202                           postinc0	equ	0xFEE
  4203                           wreg	equ	0xFE8
  4204                           indf1	equ	0xFE7
  4205                           postdec1	equ	0xFE5
  4206                           fsr1h	equ	0xFE2
  4207                           fsr1l	equ	0xFE1
  4208                           indf2	equ	0xFDF
  4209                           postinc2	equ	0xFDE
  4210                           postdec2	equ	0xFDD
  4211                           fsr2h	equ	0xFDA
  4212                           fsr2l	equ	0xFD9
  4213                           status	equ	0xFD8
  4214                           
  4215 ;; *************** function _ToMainHigh_recvmsg *****************
  4216 ;; Defined at:
  4217 ;;		line 135 in file "../src/messages.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;  maxlength       1    wreg     unsigned char 
  4220 ;;  msgtype         2   64[BANK0 ] PTR unsigned char 
  4221 ;;		 -> main@msgtype(1), 
  4222 ;;  data            2   66[BANK0 ] PTR void 
  4223 ;;		 -> main@msgbuffer(11), 
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;  maxlength       1   68[BANK0 ] unsigned char 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  1    wreg      char 
  4228 ;; Registers used:
  4229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4235 ;;      Params:         0       4       0       0       0
  4236 ;;      Locals:         0       1       0       0       0
  4237 ;;      Temps:          0       0       0       0       0
  4238 ;;      Totals:         0       5       0       0       0
  4239 ;;Total ram usage:        5 bytes
  4240 ;; Hardware stack levels used:    1
  4241 ;; Hardware stack levels required when called:   12
  4242 ;; This function calls:
  4243 ;;		_recv_msg
  4244 ;; This function is called by:
  4245 ;;		_main
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249                           	psect	text26
  4250  0017CA                     __ptext26:
  4251                           	opt stack 0
  4252  0017CA                     _ToMainHigh_recvmsg:
  4253                           	opt stack 17
  4254                           
  4255                           ;incstack = 0
  4256                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4257  0017CA  CFE8 F0C4          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4258                           
  4259                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4260  0017CE  0101               	movlb	1	; () banked
  4261  0017D0  0E01               	movlw	high _ToMainHigh_MQ
  4262  0017D2  0100               	movlb	0	; () banked
  4263  0017D4  0100               	movlb	0	; () banked
  4264  0017D6  6FB3               	movwf	(recv_msg@qptr+1)& (0+255),b
  4265  0017D8  0101               	movlb	1	; () banked
  4266  0017DA  0E36               	movlw	low _ToMainHigh_MQ
  4267  0017DC  0100               	movlb	0	; () banked
  4268  0017DE  0100               	movlb	0	; () banked
  4269  0017E0  6FB2               	movwf	recv_msg@qptr& (0+255),b
  4270  0017E2  C0C4  F0B4         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4271  0017E6  0100               	movlb	0	; () banked
  4272  0017E8  0100               	movlb	0	; () banked
  4273  0017EA  C0C1  F0B6         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4274  0017EE  0100               	movlb	0	; () banked
  4275  0017F0  0100               	movlb	0	; () banked
  4276  0017F2  C0C0  F0B5         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4277  0017F6  0100               	movlb	0	; () banked
  4278  0017F8  0100               	movlb	0	; () banked
  4279  0017FA  C0C3  F0B8         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4280  0017FE  0100               	movlb	0	; () banked
  4281  001800  0100               	movlb	0	; () banked
  4282  001802  C0C2  F0B7         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4283  001806  ECA7  F004         	call	_recv_msg	;wreg free
  4284  00180A  0012               	return	
  4285  00180C                     __end_of_ToMainHigh_recvmsg:
  4286                           	opt stack 0
  4287                           tblptru	equ	0xFF8
  4288                           tblptrh	equ	0xFF7
  4289                           tblptrl	equ	0xFF6
  4290                           tablat	equ	0xFF5
  4291                           prodh	equ	0xFF4
  4292                           prodl	equ	0xFF3
  4293                           intcon	equ	0xFF2
  4294                           intcon2	equ	0xFF1
  4295                           postinc0	equ	0xFEE
  4296                           wreg	equ	0xFE8
  4297                           indf1	equ	0xFE7
  4298                           postdec1	equ	0xFE5
  4299                           fsr1h	equ	0xFE2
  4300                           fsr1l	equ	0xFE1
  4301                           indf2	equ	0xFDF
  4302                           postinc2	equ	0xFDE
  4303                           postdec2	equ	0xFDD
  4304                           fsr2h	equ	0xFDA
  4305                           fsr2l	equ	0xFD9
  4306                           status	equ	0xFD8
  4307                           
  4308 ;; *************** function _recv_msg *****************
  4309 ;; Defined at:
  4310 ;;		line 63 in file "../src/messages.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  qptr            2   50[BANK0 ] PTR struct __msg_queue
  4313 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4314 ;;  maxlength       1   52[BANK0 ] unsigned char 
  4315 ;;  msgtype         2   53[BANK0 ] PTR unsigned char 
  4316 ;;		 -> main@msgtype(1), timer0_int_handler@msgtype(2), 
  4317 ;;  data            2   55[BANK0 ] PTR void 
  4318 ;;		 -> main@msgbuffer(11), timer0_int_handler@val(2), 
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;  qmsg            2   62[BANK0 ] PTR struct __msg
  4321 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4322 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4323 ;;  tlength         2   60[BANK0 ] unsigned int 
  4324 ;;  slot            1   59[BANK0 ] unsigned char 
  4325 ;; Return value:  Size  Location     Type
  4326 ;;                  1    wreg      char 
  4327 ;; Registers used:
  4328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4334 ;;      Params:         0       7       0       0       0
  4335 ;;      Locals:         0       5       0       0       0
  4336 ;;      Temps:          0       2       0       0       0
  4337 ;;      Totals:         0      14       0       0       0
  4338 ;;Total ram usage:       14 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; Hardware stack levels required when called:   11
  4341 ;; This function calls:
  4342 ;;		_memcpy
  4343 ;; This function is called by:
  4344 ;;		_ToMainLow_recvmsg
  4345 ;;		_ToMainHigh_recvmsg
  4346 ;;		_FromMainLow_recvmsg
  4347 ;;		_FromMainHigh_recvmsg
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351                           	psect	text27
  4352  00094E                     __ptext27:
  4353                           	opt stack 0
  4354  00094E                     _recv_msg:
  4355                           	opt stack 17
  4356                           
  4357                           ;messages.c: 64: unsigned char slot;
  4358                           ;messages.c: 68: msg *qmsg;
  4359                           ;messages.c: 69: size_t tlength;
  4360                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4361                           
  4362                           ;incstack = 0
  4363  00094E  0100               	movlb	0	; () banked
  4364  000950  EE20 F035          	lfsr	2,53
  4365  000954  0100               	movlb	0	; () banked
  4366  000956  51B2               	movf	recv_msg@qptr& (0+255),w,b
  4367  000958  26D9               	addwf	fsr2l,f,c
  4368  00095A  0100               	movlb	0	; () banked
  4369  00095C  51B3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4370  00095E  22DA               	addwfc	fsr2h,f,c
  4371  000960  50DF               	movf	indf2,w,c
  4372  000962  0100               	movlb	0	; () banked
  4373  000964  0100               	movlb	0	; () banked
  4374  000966  6FBB               	movwf	recv_msg@slot& (0+255),b
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4378  000968  0100               	movlb	0	; () banked
  4379  00096A  0100               	movlb	0	; () banked
  4380  00096C  51BB               	movf	recv_msg@slot& (0+255),w,b
  4381  00096E  0D0D               	mullw	13
  4382  000970  50F3               	movf	prodl,w,c
  4383  000972  0100               	movlb	0	; () banked
  4384  000974  0100               	movlb	0	; () banked
  4385  000976  25B2               	addwf	recv_msg@qptr& (0+255),w,b
  4386  000978  0100               	movlb	0	; () banked
  4387  00097A  0100               	movlb	0	; () banked
  4388  00097C  6FBE               	movwf	recv_msg@qmsg& (0+255),b
  4389  00097E  50F4               	movf	prodh,w,c
  4390  000980  0100               	movlb	0	; () banked
  4391  000982  0100               	movlb	0	; () banked
  4392  000984  21B3               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4393  000986  0100               	movlb	0	; () banked
  4394  000988  6FBF               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;messages.c: 74: if (qmsg->full == 1) {
  4398  00098A  0E01               	movlw	1
  4399  00098C  C0BE  FFD9         	movff	recv_msg@qmsg,fsr2l
  4400  000990  C0BF  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4401  000994  62DF               	cpfseq	indf2,c
  4402  000996  D074               	goto	l2453
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4406  000998  0100               	movlb	0	; () banked
  4407  00099A  EE20 F001          	lfsr	2,1
  4408  00099E  0100               	movlb	0	; () banked
  4409  0009A0  51BE               	movf	recv_msg@qmsg& (0+255),w,b
  4410  0009A2  26D9               	addwf	fsr2l,f,c
  4411  0009A4  0100               	movlb	0	; () banked
  4412  0009A6  51BF               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4413  0009A8  22DA               	addwfc	fsr2h,f,c
  4414  0009AA  50DF               	movf	indf2,w,c
  4415  0009AC  0100               	movlb	0	; () banked
  4416  0009AE  0100               	movlb	0	; () banked
  4417  0009B0  5DB4               	subwf	recv_msg@maxlength& (0+255),w,b
  4418  0009B2  B0D8               	btfsc	status,0,c
  4419  0009B4  D002               	goto	l2437
  4420                           
  4421                           ; BSR set to: 0
  4422                           ;messages.c: 77: return (-3);
  4423  0009B6  0EFD               	movlw	253
  4424  0009B8  0012               	return	
  4425  0009BA                     l2437:
  4426                           
  4427                           ; BSR set to: 0
  4428                           ;messages.c: 78: }
  4429                           ;messages.c: 80: tlength = qmsg->length;
  4430  0009BA  0100               	movlb	0	; () banked
  4431  0009BC  EE20 F001          	lfsr	2,1
  4432  0009C0  0100               	movlb	0	; () banked
  4433  0009C2  51BE               	movf	recv_msg@qmsg& (0+255),w,b
  4434  0009C4  26D9               	addwf	fsr2l,f,c
  4435  0009C6  0100               	movlb	0	; () banked
  4436  0009C8  51BF               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4437  0009CA  22DA               	addwfc	fsr2h,f,c
  4438  0009CC  50DF               	movf	indf2,w,c
  4439  0009CE  0100               	movlb	0	; () banked
  4440  0009D0  6FB9               	movwf	??_recv_msg& (0+255),b
  4441  0009D2  0100               	movlb	0	; () banked
  4442  0009D4  51B9               	movf	??_recv_msg& (0+255),w,b
  4443  0009D6  0100               	movlb	0	; () banked
  4444  0009D8  0100               	movlb	0	; () banked
  4445  0009DA  6FBC               	movwf	recv_msg@tlength& (0+255),b
  4446  0009DC  0100               	movlb	0	; () banked
  4447  0009DE  6BBD               	clrf	(recv_msg@tlength+1)& (0+255),b
  4448                           
  4449                           ; BSR set to: 0
  4450                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4451  0009E0  0100               	movlb	0	; () banked
  4452  0009E2  0100               	movlb	0	; () banked
  4453  0009E4  C0B8  F0A9         	movff	recv_msg@data+1,memcpy@d1+1
  4454  0009E8  0100               	movlb	0	; () banked
  4455  0009EA  0100               	movlb	0	; () banked
  4456  0009EC  C0B7  F0A8         	movff	recv_msg@data,memcpy@d1
  4457  0009F0  0E03               	movlw	3
  4458  0009F2  0100               	movlb	0	; () banked
  4459  0009F4  0100               	movlb	0	; () banked
  4460  0009F6  25BE               	addwf	recv_msg@qmsg& (0+255),w,b
  4461  0009F8  0100               	movlb	0	; () banked
  4462  0009FA  6FB9               	movwf	??_recv_msg& (0+255),b
  4463  0009FC  0E00               	movlw	0
  4464  0009FE  0100               	movlb	0	; () banked
  4465  000A00  0100               	movlb	0	; () banked
  4466  000A02  21BF               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4467  000A04  0100               	movlb	0	; () banked
  4468  000A06  6FBA               	movwf	(??_recv_msg+1)& (0+255),b
  4469  000A08  C0B9  F0AA         	movff	??_recv_msg,memcpy@s1
  4470  000A0C  C0BA  F0AB         	movff	??_recv_msg+1,memcpy@s1+1
  4471  000A10  C0BC  F0AC         	movff	recv_msg@tlength,memcpy@n
  4472  000A14  C0BD  F0AD         	movff	recv_msg@tlength+1,memcpy@n+1
  4473  000A18  EC2D  F00B         	call	_memcpy	;wreg free
  4474                           
  4475                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4476  000A1C  0100               	movlb	0	; () banked
  4477  000A1E  EE20 F035          	lfsr	2,53
  4478  000A22  0100               	movlb	0	; () banked
  4479  000A24  51B2               	movf	recv_msg@qptr& (0+255),w,b
  4480  000A26  26D9               	addwf	fsr2l,f,c
  4481  000A28  0100               	movlb	0	; () banked
  4482  000A2A  51B3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4483  000A2C  22DA               	addwfc	fsr2h,f,c
  4484  000A2E  0100               	movlb	0	; () banked
  4485  000A30  EE10 F035          	lfsr	1,53
  4486  000A34  0100               	movlb	0	; () banked
  4487  000A36  51B2               	movf	recv_msg@qptr& (0+255),w,b
  4488  000A38  26E1               	addwf	fsr1l,f,c
  4489  000A3A  0100               	movlb	0	; () banked
  4490  000A3C  51B3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4491  000A3E  22E2               	addwfc	fsr1h,f,c
  4492  000A40  50E7               	movf	indf1,w,c
  4493  000A42  0100               	movlb	0	; () banked
  4494  000A44  6FB9               	movwf	??_recv_msg& (0+255),b
  4495  000A46  0100               	movlb	0	; () banked
  4496  000A48  29B9               	incf	??_recv_msg& (0+255),w,b
  4497  000A4A  0B03               	andlw	3
  4498  000A4C  6EDF               	movwf	indf2,c
  4499                           
  4500                           ; BSR set to: 0
  4501                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4502  000A4E  0100               	movlb	0	; () banked
  4503  000A50  EE20 F002          	lfsr	2,2
  4504  000A54  0100               	movlb	0	; () banked
  4505  000A56  51BE               	movf	recv_msg@qmsg& (0+255),w,b
  4506  000A58  26D9               	addwf	fsr2l,f,c
  4507  000A5A  0100               	movlb	0	; () banked
  4508  000A5C  51BF               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4509  000A5E  22DA               	addwfc	fsr2h,f,c
  4510  000A60  C0B5  FFE1         	movff	recv_msg@msgtype,fsr1l
  4511  000A64  C0B6  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4512  000A68  CFDF FFE7          	movff	indf2,indf1
  4513                           
  4514                           ; BSR set to: 0
  4515                           ;messages.c: 91: qmsg->full = 0;
  4516  000A6C  C0BE  FFD9         	movff	recv_msg@qmsg,fsr2l
  4517  000A70  C0BF  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4518  000A74  0E00               	movlw	0
  4519  000A76  6EDF               	movwf	indf2,c
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;messages.c: 92: return (tlength);
  4523  000A78  0100               	movlb	0	; () banked
  4524  000A7A  0100               	movlb	0	; () banked
  4525  000A7C  51BC               	movf	recv_msg@tlength& (0+255),w,b
  4526  000A7E  0012               	return	
  4527  000A80                     l2453:
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;messages.c: 94: return (-4);
  4531  000A80  0EFC               	movlw	252
  4532  000A82  0012               	return	
  4533  000A84                     __end_of_recv_msg:
  4534                           	opt stack 0
  4535                           tblptru	equ	0xFF8
  4536                           tblptrh	equ	0xFF7
  4537                           tblptrl	equ	0xFF6
  4538                           tablat	equ	0xFF5
  4539                           prodh	equ	0xFF4
  4540                           prodl	equ	0xFF3
  4541                           intcon	equ	0xFF2
  4542                           intcon2	equ	0xFF1
  4543                           postinc0	equ	0xFEE
  4544                           wreg	equ	0xFE8
  4545                           indf1	equ	0xFE7
  4546                           postdec1	equ	0xFE5
  4547                           fsr1h	equ	0xFE2
  4548                           fsr1l	equ	0xFE1
  4549                           indf2	equ	0xFDF
  4550                           postinc2	equ	0xFDE
  4551                           postdec2	equ	0xFDD
  4552                           fsr2h	equ	0xFDA
  4553                           fsr2l	equ	0xFD9
  4554                           status	equ	0xFD8
  4555                           
  4556 ;; *************** function _memcpy *****************
  4557 ;; Defined at:
  4558 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;  d1              2   40[BANK0 ] PTR void 
  4561 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4562 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4563 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  4564 ;;  s1              2   42[BANK0 ] PTR const void 
  4565 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4566 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4567 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  4568 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4569 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  4570 ;;  n               2   44[BANK0 ] unsigned int 
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;  s               2   48[BANK0 ] PTR const unsigned char 
  4573 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4574 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4575 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  4576 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4577 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  4578 ;;  d               2   46[BANK0 ] PTR unsigned char 
  4579 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4580 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4581 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  4582 ;; Return value:  Size  Location     Type
  4583 ;;                  2   40[BANK0 ] PTR void 
  4584 ;; Registers used:
  4585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/0
  4588 ;;		On exit  : 0/0
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4591 ;;      Params:         0       6       0       0       0
  4592 ;;      Locals:         0       4       0       0       0
  4593 ;;      Temps:          0       0       0       0       0
  4594 ;;      Totals:         0      10       0       0       0
  4595 ;;Total ram usage:       10 bytes
  4596 ;; Hardware stack levels used:    1
  4597 ;; Hardware stack levels required when called:   10
  4598 ;; This function calls:
  4599 ;;		Nothing
  4600 ;; This function is called by:
  4601 ;;		_send_msg
  4602 ;;		_recv_msg
  4603 ;; This function uses a non-reentrant model
  4604 ;;
  4605                           
  4606                           	psect	text28
  4607  00165A                     __ptext28:
  4608                           	opt stack 0
  4609  00165A                     _memcpy:
  4610                           	opt stack 16
  4611                           
  4612                           ; BSR set to: 0
  4613                           ;incstack = 0
  4614  00165A  0100               	movlb	0	; () banked
  4615  00165C  0100               	movlb	0	; () banked
  4616  00165E  C0AB  F0B1         	movff	memcpy@s1+1,memcpy@s+1
  4617  001662  0100               	movlb	0	; () banked
  4618  001664  0100               	movlb	0	; () banked
  4619  001666  C0AA  F0B0         	movff	memcpy@s1,memcpy@s
  4620  00166A  0100               	movlb	0	; () banked
  4621  00166C  0100               	movlb	0	; () banked
  4622  00166E  C0A9  F0AF         	movff	memcpy@d1+1,memcpy@d+1
  4623  001672  0100               	movlb	0	; () banked
  4624  001674  0100               	movlb	0	; () banked
  4625  001676  C0A8  F0AE         	movff	memcpy@d1,memcpy@d
  4626  00167A  D012               	goto	l2423
  4627  00167C                     l2417:
  4628                           
  4629                           ; BSR set to: 0
  4630  00167C  C0B0  FFD9         	movff	memcpy@s,fsr2l
  4631  001680  C0B1  FFDA         	movff	memcpy@s+1,fsr2h
  4632  001684  C0AE  FFE1         	movff	memcpy@d,fsr1l
  4633  001688  C0AF  FFE2         	movff	memcpy@d+1,fsr1h
  4634  00168C  CFDF FFE7          	movff	indf2,indf1
  4635                           
  4636                           ; BSR set to: 0
  4637  001690  0100               	movlb	0	; () banked
  4638  001692  0100               	movlb	0	; () banked
  4639  001694  4BB0               	infsnz	memcpy@s& (0+255),f,b
  4640  001696  2BB1               	incf	(memcpy@s+1)& (0+255),f,b
  4641                           
  4642                           ; BSR set to: 0
  4643  001698  0100               	movlb	0	; () banked
  4644  00169A  0100               	movlb	0	; () banked
  4645  00169C  4BAE               	infsnz	memcpy@d& (0+255),f,b
  4646  00169E  2BAF               	incf	(memcpy@d+1)& (0+255),f,b
  4647  0016A0                     l2423:
  4648                           
  4649                           ; BSR set to: 0
  4650  0016A0  0100               	movlb	0	; () banked
  4651  0016A2  0100               	movlb	0	; () banked
  4652  0016A4  07AC               	decf	memcpy@n& (0+255),f,b
  4653  0016A6  A0D8               	btfss	status,0,c
  4654  0016A8  07AD               	decf	(memcpy@n+1)& (0+255),f,b
  4655  0016AA  0100               	movlb	0	; () banked
  4656  0016AC  29AC               	incf	memcpy@n& (0+255),w,b
  4657  0016AE  B4D8               	btfsc	status,2,c
  4658  0016B0  29AD               	incf	(memcpy@n+1)& (0+255),w,b
  4659  0016B2  B4D8               	btfsc	status,2,c
  4660                           
  4661                           ; BSR set to: 0
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;	Return value of _memcpy is never used
  4665  0016B4  0012               	return	
  4666  0016B6  D7E2               	goto	l2417
  4667  0016B8                     __end_of_memcpy:
  4668                           	opt stack 0
  4669                           tblptru	equ	0xFF8
  4670                           tblptrh	equ	0xFF7
  4671                           tblptrl	equ	0xFF6
  4672                           tablat	equ	0xFF5
  4673                           prodh	equ	0xFF4
  4674                           prodl	equ	0xFF3
  4675                           intcon	equ	0xFF2
  4676                           intcon2	equ	0xFF1
  4677                           postinc0	equ	0xFEE
  4678                           wreg	equ	0xFE8
  4679                           indf1	equ	0xFE7
  4680                           postdec1	equ	0xFE5
  4681                           fsr1h	equ	0xFE2
  4682                           fsr1l	equ	0xFE1
  4683                           indf2	equ	0xFDF
  4684                           postinc2	equ	0xFDE
  4685                           postdec2	equ	0xFDD
  4686                           fsr2h	equ	0xFDA
  4687                           fsr2l	equ	0xFD9
  4688                           status	equ	0xFD8
  4689                           
  4690 ;; *************** function _OpenUSART *****************
  4691 ;; Defined at:
  4692 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;  config          1    wreg     unsigned char 
  4695 ;;  spbrg           2   40[BANK0 ] unsigned int 
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;  config          1   45[BANK0 ] unsigned char 
  4698 ;; Return value:  Size  Location     Type
  4699 ;;		None               void
  4700 ;; Registers used:
  4701 ;;		wreg, status,2
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4707 ;;      Params:         0       2       0       0       0
  4708 ;;      Locals:         0       1       0       0       0
  4709 ;;      Temps:          0       3       0       0       0
  4710 ;;      Totals:         0       6       0       0       0
  4711 ;;Total ram usage:        6 bytes
  4712 ;; Hardware stack levels used:    1
  4713 ;; Hardware stack levels required when called:   10
  4714 ;; This function calls:
  4715 ;;		Nothing
  4716 ;; This function is called by:
  4717 ;;		_main
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text29
  4722  001222                     __ptext29:
  4723                           	opt stack 0
  4724  001222                     _OpenUSART:
  4725                           	opt stack 19
  4726                           
  4727                           ; BSR set to: 0
  4728                           ;incstack = 0
  4729                           ;OpenUSART@config stored from wreg
  4730  001222  CFE8 F0AD          	movff	wreg,OpenUSART@config
  4731  001226  0E00               	movlw	0
  4732  001228  6EAC               	movwf	4012,c	;volatile
  4733  00122A  0E00               	movlw	0
  4734  00122C  6EAB               	movwf	4011,c	;volatile
  4735  00122E  0100               	movlb	0	; () banked
  4736  001230  0100               	movlb	0	; () banked
  4737  001232  B1AD               	btfsc	OpenUSART@config& (0+255),0,b
  4738                           
  4739                           ; BSR set to: 0
  4740  001234  88AC               	bsf	4012,4,c	;volatile
  4741                           
  4742                           ; BSR set to: 0
  4743                           
  4744                           ; BSR set to: 0
  4745  001236  0100               	movlb	0	; () banked
  4746  001238  0100               	movlb	0	; () banked
  4747  00123A  A3AD               	btfss	OpenUSART@config& (0+255),1,b
  4748  00123C  D002               	goto	l2713
  4749                           
  4750                           ; BSR set to: 0
  4751  00123E  8CAC               	bsf	4012,6,c	;volatile
  4752  001240  8CAB               	bsf	4011,6,c	;volatile
  4753  001242                     l2713:
  4754                           
  4755                           ; BSR set to: 0
  4756  001242  0100               	movlb	0	; () banked
  4757  001244  0100               	movlb	0	; () banked
  4758  001246  B5AD               	btfsc	OpenUSART@config& (0+255),2,b
  4759                           
  4760                           ; BSR set to: 0
  4761  001248  8EAC               	bsf	4012,7,c	;volatile
  4762                           
  4763                           ; BSR set to: 0
  4764                           
  4765                           ; BSR set to: 0
  4766  00124A  0100               	movlb	0	; () banked
  4767  00124C  0100               	movlb	0	; () banked
  4768  00124E  A7AD               	btfss	OpenUSART@config& (0+255),3,b
  4769  001250  D002               	goto	l510
  4770                           
  4771                           ; BSR set to: 0
  4772  001252  88AB               	bsf	4011,4,c	;volatile
  4773  001254  D001               	goto	l2721
  4774  001256                     l510:
  4775                           
  4776                           ; BSR set to: 0
  4777  001256  8AAB               	bsf	4011,5,c	;volatile
  4778  001258                     l2721:
  4779                           
  4780                           ; BSR set to: 0
  4781  001258  0100               	movlb	0	; () banked
  4782  00125A  0100               	movlb	0	; () banked
  4783  00125C  B9AD               	btfsc	OpenUSART@config& (0+255),4,b
  4784                           
  4785                           ; BSR set to: 0
  4786  00125E  84AC               	bsf	4012,2,c	;volatile
  4787                           
  4788                           ; BSR set to: 0
  4789  001260  989E               	bcf	3998,4,c	;volatile
  4790                           
  4791                           ; BSR set to: 0
  4792  001262  0100               	movlb	0	; () banked
  4793  001264  0100               	movlb	0	; () banked
  4794  001266  BBAD               	btfsc	OpenUSART@config& (0+255),5,b
  4795                           
  4796                           ; BSR set to: 0
  4797  001268  86AB               	bsf	4011,3,c	;volatile
  4798                           
  4799                           ; BSR set to: 0
  4800                           
  4801                           ; BSR set to: 0
  4802  00126A  0100               	movlb	0	; () banked
  4803  00126C  0100               	movlb	0	; () banked
  4804  00126E  ADAD               	btfss	OpenUSART@config& (0+255),6,b
  4805  001270  D002               	goto	l514
  4806                           
  4807                           ; BSR set to: 0
  4808  001272  8A9D               	bsf	3997,5,c	;volatile
  4809  001274  D001               	goto	l515
  4810  001276                     l514:
  4811                           
  4812                           ; BSR set to: 0
  4813  001276  9A9D               	bcf	3997,5,c	;volatile
  4814  001278                     l515:
  4815                           
  4816                           ; BSR set to: 0
  4817  001278  9A9E               	bcf	3998,5,c	;volatile
  4818                           
  4819                           ; BSR set to: 0
  4820  00127A  0100               	movlb	0	; () banked
  4821  00127C  0100               	movlb	0	; () banked
  4822  00127E  AFAD               	btfss	OpenUSART@config& (0+255),7,b
  4823  001280  D002               	goto	l516
  4824                           
  4825                           ; BSR set to: 0
  4826  001282  889D               	bsf	3997,4,c	;volatile
  4827  001284  D001               	goto	l517
  4828  001286                     l516:
  4829                           
  4830                           ; BSR set to: 0
  4831  001286  989D               	bcf	3997,4,c	;volatile
  4832  001288                     l517:
  4833                           
  4834                           ; BSR set to: 0
  4835  001288  C0A8  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4836                           
  4837                           ; BSR set to: 0
  4838  00128C  0100               	movlb	0	; () banked
  4839  00128E  C0A9  F0AA         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4840  001292  C0AA  F0AB         	movff	??_OpenUSART,??_OpenUSART+1
  4841  001296  0100               	movlb	0	; () banked
  4842  001298  6BAC               	clrf	(??_OpenUSART+2)& (0+255),b
  4843  00129A  0100               	movlb	0	; () banked
  4844  00129C  51AB               	movf	(??_OpenUSART+1)& (0+255),w,b
  4845  00129E  6EB0               	movwf	4016,c	;volatile
  4846                           
  4847                           ; BSR set to: 0
  4848  0012A0  8AAC               	bsf	4012,5,c	;volatile
  4849                           
  4850                           ; BSR set to: 0
  4851  0012A2  8EAB               	bsf	4011,7,c	;volatile
  4852                           
  4853                           ; BSR set to: 0
  4854  0012A4  9C94               	bcf	3988,6,c	;volatile
  4855                           
  4856                           ; BSR set to: 0
  4857  0012A6  8E94               	bsf	3988,7,c	;volatile
  4858                           
  4859                           ; BSR set to: 0
  4860  0012A8  A8AC               	btfss	4012,4,c	;volatile
  4861  0012AA  0012               	return	
  4862                           
  4863                           ; BSR set to: 0
  4864  0012AC  BEAC               	btfsc	4012,7,c	;volatile
  4865  0012AE  0012               	return	
  4866                           
  4867                           ; BSR set to: 0
  4868  0012B0  8C94               	bsf	3988,6,c	;volatile
  4869  0012B2  0012               	return	
  4870  0012B4                     __end_of_OpenUSART:
  4871                           	opt stack 0
  4872                           tblptru	equ	0xFF8
  4873                           tblptrh	equ	0xFF7
  4874                           tblptrl	equ	0xFF6
  4875                           tablat	equ	0xFF5
  4876                           prodh	equ	0xFF4
  4877                           prodl	equ	0xFF3
  4878                           intcon	equ	0xFF2
  4879                           intcon2	equ	0xFF1
  4880                           postinc0	equ	0xFEE
  4881                           wreg	equ	0xFE8
  4882                           indf1	equ	0xFE7
  4883                           postdec1	equ	0xFE5
  4884                           fsr1h	equ	0xFE2
  4885                           fsr1l	equ	0xFE1
  4886                           indf2	equ	0xFDF
  4887                           postinc2	equ	0xFDE
  4888                           postdec2	equ	0xFDD
  4889                           fsr2h	equ	0xFDA
  4890                           fsr2l	equ	0xFD9
  4891                           status	equ	0xFD8
  4892                           
  4893 ;; *************** function _OpenTimer0 *****************
  4894 ;; Defined at:
  4895 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4896 ;; Parameters:    Size  Location     Type
  4897 ;;  config          1    wreg     unsigned char 
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;  config          1   40[BANK0 ] unsigned char 
  4900 ;; Return value:  Size  Location     Type
  4901 ;;		None               void
  4902 ;; Registers used:
  4903 ;;		wreg, status,2, status,0
  4904 ;; Tracked objects:
  4905 ;;		On entry : 0/0
  4906 ;;		On exit  : 0/0
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4909 ;;      Params:         0       0       0       0       0
  4910 ;;      Locals:         0       1       0       0       0
  4911 ;;      Temps:          0       0       0       0       0
  4912 ;;      Totals:         0       1       0       0       0
  4913 ;;Total ram usage:        1 bytes
  4914 ;; Hardware stack levels used:    1
  4915 ;; Hardware stack levels required when called:   10
  4916 ;; This function calls:
  4917 ;;		Nothing
  4918 ;; This function is called by:
  4919 ;;		_main
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text30
  4924  001968                     __ptext30:
  4925                           	opt stack 0
  4926  001968                     _OpenTimer0:
  4927                           	opt stack 19
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;incstack = 0
  4931                           ;OpenTimer0@config stored from wreg
  4932  001968  CFE8 F0A8          	movff	wreg,OpenTimer0@config
  4933  00196C  0100               	movlb	0	; () banked
  4934  00196E  0100               	movlb	0	; () banked
  4935  001970  51A8               	movf	OpenTimer0@config& (0+255),w,b
  4936  001972  0B7F               	andlw	127
  4937  001974  6ED5               	movwf	4053,c	;volatile
  4938                           
  4939                           ; BSR set to: 0
  4940  001976  0E00               	movlw	0
  4941  001978  6ED7               	movwf	4055,c	;volatile
  4942                           
  4943                           ; BSR set to: 0
  4944  00197A  0E00               	movlw	0
  4945  00197C  6ED6               	movwf	4054,c	;volatile
  4946                           
  4947                           ; BSR set to: 0
  4948  00197E  94F2               	bcf	intcon,2,c	;volatile
  4949                           
  4950                           ; BSR set to: 0
  4951  001980  0100               	movlb	0	; () banked
  4952  001982  0100               	movlb	0	; () banked
  4953  001984  AFA8               	btfss	OpenTimer0@config& (0+255),7,b
  4954  001986  D002               	goto	l461
  4955                           
  4956                           ; BSR set to: 0
  4957  001988  8AF2               	bsf	intcon,5,c	;volatile
  4958  00198A  D001               	goto	l462
  4959  00198C                     l461:
  4960                           
  4961                           ; BSR set to: 0
  4962  00198C  9AF2               	bcf	intcon,5,c	;volatile
  4963  00198E                     l462:
  4964                           
  4965                           ; BSR set to: 0
  4966  00198E  8ED5               	bsf	4053,7,c	;volatile
  4967                           
  4968                           ; BSR set to: 0
  4969  001990  0012               	return	
  4970  001992                     __end_of_OpenTimer0:
  4971                           	opt stack 0
  4972                           tblptru	equ	0xFF8
  4973                           tblptrh	equ	0xFF7
  4974                           tblptrl	equ	0xFF6
  4975                           tablat	equ	0xFF5
  4976                           prodh	equ	0xFF4
  4977                           prodl	equ	0xFF3
  4978                           intcon	equ	0xFF2
  4979                           intcon2	equ	0xFF1
  4980                           postinc0	equ	0xFEE
  4981                           wreg	equ	0xFE8
  4982                           indf1	equ	0xFE7
  4983                           postdec1	equ	0xFE5
  4984                           fsr1h	equ	0xFE2
  4985                           fsr1l	equ	0xFE1
  4986                           indf2	equ	0xFDF
  4987                           postinc2	equ	0xFDE
  4988                           postdec2	equ	0xFDD
  4989                           fsr2h	equ	0xFDA
  4990                           fsr2l	equ	0xFD9
  4991                           status	equ	0xFD8
  4992                           
  4993 ;; *************** function _InterruptHandlerLow *****************
  4994 ;; Defined at:
  4995 ;;		line 180 in file "../src/interrupts.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;		None
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;		None
  5000 ;; Return value:  Size  Location     Type
  5001 ;;		None               void
  5002 ;; Registers used:
  5003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5009 ;;      Params:         0       0       0       0       0
  5010 ;;      Locals:         0       0       0       0       0
  5011 ;;      Temps:         17       0       0       0       0
  5012 ;;      Totals:        17       0       0       0       0
  5013 ;;Total ram usage:       17 bytes
  5014 ;; Hardware stack levels used:    1
  5015 ;; Hardware stack levels required when called:    9
  5016 ;; This function calls:
  5017 ;;		_uart_recv_int_handler
  5018 ;; This function is called by:
  5019 ;;		Interrupt level 1
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           	psect	intcodelo
  5024  000018                     __pintcodelo:
  5025                           	opt stack 0
  5026  000018                     _InterruptHandlerLow:
  5027                           	opt stack 16
  5028                           
  5029                           ; BSR set to: 0
  5030                           ;incstack = 0
  5031  000018  CFD8 F01C          	movff	status,??_InterruptHandlerLow
  5032  00001C  CFE8 F01D          	movff	wreg,??_InterruptHandlerLow+1
  5033  000020  CFE0 F01E          	movff	bsr,??_InterruptHandlerLow+2
  5034  000024  CFFA F01F          	movff	pclath,??_InterruptHandlerLow+3
  5035  000028  CFFB F020          	movff	pclatu,??_InterruptHandlerLow+4
  5036  00002C  CFE9 F021          	movff	fsr0l,??_InterruptHandlerLow+5
  5037  000030  CFEA F022          	movff	fsr0h,??_InterruptHandlerLow+6
  5038  000034  CFE1 F023          	movff	fsr1l,??_InterruptHandlerLow+7
  5039  000038  CFE2 F024          	movff	fsr1h,??_InterruptHandlerLow+8
  5040  00003C  CFD9 F025          	movff	fsr2l,??_InterruptHandlerLow+9
  5041  000040  CFDA F026          	movff	fsr2h,??_InterruptHandlerLow+10
  5042  000044  CFF3 F027          	movff	prodl,??_InterruptHandlerLow+11
  5043  000048  CFF4 F028          	movff	prodh,??_InterruptHandlerLow+12
  5044  00004C  CFF6 F029          	movff	tblptrl,??_InterruptHandlerLow+13
  5045  000050  CFF7 F02A          	movff	tblptrh,??_InterruptHandlerLow+14
  5046  000054  CFF8 F02B          	movff	tblptru,??_InterruptHandlerLow+15
  5047  000058  CFF5 F02C          	movff	tablat,??_InterruptHandlerLow+16
  5048                           
  5049                           ;interrupts.c: 182: if (PIR1bits.TMR1IF) {
  5050  00005C  B09E               	btfsc	3998,0,c	;volatile
  5051                           
  5052                           ;interrupts.c: 183: PIR1bits.TMR1IF = 0;
  5053  00005E  909E               	bcf	3998,0,c	;volatile
  5054                           
  5055                           ;interrupts.c: 185: }
  5056                           ;interrupts.c: 188: if (PIR1bits.RCIF) {
  5057  000060  AA9E               	btfss	3998,5,c	;volatile
  5058  000062  D003               	goto	i1l418
  5059                           
  5060                           ;interrupts.c: 189: PIR1bits.RCIF = 0;
  5061  000064  9A9E               	bcf	3998,5,c	;volatile
  5062                           
  5063                           ;interrupts.c: 190: uart_recv_int_handler();
  5064  000066  ECC3  F008         	call	_uart_recv_int_handler	;wreg free
  5065  00006A                     i1l418:
  5066  00006A  C02C  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5067  00006E  C02B  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5068  000072  C02A  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5069  000076  C029  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5070  00007A  C028  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5071  00007E  C027  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5072  000082  C026  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5073  000086  C025  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5074  00008A  C024  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5075  00008E  C023  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5076  000092  C022  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5077  000096  C021  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5078  00009A  C020  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5079  00009E  C01F  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5080  0000A2  C01E  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5081  0000A6  C01D  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5082  0000AA  C01C  FFD8         	movff	??_InterruptHandlerLow,status
  5083  0000AE  0010               	retfie	
  5084  0000B0                     __end_of_InterruptHandlerLow:
  5085                           	opt stack 0
  5086                           pclatu	equ	0xFFB
  5087                           pclath	equ	0xFFA
  5088                           tblptru	equ	0xFF8
  5089                           tblptrh	equ	0xFF7
  5090                           tblptrl	equ	0xFF6
  5091                           tablat	equ	0xFF5
  5092                           prodh	equ	0xFF4
  5093                           prodl	equ	0xFF3
  5094                           intcon	equ	0xFF2
  5095                           intcon2	equ	0xFF1
  5096                           postinc0	equ	0xFEE
  5097                           fsr0h	equ	0xFEA
  5098                           fsr0l	equ	0xFE9
  5099                           wreg	equ	0xFE8
  5100                           indf1	equ	0xFE7
  5101                           postdec1	equ	0xFE5
  5102                           fsr1h	equ	0xFE2
  5103                           fsr1l	equ	0xFE1
  5104                           bsr	equ	0xFE0
  5105                           indf2	equ	0xFDF
  5106                           postinc2	equ	0xFDE
  5107                           postdec2	equ	0xFDD
  5108                           fsr2h	equ	0xFDA
  5109                           fsr2l	equ	0xFD9
  5110                           status	equ	0xFD8
  5111                           
  5112 ;; *************** function _uart_recv_int_handler *****************
  5113 ;; Defined at:
  5114 ;;		line 11 in file "../src/my_uart.c"
  5115 ;; Parameters:    Size  Location     Type
  5116 ;;		None
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;		None
  5119 ;; Return value:  Size  Location     Type
  5120 ;;		None               void
  5121 ;; Registers used:
  5122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5123 ;; Tracked objects:
  5124 ;;		On entry : 0/0
  5125 ;;		On exit  : 0/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5128 ;;      Params:         0       0       0       0       0
  5129 ;;      Locals:         0       0       0       0       0
  5130 ;;      Temps:          1       0       0       0       0
  5131 ;;      Totals:         1       0       0       0       0
  5132 ;;Total ram usage:        1 bytes
  5133 ;; Hardware stack levels used:    1
  5134 ;; Hardware stack levels required when called:    8
  5135 ;; This function calls:
  5136 ;;		_ReadUSART
  5137 ;;		_ToMainLow_sendmsg
  5138 ;; This function is called by:
  5139 ;;		_InterruptHandlerLow
  5140 ;; This function uses a non-reentrant model
  5141 ;;
  5142                           
  5143                           	psect	text32
  5144  001186                     __ptext32:
  5145                           	opt stack 0
  5146  001186                     _uart_recv_int_handler:
  5147                           	opt stack 16
  5148                           
  5149                           ;my_uart.c: 12: if ((PIR1bits.RCIF)) {
  5150                           
  5151                           ;incstack = 0
  5152  001186  AA9E               	btfss	3998,5,c	;volatile
  5153  001188  D03C               	goto	i1l2899
  5154                           
  5155                           ;my_uart.c: 13: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5156  00118A  EE20 F004          	lfsr	2,4
  5157  00118E  504F               	movf	_uc_ptr,w,c
  5158  001190  26D9               	addwf	fsr2l,f,c
  5159  001192  5050               	movf	_uc_ptr+1,w,c
  5160  001194  22DA               	addwfc	fsr2h,f,c
  5161  001196  50DF               	movf	indf2,w,c
  5162  001198  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5163  00119A  501B               	movf	??_uart_recv_int_handler,w,c
  5164  00119C  0D01               	mullw	1
  5165  00119E  50F3               	movf	prodl,w,c
  5166  0011A0  244F               	addwf	_uc_ptr,w,c
  5167  0011A2  6ED9               	movwf	fsr2l,c
  5168  0011A4  50F4               	movf	prodh,w,c
  5169  0011A6  2050               	addwfc	_uc_ptr+1,w,c
  5170  0011A8  6EDA               	movwf	fsr2h,c
  5171  0011AA  EC12  F00D         	call	_ReadUSART	;wreg free
  5172  0011AE  6EDF               	movwf	indf2,c
  5173                           
  5174                           ;my_uart.c: 14: uc_ptr->buflen++;
  5175  0011B0  EE20 F004          	lfsr	2,4
  5176  0011B4  504F               	movf	_uc_ptr,w,c
  5177  0011B6  26D9               	addwf	fsr2l,f,c
  5178  0011B8  5050               	movf	_uc_ptr+1,w,c
  5179  0011BA  22DA               	addwfc	fsr2h,f,c
  5180  0011BC  2ADF               	incf	indf2,f,c
  5181                           
  5182                           ;my_uart.c: 16: if (uc_ptr->buflen == 4) {
  5183  0011BE  EE20 F004          	lfsr	2,4
  5184  0011C2  504F               	movf	_uc_ptr,w,c
  5185  0011C4  26D9               	addwf	fsr2l,f,c
  5186  0011C6  5050               	movf	_uc_ptr+1,w,c
  5187  0011C8  22DA               	addwfc	fsr2h,f,c
  5188  0011CA  0E04               	movlw	4
  5189  0011CC  62DF               	cpfseq	indf2,c
  5190  0011CE  D019               	goto	i1l2899
  5191                           
  5192                           ;my_uart.c: 17: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5193  0011D0  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5194  0011D2  0E1F               	movlw	31
  5195  0011D4  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5196  0011D6  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5197  0011D8  C050  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5198  0011DC  C04F  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5199  0011E0  EE20 F004          	lfsr	2,4
  5200  0011E4  504F               	movf	_uc_ptr,w,c
  5201  0011E6  26D9               	addwf	fsr2l,f,c
  5202  0011E8  5050               	movf	_uc_ptr+1,w,c
  5203  0011EA  22DA               	addwfc	fsr2h,f,c
  5204  0011EC  50DF               	movf	indf2,w,c
  5205  0011EE  ECDD  F00C         	call	_ToMainLow_sendmsg
  5206                           
  5207                           ;my_uart.c: 18: uc_ptr->buflen = 0;
  5208  0011F2  EE20 F004          	lfsr	2,4
  5209  0011F6  504F               	movf	_uc_ptr,w,c
  5210  0011F8  26D9               	addwf	fsr2l,f,c
  5211  0011FA  5050               	movf	_uc_ptr+1,w,c
  5212  0011FC  22DA               	addwfc	fsr2h,f,c
  5213  0011FE  0E00               	movlw	0
  5214  001200  6EDF               	movwf	indf2,c
  5215  001202                     i1l2899:
  5216                           
  5217                           ;my_uart.c: 19: }
  5218                           ;my_uart.c: 20: }
  5219                           ;my_uart.c: 21: if (USART_Status.OVERRUN_ERROR == 1) {
  5220  001202  A64E               	btfss	_USART_Status,3,c
  5221  001204  0012               	return	
  5222                           
  5223                           ;my_uart.c: 24: RCSTAbits.CREN = 0;
  5224  001206  98AB               	bcf	4011,4,c	;volatile
  5225                           
  5226                           ;my_uart.c: 25: RCSTAbits.CREN = 1;
  5227  001208  88AB               	bsf	4011,4,c	;volatile
  5228                           
  5229                           ;my_uart.c: 26: ToMainLow_sendmsg(0, 30, (void *) 0);
  5230  00120A  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5231  00120C  0E1E               	movlw	30
  5232  00120E  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5233  001210  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5234  001212  0E00               	movlw	0
  5235  001214  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5236  001216  0E00               	movlw	0
  5237  001218  6E18               	movwf	ToMainLow_sendmsg@data,c
  5238  00121A  0E00               	movlw	0
  5239  00121C  ECDD  F00C         	call	_ToMainLow_sendmsg
  5240  001220  0012               	return	
  5241  001222                     __end_of_uart_recv_int_handler:
  5242                           	opt stack 0
  5243                           pclatu	equ	0xFFB
  5244                           pclath	equ	0xFFA
  5245                           tblptru	equ	0xFF8
  5246                           tblptrh	equ	0xFF7
  5247                           tblptrl	equ	0xFF6
  5248                           tablat	equ	0xFF5
  5249                           prodh	equ	0xFF4
  5250                           prodl	equ	0xFF3
  5251                           intcon	equ	0xFF2
  5252                           intcon2	equ	0xFF1
  5253                           postinc0	equ	0xFEE
  5254                           fsr0h	equ	0xFEA
  5255                           fsr0l	equ	0xFE9
  5256                           wreg	equ	0xFE8
  5257                           indf1	equ	0xFE7
  5258                           postdec1	equ	0xFE5
  5259                           fsr1h	equ	0xFE2
  5260                           fsr1l	equ	0xFE1
  5261                           bsr	equ	0xFE0
  5262                           indf2	equ	0xFDF
  5263                           postinc2	equ	0xFDE
  5264                           postdec2	equ	0xFDD
  5265                           fsr2h	equ	0xFDA
  5266                           fsr2l	equ	0xFD9
  5267                           status	equ	0xFD8
  5268                           
  5269 ;; *************** function _ToMainLow_sendmsg *****************
  5270 ;; Defined at:
  5271 ;;		line 103 in file "../src/messages.c"
  5272 ;; Parameters:    Size  Location     Type
  5273 ;;  length          1    wreg     unsigned char 
  5274 ;;  msgtype         1   22[COMRAM] unsigned char 
  5275 ;;  data            2   23[COMRAM] PTR void 
  5276 ;;		 -> main@uc(5), NULL(0), 
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;  length          1   25[COMRAM] unsigned char 
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  1    wreg      char 
  5281 ;; Registers used:
  5282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5288 ;;      Params:         3       0       0       0       0
  5289 ;;      Locals:         1       0       0       0       0
  5290 ;;      Temps:          0       0       0       0       0
  5291 ;;      Totals:         4       0       0       0       0
  5292 ;;Total ram usage:        4 bytes
  5293 ;; Hardware stack levels used:    1
  5294 ;; Hardware stack levels required when called:    7
  5295 ;; This function calls:
  5296 ;;		i1_send_msg
  5297 ;; This function is called by:
  5298 ;;		_uart_recv_int_handler
  5299 ;;		_timer1_int_handler
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303                           	psect	text33
  5304  0019BA                     __ptext33:
  5305                           	opt stack 0
  5306  0019BA                     _ToMainLow_sendmsg:
  5307                           	opt stack 16
  5308                           
  5309                           ;incstack = 0
  5310                           ;ToMainLow_sendmsg@length stored from wreg
  5311  0019BA  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5312                           
  5313                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5314                           ;	Return value of _ToMainLow_sendmsg is never used
  5315  0019BE  0101               	movlb	1	; () banked
  5316  0019C0  0E01               	movlw	high _ToMainLow_MQ
  5317  0019C2  6E0C               	movwf	i1send_msg@qptr+1,c
  5318  0019C4  0101               	movlb	1	; () banked
  5319  0019C6  0E6C               	movlw	low _ToMainLow_MQ
  5320  0019C8  6E0B               	movwf	i1send_msg@qptr,c
  5321  0019CA  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5322  0019CE  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5323  0019D2  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5324  0019D6  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5325  0019DA  EC19  F008         	call	i1_send_msg	;wreg free
  5326  0019DE  0012               	return	
  5327  0019E0                     __end_of_ToMainLow_sendmsg:
  5328                           	opt stack 0
  5329                           pclatu	equ	0xFFB
  5330                           pclath	equ	0xFFA
  5331                           tblptru	equ	0xFF8
  5332                           tblptrh	equ	0xFF7
  5333                           tblptrl	equ	0xFF6
  5334                           tablat	equ	0xFF5
  5335                           prodh	equ	0xFF4
  5336                           prodl	equ	0xFF3
  5337                           intcon	equ	0xFF2
  5338                           intcon2	equ	0xFF1
  5339                           postinc0	equ	0xFEE
  5340                           fsr0h	equ	0xFEA
  5341                           fsr0l	equ	0xFE9
  5342                           wreg	equ	0xFE8
  5343                           indf1	equ	0xFE7
  5344                           postdec1	equ	0xFE5
  5345                           fsr1h	equ	0xFE2
  5346                           fsr1l	equ	0xFE1
  5347                           bsr	equ	0xFE0
  5348                           indf2	equ	0xFDF
  5349                           postinc2	equ	0xFDE
  5350                           postdec2	equ	0xFDD
  5351                           fsr2h	equ	0xFDA
  5352                           fsr2l	equ	0xFD9
  5353                           status	equ	0xFD8
  5354                           
  5355 ;; *************** function i1_send_msg *****************
  5356 ;; Defined at:
  5357 ;;		line 24 in file "../src/messages.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5360 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5361 ;;  length          1   12[COMRAM] unsigned char 
  5362 ;;  msgtype         1   13[COMRAM] unsigned char 
  5363 ;;  data            2   14[COMRAM] PTR void 
  5364 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  5365 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  5366 ;; Auto vars:     Size  Location     Type
  5367 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5368 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5369 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5370 ;;  send_msg        2   17[COMRAM] unsigned int 
  5371 ;;  send_msg        1   19[COMRAM] unsigned char 
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  1    wreg      char 
  5374 ;; Registers used:
  5375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5381 ;;      Params:         6       0       0       0       0
  5382 ;;      Locals:         5       0       0       0       0
  5383 ;;      Temps:          1       0       0       0       0
  5384 ;;      Totals:        12       0       0       0       0
  5385 ;;Total ram usage:       12 bytes
  5386 ;; Hardware stack levels used:    1
  5387 ;; Hardware stack levels required when called:    6
  5388 ;; This function calls:
  5389 ;;		i1_memcpy
  5390 ;; This function is called by:
  5391 ;;		_ToMainLow_sendmsg
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395                           	psect	text34
  5396  001032                     __ptext34:
  5397                           	opt stack 0
  5398  001032                     i1_send_msg:
  5399                           	opt stack 16
  5400                           
  5401                           ;messages.c: 25: unsigned char slot;
  5402                           ;messages.c: 27: msg *qmsg;
  5403                           ;messages.c: 28: size_t tlength = length;
  5404                           
  5405                           ;incstack = 0
  5406  001032  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5407  001036  6A13               	clrf	i1send_msg@tlength+1,c
  5408                           
  5409                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5410  001038  EE20 F034          	lfsr	2,52
  5411  00103C  500B               	movf	i1send_msg@qptr,w,c
  5412  00103E  26D9               	addwf	fsr2l,f,c
  5413  001040  500C               	movf	i1send_msg@qptr+1,w,c
  5414  001042  22DA               	addwfc	fsr2h,f,c
  5415  001044  50DF               	movf	indf2,w,c
  5416  001046  6E14               	movwf	i1send_msg@slot,c
  5417                           
  5418                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5419  001048  5014               	movf	i1send_msg@slot,w,c
  5420  00104A  0D0D               	mullw	13
  5421  00104C  50F3               	movf	prodl,w,c
  5422  00104E  240B               	addwf	i1send_msg@qptr,w,c
  5423  001050  6E15               	movwf	i1send_msg@qmsg,c
  5424  001052  50F4               	movf	prodh,w,c
  5425  001054  200C               	addwfc	i1send_msg@qptr+1,w,c
  5426  001056  6E16               	movwf	i1send_msg@qmsg+1,c
  5427                           
  5428                           ;messages.c: 41: if (qmsg->full != 0) {
  5429  001058  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5430  00105C  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5431  001060  50DF               	movf	indf2,w,c
  5432  001062  B4D8               	btfsc	status,2,c
  5433  001064  D002               	goto	i1l2871
  5434                           
  5435                           ;messages.c: 42: return (-1);
  5436  001066  0EFF               	movlw	255
  5437  001068  0012               	return	
  5438  00106A                     i1l2871:
  5439                           
  5440                           ;messages.c: 43: }
  5441                           ;messages.c: 46: qmsg->length = length;
  5442  00106A  EE20 F001          	lfsr	2,1
  5443  00106E  5015               	movf	i1send_msg@qmsg,w,c
  5444  001070  26D9               	addwf	fsr2l,f,c
  5445  001072  5016               	movf	i1send_msg@qmsg+1,w,c
  5446  001074  22DA               	addwfc	fsr2h,f,c
  5447  001076  C00D  FFDF         	movff	i1send_msg@length,indf2
  5448                           
  5449                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5450  00107A  EE20 F002          	lfsr	2,2
  5451  00107E  5015               	movf	i1send_msg@qmsg,w,c
  5452  001080  26D9               	addwf	fsr2l,f,c
  5453  001082  5016               	movf	i1send_msg@qmsg+1,w,c
  5454  001084  22DA               	addwfc	fsr2h,f,c
  5455  001086  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5456                           
  5457                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5458  00108A  0E03               	movlw	3
  5459  00108C  2415               	addwf	i1send_msg@qmsg,w,c
  5460  00108E  6E01               	movwf	i1memcpy@d1,c
  5461  001090  0E00               	movlw	0
  5462  001092  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5463  001094  6E02               	movwf	i1memcpy@d1+1,c
  5464  001096  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5465  00109A  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5466  00109E  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5467  0010A2  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5468  0010A6  EC06  F00C         	call	i1_memcpy	;wreg free
  5469                           
  5470                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5471  0010AA  EE20 F034          	lfsr	2,52
  5472  0010AE  500B               	movf	i1send_msg@qptr,w,c
  5473  0010B0  26D9               	addwf	fsr2l,f,c
  5474  0010B2  500C               	movf	i1send_msg@qptr+1,w,c
  5475  0010B4  22DA               	addwfc	fsr2h,f,c
  5476  0010B6  EE10 F034          	lfsr	1,52
  5477  0010BA  500B               	movf	i1send_msg@qptr,w,c
  5478  0010BC  26E1               	addwf	fsr1l,f,c
  5479  0010BE  500C               	movf	i1send_msg@qptr+1,w,c
  5480  0010C0  22E2               	addwfc	fsr1h,f,c
  5481  0010C2  50E7               	movf	indf1,w,c
  5482  0010C4  6E11               	movwf	??i1_send_msg& (0+255),c
  5483  0010C6  2811               	incf	??i1_send_msg,w,c
  5484  0010C8  0B03               	andlw	3
  5485  0010CA  6EDF               	movwf	indf2,c
  5486                           
  5487                           ;messages.c: 59: qmsg->full = 1;
  5488  0010CC  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5489  0010D0  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5490  0010D4  0E01               	movlw	1
  5491  0010D6  6EDF               	movwf	indf2,c
  5492                           
  5493                           ;messages.c: 60: return (1);
  5494  0010D8  0E01               	movlw	1
  5495  0010DA  0012               	return	
  5496  0010DC                     __end_ofi1_send_msg:
  5497                           	opt stack 0
  5498                           pclatu	equ	0xFFB
  5499                           pclath	equ	0xFFA
  5500                           tblptru	equ	0xFF8
  5501                           tblptrh	equ	0xFF7
  5502                           tblptrl	equ	0xFF6
  5503                           tablat	equ	0xFF5
  5504                           prodh	equ	0xFF4
  5505                           prodl	equ	0xFF3
  5506                           intcon	equ	0xFF2
  5507                           intcon2	equ	0xFF1
  5508                           postinc0	equ	0xFEE
  5509                           fsr0h	equ	0xFEA
  5510                           fsr0l	equ	0xFE9
  5511                           wreg	equ	0xFE8
  5512                           indf1	equ	0xFE7
  5513                           postdec1	equ	0xFE5
  5514                           fsr1h	equ	0xFE2
  5515                           fsr1l	equ	0xFE1
  5516                           bsr	equ	0xFE0
  5517                           indf2	equ	0xFDF
  5518                           postinc2	equ	0xFDE
  5519                           postdec2	equ	0xFDD
  5520                           fsr2h	equ	0xFDA
  5521                           fsr2l	equ	0xFD9
  5522                           status	equ	0xFD8
  5523                           
  5524 ;; *************** function i1_memcpy *****************
  5525 ;; Defined at:
  5526 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  d1              2    0[COMRAM] PTR void 
  5529 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5530 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5531 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  5532 ;;  s1              2    2[COMRAM] PTR const void 
  5533 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5534 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5535 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  5536 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5537 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  5538 ;;  n               2    4[COMRAM] unsigned int 
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5541 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5542 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5543 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  5544 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5545 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  5546 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5547 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5548 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5549 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  5550 ;; Return value:  Size  Location     Type
  5551 ;;                  2    0[COMRAM] PTR void 
  5552 ;; Registers used:
  5553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5554 ;; Tracked objects:
  5555 ;;		On entry : 0/0
  5556 ;;		On exit  : 0/0
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5559 ;;      Params:         6       0       0       0       0
  5560 ;;      Locals:         4       0       0       0       0
  5561 ;;      Temps:          0       0       0       0       0
  5562 ;;      Totals:        10       0       0       0       0
  5563 ;;Total ram usage:       10 bytes
  5564 ;; Hardware stack levels used:    1
  5565 ;; Hardware stack levels required when called:    5
  5566 ;; This function calls:
  5567 ;;		Nothing
  5568 ;; This function is called by:
  5569 ;;		i1_send_msg
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           	psect	text35
  5574  00180C                     __ptext35:
  5575                           	opt stack 0
  5576  00180C                     i1_memcpy:
  5577                           	opt stack 16
  5578                           
  5579                           ;incstack = 0
  5580  00180C  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5581  001810  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5582  001814  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5583  001818  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5584  00181C  D00E               	goto	i1l2847
  5585  00181E                     i1l2841:
  5586  00181E  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5587  001822  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5588  001826  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5589  00182A  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5590  00182E  CFDF FFE7          	movff	indf2,indf1
  5591  001832  4A09               	infsnz	i1memcpy@s,f,c
  5592  001834  2A0A               	incf	i1memcpy@s+1,f,c
  5593  001836  4A07               	infsnz	i1memcpy@d,f,c
  5594  001838  2A08               	incf	i1memcpy@d+1,f,c
  5595  00183A                     i1l2847:
  5596  00183A  0605               	decf	i1memcpy@n,f,c
  5597  00183C  A0D8               	btfss	status,0,c
  5598  00183E  0606               	decf	i1memcpy@n+1,f,c
  5599  001840  2805               	incf	i1memcpy@n& (0+255),w,c
  5600  001842  B4D8               	btfsc	status,2,c
  5601  001844  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5602  001846  B4D8               	btfsc	status,2,c
  5603                           
  5604                           ;	Return value of i1_memcpy is never used
  5605  001848  0012               	return	
  5606  00184A  D7E9               	goto	i1l2841
  5607  00184C                     __end_ofi1_memcpy:
  5608                           	opt stack 0
  5609                           pclatu	equ	0xFFB
  5610                           pclath	equ	0xFFA
  5611                           tblptru	equ	0xFF8
  5612                           tblptrh	equ	0xFF7
  5613                           tblptrl	equ	0xFF6
  5614                           tablat	equ	0xFF5
  5615                           prodh	equ	0xFF4
  5616                           prodl	equ	0xFF3
  5617                           intcon	equ	0xFF2
  5618                           intcon2	equ	0xFF1
  5619                           postinc0	equ	0xFEE
  5620                           fsr0h	equ	0xFEA
  5621                           fsr0l	equ	0xFE9
  5622                           wreg	equ	0xFE8
  5623                           indf1	equ	0xFE7
  5624                           postdec1	equ	0xFE5
  5625                           fsr1h	equ	0xFE2
  5626                           fsr1l	equ	0xFE1
  5627                           bsr	equ	0xFE0
  5628                           indf2	equ	0xFDF
  5629                           postinc2	equ	0xFDE
  5630                           postdec2	equ	0xFDD
  5631                           fsr2h	equ	0xFDA
  5632                           fsr2l	equ	0xFD9
  5633                           status	equ	0xFD8
  5634                           
  5635 ;; *************** function _ReadUSART *****************
  5636 ;; Defined at:
  5637 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  5638 ;; Parameters:    Size  Location     Type
  5639 ;;		None
  5640 ;; Auto vars:     Size  Location     Type
  5641 ;;  data            1    0[COMRAM] unsigned char 
  5642 ;; Return value:  Size  Location     Type
  5643 ;;                  1    wreg      unsigned char 
  5644 ;; Registers used:
  5645 ;;		wreg, status,2, status,0
  5646 ;; Tracked objects:
  5647 ;;		On entry : 0/0
  5648 ;;		On exit  : 0/0
  5649 ;;		Unchanged: 0/0
  5650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5651 ;;      Params:         0       0       0       0       0
  5652 ;;      Locals:         1       0       0       0       0
  5653 ;;      Temps:          0       0       0       0       0
  5654 ;;      Totals:         1       0       0       0       0
  5655 ;;Total ram usage:        1 bytes
  5656 ;; Hardware stack levels used:    1
  5657 ;; Hardware stack levels required when called:    5
  5658 ;; This function calls:
  5659 ;;		Nothing
  5660 ;; This function is called by:
  5661 ;;		_uart_recv_int_handler
  5662 ;; This function uses a non-reentrant model
  5663 ;;
  5664                           
  5665                           	psect	text36
  5666  001A24                     __ptext36:
  5667                           	opt stack 0
  5668  001A24                     _ReadUSART:
  5669                           	opt stack 18
  5670                           
  5671                           ;incstack = 0
  5672  001A24  0EF2               	movlw	242
  5673  001A26  164E               	andwf	_USART_Status,f,c
  5674  001A28  ACAB               	btfss	4011,6,c	;volatile
  5675  001A2A  D003               	goto	i1l528
  5676  001A2C  904E               	bcf	_USART_Status,0,c
  5677  001A2E  B0AB               	btfsc	4011,0,c	;volatile
  5678  001A30  804E               	bsf	_USART_Status,0,c
  5679  001A32                     i1l528:
  5680  001A32  B4AB               	btfsc	4011,2,c	;volatile
  5681  001A34  844E               	bsf	_USART_Status,2,c
  5682  001A36  B2AB               	btfsc	4011,1,c	;volatile
  5683  001A38  864E               	bsf	_USART_Status,3,c
  5684  001A3A  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5685  001A3E  5001               	movf	ReadUSART@data,w,c
  5686  001A40  0012               	return	
  5687  001A42                     __end_of_ReadUSART:
  5688                           	opt stack 0
  5689                           pclatu	equ	0xFFB
  5690                           pclath	equ	0xFFA
  5691                           tblptru	equ	0xFF8
  5692                           tblptrh	equ	0xFF7
  5693                           tblptrl	equ	0xFF6
  5694                           tablat	equ	0xFF5
  5695                           prodh	equ	0xFF4
  5696                           prodl	equ	0xFF3
  5697                           intcon	equ	0xFF2
  5698                           intcon2	equ	0xFF1
  5699                           postinc0	equ	0xFEE
  5700                           fsr0h	equ	0xFEA
  5701                           fsr0l	equ	0xFE9
  5702                           wreg	equ	0xFE8
  5703                           indf1	equ	0xFE7
  5704                           postdec1	equ	0xFE5
  5705                           fsr1h	equ	0xFE2
  5706                           fsr1l	equ	0xFE1
  5707                           bsr	equ	0xFE0
  5708                           indf2	equ	0xFDF
  5709                           postinc2	equ	0xFDE
  5710                           postdec2	equ	0xFDD
  5711                           fsr2h	equ	0xFDA
  5712                           fsr2l	equ	0xFD9
  5713                           status	equ	0xFD8
  5714                           
  5715 ;; *************** function _InterruptHandlerHigh *****************
  5716 ;; Defined at:
  5717 ;;		line 114 in file "../src/interrupts.c"
  5718 ;; Parameters:    Size  Location     Type
  5719 ;;		None
  5720 ;; Auto vars:     Size  Location     Type
  5721 ;;  pureADCValue    2   38[BANK0 ] int 
  5722 ;; Return value:  Size  Location     Type
  5723 ;;		None               void
  5724 ;; Registers used:
  5725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5726 ;; Tracked objects:
  5727 ;;		On entry : 0/0
  5728 ;;		On exit  : 0/0
  5729 ;;		Unchanged: 0/0
  5730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5731 ;;      Params:         0       0       0       0       0
  5732 ;;      Locals:         0       2       0       0       0
  5733 ;;      Temps:          0      16       0       0       0
  5734 ;;      Totals:         0      18       0       0       0
  5735 ;;Total ram usage:       18 bytes
  5736 ;; Hardware stack levels used:    1
  5737 ;; Hardware stack levels required when called:    4
  5738 ;; This function calls:
  5739 ;;		_ReadADC
  5740 ;;		_i2c_int_handler
  5741 ;;		i2_ConvertADC
  5742 ;; This function is called by:
  5743 ;;		Interrupt level 2
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           	psect	intcode
  5748  000008                     __pintcode:
  5749                           	opt stack 0
  5750  000008                     _InterruptHandlerHigh:
  5751                           	opt stack 16
  5752                           
  5753                           ;incstack = 0
  5754  000008  CFFA F098          	movff	pclath,??_InterruptHandlerHigh+2
  5755  00000C  CFFB F099          	movff	pclatu,??_InterruptHandlerHigh+3
  5756  000010  EF42  F005         	goto	int_func
  5757                           pclatu	equ	0xFFB
  5758                           pclath	equ	0xFFA
  5759                           tblptru	equ	0xFF8
  5760                           tblptrh	equ	0xFF7
  5761                           tblptrl	equ	0xFF6
  5762                           tablat	equ	0xFF5
  5763                           prodh	equ	0xFF4
  5764                           prodl	equ	0xFF3
  5765                           intcon	equ	0xFF2
  5766                           intcon2	equ	0xFF1
  5767                           postinc0	equ	0xFEE
  5768                           fsr0h	equ	0xFEA
  5769                           fsr0l	equ	0xFE9
  5770                           wreg	equ	0xFE8
  5771                           indf1	equ	0xFE7
  5772                           postdec1	equ	0xFE5
  5773                           fsr1h	equ	0xFE2
  5774                           fsr1l	equ	0xFE1
  5775                           bsr	equ	0xFE0
  5776                           indf2	equ	0xFDF
  5777                           postinc2	equ	0xFDE
  5778                           postdec2	equ	0xFDD
  5779                           fsr2h	equ	0xFDA
  5780                           fsr2l	equ	0xFD9
  5781                           status	equ	0xFD8
  5782                           
  5783                           	psect	intcode_body
  5784  000A84                     __pintcode_body:
  5785                           	opt stack 16
  5786  000A84                     int_func:
  5787                           	opt stack 16
  5788  000A84  CFE9 F09A          	movff	fsr0l,??_InterruptHandlerHigh+4
  5789  000A88  CFEA F09B          	movff	fsr0h,??_InterruptHandlerHigh+5
  5790  000A8C  CFE1 F09C          	movff	fsr1l,??_InterruptHandlerHigh+6
  5791  000A90  CFE2 F09D          	movff	fsr1h,??_InterruptHandlerHigh+7
  5792  000A94  CFD9 F09E          	movff	fsr2l,??_InterruptHandlerHigh+8
  5793  000A98  CFDA F09F          	movff	fsr2h,??_InterruptHandlerHigh+9
  5794  000A9C  CFF3 F0A0          	movff	prodl,??_InterruptHandlerHigh+10
  5795  000AA0  CFF4 F0A1          	movff	prodh,??_InterruptHandlerHigh+11
  5796  000AA4  CFF6 F0A2          	movff	tblptrl,??_InterruptHandlerHigh+12
  5797  000AA8  CFF7 F0A3          	movff	tblptrh,??_InterruptHandlerHigh+13
  5798  000AAC  CFF8 F0A4          	movff	tblptru,??_InterruptHandlerHigh+14
  5799  000AB0  CFF5 F0A5          	movff	tablat,??_InterruptHandlerHigh+15
  5800                           
  5801                           ;interrupts.c: 119: if (PIR1bits.SSPIF) {
  5802  000AB4  A69E               	btfss	3998,3,c	;volatile
  5803  000AB6  D003               	goto	i2l3103
  5804                           
  5805                           ;interrupts.c: 121: PIR1bits.SSPIF = 0;
  5806  000AB8  969E               	bcf	3998,3,c	;volatile
  5807                           
  5808                           ;interrupts.c: 123: i2c_int_handler();
  5809  000ABA  EC5A  F000         	call	_i2c_int_handler	;wreg free
  5810  000ABE                     i2l3103:
  5811                           
  5812                           ;interrupts.c: 124: }
  5813                           ;interrupts.c: 127: if (INTCONbits.TMR0IF) {
  5814  000ABE  A4F2               	btfss	intcon,2,c	;volatile
  5815  000AC0  D013               	goto	i2l3111
  5816                           
  5817                           ;interrupts.c: 128: INTCONbits.TMR0IF = 0;
  5818  000AC2  94F2               	bcf	intcon,2,c	;volatile
  5819                           
  5820                           ;interrupts.c: 131: LATDbits.LATD7 = !LATDbits.LATD7;
  5821  000AC4  BE8C               	btfsc	3980,7,c	;volatile
  5822  000AC6  D002               	goto	i2u230_40
  5823  000AC8  0E01               	movlw	1
  5824  000ACA  D001               	goto	i2u230_46
  5825  000ACC                     i2u230_40:
  5826  000ACC  0E00               	movlw	0
  5827  000ACE                     i2u230_46:
  5828  000ACE  0100               	movlb	0	; () banked
  5829  000AD0  6F96               	movwf	??_InterruptHandlerHigh& (0+255),b
  5830  000AD2  0100               	movlb	0	; () banked
  5831  000AD4  3396               	rrcf	??_InterruptHandlerHigh& (0+255),f,b
  5832  000AD6  3396               	rrcf	??_InterruptHandlerHigh& (0+255),f,b
  5833  000AD8  508C               	movf	3980,w,c	;volatile
  5834  000ADA  0100               	movlb	0	; () banked
  5835  000ADC  1996               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  5836  000ADE  0B7F               	andlw	-129
  5837  000AE0  1996               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  5838  000AE2  6E8C               	movwf	3980,c	;volatile
  5839                           
  5840                           ; BSR set to: 0
  5841                           ;interrupts.c: 132: ConvertADC();
  5842  000AE4  EC54  F00D         	call	i2_ConvertADC	;wreg free
  5843  000AE8                     i2l3111:
  5844                           
  5845                           ;interrupts.c: 133: }
  5846                           ;interrupts.c: 138: if(PIR1bits.ADIF == 1)
  5847  000AE8  AC9E               	btfss	3998,6,c	;volatile
  5848  000AEA  D046               	goto	i2l413
  5849                           
  5850                           ;interrupts.c: 139: {
  5851                           ;interrupts.c: 142: PIR1bits.ADIF = 0;
  5852  000AEC  9C9E               	bcf	3998,6,c	;volatile
  5853                           
  5854                           ;interrupts.c: 143: LATDbits.LATD6 = !LATDbits.LATD6;
  5855  000AEE  BC8C               	btfsc	3980,6,c	;volatile
  5856  000AF0  D002               	goto	i2u232_40
  5857  000AF2  0E01               	movlw	1
  5858  000AF4  D001               	goto	i2u232_46
  5859  000AF6                     i2u232_40:
  5860  000AF6  0E00               	movlw	0
  5861  000AF8                     i2u232_46:
  5862  000AF8  0100               	movlb	0	; () banked
  5863  000AFA  6F96               	movwf	??_InterruptHandlerHigh& (0+255),b
  5864  000AFC  0100               	movlb	0	; () banked
  5865  000AFE  3B96               	swapf	??_InterruptHandlerHigh& (0+255),f,b
  5866  000B00  4796               	rlncf	??_InterruptHandlerHigh& (0+255),f,b
  5867  000B02  4796               	rlncf	??_InterruptHandlerHigh& (0+255),f,b
  5868  000B04  508C               	movf	3980,w,c	;volatile
  5869  000B06  0100               	movlb	0	; () banked
  5870  000B08  1996               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  5871  000B0A  0BBF               	andlw	-65
  5872  000B0C  1996               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  5873  000B0E  6E8C               	movwf	3980,c	;volatile
  5874                           
  5875                           ; BSR set to: 0
  5876                           ;interrupts.c: 144: int pureADCValue = ReadADC();
  5877  000B10  EC4D  F00D         	call	_ReadADC	;wreg free
  5878  000B14  C02D  F0A6         	movff	?_ReadADC,InterruptHandlerHigh@pureADCValue
  5879  000B18  C02E  F0A7         	movff	?_ReadADC+1,InterruptHandlerHigh@pureADCValue+1
  5880                           
  5881                           ;interrupts.c: 145: ADCValue = pureADCValue >> 2;
  5882  000B1C  0100               	movlb	0	; () banked
  5883  000B1E  C0A6  F096         	movff	InterruptHandlerHigh@pureADCValue,??_InterruptHandlerHigh
  5884  000B22  0100               	movlb	0	; () banked
  5885  000B24  C0A7  F097         	movff	InterruptHandlerHigh@pureADCValue+1,??_InterruptHandlerHigh+1
  5886  000B28  0100               	movlb	0	; () banked
  5887  000B2A  3597               	rlcf	(??_InterruptHandlerHigh+1)& (0+255),w,b
  5888  000B2C  3397               	rrcf	(??_InterruptHandlerHigh+1)& (0+255),f,b
  5889  000B2E  3396               	rrcf	??_InterruptHandlerHigh& (0+255),f,b
  5890  000B30  0100               	movlb	0	; () banked
  5891  000B32  3597               	rlcf	(??_InterruptHandlerHigh+1)& (0+255),w,b
  5892  000B34  3397               	rrcf	(??_InterruptHandlerHigh+1)& (0+255),f,b
  5893  000B36  3396               	rrcf	??_InterruptHandlerHigh& (0+255),f,b
  5894  000B38  0100               	movlb	0	; () banked
  5895  000B3A  5196               	movf	??_InterruptHandlerHigh& (0+255),w,b
  5896  000B3C  6E4D               	movwf	_ADCValue,c
  5897                           
  5898                           ; BSR set to: 0
  5899                           ;interrupts.c: 146: if(responding == 0)
  5900  000B3E  504C               	movf	_responding+1,w,c
  5901  000B40  104B               	iorwf	_responding,w,c
  5902  000B42  A4D8               	btfss	status,2,c
  5903  000B44  D019               	goto	i2l413
  5904                           
  5905                           ; BSR set to: 0
  5906                           ;interrupts.c: 147: {
  5907                           ;interrupts.c: 148: if(arrayPlaceHolder == 350)
  5908  000B46  044A               	decf	_arrayPlaceHolder+1,w,c
  5909  000B48  0E5E               	movlw	94
  5910  000B4A  B4D8               	btfsc	status,2,c
  5911  000B4C  1849               	xorwf	_arrayPlaceHolder,w,c
  5912  000B4E  A4D8               	btfss	status,2,c
  5913  000B50  D009               	goto	i2l3127
  5914                           
  5915                           ; BSR set to: 0
  5916                           ;interrupts.c: 149: {
  5917                           ;interrupts.c: 150: responding = 1;
  5918  000B52  0E00               	movlw	0
  5919  000B54  6E4C               	movwf	_responding+1,c
  5920  000B56  0E01               	movlw	1
  5921  000B58  6E4B               	movwf	_responding,c
  5922                           
  5923                           ;interrupts.c: 151: arrayPlaceHolder = 0;
  5924  000B5A  0E00               	movlw	0
  5925  000B5C  6E4A               	movwf	_arrayPlaceHolder+1,c
  5926  000B5E  0E00               	movlw	0
  5927  000B60  6E49               	movwf	_arrayPlaceHolder,c
  5928                           
  5929                           ;interrupts.c: 152: }
  5930  000B62  D00A               	goto	i2l413
  5931  000B64                     i2l3127:
  5932                           
  5933                           ; BSR set to: 0
  5934                           ;interrupts.c: 153: else
  5935                           ;interrupts.c: 154: {
  5936                           ;interrupts.c: 155: ADCArray[arrayPlaceHolder] = ADCValue;
  5937  000B64  0E36               	movlw	low _ADCArray
  5938  000B66  2449               	addwf	_arrayPlaceHolder,w,c
  5939  000B68  6ED9               	movwf	fsr2l,c
  5940  000B6A  0E02               	movlw	high _ADCArray
  5941  000B6C  204A               	addwfc	_arrayPlaceHolder+1,w,c
  5942  000B6E  6EDA               	movwf	fsr2h,c
  5943  000B70  C04D  FFDF         	movff	_ADCValue,indf2
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;interrupts.c: 156: arrayPlaceHolder++;
  5947  000B74  4A49               	infsnz	_arrayPlaceHolder,f,c
  5948  000B76  2A4A               	incf	_arrayPlaceHolder+1,f,c
  5949  000B78                     i2l413:
  5950  000B78  C0A5  FFF5         	movff	??_InterruptHandlerHigh+15,tablat
  5951  000B7C  C0A4  FFF8         	movff	??_InterruptHandlerHigh+14,tblptru
  5952  000B80  C0A3  FFF7         	movff	??_InterruptHandlerHigh+13,tblptrh
  5953  000B84  C0A2  FFF6         	movff	??_InterruptHandlerHigh+12,tblptrl
  5954  000B88  C0A1  FFF4         	movff	??_InterruptHandlerHigh+11,prodh
  5955  000B8C  C0A0  FFF3         	movff	??_InterruptHandlerHigh+10,prodl
  5956  000B90  C09F  FFDA         	movff	??_InterruptHandlerHigh+9,fsr2h
  5957  000B94  C09E  FFD9         	movff	??_InterruptHandlerHigh+8,fsr2l
  5958  000B98  C09D  FFE2         	movff	??_InterruptHandlerHigh+7,fsr1h
  5959  000B9C  C09C  FFE1         	movff	??_InterruptHandlerHigh+6,fsr1l
  5960  000BA0  C09B  FFEA         	movff	??_InterruptHandlerHigh+5,fsr0h
  5961  000BA4  C09A  FFE9         	movff	??_InterruptHandlerHigh+4,fsr0l
  5962  000BA8  C099  FFFB         	movff	??_InterruptHandlerHigh+3,pclatu
  5963  000BAC  C098  FFFA         	movff	??_InterruptHandlerHigh+2,pclath
  5964  000BB0  0011               	retfie		f
  5965  000BB2                     __end_of_InterruptHandlerHigh:
  5966                           	opt stack 0
  5967                           pclatu	equ	0xFFB
  5968                           pclath	equ	0xFFA
  5969                           tblptru	equ	0xFF8
  5970                           tblptrh	equ	0xFF7
  5971                           tblptrl	equ	0xFF6
  5972                           tablat	equ	0xFF5
  5973                           prodh	equ	0xFF4
  5974                           prodl	equ	0xFF3
  5975                           intcon	equ	0xFF2
  5976                           intcon2	equ	0xFF1
  5977                           postinc0	equ	0xFEE
  5978                           fsr0h	equ	0xFEA
  5979                           fsr0l	equ	0xFE9
  5980                           wreg	equ	0xFE8
  5981                           indf1	equ	0xFE7
  5982                           postdec1	equ	0xFE5
  5983                           fsr1h	equ	0xFE2
  5984                           fsr1l	equ	0xFE1
  5985                           bsr	equ	0xFE0
  5986                           indf2	equ	0xFDF
  5987                           postinc2	equ	0xFDE
  5988                           postdec2	equ	0xFDD
  5989                           fsr2h	equ	0xFDA
  5990                           fsr2l	equ	0xFD9
  5991                           status	equ	0xFD8
  5992                           
  5993 ;; *************** function i2_ConvertADC *****************
  5994 ;; Defined at:
  5995 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcconv.c"
  5996 ;; Parameters:    Size  Location     Type
  5997 ;;		None
  5998 ;; Auto vars:     Size  Location     Type
  5999 ;;		None
  6000 ;; Return value:  Size  Location     Type
  6001 ;;		None               void
  6002 ;; Registers used:
  6003 ;;		None
  6004 ;; Tracked objects:
  6005 ;;		On entry : 0/0
  6006 ;;		On exit  : 0/0
  6007 ;;		Unchanged: 0/0
  6008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6009 ;;      Params:         0       0       0       0       0
  6010 ;;      Locals:         0       0       0       0       0
  6011 ;;      Temps:          0       0       0       0       0
  6012 ;;      Totals:         0       0       0       0       0
  6013 ;;Total ram usage:        0 bytes
  6014 ;; Hardware stack levels used:    1
  6015 ;; This function calls:
  6016 ;;		Nothing
  6017 ;; This function is called by:
  6018 ;;		_InterruptHandlerHigh
  6019 ;; This function uses a non-reentrant model
  6020 ;;
  6021                           
  6022                           	psect	text38
  6023  001AA8                     __ptext38:
  6024                           	opt stack 0
  6025  001AA8                     i2_ConvertADC:
  6026                           	opt stack 19
  6027                           
  6028                           ;incstack = 0
  6029  001AA8  82C2               	bsf	4034,1,c	;volatile
  6030  001AAA  0012               	return	
  6031  001AAC                     __end_ofi2_ConvertADC:
  6032                           	opt stack 0
  6033                           pclatu	equ	0xFFB
  6034                           pclath	equ	0xFFA
  6035                           tblptru	equ	0xFF8
  6036                           tblptrh	equ	0xFF7
  6037                           tblptrl	equ	0xFF6
  6038                           tablat	equ	0xFF5
  6039                           prodh	equ	0xFF4
  6040                           prodl	equ	0xFF3
  6041                           intcon	equ	0xFF2
  6042                           intcon2	equ	0xFF1
  6043                           postinc0	equ	0xFEE
  6044                           fsr0h	equ	0xFEA
  6045                           fsr0l	equ	0xFE9
  6046                           wreg	equ	0xFE8
  6047                           indf1	equ	0xFE7
  6048                           postdec1	equ	0xFE5
  6049                           fsr1h	equ	0xFE2
  6050                           fsr1l	equ	0xFE1
  6051                           bsr	equ	0xFE0
  6052                           indf2	equ	0xFDF
  6053                           postinc2	equ	0xFDE
  6054                           postdec2	equ	0xFDD
  6055                           fsr2h	equ	0xFDA
  6056                           fsr2l	equ	0xFD9
  6057                           status	equ	0xFD8
  6058                           
  6059 ;; *************** function _i2c_int_handler *****************
  6060 ;; Defined at:
  6061 ;;		line 101 in file "../src/my_i2c.c"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;		None
  6064 ;; Auto vars:     Size  Location     Type
  6065 ;;  msgbuffer      11    0[BANK0 ] unsigned char [11]
  6066 ;;  length          2   11[BANK0 ] int 
  6067 ;;  error_buf       3   13[BANK0 ] unsigned char [3]
  6068 ;;  data_read       1   21[BANK0 ] unsigned char 
  6069 ;;  msg_ready       1   20[BANK0 ] unsigned char 
  6070 ;;  msg_to_send     1   19[BANK0 ] unsigned char 
  6071 ;;  i2c_data        1   18[BANK0 ] unsigned char 
  6072 ;;  overrun_erro    1   17[BANK0 ] unsigned char 
  6073 ;;  data_written    1   16[BANK0 ] unsigned char 
  6074 ;; Return value:  Size  Location     Type
  6075 ;;		None               void
  6076 ;; Registers used:
  6077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6083 ;;      Params:         0       0       0       0       0
  6084 ;;      Locals:         0      22       0       0       0
  6085 ;;      Temps:          2       0       0       0       0
  6086 ;;      Totals:         2      22       0       0       0
  6087 ;;Total ram usage:       24 bytes
  6088 ;; Hardware stack levels used:    1
  6089 ;; Hardware stack levels required when called:    3
  6090 ;; This function calls:
  6091 ;;		_ToMainHigh_sendmsg
  6092 ;;		_handle_start
  6093 ;;		_returnADCValue
  6094 ;;		i2_start_i2c_slave_reply
  6095 ;; This function is called by:
  6096 ;;		_InterruptHandlerHigh
  6097 ;; This function uses a non-reentrant model
  6098 ;;
  6099                           
  6100                           	psect	text39
  6101  0000B4                     __ptext39:
  6102                           	opt stack 0
  6103  0000B4                     _i2c_int_handler:
  6104                           	opt stack 16
  6105                           
  6106                           ;my_i2c.c: 102: unsigned char i2c_data;
  6107                           ;my_i2c.c: 103: unsigned char data_read = 0;
  6108                           
  6109                           ;incstack = 0
  6110  0000B4  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6111  0000B6  0E00               	movlw	0
  6112  0000B8  0100               	movlb	0	; () banked
  6113  0000BA  0100               	movlb	0	; () banked
  6114  0000BC  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  6115  0000BE  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6116                           
  6117                           ;my_i2c.c: 104: unsigned char data_written = 0;
  6118  0000C0  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6119  0000C2  0E00               	movlw	0
  6120  0000C4  0100               	movlb	0	; () banked
  6121  0000C6  0100               	movlb	0	; () banked
  6122  0000C8  6F90               	movwf	i2c_int_handler@data_written& (0+255),b
  6123  0000CA  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6124                           
  6125                           ;my_i2c.c: 105: unsigned char msg_ready = 0;
  6126  0000CC  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6127  0000CE  0E00               	movlw	0
  6128  0000D0  0100               	movlb	0	; () banked
  6129  0000D2  0100               	movlb	0	; () banked
  6130  0000D4  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6131  0000D6  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6132                           
  6133                           ;my_i2c.c: 106: unsigned char msg_to_send = 0;
  6134  0000D8  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6135  0000DA  0E00               	movlw	0
  6136  0000DC  0100               	movlb	0	; () banked
  6137  0000DE  0100               	movlb	0	; () banked
  6138  0000E0  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6139  0000E2  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6140                           
  6141                           ;my_i2c.c: 107: unsigned char overrun_error = 0;
  6142  0000E4  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6143  0000E6  0E00               	movlw	0
  6144  0000E8  0100               	movlb	0	; () banked
  6145  0000EA  0100               	movlb	0	; () banked
  6146  0000EC  6F91               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6147  0000EE  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6148                           
  6149                           ; BSR set to: 0
  6150                           ;my_i2c.c: 108: unsigned char error_buf[3];
  6151                           ;my_i2c.c: 111: if (SSPCON1bits.SSPOV == 1) {
  6152  0000F0  ACC6               	btfss	4038,6,c	;volatile
  6153  0000F2  D027               	goto	i2l2955
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;my_i2c.c: 112: SSPCON1bits.SSPOV = 0;
  6157  0000F4  9CC6               	bcf	4038,6,c	;volatile
  6158                           
  6159                           ; BSR set to: 0
  6160                           ;my_i2c.c: 116: ic_ptr->status = 0x5;
  6161  0000F6  0100               	movlb	0	; () banked
  6162  0000F8  EE20 F00C          	lfsr	2,12
  6163  0000FC  0100               	movlb	0	; () banked
  6164  0000FE  51CD               	movf	_ic_ptr& (0+255),w,b
  6165  000100  26D9               	addwf	fsr2l,f,c
  6166  000102  0100               	movlb	0	; () banked
  6167  000104  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6168  000106  22DA               	addwfc	fsr2h,f,c
  6169  000108  0E05               	movlw	5
  6170  00010A  6EDF               	movwf	indf2,c
  6171                           
  6172                           ; BSR set to: 0
  6173                           ;my_i2c.c: 117: overrun_error = 1;
  6174  00010C  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6175  00010E  0E01               	movlw	1
  6176  000110  0100               	movlb	0	; () banked
  6177  000112  0100               	movlb	0	; () banked
  6178  000114  6F91               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6179  000116  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6180                           
  6181                           ; BSR set to: 0
  6182                           ;my_i2c.c: 118: ic_ptr->error_count++;
  6183  000118  0100               	movlb	0	; () banked
  6184  00011A  EE20 F00E          	lfsr	2,14
  6185  00011E  0100               	movlb	0	; () banked
  6186  000120  51CD               	movf	_ic_ptr& (0+255),w,b
  6187  000122  26D9               	addwf	fsr2l,f,c
  6188  000124  0100               	movlb	0	; () banked
  6189  000126  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6190  000128  22DA               	addwfc	fsr2h,f,c
  6191  00012A  2ADF               	incf	indf2,f,c
  6192                           
  6193                           ; BSR set to: 0
  6194                           ;my_i2c.c: 119: ic_ptr->error_code = 0x4;
  6195  00012C  0100               	movlb	0	; () banked
  6196  00012E  EE20 F00D          	lfsr	2,13
  6197  000132  0100               	movlb	0	; () banked
  6198  000134  51CD               	movf	_ic_ptr& (0+255),w,b
  6199  000136  26D9               	addwf	fsr2l,f,c
  6200  000138  0100               	movlb	0	; () banked
  6201  00013A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6202  00013C  22DA               	addwfc	fsr2h,f,c
  6203  00013E  0E04               	movlw	4
  6204  000140  6EDF               	movwf	indf2,c
  6205  000142                     i2l2955:
  6206                           
  6207                           ; BSR set to: 0
  6208                           ;my_i2c.c: 120: }
  6209                           ;my_i2c.c: 122: if (SSPSTATbits.BF == 1) {
  6210  000142  A0C7               	btfss	4039,0,c	;volatile
  6211  000144  D008               	goto	i2l2961
  6212                           
  6213                           ; BSR set to: 0
  6214                           ;my_i2c.c: 123: i2c_data = SSPBUF;
  6215  000146  CFC9 F092          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6216                           
  6217                           ; BSR set to: 0
  6218                           ;my_i2c.c: 124: data_read = 1;
  6219  00014A  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6220  00014C  0E01               	movlw	1
  6221  00014E  0100               	movlb	0	; () banked
  6222  000150  0100               	movlb	0	; () banked
  6223  000152  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  6224  000154  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6225  000156                     i2l2961:
  6226                           
  6227                           ; BSR set to: 0
  6228                           ;my_i2c.c: 125: }
  6229                           ;my_i2c.c: 130: if (!overrun_error) {
  6230  000156  0100               	movlb	0	; () banked
  6231  000158  0100               	movlb	0	; () banked
  6232  00015A  6791               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6233  00015C  D1B8               	goto	i2l121
  6234  00015E  D1A1               	goto	i2l3049
  6235  000160                     i2l123:
  6236                           
  6237                           ; BSR set to: 0
  6238                           ;my_i2c.c: 133: {
  6239                           ;my_i2c.c: 135: if (SSPSTATbits.S == 1) {
  6240  000160  A6C7               	btfss	4039,3,c	;volatile
  6241  000162  D1B5               	goto	i2l121
  6242                           
  6243                           ; BSR set to: 0
  6244                           ;my_i2c.c: 136: handle_start(data_read);
  6245  000164  0100               	movlb	0	; () banked
  6246  000166  0100               	movlb	0	; () banked
  6247  000168  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6248  00016A  EC5C  F007         	call	_handle_start
  6249                           
  6250                           ;my_i2c.c: 138: if (ic_ptr->status == 0x8) {
  6251  00016E  0100               	movlb	0	; () banked
  6252  000170  EE20 F00C          	lfsr	2,12
  6253  000174  0100               	movlb	0	; () banked
  6254  000176  51CD               	movf	_ic_ptr& (0+255),w,b
  6255  000178  26D9               	addwf	fsr2l,f,c
  6256  00017A  0100               	movlb	0	; () banked
  6257  00017C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6258  00017E  22DA               	addwfc	fsr2h,f,c
  6259  000180  0E08               	movlw	8
  6260  000182  62DF               	cpfseq	indf2,c
  6261  000184  D1A4               	goto	i2l121
  6262                           
  6263                           ; BSR set to: 0
  6264                           ;my_i2c.c: 139: data_read = 0;
  6265  000186  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6266  000188  0E00               	movlw	0
  6267  00018A  0100               	movlb	0	; () banked
  6268  00018C  0100               	movlb	0	; () banked
  6269  00018E  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  6270  000190  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6271                           
  6272                           ;my_i2c.c: 140: msg_to_send = 1;
  6273  000192  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6274  000194  0E01               	movlw	1
  6275  000196  0100               	movlb	0	; () banked
  6276  000198  0100               	movlb	0	; () banked
  6277  00019A  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6278  00019C  D175               	goto	L6
  6279  00019E                     i2l127:
  6280                           
  6281                           ; BSR set to: 0
  6282                           ;my_i2c.c: 146: {
  6283                           ;my_i2c.c: 148: if (SSPSTATbits.P == 1) {
  6284  00019E  A8C7               	btfss	4039,4,c	;volatile
  6285  0001A0  D02E               	goto	i2l2981
  6286                           
  6287                           ; BSR set to: 0
  6288                           ;my_i2c.c: 151: ic_ptr->event_count++;
  6289  0001A2  0100               	movlb	0	; () banked
  6290  0001A4  EE20 F00B          	lfsr	2,11
  6291  0001A8  0100               	movlb	0	; () banked
  6292  0001AA  51CD               	movf	_ic_ptr& (0+255),w,b
  6293  0001AC  26D9               	addwf	fsr2l,f,c
  6294  0001AE  0100               	movlb	0	; () banked
  6295  0001B0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6296  0001B2  22DA               	addwfc	fsr2h,f,c
  6297  0001B4  2ADF               	incf	indf2,f,c
  6298                           
  6299                           ; BSR set to: 0
  6300                           ;my_i2c.c: 152: if (data_read) {
  6301  0001B6  0100               	movlb	0	; () banked
  6302  0001B8  0100               	movlb	0	; () banked
  6303  0001BA  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6304  0001BC  B4D8               	btfsc	status,2,c
  6305  0001BE  D166               	goto	L8
  6306                           
  6307                           ; BSR set to: 0
  6308                           ;my_i2c.c: 153: if (SSPSTATbits.D_A == 0) {
  6309  0001C0  BAC7               	btfsc	4039,5,c	;volatile
  6310  0001C2  D007               	goto	i2l2979
  6311                           
  6312                           ; BSR set to: 0
  6313                           ;my_i2c.c: 154: msg_ready = 1;
  6314  0001C4  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6315  0001C6  0E01               	movlw	1
  6316  0001C8  0100               	movlb	0	; () banked
  6317  0001CA  0100               	movlb	0	; () banked
  6318  0001CC  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6319  0001CE  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6320                           
  6321                           ;my_i2c.c: 155: } else {
  6322  0001D0  D15D               	goto	L8
  6323  0001D2                     i2l2979:
  6324                           
  6325                           ; BSR set to: 0
  6326                           ;my_i2c.c: 156: ic_ptr->error_count++;
  6327  0001D2  0100               	movlb	0	; () banked
  6328  0001D4  EE20 F00E          	lfsr	2,14
  6329  0001D8  0100               	movlb	0	; () banked
  6330  0001DA  51CD               	movf	_ic_ptr& (0+255),w,b
  6331  0001DC  26D9               	addwf	fsr2l,f,c
  6332  0001DE  0100               	movlb	0	; () banked
  6333  0001E0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6334  0001E2  22DA               	addwfc	fsr2h,f,c
  6335  0001E4  2ADF               	incf	indf2,f,c
  6336                           
  6337                           ;my_i2c.c: 157: ic_ptr->error_code = 0x6;
  6338  0001E6  0100               	movlb	0	; () banked
  6339  0001E8  EE20 F00D          	lfsr	2,13
  6340  0001EC  0100               	movlb	0	; () banked
  6341  0001EE  51CD               	movf	_ic_ptr& (0+255),w,b
  6342  0001F0  26D9               	addwf	fsr2l,f,c
  6343  0001F2  0100               	movlb	0	; () banked
  6344  0001F4  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6345  0001F6  22DA               	addwfc	fsr2h,f,c
  6346  0001F8  0E06               	movlw	6
  6347  0001FA  6EDF               	movwf	indf2,c
  6348                           
  6349                           ; BSR set to: 0
  6350  0001FC  D147               	goto	L8
  6351  0001FE                     i2l2981:
  6352                           
  6353                           ; BSR set to: 0
  6354  0001FE  0100               	movlb	0	; () banked
  6355  000200  0100               	movlb	0	; () banked
  6356  000202  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6357  000204  B4D8               	btfsc	status,2,c
  6358  000206  D163               	goto	i2l121
  6359                           
  6360                           ; BSR set to: 0
  6361                           ;my_i2c.c: 162: ic_ptr->event_count++;
  6362  000208  0100               	movlb	0	; () banked
  6363  00020A  EE20 F00B          	lfsr	2,11
  6364  00020E  0100               	movlb	0	; () banked
  6365  000210  51CD               	movf	_ic_ptr& (0+255),w,b
  6366  000212  26D9               	addwf	fsr2l,f,c
  6367  000214  0100               	movlb	0	; () banked
  6368  000216  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6369  000218  22DA               	addwfc	fsr2h,f,c
  6370  00021A  2ADF               	incf	indf2,f,c
  6371                           
  6372                           ; BSR set to: 0
  6373                           ;my_i2c.c: 163: if (SSPSTATbits.D_A == 0) {
  6374  00021C  BAC7               	btfsc	4039,5,c	;volatile
  6375  00021E  D019               	goto	i2l2997
  6376                           
  6377                           ; BSR set to: 0
  6378                           ;my_i2c.c: 164: if (SSPSTATbits.R_W == 0) {
  6379  000220  B4C7               	btfsc	4039,2,c	;volatile
  6380  000222  D00B               	goto	i2l2991
  6381                           
  6382                           ; BSR set to: 0
  6383                           ;my_i2c.c: 165: ic_ptr->status = 0x7;
  6384  000224  0100               	movlb	0	; () banked
  6385  000226  EE20 F00C          	lfsr	2,12
  6386  00022A  0100               	movlb	0	; () banked
  6387  00022C  51CD               	movf	_ic_ptr& (0+255),w,b
  6388  00022E  26D9               	addwf	fsr2l,f,c
  6389  000230  0100               	movlb	0	; () banked
  6390  000232  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6391  000234  22DA               	addwfc	fsr2h,f,c
  6392  000236  0E07               	movlw	7
  6393  000238  D071               	goto	L5
  6394  00023A                     i2l2991:
  6395                           
  6396                           ; BSR set to: 0
  6397                           ;my_i2c.c: 167: ic_ptr->status = 0x8;
  6398  00023A  0100               	movlb	0	; () banked
  6399  00023C  EE20 F00C          	lfsr	2,12
  6400  000240  0100               	movlb	0	; () banked
  6401  000242  51CD               	movf	_ic_ptr& (0+255),w,b
  6402  000244  26D9               	addwf	fsr2l,f,c
  6403  000246  0100               	movlb	0	; () banked
  6404  000248  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6405  00024A  22DA               	addwfc	fsr2h,f,c
  6406  00024C  0E08               	movlw	8
  6407  00024E  6EDF               	movwf	indf2,c
  6408  000250  D110               	goto	L9
  6409  000252                     i2l2997:
  6410                           
  6411                           ; BSR set to: 0
  6412                           ;my_i2c.c: 173: ic_ptr->error_count++;
  6413  000252  0100               	movlb	0	; () banked
  6414  000254  EE20 F00E          	lfsr	2,14
  6415  000258  0100               	movlb	0	; () banked
  6416  00025A  51CD               	movf	_ic_ptr& (0+255),w,b
  6417  00025C  26D9               	addwf	fsr2l,f,c
  6418  00025E  0100               	movlb	0	; () banked
  6419  000260  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6420  000262  22DA               	addwfc	fsr2h,f,c
  6421  000264  2ADF               	incf	indf2,f,c
  6422                           
  6423                           ;my_i2c.c: 174: ic_ptr->status = 0x5;
  6424  000266  0100               	movlb	0	; () banked
  6425  000268  EE20 F00C          	lfsr	2,12
  6426  00026C  0100               	movlb	0	; () banked
  6427  00026E  51CD               	movf	_ic_ptr& (0+255),w,b
  6428  000270  26D9               	addwf	fsr2l,f,c
  6429  000272  0100               	movlb	0	; () banked
  6430  000274  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6431  000276  22DA               	addwfc	fsr2h,f,c
  6432  000278  0E05               	movlw	5
  6433  00027A  6EDF               	movwf	indf2,c
  6434                           
  6435                           ;my_i2c.c: 175: ic_ptr->error_code = 0x6;
  6436  00027C  0100               	movlb	0	; () banked
  6437  00027E  EE20 F00D          	lfsr	2,13
  6438  000282  0100               	movlb	0	; () banked
  6439  000284  51CD               	movf	_ic_ptr& (0+255),w,b
  6440  000286  26D9               	addwf	fsr2l,f,c
  6441  000288  0100               	movlb	0	; () banked
  6442  00028A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6443  00028C  22DA               	addwfc	fsr2h,f,c
  6444  00028E  0E06               	movlw	6
  6445  000290  D045               	goto	L5
  6446  000292                     i2l2999:
  6447                           
  6448                           ; BSR set to: 0
  6449                           ;my_i2c.c: 181: {
  6450                           ;my_i2c.c: 182: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6451  000292  0100               	movlb	0	; () banked
  6452  000294  EE20 F01A          	lfsr	2,26
  6453  000298  0100               	movlb	0	; () banked
  6454  00029A  51CD               	movf	_ic_ptr& (0+255),w,b
  6455  00029C  26D9               	addwf	fsr2l,f,c
  6456  00029E  0100               	movlb	0	; () banked
  6457  0002A0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6458  0002A2  22DA               	addwfc	fsr2h,f,c
  6459  0002A4  50DF               	movf	indf2,w,c
  6460  0002A6  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6461  0002A8  0100               	movlb	0	; () banked
  6462  0002AA  EE20 F019          	lfsr	2,25
  6463  0002AE  0100               	movlb	0	; () banked
  6464  0002B0  51CD               	movf	_ic_ptr& (0+255),w,b
  6465  0002B2  26D9               	addwf	fsr2l,f,c
  6466  0002B4  0100               	movlb	0	; () banked
  6467  0002B6  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6468  0002B8  22DA               	addwfc	fsr2h,f,c
  6469  0002BA  50DF               	movf	indf2,w,c
  6470  0002BC  5C47               	subwf	??_i2c_int_handler,w,c
  6471  0002BE  B0D8               	btfsc	status,0,c
  6472  0002C0  D0E5               	goto	L8
  6473                           
  6474                           ; BSR set to: 0
  6475                           ;my_i2c.c: 183: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6476  0002C2  0100               	movlb	0	; () banked
  6477  0002C4  EE20 F01A          	lfsr	2,26
  6478  0002C8  0100               	movlb	0	; () banked
  6479  0002CA  51CD               	movf	_ic_ptr& (0+255),w,b
  6480  0002CC  26D9               	addwf	fsr2l,f,c
  6481  0002CE  0100               	movlb	0	; () banked
  6482  0002D0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6483  0002D2  22DA               	addwfc	fsr2h,f,c
  6484  0002D4  50DF               	movf	indf2,w,c
  6485  0002D6  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6486  0002D8  5047               	movf	??_i2c_int_handler,w,c
  6487  0002DA  0D01               	mullw	1
  6488  0002DC  0E0F               	movlw	15
  6489  0002DE  26F3               	addwf	prodl,f,c
  6490  0002E0  0E00               	movlw	0
  6491  0002E2  22F4               	addwfc	prodh,f,c
  6492  0002E4  50F3               	movf	prodl,w,c
  6493  0002E6  0100               	movlb	0	; () banked
  6494  0002E8  0100               	movlb	0	; () banked
  6495  0002EA  25CD               	addwf	_ic_ptr& (0+255),w,b
  6496  0002EC  6ED9               	movwf	fsr2l,c
  6497  0002EE  50F4               	movf	prodh,w,c
  6498  0002F0  0100               	movlb	0	; () banked
  6499  0002F2  0100               	movlb	0	; () banked
  6500  0002F4  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6501  0002F6  6EDA               	movwf	fsr2h,c
  6502  0002F8  50DF               	movf	indf2,w,c
  6503  0002FA  6EC9               	movwf	4041,c	;volatile
  6504                           
  6505                           ; BSR set to: 0
  6506                           ;my_i2c.c: 184: ic_ptr->outbufind++;
  6507  0002FC  0100               	movlb	0	; () banked
  6508  0002FE  EE20 F01A          	lfsr	2,26
  6509  000302  0100               	movlb	0	; () banked
  6510  000304  51CD               	movf	_ic_ptr& (0+255),w,b
  6511  000306  26D9               	addwf	fsr2l,f,c
  6512  000308  0100               	movlb	0	; () banked
  6513  00030A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6514  00030C  22DA               	addwfc	fsr2h,f,c
  6515  00030E  2ADF               	incf	indf2,f,c
  6516                           
  6517                           ; BSR set to: 0
  6518                           ;my_i2c.c: 185: data_written = 1;
  6519  000310  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6520  000312  0E01               	movlw	1
  6521  000314  0100               	movlb	0	; () banked
  6522  000316  0100               	movlb	0	; () banked
  6523  000318  6F90               	movwf	i2c_int_handler@data_written& (0+255),b
  6524  00031A  D0B6               	goto	L6
  6525  00031C                     L5:
  6526  00031C  6EDF               	movwf	indf2,c
  6527  00031E  D0D7               	goto	i2l121
  6528  000320                     i2l141:
  6529                           
  6530                           ; BSR set to: 0
  6531                           ;my_i2c.c: 193: {
  6532                           ;my_i2c.c: 195: if (SSPSTATbits.P == 1) {
  6533  000320  A8C7               	btfss	4039,4,c	;volatile
  6534  000322  D05E               	goto	i2l3027
  6535                           
  6536                           ; BSR set to: 0
  6537                           ;my_i2c.c: 197: ic_ptr->event_count++;
  6538  000324  0100               	movlb	0	; () banked
  6539  000326  EE20 F00B          	lfsr	2,11
  6540  00032A  0100               	movlb	0	; () banked
  6541  00032C  51CD               	movf	_ic_ptr& (0+255),w,b
  6542  00032E  26D9               	addwf	fsr2l,f,c
  6543  000330  0100               	movlb	0	; () banked
  6544  000332  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6545  000334  22DA               	addwfc	fsr2h,f,c
  6546  000336  2ADF               	incf	indf2,f,c
  6547                           
  6548                           ; BSR set to: 0
  6549                           ;my_i2c.c: 198: if (data_read) {
  6550  000338  0100               	movlb	0	; () banked
  6551  00033A  0100               	movlb	0	; () banked
  6552  00033C  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6553  00033E  B4D8               	btfsc	status,2,c
  6554  000340  D048               	goto	i2l3023
  6555                           
  6556                           ; BSR set to: 0
  6557                           ;my_i2c.c: 199: if (SSPSTATbits.D_A == 1) {
  6558  000342  AAC7               	btfss	4039,5,c	;volatile
  6559  000344  D025               	goto	i2l3021
  6560                           
  6561                           ; BSR set to: 0
  6562                           ;my_i2c.c: 200: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6563  000346  0100               	movlb	0	; () banked
  6564  000348  EE20 F00A          	lfsr	2,10
  6565  00034C  0100               	movlb	0	; () banked
  6566  00034E  51CD               	movf	_ic_ptr& (0+255),w,b
  6567  000350  26D9               	addwf	fsr2l,f,c
  6568  000352  0100               	movlb	0	; () banked
  6569  000354  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6570  000356  22DA               	addwfc	fsr2h,f,c
  6571  000358  50DF               	movf	indf2,w,c
  6572  00035A  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6573  00035C  5047               	movf	??_i2c_int_handler,w,c
  6574  00035E  0D01               	mullw	1
  6575  000360  50F3               	movf	prodl,w,c
  6576  000362  0100               	movlb	0	; () banked
  6577  000364  0100               	movlb	0	; () banked
  6578  000366  25CD               	addwf	_ic_ptr& (0+255),w,b
  6579  000368  6ED9               	movwf	fsr2l,c
  6580  00036A  50F4               	movf	prodh,w,c
  6581  00036C  0100               	movlb	0	; () banked
  6582  00036E  0100               	movlb	0	; () banked
  6583  000370  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6584  000372  6EDA               	movwf	fsr2h,c
  6585  000374  0100               	movlb	0	; () banked
  6586  000376  C092  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6587                           
  6588                           ; BSR set to: 0
  6589                           ;my_i2c.c: 201: ic_ptr->buflen++;
  6590  00037A  0100               	movlb	0	; () banked
  6591  00037C  EE20 F00A          	lfsr	2,10
  6592  000380  0100               	movlb	0	; () banked
  6593  000382  51CD               	movf	_ic_ptr& (0+255),w,b
  6594  000384  26D9               	addwf	fsr2l,f,c
  6595  000386  0100               	movlb	0	; () banked
  6596  000388  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6597  00038A  22DA               	addwfc	fsr2h,f,c
  6598  00038C  2ADF               	incf	indf2,f,c
  6599  00038E  D021               	goto	i2l3023
  6600  000390                     i2l3021:
  6601                           
  6602                           ; BSR set to: 0
  6603                           ;my_i2c.c: 204: ic_ptr->error_count++;
  6604  000390  0100               	movlb	0	; () banked
  6605  000392  EE20 F00E          	lfsr	2,14
  6606  000396  0100               	movlb	0	; () banked
  6607  000398  51CD               	movf	_ic_ptr& (0+255),w,b
  6608  00039A  26D9               	addwf	fsr2l,f,c
  6609  00039C  0100               	movlb	0	; () banked
  6610  00039E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6611  0003A0  22DA               	addwfc	fsr2h,f,c
  6612  0003A2  2ADF               	incf	indf2,f,c
  6613                           
  6614                           ;my_i2c.c: 205: ic_ptr->error_code = 0x6;
  6615  0003A4  0100               	movlb	0	; () banked
  6616  0003A6  EE20 F00D          	lfsr	2,13
  6617  0003AA  0100               	movlb	0	; () banked
  6618  0003AC  51CD               	movf	_ic_ptr& (0+255),w,b
  6619  0003AE  26D9               	addwf	fsr2l,f,c
  6620  0003B0  0100               	movlb	0	; () banked
  6621  0003B2  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6622  0003B4  22DA               	addwfc	fsr2h,f,c
  6623  0003B6  0E06               	movlw	6
  6624  0003B8  6EDF               	movwf	indf2,c
  6625                           
  6626                           ;my_i2c.c: 206: ic_ptr->status = 0x5;
  6627  0003BA  0100               	movlb	0	; () banked
  6628  0003BC  EE20 F00C          	lfsr	2,12
  6629  0003C0  0100               	movlb	0	; () banked
  6630  0003C2  51CD               	movf	_ic_ptr& (0+255),w,b
  6631  0003C4  26D9               	addwf	fsr2l,f,c
  6632  0003C6  0100               	movlb	0	; () banked
  6633  0003C8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6634  0003CA  22DA               	addwfc	fsr2h,f,c
  6635  0003CC  0E05               	movlw	5
  6636  0003CE  6EDF               	movwf	indf2,c
  6637  0003D0  D05D               	goto	L8
  6638  0003D2                     i2l3023:
  6639                           
  6640                           ; BSR set to: 0
  6641                           ;my_i2c.c: 209: msg_ready = 1;
  6642  0003D2  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6643  0003D4  0E01               	movlw	1
  6644  0003D6  0100               	movlb	0	; () banked
  6645  0003D8  0100               	movlb	0	; () banked
  6646  0003DA  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6647  0003DC  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6648                           
  6649                           ; BSR set to: 0
  6650  0003DE  D056               	goto	L8
  6651  0003E0                     i2l3027:
  6652                           
  6653                           ; BSR set to: 0
  6654  0003E0  0100               	movlb	0	; () banked
  6655  0003E2  0100               	movlb	0	; () banked
  6656  0003E4  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6657  0003E6  B4D8               	btfsc	status,2,c
  6658  0003E8  D072               	goto	i2l121
  6659                           
  6660                           ; BSR set to: 0
  6661                           ;my_i2c.c: 213: ic_ptr->event_count++;
  6662  0003EA  0100               	movlb	0	; () banked
  6663  0003EC  EE20 F00B          	lfsr	2,11
  6664  0003F0  0100               	movlb	0	; () banked
  6665  0003F2  51CD               	movf	_ic_ptr& (0+255),w,b
  6666  0003F4  26D9               	addwf	fsr2l,f,c
  6667  0003F6  0100               	movlb	0	; () banked
  6668  0003F8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6669  0003FA  22DA               	addwfc	fsr2h,f,c
  6670  0003FC  2ADF               	incf	indf2,f,c
  6671                           
  6672                           ; BSR set to: 0
  6673                           ;my_i2c.c: 214: if (SSPSTATbits.D_A == 1) {
  6674  0003FE  AAC7               	btfss	4039,5,c	;volatile
  6675  000400  D025               	goto	i2l149
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;my_i2c.c: 215: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6679  000402  0100               	movlb	0	; () banked
  6680  000404  EE20 F00A          	lfsr	2,10
  6681  000408  0100               	movlb	0	; () banked
  6682  00040A  51CD               	movf	_ic_ptr& (0+255),w,b
  6683  00040C  26D9               	addwf	fsr2l,f,c
  6684  00040E  0100               	movlb	0	; () banked
  6685  000410  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6686  000412  22DA               	addwfc	fsr2h,f,c
  6687  000414  50DF               	movf	indf2,w,c
  6688  000416  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6689  000418  5047               	movf	??_i2c_int_handler,w,c
  6690  00041A  0D01               	mullw	1
  6691  00041C  50F3               	movf	prodl,w,c
  6692  00041E  0100               	movlb	0	; () banked
  6693  000420  0100               	movlb	0	; () banked
  6694  000422  25CD               	addwf	_ic_ptr& (0+255),w,b
  6695  000424  6ED9               	movwf	fsr2l,c
  6696  000426  50F4               	movf	prodh,w,c
  6697  000428  0100               	movlb	0	; () banked
  6698  00042A  0100               	movlb	0	; () banked
  6699  00042C  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6700  00042E  6EDA               	movwf	fsr2h,c
  6701  000430  0100               	movlb	0	; () banked
  6702  000432  C092  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6703                           
  6704                           ; BSR set to: 0
  6705                           ;my_i2c.c: 216: ic_ptr->buflen++;
  6706  000436  0100               	movlb	0	; () banked
  6707  000438  EE20 F00A          	lfsr	2,10
  6708  00043C  0100               	movlb	0	; () banked
  6709  00043E  51CD               	movf	_ic_ptr& (0+255),w,b
  6710  000440  26D9               	addwf	fsr2l,f,c
  6711  000442  0100               	movlb	0	; () banked
  6712  000444  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6713  000446  22DA               	addwfc	fsr2h,f,c
  6714  000448  2ADF               	incf	indf2,f,c
  6715                           
  6716                           ;my_i2c.c: 217: } else {
  6717  00044A  D041               	goto	i2l121
  6718  00044C                     i2l149:
  6719                           
  6720                           ; BSR set to: 0
  6721                           ;my_i2c.c: 218: if (SSPSTATbits.R_W == 1) {
  6722  00044C  A4C7               	btfss	4039,2,c	;volatile
  6723  00044E  D6C1               	goto	i2l2979
  6724                           
  6725                           ; BSR set to: 0
  6726                           ;my_i2c.c: 219: ic_ptr->status = 0x8;
  6727  000450  0100               	movlb	0	; () banked
  6728  000452  EE20 F00C          	lfsr	2,12
  6729  000456  0100               	movlb	0	; () banked
  6730  000458  51CD               	movf	_ic_ptr& (0+255),w,b
  6731  00045A  26D9               	addwf	fsr2l,f,c
  6732  00045C  0100               	movlb	0	; () banked
  6733  00045E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6734  000460  22DA               	addwfc	fsr2h,f,c
  6735  000462  0E08               	movlw	8
  6736  000464  6EDF               	movwf	indf2,c
  6737                           
  6738                           ; BSR set to: 0
  6739                           ;my_i2c.c: 220: msg_ready = 1;
  6740  000466  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6741  000468  0E01               	movlw	1
  6742  00046A  0100               	movlb	0	; () banked
  6743  00046C  0100               	movlb	0	; () banked
  6744  00046E  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6745  000470  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6746  000472                     L9:
  6747                           
  6748                           ; BSR set to: 0
  6749                           ;my_i2c.c: 221: msg_to_send = 1;
  6750  000472  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6751  000474  0E01               	movlw	1
  6752  000476  0100               	movlb	0	; () banked
  6753  000478  0100               	movlb	0	; () banked
  6754  00047A  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6755  00047C  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6756                           
  6757                           ; BSR set to: 0
  6758                           ;my_i2c.c: 223: data_read = 0;
  6759  00047E  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6760  000480  0E00               	movlw	0
  6761  000482  0100               	movlb	0	; () banked
  6762  000484  0100               	movlb	0	; () banked
  6763  000486  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  6764  000488                     L6:
  6765  000488  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6766                           
  6767                           ;my_i2c.c: 224: } else {
  6768  00048A  D021               	goto	i2l121
  6769  00048C                     L8:
  6770                           
  6771                           ;my_i2c.c: 227: ic_ptr->status = 0x5;
  6772  00048C  0100               	movlb	0	; () banked
  6773  00048E  EE20 F00C          	lfsr	2,12
  6774  000492  0100               	movlb	0	; () banked
  6775  000494  51CD               	movf	_ic_ptr& (0+255),w,b
  6776  000496  26D9               	addwf	fsr2l,f,c
  6777  000498  0100               	movlb	0	; () banked
  6778  00049A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6779  00049C  22DA               	addwfc	fsr2h,f,c
  6780  00049E  0E05               	movlw	5
  6781  0004A0  D73D               	goto	L5
  6782  0004A2                     i2l3049:
  6783                           
  6784                           ; BSR set to: 0
  6785  0004A2  0100               	movlb	0	; () banked
  6786  0004A4  EE20 F00C          	lfsr	2,12
  6787  0004A8  0100               	movlb	0	; () banked
  6788  0004AA  51CD               	movf	_ic_ptr& (0+255),w,b
  6789  0004AC  26D9               	addwf	fsr2l,f,c
  6790  0004AE  0100               	movlb	0	; () banked
  6791  0004B0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6792  0004B2  22DA               	addwfc	fsr2h,f,c
  6793  0004B4  50DF               	movf	indf2,w,c
  6794                           
  6795                           ; Switch size 1, requested type "space"
  6796                           ; Number of cases is 4, Range of values is 5 to 8
  6797                           ; switch strategies available:
  6798                           ; Name         Instructions Cycles
  6799                           ; simple_byte           13     7 (average)
  6800                           ;	Chosen strategy is simple_byte
  6801  0004B6  0A05               	xorlw	5	; case 5
  6802  0004B8  B4D8               	btfsc	status,2,c
  6803  0004BA  D652               	goto	i2l123
  6804  0004BC  0A03               	xorlw	3	; case 6
  6805  0004BE  B4D8               	btfsc	status,2,c
  6806  0004C0  D66E               	goto	i2l127
  6807  0004C2  0A01               	xorlw	1	; case 7
  6808  0004C4  B4D8               	btfsc	status,2,c
  6809  0004C6  D72C               	goto	i2l141
  6810  0004C8  0A0F               	xorlw	15	; case 8
  6811  0004CA  B4D8               	btfsc	status,2,c
  6812  0004CC  D6E2               	goto	i2l2999
  6813  0004CE                     i2l121:
  6814                           
  6815                           ; BSR set to: 0
  6816                           ;my_i2c.c: 234: }
  6817                           ;my_i2c.c: 237: if (data_read || data_written) {
  6818  0004CE  0100               	movlb	0	; () banked
  6819  0004D0  0100               	movlb	0	; () banked
  6820  0004D2  6795               	tstfsz	i2c_int_handler@data_read& (0+255),b
  6821  0004D4  D005               	goto	i2l155
  6822                           
  6823                           ; BSR set to: 0
  6824  0004D6  0100               	movlb	0	; () banked
  6825  0004D8  0100               	movlb	0	; () banked
  6826  0004DA  5190               	movf	i2c_int_handler@data_written& (0+255),w,b
  6827  0004DC  B4D8               	btfsc	status,2,c
  6828  0004DE  D002               	goto	i2l3055
  6829  0004E0                     i2l155:
  6830                           
  6831                           ; BSR set to: 0
  6832                           ;my_i2c.c: 239: if (SSPCON1bits.CKP == 0) {
  6833  0004E0  A8C6               	btfss	4038,4,c	;volatile
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;my_i2c.c: 240: SSPCON1bits.CKP = 1;
  6837  0004E2  88C6               	bsf	4038,4,c	;volatile
  6838  0004E4                     i2l3055:
  6839                           
  6840                           ; BSR set to: 0
  6841                           ;my_i2c.c: 241: }
  6842                           ;my_i2c.c: 242: }
  6843                           ;my_i2c.c: 245: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  6844  0004E4  0100               	movlb	0	; () banked
  6845  0004E6  EE20 F00A          	lfsr	2,10
  6846  0004EA  0100               	movlb	0	; () banked
  6847  0004EC  51CD               	movf	_ic_ptr& (0+255),w,b
  6848  0004EE  26D9               	addwf	fsr2l,f,c
  6849  0004F0  0100               	movlb	0	; () banked
  6850  0004F2  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6851  0004F4  22DA               	addwfc	fsr2h,f,c
  6852  0004F6  0E08               	movlw	8
  6853  0004F8  64DF               	cpfsgt	indf2,c
  6854  0004FA  D024               	goto	i2l3061
  6855                           
  6856                           ; BSR set to: 0
  6857  0004FC  0100               	movlb	0	; () banked
  6858  0004FE  0100               	movlb	0	; () banked
  6859  000500  6794               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  6860  000502  D020               	goto	i2l3061
  6861                           
  6862                           ; BSR set to: 0
  6863                           ;my_i2c.c: 246: ic_ptr->status = 0x5;
  6864  000504  0100               	movlb	0	; () banked
  6865  000506  EE20 F00C          	lfsr	2,12
  6866  00050A  0100               	movlb	0	; () banked
  6867  00050C  51CD               	movf	_ic_ptr& (0+255),w,b
  6868  00050E  26D9               	addwf	fsr2l,f,c
  6869  000510  0100               	movlb	0	; () banked
  6870  000512  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6871  000514  22DA               	addwfc	fsr2h,f,c
  6872  000516  0E05               	movlw	5
  6873  000518  6EDF               	movwf	indf2,c
  6874                           
  6875                           ;my_i2c.c: 247: ic_ptr->error_count++;
  6876  00051A  0100               	movlb	0	; () banked
  6877  00051C  EE20 F00E          	lfsr	2,14
  6878  000520  0100               	movlb	0	; () banked
  6879  000522  51CD               	movf	_ic_ptr& (0+255),w,b
  6880  000524  26D9               	addwf	fsr2l,f,c
  6881  000526  0100               	movlb	0	; () banked
  6882  000528  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6883  00052A  22DA               	addwfc	fsr2h,f,c
  6884  00052C  2ADF               	incf	indf2,f,c
  6885                           
  6886                           ;my_i2c.c: 248: ic_ptr->error_code = 0x7;
  6887  00052E  0100               	movlb	0	; () banked
  6888  000530  EE20 F00D          	lfsr	2,13
  6889  000534  0100               	movlb	0	; () banked
  6890  000536  51CD               	movf	_ic_ptr& (0+255),w,b
  6891  000538  26D9               	addwf	fsr2l,f,c
  6892  00053A  0100               	movlb	0	; () banked
  6893  00053C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6894  00053E  22DA               	addwfc	fsr2h,f,c
  6895  000540  0E07               	movlw	7
  6896  000542  6EDF               	movwf	indf2,c
  6897  000544                     i2l3061:
  6898                           
  6899                           ; BSR set to: 0
  6900                           ;my_i2c.c: 249: }
  6901                           ;my_i2c.c: 251: if (msg_ready) {
  6902  000544  0100               	movlb	0	; () banked
  6903  000546  0100               	movlb	0	; () banked
  6904  000548  5194               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  6905  00054A  B4D8               	btfsc	status,2,c
  6906  00054C  D03E               	goto	i2l3069
  6907                           
  6908                           ; BSR set to: 0
  6909                           ;my_i2c.c: 252: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  6910  00054E  0100               	movlb	0	; () banked
  6911  000550  EE20 F00B          	lfsr	2,11
  6912  000554  0100               	movlb	0	; () banked
  6913  000556  51CD               	movf	_ic_ptr& (0+255),w,b
  6914  000558  26D9               	addwf	fsr2l,f,c
  6915  00055A  0100               	movlb	0	; () banked
  6916  00055C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6917  00055E  22DA               	addwfc	fsr2h,f,c
  6918  000560  0100               	movlb	0	; () banked
  6919  000562  EE10 F00A          	lfsr	1,10
  6920  000566  0100               	movlb	0	; () banked
  6921  000568  51CD               	movf	_ic_ptr& (0+255),w,b
  6922  00056A  26E1               	addwf	fsr1l,f,c
  6923  00056C  0100               	movlb	0	; () banked
  6924  00056E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6925  000570  22E2               	addwfc	fsr1h,f,c
  6926  000572  50E7               	movf	indf1,w,c
  6927  000574  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6928  000576  5047               	movf	??_i2c_int_handler,w,c
  6929  000578  0D01               	mullw	1
  6930  00057A  50F3               	movf	prodl,w,c
  6931  00057C  0100               	movlb	0	; () banked
  6932  00057E  0100               	movlb	0	; () banked
  6933  000580  25CD               	addwf	_ic_ptr& (0+255),w,b
  6934  000582  6EE1               	movwf	fsr1l,c
  6935  000584  50F4               	movf	prodh,w,c
  6936  000586  0100               	movlb	0	; () banked
  6937  000588  0100               	movlb	0	; () banked
  6938  00058A  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6939  00058C  6EE2               	movwf	fsr1h,c
  6940  00058E  CFDF FFE7          	movff	indf2,indf1
  6941                           
  6942                           ; BSR set to: 0
  6943                           ;my_i2c.c: 253: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  6944  000592  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6945  000594  0E28               	movlw	40
  6946  000596  6E43               	movwf	ToMainHigh_sendmsg@msgtype,c
  6947  000598  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6948  00059A  0100               	movlb	0	; () banked
  6949  00059C  C0CE  F045         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  6950  0005A0  0100               	movlb	0	; () banked
  6951  0005A2  C0CD  F044         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  6952  0005A6  0100               	movlb	0	; () banked
  6953  0005A8  EE20 F00A          	lfsr	2,10
  6954  0005AC  0100               	movlb	0	; () banked
  6955  0005AE  51CD               	movf	_ic_ptr& (0+255),w,b
  6956  0005B0  26D9               	addwf	fsr2l,f,c
  6957  0005B2  0100               	movlb	0	; () banked
  6958  0005B4  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6959  0005B6  22DA               	addwfc	fsr2h,f,c
  6960  0005B8  50DF               	movf	indf2,w,c
  6961  0005BA  6E48               	movwf	(??_i2c_int_handler+1)& (0+255),c
  6962  0005BC  2848               	incf	??_i2c_int_handler+1,w,c
  6963  0005BE  ECF0  F00C         	call	_ToMainHigh_sendmsg
  6964                           
  6965                           ;my_i2c.c: 254: ic_ptr->buflen = 0;
  6966  0005C2  0100               	movlb	0	; () banked
  6967  0005C4  EE20 F00A          	lfsr	2,10
  6968  0005C8  D043               	goto	L7
  6969  0005CA                     i2l3069:
  6970                           
  6971                           ; BSR set to: 0
  6972  0005CA  0100               	movlb	0	; () banked
  6973  0005CC  EE20 F00E          	lfsr	2,14
  6974  0005D0  0100               	movlb	0	; () banked
  6975  0005D2  51CD               	movf	_ic_ptr& (0+255),w,b
  6976  0005D4  26D9               	addwf	fsr2l,f,c
  6977  0005D6  0100               	movlb	0	; () banked
  6978  0005D8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6979  0005DA  22DA               	addwfc	fsr2h,f,c
  6980  0005DC  50DF               	movf	indf2,w,c
  6981  0005DE  B4D8               	btfsc	status,2,c
  6982  0005E0  D03F               	goto	i2l3077
  6983                           
  6984                           ; BSR set to: 0
  6985                           ;my_i2c.c: 256: error_buf[0] = ic_ptr->error_count;
  6986  0005E2  0100               	movlb	0	; () banked
  6987  0005E4  EE20 F00E          	lfsr	2,14
  6988  0005E8  0100               	movlb	0	; () banked
  6989  0005EA  51CD               	movf	_ic_ptr& (0+255),w,b
  6990  0005EC  26D9               	addwf	fsr2l,f,c
  6991  0005EE  0100               	movlb	0	; () banked
  6992  0005F0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6993  0005F2  22DA               	addwfc	fsr2h,f,c
  6994  0005F4  50DF               	movf	indf2,w,c
  6995  0005F6  0100               	movlb	0	; () banked
  6996  0005F8  0100               	movlb	0	; () banked
  6997  0005FA  6F8D               	movwf	i2c_int_handler@error_buf& (0+255),b
  6998                           
  6999                           ;my_i2c.c: 257: error_buf[1] = ic_ptr->error_code;
  7000  0005FC  0100               	movlb	0	; () banked
  7001  0005FE  EE20 F00D          	lfsr	2,13
  7002  000602  0100               	movlb	0	; () banked
  7003  000604  51CD               	movf	_ic_ptr& (0+255),w,b
  7004  000606  26D9               	addwf	fsr2l,f,c
  7005  000608  0100               	movlb	0	; () banked
  7006  00060A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7007  00060C  22DA               	addwfc	fsr2h,f,c
  7008  00060E  50DF               	movf	indf2,w,c
  7009  000610  0100               	movlb	0	; () banked
  7010  000612  0100               	movlb	0	; () banked
  7011  000614  6F8E               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7012                           
  7013                           ;my_i2c.c: 258: error_buf[2] = ic_ptr->event_count;
  7014  000616  0100               	movlb	0	; () banked
  7015  000618  EE20 F00B          	lfsr	2,11
  7016  00061C  0100               	movlb	0	; () banked
  7017  00061E  51CD               	movf	_ic_ptr& (0+255),w,b
  7018  000620  26D9               	addwf	fsr2l,f,c
  7019  000622  0100               	movlb	0	; () banked
  7020  000624  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7021  000626  22DA               	addwfc	fsr2h,f,c
  7022  000628  50DF               	movf	indf2,w,c
  7023  00062A  0100               	movlb	0	; () banked
  7024  00062C  0100               	movlb	0	; () banked
  7025  00062E  6F8F               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7026                           
  7027                           ; BSR set to: 0
  7028                           ;my_i2c.c: 259: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7029  000630  6E47               	movwf	??_i2c_int_handler& (0+255),c
  7030  000632  0E29               	movlw	41
  7031  000634  6E43               	movwf	ToMainHigh_sendmsg@msgtype,c
  7032  000636  5047               	movf	??_i2c_int_handler& (0+255),w,c
  7033  000638  0100               	movlb	0	; () banked
  7034  00063A  0E00               	movlw	high i2c_int_handler@error_buf
  7035  00063C  6E45               	movwf	ToMainHigh_sendmsg@data+1,c
  7036  00063E  0100               	movlb	0	; () banked
  7037  000640  0E8D               	movlw	low i2c_int_handler@error_buf
  7038  000642  6E44               	movwf	ToMainHigh_sendmsg@data,c
  7039  000644  0E03               	movlw	3
  7040  000646  ECF0  F00C         	call	_ToMainHigh_sendmsg
  7041                           
  7042                           ;my_i2c.c: 260: ic_ptr->error_count = 0;
  7043  00064A  0100               	movlb	0	; () banked
  7044  00064C  EE20 F00E          	lfsr	2,14
  7045  000650                     L7:
  7046  000650  0100               	movlb	0	; () banked
  7047  000652  51CD               	movf	_ic_ptr& (0+255),w,b
  7048  000654  26D9               	addwf	fsr2l,f,c
  7049  000656  0100               	movlb	0	; () banked
  7050  000658  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7051  00065A  22DA               	addwfc	fsr2h,f,c
  7052  00065C  0E00               	movlw	0
  7053  00065E  6EDF               	movwf	indf2,c
  7054  000660                     i2l3077:
  7055                           
  7056                           ; BSR set to: 0
  7057                           ;my_i2c.c: 261: }
  7058                           ;my_i2c.c: 262: if (msg_to_send) {
  7059  000660  0100               	movlb	0	; () banked
  7060  000662  0100               	movlb	0	; () banked
  7061  000664  5193               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7062  000666  B4D8               	btfsc	status,2,c
  7063  000668  0012               	return	
  7064                           
  7065                           ; BSR set to: 0
  7066                           ;my_i2c.c: 263: int length;
  7067                           ;my_i2c.c: 264: unsigned char msgbuffer[10 + 1];
  7068                           ;my_i2c.c: 265: length = 2;
  7069  00066A  0E00               	movlw	0
  7070  00066C  0100               	movlb	0	; () banked
  7071  00066E  0100               	movlb	0	; () banked
  7072  000670  6F8C               	movwf	(i2c_int_handler@length+1)& (0+255),b
  7073  000672  0E02               	movlw	2
  7074  000674  0100               	movlb	0	; () banked
  7075  000676  6F8B               	movwf	i2c_int_handler@length& (0+255),b
  7076                           
  7077                           ; BSR set to: 0
  7078                           ;my_i2c.c: 267: msgbuffer[0] = returnADCValue();
  7079  000678  EC9B  F00C         	call	_returnADCValue	;wreg free
  7080  00067C  0100               	movlb	0	; () banked
  7081  00067E  0100               	movlb	0	; () banked
  7082  000680  6F80               	movwf	i2c_int_handler@msgbuffer& (0+255),b
  7083                           
  7084                           ; BSR set to: 0
  7085                           ;my_i2c.c: 294: start_i2c_slave_reply(length, msgbuffer);
  7086  000682  0100               	movlb	0	; () banked
  7087  000684  0E00               	movlw	high i2c_int_handler@msgbuffer
  7088  000686  6E2E               	movwf	i2start_i2c_slave_reply@msg+1,c
  7089  000688  0100               	movlb	0	; () banked
  7090  00068A  0E80               	movlw	low i2c_int_handler@msgbuffer
  7091  00068C  6E2D               	movwf	i2start_i2c_slave_reply@msg,c
  7092  00068E  0100               	movlb	0	; () banked
  7093  000690  0100               	movlb	0	; () banked
  7094  000692  518B               	movf	i2c_int_handler@length& (0+255),w,b
  7095  000694  ECE2  F006         	call	i2_start_i2c_slave_reply
  7096                           
  7097                           ;my_i2c.c: 295: msg_to_send = 0;
  7098  000698  6E47               	movwf	??_i2c_int_handler& (0+255),c
  7099  00069A  0E00               	movlw	0
  7100  00069C  0100               	movlb	0	; () banked
  7101  00069E  0100               	movlb	0	; () banked
  7102  0006A0  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7103  0006A2  5047               	movf	??_i2c_int_handler& (0+255),w,c
  7104  0006A4  0012               	return	
  7105  0006A6                     __end_of_i2c_int_handler:
  7106                           	opt stack 0
  7107                           pclatu	equ	0xFFB
  7108                           pclath	equ	0xFFA
  7109                           tblptru	equ	0xFF8
  7110                           tblptrh	equ	0xFF7
  7111                           tblptrl	equ	0xFF6
  7112                           tablat	equ	0xFF5
  7113                           prodh	equ	0xFF4
  7114                           prodl	equ	0xFF3
  7115                           intcon	equ	0xFF2
  7116                           intcon2	equ	0xFF1
  7117                           postinc0	equ	0xFEE
  7118                           fsr0h	equ	0xFEA
  7119                           fsr0l	equ	0xFE9
  7120                           wreg	equ	0xFE8
  7121                           indf1	equ	0xFE7
  7122                           postdec1	equ	0xFE5
  7123                           fsr1h	equ	0xFE2
  7124                           fsr1l	equ	0xFE1
  7125                           bsr	equ	0xFE0
  7126                           indf2	equ	0xFDF
  7127                           postinc2	equ	0xFDE
  7128                           postdec2	equ	0xFDD
  7129                           fsr2h	equ	0xFDA
  7130                           fsr2l	equ	0xFD9
  7131                           status	equ	0xFD8
  7132                           
  7133 ;; *************** function i2_start_i2c_slave_reply *****************
  7134 ;; Defined at:
  7135 ;;		line 54 in file "../src/my_i2c.c"
  7136 ;; Parameters:    Size  Location     Type
  7137 ;;  length          1    wreg     unsigned char 
  7138 ;;  msg             2   44[COMRAM] PTR unsigned char 
  7139 ;;		 -> main@msgbuffer(11), i2c_int_handler@msgbuffer(11), 
  7140 ;; Auto vars:     Size  Location     Type
  7141 ;;  length          1   48[COMRAM] unsigned char 
  7142 ;; Return value:  Size  Location     Type
  7143 ;;		None               void
  7144 ;; Registers used:
  7145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7146 ;; Tracked objects:
  7147 ;;		On entry : 0/0
  7148 ;;		On exit  : 0/0
  7149 ;;		Unchanged: 0/0
  7150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7151 ;;      Params:         2       0       0       0       0
  7152 ;;      Locals:         1       0       0       0       0
  7153 ;;      Temps:          2       0       0       0       0
  7154 ;;      Totals:         5       0       0       0       0
  7155 ;;Total ram usage:        5 bytes
  7156 ;; Hardware stack levels used:    1
  7157 ;; This function calls:
  7158 ;;		Nothing
  7159 ;; This function is called by:
  7160 ;;		_i2c_int_handler
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text40
  7165  000DC4                     __ptext40:
  7166                           	opt stack 0
  7167  000DC4                     i2_start_i2c_slave_reply:
  7168                           	opt stack 18
  7169                           
  7170                           ; BSR set to: 0
  7171                           ;incstack = 0
  7172                           ;i2start_i2c_slave_reply@length stored from wreg
  7173  000DC4  CFE8 F031          	movff	wreg,i2start_i2c_slave_reply@length
  7174                           
  7175                           ;my_i2c.c: 56: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  7176  000DC8  0100               	movlb	0	; () banked
  7177  000DCA  EE20 F019          	lfsr	2,25
  7178  000DCE  0100               	movlb	0	; () banked
  7179  000DD0  51CD               	movf	_ic_ptr& (0+255),w,b
  7180  000DD2  26D9               	addwf	fsr2l,f,c
  7181  000DD4  0100               	movlb	0	; () banked
  7182  000DD6  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7183  000DD8  22DA               	addwfc	fsr2h,f,c
  7184  000DDA  0E00               	movlw	0
  7185  000DDC  6EDF               	movwf	indf2,c
  7186  000DDE  D03A               	goto	i2l3141
  7187  000DE0                     i2l3137:
  7188                           
  7189                           ; BSR set to: 0
  7190                           ;my_i2c.c: 57: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  7191  000DE0  0100               	movlb	0	; () banked
  7192  000DE2  EE20 F019          	lfsr	2,25
  7193  000DE6  0100               	movlb	0	; () banked
  7194  000DE8  51CD               	movf	_ic_ptr& (0+255),w,b
  7195  000DEA  26D9               	addwf	fsr2l,f,c
  7196  000DEC  0100               	movlb	0	; () banked
  7197  000DEE  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7198  000DF0  22DA               	addwfc	fsr2h,f,c
  7199  000DF2  50DF               	movf	indf2,w,c
  7200  000DF4  6E2F               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  7201  000DF6  502F               	movf	??i2_start_i2c_slave_reply,w,c
  7202  000DF8  0D01               	mullw	1
  7203  000DFA  50F3               	movf	prodl,w,c
  7204  000DFC  242D               	addwf	i2start_i2c_slave_reply@msg,w,c
  7205  000DFE  6ED9               	movwf	fsr2l,c
  7206  000E00  50F4               	movf	prodh,w,c
  7207  000E02  202E               	addwfc	i2start_i2c_slave_reply@msg+1,w,c
  7208  000E04  6EDA               	movwf	fsr2h,c
  7209  000E06  0100               	movlb	0	; () banked
  7210  000E08  EE10 F019          	lfsr	1,25
  7211  000E0C  0100               	movlb	0	; () banked
  7212  000E0E  51CD               	movf	_ic_ptr& (0+255),w,b
  7213  000E10  26E1               	addwf	fsr1l,f,c
  7214  000E12  0100               	movlb	0	; () banked
  7215  000E14  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7216  000E16  22E2               	addwfc	fsr1h,f,c
  7217  000E18  50E7               	movf	indf1,w,c
  7218  000E1A  6E30               	movwf	(??i2_start_i2c_slave_reply+1)& (0+255),c
  7219  000E1C  5030               	movf	??i2_start_i2c_slave_reply+1,w,c
  7220  000E1E  0D01               	mullw	1
  7221  000E20  0E0F               	movlw	15
  7222  000E22  26F3               	addwf	prodl,f,c
  7223  000E24  0E00               	movlw	0
  7224  000E26  22F4               	addwfc	prodh,f,c
  7225  000E28  50F3               	movf	prodl,w,c
  7226  000E2A  0100               	movlb	0	; () banked
  7227  000E2C  0100               	movlb	0	; () banked
  7228  000E2E  25CD               	addwf	_ic_ptr& (0+255),w,b
  7229  000E30  6EE1               	movwf	fsr1l,c
  7230  000E32  50F4               	movf	prodh,w,c
  7231  000E34  0100               	movlb	0	; () banked
  7232  000E36  0100               	movlb	0	; () banked
  7233  000E38  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7234  000E3A  6EE2               	movwf	fsr1h,c
  7235  000E3C  CFDF FFE7          	movff	indf2,indf1
  7236                           
  7237                           ; BSR set to: 0
  7238  000E40  0100               	movlb	0	; () banked
  7239  000E42  EE20 F019          	lfsr	2,25
  7240  000E46  0100               	movlb	0	; () banked
  7241  000E48  51CD               	movf	_ic_ptr& (0+255),w,b
  7242  000E4A  26D9               	addwf	fsr2l,f,c
  7243  000E4C  0100               	movlb	0	; () banked
  7244  000E4E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7245  000E50  22DA               	addwfc	fsr2h,f,c
  7246  000E52  2ADF               	incf	indf2,f,c
  7247  000E54                     i2l3141:
  7248                           
  7249                           ; BSR set to: 0
  7250  000E54  0100               	movlb	0	; () banked
  7251  000E56  EE20 F019          	lfsr	2,25
  7252  000E5A  0100               	movlb	0	; () banked
  7253  000E5C  51CD               	movf	_ic_ptr& (0+255),w,b
  7254  000E5E  26D9               	addwf	fsr2l,f,c
  7255  000E60  0100               	movlb	0	; () banked
  7256  000E62  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7257  000E64  22DA               	addwfc	fsr2h,f,c
  7258  000E66  50DF               	movf	indf2,w,c
  7259  000E68  6E2F               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  7260  000E6A  5031               	movf	i2start_i2c_slave_reply@length,w,c
  7261  000E6C  5C2F               	subwf	??i2_start_i2c_slave_reply,w,c
  7262  000E6E  A0D8               	btfss	status,0,c
  7263  000E70  D7B7               	goto	i2l3137
  7264                           
  7265                           ; BSR set to: 0
  7266                           ;my_i2c.c: 58: }
  7267                           ;my_i2c.c: 59: ic_ptr->outbuflen = length;
  7268                           
  7269                           ; BSR set to: 0
  7270  000E72  0100               	movlb	0	; () banked
  7271  000E74  EE20 F019          	lfsr	2,25
  7272  000E78  0100               	movlb	0	; () banked
  7273  000E7A  51CD               	movf	_ic_ptr& (0+255),w,b
  7274  000E7C  26D9               	addwf	fsr2l,f,c
  7275  000E7E  0100               	movlb	0	; () banked
  7276  000E80  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7277  000E82  22DA               	addwfc	fsr2h,f,c
  7278  000E84  C031  FFDF         	movff	i2start_i2c_slave_reply@length,indf2
  7279                           
  7280                           ;my_i2c.c: 60: ic_ptr->outbufind = 1;
  7281  000E88  0100               	movlb	0	; () banked
  7282  000E8A  EE20 F01A          	lfsr	2,26
  7283  000E8E  0100               	movlb	0	; () banked
  7284  000E90  51CD               	movf	_ic_ptr& (0+255),w,b
  7285  000E92  26D9               	addwf	fsr2l,f,c
  7286  000E94  0100               	movlb	0	; () banked
  7287  000E96  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7288  000E98  22DA               	addwfc	fsr2h,f,c
  7289  000E9A  0E01               	movlw	1
  7290  000E9C  6EDF               	movwf	indf2,c
  7291                           
  7292                           ;my_i2c.c: 63: SSPBUF = ic_ptr->outbuffer[0];
  7293  000E9E  0100               	movlb	0	; () banked
  7294  000EA0  EE20 F00F          	lfsr	2,15
  7295  000EA4  0100               	movlb	0	; () banked
  7296  000EA6  51CD               	movf	_ic_ptr& (0+255),w,b
  7297  000EA8  26D9               	addwf	fsr2l,f,c
  7298  000EAA  0100               	movlb	0	; () banked
  7299  000EAC  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7300  000EAE  22DA               	addwfc	fsr2h,f,c
  7301  000EB0  50DF               	movf	indf2,w,c
  7302  000EB2  6EC9               	movwf	4041,c	;volatile
  7303                           
  7304                           ; BSR set to: 0
  7305                           ;my_i2c.c: 66: SSPCON1bits.CKP = 1;
  7306  000EB4  88C6               	bsf	4038,4,c	;volatile
  7307                           
  7308                           ; BSR set to: 0
  7309  000EB6  0012               	return	
  7310  000EB8                     __end_ofi2_start_i2c_slave_reply:
  7311                           	opt stack 0
  7312                           pclatu	equ	0xFFB
  7313                           pclath	equ	0xFFA
  7314                           tblptru	equ	0xFF8
  7315                           tblptrh	equ	0xFF7
  7316                           tblptrl	equ	0xFF6
  7317                           tablat	equ	0xFF5
  7318                           prodh	equ	0xFF4
  7319                           prodl	equ	0xFF3
  7320                           intcon	equ	0xFF2
  7321                           intcon2	equ	0xFF1
  7322                           postinc0	equ	0xFEE
  7323                           fsr0h	equ	0xFEA
  7324                           fsr0l	equ	0xFE9
  7325                           wreg	equ	0xFE8
  7326                           indf1	equ	0xFE7
  7327                           postdec1	equ	0xFE5
  7328                           fsr1h	equ	0xFE2
  7329                           fsr1l	equ	0xFE1
  7330                           bsr	equ	0xFE0
  7331                           indf2	equ	0xFDF
  7332                           postinc2	equ	0xFDE
  7333                           postdec2	equ	0xFDD
  7334                           fsr2h	equ	0xFDA
  7335                           fsr2l	equ	0xFD9
  7336                           status	equ	0xFD8
  7337                           
  7338 ;; *************** function _returnADCValue *****************
  7339 ;; Defined at:
  7340 ;;		line 29 in file "../src/interrupts.c"
  7341 ;; Parameters:    Size  Location     Type
  7342 ;;		None
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;		None
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  1    wreg      unsigned char 
  7347 ;; Registers used:
  7348 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7349 ;; Tracked objects:
  7350 ;;		On entry : 0/0
  7351 ;;		On exit  : 0/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7354 ;;      Params:         0       0       0       0       0
  7355 ;;      Locals:         0       0       0       0       0
  7356 ;;      Temps:          0       0       0       0       0
  7357 ;;      Totals:         0       0       0       0       0
  7358 ;;Total ram usage:        0 bytes
  7359 ;; Hardware stack levels used:    1
  7360 ;; This function calls:
  7361 ;;		Nothing
  7362 ;; This function is called by:
  7363 ;;		_i2c_int_handler
  7364 ;; This function uses a non-reentrant model
  7365 ;;
  7366                           
  7367                           	psect	text41
  7368  001936                     __ptext41:
  7369                           	opt stack 0
  7370  001936                     _returnADCValue:
  7371                           	opt stack 18
  7372                           
  7373                           ;interrupts.c: 31: if(sendingPlaceHolder == 350)
  7374                           
  7375                           ; BSR set to: 0
  7376                           ;incstack = 0
  7377  001936  0452               	decf	_sendingPlaceHolder+1,w,c
  7378  001938  0E5E               	movlw	94
  7379  00193A  B4D8               	btfsc	status,2,c
  7380  00193C  1851               	xorwf	_sendingPlaceHolder,w,c
  7381  00193E  A4D8               	btfss	status,2,c
  7382  001940  D009               	goto	i2l3091
  7383                           
  7384                           ;interrupts.c: 32: {
  7385                           ;interrupts.c: 33: responding = 0;
  7386  001942  0E00               	movlw	0
  7387  001944  6E4C               	movwf	_responding+1,c
  7388  001946  0E00               	movlw	0
  7389  001948  6E4B               	movwf	_responding,c
  7390                           
  7391                           ;interrupts.c: 34: sendingPlaceHolder = 0;
  7392  00194A  0E00               	movlw	0
  7393  00194C  6E52               	movwf	_sendingPlaceHolder+1,c
  7394  00194E  0E00               	movlw	0
  7395  001950  6E51               	movwf	_sendingPlaceHolder,c
  7396                           
  7397                           ;interrupts.c: 35: }
  7398  001952  D002               	goto	i2l3093
  7399  001954                     i2l3091:
  7400                           
  7401                           ;interrupts.c: 36: else
  7402                           ;interrupts.c: 37: sendingPlaceHolder++;
  7403  001954  4A51               	infsnz	_sendingPlaceHolder,f,c
  7404  001956  2A52               	incf	_sendingPlaceHolder+1,f,c
  7405  001958                     i2l3093:
  7406                           
  7407                           ;interrupts.c: 38: return ADCArray[sendingPlaceHolder];
  7408  001958  0E36               	movlw	low _ADCArray
  7409  00195A  2451               	addwf	_sendingPlaceHolder,w,c
  7410  00195C  6ED9               	movwf	fsr2l,c
  7411  00195E  0E02               	movlw	high _ADCArray
  7412  001960  2052               	addwfc	_sendingPlaceHolder+1,w,c
  7413  001962  6EDA               	movwf	fsr2h,c
  7414  001964  50DF               	movf	indf2,w,c
  7415  001966  0012               	return	
  7416  001968                     __end_of_returnADCValue:
  7417                           	opt stack 0
  7418                           pclatu	equ	0xFFB
  7419                           pclath	equ	0xFFA
  7420                           tblptru	equ	0xFF8
  7421                           tblptrh	equ	0xFF7
  7422                           tblptrl	equ	0xFF6
  7423                           tablat	equ	0xFF5
  7424                           prodh	equ	0xFF4
  7425                           prodl	equ	0xFF3
  7426                           intcon	equ	0xFF2
  7427                           intcon2	equ	0xFF1
  7428                           postinc0	equ	0xFEE
  7429                           fsr0h	equ	0xFEA
  7430                           fsr0l	equ	0xFE9
  7431                           wreg	equ	0xFE8
  7432                           indf1	equ	0xFE7
  7433                           postdec1	equ	0xFE5
  7434                           fsr1h	equ	0xFE2
  7435                           fsr1l	equ	0xFE1
  7436                           bsr	equ	0xFE0
  7437                           indf2	equ	0xFDF
  7438                           postinc2	equ	0xFDE
  7439                           postdec2	equ	0xFDD
  7440                           fsr2h	equ	0xFDA
  7441                           fsr2l	equ	0xFD9
  7442                           status	equ	0xFD8
  7443                           
  7444 ;; *************** function _handle_start *****************
  7445 ;; Defined at:
  7446 ;;		line 72 in file "../src/my_i2c.c"
  7447 ;; Parameters:    Size  Location     Type
  7448 ;;  data_read       1    wreg     unsigned char 
  7449 ;; Auto vars:     Size  Location     Type
  7450 ;;  data_read       1   44[COMRAM] unsigned char 
  7451 ;; Return value:  Size  Location     Type
  7452 ;;		None               void
  7453 ;; Registers used:
  7454 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7455 ;; Tracked objects:
  7456 ;;		On entry : 0/0
  7457 ;;		On exit  : 0/0
  7458 ;;		Unchanged: 0/0
  7459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7460 ;;      Params:         0       0       0       0       0
  7461 ;;      Locals:         1       0       0       0       0
  7462 ;;      Temps:          0       0       0       0       0
  7463 ;;      Totals:         1       0       0       0       0
  7464 ;;Total ram usage:        1 bytes
  7465 ;; Hardware stack levels used:    1
  7466 ;; This function calls:
  7467 ;;		Nothing
  7468 ;; This function is called by:
  7469 ;;		_i2c_int_handler
  7470 ;; This function uses a non-reentrant model
  7471 ;;
  7472                           
  7473                           	psect	text42
  7474  000EB8                     __ptext42:
  7475                           	opt stack 0
  7476  000EB8                     _handle_start:
  7477                           	opt stack 18
  7478                           
  7479                           ;incstack = 0
  7480                           ;handle_start@data_read stored from wreg
  7481  000EB8  CFE8 F02D          	movff	wreg,handle_start@data_read
  7482                           
  7483                           ;my_i2c.c: 73: ic_ptr->event_count = 1;
  7484  000EBC  0100               	movlb	0	; () banked
  7485  000EBE  EE20 F00B          	lfsr	2,11
  7486  000EC2  0100               	movlb	0	; () banked
  7487  000EC4  51CD               	movf	_ic_ptr& (0+255),w,b
  7488  000EC6  26D9               	addwf	fsr2l,f,c
  7489  000EC8  0100               	movlb	0	; () banked
  7490  000ECA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7491  000ECC  22DA               	addwfc	fsr2h,f,c
  7492  000ECE  0E01               	movlw	1
  7493  000ED0  6EDF               	movwf	indf2,c
  7494                           
  7495                           ;my_i2c.c: 74: ic_ptr->buflen = 0;
  7496  000ED2  0100               	movlb	0	; () banked
  7497  000ED4  EE20 F00A          	lfsr	2,10
  7498  000ED8  0100               	movlb	0	; () banked
  7499  000EDA  51CD               	movf	_ic_ptr& (0+255),w,b
  7500  000EDC  26D9               	addwf	fsr2l,f,c
  7501  000EDE  0100               	movlb	0	; () banked
  7502  000EE0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7503  000EE2  22DA               	addwfc	fsr2h,f,c
  7504  000EE4  0E00               	movlw	0
  7505  000EE6  6EDF               	movwf	indf2,c
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;my_i2c.c: 76: if (data_read) {
  7509  000EE8  502D               	movf	handle_start@data_read,w,c
  7510  000EEA  B4D8               	btfsc	status,2,c
  7511  000EEC  D03D               	goto	i2l2939
  7512                           
  7513                           ; BSR set to: 0
  7514                           ;my_i2c.c: 77: if (SSPSTATbits.D_A == 1) {
  7515  000EEE  AAC7               	btfss	4039,5,c	;volatile
  7516  000EF0  D021               	goto	i2l111
  7517                           
  7518                           ; BSR set to: 0
  7519                           ;my_i2c.c: 80: ic_ptr->status = 0x5;
  7520  000EF2  0100               	movlb	0	; () banked
  7521  000EF4  EE20 F00C          	lfsr	2,12
  7522  000EF8  0100               	movlb	0	; () banked
  7523  000EFA  51CD               	movf	_ic_ptr& (0+255),w,b
  7524  000EFC  26D9               	addwf	fsr2l,f,c
  7525  000EFE  0100               	movlb	0	; () banked
  7526  000F00  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7527  000F02  22DA               	addwfc	fsr2h,f,c
  7528  000F04  0E05               	movlw	5
  7529  000F06  6EDF               	movwf	indf2,c
  7530                           
  7531                           ;my_i2c.c: 81: ic_ptr->error_count++;
  7532  000F08  0100               	movlb	0	; () banked
  7533  000F0A  EE20 F00E          	lfsr	2,14
  7534  000F0E  0100               	movlb	0	; () banked
  7535  000F10  51CD               	movf	_ic_ptr& (0+255),w,b
  7536  000F12  26D9               	addwf	fsr2l,f,c
  7537  000F14  0100               	movlb	0	; () banked
  7538  000F16  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7539  000F18  22DA               	addwfc	fsr2h,f,c
  7540  000F1A  2ADF               	incf	indf2,f,c
  7541                           
  7542                           ;my_i2c.c: 82: ic_ptr->error_code = 0x5;
  7543  000F1C  0100               	movlb	0	; () banked
  7544  000F1E  EE20 F00D          	lfsr	2,13
  7545  000F22  0100               	movlb	0	; () banked
  7546  000F24  51CD               	movf	_ic_ptr& (0+255),w,b
  7547  000F26  26D9               	addwf	fsr2l,f,c
  7548  000F28  0100               	movlb	0	; () banked
  7549  000F2A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7550  000F2C  22DA               	addwfc	fsr2h,f,c
  7551  000F2E  0E05               	movlw	5
  7552  000F30  6EDF               	movwf	indf2,c
  7553                           
  7554                           ;my_i2c.c: 83: } else {
  7555  000F32  0012               	return	
  7556  000F34                     i2l111:
  7557                           
  7558                           ; BSR set to: 0
  7559                           ;my_i2c.c: 84: if (SSPSTATbits.R_W == 1) {
  7560  000F34  A4C7               	btfss	4039,2,c	;volatile
  7561  000F36  D00C               	goto	i2l2937
  7562                           
  7563                           ; BSR set to: 0
  7564                           ;my_i2c.c: 85: ic_ptr->status = 0x8;
  7565  000F38  0100               	movlb	0	; () banked
  7566  000F3A  EE20 F00C          	lfsr	2,12
  7567  000F3E  0100               	movlb	0	; () banked
  7568  000F40  51CD               	movf	_ic_ptr& (0+255),w,b
  7569  000F42  26D9               	addwf	fsr2l,f,c
  7570  000F44  0100               	movlb	0	; () banked
  7571  000F46  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7572  000F48  22DA               	addwfc	fsr2h,f,c
  7573  000F4A  0E08               	movlw	8
  7574  000F4C  6EDF               	movwf	indf2,c
  7575                           
  7576                           ;my_i2c.c: 86: } else {
  7577  000F4E  0012               	return	
  7578  000F50                     i2l2937:
  7579                           
  7580                           ; BSR set to: 0
  7581                           ;my_i2c.c: 87: ic_ptr->status = 0x7;
  7582  000F50  0100               	movlb	0	; () banked
  7583  000F52  EE20 F00C          	lfsr	2,12
  7584  000F56  0100               	movlb	0	; () banked
  7585  000F58  51CD               	movf	_ic_ptr& (0+255),w,b
  7586  000F5A  26D9               	addwf	fsr2l,f,c
  7587  000F5C  0100               	movlb	0	; () banked
  7588  000F5E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7589  000F60  22DA               	addwfc	fsr2h,f,c
  7590  000F62  0E07               	movlw	7
  7591  000F64  6EDF               	movwf	indf2,c
  7592  000F66  0012               	return	
  7593  000F68                     i2l2939:
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;my_i2c.c: 91: ic_ptr->status = 0x6;
  7597  000F68  0100               	movlb	0	; () banked
  7598  000F6A  EE20 F00C          	lfsr	2,12
  7599  000F6E  0100               	movlb	0	; () banked
  7600  000F70  51CD               	movf	_ic_ptr& (0+255),w,b
  7601  000F72  26D9               	addwf	fsr2l,f,c
  7602  000F74  0100               	movlb	0	; () banked
  7603  000F76  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7604  000F78  22DA               	addwfc	fsr2h,f,c
  7605  000F7A  0E06               	movlw	6
  7606  000F7C  6EDF               	movwf	indf2,c
  7607  000F7E  0012               	return	
  7608  000F80                     __end_of_handle_start:
  7609                           	opt stack 0
  7610                           pclatu	equ	0xFFB
  7611                           pclath	equ	0xFFA
  7612                           tblptru	equ	0xFF8
  7613                           tblptrh	equ	0xFF7
  7614                           tblptrl	equ	0xFF6
  7615                           tablat	equ	0xFF5
  7616                           prodh	equ	0xFF4
  7617                           prodl	equ	0xFF3
  7618                           intcon	equ	0xFF2
  7619                           intcon2	equ	0xFF1
  7620                           postinc0	equ	0xFEE
  7621                           fsr0h	equ	0xFEA
  7622                           fsr0l	equ	0xFE9
  7623                           wreg	equ	0xFE8
  7624                           indf1	equ	0xFE7
  7625                           postdec1	equ	0xFE5
  7626                           fsr1h	equ	0xFE2
  7627                           fsr1l	equ	0xFE1
  7628                           bsr	equ	0xFE0
  7629                           indf2	equ	0xFDF
  7630                           postinc2	equ	0xFDE
  7631                           postdec2	equ	0xFDD
  7632                           fsr2h	equ	0xFDA
  7633                           fsr2l	equ	0xFD9
  7634                           status	equ	0xFD8
  7635                           
  7636 ;; *************** function _ToMainHigh_sendmsg *****************
  7637 ;; Defined at:
  7638 ;;		line 126 in file "../src/messages.c"
  7639 ;; Parameters:    Size  Location     Type
  7640 ;;  length          1    wreg     unsigned char 
  7641 ;;  msgtype         1   66[COMRAM] unsigned char 
  7642 ;;  data            2   67[COMRAM] PTR void 
  7643 ;;		 -> main@ic(28), i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  7644 ;; Auto vars:     Size  Location     Type
  7645 ;;  length          1   69[COMRAM] unsigned char 
  7646 ;; Return value:  Size  Location     Type
  7647 ;;                  1    wreg      char 
  7648 ;; Registers used:
  7649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7650 ;; Tracked objects:
  7651 ;;		On entry : 0/0
  7652 ;;		On exit  : 0/0
  7653 ;;		Unchanged: 0/0
  7654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7655 ;;      Params:         3       0       0       0       0
  7656 ;;      Locals:         1       0       0       0       0
  7657 ;;      Temps:          0       0       0       0       0
  7658 ;;      Totals:         4       0       0       0       0
  7659 ;;Total ram usage:        4 bytes
  7660 ;; Hardware stack levels used:    1
  7661 ;; Hardware stack levels required when called:    2
  7662 ;; This function calls:
  7663 ;;		i2_send_msg
  7664 ;; This function is called by:
  7665 ;;		_i2c_int_handler
  7666 ;;		_timer0_int_handler
  7667 ;; This function uses a non-reentrant model
  7668 ;;
  7669                           
  7670                           	psect	text43
  7671  0019E0                     __ptext43:
  7672                           	opt stack 0
  7673  0019E0                     _ToMainHigh_sendmsg:
  7674                           	opt stack 16
  7675                           
  7676                           ; BSR set to: 0
  7677                           ;incstack = 0
  7678                           ;ToMainHigh_sendmsg@length stored from wreg
  7679  0019E0  CFE8 F046          	movff	wreg,ToMainHigh_sendmsg@length
  7680                           
  7681                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7682                           ;	Return value of _ToMainHigh_sendmsg is never used
  7683  0019E4  0101               	movlb	1	; () banked
  7684  0019E6  0E01               	movlw	high _ToMainHigh_MQ
  7685  0019E8  6E38               	movwf	i2send_msg@qptr+1,c
  7686  0019EA  0101               	movlb	1	; () banked
  7687  0019EC  0E36               	movlw	low _ToMainHigh_MQ
  7688  0019EE  6E37               	movwf	i2send_msg@qptr,c
  7689  0019F0  C046  F039         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  7690  0019F4  C043  F03A         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7691  0019F8  C045  F03C         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7692  0019FC  C044  F03B         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  7693  001A00  EC6E  F008         	call	i2_send_msg	;wreg free
  7694  001A04  0012               	return	
  7695  001A06                     __end_of_ToMainHigh_sendmsg:
  7696                           	opt stack 0
  7697                           pclatu	equ	0xFFB
  7698                           pclath	equ	0xFFA
  7699                           tblptru	equ	0xFF8
  7700                           tblptrh	equ	0xFF7
  7701                           tblptrl	equ	0xFF6
  7702                           tablat	equ	0xFF5
  7703                           prodh	equ	0xFF4
  7704                           prodl	equ	0xFF3
  7705                           intcon	equ	0xFF2
  7706                           intcon2	equ	0xFF1
  7707                           postinc0	equ	0xFEE
  7708                           fsr0h	equ	0xFEA
  7709                           fsr0l	equ	0xFE9
  7710                           wreg	equ	0xFE8
  7711                           indf1	equ	0xFE7
  7712                           postdec1	equ	0xFE5
  7713                           fsr1h	equ	0xFE2
  7714                           fsr1l	equ	0xFE1
  7715                           bsr	equ	0xFE0
  7716                           indf2	equ	0xFDF
  7717                           postinc2	equ	0xFDE
  7718                           postdec2	equ	0xFDD
  7719                           fsr2h	equ	0xFDA
  7720                           fsr2l	equ	0xFD9
  7721                           status	equ	0xFD8
  7722                           
  7723 ;; *************** function i2_send_msg *****************
  7724 ;; Defined at:
  7725 ;;		line 24 in file "../src/messages.c"
  7726 ;; Parameters:    Size  Location     Type
  7727 ;;  qptr            2   54[COMRAM] PTR struct __msg_queue
  7728 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7729 ;;  length          1   56[COMRAM] unsigned char 
  7730 ;;  msgtype         1   57[COMRAM] unsigned char 
  7731 ;;  data            2   58[COMRAM] PTR void 
  7732 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  7733 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  7734 ;; Auto vars:     Size  Location     Type
  7735 ;;  send_msg        2   64[COMRAM] PTR struct __msg
  7736 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7737 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7738 ;;  send_msg        2   61[COMRAM] unsigned int 
  7739 ;;  send_msg        1   63[COMRAM] unsigned char 
  7740 ;; Return value:  Size  Location     Type
  7741 ;;                  1    wreg      char 
  7742 ;; Registers used:
  7743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7744 ;; Tracked objects:
  7745 ;;		On entry : 0/0
  7746 ;;		On exit  : 0/0
  7747 ;;		Unchanged: 0/0
  7748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7749 ;;      Params:         6       0       0       0       0
  7750 ;;      Locals:         5       0       0       0       0
  7751 ;;      Temps:          1       0       0       0       0
  7752 ;;      Totals:        12       0       0       0       0
  7753 ;;Total ram usage:       12 bytes
  7754 ;; Hardware stack levels used:    1
  7755 ;; Hardware stack levels required when called:    1
  7756 ;; This function calls:
  7757 ;;		i2_memcpy
  7758 ;; This function is called by:
  7759 ;;		_ToMainHigh_sendmsg
  7760 ;; This function uses a non-reentrant model
  7761 ;;
  7762                           
  7763                           	psect	text44
  7764  0010DC                     __ptext44:
  7765                           	opt stack 0
  7766  0010DC                     i2_send_msg:
  7767                           	opt stack 16
  7768                           
  7769                           ;messages.c: 25: unsigned char slot;
  7770                           ;messages.c: 27: msg *qmsg;
  7771                           ;messages.c: 28: size_t tlength = length;
  7772                           
  7773                           ;incstack = 0
  7774  0010DC  C039  F03E         	movff	i2send_msg@length,i2send_msg@tlength
  7775  0010E0  6A3F               	clrf	i2send_msg@tlength+1,c
  7776                           
  7777                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7778  0010E2  EE20 F034          	lfsr	2,52
  7779  0010E6  5037               	movf	i2send_msg@qptr,w,c
  7780  0010E8  26D9               	addwf	fsr2l,f,c
  7781  0010EA  5038               	movf	i2send_msg@qptr+1,w,c
  7782  0010EC  22DA               	addwfc	fsr2h,f,c
  7783  0010EE  50DF               	movf	indf2,w,c
  7784  0010F0  6E40               	movwf	i2send_msg@slot,c
  7785                           
  7786                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7787  0010F2  5040               	movf	i2send_msg@slot,w,c
  7788  0010F4  0D0D               	mullw	13
  7789  0010F6  50F3               	movf	prodl,w,c
  7790  0010F8  2437               	addwf	i2send_msg@qptr,w,c
  7791  0010FA  6E41               	movwf	i2send_msg@qmsg,c
  7792  0010FC  50F4               	movf	prodh,w,c
  7793  0010FE  2038               	addwfc	i2send_msg@qptr+1,w,c
  7794  001100  6E42               	movwf	i2send_msg@qmsg+1,c
  7795                           
  7796                           ;messages.c: 41: if (qmsg->full != 0) {
  7797  001102  C041  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7798  001106  C042  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7799  00110A  50DF               	movf	indf2,w,c
  7800  00110C  B4D8               	btfsc	status,2,c
  7801  00110E  D002               	goto	i2l3159
  7802                           
  7803                           ;messages.c: 42: return (-1);
  7804  001110  0EFF               	movlw	255
  7805  001112  0012               	return	
  7806  001114                     i2l3159:
  7807                           
  7808                           ;messages.c: 43: }
  7809                           ;messages.c: 46: qmsg->length = length;
  7810  001114  EE20 F001          	lfsr	2,1
  7811  001118  5041               	movf	i2send_msg@qmsg,w,c
  7812  00111A  26D9               	addwf	fsr2l,f,c
  7813  00111C  5042               	movf	i2send_msg@qmsg+1,w,c
  7814  00111E  22DA               	addwfc	fsr2h,f,c
  7815  001120  C039  FFDF         	movff	i2send_msg@length,indf2
  7816                           
  7817                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7818  001124  EE20 F002          	lfsr	2,2
  7819  001128  5041               	movf	i2send_msg@qmsg,w,c
  7820  00112A  26D9               	addwf	fsr2l,f,c
  7821  00112C  5042               	movf	i2send_msg@qmsg+1,w,c
  7822  00112E  22DA               	addwfc	fsr2h,f,c
  7823  001130  C03A  FFDF         	movff	i2send_msg@msgtype,indf2
  7824                           
  7825                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7826  001134  0E03               	movlw	3
  7827  001136  2441               	addwf	i2send_msg@qmsg,w,c
  7828  001138  6E2D               	movwf	i2memcpy@d1,c
  7829  00113A  0E00               	movlw	0
  7830  00113C  2042               	addwfc	i2send_msg@qmsg+1,w,c
  7831  00113E  6E2E               	movwf	i2memcpy@d1+1,c
  7832  001140  C03C  F030         	movff	i2send_msg@data+1,i2memcpy@s1+1
  7833  001144  C03B  F02F         	movff	i2send_msg@data,i2memcpy@s1
  7834  001148  C03E  F031         	movff	i2send_msg@tlength,i2memcpy@n
  7835  00114C  C03F  F032         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  7836  001150  EC26  F00C         	call	i2_memcpy	;wreg free
  7837                           
  7838                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7839  001154  EE20 F034          	lfsr	2,52
  7840  001158  5037               	movf	i2send_msg@qptr,w,c
  7841  00115A  26D9               	addwf	fsr2l,f,c
  7842  00115C  5038               	movf	i2send_msg@qptr+1,w,c
  7843  00115E  22DA               	addwfc	fsr2h,f,c
  7844  001160  EE10 F034          	lfsr	1,52
  7845  001164  5037               	movf	i2send_msg@qptr,w,c
  7846  001166  26E1               	addwf	fsr1l,f,c
  7847  001168  5038               	movf	i2send_msg@qptr+1,w,c
  7848  00116A  22E2               	addwfc	fsr1h,f,c
  7849  00116C  50E7               	movf	indf1,w,c
  7850  00116E  6E3D               	movwf	??i2_send_msg& (0+255),c
  7851  001170  283D               	incf	??i2_send_msg,w,c
  7852  001172  0B03               	andlw	3
  7853  001174  6EDF               	movwf	indf2,c
  7854                           
  7855                           ;messages.c: 59: qmsg->full = 1;
  7856  001176  C041  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7857  00117A  C042  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7858  00117E  0E01               	movlw	1
  7859  001180  6EDF               	movwf	indf2,c
  7860                           
  7861                           ;messages.c: 60: return (1);
  7862  001182  0E01               	movlw	1
  7863  001184  0012               	return	
  7864  001186                     __end_ofi2_send_msg:
  7865                           	opt stack 0
  7866                           pclatu	equ	0xFFB
  7867                           pclath	equ	0xFFA
  7868                           tblptru	equ	0xFF8
  7869                           tblptrh	equ	0xFF7
  7870                           tblptrl	equ	0xFF6
  7871                           tablat	equ	0xFF5
  7872                           prodh	equ	0xFF4
  7873                           prodl	equ	0xFF3
  7874                           intcon	equ	0xFF2
  7875                           intcon2	equ	0xFF1
  7876                           postinc0	equ	0xFEE
  7877                           fsr0h	equ	0xFEA
  7878                           fsr0l	equ	0xFE9
  7879                           wreg	equ	0xFE8
  7880                           indf1	equ	0xFE7
  7881                           postdec1	equ	0xFE5
  7882                           fsr1h	equ	0xFE2
  7883                           fsr1l	equ	0xFE1
  7884                           bsr	equ	0xFE0
  7885                           indf2	equ	0xFDF
  7886                           postinc2	equ	0xFDE
  7887                           postdec2	equ	0xFDD
  7888                           fsr2h	equ	0xFDA
  7889                           fsr2l	equ	0xFD9
  7890                           status	equ	0xFD8
  7891                           
  7892 ;; *************** function i2_memcpy *****************
  7893 ;; Defined at:
  7894 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  7895 ;; Parameters:    Size  Location     Type
  7896 ;;  d1              2   44[COMRAM] PTR void 
  7897 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7898 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7899 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  7900 ;;  s1              2   46[COMRAM] PTR const void 
  7901 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7902 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7903 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  7904 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7905 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  7906 ;;  n               2   48[COMRAM] unsigned int 
  7907 ;; Auto vars:     Size  Location     Type
  7908 ;;  memcpy          2   52[COMRAM] PTR const unsigned char 
  7909 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7910 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7911 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  7912 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7913 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  7914 ;;  memcpy          2   50[COMRAM] PTR unsigned char 
  7915 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7916 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7917 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  7918 ;; Return value:  Size  Location     Type
  7919 ;;                  2   44[COMRAM] PTR void 
  7920 ;; Registers used:
  7921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7922 ;; Tracked objects:
  7923 ;;		On entry : 0/0
  7924 ;;		On exit  : 0/0
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7927 ;;      Params:         6       0       0       0       0
  7928 ;;      Locals:         4       0       0       0       0
  7929 ;;      Temps:          0       0       0       0       0
  7930 ;;      Totals:        10       0       0       0       0
  7931 ;;Total ram usage:       10 bytes
  7932 ;; Hardware stack levels used:    1
  7933 ;; This function calls:
  7934 ;;		Nothing
  7935 ;; This function is called by:
  7936 ;;		i2_send_msg
  7937 ;; This function uses a non-reentrant model
  7938 ;;
  7939                           
  7940                           	psect	text45
  7941  00184C                     __ptext45:
  7942                           	opt stack 0
  7943  00184C                     i2_memcpy:
  7944                           	opt stack 16
  7945                           
  7946                           ;incstack = 0
  7947  00184C  C030  F036         	movff	i2memcpy@s1+1,i2memcpy@s+1
  7948  001850  C02F  F035         	movff	i2memcpy@s1,i2memcpy@s
  7949  001854  C02E  F034         	movff	i2memcpy@d1+1,i2memcpy@d+1
  7950  001858  C02D  F033         	movff	i2memcpy@d1,i2memcpy@d
  7951  00185C  D00E               	goto	i2l3181
  7952  00185E                     i2l3175:
  7953  00185E  C035  FFD9         	movff	i2memcpy@s,fsr2l
  7954  001862  C036  FFDA         	movff	i2memcpy@s+1,fsr2h
  7955  001866  C033  FFE1         	movff	i2memcpy@d,fsr1l
  7956  00186A  C034  FFE2         	movff	i2memcpy@d+1,fsr1h
  7957  00186E  CFDF FFE7          	movff	indf2,indf1
  7958  001872  4A35               	infsnz	i2memcpy@s,f,c
  7959  001874  2A36               	incf	i2memcpy@s+1,f,c
  7960  001876  4A33               	infsnz	i2memcpy@d,f,c
  7961  001878  2A34               	incf	i2memcpy@d+1,f,c
  7962  00187A                     i2l3181:
  7963  00187A  0631               	decf	i2memcpy@n,f,c
  7964  00187C  A0D8               	btfss	status,0,c
  7965  00187E  0632               	decf	i2memcpy@n+1,f,c
  7966  001880  2831               	incf	i2memcpy@n& (0+255),w,c
  7967  001882  B4D8               	btfsc	status,2,c
  7968  001884  2832               	incf	(i2memcpy@n+1)& (0+255),w,c
  7969  001886  B4D8               	btfsc	status,2,c
  7970                           
  7971                           ;	Return value of i2_memcpy is never used
  7972  001888  0012               	return	
  7973  00188A  D7E9               	goto	i2l3175
  7974  00188C                     __end_ofi2_memcpy:
  7975                           	opt stack 0
  7976                           pclatu	equ	0xFFB
  7977                           pclath	equ	0xFFA
  7978                           tblptru	equ	0xFF8
  7979                           tblptrh	equ	0xFF7
  7980                           tblptrl	equ	0xFF6
  7981                           tablat	equ	0xFF5
  7982                           prodh	equ	0xFF4
  7983                           prodl	equ	0xFF3
  7984                           intcon	equ	0xFF2
  7985                           intcon2	equ	0xFF1
  7986                           postinc0	equ	0xFEE
  7987                           fsr0h	equ	0xFEA
  7988                           fsr0l	equ	0xFE9
  7989                           wreg	equ	0xFE8
  7990                           indf1	equ	0xFE7
  7991                           postdec1	equ	0xFE5
  7992                           fsr1h	equ	0xFE2
  7993                           fsr1l	equ	0xFE1
  7994                           bsr	equ	0xFE0
  7995                           indf2	equ	0xFDF
  7996                           postinc2	equ	0xFDE
  7997                           postdec2	equ	0xFDD
  7998                           fsr2h	equ	0xFDA
  7999                           fsr2l	equ	0xFD9
  8000                           status	equ	0xFD8
  8001                           
  8002 ;; *************** function _ReadADC *****************
  8003 ;; Defined at:
  8004 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcread.c"
  8005 ;; Parameters:    Size  Location     Type
  8006 ;;		None
  8007 ;; Auto vars:     Size  Location     Type
  8008 ;;		None
  8009 ;; Return value:  Size  Location     Type
  8010 ;;                  2   44[COMRAM] int 
  8011 ;; Registers used:
  8012 ;;		wreg, status,2
  8013 ;; Tracked objects:
  8014 ;;		On entry : 0/0
  8015 ;;		On exit  : 0/0
  8016 ;;		Unchanged: 0/0
  8017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8018 ;;      Params:         2       0       0       0       0
  8019 ;;      Locals:         0       0       0       0       0
  8020 ;;      Temps:          0       0       0       0       0
  8021 ;;      Totals:         2       0       0       0       0
  8022 ;;Total ram usage:        2 bytes
  8023 ;; Hardware stack levels used:    1
  8024 ;; This function calls:
  8025 ;;		Nothing
  8026 ;; This function is called by:
  8027 ;;		_InterruptHandlerHigh
  8028 ;; This function uses a non-reentrant model
  8029 ;;
  8030                           
  8031                           	psect	text46
  8032  001A9A                     __ptext46:
  8033                           	opt stack 0
  8034  001A9A                     _ReadADC:
  8035                           	opt stack 19
  8036                           
  8037                           ;incstack = 0
  8038  001A9A  50C4               	movf	4036,w,c	;volatile
  8039  001A9C  6E2E               	movwf	?_ReadADC+1,c
  8040  001A9E  50C3               	movf	4035,w,c	;volatile
  8041  001AA0  6E2D               	movwf	?_ReadADC,c
  8042  001AA2  0012               	return	
  8043  001AA4                     __end_of_ReadADC:
  8044                           	opt stack 0
  8045  0000                     pclatu	equ	0xFFB
  8046                           pclath	equ	0xFFA
  8047                           tblptru	equ	0xFF8
  8048                           tblptrh	equ	0xFF7
  8049                           tblptrl	equ	0xFF6
  8050                           tablat	equ	0xFF5
  8051                           prodh	equ	0xFF4
  8052                           prodl	equ	0xFF3
  8053                           intcon	equ	0xFF2
  8054                           intcon2	equ	0xFF1
  8055                           postinc0	equ	0xFEE
  8056                           fsr0h	equ	0xFEA
  8057                           fsr0l	equ	0xFE9
  8058                           wreg	equ	0xFE8
  8059                           indf1	equ	0xFE7
  8060                           postdec1	equ	0xFE5
  8061                           fsr1h	equ	0xFE2
  8062                           fsr1l	equ	0xFE1
  8063                           bsr	equ	0xFE0
  8064                           indf2	equ	0xFDF
  8065                           postinc2	equ	0xFDE
  8066                           postdec2	equ	0xFDD
  8067                           fsr2h	equ	0xFDA
  8068                           fsr2l	equ	0xFD9
  8069                           status	equ	0xFD8
  8070                           pclatu	equ	0xFFB
  8071                           pclath	equ	0xFFA
  8072                           tblptru	equ	0xFF8
  8073                           tblptrh	equ	0xFF7
  8074                           tblptrl	equ	0xFF6
  8075                           tablat	equ	0xFF5
  8076                           prodh	equ	0xFF4
  8077                           prodl	equ	0xFF3
  8078                           intcon	equ	0xFF2
  8079                           intcon2	equ	0xFF1
  8080                           postinc0	equ	0xFEE
  8081                           fsr0h	equ	0xFEA
  8082                           fsr0l	equ	0xFE9
  8083                           wreg	equ	0xFE8
  8084                           indf1	equ	0xFE7
  8085                           postdec1	equ	0xFE5
  8086                           fsr1h	equ	0xFE2
  8087                           fsr1l	equ	0xFE1
  8088                           bsr	equ	0xFE0
  8089                           indf2	equ	0xFDF
  8090                           postinc2	equ	0xFDE
  8091                           postdec2	equ	0xFDD
  8092                           fsr2h	equ	0xFDA
  8093                           fsr2l	equ	0xFD9
  8094                           status	equ	0xFD8
  8095                           
  8096                           	psect	rparam
  8097  0000                     pclatu	equ	0xFFB
  8098                           pclath	equ	0xFFA
  8099                           tblptru	equ	0xFF8
  8100                           tblptrh	equ	0xFF7
  8101                           tblptrl	equ	0xFF6
  8102                           tablat	equ	0xFF5
  8103                           prodh	equ	0xFF4
  8104                           prodl	equ	0xFF3
  8105                           intcon	equ	0xFF2
  8106                           intcon2	equ	0xFF1
  8107                           postinc0	equ	0xFEE
  8108                           fsr0h	equ	0xFEA
  8109                           fsr0l	equ	0xFE9
  8110                           wreg	equ	0xFE8
  8111                           indf1	equ	0xFE7
  8112                           postdec1	equ	0xFE5
  8113                           fsr1h	equ	0xFE2
  8114                           fsr1l	equ	0xFE1
  8115                           bsr	equ	0xFE0
  8116                           indf2	equ	0xFDF
  8117                           postinc2	equ	0xFDE
  8118                           postdec2	equ	0xFDD
  8119                           fsr2h	equ	0xFDA
  8120                           fsr2l	equ	0xFD9
  8121                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         573
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     72      82
    BANK0           128     77      80
    BANK1           256     53     215
    BANK2           256      0      54
    BANK3           256      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK1[11]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), timer0_int_handler@val(COMRAM[2]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK1[11]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), timer0_int_handler@val(COMRAM[2]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> main@t0thread_data(BANK1[2]), main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[5]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), NULL(NULL[0]), timer0_int_handler@val(COMRAM[2]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> main@t0thread_data(BANK1[2]), main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[5]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), NULL(NULL[0]), timer0_int_handler@val(COMRAM[2]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> main@ic(BANK1[28]), i2c_int_handler@error_buf(BANK0[3]), NULL(NULL[0]), timer0_int_handler@val(COMRAM[2]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> main@uc(BANK1[5]), NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> main@msgtype(BANK1[1]), timer0_int_handler@msgtype(COMRAM[2]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), timer0_int_handler@val(COMRAM[2]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK1[11]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), timer0_int_handler@val(COMRAM[2]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> main@t0thread_data(BANK1[2]), main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[5]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), NULL(NULL[0]), timer0_int_handler@val(COMRAM[2]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), i2c_int_handler@msgbuffer(BANK0[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), NULL(NULL[0]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), NULL(NULL[0]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    init_timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_i2c_int_handler
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_timer0_lthread
    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _timer0_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _initADC->_OpenADC
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0   12394
                                             76 BANK0      1     1      0
                                              0 BANK1     53    53      0
                         _OpenTimer0
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                            _initADC
                           _init_i2c
                        _init_queues
                _init_timer0_lthread
                _init_timer1_lthread
                     _init_uart_recv
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     344
                                             40 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    2583
                                             66 BANK0     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8    2583
                                             66 BANK0     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     263
                                             40 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    1975
                                             62 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1653
                                             50 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     168
                                             40 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      86
                                             40 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      86
                                             40 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer0_lthread                                  2     0      2      86
                                             40 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     390
                                             44 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     390
                                             40 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                             40 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initADC                                              4     4      0     283
                                             45 BANK0      4     4      0
                         _ConvertADC
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             40 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             40 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     322
                                             46 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             44 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             42 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             40 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     300
                                             40 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             40 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2077
                                             64 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2077
                                             64 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1883
                                             50 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     504
                                             40 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     284
                                             40 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             40 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    2416
                                             27 COMRAM    17    17      0
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    2416
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2393
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    1943
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               18    18      0    3945
                                             22 BANK0     18    18      0
                            _ReadADC
                    _i2c_int_handler
                       i2_ConvertADC
 ---------------------------------------------------------------------------------
 (11) i2_ConvertADC                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    24    24      0    3911
                                             70 COMRAM     2     2      0
                                              0 BANK0     22    22      0
                 _ToMainHigh_sendmsg
                       _handle_start
                     _returnADCValue
            i2_start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (12) i2_start_i2c_slave_reply                             5     3      2     318
                                             44 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (12) _returnADCValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      31
                                             44 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    2902
                                             66 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2347
                                             54 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     796
                                             44 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _ReadADC                                             2     0      2       0
                                             44 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _initADC
     _ConvertADC
     _OpenADC
   _init_i2c
   _init_queues
     _init_queue
   _init_timer0_lthread
   _init_timer1_lthread
   _init_uart_recv
   _start_i2c_slave_reply
   _timer0_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _ReadADC
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
     _returnADCValue
     i2_start_i2c_slave_reply
   i2_ConvertADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0     15E      13       34.2%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      36       8       21.1%
BITBANK1           100      0       0      10        0.0%
BANK1              100     35      D7       6       84.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     4D      50       5       62.5%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     48      52       1       64.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AF       9        0.0%
DATA                 0      0     30D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Feb 10 20:03:24 2014

                main@uthread_data 01AD          _MQ_Main_Willing_to_block 00CF  
                     _SSPSTATbits 000FC7         __end_of_ToMainLow_recvmsg 17CA  
                              bsr 000FE0         __end_of_ToMainLow_sendmsg 19E0  
                ??_returnADCValue 002D                      __CFG_CP0$OFF 000000  
                             l325 07E4                               l510 1256  
                             l440 13BE                               l514 1276  
                             l515 1278                               l516 1286  
                             l461 198C                               l517 1288  
                             l462 198E                               l743 1A46  
                  _FromMainLow_MQ 0100                               wreg 000FE8  
                    __CFG_IESO$ON 000000                      ?_in_high_int 00A8  
                ??_init_uart_recv 00AA                              l1055 1334  
                            l2403 0D1C                              l2165 0BCE  
                            l2423 16A0                              l2417 167C  
                            l2169 0C52                              l2437 09BA  
                            l2453 0A80                              l2541 0FA4  
                            l2527 1734                              l2519 1712  
                            l2721 1258                              l2713 1242  
                            l2385 140A                              l2571 1778  
                            l2557 1008                              l2549 0FD6  
                            l2663 07EA                              l2681 0890  
                            l2657 0792                              l2673 0834  
                            l2649 0750                              l2683 08E2  
                            l2667 07FC                              l2675 0852  
                            l2669 0814                              l2791 12D2  
                            l2687 0934                              l2793 12E4  
                            l2795 12EC                              l2799 1320  
                            _LATB 000F8A                              u1590 1016  
                            u2387 1A48                              u1596 1018  
                 _FromMainHigh_MQ 0200                     __CFG_FCMEN$ON 000000  
          ?_block_on_To_msgqueues 0001                              _main 06A6  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            indf1 000FE7                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                     main@msgtype 01B9                        i1_send_msg 1032  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3             handle_start@data_read 002D  
                            start 00B0                     __CFG_FOSC2$ON 000000  
                      i2_send_msg 10DC         ToMainHigh_recvmsg@msgtype 00C0  
                 __end_of_ReadADC 1AA4                    send_msg@length 00B4  
   i2start_i2c_slave_reply@length 0031                   __end_of_OpenADC 13C2  
                     _Delay1KTCYx 1A42                             ?_main 0001  
                           _T0CON 000FD5                             i2l111 0F34  
                           i2l121 04CE                   __end_of___lwmod 133E  
                           i1l418 006A                        i1memcpy@d1 0001  
                           i2l123 0160                             i2l141 0320  
                           i2l127 019E                             i1l528 1A32  
                           i2l155 04E0                             i2l149 044C  
                           i2l413 0B78                        i1memcpy@s1 0003  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR1H 000FCF  
                           _TMR0L 000FD6                             _TMR1L 000FCE  
                           _SPBRG 000FAF                             _TRISB 000F93  
                           _TXSTA 000FAC                        i2memcpy@d1 002D  
                      i2memcpy@s1 002F                      ?_init_queues 0001  
                 __end_of_initADC 16FE                   __end_of_in_main 1788  
      ToMainLow_recvmsg@maxlength 00C4           timer0_lthread@msgbuffer 00C8  
                      _ConvertADC 1AA4           i2c_configure_slave@addr 00A8  
                           tablat 000FF5                             status 000FD8  
                __end_ofi1_memcpy 184C                  __end_ofi2_memcpy 188C  
                 __initialization 15FC                      __end_of_main 094E  
      __size_of_ToMainLow_recvmsg 0042        __size_of_ToMainLow_sendmsg 0026  
   __size_of_FromMainHigh_sendmsg 0036                            ??_main 00CC  
                 send_msg@msgtype 00B5                     __activetblptr 000002  
                 send_msg@tlength 00B9              __end_of_handle_start 0F80  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                            _ADRESH 000FC4  
                          _ADRESL 000FC3           ??_uart_recv_int_handler 001B  
                          i1l2841 181E                            i2l3021 0390  
                          i2l3023 03D2                            i2l3111 0AE8  
                          i2l3103 0ABE                            i1l2847 183A  
                          i1l2871 106A                            i2l3027 03E0  
                          i2l3141 0E54                            i2l3061 0544  
                          i2l3055 04E4                            i2l3127 0B64  
                          i2l3137 0DE0                            i2l3049 04A2  
                      _OpenTimer0 1968                            i2l3091 1954  
                          i1l2899 1202                            i2l3181 187A  
                          i2l3093 1958                            i2l3077 0660  
                          i2l3069 05CA                    __CFG_WDTEN$OFF 000000  
                          i2l3175 185E                            i2l3159 1114  
                          i2l2937 0F50                            i2l2961 0156  
                          i2l2939 0F68                            i2l2955 0142  
                          i2l2981 01FE                            i2l2991 023A  
                          i2l2979 01D2                            i2l2997 0252  
                          i2l2999 0292       __end_of_i2c_configure_slave 19BA  
              __size_of_ReadUSART 001E                            _OSCCON 000FD3  
                          _SPBRGH 000FB0                            _SSPADD 000FC8  
              _sendingPlaceHolder 0051                            _SSPBUF 000FC9  
  __size_of_start_i2c_slave_reply 010E                       ?i1_send_msg 000B  
                       ??_ReadADC 002F     __end_of_start_i2c_slave_reply 0CC0  
              timer0_lthread@tptr 00C2                         ??_OpenADC 00AA  
                     ?i2_send_msg 0037                    __CFG_XINST$OFF 000000  
              __size_of_OpenUSART 0092                   _i2c_int_handler 00B4  
                OpenTimer0@config 00A8                            _ic_ptr 00CD  
                       ??___lwmod 00AC                     main@msgbuffer 01A2  
                __end_of_init_i2c 15FC                            _memcpy 165A  
                          clear_0 1604                            clear_1 1616  
                          clear_2 1622                            _uc_ptr 004F  
                          main@ic 01BB                            main@uc 01B4  
                __end_of_recv_msg 0A84       start_i2c_slave_reply@length 00AC  
                       ??_initADC 00AD                         ??_in_main 00AE  
                __end_of_send_msg 0DC4                      __pdataCOMRAM 0051  
                 initADC@ADCValue 00AF           i2c_int_handler@i2c_data 0092  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                       init_queue@i 00AB  
        ?i2_start_i2c_slave_reply 002D          ToMainLow_recvmsg@msgtype 00C0  
            __size_of_in_high_int 0012                       ?_ConvertADC 0001  
                 __CFG_FOSC$HSPLL 000000                        __accesstop 0080  
         __end_of__initialization 1650        __end_of_ToMainHigh_recvmsg 180C  
      __end_of_ToMainHigh_sendmsg 1A06       __end_of_init_timer0_lthread 1A7C  
     __end_of_init_timer1_lthread 1A6A                    __pcstackCOMRAM 0001  
              __size_of_check_msg 0036                 __end_of_ReadUSART 1A42  
             __size_ofi1_send_msg 00AA                         ?i1_memcpy 0001  
   __size_of_InterruptHandlerHigh 0BAA       __end_of_InterruptHandlerLow 00B0  
                       ?i2_memcpy 002D                     _ToMainHigh_MQ 0136  
             __size_ofi2_send_msg 00AA              timer1_lthread@length 00C6  
                   ReadUSART@data 0001                 __end_of_OpenUSART 12B4  
                   check_msg@qptr 00A8              timer1_lthread@retval 00CB  
         ??_block_on_To_msgqueues 00AE              __size_of_init_queues 0072  
                      __pbssBANK0 00CF                        __pbssBANK1 0100  
                      __pbssBANK2 0200                       ?_OpenTimer0 0001  
                      __pnvCOMRAM 004F           __end_of_i2c_int_handler 06A6  
              timer1_lthread@tptr 00C2                 recv_msg@maxlength 00B4  
                 recv_msg@msgtype 00B5                   recv_msg@tlength 00BC  
           __size_of_handle_start 00C8                      ?_Delay1KTCYx 0001  
                         ?_memcpy 00A8               __size_of_ConvertADC 0004  
         __size_of_timer0_lthread 0072           __size_of_timer1_lthread 0072  
 __end_ofi2_start_i2c_slave_reply 0EB8                        ??i1_memcpy 0007  
                      ??i2_memcpy 0033        i2start_i2c_slave_reply@msg 002D  
                i1send_msg@length 000D                           _SSPCON1 000FC6  
                         _SSPCON2 000FC5                           _SSPSTAT 000FC7  
               __end_of_check_msg 1936                         ?_init_i2c 00A8  
                         _ReadADC 1A9A                         ?_recv_msg 00B2  
                         _OpenADC 133E                        _in_low_int 16FE  
                    _handle_start 0EB8                           __Hparam 0000  
                       ?_send_msg 00B2                           __Lparam 0000  
                init_uart_recv@uc 00A8                           ___lwmod 12B4  
                 __CFG_STVREN$OFF 000000                           __pcinit 15FC  
                 __size_of_memcpy 005E                        _init_queue 13C2  
                         __ramtop 0400               __size_of_OpenTimer0 002A  
                         __ptext0 06A6                           __ptext1 188C  
                         __ptext2 143C                           __ptext3 14AE  
                         __ptext4 12B4                           __ptext5 18CA  
                         __ptext6 0CC0                           __ptext7 0BB2  
                         __ptext8 1A06                           __ptext9 1A58  
                       _T0CONbits 000FD5                           _initADC 16B8  
                         _in_main 1744                    OpenADC@config2 00A8  
         __size_of_returnADCValue 0032                    __pintcode_body 0A84  
            end_of_initialization 1650           timer1_lthread@msgbuffer 00C8  
    __end_of_FromMainHigh_sendmsg 1900                     ?i2_ConvertADC 0001  
  __size_of_uart_recv_int_handler 009C        FromMainHigh_sendmsg@length 00C1  
                         memcpy@d 00AE                           memcpy@n 00AC  
                         memcpy@s 00B0     __end_of_uart_recv_int_handler 1222  
                      ??_init_i2c 00AA       i2c_int_handler@data_written 0090  
                   __Lmediumconst 0000                           int_func 0A84  
                    ??i1_send_msg 0011                     ?_uart_lthread 00A8  
         __size_of_init_uart_recv 001E                  ?_i2c_int_handler 0001  
                      ??_recv_msg 00B9                      ??i2_send_msg 003D  
                      ??_send_msg 00B8                         _RCSTAbits 000FAB  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
       ToMainHigh_sendmsg@msgtype 0043                        _responding 004B  
              __end_ofi1_send_msg 10DC       FromMainHigh_sendmsg@msgtype 00BE  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
              __end_ofi2_send_msg 1186                    ??i2_ConvertADC 002D  
                    ??_ConvertADC 00A8                    ??_uart_lthread 00B0  
                       _TXSTAbits 000FAC                        main@length 01BA  
                     ?_in_low_int 00AA             timer0_lthread@msgtype 00C4  
__size_ofi2_start_i2c_slave_reply 00F4                  _arrayPlaceHolder 0049  
           _start_i2c_slave_reply 0BB2      __size_of_i2c_configure_slave 0028  
              _ToMainHigh_recvmsg 17CA                         i1memcpy@d 0007  
              _ToMainHigh_sendmsg 19E0                         i1memcpy@n 0005  
                       i1memcpy@s 0009                     __pidataCOMRAM 1AAC  
                  _timer0_lthread 14AE                       ?_init_queue 00A8  
                       i2memcpy@d 0033                         i2memcpy@n 0031  
                       i2memcpy@s 0035                __end_of_ConvertADC 1AA8  
                  _timer1_lthread 143C                    __end_of_memcpy 16B8  
               _enable_interrupts 1A8E              __size_of_Delay1KTCYx 0016  
             ?_ToMainHigh_recvmsg 00C0          i2c_int_handler@data_read 0095  
             ?_ToMainHigh_sendmsg 0043                ?_enable_interrupts 0001  
             start_initialization 15FC                     ??_in_high_int 00AA  
                       _ReadUSART 1A24                 __size_ofi1_memcpy 0040  
               __size_ofi2_memcpy 0040             i2c_int_handler@length 008B  
             ??_enable_interrupts 00A8                      ??_OpenTimer0 00A8  
  __size_of_block_on_To_msgqueues 00B2     __end_of_block_on_To_msgqueues 1032  
                       _OpenUSART 1222      __end_of_InterruptHandlerHigh 0BB2  
                      init_i2c@ic 00A8              ??_ToMainHigh_recvmsg 00C4  
            ??_ToMainHigh_sendmsg 0046            __end_of_timer0_lthread 1520  
        i2c_int_handler@error_buf 008D            __end_of_timer1_lthread 14AE  
       __end_of_enable_interrupts 1A9A                          ??_memcpy 00AE  
           timer1_lthread@msgtype 00C4      __size_of_init_timer0_lthread 0012  
            _FromMainHigh_sendmsg 18CA      __size_of_init_timer1_lthread 0012  
              __end_of_OpenTimer0 1992          i2c_int_handler@msg_ready 0094  
                     __pbssBIGRAM 0236          i2c_int_handler@msgbuffer 0080  
                     __pbssCOMRAM 0049                        ?_ReadUSART 0001  
                   ??_init_queues 00AC                     __pcstackBANK0 0080  
                   __pcstackBANK1 01A2               __size_of_in_low_int 0046  
        start_i2c_slave_reply@msg 00A8                    _returnADCValue 1936  
             __CFG_CCP2MX$DEFAULT 000000                   Delay1KTCYx@unit 00A8  
        ToMainLow_sendmsg@msgtype 0017      __size_of_InterruptHandlerLow 0098  
             __end_of_in_high_int 1A8E                        ?_OpenUSART 00A8  
           ToMainLow_recvmsg@data 00C2                      _ToMainLow_MQ 016C  
             __size_of_init_queue 007A                    _init_uart_recv 1A06  
                        ?_ReadADC 002D                         _check_msg 1900  
                       __pnvBANK0 00CD            ?_start_i2c_slave_reply 00A8  
               __size_of_init_i2c 006A                 OpenADC@portconfig 00A9  
                        ?_OpenADC 00A8                      recv_msg@data 00B7  
                    recv_msg@qmsg 00BE                      recv_msg@slot 00BB  
                    recv_msg@qptr 00B2                 __size_of_recv_msg 0136  
                       __pintcode 0008                 __size_of_send_msg 0104  
                 ?_timer0_lthread 00C2                          ?___lwmod 00A8  
            __end_ofi2_ConvertADC 1AAC                   ?_timer1_lthread 00C2  
           ?_FromMainHigh_sendmsg 00BE                       __pintcodelo 0018  
          ToMainHigh_recvmsg@data 00C2              __end_of_uart_lthread 18CA  
                        ?_initADC 0001        i2c_int_handler@msg_to_send 0093  
                        ?_in_main 00AC                          _ADCArray 0236  
             uart_lthread@msgtype 00AA                          _ADCValue 004D  
         init_timer0_lthread@tptr 00A8            __end_of_returnADCValue 1968  
           ToMainLow_sendmsg@data 0018                  uart_lthread@uptr 00A8  
          __end_of_init_uart_recv 1A24               __end_of_init_queues 1592  
                   OpenADC@config 00AC                          _LATBbits 000F8A  
                        _LATDbits 000F8C                        ?_check_msg 00A8  
                        _IPR1bits 000F9F                          _PIE1bits 000F9D  
         i2_start_i2c_slave_reply 0DC4                          i2u230_40 0ACC  
                        i2u230_46 0ACE                          i2u232_40 0AF6  
                        i2u232_46 0AF8                          _PIR1bits 000F9E  
          ToMainHigh_sendmsg@data 0044                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000        __size_of_enable_interrupts 000C  
               i1send_msg@msgtype 000E                 i1send_msg@tlength 0012  
                      _ADCON0bits 000FC2              timer0_lthread@length 00C6  
                        i1_memcpy 180C              _InterruptHandlerHigh 0008  
                     ??_ReadUSART 0001                          i2_memcpy 184C  
            timer0_lthread@retval 00CB                   ?_returnADCValue 0001  
                     _in_high_int 1A7C                      send_msg@data 00B6  
             _i2c_configure_slave 1992                      send_msg@qmsg 00BC  
                    send_msg@slot 00BB                      send_msg@qptr 00B2  
                     _INTCON2bits 000FF1             uart_lthread@msgbuffer 00AE  
                 ?_init_uart_recv 00A8                       ??_OpenUSART 00AA  
                 OpenUSART@config 00AD             _uart_recv_int_handler 1186  
                    ??_in_low_int 00AC                  __size_of_ReadADC 000A  
                        __Hrparam 0000                  __size_of_OpenADC 0084  
            ?_i2c_configure_slave 0001                          __Lrparam 0000  
          ??_FromMainHigh_sendmsg 00C1          __size_of_i2c_int_handler 05F2  
                __size_of___lwmod 008A                      ??_init_queue 00AA  
        FromMainHigh_sendmsg@data 00BF           ToMainLow_sendmsg@length 001A  
               main@t0thread_data 01B2             ?_InterruptHandlerHigh 0001  
                __size_of_initADC 0046                  __size_of_in_main 0044  
               i2send_msg@msgtype 003A       ToMainHigh_recvmsg@maxlength 00C4  
               i2send_msg@tlength 003E           init_timer1_lthread@tptr 00A8  
                     _init_queues 1520                __end_of_in_low_int 1744  
                        __ptext10 1A6A                          __ptext11 1520  
                        __ptext20 1744                          __ptext12 13C2  
                        __ptext21 16FE                          __ptext13 1592  
                        __ptext30 1968                          __ptext22 1A7C  
                        __ptext14 16B8                          __ptext23 1900  
                        __ptext15 133E                          __ptext40 0DC4  
                        __ptext32 1186                          __ptext24 1A42  
                        __ptext16 1AA4                          __ptext41 1936  
                        __ptext33 19BA                          __ptext25 1788  
                        __ptext17 1992                          __ptext42 0EB8  
                        __ptext34 1032                          __ptext26 17CA  
                        __ptext18 1A8E                          __ptext43 19E0  
                        __ptext35 180C                          __ptext27 094E  
                        __ptext19 0F80                          __ptext44 10DC  
                        __ptext36 1A24                          __ptext28 165A  
                        __ptext45 184C                          __ptext29 1222  
                        __ptext46 1A9A                          __ptext38 1AA8  
                        __ptext39 00B4                    i1send_msg@data 000F  
                  i1send_msg@qmsg 0015                    i1send_msg@slot 0014  
                  i1send_msg@qptr 000B                uart_lthread@length 00AC  
             _init_timer0_lthread 1A6A         ??i2_start_i2c_slave_reply 002F  
                        _init_i2c 1592               _init_timer1_lthread 1A58  
                   __size_of_main 02A8                 main@t1thread_data 01B0  
                     ??_check_msg 00AA                __end_of_init_queue 143C  
                        _recv_msg 094E             ??_i2c_configure_slave 00A8  
           __size_ofi2_ConvertADC 0004                          _send_msg 0CC0  
                  init_queue@qptr 00A8             __size_of_uart_lthread 003E  
                   ??_Delay1KTCYx 00A8              ?_init_timer0_lthread 00A8  
             _InterruptHandlerLow 0018              ?_init_timer1_lthread 00A8  
                     _OSCTUNEbits 000F9B                        _INTCONbits 000FF2  
                  OpenUSART@spbrg 00A8                          memcpy@d1 00A8  
                        memcpy@s1 00AA      i2c_int_handler@overrun_error 0091  
                i2send_msg@length 0039                          intlevel1 0000  
                        intlevel2 0000                      i2_ConvertADC 1AA8  
            ?_InterruptHandlerLow 0001           ??_start_i2c_slave_reply 00AA  
                ___lwmod@dividend 00A8            ?_uart_recv_int_handler 0001  
                    _uart_lthread 188C             _block_on_To_msgqueues 0F80  
                   ?_handle_start 0001                  ??_timer0_lthread 00CA  
     __size_of_ToMainHigh_recvmsg 0042       __size_of_ToMainHigh_sendmsg 0026  
                      _OSCCONbits 000FD3                  ??_timer1_lthread 00CA  
        ToMainHigh_sendmsg@length 0046             ??_init_timer0_lthread 00AA  
           ??_init_timer1_lthread 00AA            ??_InterruptHandlerHigh 0096  
               _ToMainLow_recvmsg 1788                 _ToMainLow_sendmsg 19BA  
              main@last_reg_recvd 01AF                   ___lwmod@divisor 00AA  
              ?_ToMainLow_recvmsg 00C0               __end_of_Delay1KTCYx 1A58  
               ??_i2c_int_handler 0047                   ___lwmod@counter 00AD  
              ?_ToMainLow_sendmsg 0017                       _SSPCON1bits 000FC6  
                     _SSPCON2bits 000FC5                    i2send_msg@data 003B  
           ??_InterruptHandlerLow 001C               ??_ToMainLow_recvmsg 00C4  
                  i2send_msg@qmsg 0041                    i2send_msg@slot 0040  
                  i2send_msg@qptr 0037               ??_ToMainLow_sendmsg 001A  
                  ??_handle_start 002D  InterruptHandlerHigh@pureADCValue 00A6  
                    _USART_Status 004E  

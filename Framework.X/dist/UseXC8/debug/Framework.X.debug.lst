

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Sat Feb  8 14:34:44 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           	psect	idataBANK0
    80  001CB0                     __pidataBANK0:
    81                           	opt stack 0
    82                           
    83                           ;initializer for _ADCValue
    84  001CB0  0002               	dw	2
    85  0000                     _ADCON0	set	4034
    86  0000                     _ADCON0bits	set	4034
    87  0000                     _ADCON1	set	4033
    88  0000                     _ADCON2	set	4032
    89  0000                     _ADRESH	set	4036
    90  0000                     _ADRESL	set	4035
    91  0000                     _INTCONbits	set	4082
    92  0000                     _IPR1bits	set	3999
    93  0000                     _LATB	set	3978
    94  0000                     _LATBbits	set	3978
    95  0000                     _OSCCON	set	4051
    96  0000                     _OSCCONbits	set	4051
    97  0000                     _OSCTUNEbits	set	3995
    98  0000                     _PIE1bits	set	3997
    99  0000                     _PIR1bits	set	3998
   100  0000                     _RCONbits	set	4048
   101  0000                     _RCREG	set	4014
   102  0000                     _RCSTA	set	4011
   103  0000                     _RCSTAbits	set	4011
   104  0000                     _SPBRG	set	4015
   105  0000                     _SPBRGH	set	4016
   106  0000                     _SSPADD	set	4040
   107  0000                     _SSPBUF	set	4041
   108  0000                     _SSPCON1	set	4038
   109  0000                     _SSPCON1bits	set	4038
   110  0000                     _SSPCON2	set	4037
   111  0000                     _SSPCON2bits	set	4037
   112  0000                     _SSPSTAT	set	4039
   113  0000                     _SSPSTATbits	set	4039
   114  0000                     _T1CON	set	4045
   115  0000                     _T1CONbits	set	4045
   116  0000                     _TMR0H	set	4055
   117  0000                     _TMR0L	set	4054
   118  0000                     _TMR1H	set	4047
   119  0000                     _TMR1L	set	4046
   120  0000                     _TRISB	set	3987
   121  0000                     _TRISCbits	set	3988
   122  0000                     _TXSTA	set	4012
   123  0000                     _TXSTAbits	set	4012
   124                           
   125                           	psect	nvCOMRAM
   126  00004D                     __pnvCOMRAM:
   127                           	opt stack 0
   128  00004D                     _uc_ptr:
   129                           	opt stack 0
   130  00004D                     	ds	2
   131                           
   132                           	psect	nvBANK0
   133  0000CD                     __pnvBANK0:
   134                           	opt stack 0
   135  0000CD                     _ic_ptr:
   136                           	opt stack 0
   137  0000CD                     	ds	2
   138                           
   139                           ; #config settings
   140  0000                     
   141                           	psect	cinit
   142  001966                     __pcinit:
   143                           	opt stack 0
   144  001966                     start_initialization:
   145                           	opt stack 0
   146  001966                     __initialization:
   147                           	opt stack 0
   148                           
   149                           ; Clear objects allocated to BANK2 (54 bytes)
   150  001966  EE02  F000         	lfsr	0,__pbssBANK2
   151  00196A  0E36               	movlw	54
   152  00196C                     clear_0:
   153  00196C  6AEE               	clrf	postinc0,c
   154  00196E  06E8               	decf	wreg,f,c
   155  001970  E1FD               	bnz	clear_0
   156                           
   157                           ; Clear objects allocated to BANK1 (162 bytes)
   158  001972  EE01  F000         	lfsr	0,__pbssBANK1
   159  001976  0EA2               	movlw	162
   160  001978                     clear_1:
   161  001978  6AEE               	clrf	postinc0,c
   162  00197A  06E8               	decf	wreg,f,c
   163  00197C  E1FD               	bnz	clear_1
   164                           
   165                           ; Clear objects allocated to COMRAM (2 bytes)
   166  00197E  6A50               	clrf	(__pbssCOMRAM+1)& (0+255),c
   167  001980  6A4F               	clrf	__pbssCOMRAM& (0+255),c
   168                           
   169                           ; Initialize objects allocated to BANK0 (2 bytes)
   170                           ; load TBLPTR registers with __pidataBANK0
   171  001982  0EB0               	movlw	low __pidataBANK0
   172  001984  6EF6               	movwf	tblptrl,c
   173  001986  0E1C               	movlw	high __pidataBANK0
   174  001988  6EF7               	movwf	tblptrh,c
   175  00198A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   176  00198C  6EF8               	movwf	tblptru,c
   177  00198E  0009               	tblrd		*+	;fetch initializer
   178  001990  CFF5 F0CF          	movff	tablat,__pdataBANK0
   179  001994  0009               	tblrd		*+	;fetch initializer
   180  001996  CFF5 F0D0          	movff	tablat,__pdataBANK0+1
   181  00199A                     end_of_initialization:
   182                           	opt stack 0
   183  00199A                     __end_of__initialization:
   184                           	opt stack 0
   185  00199A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   186  00199C  6EF8               	movwf	tblptru,c
   187  00199E  0100               	movlb	0
   188  0019A0  EF5F  F003         	goto	_main	;jump to C main() function
   189                           tblptru	equ	0xFF8
   190                           tblptrh	equ	0xFF7
   191                           tblptrl	equ	0xFF6
   192                           tablat	equ	0xFF5
   193                           postinc0	equ	0xFEE
   194                           wreg	equ	0xFE8
   195                           
   196                           	psect	bssCOMRAM
   197  00004F                     __pbssCOMRAM:
   198                           	opt stack 0
   199  00004F                     _MQ_Main_Willing_to_block:
   200                           	opt stack 0
   201  00004F                     	ds	1
   202  000050                     _USART_Status:
   203                           	opt stack 0
   204  000050                     	ds	1
   205                           tblptru	equ	0xFF8
   206                           tblptrh	equ	0xFF7
   207                           tblptrl	equ	0xFF6
   208                           tablat	equ	0xFF5
   209                           postinc0	equ	0xFEE
   210                           wreg	equ	0xFE8
   211                           
   212                           	psect	dataBANK0
   213  0000CF                     __pdataBANK0:
   214                           	opt stack 0
   215  0000CF                     _ADCValue:
   216                           	opt stack 0
   217  0000CF                     	ds	2
   218                           tblptru	equ	0xFF8
   219                           tblptrh	equ	0xFF7
   220                           tblptrl	equ	0xFF6
   221                           tablat	equ	0xFF5
   222                           postinc0	equ	0xFEE
   223                           wreg	equ	0xFE8
   224                           
   225                           	psect	bssBANK1
   226  000100                     __pbssBANK1:
   227                           	opt stack 0
   228  000100                     _FromMainLow_MQ:
   229                           	opt stack 0
   230  000100                     	ds	54
   231  000136                     _ToMainHigh_MQ:
   232                           	opt stack 0
   233  000136                     	ds	54
   234  00016C                     _ToMainLow_MQ:
   235                           	opt stack 0
   236  00016C                     	ds	54
   237                           tblptru	equ	0xFF8
   238                           tblptrh	equ	0xFF7
   239                           tblptrl	equ	0xFF6
   240                           tablat	equ	0xFF5
   241                           postinc0	equ	0xFEE
   242                           wreg	equ	0xFE8
   243                           
   244                           	psect	bssBANK2
   245  000200                     __pbssBANK2:
   246                           	opt stack 0
   247  000200                     _FromMainHigh_MQ:
   248                           	opt stack 0
   249  000200                     	ds	54
   250                           tblptru	equ	0xFF8
   251                           tblptrh	equ	0xFF7
   252                           tblptrl	equ	0xFF6
   253                           tablat	equ	0xFF5
   254                           postinc0	equ	0xFEE
   255                           wreg	equ	0xFE8
   256                           
   257                           	psect	cstackBANK1
   258  0001A2                     __pcstackBANK1:
   259                           	opt stack 0
   260  0001A2                     main@msgbuffer:
   261                           	opt stack 0
   262                           
   263                           ; 11 bytes @ 0x0
   264  0001A2                     	ds	11
   265  0001AD                     main@uthread_data:
   266                           	opt stack 0
   267                           
   268                           ; 2 bytes @ 0xB
   269  0001AD                     	ds	2
   270  0001AF                     main@t0thread_data:
   271                           	opt stack 0
   272                           
   273                           ; 2 bytes @ 0xD
   274  0001AF                     	ds	2
   275  0001B1                     main@last_reg_recvd:
   276                           	opt stack 0
   277                           
   278                           ; 1 bytes @ 0xF
   279  0001B1                     	ds	1
   280  0001B2                     main@t1thread_data:
   281                           	opt stack 0
   282                           
   283                           ; 2 bytes @ 0x10
   284  0001B2                     	ds	2
   285  0001B4                     main@uc:
   286                           	opt stack 0
   287                           
   288                           ; 5 bytes @ 0x12
   289  0001B4                     	ds	5
   290  0001B9                     main@msgtype:
   291                           	opt stack 0
   292                           
   293                           ; 1 bytes @ 0x17
   294  0001B9                     	ds	1
   295  0001BA                     main@length:
   296                           	opt stack 0
   297                           
   298                           ; 1 bytes @ 0x18
   299  0001BA                     	ds	1
   300  0001BB                     main@ic:
   301                           	opt stack 0
   302                           
   303                           ; 28 bytes @ 0x19
   304  0001BB                     	ds	28
   305                           tblptru	equ	0xFF8
   306                           tblptrh	equ	0xFF7
   307                           tblptrl	equ	0xFF6
   308                           tablat	equ	0xFF5
   309                           postinc0	equ	0xFEE
   310                           wreg	equ	0xFE8
   311                           
   312                           	psect	cstackBANK0
   313  000080                     __pcstackBANK0:
   314                           	opt stack 0
   315  000080                     timer0_int_handler@length:
   316                           	opt stack 0
   317  000080                     i2c_int_handler@msgbuffer:
   318                           	opt stack 0
   319                           
   320                           ; 11 bytes @ 0x0
   321  000080                     	ds	2
   322  000082                     timer0_int_handler@msgtype:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0x2
   326  000082                     	ds	2
   327  000084                     timer0_int_handler@val:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0x4
   331  000084                     	ds	7
   332  00008B                     i2c_int_handler@length:
   333                           	opt stack 0
   334                           
   335                           ; 2 bytes @ 0xB
   336  00008B                     	ds	2
   337  00008D                     i2c_int_handler@error_buf:
   338                           	opt stack 0
   339                           
   340                           ; 3 bytes @ 0xD
   341  00008D                     	ds	3
   342  000090                     i2c_int_handler@data_written:
   343                           	opt stack 0
   344                           
   345                           ; 1 bytes @ 0x10
   346  000090                     	ds	1
   347  000091                     i2c_int_handler@overrun_error:
   348                           	opt stack 0
   349                           
   350                           ; 1 bytes @ 0x11
   351  000091                     	ds	1
   352  000092                     i2c_int_handler@i2c_data:
   353                           	opt stack 0
   354                           
   355                           ; 1 bytes @ 0x12
   356  000092                     	ds	1
   357  000093                     i2c_int_handler@msg_to_send:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0x13
   361  000093                     	ds	1
   362  000094                     i2c_int_handler@msg_ready:
   363                           	opt stack 0
   364                           
   365                           ; 1 bytes @ 0x14
   366  000094                     	ds	1
   367  000095                     i2c_int_handler@data_read:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0x15
   371  000095                     	ds	1
   372  000096                     ??_InterruptHandlerHigh:
   373                           
   374                           ; 0 bytes @ 0x16
   375  000096                     	ds	16
   376  0000A6                     InterruptHandlerHigh@pureADCValue:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0x26
   380  0000A6                     	ds	2
   381  0000A8                     ?_returnADCValue:
   382                           	opt stack 0
   383  0000A8                     ?_in_high_int:
   384                           	opt stack 0
   385  0000A8                     ?___lwmod:
   386                           	opt stack 0
   387  0000A8                     i2c_configure_slave@addr:
   388                           	opt stack 0
   389  0000A8                     OpenADC@config2:
   390                           	opt stack 0
   391  0000A8                     OpenTimer1@config:
   392                           	opt stack 0
   393  0000A8                     Delay1KTCYx@unit:
   394                           	opt stack 0
   395  0000A8                     uart_lthread@uptr:
   396                           	opt stack 0
   397  0000A8                     init_timer1_lthread@tptr:
   398                           	opt stack 0
   399  0000A8                     timer0_lthread@tptr:
   400                           	opt stack 0
   401  0000A8                     init_uart_recv@uc:
   402                           	opt stack 0
   403  0000A8                     start_i2c_slave_reply@msg:
   404                           	opt stack 0
   405  0000A8                     init_i2c@ic:
   406                           	opt stack 0
   407  0000A8                     init_queue@qptr:
   408                           	opt stack 0
   409  0000A8                     check_msg@qptr:
   410                           	opt stack 0
   411  0000A8                     OpenUSART@spbrg:
   412                           	opt stack 0
   413  0000A8                     ___lwmod@dividend:
   414                           	opt stack 0
   415  0000A8                     memcpy@d1:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x28
   419  0000A8                     	ds	1
   420  0000A9                     OpenADC@portconfig:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0x29
   424  0000A9                     	ds	1
   425  0000AA                     ??_OpenADC:
   426  0000AA                     ??_OpenUSART:
   427  0000AA                     ??_start_i2c_slave_reply:
   428  0000AA                     ??_init_queue:
   429  0000AA                     ??_check_msg:
   430  0000AA                     ?_in_low_int:
   431                           	opt stack 0
   432  0000AA                     uart_lthread@msgtype:
   433                           	opt stack 0
   434  0000AA                     timer0_lthread@msgtype:
   435                           	opt stack 0
   436  0000AA                     returnADCValue@temp:
   437                           	opt stack 0
   438  0000AA                     ___lwmod@divisor:
   439                           	opt stack 0
   440  0000AA                     memcpy@s1:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x2A
   444  0000AA                     	ds	1
   445  0000AB                     init_queue@i:
   446                           	opt stack 0
   447                           
   448                           ; 1 bytes @ 0x2B
   449  0000AB                     	ds	1
   450  0000AC                     ??_init_queues:
   451  0000AC                     ??___lwmod:
   452  0000AC                     ?_in_main:
   453                           	opt stack 0
   454  0000AC                     start_i2c_slave_reply@length:
   455                           	opt stack 0
   456  0000AC                     OpenADC@config:
   457                           	opt stack 0
   458  0000AC                     uart_lthread@length:
   459                           	opt stack 0
   460  0000AC                     timer0_lthread@length:
   461                           	opt stack 0
   462  0000AC                     memcpy@n:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x2C
   466  0000AC                     	ds	1
   467  0000AD                     ??_initADC:
   468  0000AD                     OpenUSART@config:
   469                           	opt stack 0
   470  0000AD                     ___lwmod@counter:
   471                           	opt stack 0
   472                           
   473                           ; 1 bytes @ 0x2D
   474  0000AD                     	ds	1
   475  0000AE                     ??_block_on_To_msgqueues:
   476  0000AE                     uart_lthread@msgbuffer:
   477                           	opt stack 0
   478  0000AE                     timer0_lthread@msgbuffer:
   479                           	opt stack 0
   480  0000AE                     memcpy@d:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0x2E
   484  0000AE                     	ds	1
   485  0000AF                     initADC@ADCValue:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x2F
   489  0000AF                     	ds	1
   490  0000B0                     timer0_lthread@msgval:
   491                           	opt stack 0
   492  0000B0                     memcpy@s:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x30
   496  0000B0                     	ds	2
   497  0000B2                     send_msg@qptr:
   498                           	opt stack 0
   499  0000B2                     recv_msg@qptr:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x32
   503  0000B2                     	ds	2
   504  0000B4                     send_msg@length:
   505                           	opt stack 0
   506  0000B4                     recv_msg@maxlength:
   507                           	opt stack 0
   508                           
   509                           ; 1 bytes @ 0x34
   510  0000B4                     	ds	1
   511  0000B5                     send_msg@msgtype:
   512                           	opt stack 0
   513  0000B5                     recv_msg@msgtype:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x35
   517  0000B5                     	ds	1
   518  0000B6                     send_msg@data:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x36
   522  0000B6                     	ds	1
   523  0000B7                     recv_msg@data:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x37
   527  0000B7                     	ds	1
   528  0000B8                     ??_send_msg:
   529                           
   530                           ; 0 bytes @ 0x38
   531  0000B8                     	ds	1
   532  0000B9                     ??_recv_msg:
   533  0000B9                     send_msg@tlength:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x39
   537  0000B9                     	ds	2
   538  0000BB                     send_msg@slot:
   539                           	opt stack 0
   540  0000BB                     recv_msg@slot:
   541                           	opt stack 0
   542                           
   543                           ; 1 bytes @ 0x3B
   544  0000BB                     	ds	1
   545  0000BC                     send_msg@qmsg:
   546                           	opt stack 0
   547  0000BC                     recv_msg@tlength:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x3C
   551  0000BC                     	ds	2
   552  0000BE                     FromMainHigh_sendmsg@msgtype:
   553                           	opt stack 0
   554  0000BE                     recv_msg@qmsg:
   555                           	opt stack 0
   556                           
   557                           ; 2 bytes @ 0x3E
   558  0000BE                     	ds	1
   559  0000BF                     FromMainHigh_sendmsg@data:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x3F
   563  0000BF                     	ds	1
   564  0000C0                     ToMainLow_recvmsg@msgtype:
   565                           	opt stack 0
   566  0000C0                     ToMainHigh_recvmsg@msgtype:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0x40
   570  0000C0                     	ds	1
   571  0000C1                     FromMainHigh_sendmsg@length:
   572                           	opt stack 0
   573                           
   574                           ; 1 bytes @ 0x41
   575  0000C1                     	ds	1
   576  0000C2                     timer1_lthread@tptr:
   577                           	opt stack 0
   578  0000C2                     ToMainLow_recvmsg@data:
   579                           	opt stack 0
   580  0000C2                     ToMainHigh_recvmsg@data:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x42
   584  0000C2                     	ds	2
   585  0000C4                     ToMainLow_recvmsg@maxlength:
   586                           	opt stack 0
   587  0000C4                     ToMainHigh_recvmsg@maxlength:
   588                           	opt stack 0
   589  0000C4                     timer1_lthread@msgtype:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x44
   593  0000C4                     	ds	2
   594  0000C6                     timer1_lthread@length:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0x46
   598  0000C6                     	ds	2
   599  0000C8                     timer1_lthread@msgbuffer:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x48
   603  0000C8                     	ds	2
   604  0000CA                     ??_timer1_lthread:
   605                           
   606                           ; 0 bytes @ 0x4A
   607  0000CA                     	ds	1
   608  0000CB                     timer1_lthread@retval:
   609                           	opt stack 0
   610                           
   611                           ; 1 bytes @ 0x4B
   612  0000CB                     	ds	1
   613  0000CC                     ??_main:
   614                           
   615                           ; 0 bytes @ 0x4C
   616  0000CC                     	ds	1
   617                           tblptru	equ	0xFF8
   618                           tblptrh	equ	0xFF7
   619                           tblptrl	equ	0xFF6
   620                           tablat	equ	0xFF5
   621                           postinc0	equ	0xFEE
   622                           wreg	equ	0xFE8
   623                           
   624                           	psect	cstackCOMRAM
   625  000001                     __pcstackCOMRAM:
   626                           	opt stack 0
   627  000001                     ?_ReadTimer1:
   628                           	opt stack 0
   629  000001                     ReadUSART@data:
   630                           	opt stack 0
   631  000001                     WriteTimer1@timer1:
   632                           	opt stack 0
   633  000001                     i1memcpy@d1:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0x0
   637  000001                     	ds	2
   638  000003                     ReadTimer1@timer:
   639                           	opt stack 0
   640  000003                     WriteTimer1@timer:
   641                           	opt stack 0
   642  000003                     i1memcpy@s1:
   643                           	opt stack 0
   644                           
   645                           ; 2 bytes @ 0x2
   646  000003                     	ds	2
   647  000005                     i1memcpy@n:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0x4
   651  000005                     	ds	2
   652  000007                     i1memcpy@d:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0x6
   656  000007                     	ds	2
   657  000009                     i1memcpy@s:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x8
   661  000009                     	ds	2
   662  00000B                     i1send_msg@qptr:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0xA
   666  00000B                     	ds	2
   667  00000D                     i1send_msg@length:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0xC
   671  00000D                     	ds	1
   672  00000E                     i1send_msg@msgtype:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0xD
   676  00000E                     	ds	1
   677  00000F                     i1send_msg@data:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0xE
   681  00000F                     	ds	2
   682  000011                     ??i1_send_msg:
   683                           
   684                           ; 0 bytes @ 0x10
   685  000011                     	ds	1
   686  000012                     i1send_msg@tlength:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x11
   690  000012                     	ds	2
   691  000014                     i1send_msg@slot:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x13
   695  000014                     	ds	1
   696  000015                     i1send_msg@qmsg:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0x14
   700  000015                     	ds	2
   701  000017                     ToMainLow_sendmsg@msgtype:
   702                           	opt stack 0
   703                           
   704                           ; 1 bytes @ 0x16
   705  000017                     	ds	1
   706  000018                     ToMainLow_sendmsg@data:
   707                           	opt stack 0
   708                           
   709                           ; 2 bytes @ 0x17
   710  000018                     	ds	2
   711  00001A                     ToMainLow_sendmsg@length:
   712                           	opt stack 0
   713                           
   714                           ; 1 bytes @ 0x19
   715  00001A                     	ds	1
   716  00001B                     ??_timer1_int_handler:
   717  00001B                     ??_uart_recv_int_handler:
   718                           
   719                           ; 0 bytes @ 0x1A
   720  00001B                     	ds	1
   721  00001C                     timer1_int_handler@result:
   722                           	opt stack 0
   723                           
   724                           ; 2 bytes @ 0x1B
   725  00001C                     	ds	2
   726  00001E                     ??_InterruptHandlerLow:
   727                           
   728                           ; 0 bytes @ 0x1D
   729  00001E                     	ds	17
   730  00002F                     ?_ReadADC:
   731                           	opt stack 0
   732  00002F                     ?i2_returnADCValue:
   733                           	opt stack 0
   734  00002F                     ?i2_in_high_int:
   735                           	opt stack 0
   736  00002F                     handle_start@data_read:
   737                           	opt stack 0
   738  00002F                     WriteTimer0@timer0:
   739                           	opt stack 0
   740  00002F                     i2start_i2c_slave_reply@msg:
   741                           	opt stack 0
   742  00002F                     i2check_msg@qptr:
   743                           	opt stack 0
   744  00002F                     i2memcpy@d1:
   745                           	opt stack 0
   746                           
   747                           ; 2 bytes @ 0x2E
   748  00002F                     	ds	2
   749  000031                     ??i2_start_i2c_slave_reply:
   750  000031                     ??i2_check_msg:
   751  000031                     ?i2_in_low_int:
   752                           	opt stack 0
   753  000031                     WriteTimer0@timer:
   754                           	opt stack 0
   755  000031                     i2returnADCValue@temp:
   756                           	opt stack 0
   757  000031                     i2memcpy@s1:
   758                           	opt stack 0
   759                           
   760                           ; 2 bytes @ 0x30
   761  000031                     	ds	2
   762  000033                     i2start_i2c_slave_reply@length:
   763                           	opt stack 0
   764  000033                     i2memcpy@n:
   765                           	opt stack 0
   766                           
   767                           ; 2 bytes @ 0x32
   768  000033                     	ds	2
   769  000035                     i2memcpy@d:
   770                           	opt stack 0
   771                           
   772                           ; 2 bytes @ 0x34
   773  000035                     	ds	2
   774  000037                     i2memcpy@s:
   775                           	opt stack 0
   776                           
   777                           ; 2 bytes @ 0x36
   778  000037                     	ds	2
   779  000039                     i2send_msg@qptr:
   780                           	opt stack 0
   781  000039                     i2recv_msg@qptr:
   782                           	opt stack 0
   783                           
   784                           ; 2 bytes @ 0x38
   785  000039                     	ds	2
   786  00003B                     i2send_msg@length:
   787                           	opt stack 0
   788  00003B                     i2recv_msg@maxlength:
   789                           	opt stack 0
   790                           
   791                           ; 1 bytes @ 0x3A
   792  00003B                     	ds	1
   793  00003C                     i2send_msg@msgtype:
   794                           	opt stack 0
   795  00003C                     i2recv_msg@msgtype:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0x3B
   799  00003C                     	ds	1
   800  00003D                     i2send_msg@data:
   801                           	opt stack 0
   802                           
   803                           ; 2 bytes @ 0x3C
   804  00003D                     	ds	1
   805  00003E                     i2recv_msg@data:
   806                           	opt stack 0
   807                           
   808                           ; 2 bytes @ 0x3D
   809  00003E                     	ds	1
   810  00003F                     ??i2_send_msg:
   811                           
   812                           ; 0 bytes @ 0x3E
   813  00003F                     	ds	1
   814  000040                     ??i2_recv_msg:
   815  000040                     i2send_msg@tlength:
   816                           	opt stack 0
   817                           
   818                           ; 2 bytes @ 0x3F
   819  000040                     	ds	2
   820  000042                     i2send_msg@slot:
   821                           	opt stack 0
   822  000042                     i2recv_msg@slot:
   823                           	opt stack 0
   824                           
   825                           ; 1 bytes @ 0x41
   826  000042                     	ds	1
   827  000043                     i2send_msg@qmsg:
   828                           	opt stack 0
   829  000043                     i2recv_msg@tlength:
   830                           	opt stack 0
   831                           
   832                           ; 2 bytes @ 0x42
   833  000043                     	ds	2
   834  000045                     ToMainHigh_sendmsg@msgtype:
   835                           	opt stack 0
   836  000045                     i2recv_msg@qmsg:
   837                           	opt stack 0
   838                           
   839                           ; 2 bytes @ 0x44
   840  000045                     	ds	1
   841  000046                     ToMainHigh_sendmsg@data:
   842                           	opt stack 0
   843                           
   844                           ; 2 bytes @ 0x45
   845  000046                     	ds	1
   846  000047                     FromMainHigh_recvmsg@msgtype:
   847                           	opt stack 0
   848                           
   849                           ; 2 bytes @ 0x46
   850  000047                     	ds	1
   851  000048                     ToMainHigh_sendmsg@length:
   852                           	opt stack 0
   853                           
   854                           ; 1 bytes @ 0x47
   855  000048                     	ds	1
   856  000049                     ??_i2c_int_handler:
   857  000049                     FromMainHigh_recvmsg@data:
   858                           	opt stack 0
   859                           
   860                           ; 2 bytes @ 0x48
   861  000049                     	ds	2
   862  00004B                     FromMainHigh_recvmsg@maxlength:
   863                           	opt stack 0
   864                           
   865                           ; 1 bytes @ 0x4A
   866  00004B                     	ds	1
   867  00004C                     ??_timer0_int_handler:
   868                           
   869                           ; 0 bytes @ 0x4B
   870  00004C                     	ds	1
   871                           tblptru	equ	0xFF8
   872                           tblptrh	equ	0xFF7
   873                           tblptrl	equ	0xFF6
   874                           tablat	equ	0xFF5
   875                           postinc0	equ	0xFEE
   876                           wreg	equ	0xFE8
   877                           
   878 ;;
   879 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   880 ;;
   881 ;; *************** function _main *****************
   882 ;; Defined at:
   883 ;;		line 111 in file "../src/main.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;		None
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  ic             28   25[BANK1 ] struct __i2c_comm
   888 ;;  msgbuffer      11    0[BANK1 ] unsigned char [11]
   889 ;;  uc              5   18[BANK1 ] struct __uart_comm
   890 ;;  t1thread_dat    2   16[BANK1 ] struct __timer1_thread_s
   891 ;;  t0thread_dat    2   13[BANK1 ] struct __timer0_thread_s
   892 ;;  uthread_data    2   11[BANK1 ] struct __uart_thread_str
   893 ;;  length          1   24[BANK1 ] char 
   894 ;;  msgtype         1   23[BANK1 ] unsigned char 
   895 ;;  last_reg_rec    1   15[BANK1 ] unsigned char 
   896 ;;  i               1    0        unsigned char 
   897 ;;  c               1    0        unsigned char 
   898 ;; Return value:  Size  Location     Type
   899 ;;		None               void
   900 ;; Registers used:
   901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   907 ;;      Params:         0       0       0       0       0
   908 ;;      Locals:         0       0      53       0       0
   909 ;;      Temps:          0       1       0       0       0
   910 ;;      Totals:         0       1      53       0       0
   911 ;;Total ram usage:       54 bytes
   912 ;; Hardware stack levels required when called:   14
   913 ;; This function calls:
   914 ;;		_OpenTimer1
   915 ;;		_OpenUSART
   916 ;;		_ToMainHigh_recvmsg
   917 ;;		_ToMainLow_recvmsg
   918 ;;		_block_on_To_msgqueues
   919 ;;		_enable_interrupts
   920 ;;		_i2c_configure_slave
   921 ;;		_initADC
   922 ;;		_init_i2c
   923 ;;		_init_queues
   924 ;;		_init_timer1_lthread
   925 ;;		_init_uart_recv
   926 ;;		_returnADCValue
   927 ;;		_start_i2c_slave_reply
   928 ;;		_timer0_lthread
   929 ;;		_timer1_lthread
   930 ;;		_uart_lthread
   931 ;; This function is called by:
   932 ;;		Startup code after reset
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           	psect	text0
   937  0006BE                     __ptext0:
   938                           	opt stack 0
   939  0006BE                     _main:
   940                           	opt stack 16
   941                           
   942                           ;main.c: 116: char c;
   943                           ;main.c: 117: signed char length;
   944                           ;main.c: 118: unsigned char msgtype;
   945                           ;main.c: 119: unsigned char last_reg_recvd;
   946                           ;main.c: 120: uart_comm uc;
   947                           ;main.c: 121: i2c_comm ic;
   948                           ;main.c: 122: unsigned char msgbuffer[10 + 1];
   949                           ;main.c: 123: unsigned char i;
   950                           ;main.c: 124: uart_thread_struct uthread_data;
   951                           ;main.c: 125: timer1_thread_struct t1thread_data;
   952                           ;main.c: 126: timer0_thread_struct t0thread_data;
   953                           ;main.c: 133: OSCCON = 0x82;
   954                           
   955                           ;incstack = 0
   956  0006BE  0E82               	movlw	130
   957  0006C0  6ED3               	movwf	4051,c	;volatile
   958                           
   959                           ;main.c: 134: OSCTUNEbits.PLLEN = 0;
   960  0006C2  9C9B               	bcf	3995,6,c	;volatile
   961                           
   962                           ;main.c: 138: init_uart_recv(&uc);
   963  0006C4  0101               	movlb	1	; () banked
   964  0006C6  0E01               	movlw	high main@uc
   965  0006C8  0100               	movlb	0	; () banked
   966  0006CA  0100               	movlb	0	; () banked
   967  0006CC  6FA9               	movwf	(init_uart_recv@uc+1)& (0+255),b
   968  0006CE  0101               	movlb	1	; () banked
   969  0006D0  0EB4               	movlw	low main@uc
   970  0006D2  0100               	movlb	0	; () banked
   971  0006D4  0100               	movlb	0	; () banked
   972  0006D6  6FA8               	movwf	init_uart_recv@uc& (0+255),b
   973  0006D8  ECD4  F00D         	call	_init_uart_recv	;wreg free
   974                           
   975                           ;main.c: 141: init_i2c(&ic);
   976  0006DC  0101               	movlb	1	; () banked
   977  0006DE  0E01               	movlw	high main@ic
   978  0006E0  0100               	movlb	0	; () banked
   979  0006E2  0100               	movlb	0	; () banked
   980  0006E4  6FA9               	movwf	(init_i2c@ic+1)& (0+255),b
   981  0006E6  0101               	movlb	1	; () banked
   982  0006E8  0EBB               	movlw	low main@ic
   983  0006EA  0100               	movlb	0	; () banked
   984  0006EC  0100               	movlb	0	; () banked
   985  0006EE  6FA8               	movwf	init_i2c@ic& (0+255),b
   986  0006F0  EC1C  F00B         	call	_init_i2c	;wreg free
   987                           
   988                           ;main.c: 144: init_timer1_lthread(&t1thread_data);
   989  0006F4  0101               	movlb	1	; () banked
   990  0006F6  0E01               	movlw	high main@t1thread_data
   991  0006F8  0100               	movlb	0	; () banked
   992  0006FA  0100               	movlb	0	; () banked
   993  0006FC  6FA9               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   994  0006FE  0101               	movlb	1	; () banked
   995  000700  0EB2               	movlw	low main@t1thread_data
   996  000702  0100               	movlb	0	; () banked
   997  000704  0100               	movlb	0	; () banked
   998  000706  6FA8               	movwf	init_timer1_lthread@tptr& (0+255),b
   999  000708  EC15  F00E         	call	_init_timer1_lthread	;wreg free
  1000                           
  1001                           ;main.c: 147: init_queues();
  1002  00070C  ECE5  F00A         	call	_init_queues	;wreg free
  1003                           
  1004                           ;main.c: 149: initADC();
  1005  000710  EC10  F00C         	call	_initADC	;wreg free
  1006                           
  1007                           ;main.c: 152: TRISB = 0x0;
  1008  000714  0E00               	movlw	0
  1009  000716  6E93               	movwf	3987,c	;volatile
  1010                           
  1011                           ;main.c: 153: LATB = 0x0;
  1012  000718  0E00               	movlw	0
  1013  00071A  6E8A               	movwf	3978,c	;volatile
  1014                           
  1015                           ;main.c: 166: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1016  00071C  0EF5               	movlw	245
  1017  00071E  ECF1  F00C         	call	_OpenTimer1
  1018                           
  1019                           ;main.c: 170: enable_interrupts();
  1020  000722  EC4D  F00E         	call	_enable_interrupts	;wreg free
  1021                           
  1022                           ;main.c: 175: IPR1bits.TMR1IP = 0;
  1023  000726  909F               	bcf	3999,0,c	;volatile
  1024                           
  1025                           ;main.c: 177: IPR1bits.RCIP = 0;
  1026  000728  9A9F               	bcf	3999,5,c	;volatile
  1027                           
  1028                           ;main.c: 179: IPR1bits.SSPIP = 1;
  1029  00072A  869F               	bsf	3999,3,c	;volatile
  1030                           
  1031                           ;main.c: 181: IPR1bits.ADIP = 1;
  1032  00072C  8C9F               	bsf	3999,6,c	;volatile
  1033                           
  1034                           ;main.c: 190: i2c_configure_slave(0x9E);
  1035  00072E  0E9E               	movlw	158
  1036  000730  EC88  F00D         	call	_i2c_configure_slave
  1037                           
  1038                           ;main.c: 203: PIE1bits.SSPIE = 1;
  1039  000734  869D               	bsf	3997,3,c	;volatile
  1040                           
  1041                           ;main.c: 206: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1042                           ;main.c: 207: 0b11111111 & 0b11101111, 0x19);
  1043  000736  0E00               	movlw	0
  1044  000738  0100               	movlb	0	; () banked
  1045  00073A  0100               	movlb	0	; () banked
  1046  00073C  6FA9               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1047  00073E  0E19               	movlw	25
  1048  000740  0100               	movlb	0	; () banked
  1049  000742  6FA8               	movwf	OpenUSART@spbrg& (0+255),b
  1050  000744  0E6C               	movlw	108
  1051  000746  EC62  F009         	call	_OpenUSART
  1052  00074A                     l2727:
  1053                           
  1054                           ;main.c: 231: block_on_To_msgqueues();
  1055  00074A  ECC1  F008         	call	_block_on_To_msgqueues	;wreg free
  1056                           
  1057                           ;main.c: 238: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1058  00074E  0101               	movlb	1	; () banked
  1059  000750  0E01               	movlw	high main@msgtype
  1060  000752  0100               	movlb	0	; () banked
  1061  000754  0100               	movlb	0	; () banked
  1062  000756  6FC1               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1063  000758  0101               	movlb	1	; () banked
  1064  00075A  0EB9               	movlw	low main@msgtype
  1065  00075C  0100               	movlb	0	; () banked
  1066  00075E  0100               	movlb	0	; () banked
  1067  000760  6FC0               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1068  000762  0101               	movlb	1	; () banked
  1069  000764  0E01               	movlw	high main@msgbuffer
  1070  000766  0100               	movlb	0	; () banked
  1071  000768  0100               	movlb	0	; () banked
  1072  00076A  6FC3               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1073  00076C  0101               	movlb	1	; () banked
  1074  00076E  0EA2               	movlw	low main@msgbuffer
  1075  000770  0100               	movlb	0	; () banked
  1076  000772  0100               	movlb	0	; () banked
  1077  000774  6FC2               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1078  000776  0E0A               	movlw	10
  1079  000778  EC52  F00C         	call	_ToMainHigh_recvmsg
  1080  00077C  0101               	movlb	1	; () banked
  1081  00077E  0101               	movlb	1	; () banked
  1082  000780  6FBA               	movwf	main@length& (0+255),b
  1083                           
  1084                           ; BSR set to: 1
  1085                           ;main.c: 239: if (length < 0) {
  1086  000782  0101               	movlb	1	; () banked
  1087  000784  0101               	movlb	1	; () banked
  1088  000786  BFBA               	btfsc	main@length& (0+255),7,b
  1089  000788  D08D               	goto	l2761
  1090  00078A  D07D               	goto	l2759
  1091  00078C                     l2735:
  1092                           
  1093                           ; BSR set to: 1
  1094                           ;main.c: 247: {
  1095                           ;main.c: 248: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1096  00078C  0101               	movlb	1	; () banked
  1097  00078E  0E01               	movlw	high main@t0thread_data
  1098  000790  0100               	movlb	0	; () banked
  1099  000792  0100               	movlb	0	; () banked
  1100  000794  6FA9               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1101  000796  0101               	movlb	1	; () banked
  1102  000798  0EAF               	movlw	low main@t0thread_data
  1103  00079A  0100               	movlb	0	; () banked
  1104  00079C  0100               	movlb	0	; () banked
  1105  00079E  6FA8               	movwf	timer0_lthread@tptr& (0+255),b
  1106  0007A0  0101               	movlb	1	; () banked
  1107  0007A2  0100               	movlb	0	; () banked
  1108  0007A4  C1B9  F0AA         	movff	main@msgtype,timer0_lthread@msgtype
  1109  0007A8  0100               	movlb	0	; () banked
  1110  0007AA  0100               	movlb	0	; () banked
  1111  0007AC  6BAB               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1112  0007AE  0101               	movlb	1	; () banked
  1113  0007B0  0101               	movlb	1	; () banked
  1114  0007B2  51BA               	movf	main@length& (0+255),w,b
  1115  0007B4  0100               	movlb	0	; () banked
  1116  0007B6  0100               	movlb	0	; () banked
  1117  0007B8  6FAC               	movwf	timer0_lthread@length& (0+255),b
  1118  0007BA  0100               	movlb	0	; () banked
  1119  0007BC  6BAD               	clrf	(timer0_lthread@length+1)& (0+255),b
  1120  0007BE  0100               	movlb	0	; () banked
  1121  0007C0  BFAC               	btfsc	timer0_lthread@length& (0+255),7,b
  1122  0007C2  07AD               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1123  0007C4  0101               	movlb	1	; () banked
  1124  0007C6  0E01               	movlw	high main@msgbuffer
  1125  0007C8  0100               	movlb	0	; () banked
  1126  0007CA  0100               	movlb	0	; () banked
  1127  0007CC  6FAF               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1128  0007CE  0101               	movlb	1	; () banked
  1129  0007D0  0EA2               	movlw	low main@msgbuffer
  1130  0007D2  0100               	movlb	0	; () banked
  1131  0007D4  0100               	movlb	0	; () banked
  1132  0007D6  6FAE               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1133  0007D8  EC0C  F00E         	call	_timer0_lthread	;wreg free
  1134                           
  1135                           ;main.c: 249: break;
  1136  0007DC  D063               	goto	l2761
  1137  0007DE                     l318:
  1138                           
  1139                           ;main.c: 252: case 41:
  1140                           ;main.c: 253: {
  1141                           ;main.c: 256: last_reg_recvd = msgbuffer[0];
  1142  0007DE  C1A2  F1B1         	movff	main@msgbuffer,main@last_reg_recvd
  1143                           
  1144                           ;main.c: 257: break;
  1145  0007E2  D060               	goto	l2761
  1146  0007E4                     l2737:
  1147                           
  1148                           ;main.c: 270: {
  1149                           ;main.c: 271: length = 2;
  1150  0007E4  0100               	movlb	0	; () banked
  1151  0007E6  6FCC               	movwf	??_main& (0+255),b
  1152  0007E8  0E02               	movlw	2
  1153  0007EA  0101               	movlb	1	; () banked
  1154  0007EC  0101               	movlb	1	; () banked
  1155  0007EE  6FBA               	movwf	main@length& (0+255),b
  1156  0007F0  0100               	movlb	0	; () banked
  1157  0007F2  51CC               	movf	??_main& (0+255),w,b
  1158                           
  1159                           ; BSR set to: 0
  1160                           ;main.c: 273: msgbuffer[0] = returnADCValue();
  1161  0007F4  EC43  F00D         	call	_returnADCValue	;wreg free
  1162  0007F8  0100               	movlb	0	; () banked
  1163  0007FA  0100               	movlb	0	; () banked
  1164  0007FC  51A8               	movf	?_returnADCValue& (0+255),w,b
  1165  0007FE  0101               	movlb	1	; () banked
  1166  000800  0101               	movlb	1	; () banked
  1167  000802  6FA2               	movwf	main@msgbuffer& (0+255),b
  1168                           
  1169                           ; BSR set to: 1
  1170                           ;main.c: 274: msgbuffer[1] = 0xAA;
  1171  000804  0100               	movlb	0	; () banked
  1172  000806  6FCC               	movwf	??_main& (0+255),b
  1173  000808  0EAA               	movlw	170
  1174  00080A  0101               	movlb	1	; () banked
  1175  00080C  0101               	movlb	1	; () banked
  1176  00080E  6FA3               	movwf	(main@msgbuffer+1)& (0+255),b
  1177  000810  0100               	movlb	0	; () banked
  1178  000812  51CC               	movf	??_main& (0+255),w,b
  1179                           
  1180                           ;main.c: 275: break;
  1181  000814  D028               	goto	l2755
  1182  000816                     l2743:
  1183                           
  1184                           ;main.c: 278: {
  1185                           ;main.c: 279: length = 1;
  1186  000816  0100               	movlb	0	; () banked
  1187  000818  6FCC               	movwf	??_main& (0+255),b
  1188  00081A  0E01               	movlw	1
  1189  00081C  0101               	movlb	1	; () banked
  1190  00081E  0101               	movlb	1	; () banked
  1191  000820  6FBA               	movwf	main@length& (0+255),b
  1192  000822  0100               	movlb	0	; () banked
  1193  000824  51CC               	movf	??_main& (0+255),w,b
  1194                           
  1195                           ; BSR set to: 0
  1196                           ;main.c: 281: msgbuffer[0] = returnADCValue();
  1197  000826  EC43  F00D         	call	_returnADCValue	;wreg free
  1198  00082A  D00A               	goto	L1
  1199  00082C                     l2747:
  1200                           
  1201                           ; BSR set to: 1
  1202                           ;main.c: 285: {
  1203                           ;main.c: 286: length = 1;
  1204  00082C  0100               	movlb	0	; () banked
  1205  00082E  6FCC               	movwf	??_main& (0+255),b
  1206  000830  0E01               	movlw	1
  1207  000832  0101               	movlb	1	; () banked
  1208  000834  0101               	movlb	1	; () banked
  1209  000836  6FBA               	movwf	main@length& (0+255),b
  1210  000838  0100               	movlb	0	; () banked
  1211  00083A  51CC               	movf	??_main& (0+255),w,b
  1212                           
  1213                           ; BSR set to: 0
  1214                           ;main.c: 288: msgbuffer[0] = returnADCValue();
  1215  00083C  EC43  F00D         	call	_returnADCValue	;wreg free
  1216  000840                     L1:
  1217  000840  0100               	movlb	0	; () banked
  1218  000842  0100               	movlb	0	; () banked
  1219  000844  51A8               	movf	?_returnADCValue& (0+255),w,b
  1220  000846  0101               	movlb	1	; () banked
  1221  000848  0101               	movlb	1	; () banked
  1222  00084A  6FA2               	movwf	main@msgbuffer& (0+255),b
  1223                           
  1224                           ;main.c: 289: break;
  1225  00084C  D00C               	goto	l2755
  1226  00084E                     l2753:
  1227  00084E  0101               	movlb	1	; () banked
  1228  000850  0101               	movlb	1	; () banked
  1229  000852  51B1               	movf	main@last_reg_recvd& (0+255),w,b
  1230                           
  1231                           ; Switch size 1, requested type "space"
  1232                           ; Number of cases is 3, Range of values is 168 to 170
  1233                           ; switch strategies available:
  1234                           ; Name         Instructions Cycles
  1235                           ; simple_byte           10     6 (average)
  1236                           ;	Chosen strategy is simple_byte
  1237  000854  0AA8               	xorlw	168	; case 168
  1238  000856  B4D8               	btfsc	status,2,c
  1239  000858  D7DE               	goto	l2743
  1240  00085A  0A01               	xorlw	1	; case 169
  1241  00085C  B4D8               	btfsc	status,2,c
  1242  00085E  D7E6               	goto	l2747
  1243  000860  0A03               	xorlw	3	; case 170
  1244  000862  B4D8               	btfsc	status,2,c
  1245  000864  D7BF               	goto	l2737
  1246  000866                     l2755:
  1247                           
  1248                           ;main.c: 292: start_i2c_slave_reply(length, msgbuffer);
  1249  000866  0101               	movlb	1	; () banked
  1250  000868  0E01               	movlw	high main@msgbuffer
  1251  00086A  0100               	movlb	0	; () banked
  1252  00086C  0100               	movlb	0	; () banked
  1253  00086E  6FA9               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1254  000870  0101               	movlb	1	; () banked
  1255  000872  0EA2               	movlw	low main@msgbuffer
  1256  000874  0100               	movlb	0	; () banked
  1257  000876  0100               	movlb	0	; () banked
  1258  000878  6FA8               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1259  00087A  0101               	movlb	1	; () banked
  1260  00087C  0101               	movlb	1	; () banked
  1261  00087E  51BA               	movf	main@length& (0+255),w,b
  1262  000880  EC6B  F005         	call	_start_i2c_slave_reply
  1263                           
  1264                           ;main.c: 293: break;
  1265  000884  D00F               	goto	l2761
  1266  000886                     l2759:
  1267  000886  0101               	movlb	1	; () banked
  1268  000888  0101               	movlb	1	; () banked
  1269  00088A  51B9               	movf	main@msgtype& (0+255),w,b
  1270                           
  1271                           ; Switch size 1, requested type "space"
  1272                           ; Number of cases is 4, Range of values is 10 to 42
  1273                           ; switch strategies available:
  1274                           ; Name         Instructions Cycles
  1275                           ; simple_byte           13     7 (average)
  1276                           ;	Chosen strategy is simple_byte
  1277  00088C  0A0A               	xorlw	10	; case 10
  1278  00088E  B4D8               	btfsc	status,2,c
  1279  000890  D77D               	goto	l2735
  1280  000892  0A22               	xorlw	34	; case 40
  1281  000894  B4D8               	btfsc	status,2,c
  1282  000896  D7A3               	goto	l318
  1283  000898  0A01               	xorlw	1	; case 41
  1284  00089A  B4D8               	btfsc	status,2,c
  1285  00089C  D7A0               	goto	l318
  1286  00089E  0A03               	xorlw	3	; case 42
  1287  0008A0  B4D8               	btfsc	status,2,c
  1288  0008A2  D7D5               	goto	l2753
  1289  0008A4                     l2761:
  1290                           
  1291                           ;main.c: 301: }
  1292                           ;main.c: 304: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1293  0008A4  0101               	movlb	1	; () banked
  1294  0008A6  0E01               	movlw	high main@msgtype
  1295  0008A8  0100               	movlb	0	; () banked
  1296  0008AA  0100               	movlb	0	; () banked
  1297  0008AC  6FC1               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1298  0008AE  0101               	movlb	1	; () banked
  1299  0008B0  0EB9               	movlw	low main@msgtype
  1300  0008B2  0100               	movlb	0	; () banked
  1301  0008B4  0100               	movlb	0	; () banked
  1302  0008B6  6FC0               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1303  0008B8  0101               	movlb	1	; () banked
  1304  0008BA  0E01               	movlw	high main@msgbuffer
  1305  0008BC  0100               	movlb	0	; () banked
  1306  0008BE  0100               	movlb	0	; () banked
  1307  0008C0  6FC3               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1308  0008C2  0101               	movlb	1	; () banked
  1309  0008C4  0EA2               	movlw	low main@msgbuffer
  1310  0008C6  0100               	movlb	0	; () banked
  1311  0008C8  0100               	movlb	0	; () banked
  1312  0008CA  6FC2               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1313  0008CC  0E0A               	movlw	10
  1314  0008CE  EC31  F00C         	call	_ToMainLow_recvmsg
  1315  0008D2  0101               	movlb	1	; () banked
  1316  0008D4  0101               	movlb	1	; () banked
  1317  0008D6  6FBA               	movwf	main@length& (0+255),b
  1318                           
  1319                           ; BSR set to: 1
  1320                           ;main.c: 305: if (length < 0) {
  1321  0008D8  0101               	movlb	1	; () banked
  1322  0008DA  0101               	movlb	1	; () banked
  1323  0008DC  BFBA               	btfsc	main@length& (0+255),7,b
  1324  0008DE  D735               	goto	l2727
  1325  0008E0  D052               	goto	l2773
  1326  0008E2                     l2767:
  1327                           
  1328                           ; BSR set to: 1
  1329                           ;main.c: 313: {
  1330                           ;main.c: 314: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1331  0008E2  0101               	movlb	1	; () banked
  1332  0008E4  0E01               	movlw	high main@t1thread_data
  1333  0008E6  0100               	movlb	0	; () banked
  1334  0008E8  0100               	movlb	0	; () banked
  1335  0008EA  6FC3               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1336  0008EC  0101               	movlb	1	; () banked
  1337  0008EE  0EB2               	movlw	low main@t1thread_data
  1338  0008F0  0100               	movlb	0	; () banked
  1339  0008F2  0100               	movlb	0	; () banked
  1340  0008F4  6FC2               	movwf	timer1_lthread@tptr& (0+255),b
  1341  0008F6  0101               	movlb	1	; () banked
  1342  0008F8  0100               	movlb	0	; () banked
  1343  0008FA  C1B9  F0C4         	movff	main@msgtype,timer1_lthread@msgtype
  1344  0008FE  0100               	movlb	0	; () banked
  1345  000900  0100               	movlb	0	; () banked
  1346  000902  6BC5               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1347  000904  0101               	movlb	1	; () banked
  1348  000906  0101               	movlb	1	; () banked
  1349  000908  51BA               	movf	main@length& (0+255),w,b
  1350  00090A  0100               	movlb	0	; () banked
  1351  00090C  0100               	movlb	0	; () banked
  1352  00090E  6FC6               	movwf	timer1_lthread@length& (0+255),b
  1353  000910  0100               	movlb	0	; () banked
  1354  000912  6BC7               	clrf	(timer1_lthread@length+1)& (0+255),b
  1355  000914  0100               	movlb	0	; () banked
  1356  000916  BFC6               	btfsc	timer1_lthread@length& (0+255),7,b
  1357  000918  07C7               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1358  00091A  0101               	movlb	1	; () banked
  1359  00091C  0E01               	movlw	high main@msgbuffer
  1360  00091E  0100               	movlb	0	; () banked
  1361  000920  0100               	movlb	0	; () banked
  1362  000922  6FC9               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1363  000924  0101               	movlb	1	; () banked
  1364  000926  0EA2               	movlw	low main@msgbuffer
  1365  000928  0100               	movlb	0	; () banked
  1366  00092A  0100               	movlb	0	; () banked
  1367  00092C  6FC8               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1368  00092E  ECAC  F00A         	call	_timer1_lthread	;wreg free
  1369                           
  1370                           ;main.c: 315: break;
  1371  000932  D70B               	goto	l2727
  1372  000934                     l2769:
  1373                           
  1374                           ;main.c: 318: case 31:
  1375                           ;main.c: 319: {
  1376                           ;main.c: 320: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1377  000934  0101               	movlb	1	; () banked
  1378  000936  0E01               	movlw	high main@uthread_data
  1379  000938  0100               	movlb	0	; () banked
  1380  00093A  0100               	movlb	0	; () banked
  1381  00093C  6FA9               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1382  00093E  0101               	movlb	1	; () banked
  1383  000940  0EAD               	movlw	low main@uthread_data
  1384  000942  0100               	movlb	0	; () banked
  1385  000944  0100               	movlb	0	; () banked
  1386  000946  6FA8               	movwf	uart_lthread@uptr& (0+255),b
  1387  000948  0101               	movlb	1	; () banked
  1388  00094A  0100               	movlb	0	; () banked
  1389  00094C  C1B9  F0AA         	movff	main@msgtype,uart_lthread@msgtype
  1390  000950  0100               	movlb	0	; () banked
  1391  000952  0100               	movlb	0	; () banked
  1392  000954  6BAB               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1393  000956  0101               	movlb	1	; () banked
  1394  000958  0101               	movlb	1	; () banked
  1395  00095A  51BA               	movf	main@length& (0+255),w,b
  1396  00095C  0100               	movlb	0	; () banked
  1397  00095E  0100               	movlb	0	; () banked
  1398  000960  6FAC               	movwf	uart_lthread@length& (0+255),b
  1399  000962  0100               	movlb	0	; () banked
  1400  000964  6BAD               	clrf	(uart_lthread@length+1)& (0+255),b
  1401  000966  0100               	movlb	0	; () banked
  1402  000968  BFAC               	btfsc	uart_lthread@length& (0+255),7,b
  1403  00096A  07AD               	decf	(uart_lthread@length+1)& (0+255),f,b
  1404  00096C  0101               	movlb	1	; () banked
  1405  00096E  0E01               	movlw	high main@msgbuffer
  1406  000970  0100               	movlb	0	; () banked
  1407  000972  0100               	movlb	0	; () banked
  1408  000974  6FAF               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1409  000976  0101               	movlb	1	; () banked
  1410  000978  0EA2               	movlw	low main@msgbuffer
  1411  00097A  0100               	movlb	0	; () banked
  1412  00097C  0100               	movlb	0	; () banked
  1413  00097E  6FAE               	movwf	uart_lthread@msgbuffer& (0+255),b
  1414  000980  ECD2  F00C         	call	_uart_lthread	;wreg free
  1415                           
  1416                           ;main.c: 321: break;
  1417  000984  D6E2               	goto	l2727
  1418  000986                     l2773:
  1419  000986  0101               	movlb	1	; () banked
  1420  000988  0101               	movlb	1	; () banked
  1421  00098A  51B9               	movf	main@msgtype& (0+255),w,b
  1422                           
  1423                           ; Switch size 1, requested type "space"
  1424                           ; Number of cases is 3, Range of values is 11 to 31
  1425                           ; switch strategies available:
  1426                           ; Name         Instructions Cycles
  1427                           ; simple_byte           10     6 (average)
  1428                           ;	Chosen strategy is simple_byte
  1429  00098C  0A0B               	xorlw	11	; case 11
  1430  00098E  B4D8               	btfsc	status,2,c
  1431  000990  D7A8               	goto	l2767
  1432  000992  0A15               	xorlw	21	; case 30
  1433  000994  B4D8               	btfsc	status,2,c
  1434  000996  D7CE               	goto	l2769
  1435  000998  0A01               	xorlw	1	; case 31
  1436  00099A  B4D8               	btfsc	status,2,c
  1437  00099C  D7CB               	goto	l2769
  1438  00099E  D6D5               	goto	l2727
  1439  0009A0                     __end_of_main:
  1440                           	opt stack 0
  1441                           tblptru	equ	0xFF8
  1442                           tblptrh	equ	0xFF7
  1443                           tblptrl	equ	0xFF6
  1444                           tablat	equ	0xFF5
  1445                           postinc0	equ	0xFEE
  1446                           wreg	equ	0xFE8
  1447                           status	equ	0xFD8
  1448                           
  1449 ;; *************** function _uart_lthread *****************
  1450 ;; Defined at:
  1451 ;;		line 9 in file "../src/uart_thread.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;  uptr            2   40[BANK0 ] PTR struct __uart_thread
  1454 ;;		 -> main@uthread_data(2), 
  1455 ;;  msgtype         2   42[BANK0 ] int 
  1456 ;;  length          2   44[BANK0 ] int 
  1457 ;;  msgbuffer       2   46[BANK0 ] PTR unsigned char 
  1458 ;;		 -> main@msgbuffer(11), 
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;		None
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  2   40[BANK0 ] int 
  1463 ;; Registers used:
  1464 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1470 ;;      Params:         0       8       0       0       0
  1471 ;;      Locals:         0       0       0       0       0
  1472 ;;      Temps:          0       0       0       0       0
  1473 ;;      Totals:         0       8       0       0       0
  1474 ;;Total ram usage:        8 bytes
  1475 ;; Hardware stack levels used:    1
  1476 ;; Hardware stack levels required when called:   10
  1477 ;; This function calls:
  1478 ;;		Nothing
  1479 ;; This function is called by:
  1480 ;;		_main
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           	psect	text1
  1485  0019A4                     __ptext1:
  1486                           	opt stack 0
  1487  0019A4                     _uart_lthread:
  1488                           	opt stack 19
  1489                           
  1490                           ;uart_thread.c: 10: if (msgtype == 30) {
  1491                           
  1492                           ; BSR set to: 1
  1493                           ;incstack = 0
  1494  0019A4  0100               	movlb	0	; () banked
  1495  0019A6  0100               	movlb	0	; () banked
  1496  0019A8  51AA               	movf	uart_lthread@msgtype& (0+255),w,b
  1497  0019AA  0A1E               	xorlw	30
  1498  0019AC  11AB               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1499  0019AE  B4D8               	btfsc	status,2,c
  1500  0019B0  0012               	return	
  1501                           
  1502                           ; BSR set to: 0
  1503                           
  1504                           ; BSR set to: 0
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;uart_thread.c: 11: } else if (msgtype == 31) {
  1508  0019B2  0100               	movlb	0	; () banked
  1509  0019B4  0100               	movlb	0	; () banked
  1510  0019B6  51AA               	movf	uart_lthread@msgtype& (0+255),w,b
  1511  0019B8  0A1F               	xorlw	31
  1512  0019BA  11AB               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1513  0019BC  A4D8               	btfss	status,2,c
  1514  0019BE  0012               	return	
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;uart_thread.c: 14: msgbuffer[length] = '\0';
  1518  0019C0  0100               	movlb	0	; () banked
  1519  0019C2  0100               	movlb	0	; () banked
  1520  0019C4  51AC               	movf	uart_lthread@length& (0+255),w,b
  1521  0019C6  0100               	movlb	0	; () banked
  1522  0019C8  0100               	movlb	0	; () banked
  1523  0019CA  25AE               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1524  0019CC  6ED9               	movwf	fsr2l,c
  1525  0019CE  0100               	movlb	0	; () banked
  1526  0019D0  0100               	movlb	0	; () banked
  1527  0019D2  51AD               	movf	(uart_lthread@length+1)& (0+255),w,b
  1528  0019D4  0100               	movlb	0	; () banked
  1529  0019D6  0100               	movlb	0	; () banked
  1530  0019D8  21AF               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1531  0019DA  6EDA               	movwf	fsr2h,c
  1532  0019DC  0E00               	movlw	0
  1533  0019DE  6EDF               	movwf	indf2,c
  1534  0019E0  0012               	return	
  1535  0019E2                     __end_of_uart_lthread:
  1536                           	opt stack 0
  1537                           tblptru	equ	0xFF8
  1538                           tblptrh	equ	0xFF7
  1539                           tblptrl	equ	0xFF6
  1540                           tablat	equ	0xFF5
  1541                           postinc0	equ	0xFEE
  1542                           wreg	equ	0xFE8
  1543                           indf2	equ	0xFDF
  1544                           fsr2h	equ	0xFDA
  1545                           fsr2l	equ	0xFD9
  1546                           status	equ	0xFD8
  1547                           
  1548 ;; *************** function _timer1_lthread *****************
  1549 ;; Defined at:
  1550 ;;		line 14 in file "../src/timer1_thread.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;  tptr            2   66[BANK0 ] PTR struct __timer1_thre
  1553 ;;		 -> main@t1thread_data(2), 
  1554 ;;  msgtype         2   68[BANK0 ] int 
  1555 ;;  length          2   70[BANK0 ] int 
  1556 ;;  msgbuffer       2   72[BANK0 ] PTR unsigned char 
  1557 ;;		 -> main@msgbuffer(11), 
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;  retval          1   75[BANK0 ] char 
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  2   66[BANK0 ] int 
  1562 ;; Registers used:
  1563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1569 ;;      Params:         0       8       0       0       0
  1570 ;;      Locals:         0       1       0       0       0
  1571 ;;      Temps:          0       1       0       0       0
  1572 ;;      Totals:         0      10       0       0       0
  1573 ;;Total ram usage:       10 bytes
  1574 ;; Hardware stack levels used:    1
  1575 ;; Hardware stack levels required when called:   13
  1576 ;; This function calls:
  1577 ;;		_FromMainHigh_sendmsg
  1578 ;;		___lwmod
  1579 ;; This function is called by:
  1580 ;;		_main
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           	psect	text2
  1585  001558                     __ptext2:
  1586                           	opt stack 0
  1587  001558                     _timer1_lthread:
  1588                           	opt stack 16
  1589                           
  1590                           ;timer1_thread.c: 15: signed char retval;
  1591                           ;timer1_thread.c: 17: tptr->msgcount++;
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;incstack = 0
  1595  001558  C0C2  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1596  00155C  C0C3  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1597  001560  2ADE               	incf	postinc2,f,c
  1598  001562  0E00               	movlw	0
  1599  001564  22DD               	addwfc	postdec2,f,c
  1600                           
  1601                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1602  001566  C0C2  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1603  00156A  C0C3  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1604  00156E  0100               	movlb	0	; () banked
  1605  001570  CFDE F0A8          	movff	postinc2,___lwmod@dividend
  1606  001574  0100               	movlb	0	; () banked
  1607  001576  CFDD F0A9          	movff	postdec2,___lwmod@dividend+1
  1608  00157A  0E00               	movlw	0
  1609  00157C  0100               	movlb	0	; () banked
  1610  00157E  0100               	movlb	0	; () banked
  1611  001580  6FAB               	movwf	(___lwmod@divisor+1)& (0+255),b
  1612  001582  0E0A               	movlw	10
  1613  001584  0100               	movlb	0	; () banked
  1614  001586  6FAA               	movwf	___lwmod@divisor& (0+255),b
  1615  001588  ECAB  F009         	call	___lwmod	;wreg free
  1616  00158C  0100               	movlb	0	; () banked
  1617  00158E  0100               	movlb	0	; () banked
  1618  001590  51A8               	movf	?___lwmod& (0+255),w,b
  1619  001592  0A09               	xorlw	9
  1620  001594  0100               	movlb	0	; () banked
  1621  001596  11A9               	iorwf	(?___lwmod+1)& (0+255),w,b
  1622  001598  A4D8               	btfss	status,2,c
  1623  00159A  0012               	return	
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1627  00159C  0100               	movlb	0	; () banked
  1628  00159E  6FCA               	movwf	??_timer1_lthread& (0+255),b
  1629  0015A0  0E14               	movlw	20
  1630  0015A2  0100               	movlb	0	; () banked
  1631  0015A4  0100               	movlb	0	; () banked
  1632  0015A6  6FBE               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1633  0015A8  0100               	movlb	0	; () banked
  1634  0015AA  51CA               	movf	??_timer1_lthread& (0+255),w,b
  1635  0015AC  0100               	movlb	0	; () banked
  1636  0015AE  0100               	movlb	0	; () banked
  1637  0015B0  C0C3  F0C0         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1638  0015B4  0100               	movlb	0	; () banked
  1639  0015B6  0100               	movlb	0	; () banked
  1640  0015B8  C0C2  F0BF         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1641  0015BC  0E02               	movlw	2
  1642  0015BE  EC0D  F00D         	call	_FromMainHigh_sendmsg
  1643  0015C2  0100               	movlb	0	; () banked
  1644  0015C4  0100               	movlb	0	; () banked
  1645  0015C6  6FCB               	movwf	timer1_lthread@retval& (0+255),b
  1646  0015C8  0012               	return	
  1647  0015CA                     __end_of_timer1_lthread:
  1648                           	opt stack 0
  1649                           tblptru	equ	0xFF8
  1650                           tblptrh	equ	0xFF7
  1651                           tblptrl	equ	0xFF6
  1652                           tablat	equ	0xFF5
  1653                           postinc0	equ	0xFEE
  1654                           wreg	equ	0xFE8
  1655                           indf2	equ	0xFDF
  1656                           postinc2	equ	0xFDE
  1657                           postdec2	equ	0xFDD
  1658                           fsr2h	equ	0xFDA
  1659                           fsr2l	equ	0xFD9
  1660                           status	equ	0xFD8
  1661                           
  1662 ;; *************** function ___lwmod *****************
  1663 ;; Defined at:
  1664 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/common/lwmod.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  dividend        2   40[BANK0 ] unsigned int 
  1667 ;;  divisor         2   42[BANK0 ] unsigned int 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  counter         1   45[BANK0 ] unsigned char 
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  2   40[BANK0 ] unsigned int 
  1672 ;; Registers used:
  1673 ;;		wreg, status,2, status,0
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1679 ;;      Params:         0       4       0       0       0
  1680 ;;      Locals:         0       1       0       0       0
  1681 ;;      Temps:          0       1       0       0       0
  1682 ;;      Totals:         0       6       0       0       0
  1683 ;;Total ram usage:        6 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:   10
  1686 ;; This function calls:
  1687 ;;		Nothing
  1688 ;; This function is called by:
  1689 ;;		_timer1_lthread
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           	psect	text3
  1694  001356                     __ptext3:
  1695                           	opt stack 0
  1696  001356                     ___lwmod:
  1697                           	opt stack 18
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;incstack = 0
  1701  001356  0100               	movlb	0	; () banked
  1702  001358  0100               	movlb	0	; () banked
  1703  00135A  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1704  00135C  11AA               	iorwf	___lwmod@divisor& (0+255),w,b
  1705  00135E  B4D8               	btfsc	status,2,c
  1706  001360  D03A               	goto	l1035
  1707                           
  1708                           ; BSR set to: 0
  1709  001362  0100               	movlb	0	; () banked
  1710  001364  6FAC               	movwf	??___lwmod& (0+255),b
  1711  001366  0E01               	movlw	1
  1712  001368  0100               	movlb	0	; () banked
  1713  00136A  0100               	movlb	0	; () banked
  1714  00136C  6FAD               	movwf	___lwmod@counter& (0+255),b
  1715  00136E  0100               	movlb	0	; () banked
  1716  001370  51AC               	movf	??___lwmod& (0+255),w,b
  1717  001372  D009               	goto	l2873
  1718  001374                     l2871:
  1719                           
  1720                           ; BSR set to: 0
  1721  001374  0100               	movlb	0	; () banked
  1722  001376  0100               	movlb	0	; () banked
  1723  001378  0100               	movlb	0	; () banked
  1724  00137A  90D8               	bcf	status,0,c
  1725  00137C  37AA               	rlcf	___lwmod@divisor& (0+255),f,b
  1726  00137E  37AB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1727  001380  0100               	movlb	0	; () banked
  1728  001382  0100               	movlb	0	; () banked
  1729  001384  2BAD               	incf	___lwmod@counter& (0+255),f,b
  1730  001386                     l2873:
  1731                           
  1732                           ; BSR set to: 0
  1733  001386  0100               	movlb	0	; () banked
  1734  001388  0100               	movlb	0	; () banked
  1735  00138A  AFAB               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1736  00138C  D7F3               	goto	l2871
  1737  00138E                     l2875:
  1738                           
  1739                           ; BSR set to: 0
  1740  00138E  0100               	movlb	0	; () banked
  1741  001390  0100               	movlb	0	; () banked
  1742  001392  51AA               	movf	___lwmod@divisor& (0+255),w,b
  1743  001394  0100               	movlb	0	; () banked
  1744  001396  0100               	movlb	0	; () banked
  1745  001398  5DA8               	subwf	___lwmod@dividend& (0+255),w,b
  1746  00139A  0100               	movlb	0	; () banked
  1747  00139C  0100               	movlb	0	; () banked
  1748  00139E  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1749  0013A0  0100               	movlb	0	; () banked
  1750  0013A2  0100               	movlb	0	; () banked
  1751  0013A4  59A9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1752  0013A6  A0D8               	btfss	status,0,c
  1753  0013A8  D00C               	goto	l2879
  1754                           
  1755                           ; BSR set to: 0
  1756  0013AA  0100               	movlb	0	; () banked
  1757  0013AC  0100               	movlb	0	; () banked
  1758  0013AE  51AA               	movf	___lwmod@divisor& (0+255),w,b
  1759  0013B0  0100               	movlb	0	; () banked
  1760  0013B2  0100               	movlb	0	; () banked
  1761  0013B4  5FA8               	subwf	___lwmod@dividend& (0+255),f,b
  1762  0013B6  0100               	movlb	0	; () banked
  1763  0013B8  0100               	movlb	0	; () banked
  1764  0013BA  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1765  0013BC  0100               	movlb	0	; () banked
  1766  0013BE  0100               	movlb	0	; () banked
  1767  0013C0  5BA9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1768  0013C2                     l2879:
  1769                           
  1770                           ; BSR set to: 0
  1771  0013C2  0100               	movlb	0	; () banked
  1772  0013C4  0100               	movlb	0	; () banked
  1773  0013C6  0100               	movlb	0	; () banked
  1774  0013C8  90D8               	bcf	status,0,c
  1775  0013CA  33AB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1776  0013CC  33AA               	rrcf	___lwmod@divisor& (0+255),f,b
  1777                           
  1778                           ; BSR set to: 0
  1779  0013CE  0100               	movlb	0	; () banked
  1780  0013D0  0100               	movlb	0	; () banked
  1781  0013D2  2FAD               	decfsz	___lwmod@counter& (0+255),f,b
  1782  0013D4  D7DC               	goto	l2875
  1783  0013D6                     l1035:
  1784                           
  1785                           ; BSR set to: 0
  1786  0013D6  C0A8  F0A8         	movff	___lwmod@dividend,?___lwmod
  1787  0013DA  C0A9  F0A9         	movff	___lwmod@dividend+1,?___lwmod+1
  1788                           
  1789                           ; BSR set to: 0
  1790  0013DE  0012               	return	
  1791  0013E0                     __end_of___lwmod:
  1792                           	opt stack 0
  1793                           tblptru	equ	0xFF8
  1794                           tblptrh	equ	0xFF7
  1795                           tblptrl	equ	0xFF6
  1796                           tablat	equ	0xFF5
  1797                           postinc0	equ	0xFEE
  1798                           wreg	equ	0xFE8
  1799                           indf2	equ	0xFDF
  1800                           postinc2	equ	0xFDE
  1801                           postdec2	equ	0xFDD
  1802                           fsr2h	equ	0xFDA
  1803                           fsr2l	equ	0xFD9
  1804                           status	equ	0xFD8
  1805                           
  1806 ;; *************** function _FromMainHigh_sendmsg *****************
  1807 ;; Defined at:
  1808 ;;		line 174 in file "../src/messages.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  length          1    wreg     unsigned char 
  1811 ;;  msgtype         1   62[BANK0 ] unsigned char 
  1812 ;;  data            2   63[BANK0 ] PTR void 
  1813 ;;		 -> main@t1thread_data(2), 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;  length          1   65[BANK0 ] unsigned char 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      char 
  1818 ;; Registers used:
  1819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1825 ;;      Params:         0       3       0       0       0
  1826 ;;      Locals:         0       1       0       0       0
  1827 ;;      Temps:          0       0       0       0       0
  1828 ;;      Totals:         0       4       0       0       0
  1829 ;;Total ram usage:        4 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; Hardware stack levels required when called:   12
  1832 ;; This function calls:
  1833 ;;		_send_msg
  1834 ;; This function is called by:
  1835 ;;		_timer1_lthread
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           	psect	text4
  1840  001A1A                     __ptext4:
  1841                           	opt stack 0
  1842  001A1A                     _FromMainHigh_sendmsg:
  1843                           	opt stack 16
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;incstack = 0
  1847                           ;FromMainHigh_sendmsg@length stored from wreg
  1848  001A1A  CFE8 F0C1          	movff	wreg,FromMainHigh_sendmsg@length
  1849                           
  1850                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1851  001A1E  0102               	movlb	2	; () banked
  1852  001A20  0E02               	movlw	high _FromMainHigh_MQ
  1853  001A22  0100               	movlb	0	; () banked
  1854  001A24  0100               	movlb	0	; () banked
  1855  001A26  6FB3               	movwf	(send_msg@qptr+1)& (0+255),b
  1856  001A28  0102               	movlb	2	; () banked
  1857  001A2A  0E00               	movlw	low _FromMainHigh_MQ
  1858  001A2C  0100               	movlb	0	; () banked
  1859  001A2E  0100               	movlb	0	; () banked
  1860  001A30  6FB2               	movwf	send_msg@qptr& (0+255),b
  1861  001A32  C0C1  F0B4         	movff	FromMainHigh_sendmsg@length,send_msg@length
  1862  001A36  C0BE  F0B5         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  1863  001A3A  0100               	movlb	0	; () banked
  1864  001A3C  0100               	movlb	0	; () banked
  1865  001A3E  C0C0  F0B7         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  1866  001A42  0100               	movlb	0	; () banked
  1867  001A44  0100               	movlb	0	; () banked
  1868  001A46  C0BF  F0B6         	movff	FromMainHigh_sendmsg@data,send_msg@data
  1869  001A4A  ECF2  F005         	call	_send_msg	;wreg free
  1870  001A4E  0012               	return	
  1871  001A50                     __end_of_FromMainHigh_sendmsg:
  1872                           	opt stack 0
  1873                           tblptru	equ	0xFF8
  1874                           tblptrh	equ	0xFF7
  1875                           tblptrl	equ	0xFF6
  1876                           tablat	equ	0xFF5
  1877                           postinc0	equ	0xFEE
  1878                           wreg	equ	0xFE8
  1879                           indf2	equ	0xFDF
  1880                           postinc2	equ	0xFDE
  1881                           postdec2	equ	0xFDD
  1882                           fsr2h	equ	0xFDA
  1883                           fsr2l	equ	0xFD9
  1884                           status	equ	0xFD8
  1885                           
  1886 ;; *************** function _send_msg *****************
  1887 ;; Defined at:
  1888 ;;		line 24 in file "../src/messages.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;  qptr            2   50[BANK0 ] PTR struct __msg_queue
  1891 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1892 ;;  length          1   52[BANK0 ] unsigned char 
  1893 ;;  msgtype         1   53[BANK0 ] unsigned char 
  1894 ;;  data            2   54[BANK0 ] PTR void 
  1895 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), i2c_int_handler@error_buf(3), 
  1896 ;;		 -> NULL(0), timer0_int_handler@val(2), 
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;  qmsg            2   60[BANK0 ] PTR struct __msg
  1899 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  1900 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1901 ;;  tlength         2   57[BANK0 ] unsigned int 
  1902 ;;  slot            1   59[BANK0 ] unsigned char 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      char 
  1905 ;; Registers used:
  1906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1912 ;;      Params:         0       6       0       0       0
  1913 ;;      Locals:         0       5       0       0       0
  1914 ;;      Temps:          0       1       0       0       0
  1915 ;;      Totals:         0      12       0       0       0
  1916 ;;Total ram usage:       12 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:   11
  1919 ;; This function calls:
  1920 ;;		_memcpy
  1921 ;; This function is called by:
  1922 ;;		_FromMainHigh_sendmsg
  1923 ;;		_FromMainLow_sendmsg
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text5
  1928  000BE4                     __ptext5:
  1929                           	opt stack 0
  1930  000BE4                     _send_msg:
  1931                           	opt stack 16
  1932                           
  1933                           ;messages.c: 25: unsigned char slot;
  1934                           ;messages.c: 27: msg *qmsg;
  1935                           ;messages.c: 28: size_t tlength = length;
  1936                           
  1937                           ;incstack = 0
  1938  000BE4  0100               	movlb	0	; () banked
  1939  000BE6  0100               	movlb	0	; () banked
  1940  000BE8  C0B4  F0B9         	movff	send_msg@length,send_msg@tlength
  1941  000BEC  0100               	movlb	0	; () banked
  1942  000BEE  0100               	movlb	0	; () banked
  1943  000BF0  6BBA               	clrf	(send_msg@tlength+1)& (0+255),b
  1944                           
  1945                           ; BSR set to: 0
  1946                           ;messages.c: 38: slot = qptr->cur_write_ind;
  1947  000BF2  0100               	movlb	0	; () banked
  1948  000BF4  EE20 F034          	lfsr	2,52
  1949  000BF8  0100               	movlb	0	; () banked
  1950  000BFA  51B2               	movf	send_msg@qptr& (0+255),w,b
  1951  000BFC  26D9               	addwf	fsr2l,f,c
  1952  000BFE  0100               	movlb	0	; () banked
  1953  000C00  51B3               	movf	(send_msg@qptr+1)& (0+255),w,b
  1954  000C02  22DA               	addwfc	fsr2h,f,c
  1955  000C04  50DF               	movf	indf2,w,c
  1956  000C06  0100               	movlb	0	; () banked
  1957  000C08  0100               	movlb	0	; () banked
  1958  000C0A  6FBB               	movwf	send_msg@slot& (0+255),b
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  1962  000C0C  0100               	movlb	0	; () banked
  1963  000C0E  0100               	movlb	0	; () banked
  1964  000C10  51BB               	movf	send_msg@slot& (0+255),w,b
  1965  000C12  0D0D               	mullw	13
  1966  000C14  50F3               	movf	prodl,w,c
  1967  000C16  0100               	movlb	0	; () banked
  1968  000C18  0100               	movlb	0	; () banked
  1969  000C1A  25B2               	addwf	send_msg@qptr& (0+255),w,b
  1970  000C1C  0100               	movlb	0	; () banked
  1971  000C1E  0100               	movlb	0	; () banked
  1972  000C20  6FBC               	movwf	send_msg@qmsg& (0+255),b
  1973  000C22  50F4               	movf	prodh,w,c
  1974  000C24  0100               	movlb	0	; () banked
  1975  000C26  0100               	movlb	0	; () banked
  1976  000C28  21B3               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  1977  000C2A  0100               	movlb	0	; () banked
  1978  000C2C  6FBD               	movwf	(send_msg@qmsg+1)& (0+255),b
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;messages.c: 41: if (qmsg->full != 0) {
  1982  000C2E  C0BC  FFD9         	movff	send_msg@qmsg,fsr2l
  1983  000C32  C0BD  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1984  000C36  50DF               	movf	indf2,w,c
  1985  000C38  B4D8               	btfsc	status,2,c
  1986  000C3A  D002               	goto	l2487
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;messages.c: 42: return (-1);
  1990  000C3C  0EFF               	movlw	255
  1991  000C3E  0012               	return	
  1992  000C40                     l2487:
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;messages.c: 43: }
  1996                           ;messages.c: 46: qmsg->length = length;
  1997  000C40  0100               	movlb	0	; () banked
  1998  000C42  EE20 F001          	lfsr	2,1
  1999  000C46  0100               	movlb	0	; () banked
  2000  000C48  51BC               	movf	send_msg@qmsg& (0+255),w,b
  2001  000C4A  26D9               	addwf	fsr2l,f,c
  2002  000C4C  0100               	movlb	0	; () banked
  2003  000C4E  51BD               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2004  000C50  22DA               	addwfc	fsr2h,f,c
  2005  000C52  0100               	movlb	0	; () banked
  2006  000C54  C0B4  FFDF         	movff	send_msg@length,indf2
  2007                           
  2008                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2009  000C58  0100               	movlb	0	; () banked
  2010  000C5A  EE20 F002          	lfsr	2,2
  2011  000C5E  0100               	movlb	0	; () banked
  2012  000C60  51BC               	movf	send_msg@qmsg& (0+255),w,b
  2013  000C62  26D9               	addwf	fsr2l,f,c
  2014  000C64  0100               	movlb	0	; () banked
  2015  000C66  51BD               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2016  000C68  22DA               	addwfc	fsr2h,f,c
  2017  000C6A  0100               	movlb	0	; () banked
  2018  000C6C  C0B5  FFDF         	movff	send_msg@msgtype,indf2
  2019                           
  2020                           ; BSR set to: 0
  2021                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2022  000C70  0E03               	movlw	3
  2023  000C72  0100               	movlb	0	; () banked
  2024  000C74  0100               	movlb	0	; () banked
  2025  000C76  25BC               	addwf	send_msg@qmsg& (0+255),w,b
  2026  000C78  0100               	movlb	0	; () banked
  2027  000C7A  0100               	movlb	0	; () banked
  2028  000C7C  6FA8               	movwf	memcpy@d1& (0+255),b
  2029  000C7E  0E00               	movlw	0
  2030  000C80  0100               	movlb	0	; () banked
  2031  000C82  0100               	movlb	0	; () banked
  2032  000C84  21BD               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2033  000C86  0100               	movlb	0	; () banked
  2034  000C88  6FA9               	movwf	(memcpy@d1+1)& (0+255),b
  2035  000C8A  0100               	movlb	0	; () banked
  2036  000C8C  0100               	movlb	0	; () banked
  2037  000C8E  C0B7  F0AB         	movff	send_msg@data+1,memcpy@s1+1
  2038  000C92  0100               	movlb	0	; () banked
  2039  000C94  0100               	movlb	0	; () banked
  2040  000C96  C0B6  F0AA         	movff	send_msg@data,memcpy@s1
  2041  000C9A  C0B9  F0AC         	movff	send_msg@tlength,memcpy@n
  2042  000C9E  C0BA  F0AD         	movff	send_msg@tlength+1,memcpy@n+1
  2043  000CA2  EC51  F00B         	call	_memcpy	;wreg free
  2044                           
  2045                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2046  000CA6  0100               	movlb	0	; () banked
  2047  000CA8  EE20 F034          	lfsr	2,52
  2048  000CAC  0100               	movlb	0	; () banked
  2049  000CAE  51B2               	movf	send_msg@qptr& (0+255),w,b
  2050  000CB0  26D9               	addwf	fsr2l,f,c
  2051  000CB2  0100               	movlb	0	; () banked
  2052  000CB4  51B3               	movf	(send_msg@qptr+1)& (0+255),w,b
  2053  000CB6  22DA               	addwfc	fsr2h,f,c
  2054  000CB8  0100               	movlb	0	; () banked
  2055  000CBA  EE10 F034          	lfsr	1,52
  2056  000CBE  0100               	movlb	0	; () banked
  2057  000CC0  51B2               	movf	send_msg@qptr& (0+255),w,b
  2058  000CC2  26E1               	addwf	fsr1l,f,c
  2059  000CC4  0100               	movlb	0	; () banked
  2060  000CC6  51B3               	movf	(send_msg@qptr+1)& (0+255),w,b
  2061  000CC8  22E2               	addwfc	fsr1h,f,c
  2062  000CCA  50E7               	movf	indf1,w,c
  2063  000CCC  0100               	movlb	0	; () banked
  2064  000CCE  6FB8               	movwf	??_send_msg& (0+255),b
  2065  000CD0  0100               	movlb	0	; () banked
  2066  000CD2  29B8               	incf	??_send_msg& (0+255),w,b
  2067  000CD4  0B03               	andlw	3
  2068  000CD6  6EDF               	movwf	indf2,c
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;messages.c: 59: qmsg->full = 1;
  2072  000CD8  C0BC  FFD9         	movff	send_msg@qmsg,fsr2l
  2073  000CDC  C0BD  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2074  000CE0  0E01               	movlw	1
  2075  000CE2  6EDF               	movwf	indf2,c
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;messages.c: 60: return (1);
  2079  000CE4  0E01               	movlw	1
  2080  000CE6  0012               	return	
  2081  000CE8                     __end_of_send_msg:
  2082                           	opt stack 0
  2083                           tblptru	equ	0xFF8
  2084                           tblptrh	equ	0xFF7
  2085                           tblptrl	equ	0xFF6
  2086                           tablat	equ	0xFF5
  2087                           prodh	equ	0xFF4
  2088                           prodl	equ	0xFF3
  2089                           postinc0	equ	0xFEE
  2090                           wreg	equ	0xFE8
  2091                           indf1	equ	0xFE7
  2092                           fsr1h	equ	0xFE2
  2093                           fsr1l	equ	0xFE1
  2094                           indf2	equ	0xFDF
  2095                           postinc2	equ	0xFDE
  2096                           postdec2	equ	0xFDD
  2097                           fsr2h	equ	0xFDA
  2098                           fsr2l	equ	0xFD9
  2099                           status	equ	0xFD8
  2100                           
  2101 ;; *************** function _timer0_lthread *****************
  2102 ;; Defined at:
  2103 ;;		line 9 in file "../src/timer0_thread.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  tptr            2   40[BANK0 ] PTR struct __timer0_thre
  2106 ;;		 -> main@t0thread_data(2), 
  2107 ;;  msgtype         2   42[BANK0 ] int 
  2108 ;;  length          2   44[BANK0 ] int 
  2109 ;;  msgbuffer       2   46[BANK0 ] PTR unsigned char 
  2110 ;;		 -> main@msgbuffer(11), 
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  msgval          2   48[BANK0 ] PTR unsigned int 
  2113 ;;		 -> main@msgbuffer(11), 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  2   40[BANK0 ] int 
  2116 ;; Registers used:
  2117 ;;		wreg, status,2, status,0
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2123 ;;      Params:         0       8       0       0       0
  2124 ;;      Locals:         0       2       0       0       0
  2125 ;;      Temps:          0       0       0       0       0
  2126 ;;      Totals:         0      10       0       0       0
  2127 ;;Total ram usage:       10 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:   10
  2130 ;; This function calls:
  2131 ;;		Nothing
  2132 ;; This function is called by:
  2133 ;;		_main
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text6
  2138  001C18                     __ptext6:
  2139                           	opt stack 0
  2140  001C18                     _timer0_lthread:
  2141                           	opt stack 19
  2142                           
  2143                           ;timer0_thread.c: 10: unsigned int *msgval;
  2144                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;incstack = 0
  2148  001C18  0100               	movlb	0	; () banked
  2149  001C1A  0100               	movlb	0	; () banked
  2150  001C1C  C0AF  F0B1         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2151  001C20  0100               	movlb	0	; () banked
  2152  001C22  0100               	movlb	0	; () banked
  2153  001C24  C0AE  F0B0         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2154                           
  2155                           ; BSR set to: 0
  2156  001C28  0012               	return	
  2157  001C2A                     __end_of_timer0_lthread:
  2158                           	opt stack 0
  2159                           tblptru	equ	0xFF8
  2160                           tblptrh	equ	0xFF7
  2161                           tblptrl	equ	0xFF6
  2162                           tablat	equ	0xFF5
  2163                           prodh	equ	0xFF4
  2164                           prodl	equ	0xFF3
  2165                           postinc0	equ	0xFEE
  2166                           wreg	equ	0xFE8
  2167                           indf1	equ	0xFE7
  2168                           fsr1h	equ	0xFE2
  2169                           fsr1l	equ	0xFE1
  2170                           indf2	equ	0xFDF
  2171                           postinc2	equ	0xFDE
  2172                           postdec2	equ	0xFDD
  2173                           fsr2h	equ	0xFDA
  2174                           fsr2l	equ	0xFD9
  2175                           status	equ	0xFD8
  2176                           
  2177 ;; *************** function _start_i2c_slave_reply *****************
  2178 ;; Defined at:
  2179 ;;		line 53 in file "../src/my_i2c.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;  length          1    wreg     unsigned char 
  2182 ;;  msg             2   40[BANK0 ] PTR unsigned char 
  2183 ;;		 -> main@msgbuffer(11), i2c_int_handler@msgbuffer(11), 
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;  length          1   44[BANK0 ] unsigned char 
  2186 ;; Return value:  Size  Location     Type
  2187 ;;		None               void
  2188 ;; Registers used:
  2189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2195 ;;      Params:         0       2       0       0       0
  2196 ;;      Locals:         0       1       0       0       0
  2197 ;;      Temps:          0       2       0       0       0
  2198 ;;      Totals:         0       5       0       0       0
  2199 ;;Total ram usage:        5 bytes
  2200 ;; Hardware stack levels used:    1
  2201 ;; Hardware stack levels required when called:   10
  2202 ;; This function calls:
  2203 ;;		Nothing
  2204 ;; This function is called by:
  2205 ;;		_main
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text7
  2210  000AD6                     __ptext7:
  2211                           	opt stack 0
  2212  000AD6                     _start_i2c_slave_reply:
  2213                           	opt stack 19
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;incstack = 0
  2217                           ;start_i2c_slave_reply@length stored from wreg
  2218  000AD6  CFE8 F0AC          	movff	wreg,start_i2c_slave_reply@length
  2219                           
  2220                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2221  000ADA  0100               	movlb	0	; () banked
  2222  000ADC  EE20 F019          	lfsr	2,25
  2223  000AE0  0100               	movlb	0	; () banked
  2224  000AE2  51CD               	movf	_ic_ptr& (0+255),w,b
  2225  000AE4  26D9               	addwf	fsr2l,f,c
  2226  000AE6  0100               	movlb	0	; () banked
  2227  000AE8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2228  000AEA  22DA               	addwfc	fsr2h,f,c
  2229  000AEC  0E00               	movlw	0
  2230  000AEE  6EDF               	movwf	indf2,c
  2231  000AF0  D042               	goto	l2253
  2232  000AF2                     l2249:
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2236  000AF2  0100               	movlb	0	; () banked
  2237  000AF4  EE20 F019          	lfsr	2,25
  2238  000AF8  0100               	movlb	0	; () banked
  2239  000AFA  51CD               	movf	_ic_ptr& (0+255),w,b
  2240  000AFC  26D9               	addwf	fsr2l,f,c
  2241  000AFE  0100               	movlb	0	; () banked
  2242  000B00  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2243  000B02  22DA               	addwfc	fsr2h,f,c
  2244  000B04  50DF               	movf	indf2,w,c
  2245  000B06  0100               	movlb	0	; () banked
  2246  000B08  6FAA               	movwf	??_start_i2c_slave_reply& (0+255),b
  2247  000B0A  0100               	movlb	0	; () banked
  2248  000B0C  51AA               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2249  000B0E  0D01               	mullw	1
  2250  000B10  50F3               	movf	prodl,w,c
  2251  000B12  0100               	movlb	0	; () banked
  2252  000B14  0100               	movlb	0	; () banked
  2253  000B16  25A8               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2254  000B18  6ED9               	movwf	fsr2l,c
  2255  000B1A  50F4               	movf	prodh,w,c
  2256  000B1C  0100               	movlb	0	; () banked
  2257  000B1E  0100               	movlb	0	; () banked
  2258  000B20  21A9               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2259  000B22  6EDA               	movwf	fsr2h,c
  2260  000B24  0100               	movlb	0	; () banked
  2261  000B26  EE10 F019          	lfsr	1,25
  2262  000B2A  0100               	movlb	0	; () banked
  2263  000B2C  51CD               	movf	_ic_ptr& (0+255),w,b
  2264  000B2E  26E1               	addwf	fsr1l,f,c
  2265  000B30  0100               	movlb	0	; () banked
  2266  000B32  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2267  000B34  22E2               	addwfc	fsr1h,f,c
  2268  000B36  50E7               	movf	indf1,w,c
  2269  000B38  0100               	movlb	0	; () banked
  2270  000B3A  6FAB               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2271  000B3C  0100               	movlb	0	; () banked
  2272  000B3E  51AB               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2273  000B40  0D01               	mullw	1
  2274  000B42  0E0F               	movlw	15
  2275  000B44  26F3               	addwf	prodl,f,c
  2276  000B46  0E00               	movlw	0
  2277  000B48  22F4               	addwfc	prodh,f,c
  2278  000B4A  50F3               	movf	prodl,w,c
  2279  000B4C  0100               	movlb	0	; () banked
  2280  000B4E  0100               	movlb	0	; () banked
  2281  000B50  25CD               	addwf	_ic_ptr& (0+255),w,b
  2282  000B52  6EE1               	movwf	fsr1l,c
  2283  000B54  50F4               	movf	prodh,w,c
  2284  000B56  0100               	movlb	0	; () banked
  2285  000B58  0100               	movlb	0	; () banked
  2286  000B5A  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2287  000B5C  6EE2               	movwf	fsr1h,c
  2288  000B5E  CFDF FFE7          	movff	indf2,indf1
  2289                           
  2290                           ; BSR set to: 0
  2291  000B62  0100               	movlb	0	; () banked
  2292  000B64  EE20 F019          	lfsr	2,25
  2293  000B68  0100               	movlb	0	; () banked
  2294  000B6A  51CD               	movf	_ic_ptr& (0+255),w,b
  2295  000B6C  26D9               	addwf	fsr2l,f,c
  2296  000B6E  0100               	movlb	0	; () banked
  2297  000B70  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2298  000B72  22DA               	addwfc	fsr2h,f,c
  2299  000B74  2ADF               	incf	indf2,f,c
  2300  000B76                     l2253:
  2301                           
  2302                           ; BSR set to: 0
  2303  000B76  0100               	movlb	0	; () banked
  2304  000B78  EE20 F019          	lfsr	2,25
  2305  000B7C  0100               	movlb	0	; () banked
  2306  000B7E  51CD               	movf	_ic_ptr& (0+255),w,b
  2307  000B80  26D9               	addwf	fsr2l,f,c
  2308  000B82  0100               	movlb	0	; () banked
  2309  000B84  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2310  000B86  22DA               	addwfc	fsr2h,f,c
  2311  000B88  50DF               	movf	indf2,w,c
  2312  000B8A  0100               	movlb	0	; () banked
  2313  000B8C  6FAA               	movwf	??_start_i2c_slave_reply& (0+255),b
  2314  000B8E  0100               	movlb	0	; () banked
  2315  000B90  0100               	movlb	0	; () banked
  2316  000B92  51AC               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2317  000B94  0100               	movlb	0	; () banked
  2318  000B96  5DAA               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2319  000B98  A0D8               	btfss	status,0,c
  2320  000B9A  D7AB               	goto	l2249
  2321                           
  2322                           ; BSR set to: 0
  2323                           ;my_i2c.c: 57: }
  2324                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2325                           
  2326                           ; BSR set to: 0
  2327  000B9C  0100               	movlb	0	; () banked
  2328  000B9E  EE20 F019          	lfsr	2,25
  2329  000BA2  0100               	movlb	0	; () banked
  2330  000BA4  51CD               	movf	_ic_ptr& (0+255),w,b
  2331  000BA6  26D9               	addwf	fsr2l,f,c
  2332  000BA8  0100               	movlb	0	; () banked
  2333  000BAA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2334  000BAC  22DA               	addwfc	fsr2h,f,c
  2335  000BAE  0100               	movlb	0	; () banked
  2336  000BB0  C0AC  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2337                           
  2338                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2339  000BB4  0100               	movlb	0	; () banked
  2340  000BB6  EE20 F01A          	lfsr	2,26
  2341  000BBA  0100               	movlb	0	; () banked
  2342  000BBC  51CD               	movf	_ic_ptr& (0+255),w,b
  2343  000BBE  26D9               	addwf	fsr2l,f,c
  2344  000BC0  0100               	movlb	0	; () banked
  2345  000BC2  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2346  000BC4  22DA               	addwfc	fsr2h,f,c
  2347  000BC6  0E01               	movlw	1
  2348  000BC8  6EDF               	movwf	indf2,c
  2349                           
  2350                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2351  000BCA  0100               	movlb	0	; () banked
  2352  000BCC  EE20 F00F          	lfsr	2,15
  2353  000BD0  0100               	movlb	0	; () banked
  2354  000BD2  51CD               	movf	_ic_ptr& (0+255),w,b
  2355  000BD4  26D9               	addwf	fsr2l,f,c
  2356  000BD6  0100               	movlb	0	; () banked
  2357  000BD8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2358  000BDA  22DA               	addwfc	fsr2h,f,c
  2359  000BDC  50DF               	movf	indf2,w,c
  2360  000BDE  6EC9               	movwf	4041,c	;volatile
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2364  000BE0  88C6               	bsf	4038,4,c	;volatile
  2365                           
  2366                           ; BSR set to: 0
  2367  000BE2  0012               	return	
  2368  000BE4                     __end_of_start_i2c_slave_reply:
  2369                           	opt stack 0
  2370                           tblptru	equ	0xFF8
  2371                           tblptrh	equ	0xFF7
  2372                           tblptrl	equ	0xFF6
  2373                           tablat	equ	0xFF5
  2374                           prodh	equ	0xFF4
  2375                           prodl	equ	0xFF3
  2376                           postinc0	equ	0xFEE
  2377                           wreg	equ	0xFE8
  2378                           indf1	equ	0xFE7
  2379                           fsr1h	equ	0xFE2
  2380                           fsr1l	equ	0xFE1
  2381                           indf2	equ	0xFDF
  2382                           postinc2	equ	0xFDE
  2383                           postdec2	equ	0xFDD
  2384                           fsr2h	equ	0xFDA
  2385                           fsr2l	equ	0xFD9
  2386                           status	equ	0xFD8
  2387                           
  2388 ;; *************** function _returnADCValue *****************
  2389 ;; Defined at:
  2390 ;;		line 16 in file "../src/interrupts.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;		None
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  temp            2   42[BANK0 ] int 
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  2   40[BANK0 ] int 
  2397 ;; Registers used:
  2398 ;;		wreg, status,2, status,0
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2404 ;;      Params:         0       2       0       0       0
  2405 ;;      Locals:         0       2       0       0       0
  2406 ;;      Temps:          0       0       0       0       0
  2407 ;;      Totals:         0       4       0       0       0
  2408 ;;Total ram usage:        4 bytes
  2409 ;; Hardware stack levels used:    1
  2410 ;; Hardware stack levels required when called:   10
  2411 ;; This function calls:
  2412 ;;		Nothing
  2413 ;; This function is called by:
  2414 ;;		_main
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           	psect	text8
  2419  001A86                     __ptext8:
  2420                           	opt stack 0
  2421  001A86                     _returnADCValue:
  2422                           	opt stack 19
  2423                           
  2424                           ;interrupts.c: 18: int temp = 0;
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;incstack = 0
  2428  001A86  0E00               	movlw	0
  2429  001A88  0100               	movlb	0	; () banked
  2430  001A8A  0100               	movlb	0	; () banked
  2431  001A8C  6FAB               	movwf	(returnADCValue@temp+1)& (0+255),b
  2432  001A8E  0E00               	movlw	0
  2433  001A90  0100               	movlb	0	; () banked
  2434  001A92  6FAA               	movwf	returnADCValue@temp& (0+255),b
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;interrupts.c: 19: temp = temp + 1;
  2438  001A94  0E01               	movlw	1
  2439  001A96  0100               	movlb	0	; () banked
  2440  001A98  0100               	movlb	0	; () banked
  2441  001A9A  25AA               	addwf	returnADCValue@temp& (0+255),w,b
  2442  001A9C  0100               	movlb	0	; () banked
  2443  001A9E  0100               	movlb	0	; () banked
  2444  001AA0  6FAA               	movwf	returnADCValue@temp& (0+255),b
  2445  001AA2  0E00               	movlw	0
  2446  001AA4  0100               	movlb	0	; () banked
  2447  001AA6  0100               	movlb	0	; () banked
  2448  001AA8  21AB               	addwfc	(returnADCValue@temp+1)& (0+255),w,b
  2449  001AAA  0100               	movlb	0	; () banked
  2450  001AAC  6FAB               	movwf	(returnADCValue@temp+1)& (0+255),b
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;interrupts.c: 20: return ADCValue;
  2454  001AAE  C0CF  F0A8         	movff	_ADCValue,?_returnADCValue
  2455  001AB2  C0D0  F0A9         	movff	_ADCValue+1,?_returnADCValue+1
  2456  001AB6  0012               	return	
  2457  001AB8                     __end_of_returnADCValue:
  2458                           	opt stack 0
  2459                           tblptru	equ	0xFF8
  2460                           tblptrh	equ	0xFF7
  2461                           tblptrl	equ	0xFF6
  2462                           tablat	equ	0xFF5
  2463                           prodh	equ	0xFF4
  2464                           prodl	equ	0xFF3
  2465                           postinc0	equ	0xFEE
  2466                           wreg	equ	0xFE8
  2467                           indf1	equ	0xFE7
  2468                           fsr1h	equ	0xFE2
  2469                           fsr1l	equ	0xFE1
  2470                           indf2	equ	0xFDF
  2471                           postinc2	equ	0xFDE
  2472                           postdec2	equ	0xFDD
  2473                           fsr2h	equ	0xFDA
  2474                           fsr2l	equ	0xFD9
  2475                           status	equ	0xFD8
  2476                           
  2477 ;; *************** function _init_uart_recv *****************
  2478 ;; Defined at:
  2479 ;;		line 30 in file "../src/my_uart.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  uc              2   40[BANK0 ] PTR struct __uart_comm
  2482 ;;		 -> main@uc(5), 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;		None
  2485 ;; Return value:  Size  Location     Type
  2486 ;;		None               void
  2487 ;; Registers used:
  2488 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2494 ;;      Params:         0       2       0       0       0
  2495 ;;      Locals:         0       0       0       0       0
  2496 ;;      Temps:          0       0       0       0       0
  2497 ;;      Totals:         0       2       0       0       0
  2498 ;;Total ram usage:        2 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; Hardware stack levels required when called:   10
  2501 ;; This function calls:
  2502 ;;		Nothing
  2503 ;; This function is called by:
  2504 ;;		_main
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           	psect	text9
  2509  001BA8                     __ptext9:
  2510                           	opt stack 0
  2511  001BA8                     _init_uart_recv:
  2512                           	opt stack 19
  2513                           
  2514                           ;my_uart.c: 31: uc_ptr = uc;
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;incstack = 0
  2518  001BA8  0100               	movlb	0	; () banked
  2519  001BAA  C0A9  F04E         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2520  001BAE  0100               	movlb	0	; () banked
  2521  001BB0  C0A8  F04D         	movff	init_uart_recv@uc,_uc_ptr
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;my_uart.c: 32: uc_ptr->buflen = 0;
  2525  001BB4  EE20 F004          	lfsr	2,4
  2526  001BB8  504D               	movf	_uc_ptr,w,c
  2527  001BBA  26D9               	addwf	fsr2l,f,c
  2528  001BBC  504E               	movf	_uc_ptr+1,w,c
  2529  001BBE  22DA               	addwfc	fsr2h,f,c
  2530  001BC0  0E00               	movlw	0
  2531  001BC2  6EDF               	movwf	indf2,c
  2532                           
  2533                           ; BSR set to: 0
  2534  001BC4  0012               	return	
  2535  001BC6                     __end_of_init_uart_recv:
  2536                           	opt stack 0
  2537                           tblptru	equ	0xFF8
  2538                           tblptrh	equ	0xFF7
  2539                           tblptrl	equ	0xFF6
  2540                           tablat	equ	0xFF5
  2541                           prodh	equ	0xFF4
  2542                           prodl	equ	0xFF3
  2543                           postinc0	equ	0xFEE
  2544                           wreg	equ	0xFE8
  2545                           indf1	equ	0xFE7
  2546                           fsr1h	equ	0xFE2
  2547                           fsr1l	equ	0xFE1
  2548                           indf2	equ	0xFDF
  2549                           postinc2	equ	0xFDE
  2550                           postdec2	equ	0xFDD
  2551                           fsr2h	equ	0xFDA
  2552                           fsr2l	equ	0xFD9
  2553                           status	equ	0xFD8
  2554                           
  2555 ;; *************** function _init_timer1_lthread *****************
  2556 ;; Defined at:
  2557 ;;		line 6 in file "../src/timer1_thread.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;  tptr            2   40[BANK0 ] PTR struct __timer1_thre
  2560 ;;		 -> main@t1thread_data(2), 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;		None
  2563 ;; Return value:  Size  Location     Type
  2564 ;;		None               void
  2565 ;; Registers used:
  2566 ;;		wreg, fsr2l, fsr2h
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2572 ;;      Params:         0       2       0       0       0
  2573 ;;      Locals:         0       0       0       0       0
  2574 ;;      Temps:          0       0       0       0       0
  2575 ;;      Totals:         0       2       0       0       0
  2576 ;;Total ram usage:        2 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:   10
  2579 ;; This function calls:
  2580 ;;		Nothing
  2581 ;; This function is called by:
  2582 ;;		_main
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           	psect	text10
  2587  001C2A                     __ptext10:
  2588                           	opt stack 0
  2589  001C2A                     _init_timer1_lthread:
  2590                           	opt stack 19
  2591                           
  2592                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;incstack = 0
  2596  001C2A  C0A8  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2597  001C2E  C0A9  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2598  001C32  0E00               	movlw	0
  2599  001C34  6EDE               	movwf	postinc2,c
  2600  001C36  0E00               	movlw	0
  2601  001C38  6EDD               	movwf	postdec2,c
  2602  001C3A  0012               	return	
  2603  001C3C                     __end_of_init_timer1_lthread:
  2604                           	opt stack 0
  2605                           tblptru	equ	0xFF8
  2606                           tblptrh	equ	0xFF7
  2607                           tblptrl	equ	0xFF6
  2608                           tablat	equ	0xFF5
  2609                           prodh	equ	0xFF4
  2610                           prodl	equ	0xFF3
  2611                           postinc0	equ	0xFEE
  2612                           wreg	equ	0xFE8
  2613                           indf1	equ	0xFE7
  2614                           fsr1h	equ	0xFE2
  2615                           fsr1l	equ	0xFE1
  2616                           indf2	equ	0xFDF
  2617                           postinc2	equ	0xFDE
  2618                           postdec2	equ	0xFDD
  2619                           fsr2h	equ	0xFDA
  2620                           fsr2l	equ	0xFD9
  2621                           status	equ	0xFD8
  2622                           
  2623 ;; *************** function _init_queues *****************
  2624 ;; Defined at:
  2625 ;;		line 194 in file "../src/messages.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;		None
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;		None
  2630 ;; Return value:  Size  Location     Type
  2631 ;;		None               void
  2632 ;; Registers used:
  2633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2639 ;;      Params:         0       0       0       0       0
  2640 ;;      Locals:         0       0       0       0       0
  2641 ;;      Temps:          0       1       0       0       0
  2642 ;;      Totals:         0       1       0       0       0
  2643 ;;Total ram usage:        1 bytes
  2644 ;; Hardware stack levels used:    1
  2645 ;; Hardware stack levels required when called:   11
  2646 ;; This function calls:
  2647 ;;		_init_queue
  2648 ;; This function is called by:
  2649 ;;		_main
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           	psect	text11
  2654  0015CA                     __ptext11:
  2655                           	opt stack 0
  2656  0015CA                     _init_queues:
  2657                           	opt stack 18
  2658                           
  2659                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2660                           
  2661                           ;incstack = 0
  2662  0015CA  0100               	movlb	0	; () banked
  2663  0015CC  6FAC               	movwf	??_init_queues& (0+255),b
  2664  0015CE  0E00               	movlw	0
  2665  0015D0  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  2666  0015D2  0100               	movlb	0	; () banked
  2667  0015D4  51AC               	movf	??_init_queues& (0+255),w,b
  2668                           
  2669                           ; BSR set to: 0
  2670                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2671  0015D6  0101               	movlb	1	; () banked
  2672  0015D8  0E01               	movlw	high _ToMainLow_MQ
  2673  0015DA  0100               	movlb	0	; () banked
  2674  0015DC  0100               	movlb	0	; () banked
  2675  0015DE  6FA9               	movwf	(init_queue@qptr+1)& (0+255),b
  2676  0015E0  0101               	movlb	1	; () banked
  2677  0015E2  0E6C               	movlw	low _ToMainLow_MQ
  2678  0015E4  0100               	movlb	0	; () banked
  2679  0015E6  0100               	movlb	0	; () banked
  2680  0015E8  6FA8               	movwf	init_queue@qptr& (0+255),b
  2681  0015EA  EC32  F00A         	call	_init_queue	;wreg free
  2682                           
  2683                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2684  0015EE  0101               	movlb	1	; () banked
  2685  0015F0  0E01               	movlw	high _ToMainHigh_MQ
  2686  0015F2  0100               	movlb	0	; () banked
  2687  0015F4  0100               	movlb	0	; () banked
  2688  0015F6  6FA9               	movwf	(init_queue@qptr+1)& (0+255),b
  2689  0015F8  0101               	movlb	1	; () banked
  2690  0015FA  0E36               	movlw	low _ToMainHigh_MQ
  2691  0015FC  0100               	movlb	0	; () banked
  2692  0015FE  0100               	movlb	0	; () banked
  2693  001600  6FA8               	movwf	init_queue@qptr& (0+255),b
  2694  001602  EC32  F00A         	call	_init_queue	;wreg free
  2695                           
  2696                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2697  001606  0101               	movlb	1	; () banked
  2698  001608  0E01               	movlw	high _FromMainLow_MQ
  2699  00160A  0100               	movlb	0	; () banked
  2700  00160C  0100               	movlb	0	; () banked
  2701  00160E  6FA9               	movwf	(init_queue@qptr+1)& (0+255),b
  2702  001610  0101               	movlb	1	; () banked
  2703  001612  0E00               	movlw	low _FromMainLow_MQ
  2704  001614  0100               	movlb	0	; () banked
  2705  001616  0100               	movlb	0	; () banked
  2706  001618  6FA8               	movwf	init_queue@qptr& (0+255),b
  2707  00161A  EC32  F00A         	call	_init_queue	;wreg free
  2708                           
  2709                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2710  00161E  0102               	movlb	2	; () banked
  2711  001620  0E02               	movlw	high _FromMainHigh_MQ
  2712  001622  0100               	movlb	0	; () banked
  2713  001624  0100               	movlb	0	; () banked
  2714  001626  6FA9               	movwf	(init_queue@qptr+1)& (0+255),b
  2715  001628  0102               	movlb	2	; () banked
  2716  00162A  0E00               	movlw	low _FromMainHigh_MQ
  2717  00162C  0100               	movlb	0	; () banked
  2718  00162E  0100               	movlb	0	; () banked
  2719  001630  6FA8               	movwf	init_queue@qptr& (0+255),b
  2720  001632  EC32  F00A         	call	_init_queue	;wreg free
  2721  001636  0012               	return	
  2722  001638                     __end_of_init_queues:
  2723                           	opt stack 0
  2724                           tblptru	equ	0xFF8
  2725                           tblptrh	equ	0xFF7
  2726                           tblptrl	equ	0xFF6
  2727                           tablat	equ	0xFF5
  2728                           prodh	equ	0xFF4
  2729                           prodl	equ	0xFF3
  2730                           postinc0	equ	0xFEE
  2731                           wreg	equ	0xFE8
  2732                           indf1	equ	0xFE7
  2733                           fsr1h	equ	0xFE2
  2734                           fsr1l	equ	0xFE1
  2735                           indf2	equ	0xFDF
  2736                           postinc2	equ	0xFDE
  2737                           postdec2	equ	0xFDD
  2738                           fsr2h	equ	0xFDA
  2739                           fsr2l	equ	0xFD9
  2740                           status	equ	0xFD8
  2741                           
  2742 ;; *************** function _init_queue *****************
  2743 ;; Defined at:
  2744 ;;		line 14 in file "../src/messages.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;  qptr            2   40[BANK0 ] PTR struct __msg_queue
  2747 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;  i               1   43[BANK0 ] unsigned char 
  2750 ;; Return value:  Size  Location     Type
  2751 ;;		None               void
  2752 ;; Registers used:
  2753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2759 ;;      Params:         0       2       0       0       0
  2760 ;;      Locals:         0       1       0       0       0
  2761 ;;      Temps:          0       1       0       0       0
  2762 ;;      Totals:         0       4       0       0       0
  2763 ;;Total ram usage:        4 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; Hardware stack levels required when called:   10
  2766 ;; This function calls:
  2767 ;;		Nothing
  2768 ;; This function is called by:
  2769 ;;		_init_queues
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	text12
  2774  001464                     __ptext12:
  2775                           	opt stack 0
  2776  001464                     _init_queue:
  2777                           	opt stack 18
  2778                           
  2779                           ;messages.c: 15: unsigned char i;
  2780                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2781                           
  2782                           ;incstack = 0
  2783  001464  0100               	movlb	0	; () banked
  2784  001466  EE20 F034          	lfsr	2,52
  2785  00146A  0100               	movlb	0	; () banked
  2786  00146C  51A8               	movf	init_queue@qptr& (0+255),w,b
  2787  00146E  26D9               	addwf	fsr2l,f,c
  2788  001470  0100               	movlb	0	; () banked
  2789  001472  51A9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2790  001474  22DA               	addwfc	fsr2h,f,c
  2791  001476  0E00               	movlw	0
  2792  001478  6EDF               	movwf	indf2,c
  2793                           
  2794                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2795  00147A  0100               	movlb	0	; () banked
  2796  00147C  EE20 F035          	lfsr	2,53
  2797  001480  0100               	movlb	0	; () banked
  2798  001482  51A8               	movf	init_queue@qptr& (0+255),w,b
  2799  001484  26D9               	addwf	fsr2l,f,c
  2800  001486  0100               	movlb	0	; () banked
  2801  001488  51A9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2802  00148A  22DA               	addwfc	fsr2h,f,c
  2803  00148C  0E00               	movlw	0
  2804  00148E  6EDF               	movwf	indf2,c
  2805                           
  2806                           ; BSR set to: 0
  2807                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2808  001490  0100               	movlb	0	; () banked
  2809  001492  6FAA               	movwf	??_init_queue& (0+255),b
  2810  001494  0E00               	movlw	0
  2811  001496  0100               	movlb	0	; () banked
  2812  001498  0100               	movlb	0	; () banked
  2813  00149A  6FAB               	movwf	init_queue@i& (0+255),b
  2814  00149C  0100               	movlb	0	; () banked
  2815  00149E  51AA               	movf	??_init_queue& (0+255),w,b
  2816                           
  2817                           ; BSR set to: 0
  2818  0014A0  0E03               	movlw	3
  2819  0014A2  0100               	movlb	0	; () banked
  2820  0014A4  0100               	movlb	0	; () banked
  2821  0014A6  65AB               	cpfsgt	init_queue@i& (0+255),b
  2822  0014A8  D001               	goto	l2469
  2823  0014AA  0012               	return	
  2824  0014AC                     l2469:
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;messages.c: 20: qptr->queue[i].full = 0;
  2828  0014AC  0100               	movlb	0	; () banked
  2829  0014AE  0100               	movlb	0	; () banked
  2830  0014B0  51AB               	movf	init_queue@i& (0+255),w,b
  2831  0014B2  0D0D               	mullw	13
  2832  0014B4  50F3               	movf	prodl,w,c
  2833  0014B6  0100               	movlb	0	; () banked
  2834  0014B8  0100               	movlb	0	; () banked
  2835  0014BA  25A8               	addwf	init_queue@qptr& (0+255),w,b
  2836  0014BC  6ED9               	movwf	fsr2l,c
  2837  0014BE  50F4               	movf	prodh,w,c
  2838  0014C0  0100               	movlb	0	; () banked
  2839  0014C2  0100               	movlb	0	; () banked
  2840  0014C4  21A9               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2841  0014C6  6EDA               	movwf	fsr2h,c
  2842  0014C8  0E00               	movlw	0
  2843  0014CA  6EDF               	movwf	indf2,c
  2844                           
  2845                           ; BSR set to: 0
  2846  0014CC  0100               	movlb	0	; () banked
  2847  0014CE  0100               	movlb	0	; () banked
  2848  0014D0  2BAB               	incf	init_queue@i& (0+255),f,b
  2849                           
  2850                           ; BSR set to: 0
  2851  0014D2  0E03               	movlw	3
  2852  0014D4  0100               	movlb	0	; () banked
  2853  0014D6  0100               	movlb	0	; () banked
  2854  0014D8  65AB               	cpfsgt	init_queue@i& (0+255),b
  2855  0014DA  D7E8               	goto	l2469
  2856  0014DC  0012               	return	
  2857  0014DE                     __end_of_init_queue:
  2858                           	opt stack 0
  2859                           tblptru	equ	0xFF8
  2860                           tblptrh	equ	0xFF7
  2861                           tblptrl	equ	0xFF6
  2862                           tablat	equ	0xFF5
  2863                           prodh	equ	0xFF4
  2864                           prodl	equ	0xFF3
  2865                           postinc0	equ	0xFEE
  2866                           wreg	equ	0xFE8
  2867                           indf1	equ	0xFE7
  2868                           fsr1h	equ	0xFE2
  2869                           fsr1l	equ	0xFE1
  2870                           indf2	equ	0xFDF
  2871                           postinc2	equ	0xFDE
  2872                           postdec2	equ	0xFDD
  2873                           fsr2h	equ	0xFDA
  2874                           fsr2l	equ	0xFD9
  2875                           status	equ	0xFD8
  2876                           
  2877 ;; *************** function _init_i2c *****************
  2878 ;; Defined at:
  2879 ;;		line 300 in file "../src/my_i2c.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  ic              2   40[BANK0 ] PTR struct __i2c_comm
  2882 ;;		 -> main@ic(28), 
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;		None
  2885 ;; Return value:  Size  Location     Type
  2886 ;;		None               void
  2887 ;; Registers used:
  2888 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2894 ;;      Params:         0       2       0       0       0
  2895 ;;      Locals:         0       0       0       0       0
  2896 ;;      Temps:          0       0       0       0       0
  2897 ;;      Totals:         0       2       0       0       0
  2898 ;;Total ram usage:        2 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; Hardware stack levels required when called:   10
  2901 ;; This function calls:
  2902 ;;		Nothing
  2903 ;; This function is called by:
  2904 ;;		_main
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text13
  2909  001638                     __ptext13:
  2910                           	opt stack 0
  2911  001638                     _init_i2c:
  2912                           	opt stack 19
  2913                           
  2914                           ;my_i2c.c: 301: ic_ptr = ic;
  2915                           
  2916                           ; BSR set to: 0
  2917                           ;incstack = 0
  2918  001638  0100               	movlb	0	; () banked
  2919  00163A  0100               	movlb	0	; () banked
  2920  00163C  C0A9  F0CE         	movff	init_i2c@ic+1,_ic_ptr+1
  2921  001640  0100               	movlb	0	; () banked
  2922  001642  0100               	movlb	0	; () banked
  2923  001644  C0A8  F0CD         	movff	init_i2c@ic,_ic_ptr
  2924                           
  2925                           ; BSR set to: 0
  2926                           ;my_i2c.c: 302: ic_ptr->buflen = 0;
  2927  001648  0100               	movlb	0	; () banked
  2928  00164A  EE20 F00A          	lfsr	2,10
  2929  00164E  0100               	movlb	0	; () banked
  2930  001650  51CD               	movf	_ic_ptr& (0+255),w,b
  2931  001652  26D9               	addwf	fsr2l,f,c
  2932  001654  0100               	movlb	0	; () banked
  2933  001656  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2934  001658  22DA               	addwfc	fsr2h,f,c
  2935  00165A  0E00               	movlw	0
  2936  00165C  6EDF               	movwf	indf2,c
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;my_i2c.c: 303: ic_ptr->event_count = 0;
  2940  00165E  0100               	movlb	0	; () banked
  2941  001660  EE20 F00B          	lfsr	2,11
  2942  001664  0100               	movlb	0	; () banked
  2943  001666  51CD               	movf	_ic_ptr& (0+255),w,b
  2944  001668  26D9               	addwf	fsr2l,f,c
  2945  00166A  0100               	movlb	0	; () banked
  2946  00166C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2947  00166E  22DA               	addwfc	fsr2h,f,c
  2948  001670  0E00               	movlw	0
  2949  001672  6EDF               	movwf	indf2,c
  2950                           
  2951                           ; BSR set to: 0
  2952                           ;my_i2c.c: 304: ic_ptr->status = 0x5;
  2953  001674  0100               	movlb	0	; () banked
  2954  001676  EE20 F00C          	lfsr	2,12
  2955  00167A  0100               	movlb	0	; () banked
  2956  00167C  51CD               	movf	_ic_ptr& (0+255),w,b
  2957  00167E  26D9               	addwf	fsr2l,f,c
  2958  001680  0100               	movlb	0	; () banked
  2959  001682  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2960  001684  22DA               	addwfc	fsr2h,f,c
  2961  001686  0E05               	movlw	5
  2962  001688  6EDF               	movwf	indf2,c
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;my_i2c.c: 305: ic_ptr->error_count = 0;
  2966  00168A  0100               	movlb	0	; () banked
  2967  00168C  EE20 F00E          	lfsr	2,14
  2968  001690  0100               	movlb	0	; () banked
  2969  001692  51CD               	movf	_ic_ptr& (0+255),w,b
  2970  001694  26D9               	addwf	fsr2l,f,c
  2971  001696  0100               	movlb	0	; () banked
  2972  001698  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2973  00169A  22DA               	addwfc	fsr2h,f,c
  2974  00169C  0E00               	movlw	0
  2975  00169E  6EDF               	movwf	indf2,c
  2976                           
  2977                           ; BSR set to: 0
  2978  0016A0  0012               	return	
  2979  0016A2                     __end_of_init_i2c:
  2980                           	opt stack 0
  2981                           tblptru	equ	0xFF8
  2982                           tblptrh	equ	0xFF7
  2983                           tblptrl	equ	0xFF6
  2984                           tablat	equ	0xFF5
  2985                           prodh	equ	0xFF4
  2986                           prodl	equ	0xFF3
  2987                           postinc0	equ	0xFEE
  2988                           wreg	equ	0xFE8
  2989                           indf1	equ	0xFE7
  2990                           fsr1h	equ	0xFE2
  2991                           fsr1l	equ	0xFE1
  2992                           indf2	equ	0xFDF
  2993                           postinc2	equ	0xFDE
  2994                           postdec2	equ	0xFDD
  2995                           fsr2h	equ	0xFDA
  2996                           fsr2l	equ	0xFD9
  2997                           status	equ	0xFD8
  2998                           
  2999 ;; *************** function _initADC *****************
  3000 ;; Defined at:
  3001 ;;		line 98 in file "../src/main.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;		None
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  ADCValue        2   47[BANK0 ] int 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;		None               void
  3008 ;; Registers used:
  3009 ;;		wreg, status,2, status,0, cstack
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3015 ;;      Params:         0       0       0       0       0
  3016 ;;      Locals:         0       2       0       0       0
  3017 ;;      Temps:          0       2       0       0       0
  3018 ;;      Totals:         0       4       0       0       0
  3019 ;;Total ram usage:        4 bytes
  3020 ;; Hardware stack levels used:    1
  3021 ;; Hardware stack levels required when called:   11
  3022 ;; This function calls:
  3023 ;;		_ConvertADC
  3024 ;;		_OpenADC
  3025 ;; This function is called by:
  3026 ;;		_main
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text14
  3031  001820                     __ptext14:
  3032                           	opt stack 0
  3033  001820                     _initADC:
  3034                           	opt stack 18
  3035                           
  3036                           ;main.c: 100: int ADCValue = 0;
  3037                           
  3038                           ; BSR set to: 0
  3039                           ;incstack = 0
  3040  001820  0E00               	movlw	0
  3041  001822  0100               	movlb	0	; () banked
  3042  001824  0100               	movlb	0	; () banked
  3043  001826  6FB0               	movwf	(initADC@ADCValue+1)& (0+255),b
  3044  001828  0E00               	movlw	0
  3045  00182A  0100               	movlb	0	; () banked
  3046  00182C  6FAF               	movwf	initADC@ADCValue& (0+255),b
  3047                           
  3048                           ; BSR set to: 0
  3049                           ;main.c: 102: OpenADC(0b10001111 & 0b11111111 & 0b11111111, 0b10000111 & 0b11111111 & 0b
      +                          11111110 & 0b11111101, 0b11111111);
  3050  00182E  0100               	movlb	0	; () banked
  3051  001830  6FAD               	movwf	??_initADC& (0+255),b
  3052  001832  0E84               	movlw	132
  3053  001834  0100               	movlb	0	; () banked
  3054  001836  0100               	movlb	0	; () banked
  3055  001838  6FA8               	movwf	OpenADC@config2& (0+255),b
  3056  00183A  0100               	movlb	0	; () banked
  3057  00183C  51AD               	movf	??_initADC& (0+255),w,b
  3058  00183E  0100               	movlb	0	; () banked
  3059  001840  6FAE               	movwf	(??_initADC+1)& (0+255),b
  3060  001842  0EFF               	movlw	255
  3061  001844  0100               	movlb	0	; () banked
  3062  001846  0100               	movlb	0	; () banked
  3063  001848  6FA9               	movwf	OpenADC@portconfig& (0+255),b
  3064  00184A  0100               	movlb	0	; () banked
  3065  00184C  51AE               	movf	(??_initADC+1)& (0+255),w,b
  3066  00184E  0E8F               	movlw	143
  3067  001850  ECF0  F009         	call	_OpenADC
  3068                           
  3069                           ;main.c: 103: (PIR1bits.ADIF=0,INTCONbits.PEIE=1,PIE1bits.ADIE=1);
  3070  001854  9C9E               	bcf	3998,6,c	;volatile
  3071  001856  8CF2               	bsf	intcon,6,c	;volatile
  3072  001858  8C9D               	bsf	3997,6,c	;volatile
  3073                           
  3074                           ;main.c: 104: (INTCONbits.GIE = 1);
  3075  00185A  8EF2               	bsf	intcon,7,c	;volatile
  3076                           
  3077                           ;main.c: 105: ConvertADC();
  3078  00185C  EC54  F00E         	call	_ConvertADC	;wreg free
  3079  001860  0012               	return	
  3080  001862                     __end_of_initADC:
  3081                           	opt stack 0
  3082                           tblptru	equ	0xFF8
  3083                           tblptrh	equ	0xFF7
  3084                           tblptrl	equ	0xFF6
  3085                           tablat	equ	0xFF5
  3086                           prodh	equ	0xFF4
  3087                           prodl	equ	0xFF3
  3088                           intcon	equ	0xFF2
  3089                           postinc0	equ	0xFEE
  3090                           wreg	equ	0xFE8
  3091                           indf1	equ	0xFE7
  3092                           fsr1h	equ	0xFE2
  3093                           fsr1l	equ	0xFE1
  3094                           indf2	equ	0xFDF
  3095                           postinc2	equ	0xFDE
  3096                           postdec2	equ	0xFDD
  3097                           fsr2h	equ	0xFDA
  3098                           fsr2l	equ	0xFD9
  3099                           status	equ	0xFD8
  3100                           
  3101 ;; *************** function _OpenADC *****************
  3102 ;; Defined at:
  3103 ;;		line 68 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcopen.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;  config          1    wreg     unsigned char 
  3106 ;;  config2         1   40[BANK0 ] unsigned char 
  3107 ;;  portconfig      1   41[BANK0 ] unsigned char 
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;  config          1   44[BANK0 ] unsigned char 
  3110 ;; Return value:  Size  Location     Type
  3111 ;;		None               void
  3112 ;; Registers used:
  3113 ;;		wreg, status,2, status,0
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3119 ;;      Params:         0       2       0       0       0
  3120 ;;      Locals:         0       1       0       0       0
  3121 ;;      Temps:          0       2       0       0       0
  3122 ;;      Totals:         0       5       0       0       0
  3123 ;;Total ram usage:        5 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; Hardware stack levels required when called:   10
  3126 ;; This function calls:
  3127 ;;		Nothing
  3128 ;; This function is called by:
  3129 ;;		_initADC
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           	psect	text15
  3134  0013E0                     __ptext15:
  3135                           	opt stack 0
  3136  0013E0                     _OpenADC:
  3137                           	opt stack 18
  3138                           
  3139                           ;incstack = 0
  3140                           ;OpenADC@config stored from wreg
  3141  0013E0  CFE8 F0AC          	movff	wreg,OpenADC@config
  3142  0013E4  0E00               	movlw	0
  3143  0013E6  6EC2               	movwf	4034,c	;volatile
  3144  0013E8  0E00               	movlw	0
  3145  0013EA  6EC0               	movwf	4032,c	;volatile
  3146  0013EC  0100               	movlb	0	; () banked
  3147  0013EE  0100               	movlb	0	; () banked
  3148  0013F0  90D8               	bcf	status,0,c
  3149  0013F2  31A8               	rrcf	OpenADC@config2& (0+255),w,b
  3150  0013F4  0B3C               	andlw	60
  3151  0013F6  6EC2               	movwf	4034,c	;volatile
  3152                           
  3153                           ; BSR set to: 0
  3154  0013F8  C0A8  F0AA         	movff	OpenADC@config2,??_OpenADC
  3155  0013FC  0100               	movlb	0	; () banked
  3156  0013FE  3BAA               	swapf	??_OpenADC& (0+255),f,b
  3157  001400  0EF0               	movlw	240
  3158  001402  17AA               	andwf	??_OpenADC& (0+255),f,b
  3159  001404  0E30               	movlw	48
  3160  001406  0100               	movlb	0	; () banked
  3161  001408  17AA               	andwf	??_OpenADC& (0+255),f,b
  3162  00140A  0100               	movlb	0	; () banked
  3163  00140C  0100               	movlb	0	; () banked
  3164  00140E  51A9               	movf	OpenADC@portconfig& (0+255),w,b
  3165  001410  0B0F               	andlw	15
  3166  001412  0100               	movlb	0	; () banked
  3167  001414  11AA               	iorwf	??_OpenADC& (0+255),w,b
  3168  001416  6EC1               	movwf	4033,c	;volatile
  3169                           
  3170                           ; BSR set to: 0
  3171  001418  C0AC  F0AA         	movff	OpenADC@config,??_OpenADC
  3172  00141C  0100               	movlb	0	; () banked
  3173  00141E  90D8               	bcf	status,0,c
  3174  001420  37AA               	rlcf	??_OpenADC& (0+255),f,b
  3175  001422  0100               	movlb	0	; () banked
  3176  001424  90D8               	bcf	status,0,c
  3177  001426  37AA               	rlcf	??_OpenADC& (0+255),f,b
  3178  001428  0E38               	movlw	56
  3179  00142A  0100               	movlb	0	; () banked
  3180  00142C  17AA               	andwf	??_OpenADC& (0+255),f,b
  3181  00142E  C0AC  F0AB         	movff	OpenADC@config,??_OpenADC+1
  3182  001432  0100               	movlb	0	; () banked
  3183  001434  3BAB               	swapf	(??_OpenADC+1)& (0+255),f,b
  3184  001436  0E0F               	movlw	15
  3185  001438  17AB               	andwf	(??_OpenADC+1)& (0+255),f,b
  3186  00143A  0E07               	movlw	7
  3187  00143C  0100               	movlb	0	; () banked
  3188  00143E  17AB               	andwf	(??_OpenADC+1)& (0+255),f,b
  3189  001440  0100               	movlb	0	; () banked
  3190  001442  0100               	movlb	0	; () banked
  3191  001444  51AC               	movf	OpenADC@config& (0+255),w,b
  3192  001446  0B80               	andlw	128
  3193  001448  0100               	movlb	0	; () banked
  3194  00144A  11AB               	iorwf	(??_OpenADC+1)& (0+255),w,b
  3195  00144C  0100               	movlb	0	; () banked
  3196  00144E  11AA               	iorwf	??_OpenADC& (0+255),w,b
  3197  001450  6EC0               	movwf	4032,c	;volatile
  3198                           
  3199                           ; BSR set to: 0
  3200  001452  0100               	movlb	0	; () banked
  3201  001454  0100               	movlb	0	; () banked
  3202  001456  AFA8               	btfss	OpenADC@config2& (0+255),7,b
  3203  001458  D003               	goto	l416
  3204                           
  3205                           ; BSR set to: 0
  3206  00145A  9C9E               	bcf	3998,6,c	;volatile
  3207  00145C  8C9D               	bsf	3997,6,c	;volatile
  3208  00145E  8CF2               	bsf	intcon,6,c	;volatile
  3209  001460                     l416:
  3210                           
  3211                           ; BSR set to: 0
  3212  001460  80C2               	bsf	4034,0,c	;volatile
  3213                           
  3214                           ; BSR set to: 0
  3215  001462  0012               	return	
  3216  001464                     __end_of_OpenADC:
  3217                           	opt stack 0
  3218                           tblptru	equ	0xFF8
  3219                           tblptrh	equ	0xFF7
  3220                           tblptrl	equ	0xFF6
  3221                           tablat	equ	0xFF5
  3222                           prodh	equ	0xFF4
  3223                           prodl	equ	0xFF3
  3224                           intcon	equ	0xFF2
  3225                           postinc0	equ	0xFEE
  3226                           wreg	equ	0xFE8
  3227                           indf1	equ	0xFE7
  3228                           fsr1h	equ	0xFE2
  3229                           fsr1l	equ	0xFE1
  3230                           indf2	equ	0xFDF
  3231                           postinc2	equ	0xFDE
  3232                           postdec2	equ	0xFDD
  3233                           fsr2h	equ	0xFDA
  3234                           fsr2l	equ	0xFD9
  3235                           status	equ	0xFD8
  3236                           
  3237 ;; *************** function _ConvertADC *****************
  3238 ;; Defined at:
  3239 ;;		line 22 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcconv.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;		None
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;		None
  3244 ;; Return value:  Size  Location     Type
  3245 ;;		None               void
  3246 ;; Registers used:
  3247 ;;		None
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3253 ;;      Params:         0       0       0       0       0
  3254 ;;      Locals:         0       0       0       0       0
  3255 ;;      Temps:          0       0       0       0       0
  3256 ;;      Totals:         0       0       0       0       0
  3257 ;;Total ram usage:        0 bytes
  3258 ;; Hardware stack levels used:    1
  3259 ;; Hardware stack levels required when called:   10
  3260 ;; This function calls:
  3261 ;;		Nothing
  3262 ;; This function is called by:
  3263 ;;		_initADC
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text16
  3268  001CA8                     __ptext16:
  3269                           	opt stack 0
  3270  001CA8                     _ConvertADC:
  3271                           	opt stack 18
  3272                           
  3273                           ; BSR set to: 0
  3274                           ;incstack = 0
  3275  001CA8  82C2               	bsf	4034,1,c	;volatile
  3276  001CAA  0012               	return	
  3277  001CAC                     __end_of_ConvertADC:
  3278                           	opt stack 0
  3279                           tblptru	equ	0xFF8
  3280                           tblptrh	equ	0xFF7
  3281                           tblptrl	equ	0xFF6
  3282                           tablat	equ	0xFF5
  3283                           prodh	equ	0xFF4
  3284                           prodl	equ	0xFF3
  3285                           intcon	equ	0xFF2
  3286                           postinc0	equ	0xFEE
  3287                           wreg	equ	0xFE8
  3288                           indf1	equ	0xFE7
  3289                           fsr1h	equ	0xFE2
  3290                           fsr1l	equ	0xFE1
  3291                           indf2	equ	0xFDF
  3292                           postinc2	equ	0xFDE
  3293                           postdec2	equ	0xFDD
  3294                           fsr2h	equ	0xFDA
  3295                           fsr2l	equ	0xFD9
  3296                           status	equ	0xFD8
  3297                           
  3298 ;; *************** function _i2c_configure_slave *****************
  3299 ;; Defined at:
  3300 ;;		line 311 in file "../src/my_i2c.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;  addr            1    wreg     unsigned char 
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;  addr            1   40[BANK0 ] unsigned char 
  3305 ;; Return value:  Size  Location     Type
  3306 ;;		None               void
  3307 ;; Registers used:
  3308 ;;		wreg, status,2, status,0
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3314 ;;      Params:         0       0       0       0       0
  3315 ;;      Locals:         0       1       0       0       0
  3316 ;;      Temps:          0       0       0       0       0
  3317 ;;      Totals:         0       1       0       0       0
  3318 ;;Total ram usage:        1 bytes
  3319 ;; Hardware stack levels used:    1
  3320 ;; Hardware stack levels required when called:   10
  3321 ;; This function calls:
  3322 ;;		Nothing
  3323 ;; This function is called by:
  3324 ;;		_main
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           	psect	text17
  3329  001B10                     __ptext17:
  3330                           	opt stack 0
  3331  001B10                     _i2c_configure_slave:
  3332                           	opt stack 19
  3333                           
  3334                           ;incstack = 0
  3335                           ;i2c_configure_slave@addr stored from wreg
  3336  001B10  CFE8 F0A8          	movff	wreg,i2c_configure_slave@addr
  3337                           
  3338                           ;my_i2c.c: 314: TRISCbits.TRISC3 = 1;
  3339  001B14  8694               	bsf	3988,3,c	;volatile
  3340                           
  3341                           ;my_i2c.c: 315: TRISCbits.TRISC4 = 1;
  3342  001B16  8894               	bsf	3988,4,c	;volatile
  3343                           
  3344                           ;my_i2c.c: 317: SSPADD = addr;
  3345  001B18  C0A8  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3346                           
  3347                           ;my_i2c.c: 319: SSPSTAT = 0x0;
  3348  001B1C  0E00               	movlw	0
  3349  001B1E  6EC7               	movwf	4039,c	;volatile
  3350                           
  3351                           ;my_i2c.c: 320: SSPCON1 = 0x0;
  3352  001B20  0E00               	movlw	0
  3353  001B22  6EC6               	movwf	4038,c	;volatile
  3354                           
  3355                           ;my_i2c.c: 321: SSPCON2 = 0x0;
  3356  001B24  0E00               	movlw	0
  3357  001B26  6EC5               	movwf	4037,c	;volatile
  3358                           
  3359                           ;my_i2c.c: 322: SSPCON1 |= 0x0E;
  3360  001B28  0E0E               	movlw	14
  3361  001B2A  12C6               	iorwf	4038,f,c	;volatile
  3362                           
  3363                           ;my_i2c.c: 323: SSPSTAT |= 0b10000000;
  3364  001B2C  8EC7               	bsf	4039,7,c	;volatile
  3365                           
  3366                           ;my_i2c.c: 325: TRISCbits.TRISC3 = 1;
  3367  001B2E  8694               	bsf	3988,3,c	;volatile
  3368                           
  3369                           ;my_i2c.c: 326: TRISCbits.TRISC4 = 1;
  3370  001B30  8894               	bsf	3988,4,c	;volatile
  3371                           
  3372                           ;my_i2c.c: 336: SSPCON2bits.SEN = 1;
  3373  001B32  80C5               	bsf	4037,0,c	;volatile
  3374                           
  3375                           ;my_i2c.c: 337: SSPCON1 |= 0b00100000;
  3376  001B34  8AC6               	bsf	4038,5,c	;volatile
  3377  001B36  0012               	return	
  3378  001B38                     __end_of_i2c_configure_slave:
  3379                           	opt stack 0
  3380                           tblptru	equ	0xFF8
  3381                           tblptrh	equ	0xFF7
  3382                           tblptrl	equ	0xFF6
  3383                           tablat	equ	0xFF5
  3384                           prodh	equ	0xFF4
  3385                           prodl	equ	0xFF3
  3386                           intcon	equ	0xFF2
  3387                           postinc0	equ	0xFEE
  3388                           wreg	equ	0xFE8
  3389                           indf1	equ	0xFE7
  3390                           fsr1h	equ	0xFE2
  3391                           fsr1l	equ	0xFE1
  3392                           indf2	equ	0xFDF
  3393                           postinc2	equ	0xFDE
  3394                           postdec2	equ	0xFDD
  3395                           fsr2h	equ	0xFDA
  3396                           fsr2l	equ	0xFD9
  3397                           status	equ	0xFD8
  3398                           
  3399 ;; *************** function _enable_interrupts *****************
  3400 ;; Defined at:
  3401 ;;		line 23 in file "../src/interrupts.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;		None
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;		None
  3406 ;; Return value:  Size  Location     Type
  3407 ;;		None               void
  3408 ;; Registers used:
  3409 ;;		None
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3415 ;;      Params:         0       0       0       0       0
  3416 ;;      Locals:         0       0       0       0       0
  3417 ;;      Temps:          0       0       0       0       0
  3418 ;;      Totals:         0       0       0       0       0
  3419 ;;Total ram usage:        0 bytes
  3420 ;; Hardware stack levels used:    1
  3421 ;; Hardware stack levels required when called:   10
  3422 ;; This function calls:
  3423 ;;		Nothing
  3424 ;; This function is called by:
  3425 ;;		_main
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text18
  3430  001C9A                     __ptext18:
  3431                           	opt stack 0
  3432  001C9A                     _enable_interrupts:
  3433                           	opt stack 19
  3434                           
  3435                           ;interrupts.c: 26: RCONbits.IPEN = 1;
  3436                           
  3437                           ;incstack = 0
  3438  001C9A  8ED0               	bsf	4048,7,c	;volatile
  3439                           
  3440                           ;interrupts.c: 27: INTCONbits.GIEH = 1;
  3441  001C9C  8EF2               	bsf	intcon,7,c	;volatile
  3442                           
  3443                           ;interrupts.c: 28: INTCONbits.GIEL = 1;
  3444  001C9E  8CF2               	bsf	intcon,6,c	;volatile
  3445  001CA0  0012               	return	
  3446  001CA2                     __end_of_enable_interrupts:
  3447                           	opt stack 0
  3448                           tblptru	equ	0xFF8
  3449                           tblptrh	equ	0xFF7
  3450                           tblptrl	equ	0xFF6
  3451                           tablat	equ	0xFF5
  3452                           prodh	equ	0xFF4
  3453                           prodl	equ	0xFF3
  3454                           intcon	equ	0xFF2
  3455                           postinc0	equ	0xFEE
  3456                           wreg	equ	0xFE8
  3457                           indf1	equ	0xFE7
  3458                           fsr1h	equ	0xFE2
  3459                           fsr1l	equ	0xFE1
  3460                           indf2	equ	0xFDF
  3461                           postinc2	equ	0xFDE
  3462                           postdec2	equ	0xFDD
  3463                           fsr2h	equ	0xFDA
  3464                           fsr2l	equ	0xFD9
  3465                           status	equ	0xFD8
  3466                           
  3467 ;; *************** function _block_on_To_msgqueues *****************
  3468 ;; Defined at:
  3469 ;;		line 258 in file "../src/messages.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;		None
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;		None
  3474 ;; Return value:  Size  Location     Type
  3475 ;;		None               void
  3476 ;; Registers used:
  3477 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3483 ;;      Params:         0       0       0       0       0
  3484 ;;      Locals:         0       0       0       0       0
  3485 ;;      Temps:          0       1       0       0       0
  3486 ;;      Totals:         0       1       0       0       0
  3487 ;;Total ram usage:        1 bytes
  3488 ;; Hardware stack levels used:    1
  3489 ;; Hardware stack levels required when called:   13
  3490 ;; This function calls:
  3491 ;;		_Delay1KTCYx
  3492 ;;		_check_msg
  3493 ;;		_in_main
  3494 ;; This function is called by:
  3495 ;;		_main
  3496 ;; This function uses a non-reentrant model
  3497 ;;
  3498                           
  3499                           	psect	text19
  3500  001182                     __ptext19:
  3501                           	opt stack 0
  3502  001182                     _block_on_To_msgqueues:
  3503                           	opt stack 16
  3504                           
  3505                           ;messages.c: 259: if (!in_main()) {
  3506                           
  3507                           ;incstack = 0
  3508  001182  ECEE  F00B         	call	_in_main	;wreg free
  3509  001186  0100               	movlb	0	; () banked
  3510  001188  0100               	movlb	0	; () banked
  3511  00118A  51AD               	movf	(?_in_main+1)& (0+255),w,b
  3512  00118C  0100               	movlb	0	; () banked
  3513  00118E  11AC               	iorwf	?_in_main& (0+255),w,b
  3514  001190  B4D8               	btfsc	status,2,c
  3515  001192  0012               	return	
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;messages.c: 261: }
  3519                           ;messages.c: 262: LATBbits.LATB3 = 1;
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;messages.c: 260: return;
  3523  001194  868A               	bsf	3978,3,c	;volatile
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3527  001196  0100               	movlb	0	; () banked
  3528  001198  6FAE               	movwf	??_block_on_To_msgqueues& (0+255),b
  3529  00119A  0E01               	movlw	1
  3530  00119C  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  3531  00119E  0100               	movlb	0	; () banked
  3532  0011A0  51AE               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3533  0011A2                     l2625:
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3537  0011A2  0101               	movlb	1	; () banked
  3538  0011A4  0E01               	movlw	high _ToMainHigh_MQ
  3539  0011A6  0100               	movlb	0	; () banked
  3540  0011A8  0100               	movlb	0	; () banked
  3541  0011AA  6FA9               	movwf	(check_msg@qptr+1)& (0+255),b
  3542  0011AC  0101               	movlb	1	; () banked
  3543  0011AE  0E36               	movlw	low _ToMainHigh_MQ
  3544  0011B0  0100               	movlb	0	; () banked
  3545  0011B2  0100               	movlb	0	; () banked
  3546  0011B4  6FA8               	movwf	check_msg@qptr& (0+255),b
  3547  0011B6  EC28  F00D         	call	_check_msg	;wreg free
  3548  0011BA  0900               	iorlw	0
  3549  0011BC  B4D8               	btfsc	status,2,c
  3550  0011BE  D008               	goto	l2633
  3551                           
  3552                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3553  0011C0  0100               	movlb	0	; () banked
  3554  0011C2  6FAE               	movwf	??_block_on_To_msgqueues& (0+255),b
  3555  0011C4  0E00               	movlw	0
  3556  0011C6  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  3557  0011C8  0100               	movlb	0	; () banked
  3558  0011CA  51AE               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;messages.c: 267: LATBbits.LATB3 = 0;
  3562  0011CC  968A               	bcf	3978,3,c	;volatile
  3563  0011CE  0012               	return	
  3564  0011D0                     l2633:
  3565                           
  3566                           ;messages.c: 269: }
  3567                           ;messages.c: 270: if (check_msg(&ToMainLow_MQ)) {
  3568  0011D0  0101               	movlb	1	; () banked
  3569  0011D2  0E01               	movlw	high _ToMainLow_MQ
  3570  0011D4  0100               	movlb	0	; () banked
  3571  0011D6  0100               	movlb	0	; () banked
  3572  0011D8  6FA9               	movwf	(check_msg@qptr+1)& (0+255),b
  3573  0011DA  0101               	movlb	1	; () banked
  3574  0011DC  0E6C               	movlw	low _ToMainLow_MQ
  3575  0011DE  0100               	movlb	0	; () banked
  3576  0011E0  0100               	movlb	0	; () banked
  3577  0011E2  6FA8               	movwf	check_msg@qptr& (0+255),b
  3578  0011E4  EC28  F00D         	call	_check_msg	;wreg free
  3579  0011E8  0900               	iorlw	0
  3580  0011EA  B4D8               	btfsc	status,2,c
  3581  0011EC  D008               	goto	l2641
  3582                           
  3583                           ;messages.c: 271: MQ_Main_Willing_to_block = 0;
  3584  0011EE  0100               	movlb	0	; () banked
  3585  0011F0  6FAE               	movwf	??_block_on_To_msgqueues& (0+255),b
  3586  0011F2  0E00               	movlw	0
  3587  0011F4  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  3588  0011F6  0100               	movlb	0	; () banked
  3589  0011F8  51AE               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;messages.c: 272: LATBbits.LATB3 = 0;
  3593  0011FA  968A               	bcf	3978,3,c	;volatile
  3594  0011FC  0012               	return	
  3595  0011FE                     l2641:
  3596                           
  3597                           ;messages.c: 274: }
  3598                           ;messages.c: 275: Delay1KTCYx(10);
  3599  0011FE  0E0A               	movlw	10
  3600  001200  EC01  F00E         	call	_Delay1KTCYx
  3601                           
  3602                           ;messages.c: 276: LATBbits.LATB3 = !LATBbits.LATB3;
  3603  001204  B68A               	btfsc	3978,3,c	;volatile
  3604  001206  D002               	goto	u1590
  3605  001208  0E01               	movlw	1
  3606  00120A  D001               	goto	u1596
  3607  00120C                     u1590:
  3608  00120C  0E00               	movlw	0
  3609  00120E                     u1596:
  3610  00120E  0100               	movlb	0	; () banked
  3611  001210  6FAE               	movwf	??_block_on_To_msgqueues& (0+255),b
  3612  001212  0100               	movlb	0	; () banked
  3613  001214  47AE               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3614  001216  47AE               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3615  001218  47AE               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3616  00121A  508A               	movf	3978,w,c	;volatile
  3617  00121C  0100               	movlb	0	; () banked
  3618  00121E  19AE               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  3619  001220  0BF7               	andlw	-9
  3620  001222  19AE               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  3621  001224  6E8A               	movwf	3978,c	;volatile
  3622  001226  D7BD               	goto	l2625
  3623  001228                     __end_of_block_on_To_msgqueues:
  3624                           	opt stack 0
  3625                           tblptru	equ	0xFF8
  3626                           tblptrh	equ	0xFF7
  3627                           tblptrl	equ	0xFF6
  3628                           tablat	equ	0xFF5
  3629                           prodh	equ	0xFF4
  3630                           prodl	equ	0xFF3
  3631                           intcon	equ	0xFF2
  3632                           postinc0	equ	0xFEE
  3633                           wreg	equ	0xFE8
  3634                           indf1	equ	0xFE7
  3635                           fsr1h	equ	0xFE2
  3636                           fsr1l	equ	0xFE1
  3637                           indf2	equ	0xFDF
  3638                           postinc2	equ	0xFDE
  3639                           postdec2	equ	0xFDD
  3640                           fsr2h	equ	0xFDA
  3641                           fsr2l	equ	0xFD9
  3642                           status	equ	0xFD8
  3643                           
  3644 ;; *************** function _in_main *****************
  3645 ;; Defined at:
  3646 ;;		line 49 in file "../src/interrupts.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;		None
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;		None
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  2   44[BANK0 ] int 
  3653 ;; Registers used:
  3654 ;;		wreg, status,2, status,0, cstack
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3660 ;;      Params:         0       2       0       0       0
  3661 ;;      Locals:         0       0       0       0       0
  3662 ;;      Temps:          0       0       0       0       0
  3663 ;;      Totals:         0       2       0       0       0
  3664 ;;Total ram usage:        2 bytes
  3665 ;; Hardware stack levels used:    1
  3666 ;; Hardware stack levels required when called:   12
  3667 ;; This function calls:
  3668 ;;		_in_high_int
  3669 ;;		_in_low_int
  3670 ;; This function is called by:
  3671 ;;		_block_on_To_msgqueues
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           	psect	text20
  3676  0017DC                     __ptext20:
  3677                           	opt stack 0
  3678  0017DC                     _in_main:
  3679                           	opt stack 16
  3680                           
  3681                           ;interrupts.c: 50: if ((!in_low_int()) && (!in_high_int())) {
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;incstack = 0
  3685  0017DC  ECCB  F00B         	call	_in_low_int	;wreg free
  3686  0017E0  0100               	movlb	0	; () banked
  3687  0017E2  0100               	movlb	0	; () banked
  3688  0017E4  51AB               	movf	(?_in_low_int+1)& (0+255),w,b
  3689  0017E6  0100               	movlb	0	; () banked
  3690  0017E8  11AA               	iorwf	?_in_low_int& (0+255),w,b
  3691  0017EA  A4D8               	btfss	status,2,c
  3692  0017EC  D011               	goto	l2655
  3693                           
  3694                           ; BSR set to: 0
  3695  0017EE  EC1E  F00E         	call	_in_high_int	;wreg free
  3696  0017F2  0100               	movlb	0	; () banked
  3697  0017F4  0100               	movlb	0	; () banked
  3698  0017F6  51A9               	movf	(?_in_high_int+1)& (0+255),w,b
  3699  0017F8  0100               	movlb	0	; () banked
  3700  0017FA  11A8               	iorwf	?_in_high_int& (0+255),w,b
  3701  0017FC  A4D8               	btfss	status,2,c
  3702  0017FE  D008               	goto	l2655
  3703                           
  3704                           ; BSR set to: 0
  3705                           ;interrupts.c: 51: return (1);
  3706  001800  0E00               	movlw	0
  3707  001802  0100               	movlb	0	; () banked
  3708  001804  0100               	movlb	0	; () banked
  3709  001806  6FAD               	movwf	(?_in_main+1)& (0+255),b
  3710  001808  0E01               	movlw	1
  3711  00180A  0100               	movlb	0	; () banked
  3712  00180C  6FAC               	movwf	?_in_main& (0+255),b
  3713  00180E  0012               	return	
  3714  001810                     l2655:
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;interrupts.c: 53: return (0);
  3718  001810  0E00               	movlw	0
  3719  001812  0100               	movlb	0	; () banked
  3720  001814  0100               	movlb	0	; () banked
  3721  001816  6FAD               	movwf	(?_in_main+1)& (0+255),b
  3722  001818  0E00               	movlw	0
  3723  00181A  0100               	movlb	0	; () banked
  3724  00181C  6FAC               	movwf	?_in_main& (0+255),b
  3725  00181E  0012               	return	
  3726  001820                     __end_of_in_main:
  3727                           	opt stack 0
  3728                           tblptru	equ	0xFF8
  3729                           tblptrh	equ	0xFF7
  3730                           tblptrl	equ	0xFF6
  3731                           tablat	equ	0xFF5
  3732                           prodh	equ	0xFF4
  3733                           prodl	equ	0xFF3
  3734                           intcon	equ	0xFF2
  3735                           postinc0	equ	0xFEE
  3736                           wreg	equ	0xFE8
  3737                           indf1	equ	0xFE7
  3738                           fsr1h	equ	0xFE2
  3739                           fsr1l	equ	0xFE1
  3740                           indf2	equ	0xFDF
  3741                           postinc2	equ	0xFDE
  3742                           postdec2	equ	0xFDD
  3743                           fsr2h	equ	0xFDA
  3744                           fsr2l	equ	0xFD9
  3745                           status	equ	0xFD8
  3746                           
  3747 ;; *************** function _in_low_int *****************
  3748 ;; Defined at:
  3749 ;;		line 39 in file "../src/interrupts.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;		None
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;		None
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  2   42[BANK0 ] int 
  3756 ;; Registers used:
  3757 ;;		wreg, status,2, status,0, cstack
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3763 ;;      Params:         0       2       0       0       0
  3764 ;;      Locals:         0       0       0       0       0
  3765 ;;      Temps:          0       0       0       0       0
  3766 ;;      Totals:         0       2       0       0       0
  3767 ;;Total ram usage:        2 bytes
  3768 ;; Hardware stack levels used:    1
  3769 ;; Hardware stack levels required when called:   11
  3770 ;; This function calls:
  3771 ;;		_in_high_int
  3772 ;; This function is called by:
  3773 ;;		_in_main
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           	psect	text21
  3778  001796                     __ptext21:
  3779                           	opt stack 0
  3780  001796                     _in_low_int:
  3781                           	opt stack 16
  3782                           
  3783                           ;interrupts.c: 40: if (INTCONbits.GIEL == 1) {
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;incstack = 0
  3787  001796  ACF2               	btfss	intcon,6,c	;volatile
  3788  001798  D008               	goto	l2603
  3789                           
  3790                           ;interrupts.c: 41: return (0);
  3791  00179A  0E00               	movlw	0
  3792  00179C  0100               	movlb	0	; () banked
  3793  00179E  0100               	movlb	0	; () banked
  3794  0017A0  6FAB               	movwf	(?_in_low_int+1)& (0+255),b
  3795  0017A2  0E00               	movlw	0
  3796  0017A4  0100               	movlb	0	; () banked
  3797  0017A6  6FAA               	movwf	?_in_low_int& (0+255),b
  3798  0017A8  0012               	return	
  3799  0017AA                     l2603:
  3800  0017AA  EC1E  F00E         	call	_in_high_int	;wreg free
  3801  0017AE  0100               	movlb	0	; () banked
  3802  0017B0  0100               	movlb	0	; () banked
  3803  0017B2  51A9               	movf	(?_in_high_int+1)& (0+255),w,b
  3804  0017B4  0100               	movlb	0	; () banked
  3805  0017B6  11A8               	iorwf	?_in_high_int& (0+255),w,b
  3806  0017B8  B4D8               	btfsc	status,2,c
  3807  0017BA  D008               	goto	l2611
  3808                           
  3809                           ; BSR set to: 0
  3810                           ;interrupts.c: 43: return (0);
  3811  0017BC  0E00               	movlw	0
  3812  0017BE  0100               	movlb	0	; () banked
  3813  0017C0  0100               	movlb	0	; () banked
  3814  0017C2  6FAB               	movwf	(?_in_low_int+1)& (0+255),b
  3815  0017C4  0E00               	movlw	0
  3816  0017C6  0100               	movlb	0	; () banked
  3817  0017C8  6FAA               	movwf	?_in_low_int& (0+255),b
  3818  0017CA  0012               	return	
  3819  0017CC                     l2611:
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;interrupts.c: 45: return (1);
  3823  0017CC  0E00               	movlw	0
  3824  0017CE  0100               	movlb	0	; () banked
  3825  0017D0  0100               	movlb	0	; () banked
  3826  0017D2  6FAB               	movwf	(?_in_low_int+1)& (0+255),b
  3827  0017D4  0E01               	movlw	1
  3828  0017D6  0100               	movlb	0	; () banked
  3829  0017D8  6FAA               	movwf	?_in_low_int& (0+255),b
  3830  0017DA  0012               	return	
  3831  0017DC                     __end_of_in_low_int:
  3832                           	opt stack 0
  3833                           tblptru	equ	0xFF8
  3834                           tblptrh	equ	0xFF7
  3835                           tblptrl	equ	0xFF6
  3836                           tablat	equ	0xFF5
  3837                           prodh	equ	0xFF4
  3838                           prodl	equ	0xFF3
  3839                           intcon	equ	0xFF2
  3840                           postinc0	equ	0xFEE
  3841                           wreg	equ	0xFE8
  3842                           indf1	equ	0xFE7
  3843                           fsr1h	equ	0xFE2
  3844                           fsr1l	equ	0xFE1
  3845                           indf2	equ	0xFDF
  3846                           postinc2	equ	0xFDE
  3847                           postdec2	equ	0xFDD
  3848                           fsr2h	equ	0xFDA
  3849                           fsr2l	equ	0xFD9
  3850                           status	equ	0xFD8
  3851                           
  3852 ;; *************** function _in_high_int *****************
  3853 ;; Defined at:
  3854 ;;		line 31 in file "../src/interrupts.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;		None
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  2   40[BANK0 ] int 
  3861 ;; Registers used:
  3862 ;;		wreg, status,2
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3868 ;;      Params:         0       2       0       0       0
  3869 ;;      Locals:         0       0       0       0       0
  3870 ;;      Temps:          0       0       0       0       0
  3871 ;;      Totals:         0       2       0       0       0
  3872 ;;Total ram usage:        2 bytes
  3873 ;; Hardware stack levels used:    1
  3874 ;; Hardware stack levels required when called:   10
  3875 ;; This function calls:
  3876 ;;		Nothing
  3877 ;; This function is called by:
  3878 ;;		_in_low_int
  3879 ;;		_in_main
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           	psect	text22
  3884  001C3C                     __ptext22:
  3885                           	opt stack 0
  3886  001C3C                     _in_high_int:
  3887                           	opt stack 16
  3888                           
  3889                           ;interrupts.c: 32: return (!INTCONbits.GIEH);
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;incstack = 0
  3893  001C3C  0E00               	movlw	0
  3894  001C3E  AEF2               	btfss	intcon,7,c	;volatile
  3895  001C40  0E01               	movlw	1
  3896  001C42  0100               	movlb	0	; () banked
  3897  001C44  0100               	movlb	0	; () banked
  3898  001C46  6FA8               	movwf	?_in_high_int& (0+255),b
  3899  001C48  0100               	movlb	0	; () banked
  3900  001C4A  6BA9               	clrf	(?_in_high_int+1)& (0+255),b
  3901  001C4C  0012               	return	
  3902  001C4E                     __end_of_in_high_int:
  3903                           	opt stack 0
  3904                           tblptru	equ	0xFF8
  3905                           tblptrh	equ	0xFF7
  3906                           tblptrl	equ	0xFF6
  3907                           tablat	equ	0xFF5
  3908                           prodh	equ	0xFF4
  3909                           prodl	equ	0xFF3
  3910                           intcon	equ	0xFF2
  3911                           postinc0	equ	0xFEE
  3912                           wreg	equ	0xFE8
  3913                           indf1	equ	0xFE7
  3914                           fsr1h	equ	0xFE2
  3915                           fsr1l	equ	0xFE1
  3916                           indf2	equ	0xFDF
  3917                           postinc2	equ	0xFDE
  3918                           postdec2	equ	0xFDD
  3919                           fsr2h	equ	0xFDA
  3920                           fsr2l	equ	0xFD9
  3921                           status	equ	0xFD8
  3922                           
  3923 ;; *************** function _check_msg *****************
  3924 ;; Defined at:
  3925 ;;		line 222 in file "../src/messages.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;  qptr            2   40[BANK0 ] PTR struct __msg_queue
  3928 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;		None
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  1    wreg      unsigned char 
  3933 ;; Registers used:
  3934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3940 ;;      Params:         0       2       0       0       0
  3941 ;;      Locals:         0       0       0       0       0
  3942 ;;      Temps:          0       1       0       0       0
  3943 ;;      Totals:         0       3       0       0       0
  3944 ;;Total ram usage:        3 bytes
  3945 ;; Hardware stack levels used:    1
  3946 ;; Hardware stack levels required when called:   10
  3947 ;; This function calls:
  3948 ;;		Nothing
  3949 ;; This function is called by:
  3950 ;;		_block_on_To_msgqueues
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           	psect	text23
  3955  001A50                     __ptext23:
  3956                           	opt stack 0
  3957  001A50                     _check_msg:
  3958                           	opt stack 18
  3959                           
  3960                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;incstack = 0
  3964  001A50  0100               	movlb	0	; () banked
  3965  001A52  EE20 F035          	lfsr	2,53
  3966  001A56  0100               	movlb	0	; () banked
  3967  001A58  51A8               	movf	check_msg@qptr& (0+255),w,b
  3968  001A5A  26D9               	addwf	fsr2l,f,c
  3969  001A5C  0100               	movlb	0	; () banked
  3970  001A5E  51A9               	movf	(check_msg@qptr+1)& (0+255),w,b
  3971  001A60  22DA               	addwfc	fsr2h,f,c
  3972  001A62  50DF               	movf	indf2,w,c
  3973  001A64  0100               	movlb	0	; () banked
  3974  001A66  6FAA               	movwf	??_check_msg& (0+255),b
  3975  001A68  0100               	movlb	0	; () banked
  3976  001A6A  51AA               	movf	??_check_msg& (0+255),w,b
  3977  001A6C  0D0D               	mullw	13
  3978  001A6E  50F3               	movf	prodl,w,c
  3979  001A70  0100               	movlb	0	; () banked
  3980  001A72  0100               	movlb	0	; () banked
  3981  001A74  25A8               	addwf	check_msg@qptr& (0+255),w,b
  3982  001A76  6ED9               	movwf	fsr2l,c
  3983  001A78  50F4               	movf	prodh,w,c
  3984  001A7A  0100               	movlb	0	; () banked
  3985  001A7C  0100               	movlb	0	; () banked
  3986  001A7E  21A9               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3987  001A80  6EDA               	movwf	fsr2h,c
  3988  001A82  50DF               	movf	indf2,w,c
  3989  001A84  0012               	return	
  3990  001A86                     __end_of_check_msg:
  3991                           	opt stack 0
  3992                           tblptru	equ	0xFF8
  3993                           tblptrh	equ	0xFF7
  3994                           tblptrl	equ	0xFF6
  3995                           tablat	equ	0xFF5
  3996                           prodh	equ	0xFF4
  3997                           prodl	equ	0xFF3
  3998                           intcon	equ	0xFF2
  3999                           postinc0	equ	0xFEE
  4000                           wreg	equ	0xFE8
  4001                           indf1	equ	0xFE7
  4002                           fsr1h	equ	0xFE2
  4003                           fsr1l	equ	0xFE1
  4004                           indf2	equ	0xFDF
  4005                           postinc2	equ	0xFDE
  4006                           postdec2	equ	0xFDD
  4007                           fsr2h	equ	0xFDA
  4008                           fsr2l	equ	0xFD9
  4009                           status	equ	0xFD8
  4010                           
  4011 ;; *************** function _Delay1KTCYx *****************
  4012 ;; Defined at:
  4013 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/pic18/d1ktcyx.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;  unit            1    wreg     unsigned char 
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  unit            1   40[BANK0 ] unsigned char 
  4018 ;; Return value:  Size  Location     Type
  4019 ;;		None               void
  4020 ;; Registers used:
  4021 ;;		wreg
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4027 ;;      Params:         0       0       0       0       0
  4028 ;;      Locals:         0       1       0       0       0
  4029 ;;      Temps:          0       0       0       0       0
  4030 ;;      Totals:         0       1       0       0       0
  4031 ;;Total ram usage:        1 bytes
  4032 ;; Hardware stack levels used:    1
  4033 ;; Hardware stack levels required when called:   10
  4034 ;; This function calls:
  4035 ;;		Nothing
  4036 ;; This function is called by:
  4037 ;;		_block_on_To_msgqueues
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           	psect	text24
  4042  001C02                     __ptext24:
  4043                           	opt stack 0
  4044  001C02                     _Delay1KTCYx:
  4045                           	opt stack 18
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;incstack = 0
  4049                           ;Delay1KTCYx@unit stored from wreg
  4050  001C02  CFE8 F0A8          	movff	wreg,Delay1KTCYx@unit
  4051  001C06                     l723:
  4052  001C06  0EFA               	movlw	250
  4053  001C08                     u2447:
  4054  001C08  F000               	nop	
  4055  001C0A  2EE8               	decfsz	wreg,f,c
  4056  001C0C  D7FD               	goto	u2447
  4057  001C0E  0100               	movlb	0	; () banked
  4058  001C10  0100               	movlb	0	; () banked
  4059  001C12  2FA8               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4060  001C14  D7F8               	goto	l723
  4061  001C16  0012               	return	
  4062  001C18                     __end_of_Delay1KTCYx:
  4063                           	opt stack 0
  4064                           tblptru	equ	0xFF8
  4065                           tblptrh	equ	0xFF7
  4066                           tblptrl	equ	0xFF6
  4067                           tablat	equ	0xFF5
  4068                           prodh	equ	0xFF4
  4069                           prodl	equ	0xFF3
  4070                           intcon	equ	0xFF2
  4071                           postinc0	equ	0xFEE
  4072                           wreg	equ	0xFE8
  4073                           indf1	equ	0xFE7
  4074                           fsr1h	equ	0xFE2
  4075                           fsr1l	equ	0xFE1
  4076                           indf2	equ	0xFDF
  4077                           postinc2	equ	0xFDE
  4078                           postdec2	equ	0xFDD
  4079                           fsr2h	equ	0xFDA
  4080                           fsr2l	equ	0xFD9
  4081                           status	equ	0xFD8
  4082                           
  4083 ;; *************** function _ToMainLow_recvmsg *****************
  4084 ;; Defined at:
  4085 ;;		line 112 in file "../src/messages.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;  maxlength       1    wreg     unsigned char 
  4088 ;;  msgtype         2   64[BANK0 ] PTR unsigned char 
  4089 ;;		 -> main@msgtype(1), 
  4090 ;;  data            2   66[BANK0 ] PTR void 
  4091 ;;		 -> main@msgbuffer(11), 
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;  maxlength       1   68[BANK0 ] unsigned char 
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  1    wreg      char 
  4096 ;; Registers used:
  4097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4103 ;;      Params:         0       4       0       0       0
  4104 ;;      Locals:         0       1       0       0       0
  4105 ;;      Temps:          0       0       0       0       0
  4106 ;;      Totals:         0       5       0       0       0
  4107 ;;Total ram usage:        5 bytes
  4108 ;; Hardware stack levels used:    1
  4109 ;; Hardware stack levels required when called:   12
  4110 ;; This function calls:
  4111 ;;		_recv_msg
  4112 ;; This function is called by:
  4113 ;;		_main
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117                           	psect	text25
  4118  001862                     __ptext25:
  4119                           	opt stack 0
  4120  001862                     _ToMainLow_recvmsg:
  4121                           	opt stack 17
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;incstack = 0
  4125                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4126  001862  CFE8 F0C4          	movff	wreg,ToMainLow_recvmsg@maxlength
  4127                           
  4128                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4129  001866  0101               	movlb	1	; () banked
  4130  001868  0E01               	movlw	high _ToMainLow_MQ
  4131  00186A  0100               	movlb	0	; () banked
  4132  00186C  0100               	movlb	0	; () banked
  4133  00186E  6FB3               	movwf	(recv_msg@qptr+1)& (0+255),b
  4134  001870  0101               	movlb	1	; () banked
  4135  001872  0E6C               	movlw	low _ToMainLow_MQ
  4136  001874  0100               	movlb	0	; () banked
  4137  001876  0100               	movlb	0	; () banked
  4138  001878  6FB2               	movwf	recv_msg@qptr& (0+255),b
  4139  00187A  C0C4  F0B4         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4140  00187E  0100               	movlb	0	; () banked
  4141  001880  0100               	movlb	0	; () banked
  4142  001882  C0C1  F0B6         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4143  001886  0100               	movlb	0	; () banked
  4144  001888  0100               	movlb	0	; () banked
  4145  00188A  C0C0  F0B5         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4146  00188E  0100               	movlb	0	; () banked
  4147  001890  0100               	movlb	0	; () banked
  4148  001892  C0C3  F0B8         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4149  001896  0100               	movlb	0	; () banked
  4150  001898  0100               	movlb	0	; () banked
  4151  00189A  C0C2  F0B7         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4152  00189E  ECD0  F004         	call	_recv_msg	;wreg free
  4153  0018A2  0012               	return	
  4154  0018A4                     __end_of_ToMainLow_recvmsg:
  4155                           	opt stack 0
  4156                           tblptru	equ	0xFF8
  4157                           tblptrh	equ	0xFF7
  4158                           tblptrl	equ	0xFF6
  4159                           tablat	equ	0xFF5
  4160                           prodh	equ	0xFF4
  4161                           prodl	equ	0xFF3
  4162                           intcon	equ	0xFF2
  4163                           postinc0	equ	0xFEE
  4164                           wreg	equ	0xFE8
  4165                           indf1	equ	0xFE7
  4166                           fsr1h	equ	0xFE2
  4167                           fsr1l	equ	0xFE1
  4168                           indf2	equ	0xFDF
  4169                           postinc2	equ	0xFDE
  4170                           postdec2	equ	0xFDD
  4171                           fsr2h	equ	0xFDA
  4172                           fsr2l	equ	0xFD9
  4173                           status	equ	0xFD8
  4174                           
  4175 ;; *************** function _ToMainHigh_recvmsg *****************
  4176 ;; Defined at:
  4177 ;;		line 135 in file "../src/messages.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;  maxlength       1    wreg     unsigned char 
  4180 ;;  msgtype         2   64[BANK0 ] PTR unsigned char 
  4181 ;;		 -> main@msgtype(1), 
  4182 ;;  data            2   66[BANK0 ] PTR void 
  4183 ;;		 -> main@msgbuffer(11), 
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;  maxlength       1   68[BANK0 ] unsigned char 
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  1    wreg      char 
  4188 ;; Registers used:
  4189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4195 ;;      Params:         0       4       0       0       0
  4196 ;;      Locals:         0       1       0       0       0
  4197 ;;      Temps:          0       0       0       0       0
  4198 ;;      Totals:         0       5       0       0       0
  4199 ;;Total ram usage:        5 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; Hardware stack levels required when called:   12
  4202 ;; This function calls:
  4203 ;;		_recv_msg
  4204 ;; This function is called by:
  4205 ;;		_main
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           	psect	text26
  4210  0018A4                     __ptext26:
  4211                           	opt stack 0
  4212  0018A4                     _ToMainHigh_recvmsg:
  4213                           	opt stack 17
  4214                           
  4215                           ;incstack = 0
  4216                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4217  0018A4  CFE8 F0C4          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4218                           
  4219                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4220  0018A8  0101               	movlb	1	; () banked
  4221  0018AA  0E01               	movlw	high _ToMainHigh_MQ
  4222  0018AC  0100               	movlb	0	; () banked
  4223  0018AE  0100               	movlb	0	; () banked
  4224  0018B0  6FB3               	movwf	(recv_msg@qptr+1)& (0+255),b
  4225  0018B2  0101               	movlb	1	; () banked
  4226  0018B4  0E36               	movlw	low _ToMainHigh_MQ
  4227  0018B6  0100               	movlb	0	; () banked
  4228  0018B8  0100               	movlb	0	; () banked
  4229  0018BA  6FB2               	movwf	recv_msg@qptr& (0+255),b
  4230  0018BC  C0C4  F0B4         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4231  0018C0  0100               	movlb	0	; () banked
  4232  0018C2  0100               	movlb	0	; () banked
  4233  0018C4  C0C1  F0B6         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4234  0018C8  0100               	movlb	0	; () banked
  4235  0018CA  0100               	movlb	0	; () banked
  4236  0018CC  C0C0  F0B5         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4237  0018D0  0100               	movlb	0	; () banked
  4238  0018D2  0100               	movlb	0	; () banked
  4239  0018D4  C0C3  F0B8         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4240  0018D8  0100               	movlb	0	; () banked
  4241  0018DA  0100               	movlb	0	; () banked
  4242  0018DC  C0C2  F0B7         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4243  0018E0  ECD0  F004         	call	_recv_msg	;wreg free
  4244  0018E4  0012               	return	
  4245  0018E6                     __end_of_ToMainHigh_recvmsg:
  4246                           	opt stack 0
  4247                           tblptru	equ	0xFF8
  4248                           tblptrh	equ	0xFF7
  4249                           tblptrl	equ	0xFF6
  4250                           tablat	equ	0xFF5
  4251                           prodh	equ	0xFF4
  4252                           prodl	equ	0xFF3
  4253                           intcon	equ	0xFF2
  4254                           postinc0	equ	0xFEE
  4255                           wreg	equ	0xFE8
  4256                           indf1	equ	0xFE7
  4257                           fsr1h	equ	0xFE2
  4258                           fsr1l	equ	0xFE1
  4259                           indf2	equ	0xFDF
  4260                           postinc2	equ	0xFDE
  4261                           postdec2	equ	0xFDD
  4262                           fsr2h	equ	0xFDA
  4263                           fsr2l	equ	0xFD9
  4264                           status	equ	0xFD8
  4265                           
  4266 ;; *************** function _recv_msg *****************
  4267 ;; Defined at:
  4268 ;;		line 63 in file "../src/messages.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;  qptr            2   50[BANK0 ] PTR struct __msg_queue
  4271 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4272 ;;  maxlength       1   52[BANK0 ] unsigned char 
  4273 ;;  msgtype         2   53[BANK0 ] PTR unsigned char 
  4274 ;;		 -> main@msgtype(1), timer0_int_handler@msgtype(2), 
  4275 ;;  data            2   55[BANK0 ] PTR void 
  4276 ;;		 -> main@msgbuffer(11), timer0_int_handler@val(2), 
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;  qmsg            2   62[BANK0 ] PTR struct __msg
  4279 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4280 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4281 ;;  tlength         2   60[BANK0 ] unsigned int 
  4282 ;;  slot            1   59[BANK0 ] unsigned char 
  4283 ;; Return value:  Size  Location     Type
  4284 ;;                  1    wreg      char 
  4285 ;; Registers used:
  4286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4292 ;;      Params:         0       7       0       0       0
  4293 ;;      Locals:         0       5       0       0       0
  4294 ;;      Temps:          0       2       0       0       0
  4295 ;;      Totals:         0      14       0       0       0
  4296 ;;Total ram usage:       14 bytes
  4297 ;; Hardware stack levels used:    1
  4298 ;; Hardware stack levels required when called:   11
  4299 ;; This function calls:
  4300 ;;		_memcpy
  4301 ;; This function is called by:
  4302 ;;		_ToMainLow_recvmsg
  4303 ;;		_ToMainHigh_recvmsg
  4304 ;;		_FromMainLow_recvmsg
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           	psect	text27
  4309  0009A0                     __ptext27:
  4310                           	opt stack 0
  4311  0009A0                     _recv_msg:
  4312                           	opt stack 17
  4313                           
  4314                           ;messages.c: 64: unsigned char slot;
  4315                           ;messages.c: 68: msg *qmsg;
  4316                           ;messages.c: 69: size_t tlength;
  4317                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4318                           
  4319                           ;incstack = 0
  4320  0009A0  0100               	movlb	0	; () banked
  4321  0009A2  EE20 F035          	lfsr	2,53
  4322  0009A6  0100               	movlb	0	; () banked
  4323  0009A8  51B2               	movf	recv_msg@qptr& (0+255),w,b
  4324  0009AA  26D9               	addwf	fsr2l,f,c
  4325  0009AC  0100               	movlb	0	; () banked
  4326  0009AE  51B3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4327  0009B0  22DA               	addwfc	fsr2h,f,c
  4328  0009B2  50DF               	movf	indf2,w,c
  4329  0009B4  0100               	movlb	0	; () banked
  4330  0009B6  0100               	movlb	0	; () banked
  4331  0009B8  6FBB               	movwf	recv_msg@slot& (0+255),b
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4335  0009BA  0100               	movlb	0	; () banked
  4336  0009BC  0100               	movlb	0	; () banked
  4337  0009BE  51BB               	movf	recv_msg@slot& (0+255),w,b
  4338  0009C0  0D0D               	mullw	13
  4339  0009C2  50F3               	movf	prodl,w,c
  4340  0009C4  0100               	movlb	0	; () banked
  4341  0009C6  0100               	movlb	0	; () banked
  4342  0009C8  25B2               	addwf	recv_msg@qptr& (0+255),w,b
  4343  0009CA  0100               	movlb	0	; () banked
  4344  0009CC  0100               	movlb	0	; () banked
  4345  0009CE  6FBE               	movwf	recv_msg@qmsg& (0+255),b
  4346  0009D0  50F4               	movf	prodh,w,c
  4347  0009D2  0100               	movlb	0	; () banked
  4348  0009D4  0100               	movlb	0	; () banked
  4349  0009D6  21B3               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4350  0009D8  0100               	movlb	0	; () banked
  4351  0009DA  6FBF               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;messages.c: 74: if (qmsg->full == 1) {
  4355  0009DC  0E01               	movlw	1
  4356  0009DE  C0BE  FFD9         	movff	recv_msg@qmsg,fsr2l
  4357  0009E2  C0BF  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4358  0009E6  62DF               	cpfseq	indf2,c
  4359  0009E8  D074               	goto	l2537
  4360                           
  4361                           ; BSR set to: 0
  4362                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4363  0009EA  0100               	movlb	0	; () banked
  4364  0009EC  EE20 F001          	lfsr	2,1
  4365  0009F0  0100               	movlb	0	; () banked
  4366  0009F2  51BE               	movf	recv_msg@qmsg& (0+255),w,b
  4367  0009F4  26D9               	addwf	fsr2l,f,c
  4368  0009F6  0100               	movlb	0	; () banked
  4369  0009F8  51BF               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4370  0009FA  22DA               	addwfc	fsr2h,f,c
  4371  0009FC  50DF               	movf	indf2,w,c
  4372  0009FE  0100               	movlb	0	; () banked
  4373  000A00  0100               	movlb	0	; () banked
  4374  000A02  5DB4               	subwf	recv_msg@maxlength& (0+255),w,b
  4375  000A04  B0D8               	btfsc	status,0,c
  4376  000A06  D002               	goto	l2521
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;messages.c: 77: return (-3);
  4380  000A08  0EFD               	movlw	253
  4381  000A0A  0012               	return	
  4382  000A0C                     l2521:
  4383                           
  4384                           ; BSR set to: 0
  4385                           ;messages.c: 78: }
  4386                           ;messages.c: 80: tlength = qmsg->length;
  4387  000A0C  0100               	movlb	0	; () banked
  4388  000A0E  EE20 F001          	lfsr	2,1
  4389  000A12  0100               	movlb	0	; () banked
  4390  000A14  51BE               	movf	recv_msg@qmsg& (0+255),w,b
  4391  000A16  26D9               	addwf	fsr2l,f,c
  4392  000A18  0100               	movlb	0	; () banked
  4393  000A1A  51BF               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4394  000A1C  22DA               	addwfc	fsr2h,f,c
  4395  000A1E  50DF               	movf	indf2,w,c
  4396  000A20  0100               	movlb	0	; () banked
  4397  000A22  6FB9               	movwf	??_recv_msg& (0+255),b
  4398  000A24  0100               	movlb	0	; () banked
  4399  000A26  51B9               	movf	??_recv_msg& (0+255),w,b
  4400  000A28  0100               	movlb	0	; () banked
  4401  000A2A  0100               	movlb	0	; () banked
  4402  000A2C  6FBC               	movwf	recv_msg@tlength& (0+255),b
  4403  000A2E  0100               	movlb	0	; () banked
  4404  000A30  6BBD               	clrf	(recv_msg@tlength+1)& (0+255),b
  4405                           
  4406                           ; BSR set to: 0
  4407                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4408  000A32  0100               	movlb	0	; () banked
  4409  000A34  0100               	movlb	0	; () banked
  4410  000A36  C0B8  F0A9         	movff	recv_msg@data+1,memcpy@d1+1
  4411  000A3A  0100               	movlb	0	; () banked
  4412  000A3C  0100               	movlb	0	; () banked
  4413  000A3E  C0B7  F0A8         	movff	recv_msg@data,memcpy@d1
  4414  000A42  0E03               	movlw	3
  4415  000A44  0100               	movlb	0	; () banked
  4416  000A46  0100               	movlb	0	; () banked
  4417  000A48  25BE               	addwf	recv_msg@qmsg& (0+255),w,b
  4418  000A4A  0100               	movlb	0	; () banked
  4419  000A4C  6FB9               	movwf	??_recv_msg& (0+255),b
  4420  000A4E  0E00               	movlw	0
  4421  000A50  0100               	movlb	0	; () banked
  4422  000A52  0100               	movlb	0	; () banked
  4423  000A54  21BF               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4424  000A56  0100               	movlb	0	; () banked
  4425  000A58  6FBA               	movwf	(??_recv_msg+1)& (0+255),b
  4426  000A5A  C0B9  F0AA         	movff	??_recv_msg,memcpy@s1
  4427  000A5E  C0BA  F0AB         	movff	??_recv_msg+1,memcpy@s1+1
  4428  000A62  C0BC  F0AC         	movff	recv_msg@tlength,memcpy@n
  4429  000A66  C0BD  F0AD         	movff	recv_msg@tlength+1,memcpy@n+1
  4430  000A6A  EC51  F00B         	call	_memcpy	;wreg free
  4431                           
  4432                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4433  000A6E  0100               	movlb	0	; () banked
  4434  000A70  EE20 F035          	lfsr	2,53
  4435  000A74  0100               	movlb	0	; () banked
  4436  000A76  51B2               	movf	recv_msg@qptr& (0+255),w,b
  4437  000A78  26D9               	addwf	fsr2l,f,c
  4438  000A7A  0100               	movlb	0	; () banked
  4439  000A7C  51B3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4440  000A7E  22DA               	addwfc	fsr2h,f,c
  4441  000A80  0100               	movlb	0	; () banked
  4442  000A82  EE10 F035          	lfsr	1,53
  4443  000A86  0100               	movlb	0	; () banked
  4444  000A88  51B2               	movf	recv_msg@qptr& (0+255),w,b
  4445  000A8A  26E1               	addwf	fsr1l,f,c
  4446  000A8C  0100               	movlb	0	; () banked
  4447  000A8E  51B3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4448  000A90  22E2               	addwfc	fsr1h,f,c
  4449  000A92  50E7               	movf	indf1,w,c
  4450  000A94  0100               	movlb	0	; () banked
  4451  000A96  6FB9               	movwf	??_recv_msg& (0+255),b
  4452  000A98  0100               	movlb	0	; () banked
  4453  000A9A  29B9               	incf	??_recv_msg& (0+255),w,b
  4454  000A9C  0B03               	andlw	3
  4455  000A9E  6EDF               	movwf	indf2,c
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4459  000AA0  0100               	movlb	0	; () banked
  4460  000AA2  EE20 F002          	lfsr	2,2
  4461  000AA6  0100               	movlb	0	; () banked
  4462  000AA8  51BE               	movf	recv_msg@qmsg& (0+255),w,b
  4463  000AAA  26D9               	addwf	fsr2l,f,c
  4464  000AAC  0100               	movlb	0	; () banked
  4465  000AAE  51BF               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4466  000AB0  22DA               	addwfc	fsr2h,f,c
  4467  000AB2  C0B5  FFE1         	movff	recv_msg@msgtype,fsr1l
  4468  000AB6  C0B6  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4469  000ABA  CFDF FFE7          	movff	indf2,indf1
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;messages.c: 91: qmsg->full = 0;
  4473  000ABE  C0BE  FFD9         	movff	recv_msg@qmsg,fsr2l
  4474  000AC2  C0BF  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4475  000AC6  0E00               	movlw	0
  4476  000AC8  6EDF               	movwf	indf2,c
  4477                           
  4478                           ; BSR set to: 0
  4479                           ;messages.c: 92: return (tlength);
  4480  000ACA  0100               	movlb	0	; () banked
  4481  000ACC  0100               	movlb	0	; () banked
  4482  000ACE  51BC               	movf	recv_msg@tlength& (0+255),w,b
  4483  000AD0  0012               	return	
  4484  000AD2                     l2537:
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;messages.c: 94: return (-4);
  4488  000AD2  0EFC               	movlw	252
  4489  000AD4  0012               	return	
  4490  000AD6                     __end_of_recv_msg:
  4491                           	opt stack 0
  4492                           tblptru	equ	0xFF8
  4493                           tblptrh	equ	0xFF7
  4494                           tblptrl	equ	0xFF6
  4495                           tablat	equ	0xFF5
  4496                           prodh	equ	0xFF4
  4497                           prodl	equ	0xFF3
  4498                           intcon	equ	0xFF2
  4499                           postinc0	equ	0xFEE
  4500                           wreg	equ	0xFE8
  4501                           indf1	equ	0xFE7
  4502                           fsr1h	equ	0xFE2
  4503                           fsr1l	equ	0xFE1
  4504                           indf2	equ	0xFDF
  4505                           postinc2	equ	0xFDE
  4506                           postdec2	equ	0xFDD
  4507                           fsr2h	equ	0xFDA
  4508                           fsr2l	equ	0xFD9
  4509                           status	equ	0xFD8
  4510                           
  4511 ;; *************** function _memcpy *****************
  4512 ;; Defined at:
  4513 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;  d1              2   40[BANK0 ] PTR void 
  4516 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4517 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4518 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  4519 ;;  s1              2   42[BANK0 ] PTR const void 
  4520 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4521 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4522 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), FromMainHigh_MQ(54), 
  4523 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), i2c_int_handler@error_buf(3), 
  4524 ;;		 -> NULL(0), timer0_int_handler@val(2), 
  4525 ;;  n               2   44[BANK0 ] unsigned int 
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;  s               2   48[BANK0 ] PTR const unsigned char 
  4528 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4529 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4530 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), FromMainHigh_MQ(54), 
  4531 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), i2c_int_handler@error_buf(3), 
  4532 ;;		 -> NULL(0), timer0_int_handler@val(2), 
  4533 ;;  d               2   46[BANK0 ] PTR unsigned char 
  4534 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4535 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4536 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  2   40[BANK0 ] PTR void 
  4539 ;; Registers used:
  4540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4546 ;;      Params:         0       6       0       0       0
  4547 ;;      Locals:         0       4       0       0       0
  4548 ;;      Temps:          0       0       0       0       0
  4549 ;;      Totals:         0      10       0       0       0
  4550 ;;Total ram usage:       10 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; Hardware stack levels required when called:   10
  4553 ;; This function calls:
  4554 ;;		Nothing
  4555 ;; This function is called by:
  4556 ;;		_send_msg
  4557 ;;		_recv_msg
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           	psect	text28
  4562  0016A2                     __ptext28:
  4563                           	opt stack 0
  4564  0016A2                     _memcpy:
  4565                           	opt stack 16
  4566                           
  4567                           ; BSR set to: 0
  4568                           ;incstack = 0
  4569  0016A2  0100               	movlb	0	; () banked
  4570  0016A4  0100               	movlb	0	; () banked
  4571  0016A6  C0AB  F0B1         	movff	memcpy@s1+1,memcpy@s+1
  4572  0016AA  0100               	movlb	0	; () banked
  4573  0016AC  0100               	movlb	0	; () banked
  4574  0016AE  C0AA  F0B0         	movff	memcpy@s1,memcpy@s
  4575  0016B2  0100               	movlb	0	; () banked
  4576  0016B4  0100               	movlb	0	; () banked
  4577  0016B6  C0A9  F0AF         	movff	memcpy@d1+1,memcpy@d+1
  4578  0016BA  0100               	movlb	0	; () banked
  4579  0016BC  0100               	movlb	0	; () banked
  4580  0016BE  C0A8  F0AE         	movff	memcpy@d1,memcpy@d
  4581  0016C2  D012               	goto	l2507
  4582  0016C4                     l2501:
  4583                           
  4584                           ; BSR set to: 0
  4585  0016C4  C0B0  FFD9         	movff	memcpy@s,fsr2l
  4586  0016C8  C0B1  FFDA         	movff	memcpy@s+1,fsr2h
  4587  0016CC  C0AE  FFE1         	movff	memcpy@d,fsr1l
  4588  0016D0  C0AF  FFE2         	movff	memcpy@d+1,fsr1h
  4589  0016D4  CFDF FFE7          	movff	indf2,indf1
  4590                           
  4591                           ; BSR set to: 0
  4592  0016D8  0100               	movlb	0	; () banked
  4593  0016DA  0100               	movlb	0	; () banked
  4594  0016DC  4BB0               	infsnz	memcpy@s& (0+255),f,b
  4595  0016DE  2BB1               	incf	(memcpy@s+1)& (0+255),f,b
  4596                           
  4597                           ; BSR set to: 0
  4598  0016E0  0100               	movlb	0	; () banked
  4599  0016E2  0100               	movlb	0	; () banked
  4600  0016E4  4BAE               	infsnz	memcpy@d& (0+255),f,b
  4601  0016E6  2BAF               	incf	(memcpy@d+1)& (0+255),f,b
  4602  0016E8                     l2507:
  4603                           
  4604                           ; BSR set to: 0
  4605  0016E8  0100               	movlb	0	; () banked
  4606  0016EA  0100               	movlb	0	; () banked
  4607  0016EC  07AC               	decf	memcpy@n& (0+255),f,b
  4608  0016EE  A0D8               	btfss	status,0,c
  4609  0016F0  07AD               	decf	(memcpy@n+1)& (0+255),f,b
  4610  0016F2  0100               	movlb	0	; () banked
  4611  0016F4  29AC               	incf	memcpy@n& (0+255),w,b
  4612  0016F6  B4D8               	btfsc	status,2,c
  4613  0016F8  29AD               	incf	(memcpy@n+1)& (0+255),w,b
  4614  0016FA  B4D8               	btfsc	status,2,c
  4615                           
  4616                           ; BSR set to: 0
  4617                           
  4618                           ; BSR set to: 0
  4619                           ;	Return value of _memcpy is never used
  4620  0016FC  0012               	return	
  4621  0016FE  D7E2               	goto	l2501
  4622  001700                     __end_of_memcpy:
  4623                           	opt stack 0
  4624                           tblptru	equ	0xFF8
  4625                           tblptrh	equ	0xFF7
  4626                           tblptrl	equ	0xFF6
  4627                           tablat	equ	0xFF5
  4628                           prodh	equ	0xFF4
  4629                           prodl	equ	0xFF3
  4630                           intcon	equ	0xFF2
  4631                           postinc0	equ	0xFEE
  4632                           wreg	equ	0xFE8
  4633                           indf1	equ	0xFE7
  4634                           fsr1h	equ	0xFE2
  4635                           fsr1l	equ	0xFE1
  4636                           indf2	equ	0xFDF
  4637                           postinc2	equ	0xFDE
  4638                           postdec2	equ	0xFDD
  4639                           fsr2h	equ	0xFDA
  4640                           fsr2l	equ	0xFD9
  4641                           status	equ	0xFD8
  4642                           
  4643 ;; *************** function _OpenUSART *****************
  4644 ;; Defined at:
  4645 ;;		line 73 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uopen.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  config          1    wreg     unsigned char 
  4648 ;;  spbrg           2   40[BANK0 ] unsigned int 
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;  config          1   45[BANK0 ] unsigned char 
  4651 ;; Return value:  Size  Location     Type
  4652 ;;		None               void
  4653 ;; Registers used:
  4654 ;;		wreg, status,2
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4660 ;;      Params:         0       2       0       0       0
  4661 ;;      Locals:         0       1       0       0       0
  4662 ;;      Temps:          0       3       0       0       0
  4663 ;;      Totals:         0       6       0       0       0
  4664 ;;Total ram usage:        6 bytes
  4665 ;; Hardware stack levels used:    1
  4666 ;; Hardware stack levels required when called:   10
  4667 ;; This function calls:
  4668 ;;		Nothing
  4669 ;; This function is called by:
  4670 ;;		_main
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           	psect	text29
  4675  0012C4                     __ptext29:
  4676                           	opt stack 0
  4677  0012C4                     _OpenUSART:
  4678                           	opt stack 19
  4679                           
  4680                           ; BSR set to: 0
  4681                           ;incstack = 0
  4682                           ;OpenUSART@config stored from wreg
  4683  0012C4  CFE8 F0AD          	movff	wreg,OpenUSART@config
  4684  0012C8  0E00               	movlw	0
  4685  0012CA  6EAC               	movwf	4012,c	;volatile
  4686  0012CC  0E00               	movlw	0
  4687  0012CE  6EAB               	movwf	4011,c	;volatile
  4688  0012D0  0100               	movlb	0	; () banked
  4689  0012D2  0100               	movlb	0	; () banked
  4690  0012D4  B1AD               	btfsc	OpenUSART@config& (0+255),0,b
  4691                           
  4692                           ; BSR set to: 0
  4693  0012D6  88AC               	bsf	4012,4,c	;volatile
  4694                           
  4695                           ; BSR set to: 0
  4696                           
  4697                           ; BSR set to: 0
  4698  0012D8  0100               	movlb	0	; () banked
  4699  0012DA  0100               	movlb	0	; () banked
  4700  0012DC  A3AD               	btfss	OpenUSART@config& (0+255),1,b
  4701  0012DE  D002               	goto	l2801
  4702                           
  4703                           ; BSR set to: 0
  4704  0012E0  8CAC               	bsf	4012,6,c	;volatile
  4705  0012E2  8CAB               	bsf	4011,6,c	;volatile
  4706  0012E4                     l2801:
  4707                           
  4708                           ; BSR set to: 0
  4709  0012E4  0100               	movlb	0	; () banked
  4710  0012E6  0100               	movlb	0	; () banked
  4711  0012E8  B5AD               	btfsc	OpenUSART@config& (0+255),2,b
  4712                           
  4713                           ; BSR set to: 0
  4714  0012EA  8EAC               	bsf	4012,7,c	;volatile
  4715                           
  4716                           ; BSR set to: 0
  4717                           
  4718                           ; BSR set to: 0
  4719  0012EC  0100               	movlb	0	; () banked
  4720  0012EE  0100               	movlb	0	; () banked
  4721  0012F0  A7AD               	btfss	OpenUSART@config& (0+255),3,b
  4722  0012F2  D002               	goto	l490
  4723                           
  4724                           ; BSR set to: 0
  4725  0012F4  88AB               	bsf	4011,4,c	;volatile
  4726  0012F6  D001               	goto	l2809
  4727  0012F8                     l490:
  4728                           
  4729                           ; BSR set to: 0
  4730  0012F8  8AAB               	bsf	4011,5,c	;volatile
  4731  0012FA                     l2809:
  4732                           
  4733                           ; BSR set to: 0
  4734  0012FA  0100               	movlb	0	; () banked
  4735  0012FC  0100               	movlb	0	; () banked
  4736  0012FE  B9AD               	btfsc	OpenUSART@config& (0+255),4,b
  4737                           
  4738                           ; BSR set to: 0
  4739  001300  84AC               	bsf	4012,2,c	;volatile
  4740                           
  4741                           ; BSR set to: 0
  4742  001302  989E               	bcf	3998,4,c	;volatile
  4743                           
  4744                           ; BSR set to: 0
  4745  001304  0100               	movlb	0	; () banked
  4746  001306  0100               	movlb	0	; () banked
  4747  001308  BBAD               	btfsc	OpenUSART@config& (0+255),5,b
  4748                           
  4749                           ; BSR set to: 0
  4750  00130A  86AB               	bsf	4011,3,c	;volatile
  4751                           
  4752                           ; BSR set to: 0
  4753                           
  4754                           ; BSR set to: 0
  4755  00130C  0100               	movlb	0	; () banked
  4756  00130E  0100               	movlb	0	; () banked
  4757  001310  ADAD               	btfss	OpenUSART@config& (0+255),6,b
  4758  001312  D002               	goto	l494
  4759                           
  4760                           ; BSR set to: 0
  4761  001314  8A9D               	bsf	3997,5,c	;volatile
  4762  001316  D001               	goto	l495
  4763  001318                     l494:
  4764                           
  4765                           ; BSR set to: 0
  4766  001318  9A9D               	bcf	3997,5,c	;volatile
  4767  00131A                     l495:
  4768                           
  4769                           ; BSR set to: 0
  4770  00131A  9A9E               	bcf	3998,5,c	;volatile
  4771                           
  4772                           ; BSR set to: 0
  4773  00131C  0100               	movlb	0	; () banked
  4774  00131E  0100               	movlb	0	; () banked
  4775  001320  AFAD               	btfss	OpenUSART@config& (0+255),7,b
  4776  001322  D002               	goto	l496
  4777                           
  4778                           ; BSR set to: 0
  4779  001324  889D               	bsf	3997,4,c	;volatile
  4780  001326  D001               	goto	l497
  4781  001328                     l496:
  4782                           
  4783                           ; BSR set to: 0
  4784  001328  989D               	bcf	3997,4,c	;volatile
  4785  00132A                     l497:
  4786                           
  4787                           ; BSR set to: 0
  4788  00132A  C0A8  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4789                           
  4790                           ; BSR set to: 0
  4791  00132E  0100               	movlb	0	; () banked
  4792  001330  C0A9  F0AA         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4793  001334  C0AA  F0AB         	movff	??_OpenUSART,??_OpenUSART+1
  4794  001338  0100               	movlb	0	; () banked
  4795  00133A  6BAC               	clrf	(??_OpenUSART+2)& (0+255),b
  4796  00133C  0100               	movlb	0	; () banked
  4797  00133E  51AB               	movf	(??_OpenUSART+1)& (0+255),w,b
  4798  001340  6EB0               	movwf	4016,c	;volatile
  4799                           
  4800                           ; BSR set to: 0
  4801  001342  8AAC               	bsf	4012,5,c	;volatile
  4802                           
  4803                           ; BSR set to: 0
  4804  001344  8EAB               	bsf	4011,7,c	;volatile
  4805                           
  4806                           ; BSR set to: 0
  4807  001346  9C94               	bcf	3988,6,c	;volatile
  4808                           
  4809                           ; BSR set to: 0
  4810  001348  8E94               	bsf	3988,7,c	;volatile
  4811                           
  4812                           ; BSR set to: 0
  4813  00134A  A8AC               	btfss	4012,4,c	;volatile
  4814  00134C  0012               	return	
  4815                           
  4816                           ; BSR set to: 0
  4817  00134E  BEAC               	btfsc	4012,7,c	;volatile
  4818  001350  0012               	return	
  4819                           
  4820                           ; BSR set to: 0
  4821  001352  8C94               	bsf	3988,6,c	;volatile
  4822  001354  0012               	return	
  4823  001356                     __end_of_OpenUSART:
  4824                           	opt stack 0
  4825                           tblptru	equ	0xFF8
  4826                           tblptrh	equ	0xFF7
  4827                           tblptrl	equ	0xFF6
  4828                           tablat	equ	0xFF5
  4829                           prodh	equ	0xFF4
  4830                           prodl	equ	0xFF3
  4831                           intcon	equ	0xFF2
  4832                           postinc0	equ	0xFEE
  4833                           wreg	equ	0xFE8
  4834                           indf1	equ	0xFE7
  4835                           fsr1h	equ	0xFE2
  4836                           fsr1l	equ	0xFE1
  4837                           indf2	equ	0xFDF
  4838                           postinc2	equ	0xFDE
  4839                           postdec2	equ	0xFDD
  4840                           fsr2h	equ	0xFDA
  4841                           fsr2l	equ	0xFD9
  4842                           status	equ	0xFD8
  4843                           
  4844 ;; *************** function _OpenTimer1 *****************
  4845 ;; Defined at:
  4846 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1open.c"
  4847 ;; Parameters:    Size  Location     Type
  4848 ;;  config          1    wreg     unsigned char 
  4849 ;; Auto vars:     Size  Location     Type
  4850 ;;  config          1   40[BANK0 ] unsigned char 
  4851 ;; Return value:  Size  Location     Type
  4852 ;;		None               void
  4853 ;; Registers used:
  4854 ;;		wreg, status,2, status,0
  4855 ;; Tracked objects:
  4856 ;;		On entry : 0/0
  4857 ;;		On exit  : 0/0
  4858 ;;		Unchanged: 0/0
  4859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4860 ;;      Params:         0       0       0       0       0
  4861 ;;      Locals:         0       1       0       0       0
  4862 ;;      Temps:          0       0       0       0       0
  4863 ;;      Totals:         0       1       0       0       0
  4864 ;;Total ram usage:        1 bytes
  4865 ;; Hardware stack levels used:    1
  4866 ;; Hardware stack levels required when called:   10
  4867 ;; This function calls:
  4868 ;;		Nothing
  4869 ;; This function is called by:
  4870 ;;		_main
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           
  4874                           	psect	text30
  4875  0019E2                     __ptext30:
  4876                           	opt stack 0
  4877  0019E2                     _OpenTimer1:
  4878                           	opt stack 19
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;incstack = 0
  4882                           ;OpenTimer1@config stored from wreg
  4883  0019E2  CFE8 F0A8          	movff	wreg,OpenTimer1@config
  4884  0019E6  0100               	movlb	0	; () banked
  4885  0019E8  0100               	movlb	0	; () banked
  4886  0019EA  51A8               	movf	OpenTimer1@config& (0+255),w,b
  4887  0019EC  0B7E               	andlw	126
  4888  0019EE  6ECD               	movwf	4045,c	;volatile
  4889                           
  4890                           ; BSR set to: 0
  4891  0019F0  0100               	movlb	0	; () banked
  4892  0019F2  0100               	movlb	0	; () banked
  4893  0019F4  ADA8               	btfss	OpenTimer1@config& (0+255),6,b
  4894  0019F6  D002               	goto	l446
  4895                           
  4896                           ; BSR set to: 0
  4897  0019F8  8ECD               	bsf	4045,7,c	;volatile
  4898  0019FA  D001               	goto	l2781
  4899  0019FC                     l446:
  4900                           
  4901                           ; BSR set to: 0
  4902  0019FC  9ECD               	bcf	4045,7,c	;volatile
  4903  0019FE                     l2781:
  4904                           
  4905                           ; BSR set to: 0
  4906  0019FE  0E00               	movlw	0
  4907  001A00  6ECF               	movwf	4047,c	;volatile
  4908  001A02  0E00               	movlw	0
  4909  001A04  6ECE               	movwf	4046,c	;volatile
  4910                           
  4911                           ; BSR set to: 0
  4912  001A06  909E               	bcf	3998,0,c	;volatile
  4913                           
  4914                           ; BSR set to: 0
  4915  001A08  0100               	movlb	0	; () banked
  4916  001A0A  0100               	movlb	0	; () banked
  4917  001A0C  AFA8               	btfss	OpenTimer1@config& (0+255),7,b
  4918  001A0E  D002               	goto	l448
  4919                           
  4920                           ; BSR set to: 0
  4921  001A10  809D               	bsf	3997,0,c	;volatile
  4922  001A12  D001               	goto	l449
  4923  001A14                     l448:
  4924                           
  4925                           ; BSR set to: 0
  4926  001A14  909D               	bcf	3997,0,c	;volatile
  4927  001A16                     l449:
  4928                           
  4929                           ; BSR set to: 0
  4930  001A16  80CD               	bsf	4045,0,c	;volatile
  4931                           
  4932                           ; BSR set to: 0
  4933  001A18  0012               	return	
  4934  001A1A                     __end_of_OpenTimer1:
  4935                           	opt stack 0
  4936                           tblptru	equ	0xFF8
  4937                           tblptrh	equ	0xFF7
  4938                           tblptrl	equ	0xFF6
  4939                           tablat	equ	0xFF5
  4940                           prodh	equ	0xFF4
  4941                           prodl	equ	0xFF3
  4942                           intcon	equ	0xFF2
  4943                           postinc0	equ	0xFEE
  4944                           wreg	equ	0xFE8
  4945                           indf1	equ	0xFE7
  4946                           fsr1h	equ	0xFE2
  4947                           fsr1l	equ	0xFE1
  4948                           indf2	equ	0xFDF
  4949                           postinc2	equ	0xFDE
  4950                           postdec2	equ	0xFDD
  4951                           fsr2h	equ	0xFDA
  4952                           fsr2l	equ	0xFD9
  4953                           status	equ	0xFD8
  4954                           
  4955 ;; *************** function _InterruptHandlerLow *****************
  4956 ;; Defined at:
  4957 ;;		line 142 in file "../src/interrupts.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;		None
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;		None
  4962 ;; Return value:  Size  Location     Type
  4963 ;;		None               void
  4964 ;; Registers used:
  4965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4971 ;;      Params:         0       0       0       0       0
  4972 ;;      Locals:         0       0       0       0       0
  4973 ;;      Temps:         17       0       0       0       0
  4974 ;;      Totals:        17       0       0       0       0
  4975 ;;Total ram usage:       17 bytes
  4976 ;; Hardware stack levels used:    1
  4977 ;; Hardware stack levels required when called:    9
  4978 ;; This function calls:
  4979 ;;		_timer1_int_handler
  4980 ;;		_uart_recv_int_handler
  4981 ;;		i1_ConvertADC
  4982 ;; This function is called by:
  4983 ;;		Interrupt level 1
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987                           	psect	intcodelo
  4988  000018                     __pintcodelo:
  4989                           	opt stack 0
  4990  000018                     _InterruptHandlerLow:
  4991                           	opt stack 16
  4992                           
  4993                           ; BSR set to: 0
  4994                           ;incstack = 0
  4995  000018  CFD8 F01E          	movff	status,??_InterruptHandlerLow
  4996  00001C  CFE8 F01F          	movff	wreg,??_InterruptHandlerLow+1
  4997  000020  CFE0 F020          	movff	bsr,??_InterruptHandlerLow+2
  4998  000024  CFFA F021          	movff	pclath,??_InterruptHandlerLow+3
  4999  000028  CFFB F022          	movff	pclatu,??_InterruptHandlerLow+4
  5000  00002C  CFE9 F023          	movff	fsr0l,??_InterruptHandlerLow+5
  5001  000030  CFEA F024          	movff	fsr0h,??_InterruptHandlerLow+6
  5002  000034  CFE1 F025          	movff	fsr1l,??_InterruptHandlerLow+7
  5003  000038  CFE2 F026          	movff	fsr1h,??_InterruptHandlerLow+8
  5004  00003C  CFD9 F027          	movff	fsr2l,??_InterruptHandlerLow+9
  5005  000040  CFDA F028          	movff	fsr2h,??_InterruptHandlerLow+10
  5006  000044  CFF3 F029          	movff	prodl,??_InterruptHandlerLow+11
  5007  000048  CFF4 F02A          	movff	prodh,??_InterruptHandlerLow+12
  5008  00004C  CFF6 F02B          	movff	tblptrl,??_InterruptHandlerLow+13
  5009  000050  CFF7 F02C          	movff	tblptrh,??_InterruptHandlerLow+14
  5010  000054  CFF8 F02D          	movff	tblptru,??_InterruptHandlerLow+15
  5011  000058  CFF5 F02E          	movff	tablat,??_InterruptHandlerLow+16
  5012                           
  5013                           ;interrupts.c: 144: if (PIR1bits.TMR1IF) {
  5014  00005C  A09E               	btfss	3998,0,c	;volatile
  5015  00005E  D005               	goto	i1l3069
  5016                           
  5017                           ;interrupts.c: 145: PIR1bits.TMR1IF = 0;
  5018  000060  909E               	bcf	3998,0,c	;volatile
  5019                           
  5020                           ;interrupts.c: 146: ConvertADC();
  5021  000062  EC56  F00E         	call	i1_ConvertADC	;wreg free
  5022                           
  5023                           ;interrupts.c: 147: timer1_int_handler();
  5024  000066  ECA7  F00B         	call	_timer1_int_handler	;wreg free
  5025  00006A                     i1l3069:
  5026                           
  5027                           ;interrupts.c: 148: }
  5028                           ;interrupts.c: 151: if (PIR1bits.RCIF) {
  5029  00006A  AA9E               	btfss	3998,5,c	;volatile
  5030  00006C  D003               	goto	i1l394
  5031                           
  5032                           ;interrupts.c: 152: PIR1bits.RCIF = 0;
  5033  00006E  9A9E               	bcf	3998,5,c	;volatile
  5034                           
  5035                           ;interrupts.c: 153: uart_recv_int_handler();
  5036  000070  EC14  F009         	call	_uart_recv_int_handler	;wreg free
  5037  000074                     i1l394:
  5038  000074  C02E  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5039  000078  C02D  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5040  00007C  C02C  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5041  000080  C02B  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5042  000084  C02A  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5043  000088  C029  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5044  00008C  C028  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5045  000090  C027  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5046  000094  C026  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5047  000098  C025  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5048  00009C  C024  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5049  0000A0  C023  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5050  0000A4  C022  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5051  0000A8  C021  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5052  0000AC  C020  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5053  0000B0  C01F  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5054  0000B4  C01E  FFD8         	movff	??_InterruptHandlerLow,status
  5055  0000B8  0010               	retfie	
  5056  0000BA                     __end_of_InterruptHandlerLow:
  5057                           	opt stack 0
  5058                           pclatu	equ	0xFFB
  5059                           pclath	equ	0xFFA
  5060                           tblptru	equ	0xFF8
  5061                           tblptrh	equ	0xFF7
  5062                           tblptrl	equ	0xFF6
  5063                           tablat	equ	0xFF5
  5064                           prodh	equ	0xFF4
  5065                           prodl	equ	0xFF3
  5066                           intcon	equ	0xFF2
  5067                           postinc0	equ	0xFEE
  5068                           fsr0h	equ	0xFEA
  5069                           fsr0l	equ	0xFE9
  5070                           wreg	equ	0xFE8
  5071                           indf1	equ	0xFE7
  5072                           fsr1h	equ	0xFE2
  5073                           fsr1l	equ	0xFE1
  5074                           bsr	equ	0xFE0
  5075                           indf2	equ	0xFDF
  5076                           postinc2	equ	0xFDE
  5077                           postdec2	equ	0xFDD
  5078                           fsr2h	equ	0xFDA
  5079                           fsr2l	equ	0xFD9
  5080                           status	equ	0xFD8
  5081                           
  5082 ;; *************** function i1_ConvertADC *****************
  5083 ;; Defined at:
  5084 ;;		line 22 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcconv.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;		None
  5087 ;; Auto vars:     Size  Location     Type
  5088 ;;		None
  5089 ;; Return value:  Size  Location     Type
  5090 ;;		None               void
  5091 ;; Registers used:
  5092 ;;		None
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5098 ;;      Params:         0       0       0       0       0
  5099 ;;      Locals:         0       0       0       0       0
  5100 ;;      Temps:          0       0       0       0       0
  5101 ;;      Totals:         0       0       0       0       0
  5102 ;;Total ram usage:        0 bytes
  5103 ;; Hardware stack levels used:    1
  5104 ;; Hardware stack levels required when called:    5
  5105 ;; This function calls:
  5106 ;;		Nothing
  5107 ;; This function is called by:
  5108 ;;		_InterruptHandlerLow
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           
  5112                           	psect	text32
  5113  001CAC                     __ptext32:
  5114                           	opt stack 0
  5115  001CAC                     i1_ConvertADC:
  5116                           	opt stack 19
  5117                           
  5118                           ;incstack = 0
  5119  001CAC  82C2               	bsf	4034,1,c	;volatile
  5120  001CAE  0012               	return	
  5121  001CB0                     __end_ofi1_ConvertADC:
  5122                           	opt stack 0
  5123                           pclatu	equ	0xFFB
  5124                           pclath	equ	0xFFA
  5125                           tblptru	equ	0xFF8
  5126                           tblptrh	equ	0xFF7
  5127                           tblptrl	equ	0xFF6
  5128                           tablat	equ	0xFF5
  5129                           prodh	equ	0xFF4
  5130                           prodl	equ	0xFF3
  5131                           intcon	equ	0xFF2
  5132                           postinc0	equ	0xFEE
  5133                           fsr0h	equ	0xFEA
  5134                           fsr0l	equ	0xFE9
  5135                           wreg	equ	0xFE8
  5136                           indf1	equ	0xFE7
  5137                           fsr1h	equ	0xFE2
  5138                           fsr1l	equ	0xFE1
  5139                           bsr	equ	0xFE0
  5140                           indf2	equ	0xFDF
  5141                           postinc2	equ	0xFDE
  5142                           postdec2	equ	0xFDD
  5143                           fsr2h	equ	0xFDA
  5144                           fsr2l	equ	0xFD9
  5145                           status	equ	0xFD8
  5146                           
  5147 ;; *************** function _uart_recv_int_handler *****************
  5148 ;; Defined at:
  5149 ;;		line 11 in file "../src/my_uart.c"
  5150 ;; Parameters:    Size  Location     Type
  5151 ;;		None
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;		None
  5154 ;; Return value:  Size  Location     Type
  5155 ;;		None               void
  5156 ;; Registers used:
  5157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5158 ;; Tracked objects:
  5159 ;;		On entry : 0/0
  5160 ;;		On exit  : 0/0
  5161 ;;		Unchanged: 0/0
  5162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5163 ;;      Params:         0       0       0       0       0
  5164 ;;      Locals:         0       0       0       0       0
  5165 ;;      Temps:          1       0       0       0       0
  5166 ;;      Totals:         1       0       0       0       0
  5167 ;;Total ram usage:        1 bytes
  5168 ;; Hardware stack levels used:    1
  5169 ;; Hardware stack levels required when called:    8
  5170 ;; This function calls:
  5171 ;;		_ReadUSART
  5172 ;;		_ToMainLow_sendmsg
  5173 ;; This function is called by:
  5174 ;;		_InterruptHandlerLow
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178                           	psect	text33
  5179  001228                     __ptext33:
  5180                           	opt stack 0
  5181  001228                     _uart_recv_int_handler:
  5182                           	opt stack 16
  5183                           
  5184                           ;my_uart.c: 12: if ((PIR1bits.RCIF)) {
  5185                           
  5186                           ;incstack = 0
  5187  001228  AA9E               	btfss	3998,5,c	;volatile
  5188  00122A  D03C               	goto	i1l3055
  5189                           
  5190                           ;my_uart.c: 13: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5191  00122C  EE20 F004          	lfsr	2,4
  5192  001230  504D               	movf	_uc_ptr,w,c
  5193  001232  26D9               	addwf	fsr2l,f,c
  5194  001234  504E               	movf	_uc_ptr+1,w,c
  5195  001236  22DA               	addwfc	fsr2h,f,c
  5196  001238  50DF               	movf	indf2,w,c
  5197  00123A  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5198  00123C  501B               	movf	??_uart_recv_int_handler,w,c
  5199  00123E  0D01               	mullw	1
  5200  001240  50F3               	movf	prodl,w,c
  5201  001242  244D               	addwf	_uc_ptr,w,c
  5202  001244  6ED9               	movwf	fsr2l,c
  5203  001246  50F4               	movf	prodh,w,c
  5204  001248  204E               	addwfc	_uc_ptr+1,w,c
  5205  00124A  6EDA               	movwf	fsr2h,c
  5206  00124C  ECE3  F00D         	call	_ReadUSART	;wreg free
  5207  001250  6EDF               	movwf	indf2,c
  5208                           
  5209                           ;my_uart.c: 14: uc_ptr->buflen++;
  5210  001252  EE20 F004          	lfsr	2,4
  5211  001256  504D               	movf	_uc_ptr,w,c
  5212  001258  26D9               	addwf	fsr2l,f,c
  5213  00125A  504E               	movf	_uc_ptr+1,w,c
  5214  00125C  22DA               	addwfc	fsr2h,f,c
  5215  00125E  2ADF               	incf	indf2,f,c
  5216                           
  5217                           ;my_uart.c: 16: if (uc_ptr->buflen == 4) {
  5218  001260  EE20 F004          	lfsr	2,4
  5219  001264  504D               	movf	_uc_ptr,w,c
  5220  001266  26D9               	addwf	fsr2l,f,c
  5221  001268  504E               	movf	_uc_ptr+1,w,c
  5222  00126A  22DA               	addwfc	fsr2h,f,c
  5223  00126C  0E04               	movlw	4
  5224  00126E  62DF               	cpfseq	indf2,c
  5225  001270  D019               	goto	i1l3055
  5226                           
  5227                           ;my_uart.c: 17: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5228  001272  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5229  001274  0E1F               	movlw	31
  5230  001276  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5231  001278  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5232  00127A  C04E  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5233  00127E  C04D  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5234  001282  EE20 F004          	lfsr	2,4
  5235  001286  504D               	movf	_uc_ptr,w,c
  5236  001288  26D9               	addwf	fsr2l,f,c
  5237  00128A  504E               	movf	_uc_ptr+1,w,c
  5238  00128C  22DA               	addwfc	fsr2h,f,c
  5239  00128E  50DF               	movf	indf2,w,c
  5240  001290  EC9C  F00D         	call	_ToMainLow_sendmsg
  5241                           
  5242                           ;my_uart.c: 18: uc_ptr->buflen = 0;
  5243  001294  EE20 F004          	lfsr	2,4
  5244  001298  504D               	movf	_uc_ptr,w,c
  5245  00129A  26D9               	addwf	fsr2l,f,c
  5246  00129C  504E               	movf	_uc_ptr+1,w,c
  5247  00129E  22DA               	addwfc	fsr2h,f,c
  5248  0012A0  0E00               	movlw	0
  5249  0012A2  6EDF               	movwf	indf2,c
  5250  0012A4                     i1l3055:
  5251                           
  5252                           ;my_uart.c: 19: }
  5253                           ;my_uart.c: 20: }
  5254                           ;my_uart.c: 21: if (USART_Status.OVERRUN_ERROR == 1) {
  5255  0012A4  A650               	btfss	_USART_Status,3,c
  5256  0012A6  0012               	return	
  5257                           
  5258                           ;my_uart.c: 24: RCSTAbits.CREN = 0;
  5259  0012A8  98AB               	bcf	4011,4,c	;volatile
  5260                           
  5261                           ;my_uart.c: 25: RCSTAbits.CREN = 1;
  5262  0012AA  88AB               	bsf	4011,4,c	;volatile
  5263                           
  5264                           ;my_uart.c: 26: ToMainLow_sendmsg(0, 30, (void *) 0);
  5265  0012AC  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5266  0012AE  0E1E               	movlw	30
  5267  0012B0  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5268  0012B2  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5269  0012B4  0E00               	movlw	0
  5270  0012B6  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5271  0012B8  0E00               	movlw	0
  5272  0012BA  6E18               	movwf	ToMainLow_sendmsg@data,c
  5273  0012BC  0E00               	movlw	0
  5274  0012BE  EC9C  F00D         	call	_ToMainLow_sendmsg
  5275  0012C2  0012               	return	
  5276  0012C4                     __end_of_uart_recv_int_handler:
  5277                           	opt stack 0
  5278                           pclatu	equ	0xFFB
  5279                           pclath	equ	0xFFA
  5280                           tblptru	equ	0xFF8
  5281                           tblptrh	equ	0xFF7
  5282                           tblptrl	equ	0xFF6
  5283                           tablat	equ	0xFF5
  5284                           prodh	equ	0xFF4
  5285                           prodl	equ	0xFF3
  5286                           intcon	equ	0xFF2
  5287                           postinc0	equ	0xFEE
  5288                           fsr0h	equ	0xFEA
  5289                           fsr0l	equ	0xFE9
  5290                           wreg	equ	0xFE8
  5291                           indf1	equ	0xFE7
  5292                           fsr1h	equ	0xFE2
  5293                           fsr1l	equ	0xFE1
  5294                           bsr	equ	0xFE0
  5295                           indf2	equ	0xFDF
  5296                           postinc2	equ	0xFDE
  5297                           postdec2	equ	0xFDD
  5298                           fsr2h	equ	0xFDA
  5299                           fsr2l	equ	0xFD9
  5300                           status	equ	0xFD8
  5301                           
  5302 ;; *************** function _ReadUSART *****************
  5303 ;; Defined at:
  5304 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uread.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;		None
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;  data            1    0[COMRAM] unsigned char 
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  1    wreg      unsigned char 
  5311 ;; Registers used:
  5312 ;;		wreg, status,2, status,0
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5318 ;;      Params:         0       0       0       0       0
  5319 ;;      Locals:         1       0       0       0       0
  5320 ;;      Temps:          0       0       0       0       0
  5321 ;;      Totals:         1       0       0       0       0
  5322 ;;Total ram usage:        1 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; Hardware stack levels required when called:    5
  5325 ;; This function calls:
  5326 ;;		Nothing
  5327 ;; This function is called by:
  5328 ;;		_uart_recv_int_handler
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           	psect	text34
  5333  001BC6                     __ptext34:
  5334                           	opt stack 0
  5335  001BC6                     _ReadUSART:
  5336                           	opt stack 18
  5337                           
  5338                           ;incstack = 0
  5339  001BC6  0EF2               	movlw	242
  5340  001BC8  1650               	andwf	_USART_Status,f,c
  5341  001BCA  ACAB               	btfss	4011,6,c	;volatile
  5342  001BCC  D003               	goto	i1l508
  5343  001BCE  9050               	bcf	_USART_Status,0,c
  5344  001BD0  B0AB               	btfsc	4011,0,c	;volatile
  5345  001BD2  8050               	bsf	_USART_Status,0,c
  5346  001BD4                     i1l508:
  5347  001BD4  B4AB               	btfsc	4011,2,c	;volatile
  5348  001BD6  8450               	bsf	_USART_Status,2,c
  5349  001BD8  B2AB               	btfsc	4011,1,c	;volatile
  5350  001BDA  8650               	bsf	_USART_Status,3,c
  5351  001BDC  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5352  001BE0  5001               	movf	ReadUSART@data,w,c
  5353  001BE2  0012               	return	
  5354  001BE4                     __end_of_ReadUSART:
  5355                           	opt stack 0
  5356                           pclatu	equ	0xFFB
  5357                           pclath	equ	0xFFA
  5358                           tblptru	equ	0xFF8
  5359                           tblptrh	equ	0xFF7
  5360                           tblptrl	equ	0xFF6
  5361                           tablat	equ	0xFF5
  5362                           prodh	equ	0xFF4
  5363                           prodl	equ	0xFF3
  5364                           intcon	equ	0xFF2
  5365                           postinc0	equ	0xFEE
  5366                           fsr0h	equ	0xFEA
  5367                           fsr0l	equ	0xFE9
  5368                           wreg	equ	0xFE8
  5369                           indf1	equ	0xFE7
  5370                           fsr1h	equ	0xFE2
  5371                           fsr1l	equ	0xFE1
  5372                           bsr	equ	0xFE0
  5373                           indf2	equ	0xFDF
  5374                           postinc2	equ	0xFDE
  5375                           postdec2	equ	0xFDD
  5376                           fsr2h	equ	0xFDA
  5377                           fsr2l	equ	0xFD9
  5378                           status	equ	0xFD8
  5379                           
  5380 ;; *************** function _timer1_int_handler *****************
  5381 ;; Defined at:
  5382 ;;		line 34 in file "../src/user_interrupts.c"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;		None
  5385 ;; Auto vars:     Size  Location     Type
  5386 ;;  result          2   27[COMRAM] unsigned int 
  5387 ;; Return value:  Size  Location     Type
  5388 ;;		None               void
  5389 ;; Registers used:
  5390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5391 ;; Tracked objects:
  5392 ;;		On entry : 0/0
  5393 ;;		On exit  : 0/0
  5394 ;;		Unchanged: 0/0
  5395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5396 ;;      Params:         0       0       0       0       0
  5397 ;;      Locals:         2       0       0       0       0
  5398 ;;      Temps:          1       0       0       0       0
  5399 ;;      Totals:         3       0       0       0       0
  5400 ;;Total ram usage:        3 bytes
  5401 ;; Hardware stack levels used:    1
  5402 ;; Hardware stack levels required when called:    8
  5403 ;; This function calls:
  5404 ;;		_ReadTimer1
  5405 ;;		_ToMainLow_sendmsg
  5406 ;;		_WriteTimer1
  5407 ;; This function is called by:
  5408 ;;		_InterruptHandlerLow
  5409 ;; This function uses a non-reentrant model
  5410 ;;
  5411                           
  5412                           	psect	text35
  5413  00174E                     __ptext35:
  5414                           	opt stack 0
  5415  00174E                     _timer1_int_handler:
  5416                           	opt stack 16
  5417                           
  5418                           ;user_interrupts.c: 35: unsigned int result;
  5419                           ;user_interrupts.c: 38: LATBbits.LATB1 = !LATBbits.LATB1;
  5420                           
  5421                           ;incstack = 0
  5422  00174E  B28A               	btfsc	3978,1,c	;volatile
  5423  001750  D002               	goto	i1u192_20
  5424  001752  0E01               	movlw	1
  5425  001754  D001               	goto	i1u192_26
  5426  001756                     i1u192_20:
  5427  001756  0E00               	movlw	0
  5428  001758                     i1u192_26:
  5429  001758  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  5430  00175A  461B               	rlncf	??_timer1_int_handler,f,c
  5431  00175C  508A               	movf	3978,w,c	;volatile
  5432  00175E  181B               	xorwf	??_timer1_int_handler,w,c
  5433  001760  0BFD               	andlw	-3
  5434  001762  181B               	xorwf	??_timer1_int_handler,w,c
  5435  001764  6E8A               	movwf	3978,c	;volatile
  5436                           
  5437                           ;user_interrupts.c: 39: result = ReadTimer1();
  5438  001766  EC30  F00E         	call	_ReadTimer1	;wreg free
  5439  00176A  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  5440  00176E  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5441                           
  5442                           ;user_interrupts.c: 40: ToMainLow_sendmsg(0, 11, (void *) 0);
  5443  001772  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  5444  001774  0E0B               	movlw	11
  5445  001776  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5446  001778  501B               	movf	??_timer1_int_handler& (0+255),w,c
  5447  00177A  0E00               	movlw	0
  5448  00177C  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5449  00177E  0E00               	movlw	0
  5450  001780  6E18               	movwf	ToMainLow_sendmsg@data,c
  5451  001782  0E00               	movlw	0
  5452  001784  EC9C  F00D         	call	_ToMainLow_sendmsg
  5453                           
  5454                           ;user_interrupts.c: 43: WriteTimer1(0);
  5455  001788  0E00               	movlw	0
  5456  00178A  6E02               	movwf	WriteTimer1@timer1+1,c
  5457  00178C  0E00               	movlw	0
  5458  00178E  6E01               	movwf	WriteTimer1@timer1,c
  5459  001790  EC27  F00E         	call	_WriteTimer1	;wreg free
  5460  001794  0012               	return	
  5461  001796                     __end_of_timer1_int_handler:
  5462                           	opt stack 0
  5463                           pclatu	equ	0xFFB
  5464                           pclath	equ	0xFFA
  5465                           tblptru	equ	0xFF8
  5466                           tblptrh	equ	0xFF7
  5467                           tblptrl	equ	0xFF6
  5468                           tablat	equ	0xFF5
  5469                           prodh	equ	0xFF4
  5470                           prodl	equ	0xFF3
  5471                           intcon	equ	0xFF2
  5472                           postinc0	equ	0xFEE
  5473                           fsr0h	equ	0xFEA
  5474                           fsr0l	equ	0xFE9
  5475                           wreg	equ	0xFE8
  5476                           indf1	equ	0xFE7
  5477                           fsr1h	equ	0xFE2
  5478                           fsr1l	equ	0xFE1
  5479                           bsr	equ	0xFE0
  5480                           indf2	equ	0xFDF
  5481                           postinc2	equ	0xFDE
  5482                           postdec2	equ	0xFDD
  5483                           fsr2h	equ	0xFDA
  5484                           fsr2l	equ	0xFD9
  5485                           status	equ	0xFD8
  5486                           
  5487 ;; *************** function _WriteTimer1 *****************
  5488 ;; Defined at:
  5489 ;;		line 14 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1write.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;  timer1          2    0[COMRAM] unsigned int 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;  timer           2    2[COMRAM] struct Timers
  5494 ;; Return value:  Size  Location     Type
  5495 ;;		None               void
  5496 ;; Registers used:
  5497 ;;		None
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5503 ;;      Params:         2       0       0       0       0
  5504 ;;      Locals:         2       0       0       0       0
  5505 ;;      Temps:          0       0       0       0       0
  5506 ;;      Totals:         4       0       0       0       0
  5507 ;;Total ram usage:        4 bytes
  5508 ;; Hardware stack levels used:    1
  5509 ;; Hardware stack levels required when called:    5
  5510 ;; This function calls:
  5511 ;;		Nothing
  5512 ;; This function is called by:
  5513 ;;		_timer1_int_handler
  5514 ;; This function uses a non-reentrant model
  5515 ;;
  5516                           
  5517                           	psect	text36
  5518  001C4E                     __ptext36:
  5519                           	opt stack 0
  5520  001C4E                     _WriteTimer1:
  5521                           	opt stack 18
  5522                           
  5523                           ;incstack = 0
  5524  001C4E  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5525  001C52  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5526  001C56  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5527  001C5A  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5528  001C5E  0012               	return	
  5529  001C60                     __end_of_WriteTimer1:
  5530                           	opt stack 0
  5531                           pclatu	equ	0xFFB
  5532                           pclath	equ	0xFFA
  5533                           tblptru	equ	0xFF8
  5534                           tblptrh	equ	0xFF7
  5535                           tblptrl	equ	0xFF6
  5536                           tablat	equ	0xFF5
  5537                           prodh	equ	0xFF4
  5538                           prodl	equ	0xFF3
  5539                           intcon	equ	0xFF2
  5540                           postinc0	equ	0xFEE
  5541                           fsr0h	equ	0xFEA
  5542                           fsr0l	equ	0xFE9
  5543                           wreg	equ	0xFE8
  5544                           indf1	equ	0xFE7
  5545                           fsr1h	equ	0xFE2
  5546                           fsr1l	equ	0xFE1
  5547                           bsr	equ	0xFE0
  5548                           indf2	equ	0xFDF
  5549                           postinc2	equ	0xFDE
  5550                           postdec2	equ	0xFDD
  5551                           fsr2h	equ	0xFDA
  5552                           fsr2l	equ	0xFD9
  5553                           status	equ	0xFD8
  5554                           
  5555 ;; *************** function _ToMainLow_sendmsg *****************
  5556 ;; Defined at:
  5557 ;;		line 103 in file "../src/messages.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;  length          1    wreg     unsigned char 
  5560 ;;  msgtype         1   22[COMRAM] unsigned char 
  5561 ;;  data            2   23[COMRAM] PTR void 
  5562 ;;		 -> main@uc(5), NULL(0), 
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;  length          1   25[COMRAM] unsigned char 
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  1    wreg      char 
  5567 ;; Registers used:
  5568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5574 ;;      Params:         3       0       0       0       0
  5575 ;;      Locals:         1       0       0       0       0
  5576 ;;      Temps:          0       0       0       0       0
  5577 ;;      Totals:         4       0       0       0       0
  5578 ;;Total ram usage:        4 bytes
  5579 ;; Hardware stack levels used:    1
  5580 ;; Hardware stack levels required when called:    7
  5581 ;; This function calls:
  5582 ;;		i1_send_msg
  5583 ;; This function is called by:
  5584 ;;		_timer1_int_handler
  5585 ;;		_uart_recv_int_handler
  5586 ;; This function uses a non-reentrant model
  5587 ;;
  5588                           
  5589                           	psect	text37
  5590  001B38                     __ptext37:
  5591                           	opt stack 0
  5592  001B38                     _ToMainLow_sendmsg:
  5593                           	opt stack 16
  5594                           
  5595                           ;incstack = 0
  5596                           ;ToMainLow_sendmsg@length stored from wreg
  5597  001B38  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5598                           
  5599                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5600                           ;	Return value of _ToMainLow_sendmsg is never used
  5601  001B3C  0101               	movlb	1	; () banked
  5602  001B3E  0E01               	movlw	high _ToMainLow_MQ
  5603  001B40  6E0C               	movwf	i1send_msg@qptr+1,c
  5604  001B42  0101               	movlb	1	; () banked
  5605  001B44  0E6C               	movlw	low _ToMainLow_MQ
  5606  001B46  6E0B               	movwf	i1send_msg@qptr,c
  5607  001B48  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5608  001B4C  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5609  001B50  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5610  001B54  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5611  001B58  EC17  F008         	call	i1_send_msg	;wreg free
  5612  001B5C  0012               	return	
  5613  001B5E                     __end_of_ToMainLow_sendmsg:
  5614                           	opt stack 0
  5615                           pclatu	equ	0xFFB
  5616                           pclath	equ	0xFFA
  5617                           tblptru	equ	0xFF8
  5618                           tblptrh	equ	0xFF7
  5619                           tblptrl	equ	0xFF6
  5620                           tablat	equ	0xFF5
  5621                           prodh	equ	0xFF4
  5622                           prodl	equ	0xFF3
  5623                           intcon	equ	0xFF2
  5624                           postinc0	equ	0xFEE
  5625                           fsr0h	equ	0xFEA
  5626                           fsr0l	equ	0xFE9
  5627                           wreg	equ	0xFE8
  5628                           indf1	equ	0xFE7
  5629                           fsr1h	equ	0xFE2
  5630                           fsr1l	equ	0xFE1
  5631                           bsr	equ	0xFE0
  5632                           indf2	equ	0xFDF
  5633                           postinc2	equ	0xFDE
  5634                           postdec2	equ	0xFDD
  5635                           fsr2h	equ	0xFDA
  5636                           fsr2l	equ	0xFD9
  5637                           status	equ	0xFD8
  5638                           
  5639 ;; *************** function i1_send_msg *****************
  5640 ;; Defined at:
  5641 ;;		line 24 in file "../src/messages.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5644 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5645 ;;  length          1   12[COMRAM] unsigned char 
  5646 ;;  msgtype         1   13[COMRAM] unsigned char 
  5647 ;;  data            2   14[COMRAM] PTR void 
  5648 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), i2c_int_handler@error_buf(3), 
  5649 ;;		 -> NULL(0), timer0_int_handler@val(2), 
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5652 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5653 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5654 ;;  send_msg        2   17[COMRAM] unsigned int 
  5655 ;;  send_msg        1   19[COMRAM] unsigned char 
  5656 ;; Return value:  Size  Location     Type
  5657 ;;                  1    wreg      char 
  5658 ;; Registers used:
  5659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5660 ;; Tracked objects:
  5661 ;;		On entry : 0/0
  5662 ;;		On exit  : 0/0
  5663 ;;		Unchanged: 0/0
  5664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5665 ;;      Params:         6       0       0       0       0
  5666 ;;      Locals:         5       0       0       0       0
  5667 ;;      Temps:          1       0       0       0       0
  5668 ;;      Totals:        12       0       0       0       0
  5669 ;;Total ram usage:       12 bytes
  5670 ;; Hardware stack levels used:    1
  5671 ;; Hardware stack levels required when called:    6
  5672 ;; This function calls:
  5673 ;;		i1_memcpy
  5674 ;; This function is called by:
  5675 ;;		_ToMainLow_sendmsg
  5676 ;; This function uses a non-reentrant model
  5677 ;;
  5678                           
  5679                           	psect	text38
  5680  00102E                     __ptext38:
  5681                           	opt stack 0
  5682  00102E                     i1_send_msg:
  5683                           	opt stack 16
  5684                           
  5685                           ;messages.c: 25: unsigned char slot;
  5686                           ;messages.c: 27: msg *qmsg;
  5687                           ;messages.c: 28: size_t tlength = length;
  5688                           
  5689                           ;incstack = 0
  5690  00102E  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5691  001032  6A13               	clrf	i1send_msg@tlength+1,c
  5692                           
  5693                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5694  001034  EE20 F034          	lfsr	2,52
  5695  001038  500B               	movf	i1send_msg@qptr,w,c
  5696  00103A  26D9               	addwf	fsr2l,f,c
  5697  00103C  500C               	movf	i1send_msg@qptr+1,w,c
  5698  00103E  22DA               	addwfc	fsr2h,f,c
  5699  001040  50DF               	movf	indf2,w,c
  5700  001042  6E14               	movwf	i1send_msg@slot,c
  5701                           
  5702                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5703  001044  5014               	movf	i1send_msg@slot,w,c
  5704  001046  0D0D               	mullw	13
  5705  001048  50F3               	movf	prodl,w,c
  5706  00104A  240B               	addwf	i1send_msg@qptr,w,c
  5707  00104C  6E15               	movwf	i1send_msg@qmsg,c
  5708  00104E  50F4               	movf	prodh,w,c
  5709  001050  200C               	addwfc	i1send_msg@qptr+1,w,c
  5710  001052  6E16               	movwf	i1send_msg@qmsg+1,c
  5711                           
  5712                           ;messages.c: 41: if (qmsg->full != 0) {
  5713  001054  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5714  001058  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5715  00105C  50DF               	movf	indf2,w,c
  5716  00105E  B4D8               	btfsc	status,2,c
  5717  001060  D002               	goto	i1l3019
  5718                           
  5719                           ;messages.c: 42: return (-1);
  5720  001062  0EFF               	movlw	255
  5721  001064  0012               	return	
  5722  001066                     i1l3019:
  5723                           
  5724                           ;messages.c: 43: }
  5725                           ;messages.c: 46: qmsg->length = length;
  5726  001066  EE20 F001          	lfsr	2,1
  5727  00106A  5015               	movf	i1send_msg@qmsg,w,c
  5728  00106C  26D9               	addwf	fsr2l,f,c
  5729  00106E  5016               	movf	i1send_msg@qmsg+1,w,c
  5730  001070  22DA               	addwfc	fsr2h,f,c
  5731  001072  C00D  FFDF         	movff	i1send_msg@length,indf2
  5732                           
  5733                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5734  001076  EE20 F002          	lfsr	2,2
  5735  00107A  5015               	movf	i1send_msg@qmsg,w,c
  5736  00107C  26D9               	addwf	fsr2l,f,c
  5737  00107E  5016               	movf	i1send_msg@qmsg+1,w,c
  5738  001080  22DA               	addwfc	fsr2h,f,c
  5739  001082  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5740                           
  5741                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5742  001086  0E03               	movlw	3
  5743  001088  2415               	addwf	i1send_msg@qmsg,w,c
  5744  00108A  6E01               	movwf	i1memcpy@d1,c
  5745  00108C  0E00               	movlw	0
  5746  00108E  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5747  001090  6E02               	movwf	i1memcpy@d1+1,c
  5748  001092  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5749  001096  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5750  00109A  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5751  00109E  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5752  0010A2  EC73  F00C         	call	i1_memcpy	;wreg free
  5753                           
  5754                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5755  0010A6  EE20 F034          	lfsr	2,52
  5756  0010AA  500B               	movf	i1send_msg@qptr,w,c
  5757  0010AC  26D9               	addwf	fsr2l,f,c
  5758  0010AE  500C               	movf	i1send_msg@qptr+1,w,c
  5759  0010B0  22DA               	addwfc	fsr2h,f,c
  5760  0010B2  EE10 F034          	lfsr	1,52
  5761  0010B6  500B               	movf	i1send_msg@qptr,w,c
  5762  0010B8  26E1               	addwf	fsr1l,f,c
  5763  0010BA  500C               	movf	i1send_msg@qptr+1,w,c
  5764  0010BC  22E2               	addwfc	fsr1h,f,c
  5765  0010BE  50E7               	movf	indf1,w,c
  5766  0010C0  6E11               	movwf	??i1_send_msg& (0+255),c
  5767  0010C2  2811               	incf	??i1_send_msg,w,c
  5768  0010C4  0B03               	andlw	3
  5769  0010C6  6EDF               	movwf	indf2,c
  5770                           
  5771                           ;messages.c: 59: qmsg->full = 1;
  5772  0010C8  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5773  0010CC  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5774  0010D0  0E01               	movlw	1
  5775  0010D2  6EDF               	movwf	indf2,c
  5776                           
  5777                           ;messages.c: 60: return (1);
  5778  0010D4  0E01               	movlw	1
  5779  0010D6  0012               	return	
  5780  0010D8                     __end_ofi1_send_msg:
  5781                           	opt stack 0
  5782                           pclatu	equ	0xFFB
  5783                           pclath	equ	0xFFA
  5784                           tblptru	equ	0xFF8
  5785                           tblptrh	equ	0xFF7
  5786                           tblptrl	equ	0xFF6
  5787                           tablat	equ	0xFF5
  5788                           prodh	equ	0xFF4
  5789                           prodl	equ	0xFF3
  5790                           intcon	equ	0xFF2
  5791                           postinc0	equ	0xFEE
  5792                           fsr0h	equ	0xFEA
  5793                           fsr0l	equ	0xFE9
  5794                           wreg	equ	0xFE8
  5795                           indf1	equ	0xFE7
  5796                           fsr1h	equ	0xFE2
  5797                           fsr1l	equ	0xFE1
  5798                           bsr	equ	0xFE0
  5799                           indf2	equ	0xFDF
  5800                           postinc2	equ	0xFDE
  5801                           postdec2	equ	0xFDD
  5802                           fsr2h	equ	0xFDA
  5803                           fsr2l	equ	0xFD9
  5804                           status	equ	0xFD8
  5805                           
  5806 ;; *************** function i1_memcpy *****************
  5807 ;; Defined at:
  5808 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  5809 ;; Parameters:    Size  Location     Type
  5810 ;;  d1              2    0[COMRAM] PTR void 
  5811 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5812 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5813 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  5814 ;;  s1              2    2[COMRAM] PTR const void 
  5815 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5816 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5817 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), FromMainHigh_MQ(54), 
  5818 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), i2c_int_handler@error_buf(3), 
  5819 ;;		 -> NULL(0), timer0_int_handler@val(2), 
  5820 ;;  n               2    4[COMRAM] unsigned int 
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5823 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5824 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5825 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), FromMainHigh_MQ(54), 
  5826 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), i2c_int_handler@error_buf(3), 
  5827 ;;		 -> NULL(0), timer0_int_handler@val(2), 
  5828 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5829 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5830 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5831 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  5832 ;; Return value:  Size  Location     Type
  5833 ;;                  2    0[COMRAM] PTR void 
  5834 ;; Registers used:
  5835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5836 ;; Tracked objects:
  5837 ;;		On entry : 0/0
  5838 ;;		On exit  : 0/0
  5839 ;;		Unchanged: 0/0
  5840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5841 ;;      Params:         6       0       0       0       0
  5842 ;;      Locals:         4       0       0       0       0
  5843 ;;      Temps:          0       0       0       0       0
  5844 ;;      Totals:        10       0       0       0       0
  5845 ;;Total ram usage:       10 bytes
  5846 ;; Hardware stack levels used:    1
  5847 ;; Hardware stack levels required when called:    5
  5848 ;; This function calls:
  5849 ;;		Nothing
  5850 ;; This function is called by:
  5851 ;;		i1_send_msg
  5852 ;; This function uses a non-reentrant model
  5853 ;;
  5854                           
  5855                           	psect	text39
  5856  0018E6                     __ptext39:
  5857                           	opt stack 0
  5858  0018E6                     i1_memcpy:
  5859                           	opt stack 16
  5860                           
  5861                           ;incstack = 0
  5862  0018E6  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5863  0018EA  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5864  0018EE  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5865  0018F2  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5866  0018F6  D00E               	goto	i1l2995
  5867  0018F8                     i1l2989:
  5868  0018F8  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5869  0018FC  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5870  001900  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5871  001904  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5872  001908  CFDF FFE7          	movff	indf2,indf1
  5873  00190C  4A09               	infsnz	i1memcpy@s,f,c
  5874  00190E  2A0A               	incf	i1memcpy@s+1,f,c
  5875  001910  4A07               	infsnz	i1memcpy@d,f,c
  5876  001912  2A08               	incf	i1memcpy@d+1,f,c
  5877  001914                     i1l2995:
  5878  001914  0605               	decf	i1memcpy@n,f,c
  5879  001916  A0D8               	btfss	status,0,c
  5880  001918  0606               	decf	i1memcpy@n+1,f,c
  5881  00191A  2805               	incf	i1memcpy@n& (0+255),w,c
  5882  00191C  B4D8               	btfsc	status,2,c
  5883  00191E  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5884  001920  B4D8               	btfsc	status,2,c
  5885                           
  5886                           ;	Return value of i1_memcpy is never used
  5887  001922  0012               	return	
  5888  001924  D7E9               	goto	i1l2989
  5889  001926                     __end_ofi1_memcpy:
  5890                           	opt stack 0
  5891                           pclatu	equ	0xFFB
  5892                           pclath	equ	0xFFA
  5893                           tblptru	equ	0xFF8
  5894                           tblptrh	equ	0xFF7
  5895                           tblptrl	equ	0xFF6
  5896                           tablat	equ	0xFF5
  5897                           prodh	equ	0xFF4
  5898                           prodl	equ	0xFF3
  5899                           intcon	equ	0xFF2
  5900                           postinc0	equ	0xFEE
  5901                           fsr0h	equ	0xFEA
  5902                           fsr0l	equ	0xFE9
  5903                           wreg	equ	0xFE8
  5904                           indf1	equ	0xFE7
  5905                           fsr1h	equ	0xFE2
  5906                           fsr1l	equ	0xFE1
  5907                           bsr	equ	0xFE0
  5908                           indf2	equ	0xFDF
  5909                           postinc2	equ	0xFDE
  5910                           postdec2	equ	0xFDD
  5911                           fsr2h	equ	0xFDA
  5912                           fsr2l	equ	0xFD9
  5913                           status	equ	0xFD8
  5914                           
  5915 ;; *************** function _ReadTimer1 *****************
  5916 ;; Defined at:
  5917 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1read.c"
  5918 ;; Parameters:    Size  Location     Type
  5919 ;;		None
  5920 ;; Auto vars:     Size  Location     Type
  5921 ;;  timer           2    2[COMRAM] struct Timers
  5922 ;; Return value:  Size  Location     Type
  5923 ;;                  2    0[COMRAM] unsigned int 
  5924 ;; Registers used:
  5925 ;;		None
  5926 ;; Tracked objects:
  5927 ;;		On entry : 0/0
  5928 ;;		On exit  : 0/0
  5929 ;;		Unchanged: 0/0
  5930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5931 ;;      Params:         2       0       0       0       0
  5932 ;;      Locals:         2       0       0       0       0
  5933 ;;      Temps:          0       0       0       0       0
  5934 ;;      Totals:         4       0       0       0       0
  5935 ;;Total ram usage:        4 bytes
  5936 ;; Hardware stack levels used:    1
  5937 ;; Hardware stack levels required when called:    5
  5938 ;; This function calls:
  5939 ;;		Nothing
  5940 ;; This function is called by:
  5941 ;;		_timer1_int_handler
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           	psect	text40
  5946  001C60                     __ptext40:
  5947                           	opt stack 0
  5948  001C60                     _ReadTimer1:
  5949                           	opt stack 18
  5950                           
  5951                           ;incstack = 0
  5952  001C60  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  5953  001C64  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  5954  001C68  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  5955  001C6C  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  5956  001C70  0012               	return	
  5957  001C72                     __end_of_ReadTimer1:
  5958                           	opt stack 0
  5959                           pclatu	equ	0xFFB
  5960                           pclath	equ	0xFFA
  5961                           tblptru	equ	0xFF8
  5962                           tblptrh	equ	0xFF7
  5963                           tblptrl	equ	0xFF6
  5964                           tablat	equ	0xFF5
  5965                           prodh	equ	0xFF4
  5966                           prodl	equ	0xFF3
  5967                           intcon	equ	0xFF2
  5968                           postinc0	equ	0xFEE
  5969                           fsr0h	equ	0xFEA
  5970                           fsr0l	equ	0xFE9
  5971                           wreg	equ	0xFE8
  5972                           indf1	equ	0xFE7
  5973                           fsr1h	equ	0xFE2
  5974                           fsr1l	equ	0xFE1
  5975                           bsr	equ	0xFE0
  5976                           indf2	equ	0xFDF
  5977                           postinc2	equ	0xFDE
  5978                           postdec2	equ	0xFDD
  5979                           fsr2h	equ	0xFDA
  5980                           fsr2l	equ	0xFD9
  5981                           status	equ	0xFD8
  5982                           
  5983 ;; *************** function _InterruptHandlerHigh *****************
  5984 ;; Defined at:
  5985 ;;		line 92 in file "../src/interrupts.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;		None
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;  pureADCValue    2   38[BANK0 ] int 
  5990 ;; Return value:  Size  Location     Type
  5991 ;;		None               void
  5992 ;; Registers used:
  5993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5994 ;; Tracked objects:
  5995 ;;		On entry : 0/0
  5996 ;;		On exit  : 0/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5999 ;;      Params:         0       0       0       0       0
  6000 ;;      Locals:         0       2       0       0       0
  6001 ;;      Temps:          0      16       0       0       0
  6002 ;;      Totals:         0      18       0       0       0
  6003 ;;Total ram usage:       18 bytes
  6004 ;; Hardware stack levels used:    1
  6005 ;; Hardware stack levels required when called:    4
  6006 ;; This function calls:
  6007 ;;		_ReadADC
  6008 ;;		_SleepIfOkay
  6009 ;;		_i2c_int_handler
  6010 ;;		_timer0_int_handler
  6011 ;; This function is called by:
  6012 ;;		Interrupt level 2
  6013 ;; This function uses a non-reentrant model
  6014 ;;
  6015                           
  6016                           	psect	intcode
  6017  000008                     __pintcode:
  6018                           	opt stack 0
  6019  000008                     _InterruptHandlerHigh:
  6020                           	opt stack 16
  6021                           
  6022                           ;incstack = 0
  6023  000008  CFFA F098          	movff	pclath,??_InterruptHandlerHigh+2
  6024  00000C  CFFB F099          	movff	pclatu,??_InterruptHandlerHigh+3
  6025  000010  EFBB  F007         	goto	int_func
  6026                           pclatu	equ	0xFFB
  6027                           pclath	equ	0xFFA
  6028                           tblptru	equ	0xFF8
  6029                           tblptrh	equ	0xFF7
  6030                           tblptrl	equ	0xFF6
  6031                           tablat	equ	0xFF5
  6032                           prodh	equ	0xFF4
  6033                           prodl	equ	0xFF3
  6034                           intcon	equ	0xFF2
  6035                           postinc0	equ	0xFEE
  6036                           fsr0h	equ	0xFEA
  6037                           fsr0l	equ	0xFE9
  6038                           wreg	equ	0xFE8
  6039                           indf1	equ	0xFE7
  6040                           fsr1h	equ	0xFE2
  6041                           fsr1l	equ	0xFE1
  6042                           bsr	equ	0xFE0
  6043                           indf2	equ	0xFDF
  6044                           postinc2	equ	0xFDE
  6045                           postdec2	equ	0xFDD
  6046                           fsr2h	equ	0xFDA
  6047                           fsr2l	equ	0xFD9
  6048                           status	equ	0xFD8
  6049                           
  6050                           	psect	intcode_body
  6051  000F76                     __pintcode_body:
  6052                           	opt stack 16
  6053  000F76                     int_func:
  6054                           	opt stack 16
  6055  000F76  CFE9 F09A          	movff	fsr0l,??_InterruptHandlerHigh+4
  6056  000F7A  CFEA F09B          	movff	fsr0h,??_InterruptHandlerHigh+5
  6057  000F7E  CFE1 F09C          	movff	fsr1l,??_InterruptHandlerHigh+6
  6058  000F82  CFE2 F09D          	movff	fsr1h,??_InterruptHandlerHigh+7
  6059  000F86  CFD9 F09E          	movff	fsr2l,??_InterruptHandlerHigh+8
  6060  000F8A  CFDA F09F          	movff	fsr2h,??_InterruptHandlerHigh+9
  6061  000F8E  CFF3 F0A0          	movff	prodl,??_InterruptHandlerHigh+10
  6062  000F92  CFF4 F0A1          	movff	prodh,??_InterruptHandlerHigh+11
  6063  000F96  CFF6 F0A2          	movff	tblptrl,??_InterruptHandlerHigh+12
  6064  000F9A  CFF7 F0A3          	movff	tblptrh,??_InterruptHandlerHigh+13
  6065  000F9E  CFF8 F0A4          	movff	tblptru,??_InterruptHandlerHigh+14
  6066  000FA2  CFF5 F0A5          	movff	tablat,??_InterruptHandlerHigh+15
  6067                           
  6068                           ;interrupts.c: 97: if (PIR1bits.SSPIF) {
  6069  000FA6  A69E               	btfss	3998,3,c	;volatile
  6070  000FA8  D003               	goto	i2l3287
  6071                           
  6072                           ;interrupts.c: 99: PIR1bits.SSPIF = 0;
  6073  000FAA  969E               	bcf	3998,3,c	;volatile
  6074                           
  6075                           ;interrupts.c: 101: i2c_int_handler();
  6076  000FAC  EC5F  F000         	call	_i2c_int_handler	;wreg free
  6077  000FB0                     i2l3287:
  6078                           
  6079                           ;interrupts.c: 102: }
  6080                           ;interrupts.c: 105: if (INTCONbits.TMR0IF) {
  6081  000FB0  A4F2               	btfss	intcon,2,c	;volatile
  6082  000FB2  D003               	goto	i2l3293
  6083                           
  6084                           ;interrupts.c: 106: INTCONbits.TMR0IF = 0;
  6085  000FB4  94F2               	bcf	intcon,2,c	;volatile
  6086                           
  6087                           ;interrupts.c: 108: timer0_int_handler();
  6088  000FB6  EC6F  F00A         	call	_timer0_int_handler	;wreg free
  6089  000FBA                     i2l3293:
  6090                           
  6091                           ;interrupts.c: 109: }
  6092                           ;interrupts.c: 114: if(PIR1bits.ADIF == 1)
  6093  000FBA  AC9E               	btfss	3998,6,c	;volatile
  6094  000FBC  D019               	goto	i2l3301
  6095                           
  6096                           ;interrupts.c: 115: {
  6097                           ;interrupts.c: 118: PIR1bits.ADIF = 0;
  6098  000FBE  9C9E               	bcf	3998,6,c	;volatile
  6099                           
  6100                           ;interrupts.c: 119: int pureADCValue = ReadADC();
  6101  000FC0  EC48  F00E         	call	_ReadADC	;wreg free
  6102  000FC4  C02F  F0A6         	movff	?_ReadADC,InterruptHandlerHigh@pureADCValue
  6103  000FC8  C030  F0A7         	movff	?_ReadADC+1,InterruptHandlerHigh@pureADCValue+1
  6104                           
  6105                           ;interrupts.c: 120: ADCValue = pureADCValue >> 2;
  6106  000FCC  0100               	movlb	0	; () banked
  6107  000FCE  C0A6  F096         	movff	InterruptHandlerHigh@pureADCValue,??_InterruptHandlerHigh
  6108  000FD2  0100               	movlb	0	; () banked
  6109  000FD4  C0A7  F097         	movff	InterruptHandlerHigh@pureADCValue+1,??_InterruptHandlerHigh+1
  6110  000FD8  0100               	movlb	0	; () banked
  6111  000FDA  3597               	rlcf	(??_InterruptHandlerHigh+1)& (0+255),w,b
  6112  000FDC  3397               	rrcf	(??_InterruptHandlerHigh+1)& (0+255),f,b
  6113  000FDE  3396               	rrcf	??_InterruptHandlerHigh& (0+255),f,b
  6114  000FE0  0100               	movlb	0	; () banked
  6115  000FE2  3597               	rlcf	(??_InterruptHandlerHigh+1)& (0+255),w,b
  6116  000FE4  3397               	rrcf	(??_InterruptHandlerHigh+1)& (0+255),f,b
  6117  000FE6  3396               	rrcf	??_InterruptHandlerHigh& (0+255),f,b
  6118  000FE8  C096  F0CF         	movff	??_InterruptHandlerHigh,_ADCValue
  6119  000FEC  C097  F0D0         	movff	??_InterruptHandlerHigh+1,_ADCValue+1
  6120  000FF0                     i2l3301:
  6121                           
  6122                           ;interrupts.c: 123: }
  6123                           ;interrupts.c: 129: SleepIfOkay();
  6124  000FF0  EC80  F00B         	call	_SleepIfOkay	;wreg free
  6125  000FF4  C0A5  FFF5         	movff	??_InterruptHandlerHigh+15,tablat
  6126  000FF8  C0A4  FFF8         	movff	??_InterruptHandlerHigh+14,tblptru
  6127  000FFC  C0A3  FFF7         	movff	??_InterruptHandlerHigh+13,tblptrh
  6128  001000  C0A2  FFF6         	movff	??_InterruptHandlerHigh+12,tblptrl
  6129  001004  C0A1  FFF4         	movff	??_InterruptHandlerHigh+11,prodh
  6130  001008  C0A0  FFF3         	movff	??_InterruptHandlerHigh+10,prodl
  6131  00100C  C09F  FFDA         	movff	??_InterruptHandlerHigh+9,fsr2h
  6132  001010  C09E  FFD9         	movff	??_InterruptHandlerHigh+8,fsr2l
  6133  001014  C09D  FFE2         	movff	??_InterruptHandlerHigh+7,fsr1h
  6134  001018  C09C  FFE1         	movff	??_InterruptHandlerHigh+6,fsr1l
  6135  00101C  C09B  FFEA         	movff	??_InterruptHandlerHigh+5,fsr0h
  6136  001020  C09A  FFE9         	movff	??_InterruptHandlerHigh+4,fsr0l
  6137  001024  C099  FFFB         	movff	??_InterruptHandlerHigh+3,pclatu
  6138  001028  C098  FFFA         	movff	??_InterruptHandlerHigh+2,pclath
  6139  00102C  0011               	retfie		f
  6140  00102E                     __end_of_InterruptHandlerHigh:
  6141                           	opt stack 0
  6142                           pclatu	equ	0xFFB
  6143                           pclath	equ	0xFFA
  6144                           tblptru	equ	0xFF8
  6145                           tblptrh	equ	0xFF7
  6146                           tblptrl	equ	0xFF6
  6147                           tablat	equ	0xFF5
  6148                           prodh	equ	0xFF4
  6149                           prodl	equ	0xFF3
  6150                           intcon	equ	0xFF2
  6151                           postinc0	equ	0xFEE
  6152                           fsr0h	equ	0xFEA
  6153                           fsr0l	equ	0xFE9
  6154                           wreg	equ	0xFE8
  6155                           indf1	equ	0xFE7
  6156                           fsr1h	equ	0xFE2
  6157                           fsr1l	equ	0xFE1
  6158                           bsr	equ	0xFE0
  6159                           indf2	equ	0xFDF
  6160                           postinc2	equ	0xFDE
  6161                           postdec2	equ	0xFDD
  6162                           fsr2h	equ	0xFDA
  6163                           fsr2l	equ	0xFD9
  6164                           status	equ	0xFD8
  6165                           
  6166 ;; *************** function _timer0_int_handler *****************
  6167 ;; Defined at:
  6168 ;;		line 16 in file "../src/user_interrupts.c"
  6169 ;; Parameters:    Size  Location     Type
  6170 ;;		None
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;  val             2    4[BANK0 ] unsigned int 
  6173 ;;  msgtype         2    2[BANK0 ] int 
  6174 ;;  length          2    0[BANK0 ] int 
  6175 ;; Return value:  Size  Location     Type
  6176 ;;		None               void
  6177 ;; Registers used:
  6178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6184 ;;      Params:         0       0       0       0       0
  6185 ;;      Locals:         0       6       0       0       0
  6186 ;;      Temps:          1       0       0       0       0
  6187 ;;      Totals:         1       6       0       0       0
  6188 ;;Total ram usage:        7 bytes
  6189 ;; Hardware stack levels used:    1
  6190 ;; Hardware stack levels required when called:    3
  6191 ;; This function calls:
  6192 ;;		_FromMainHigh_recvmsg
  6193 ;;		_ToMainHigh_sendmsg
  6194 ;;		_WriteTimer0
  6195 ;; This function is called by:
  6196 ;;		_InterruptHandlerHigh
  6197 ;; This function uses a non-reentrant model
  6198 ;;
  6199                           
  6200                           	psect	text42
  6201  0014DE                     __ptext42:
  6202                           	opt stack 0
  6203  0014DE                     _timer0_int_handler:
  6204                           	opt stack 16
  6205                           
  6206                           ;user_interrupts.c: 17: unsigned int val;
  6207                           ;user_interrupts.c: 18: int length, msgtype;
  6208                           ;user_interrupts.c: 21: LATBbits.LATB0 = !LATBbits.LATB0;
  6209                           
  6210                           ;incstack = 0
  6211  0014DE  B08A               	btfsc	3978,0,c	;volatile
  6212  0014E0  D002               	goto	i2u198_40
  6213  0014E2  0E01               	movlw	1
  6214  0014E4  D001               	goto	i2u198_46
  6215  0014E6                     i2u198_40:
  6216  0014E6  0E00               	movlw	0
  6217  0014E8                     i2u198_46:
  6218  0014E8  6E4C               	movwf	??_timer0_int_handler& (0+255),c
  6219  0014EA  508A               	movf	3978,w,c	;volatile
  6220  0014EC  184C               	xorwf	??_timer0_int_handler,w,c
  6221  0014EE  0BFE               	andlw	-2
  6222  0014F0  184C               	xorwf	??_timer0_int_handler,w,c
  6223  0014F2  6E8A               	movwf	3978,c	;volatile
  6224                           
  6225                           ;user_interrupts.c: 23: WriteTimer0(0);
  6226  0014F4  0E00               	movlw	0
  6227  0014F6  6E30               	movwf	WriteTimer0@timer0+1,c
  6228  0014F8  0E00               	movlw	0
  6229  0014FA  6E2F               	movwf	WriteTimer0@timer0,c
  6230  0014FC  EC39  F00E         	call	_WriteTimer0	;wreg free
  6231                           
  6232                           ;user_interrupts.c: 25: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6233  001500  0100               	movlb	0	; () banked
  6234  001502  0E00               	movlw	high timer0_int_handler@msgtype
  6235  001504  6E48               	movwf	FromMainHigh_recvmsg@msgtype+1,c
  6236  001506  0100               	movlb	0	; () banked
  6237  001508  0E82               	movlw	low timer0_int_handler@msgtype
  6238  00150A  6E47               	movwf	FromMainHigh_recvmsg@msgtype,c
  6239  00150C  0100               	movlb	0	; () banked
  6240  00150E  0E00               	movlw	high timer0_int_handler@val
  6241  001510  6E4A               	movwf	FromMainHigh_recvmsg@data+1,c
  6242  001512  0100               	movlb	0	; () banked
  6243  001514  0E84               	movlw	low timer0_int_handler@val
  6244  001516  6E49               	movwf	FromMainHigh_recvmsg@data,c
  6245  001518  0E02               	movlw	2
  6246  00151A  EC73  F00D         	call	_FromMainHigh_recvmsg
  6247  00151E  0100               	movlb	0	; () banked
  6248  001520  0100               	movlb	0	; () banked
  6249  001522  6F80               	movwf	timer0_int_handler@length& (0+255),b
  6250  001524  0100               	movlb	0	; () banked
  6251  001526  6B81               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6252  001528  0100               	movlb	0	; () banked
  6253  00152A  BF80               	btfsc	timer0_int_handler@length& (0+255),7,b
  6254  00152C  0781               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6255                           
  6256                           ; BSR set to: 0
  6257                           ;user_interrupts.c: 26: if (length == sizeof (val)) {
  6258  00152E  0100               	movlb	0	; () banked
  6259  001530  0100               	movlb	0	; () banked
  6260  001532  5180               	movf	timer0_int_handler@length& (0+255),w,b
  6261  001534  0A02               	xorlw	2
  6262  001536  1181               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6263  001538  A4D8               	btfss	status,2,c
  6264  00153A  0012               	return	
  6265                           
  6266                           ; BSR set to: 0
  6267                           ;user_interrupts.c: 27: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6268  00153C  6E4C               	movwf	??_timer0_int_handler& (0+255),c
  6269  00153E  0E0A               	movlw	10
  6270  001540  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  6271  001542  504C               	movf	??_timer0_int_handler& (0+255),w,c
  6272  001544  0100               	movlb	0	; () banked
  6273  001546  0E00               	movlw	high timer0_int_handler@val
  6274  001548  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  6275  00154A  0100               	movlb	0	; () banked
  6276  00154C  0E84               	movlw	low timer0_int_handler@val
  6277  00154E  6E46               	movwf	ToMainHigh_sendmsg@data,c
  6278  001550  0E02               	movlw	2
  6279  001552  ECAF  F00D         	call	_ToMainHigh_sendmsg
  6280  001556  0012               	return	
  6281  001558                     __end_of_timer0_int_handler:
  6282                           	opt stack 0
  6283                           pclatu	equ	0xFFB
  6284                           pclath	equ	0xFFA
  6285                           tblptru	equ	0xFF8
  6286                           tblptrh	equ	0xFF7
  6287                           tblptrl	equ	0xFF6
  6288                           tablat	equ	0xFF5
  6289                           prodh	equ	0xFF4
  6290                           prodl	equ	0xFF3
  6291                           intcon	equ	0xFF2
  6292                           postinc0	equ	0xFEE
  6293                           fsr0h	equ	0xFEA
  6294                           fsr0l	equ	0xFE9
  6295                           wreg	equ	0xFE8
  6296                           indf1	equ	0xFE7
  6297                           fsr1h	equ	0xFE2
  6298                           fsr1l	equ	0xFE1
  6299                           bsr	equ	0xFE0
  6300                           indf2	equ	0xFDF
  6301                           postinc2	equ	0xFDE
  6302                           postdec2	equ	0xFDD
  6303                           fsr2h	equ	0xFDA
  6304                           fsr2l	equ	0xFD9
  6305                           status	equ	0xFD8
  6306                           
  6307 ;; *************** function _WriteTimer0 *****************
  6308 ;; Defined at:
  6309 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0write.c"
  6310 ;; Parameters:    Size  Location     Type
  6311 ;;  timer0          2   46[COMRAM] unsigned int 
  6312 ;; Auto vars:     Size  Location     Type
  6313 ;;  timer           2   48[COMRAM] struct Timers
  6314 ;; Return value:  Size  Location     Type
  6315 ;;		None               void
  6316 ;; Registers used:
  6317 ;;		None
  6318 ;; Tracked objects:
  6319 ;;		On entry : 0/0
  6320 ;;		On exit  : 0/0
  6321 ;;		Unchanged: 0/0
  6322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6323 ;;      Params:         2       0       0       0       0
  6324 ;;      Locals:         2       0       0       0       0
  6325 ;;      Temps:          0       0       0       0       0
  6326 ;;      Totals:         4       0       0       0       0
  6327 ;;Total ram usage:        4 bytes
  6328 ;; Hardware stack levels used:    1
  6329 ;; This function calls:
  6330 ;;		Nothing
  6331 ;; This function is called by:
  6332 ;;		_timer0_int_handler
  6333 ;; This function uses a non-reentrant model
  6334 ;;
  6335                           
  6336                           	psect	text43
  6337  001C72                     __ptext43:
  6338                           	opt stack 0
  6339  001C72                     _WriteTimer0:
  6340                           	opt stack 18
  6341                           
  6342                           ;incstack = 0
  6343  001C72  C02F  F031         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6344  001C76  C030  F032         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6345  001C7A  C032  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6346  001C7E  C031  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6347  001C82  0012               	return	
  6348  001C84                     __end_of_WriteTimer0:
  6349                           	opt stack 0
  6350                           pclatu	equ	0xFFB
  6351                           pclath	equ	0xFFA
  6352                           tblptru	equ	0xFF8
  6353                           tblptrh	equ	0xFF7
  6354                           tblptrl	equ	0xFF6
  6355                           tablat	equ	0xFF5
  6356                           prodh	equ	0xFF4
  6357                           prodl	equ	0xFF3
  6358                           intcon	equ	0xFF2
  6359                           postinc0	equ	0xFEE
  6360                           fsr0h	equ	0xFEA
  6361                           fsr0l	equ	0xFE9
  6362                           wreg	equ	0xFE8
  6363                           indf1	equ	0xFE7
  6364                           fsr1h	equ	0xFE2
  6365                           fsr1l	equ	0xFE1
  6366                           bsr	equ	0xFE0
  6367                           indf2	equ	0xFDF
  6368                           postinc2	equ	0xFDE
  6369                           postdec2	equ	0xFDD
  6370                           fsr2h	equ	0xFDA
  6371                           fsr2l	equ	0xFD9
  6372                           status	equ	0xFD8
  6373                           
  6374 ;; *************** function _FromMainHigh_recvmsg *****************
  6375 ;; Defined at:
  6376 ;;		line 183 in file "../src/messages.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;  maxlength       1    wreg     unsigned char 
  6379 ;;  msgtype         2   70[COMRAM] PTR unsigned char 
  6380 ;;		 -> timer0_int_handler@msgtype(2), 
  6381 ;;  data            2   72[COMRAM] PTR void 
  6382 ;;		 -> timer0_int_handler@val(2), 
  6383 ;; Auto vars:     Size  Location     Type
  6384 ;;  maxlength       1   74[COMRAM] unsigned char 
  6385 ;; Return value:  Size  Location     Type
  6386 ;;                  1    wreg      char 
  6387 ;; Registers used:
  6388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6389 ;; Tracked objects:
  6390 ;;		On entry : 0/0
  6391 ;;		On exit  : 0/0
  6392 ;;		Unchanged: 0/0
  6393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6394 ;;      Params:         4       0       0       0       0
  6395 ;;      Locals:         1       0       0       0       0
  6396 ;;      Temps:          0       0       0       0       0
  6397 ;;      Totals:         5       0       0       0       0
  6398 ;;Total ram usage:        5 bytes
  6399 ;; Hardware stack levels used:    1
  6400 ;; Hardware stack levels required when called:    2
  6401 ;; This function calls:
  6402 ;;		i2_recv_msg
  6403 ;; This function is called by:
  6404 ;;		_timer0_int_handler
  6405 ;; This function uses a non-reentrant model
  6406 ;;
  6407                           
  6408                           	psect	text44
  6409  001AE6                     __ptext44:
  6410                           	opt stack 0
  6411  001AE6                     _FromMainHigh_recvmsg:
  6412                           	opt stack 16
  6413                           
  6414                           ;incstack = 0
  6415                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  6416  001AE6  CFE8 F04B          	movff	wreg,FromMainHigh_recvmsg@maxlength
  6417                           
  6418                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  6419  001AEA  0102               	movlb	2	; () banked
  6420  001AEC  0E02               	movlw	high _FromMainHigh_MQ
  6421  001AEE  6E3A               	movwf	i2recv_msg@qptr+1,c
  6422  001AF0  0102               	movlb	2	; () banked
  6423  001AF2  0E00               	movlw	low _FromMainHigh_MQ
  6424  001AF4  6E39               	movwf	i2recv_msg@qptr,c
  6425  001AF6  C04B  F03B         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  6426  001AFA  C048  F03D         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  6427  001AFE  C047  F03C         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  6428  001B02  C04A  F03F         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  6429  001B06  C049  F03E         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  6430  001B0A  ECEE  F006         	call	i2_recv_msg	;wreg free
  6431  001B0E  0012               	return	
  6432  001B10                     __end_of_FromMainHigh_recvmsg:
  6433                           	opt stack 0
  6434                           pclatu	equ	0xFFB
  6435                           pclath	equ	0xFFA
  6436                           tblptru	equ	0xFF8
  6437                           tblptrh	equ	0xFF7
  6438                           tblptrl	equ	0xFF6
  6439                           tablat	equ	0xFF5
  6440                           prodh	equ	0xFF4
  6441                           prodl	equ	0xFF3
  6442                           intcon	equ	0xFF2
  6443                           postinc0	equ	0xFEE
  6444                           fsr0h	equ	0xFEA
  6445                           fsr0l	equ	0xFE9
  6446                           wreg	equ	0xFE8
  6447                           indf1	equ	0xFE7
  6448                           fsr1h	equ	0xFE2
  6449                           fsr1l	equ	0xFE1
  6450                           bsr	equ	0xFE0
  6451                           indf2	equ	0xFDF
  6452                           postinc2	equ	0xFDE
  6453                           postdec2	equ	0xFDD
  6454                           fsr2h	equ	0xFDA
  6455                           fsr2l	equ	0xFD9
  6456                           status	equ	0xFD8
  6457                           
  6458 ;; *************** function i2_recv_msg *****************
  6459 ;; Defined at:
  6460 ;;		line 63 in file "../src/messages.c"
  6461 ;; Parameters:    Size  Location     Type
  6462 ;;  qptr            2   56[COMRAM] PTR struct __msg_queue
  6463 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6464 ;;  maxlength       1   58[COMRAM] unsigned char 
  6465 ;;  msgtype         2   59[COMRAM] PTR unsigned char 
  6466 ;;		 -> main@msgtype(1), timer0_int_handler@msgtype(2), 
  6467 ;;  data            2   61[COMRAM] PTR void 
  6468 ;;		 -> main@msgbuffer(11), timer0_int_handler@val(2), 
  6469 ;; Auto vars:     Size  Location     Type
  6470 ;;  recv_msg        2   68[COMRAM] PTR struct __msg
  6471 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6472 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6473 ;;  recv_msg        2   66[COMRAM] unsigned int 
  6474 ;;  recv_msg        1   65[COMRAM] unsigned char 
  6475 ;; Return value:  Size  Location     Type
  6476 ;;                  1    wreg      char 
  6477 ;; Registers used:
  6478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6479 ;; Tracked objects:
  6480 ;;		On entry : 0/0
  6481 ;;		On exit  : 0/0
  6482 ;;		Unchanged: 0/0
  6483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6484 ;;      Params:         7       0       0       0       0
  6485 ;;      Locals:         5       0       0       0       0
  6486 ;;      Temps:          2       0       0       0       0
  6487 ;;      Totals:        14       0       0       0       0
  6488 ;;Total ram usage:       14 bytes
  6489 ;; Hardware stack levels used:    1
  6490 ;; Hardware stack levels required when called:    1
  6491 ;; This function calls:
  6492 ;;		i2_memcpy
  6493 ;; This function is called by:
  6494 ;;		_FromMainHigh_recvmsg
  6495 ;; This function uses a non-reentrant model
  6496 ;;
  6497                           
  6498                           	psect	text45
  6499  000DDC                     __ptext45:
  6500                           	opt stack 0
  6501  000DDC                     i2_recv_msg:
  6502                           	opt stack 16
  6503                           
  6504                           ;messages.c: 64: unsigned char slot;
  6505                           ;messages.c: 68: msg *qmsg;
  6506                           ;messages.c: 69: size_t tlength;
  6507                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6508                           
  6509                           ;incstack = 0
  6510  000DDC  EE20 F035          	lfsr	2,53
  6511  000DE0  5039               	movf	i2recv_msg@qptr,w,c
  6512  000DE2  26D9               	addwf	fsr2l,f,c
  6513  000DE4  503A               	movf	i2recv_msg@qptr+1,w,c
  6514  000DE6  22DA               	addwfc	fsr2h,f,c
  6515  000DE8  50DF               	movf	indf2,w,c
  6516  000DEA  6E42               	movwf	i2recv_msg@slot,c
  6517                           
  6518                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6519  000DEC  5042               	movf	i2recv_msg@slot,w,c
  6520  000DEE  0D0D               	mullw	13
  6521  000DF0  50F3               	movf	prodl,w,c
  6522  000DF2  2439               	addwf	i2recv_msg@qptr,w,c
  6523  000DF4  6E45               	movwf	i2recv_msg@qmsg,c
  6524  000DF6  50F4               	movf	prodh,w,c
  6525  000DF8  203A               	addwfc	i2recv_msg@qptr+1,w,c
  6526  000DFA  6E46               	movwf	i2recv_msg@qmsg+1,c
  6527                           
  6528                           ;messages.c: 74: if (qmsg->full == 1) {
  6529  000DFC  0E01               	movlw	1
  6530  000DFE  C045  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6531  000E02  C046  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6532  000E06  62DF               	cpfseq	indf2,c
  6533  000E08  D050               	goto	i2l3371
  6534                           
  6535                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6536  000E0A  EE20 F001          	lfsr	2,1
  6537  000E0E  5045               	movf	i2recv_msg@qmsg,w,c
  6538  000E10  26D9               	addwf	fsr2l,f,c
  6539  000E12  5046               	movf	i2recv_msg@qmsg+1,w,c
  6540  000E14  22DA               	addwfc	fsr2h,f,c
  6541  000E16  50DF               	movf	indf2,w,c
  6542  000E18  5C3B               	subwf	i2recv_msg@maxlength,w,c
  6543  000E1A  B0D8               	btfsc	status,0,c
  6544  000E1C  D002               	goto	i2l3355
  6545                           
  6546                           ;messages.c: 77: return (-3);
  6547  000E1E  0EFD               	movlw	253
  6548  000E20  0012               	return	
  6549  000E22                     i2l3355:
  6550                           
  6551                           ;messages.c: 78: }
  6552                           ;messages.c: 80: tlength = qmsg->length;
  6553  000E22  EE20 F001          	lfsr	2,1
  6554  000E26  5045               	movf	i2recv_msg@qmsg,w,c
  6555  000E28  26D9               	addwf	fsr2l,f,c
  6556  000E2A  5046               	movf	i2recv_msg@qmsg+1,w,c
  6557  000E2C  22DA               	addwfc	fsr2h,f,c
  6558  000E2E  50DF               	movf	indf2,w,c
  6559  000E30  6E40               	movwf	??i2_recv_msg& (0+255),c
  6560  000E32  5040               	movf	??i2_recv_msg,w,c
  6561  000E34  6E43               	movwf	i2recv_msg@tlength,c
  6562  000E36  6A44               	clrf	i2recv_msg@tlength+1,c
  6563                           
  6564                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6565  000E38  C03F  F030         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  6566  000E3C  C03E  F02F         	movff	i2recv_msg@data,i2memcpy@d1
  6567  000E40  0E03               	movlw	3
  6568  000E42  2445               	addwf	i2recv_msg@qmsg,w,c
  6569  000E44  6E40               	movwf	??i2_recv_msg& (0+255),c
  6570  000E46  0E00               	movlw	0
  6571  000E48  2046               	addwfc	i2recv_msg@qmsg+1,w,c
  6572  000E4A  6E41               	movwf	(??i2_recv_msg+1)& (0+255),c
  6573  000E4C  C040  F031         	movff	??i2_recv_msg,i2memcpy@s1
  6574  000E50  C041  F032         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  6575  000E54  C043  F033         	movff	i2recv_msg@tlength,i2memcpy@n
  6576  000E58  C044  F034         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  6577  000E5C  EC93  F00C         	call	i2_memcpy	;wreg free
  6578                           
  6579                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6580  000E60  EE20 F035          	lfsr	2,53
  6581  000E64  5039               	movf	i2recv_msg@qptr,w,c
  6582  000E66  26D9               	addwf	fsr2l,f,c
  6583  000E68  503A               	movf	i2recv_msg@qptr+1,w,c
  6584  000E6A  22DA               	addwfc	fsr2h,f,c
  6585  000E6C  EE10 F035          	lfsr	1,53
  6586  000E70  5039               	movf	i2recv_msg@qptr,w,c
  6587  000E72  26E1               	addwf	fsr1l,f,c
  6588  000E74  503A               	movf	i2recv_msg@qptr+1,w,c
  6589  000E76  22E2               	addwfc	fsr1h,f,c
  6590  000E78  50E7               	movf	indf1,w,c
  6591  000E7A  6E40               	movwf	??i2_recv_msg& (0+255),c
  6592  000E7C  2840               	incf	??i2_recv_msg,w,c
  6593  000E7E  0B03               	andlw	3
  6594  000E80  6EDF               	movwf	indf2,c
  6595                           
  6596                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6597  000E82  EE20 F002          	lfsr	2,2
  6598  000E86  5045               	movf	i2recv_msg@qmsg,w,c
  6599  000E88  26D9               	addwf	fsr2l,f,c
  6600  000E8A  5046               	movf	i2recv_msg@qmsg+1,w,c
  6601  000E8C  22DA               	addwfc	fsr2h,f,c
  6602  000E8E  C03C  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  6603  000E92  C03D  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  6604  000E96  CFDF FFE7          	movff	indf2,indf1
  6605                           
  6606                           ;messages.c: 91: qmsg->full = 0;
  6607  000E9A  C045  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6608  000E9E  C046  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6609  000EA2  0E00               	movlw	0
  6610  000EA4  6EDF               	movwf	indf2,c
  6611                           
  6612                           ;messages.c: 92: return (tlength);
  6613  000EA6  5043               	movf	i2recv_msg@tlength,w,c
  6614  000EA8  0012               	return	
  6615  000EAA                     i2l3371:
  6616                           
  6617                           ;messages.c: 94: return (-4);
  6618  000EAA  0EFC               	movlw	252
  6619  000EAC  0012               	return	
  6620  000EAE                     __end_ofi2_recv_msg:
  6621                           	opt stack 0
  6622                           pclatu	equ	0xFFB
  6623                           pclath	equ	0xFFA
  6624                           tblptru	equ	0xFF8
  6625                           tblptrh	equ	0xFF7
  6626                           tblptrl	equ	0xFF6
  6627                           tablat	equ	0xFF5
  6628                           prodh	equ	0xFF4
  6629                           prodl	equ	0xFF3
  6630                           intcon	equ	0xFF2
  6631                           postinc0	equ	0xFEE
  6632                           fsr0h	equ	0xFEA
  6633                           fsr0l	equ	0xFE9
  6634                           wreg	equ	0xFE8
  6635                           indf1	equ	0xFE7
  6636                           fsr1h	equ	0xFE2
  6637                           fsr1l	equ	0xFE1
  6638                           bsr	equ	0xFE0
  6639                           indf2	equ	0xFDF
  6640                           postinc2	equ	0xFDE
  6641                           postdec2	equ	0xFDD
  6642                           fsr2h	equ	0xFDA
  6643                           fsr2l	equ	0xFD9
  6644                           status	equ	0xFD8
  6645                           
  6646 ;; *************** function _i2c_int_handler *****************
  6647 ;; Defined at:
  6648 ;;		line 100 in file "../src/my_i2c.c"
  6649 ;; Parameters:    Size  Location     Type
  6650 ;;		None
  6651 ;; Auto vars:     Size  Location     Type
  6652 ;;  msgbuffer      11    0[BANK0 ] unsigned char [11]
  6653 ;;  length          2   11[BANK0 ] int 
  6654 ;;  error_buf       3   13[BANK0 ] unsigned char [3]
  6655 ;;  data_read       1   21[BANK0 ] unsigned char 
  6656 ;;  msg_ready       1   20[BANK0 ] unsigned char 
  6657 ;;  msg_to_send     1   19[BANK0 ] unsigned char 
  6658 ;;  i2c_data        1   18[BANK0 ] unsigned char 
  6659 ;;  overrun_erro    1   17[BANK0 ] unsigned char 
  6660 ;;  data_written    1   16[BANK0 ] unsigned char 
  6661 ;; Return value:  Size  Location     Type
  6662 ;;		None               void
  6663 ;; Registers used:
  6664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6665 ;; Tracked objects:
  6666 ;;		On entry : 0/0
  6667 ;;		On exit  : 0/0
  6668 ;;		Unchanged: 0/0
  6669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6670 ;;      Params:         0       0       0       0       0
  6671 ;;      Locals:         0      22       0       0       0
  6672 ;;      Temps:          2       0       0       0       0
  6673 ;;      Totals:         2      22       0       0       0
  6674 ;;Total ram usage:       24 bytes
  6675 ;; Hardware stack levels used:    1
  6676 ;; Hardware stack levels required when called:    3
  6677 ;; This function calls:
  6678 ;;		_ToMainHigh_sendmsg
  6679 ;;		_handle_start
  6680 ;;		i2_returnADCValue
  6681 ;;		i2_start_i2c_slave_reply
  6682 ;; This function is called by:
  6683 ;;		_InterruptHandlerHigh
  6684 ;; This function uses a non-reentrant model
  6685 ;;
  6686                           
  6687                           	psect	text46
  6688  0000BE                     __ptext46:
  6689                           	opt stack 0
  6690  0000BE                     _i2c_int_handler:
  6691                           	opt stack 16
  6692                           
  6693                           ;my_i2c.c: 101: unsigned char i2c_data;
  6694                           ;my_i2c.c: 102: unsigned char data_read = 0;
  6695                           
  6696                           ;incstack = 0
  6697  0000BE  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6698  0000C0  0E00               	movlw	0
  6699  0000C2  0100               	movlb	0	; () banked
  6700  0000C4  0100               	movlb	0	; () banked
  6701  0000C6  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  6702  0000C8  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6703                           
  6704                           ;my_i2c.c: 103: unsigned char data_written = 0;
  6705  0000CA  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6706  0000CC  0E00               	movlw	0
  6707  0000CE  0100               	movlb	0	; () banked
  6708  0000D0  0100               	movlb	0	; () banked
  6709  0000D2  6F90               	movwf	i2c_int_handler@data_written& (0+255),b
  6710  0000D4  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6711                           
  6712                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  6713  0000D6  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6714  0000D8  0E00               	movlw	0
  6715  0000DA  0100               	movlb	0	; () banked
  6716  0000DC  0100               	movlb	0	; () banked
  6717  0000DE  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6718  0000E0  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6719                           
  6720                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  6721  0000E2  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6722  0000E4  0E00               	movlw	0
  6723  0000E6  0100               	movlb	0	; () banked
  6724  0000E8  0100               	movlb	0	; () banked
  6725  0000EA  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6726  0000EC  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6727                           
  6728                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  6729  0000EE  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6730  0000F0  0E00               	movlw	0
  6731  0000F2  0100               	movlb	0	; () banked
  6732  0000F4  0100               	movlb	0	; () banked
  6733  0000F6  6F91               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6734  0000F8  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6735                           
  6736                           ; BSR set to: 0
  6737                           ;my_i2c.c: 107: unsigned char error_buf[3];
  6738                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  6739  0000FA  ACC6               	btfss	4038,6,c	;volatile
  6740  0000FC  D027               	goto	i2l3123
  6741                           
  6742                           ; BSR set to: 0
  6743                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  6744  0000FE  9CC6               	bcf	4038,6,c	;volatile
  6745                           
  6746                           ; BSR set to: 0
  6747                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  6748  000100  0100               	movlb	0	; () banked
  6749  000102  EE20 F00C          	lfsr	2,12
  6750  000106  0100               	movlb	0	; () banked
  6751  000108  51CD               	movf	_ic_ptr& (0+255),w,b
  6752  00010A  26D9               	addwf	fsr2l,f,c
  6753  00010C  0100               	movlb	0	; () banked
  6754  00010E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6755  000110  22DA               	addwfc	fsr2h,f,c
  6756  000112  0E05               	movlw	5
  6757  000114  6EDF               	movwf	indf2,c
  6758                           
  6759                           ; BSR set to: 0
  6760                           ;my_i2c.c: 116: overrun_error = 1;
  6761  000116  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6762  000118  0E01               	movlw	1
  6763  00011A  0100               	movlb	0	; () banked
  6764  00011C  0100               	movlb	0	; () banked
  6765  00011E  6F91               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6766  000120  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6767                           
  6768                           ; BSR set to: 0
  6769                           ;my_i2c.c: 117: ic_ptr->error_count++;
  6770  000122  0100               	movlb	0	; () banked
  6771  000124  EE20 F00E          	lfsr	2,14
  6772  000128  0100               	movlb	0	; () banked
  6773  00012A  51CD               	movf	_ic_ptr& (0+255),w,b
  6774  00012C  26D9               	addwf	fsr2l,f,c
  6775  00012E  0100               	movlb	0	; () banked
  6776  000130  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6777  000132  22DA               	addwfc	fsr2h,f,c
  6778  000134  2ADF               	incf	indf2,f,c
  6779                           
  6780                           ; BSR set to: 0
  6781                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  6782  000136  0100               	movlb	0	; () banked
  6783  000138  EE20 F00D          	lfsr	2,13
  6784  00013C  0100               	movlb	0	; () banked
  6785  00013E  51CD               	movf	_ic_ptr& (0+255),w,b
  6786  000140  26D9               	addwf	fsr2l,f,c
  6787  000142  0100               	movlb	0	; () banked
  6788  000144  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6789  000146  22DA               	addwfc	fsr2h,f,c
  6790  000148  0E04               	movlw	4
  6791  00014A  6EDF               	movwf	indf2,c
  6792  00014C                     i2l3123:
  6793                           
  6794                           ; BSR set to: 0
  6795                           ;my_i2c.c: 119: }
  6796                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  6797  00014C  A0C7               	btfss	4039,0,c	;volatile
  6798  00014E  D008               	goto	i2l3129
  6799                           
  6800                           ; BSR set to: 0
  6801                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  6802  000150  CFC9 F092          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;my_i2c.c: 123: data_read = 1;
  6806  000154  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6807  000156  0E01               	movlw	1
  6808  000158  0100               	movlb	0	; () banked
  6809  00015A  0100               	movlb	0	; () banked
  6810  00015C  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  6811  00015E  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6812  000160                     i2l3129:
  6813                           
  6814                           ; BSR set to: 0
  6815                           ;my_i2c.c: 124: }
  6816                           ;my_i2c.c: 129: if (!overrun_error) {
  6817  000160  0100               	movlb	0	; () banked
  6818  000162  0100               	movlb	0	; () banked
  6819  000164  6791               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6820  000166  D1B8               	goto	i2l114
  6821  000168  D1A1               	goto	i2l3217
  6822  00016A                     i2l116:
  6823                           
  6824                           ; BSR set to: 0
  6825                           ;my_i2c.c: 132: {
  6826                           ;my_i2c.c: 134: if (SSPSTATbits.S == 1) {
  6827  00016A  A6C7               	btfss	4039,3,c	;volatile
  6828  00016C  D1B5               	goto	i2l114
  6829                           
  6830                           ; BSR set to: 0
  6831                           ;my_i2c.c: 135: handle_start(data_read);
  6832  00016E  0100               	movlb	0	; () banked
  6833  000170  0100               	movlb	0	; () banked
  6834  000172  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6835  000174  EC57  F007         	call	_handle_start
  6836                           
  6837                           ;my_i2c.c: 137: if (ic_ptr->status == 0x8) {
  6838  000178  0100               	movlb	0	; () banked
  6839  00017A  EE20 F00C          	lfsr	2,12
  6840  00017E  0100               	movlb	0	; () banked
  6841  000180  51CD               	movf	_ic_ptr& (0+255),w,b
  6842  000182  26D9               	addwf	fsr2l,f,c
  6843  000184  0100               	movlb	0	; () banked
  6844  000186  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6845  000188  22DA               	addwfc	fsr2h,f,c
  6846  00018A  0E08               	movlw	8
  6847  00018C  62DF               	cpfseq	indf2,c
  6848  00018E  D1A4               	goto	i2l114
  6849                           
  6850                           ; BSR set to: 0
  6851                           ;my_i2c.c: 138: data_read = 0;
  6852  000190  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6853  000192  0E00               	movlw	0
  6854  000194  0100               	movlb	0	; () banked
  6855  000196  0100               	movlb	0	; () banked
  6856  000198  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  6857  00019A  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6858                           
  6859                           ;my_i2c.c: 139: msg_to_send = 1;
  6860  00019C  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6861  00019E  0E01               	movlw	1
  6862  0001A0  0100               	movlb	0	; () banked
  6863  0001A2  0100               	movlb	0	; () banked
  6864  0001A4  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6865  0001A6  D175               	goto	L7
  6866  0001A8                     i2l120:
  6867                           
  6868                           ; BSR set to: 0
  6869                           ;my_i2c.c: 145: {
  6870                           ;my_i2c.c: 147: if (SSPSTATbits.P == 1) {
  6871  0001A8  A8C7               	btfss	4039,4,c	;volatile
  6872  0001AA  D02E               	goto	i2l3149
  6873                           
  6874                           ; BSR set to: 0
  6875                           ;my_i2c.c: 150: ic_ptr->event_count++;
  6876  0001AC  0100               	movlb	0	; () banked
  6877  0001AE  EE20 F00B          	lfsr	2,11
  6878  0001B2  0100               	movlb	0	; () banked
  6879  0001B4  51CD               	movf	_ic_ptr& (0+255),w,b
  6880  0001B6  26D9               	addwf	fsr2l,f,c
  6881  0001B8  0100               	movlb	0	; () banked
  6882  0001BA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6883  0001BC  22DA               	addwfc	fsr2h,f,c
  6884  0001BE  2ADF               	incf	indf2,f,c
  6885                           
  6886                           ; BSR set to: 0
  6887                           ;my_i2c.c: 151: if (data_read) {
  6888  0001C0  0100               	movlb	0	; () banked
  6889  0001C2  0100               	movlb	0	; () banked
  6890  0001C4  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6891  0001C6  B4D8               	btfsc	status,2,c
  6892  0001C8  D166               	goto	L9
  6893                           
  6894                           ; BSR set to: 0
  6895                           ;my_i2c.c: 152: if (SSPSTATbits.D_A == 0) {
  6896  0001CA  BAC7               	btfsc	4039,5,c	;volatile
  6897  0001CC  D007               	goto	i2l3147
  6898                           
  6899                           ; BSR set to: 0
  6900                           ;my_i2c.c: 153: msg_ready = 1;
  6901  0001CE  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6902  0001D0  0E01               	movlw	1
  6903  0001D2  0100               	movlb	0	; () banked
  6904  0001D4  0100               	movlb	0	; () banked
  6905  0001D6  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6906  0001D8  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6907                           
  6908                           ;my_i2c.c: 154: } else {
  6909  0001DA  D15D               	goto	L9
  6910  0001DC                     i2l3147:
  6911                           
  6912                           ; BSR set to: 0
  6913                           ;my_i2c.c: 155: ic_ptr->error_count++;
  6914  0001DC  0100               	movlb	0	; () banked
  6915  0001DE  EE20 F00E          	lfsr	2,14
  6916  0001E2  0100               	movlb	0	; () banked
  6917  0001E4  51CD               	movf	_ic_ptr& (0+255),w,b
  6918  0001E6  26D9               	addwf	fsr2l,f,c
  6919  0001E8  0100               	movlb	0	; () banked
  6920  0001EA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6921  0001EC  22DA               	addwfc	fsr2h,f,c
  6922  0001EE  2ADF               	incf	indf2,f,c
  6923                           
  6924                           ;my_i2c.c: 156: ic_ptr->error_code = 0x6;
  6925  0001F0  0100               	movlb	0	; () banked
  6926  0001F2  EE20 F00D          	lfsr	2,13
  6927  0001F6  0100               	movlb	0	; () banked
  6928  0001F8  51CD               	movf	_ic_ptr& (0+255),w,b
  6929  0001FA  26D9               	addwf	fsr2l,f,c
  6930  0001FC  0100               	movlb	0	; () banked
  6931  0001FE  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6932  000200  22DA               	addwfc	fsr2h,f,c
  6933  000202  0E06               	movlw	6
  6934  000204  6EDF               	movwf	indf2,c
  6935                           
  6936                           ; BSR set to: 0
  6937  000206  D147               	goto	L9
  6938  000208                     i2l3149:
  6939                           
  6940                           ; BSR set to: 0
  6941  000208  0100               	movlb	0	; () banked
  6942  00020A  0100               	movlb	0	; () banked
  6943  00020C  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6944  00020E  B4D8               	btfsc	status,2,c
  6945  000210  D163               	goto	i2l114
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;my_i2c.c: 161: ic_ptr->event_count++;
  6949  000212  0100               	movlb	0	; () banked
  6950  000214  EE20 F00B          	lfsr	2,11
  6951  000218  0100               	movlb	0	; () banked
  6952  00021A  51CD               	movf	_ic_ptr& (0+255),w,b
  6953  00021C  26D9               	addwf	fsr2l,f,c
  6954  00021E  0100               	movlb	0	; () banked
  6955  000220  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6956  000222  22DA               	addwfc	fsr2h,f,c
  6957  000224  2ADF               	incf	indf2,f,c
  6958                           
  6959                           ; BSR set to: 0
  6960                           ;my_i2c.c: 162: if (SSPSTATbits.D_A == 0) {
  6961  000226  BAC7               	btfsc	4039,5,c	;volatile
  6962  000228  D019               	goto	i2l3165
  6963                           
  6964                           ; BSR set to: 0
  6965                           ;my_i2c.c: 163: if (SSPSTATbits.R_W == 0) {
  6966  00022A  B4C7               	btfsc	4039,2,c	;volatile
  6967  00022C  D00B               	goto	i2l3159
  6968                           
  6969                           ; BSR set to: 0
  6970                           ;my_i2c.c: 164: ic_ptr->status = 0x7;
  6971  00022E  0100               	movlb	0	; () banked
  6972  000230  EE20 F00C          	lfsr	2,12
  6973  000234  0100               	movlb	0	; () banked
  6974  000236  51CD               	movf	_ic_ptr& (0+255),w,b
  6975  000238  26D9               	addwf	fsr2l,f,c
  6976  00023A  0100               	movlb	0	; () banked
  6977  00023C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6978  00023E  22DA               	addwfc	fsr2h,f,c
  6979  000240  0E07               	movlw	7
  6980  000242  D071               	goto	L6
  6981  000244                     i2l3159:
  6982                           
  6983                           ; BSR set to: 0
  6984                           ;my_i2c.c: 166: ic_ptr->status = 0x8;
  6985  000244  0100               	movlb	0	; () banked
  6986  000246  EE20 F00C          	lfsr	2,12
  6987  00024A  0100               	movlb	0	; () banked
  6988  00024C  51CD               	movf	_ic_ptr& (0+255),w,b
  6989  00024E  26D9               	addwf	fsr2l,f,c
  6990  000250  0100               	movlb	0	; () banked
  6991  000252  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6992  000254  22DA               	addwfc	fsr2h,f,c
  6993  000256  0E08               	movlw	8
  6994  000258  6EDF               	movwf	indf2,c
  6995  00025A  D110               	goto	L10
  6996  00025C                     i2l3165:
  6997                           
  6998                           ; BSR set to: 0
  6999                           ;my_i2c.c: 172: ic_ptr->error_count++;
  7000  00025C  0100               	movlb	0	; () banked
  7001  00025E  EE20 F00E          	lfsr	2,14
  7002  000262  0100               	movlb	0	; () banked
  7003  000264  51CD               	movf	_ic_ptr& (0+255),w,b
  7004  000266  26D9               	addwf	fsr2l,f,c
  7005  000268  0100               	movlb	0	; () banked
  7006  00026A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7007  00026C  22DA               	addwfc	fsr2h,f,c
  7008  00026E  2ADF               	incf	indf2,f,c
  7009                           
  7010                           ;my_i2c.c: 173: ic_ptr->status = 0x5;
  7011  000270  0100               	movlb	0	; () banked
  7012  000272  EE20 F00C          	lfsr	2,12
  7013  000276  0100               	movlb	0	; () banked
  7014  000278  51CD               	movf	_ic_ptr& (0+255),w,b
  7015  00027A  26D9               	addwf	fsr2l,f,c
  7016  00027C  0100               	movlb	0	; () banked
  7017  00027E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7018  000280  22DA               	addwfc	fsr2h,f,c
  7019  000282  0E05               	movlw	5
  7020  000284  6EDF               	movwf	indf2,c
  7021                           
  7022                           ;my_i2c.c: 174: ic_ptr->error_code = 0x6;
  7023  000286  0100               	movlb	0	; () banked
  7024  000288  EE20 F00D          	lfsr	2,13
  7025  00028C  0100               	movlb	0	; () banked
  7026  00028E  51CD               	movf	_ic_ptr& (0+255),w,b
  7027  000290  26D9               	addwf	fsr2l,f,c
  7028  000292  0100               	movlb	0	; () banked
  7029  000294  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7030  000296  22DA               	addwfc	fsr2h,f,c
  7031  000298  0E06               	movlw	6
  7032  00029A  D045               	goto	L6
  7033  00029C                     i2l3167:
  7034                           
  7035                           ; BSR set to: 0
  7036                           ;my_i2c.c: 180: {
  7037                           ;my_i2c.c: 181: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7038  00029C  0100               	movlb	0	; () banked
  7039  00029E  EE20 F01A          	lfsr	2,26
  7040  0002A2  0100               	movlb	0	; () banked
  7041  0002A4  51CD               	movf	_ic_ptr& (0+255),w,b
  7042  0002A6  26D9               	addwf	fsr2l,f,c
  7043  0002A8  0100               	movlb	0	; () banked
  7044  0002AA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7045  0002AC  22DA               	addwfc	fsr2h,f,c
  7046  0002AE  50DF               	movf	indf2,w,c
  7047  0002B0  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7048  0002B2  0100               	movlb	0	; () banked
  7049  0002B4  EE20 F019          	lfsr	2,25
  7050  0002B8  0100               	movlb	0	; () banked
  7051  0002BA  51CD               	movf	_ic_ptr& (0+255),w,b
  7052  0002BC  26D9               	addwf	fsr2l,f,c
  7053  0002BE  0100               	movlb	0	; () banked
  7054  0002C0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7055  0002C2  22DA               	addwfc	fsr2h,f,c
  7056  0002C4  50DF               	movf	indf2,w,c
  7057  0002C6  5C49               	subwf	??_i2c_int_handler,w,c
  7058  0002C8  B0D8               	btfsc	status,0,c
  7059  0002CA  D0E5               	goto	L9
  7060                           
  7061                           ; BSR set to: 0
  7062                           ;my_i2c.c: 182: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7063  0002CC  0100               	movlb	0	; () banked
  7064  0002CE  EE20 F01A          	lfsr	2,26
  7065  0002D2  0100               	movlb	0	; () banked
  7066  0002D4  51CD               	movf	_ic_ptr& (0+255),w,b
  7067  0002D6  26D9               	addwf	fsr2l,f,c
  7068  0002D8  0100               	movlb	0	; () banked
  7069  0002DA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7070  0002DC  22DA               	addwfc	fsr2h,f,c
  7071  0002DE  50DF               	movf	indf2,w,c
  7072  0002E0  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7073  0002E2  5049               	movf	??_i2c_int_handler,w,c
  7074  0002E4  0D01               	mullw	1
  7075  0002E6  0E0F               	movlw	15
  7076  0002E8  26F3               	addwf	prodl,f,c
  7077  0002EA  0E00               	movlw	0
  7078  0002EC  22F4               	addwfc	prodh,f,c
  7079  0002EE  50F3               	movf	prodl,w,c
  7080  0002F0  0100               	movlb	0	; () banked
  7081  0002F2  0100               	movlb	0	; () banked
  7082  0002F4  25CD               	addwf	_ic_ptr& (0+255),w,b
  7083  0002F6  6ED9               	movwf	fsr2l,c
  7084  0002F8  50F4               	movf	prodh,w,c
  7085  0002FA  0100               	movlb	0	; () banked
  7086  0002FC  0100               	movlb	0	; () banked
  7087  0002FE  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7088  000300  6EDA               	movwf	fsr2h,c
  7089  000302  50DF               	movf	indf2,w,c
  7090  000304  6EC9               	movwf	4041,c	;volatile
  7091                           
  7092                           ; BSR set to: 0
  7093                           ;my_i2c.c: 183: ic_ptr->outbufind++;
  7094  000306  0100               	movlb	0	; () banked
  7095  000308  EE20 F01A          	lfsr	2,26
  7096  00030C  0100               	movlb	0	; () banked
  7097  00030E  51CD               	movf	_ic_ptr& (0+255),w,b
  7098  000310  26D9               	addwf	fsr2l,f,c
  7099  000312  0100               	movlb	0	; () banked
  7100  000314  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7101  000316  22DA               	addwfc	fsr2h,f,c
  7102  000318  2ADF               	incf	indf2,f,c
  7103                           
  7104                           ; BSR set to: 0
  7105                           ;my_i2c.c: 184: data_written = 1;
  7106  00031A  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7107  00031C  0E01               	movlw	1
  7108  00031E  0100               	movlb	0	; () banked
  7109  000320  0100               	movlb	0	; () banked
  7110  000322  6F90               	movwf	i2c_int_handler@data_written& (0+255),b
  7111  000324  D0B6               	goto	L7
  7112  000326                     L6:
  7113  000326  6EDF               	movwf	indf2,c
  7114  000328  D0D7               	goto	i2l114
  7115  00032A                     i2l134:
  7116                           
  7117                           ; BSR set to: 0
  7118                           ;my_i2c.c: 192: {
  7119                           ;my_i2c.c: 194: if (SSPSTATbits.P == 1) {
  7120  00032A  A8C7               	btfss	4039,4,c	;volatile
  7121  00032C  D05E               	goto	i2l3195
  7122                           
  7123                           ; BSR set to: 0
  7124                           ;my_i2c.c: 196: ic_ptr->event_count++;
  7125  00032E  0100               	movlb	0	; () banked
  7126  000330  EE20 F00B          	lfsr	2,11
  7127  000334  0100               	movlb	0	; () banked
  7128  000336  51CD               	movf	_ic_ptr& (0+255),w,b
  7129  000338  26D9               	addwf	fsr2l,f,c
  7130  00033A  0100               	movlb	0	; () banked
  7131  00033C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7132  00033E  22DA               	addwfc	fsr2h,f,c
  7133  000340  2ADF               	incf	indf2,f,c
  7134                           
  7135                           ; BSR set to: 0
  7136                           ;my_i2c.c: 197: if (data_read) {
  7137  000342  0100               	movlb	0	; () banked
  7138  000344  0100               	movlb	0	; () banked
  7139  000346  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  7140  000348  B4D8               	btfsc	status,2,c
  7141  00034A  D048               	goto	i2l3191
  7142                           
  7143                           ; BSR set to: 0
  7144                           ;my_i2c.c: 198: if (SSPSTATbits.D_A == 1) {
  7145  00034C  AAC7               	btfss	4039,5,c	;volatile
  7146  00034E  D025               	goto	i2l3189
  7147                           
  7148                           ; BSR set to: 0
  7149                           ;my_i2c.c: 199: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7150  000350  0100               	movlb	0	; () banked
  7151  000352  EE20 F00A          	lfsr	2,10
  7152  000356  0100               	movlb	0	; () banked
  7153  000358  51CD               	movf	_ic_ptr& (0+255),w,b
  7154  00035A  26D9               	addwf	fsr2l,f,c
  7155  00035C  0100               	movlb	0	; () banked
  7156  00035E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7157  000360  22DA               	addwfc	fsr2h,f,c
  7158  000362  50DF               	movf	indf2,w,c
  7159  000364  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7160  000366  5049               	movf	??_i2c_int_handler,w,c
  7161  000368  0D01               	mullw	1
  7162  00036A  50F3               	movf	prodl,w,c
  7163  00036C  0100               	movlb	0	; () banked
  7164  00036E  0100               	movlb	0	; () banked
  7165  000370  25CD               	addwf	_ic_ptr& (0+255),w,b
  7166  000372  6ED9               	movwf	fsr2l,c
  7167  000374  50F4               	movf	prodh,w,c
  7168  000376  0100               	movlb	0	; () banked
  7169  000378  0100               	movlb	0	; () banked
  7170  00037A  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7171  00037C  6EDA               	movwf	fsr2h,c
  7172  00037E  0100               	movlb	0	; () banked
  7173  000380  C092  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7174                           
  7175                           ; BSR set to: 0
  7176                           ;my_i2c.c: 200: ic_ptr->buflen++;
  7177  000384  0100               	movlb	0	; () banked
  7178  000386  EE20 F00A          	lfsr	2,10
  7179  00038A  0100               	movlb	0	; () banked
  7180  00038C  51CD               	movf	_ic_ptr& (0+255),w,b
  7181  00038E  26D9               	addwf	fsr2l,f,c
  7182  000390  0100               	movlb	0	; () banked
  7183  000392  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7184  000394  22DA               	addwfc	fsr2h,f,c
  7185  000396  2ADF               	incf	indf2,f,c
  7186  000398  D021               	goto	i2l3191
  7187  00039A                     i2l3189:
  7188                           
  7189                           ; BSR set to: 0
  7190                           ;my_i2c.c: 203: ic_ptr->error_count++;
  7191  00039A  0100               	movlb	0	; () banked
  7192  00039C  EE20 F00E          	lfsr	2,14
  7193  0003A0  0100               	movlb	0	; () banked
  7194  0003A2  51CD               	movf	_ic_ptr& (0+255),w,b
  7195  0003A4  26D9               	addwf	fsr2l,f,c
  7196  0003A6  0100               	movlb	0	; () banked
  7197  0003A8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7198  0003AA  22DA               	addwfc	fsr2h,f,c
  7199  0003AC  2ADF               	incf	indf2,f,c
  7200                           
  7201                           ;my_i2c.c: 204: ic_ptr->error_code = 0x6;
  7202  0003AE  0100               	movlb	0	; () banked
  7203  0003B0  EE20 F00D          	lfsr	2,13
  7204  0003B4  0100               	movlb	0	; () banked
  7205  0003B6  51CD               	movf	_ic_ptr& (0+255),w,b
  7206  0003B8  26D9               	addwf	fsr2l,f,c
  7207  0003BA  0100               	movlb	0	; () banked
  7208  0003BC  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7209  0003BE  22DA               	addwfc	fsr2h,f,c
  7210  0003C0  0E06               	movlw	6
  7211  0003C2  6EDF               	movwf	indf2,c
  7212                           
  7213                           ;my_i2c.c: 205: ic_ptr->status = 0x5;
  7214  0003C4  0100               	movlb	0	; () banked
  7215  0003C6  EE20 F00C          	lfsr	2,12
  7216  0003CA  0100               	movlb	0	; () banked
  7217  0003CC  51CD               	movf	_ic_ptr& (0+255),w,b
  7218  0003CE  26D9               	addwf	fsr2l,f,c
  7219  0003D0  0100               	movlb	0	; () banked
  7220  0003D2  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7221  0003D4  22DA               	addwfc	fsr2h,f,c
  7222  0003D6  0E05               	movlw	5
  7223  0003D8  6EDF               	movwf	indf2,c
  7224  0003DA  D05D               	goto	L9
  7225  0003DC                     i2l3191:
  7226                           
  7227                           ; BSR set to: 0
  7228                           ;my_i2c.c: 208: msg_ready = 1;
  7229  0003DC  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7230  0003DE  0E01               	movlw	1
  7231  0003E0  0100               	movlb	0	; () banked
  7232  0003E2  0100               	movlb	0	; () banked
  7233  0003E4  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7234  0003E6  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7235                           
  7236                           ; BSR set to: 0
  7237  0003E8  D056               	goto	L9
  7238  0003EA                     i2l3195:
  7239                           
  7240                           ; BSR set to: 0
  7241  0003EA  0100               	movlb	0	; () banked
  7242  0003EC  0100               	movlb	0	; () banked
  7243  0003EE  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  7244  0003F0  B4D8               	btfsc	status,2,c
  7245  0003F2  D072               	goto	i2l114
  7246                           
  7247                           ; BSR set to: 0
  7248                           ;my_i2c.c: 212: ic_ptr->event_count++;
  7249  0003F4  0100               	movlb	0	; () banked
  7250  0003F6  EE20 F00B          	lfsr	2,11
  7251  0003FA  0100               	movlb	0	; () banked
  7252  0003FC  51CD               	movf	_ic_ptr& (0+255),w,b
  7253  0003FE  26D9               	addwf	fsr2l,f,c
  7254  000400  0100               	movlb	0	; () banked
  7255  000402  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7256  000404  22DA               	addwfc	fsr2h,f,c
  7257  000406  2ADF               	incf	indf2,f,c
  7258                           
  7259                           ; BSR set to: 0
  7260                           ;my_i2c.c: 213: if (SSPSTATbits.D_A == 1) {
  7261  000408  AAC7               	btfss	4039,5,c	;volatile
  7262  00040A  D025               	goto	i2l142
  7263                           
  7264                           ; BSR set to: 0
  7265                           ;my_i2c.c: 214: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7266  00040C  0100               	movlb	0	; () banked
  7267  00040E  EE20 F00A          	lfsr	2,10
  7268  000412  0100               	movlb	0	; () banked
  7269  000414  51CD               	movf	_ic_ptr& (0+255),w,b
  7270  000416  26D9               	addwf	fsr2l,f,c
  7271  000418  0100               	movlb	0	; () banked
  7272  00041A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7273  00041C  22DA               	addwfc	fsr2h,f,c
  7274  00041E  50DF               	movf	indf2,w,c
  7275  000420  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7276  000422  5049               	movf	??_i2c_int_handler,w,c
  7277  000424  0D01               	mullw	1
  7278  000426  50F3               	movf	prodl,w,c
  7279  000428  0100               	movlb	0	; () banked
  7280  00042A  0100               	movlb	0	; () banked
  7281  00042C  25CD               	addwf	_ic_ptr& (0+255),w,b
  7282  00042E  6ED9               	movwf	fsr2l,c
  7283  000430  50F4               	movf	prodh,w,c
  7284  000432  0100               	movlb	0	; () banked
  7285  000434  0100               	movlb	0	; () banked
  7286  000436  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7287  000438  6EDA               	movwf	fsr2h,c
  7288  00043A  0100               	movlb	0	; () banked
  7289  00043C  C092  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7290                           
  7291                           ; BSR set to: 0
  7292                           ;my_i2c.c: 215: ic_ptr->buflen++;
  7293  000440  0100               	movlb	0	; () banked
  7294  000442  EE20 F00A          	lfsr	2,10
  7295  000446  0100               	movlb	0	; () banked
  7296  000448  51CD               	movf	_ic_ptr& (0+255),w,b
  7297  00044A  26D9               	addwf	fsr2l,f,c
  7298  00044C  0100               	movlb	0	; () banked
  7299  00044E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7300  000450  22DA               	addwfc	fsr2h,f,c
  7301  000452  2ADF               	incf	indf2,f,c
  7302                           
  7303                           ;my_i2c.c: 216: } else {
  7304  000454  D041               	goto	i2l114
  7305  000456                     i2l142:
  7306                           
  7307                           ; BSR set to: 0
  7308                           ;my_i2c.c: 217: if (SSPSTATbits.R_W == 1) {
  7309  000456  A4C7               	btfss	4039,2,c	;volatile
  7310  000458  D6C1               	goto	i2l3147
  7311                           
  7312                           ; BSR set to: 0
  7313                           ;my_i2c.c: 218: ic_ptr->status = 0x8;
  7314  00045A  0100               	movlb	0	; () banked
  7315  00045C  EE20 F00C          	lfsr	2,12
  7316  000460  0100               	movlb	0	; () banked
  7317  000462  51CD               	movf	_ic_ptr& (0+255),w,b
  7318  000464  26D9               	addwf	fsr2l,f,c
  7319  000466  0100               	movlb	0	; () banked
  7320  000468  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7321  00046A  22DA               	addwfc	fsr2h,f,c
  7322  00046C  0E08               	movlw	8
  7323  00046E  6EDF               	movwf	indf2,c
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;my_i2c.c: 219: msg_ready = 1;
  7327  000470  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7328  000472  0E01               	movlw	1
  7329  000474  0100               	movlb	0	; () banked
  7330  000476  0100               	movlb	0	; () banked
  7331  000478  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7332  00047A  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7333  00047C                     L10:
  7334                           
  7335                           ; BSR set to: 0
  7336                           ;my_i2c.c: 220: msg_to_send = 1;
  7337  00047C  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7338  00047E  0E01               	movlw	1
  7339  000480  0100               	movlb	0	; () banked
  7340  000482  0100               	movlb	0	; () banked
  7341  000484  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7342  000486  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7343                           
  7344                           ; BSR set to: 0
  7345                           ;my_i2c.c: 222: data_read = 0;
  7346  000488  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7347  00048A  0E00               	movlw	0
  7348  00048C  0100               	movlb	0	; () banked
  7349  00048E  0100               	movlb	0	; () banked
  7350  000490  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  7351  000492                     L7:
  7352  000492  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7353                           
  7354                           ;my_i2c.c: 223: } else {
  7355  000494  D021               	goto	i2l114
  7356  000496                     L9:
  7357                           
  7358                           ;my_i2c.c: 226: ic_ptr->status = 0x5;
  7359  000496  0100               	movlb	0	; () banked
  7360  000498  EE20 F00C          	lfsr	2,12
  7361  00049C  0100               	movlb	0	; () banked
  7362  00049E  51CD               	movf	_ic_ptr& (0+255),w,b
  7363  0004A0  26D9               	addwf	fsr2l,f,c
  7364  0004A2  0100               	movlb	0	; () banked
  7365  0004A4  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7366  0004A6  22DA               	addwfc	fsr2h,f,c
  7367  0004A8  0E05               	movlw	5
  7368  0004AA  D73D               	goto	L6
  7369  0004AC                     i2l3217:
  7370                           
  7371                           ; BSR set to: 0
  7372  0004AC  0100               	movlb	0	; () banked
  7373  0004AE  EE20 F00C          	lfsr	2,12
  7374  0004B2  0100               	movlb	0	; () banked
  7375  0004B4  51CD               	movf	_ic_ptr& (0+255),w,b
  7376  0004B6  26D9               	addwf	fsr2l,f,c
  7377  0004B8  0100               	movlb	0	; () banked
  7378  0004BA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7379  0004BC  22DA               	addwfc	fsr2h,f,c
  7380  0004BE  50DF               	movf	indf2,w,c
  7381                           
  7382                           ; Switch size 1, requested type "space"
  7383                           ; Number of cases is 4, Range of values is 5 to 8
  7384                           ; switch strategies available:
  7385                           ; Name         Instructions Cycles
  7386                           ; simple_byte           13     7 (average)
  7387                           ;	Chosen strategy is simple_byte
  7388  0004C0  0A05               	xorlw	5	; case 5
  7389  0004C2  B4D8               	btfsc	status,2,c
  7390  0004C4  D652               	goto	i2l116
  7391  0004C6  0A03               	xorlw	3	; case 6
  7392  0004C8  B4D8               	btfsc	status,2,c
  7393  0004CA  D66E               	goto	i2l120
  7394  0004CC  0A01               	xorlw	1	; case 7
  7395  0004CE  B4D8               	btfsc	status,2,c
  7396  0004D0  D72C               	goto	i2l134
  7397  0004D2  0A0F               	xorlw	15	; case 8
  7398  0004D4  B4D8               	btfsc	status,2,c
  7399  0004D6  D6E2               	goto	i2l3167
  7400  0004D8                     i2l114:
  7401                           
  7402                           ; BSR set to: 0
  7403                           ;my_i2c.c: 233: }
  7404                           ;my_i2c.c: 236: if (data_read || data_written) {
  7405  0004D8  0100               	movlb	0	; () banked
  7406  0004DA  0100               	movlb	0	; () banked
  7407  0004DC  6795               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7408  0004DE  D005               	goto	i2l148
  7409                           
  7410                           ; BSR set to: 0
  7411  0004E0  0100               	movlb	0	; () banked
  7412  0004E2  0100               	movlb	0	; () banked
  7413  0004E4  5190               	movf	i2c_int_handler@data_written& (0+255),w,b
  7414  0004E6  B4D8               	btfsc	status,2,c
  7415  0004E8  D002               	goto	i2l3223
  7416  0004EA                     i2l148:
  7417                           
  7418                           ; BSR set to: 0
  7419                           ;my_i2c.c: 238: if (SSPCON1bits.CKP == 0) {
  7420  0004EA  A8C6               	btfss	4038,4,c	;volatile
  7421                           
  7422                           ; BSR set to: 0
  7423                           ;my_i2c.c: 239: SSPCON1bits.CKP = 1;
  7424  0004EC  88C6               	bsf	4038,4,c	;volatile
  7425  0004EE                     i2l3223:
  7426                           
  7427                           ; BSR set to: 0
  7428                           ;my_i2c.c: 240: }
  7429                           ;my_i2c.c: 241: }
  7430                           ;my_i2c.c: 244: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7431  0004EE  0100               	movlb	0	; () banked
  7432  0004F0  EE20 F00A          	lfsr	2,10
  7433  0004F4  0100               	movlb	0	; () banked
  7434  0004F6  51CD               	movf	_ic_ptr& (0+255),w,b
  7435  0004F8  26D9               	addwf	fsr2l,f,c
  7436  0004FA  0100               	movlb	0	; () banked
  7437  0004FC  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7438  0004FE  22DA               	addwfc	fsr2h,f,c
  7439  000500  0E08               	movlw	8
  7440  000502  64DF               	cpfsgt	indf2,c
  7441  000504  D024               	goto	i2l3229
  7442                           
  7443                           ; BSR set to: 0
  7444  000506  0100               	movlb	0	; () banked
  7445  000508  0100               	movlb	0	; () banked
  7446  00050A  6794               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7447  00050C  D020               	goto	i2l3229
  7448                           
  7449                           ; BSR set to: 0
  7450                           ;my_i2c.c: 245: ic_ptr->status = 0x5;
  7451  00050E  0100               	movlb	0	; () banked
  7452  000510  EE20 F00C          	lfsr	2,12
  7453  000514  0100               	movlb	0	; () banked
  7454  000516  51CD               	movf	_ic_ptr& (0+255),w,b
  7455  000518  26D9               	addwf	fsr2l,f,c
  7456  00051A  0100               	movlb	0	; () banked
  7457  00051C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7458  00051E  22DA               	addwfc	fsr2h,f,c
  7459  000520  0E05               	movlw	5
  7460  000522  6EDF               	movwf	indf2,c
  7461                           
  7462                           ;my_i2c.c: 246: ic_ptr->error_count++;
  7463  000524  0100               	movlb	0	; () banked
  7464  000526  EE20 F00E          	lfsr	2,14
  7465  00052A  0100               	movlb	0	; () banked
  7466  00052C  51CD               	movf	_ic_ptr& (0+255),w,b
  7467  00052E  26D9               	addwf	fsr2l,f,c
  7468  000530  0100               	movlb	0	; () banked
  7469  000532  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7470  000534  22DA               	addwfc	fsr2h,f,c
  7471  000536  2ADF               	incf	indf2,f,c
  7472                           
  7473                           ;my_i2c.c: 247: ic_ptr->error_code = 0x7;
  7474  000538  0100               	movlb	0	; () banked
  7475  00053A  EE20 F00D          	lfsr	2,13
  7476  00053E  0100               	movlb	0	; () banked
  7477  000540  51CD               	movf	_ic_ptr& (0+255),w,b
  7478  000542  26D9               	addwf	fsr2l,f,c
  7479  000544  0100               	movlb	0	; () banked
  7480  000546  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7481  000548  22DA               	addwfc	fsr2h,f,c
  7482  00054A  0E07               	movlw	7
  7483  00054C  6EDF               	movwf	indf2,c
  7484  00054E                     i2l3229:
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;my_i2c.c: 248: }
  7488                           ;my_i2c.c: 250: if (msg_ready) {
  7489  00054E  0100               	movlb	0	; () banked
  7490  000550  0100               	movlb	0	; () banked
  7491  000552  5194               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7492  000554  B4D8               	btfsc	status,2,c
  7493  000556  D03E               	goto	i2l3237
  7494                           
  7495                           ; BSR set to: 0
  7496                           ;my_i2c.c: 251: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7497  000558  0100               	movlb	0	; () banked
  7498  00055A  EE20 F00B          	lfsr	2,11
  7499  00055E  0100               	movlb	0	; () banked
  7500  000560  51CD               	movf	_ic_ptr& (0+255),w,b
  7501  000562  26D9               	addwf	fsr2l,f,c
  7502  000564  0100               	movlb	0	; () banked
  7503  000566  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7504  000568  22DA               	addwfc	fsr2h,f,c
  7505  00056A  0100               	movlb	0	; () banked
  7506  00056C  EE10 F00A          	lfsr	1,10
  7507  000570  0100               	movlb	0	; () banked
  7508  000572  51CD               	movf	_ic_ptr& (0+255),w,b
  7509  000574  26E1               	addwf	fsr1l,f,c
  7510  000576  0100               	movlb	0	; () banked
  7511  000578  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7512  00057A  22E2               	addwfc	fsr1h,f,c
  7513  00057C  50E7               	movf	indf1,w,c
  7514  00057E  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7515  000580  5049               	movf	??_i2c_int_handler,w,c
  7516  000582  0D01               	mullw	1
  7517  000584  50F3               	movf	prodl,w,c
  7518  000586  0100               	movlb	0	; () banked
  7519  000588  0100               	movlb	0	; () banked
  7520  00058A  25CD               	addwf	_ic_ptr& (0+255),w,b
  7521  00058C  6EE1               	movwf	fsr1l,c
  7522  00058E  50F4               	movf	prodh,w,c
  7523  000590  0100               	movlb	0	; () banked
  7524  000592  0100               	movlb	0	; () banked
  7525  000594  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7526  000596  6EE2               	movwf	fsr1h,c
  7527  000598  CFDF FFE7          	movff	indf2,indf1
  7528                           
  7529                           ; BSR set to: 0
  7530                           ;my_i2c.c: 252: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7531  00059C  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7532  00059E  0E28               	movlw	40
  7533  0005A0  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7534  0005A2  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7535  0005A4  0100               	movlb	0	; () banked
  7536  0005A6  C0CE  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7537  0005AA  0100               	movlb	0	; () banked
  7538  0005AC  C0CD  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7539  0005B0  0100               	movlb	0	; () banked
  7540  0005B2  EE20 F00A          	lfsr	2,10
  7541  0005B6  0100               	movlb	0	; () banked
  7542  0005B8  51CD               	movf	_ic_ptr& (0+255),w,b
  7543  0005BA  26D9               	addwf	fsr2l,f,c
  7544  0005BC  0100               	movlb	0	; () banked
  7545  0005BE  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7546  0005C0  22DA               	addwfc	fsr2h,f,c
  7547  0005C2  50DF               	movf	indf2,w,c
  7548  0005C4  6E4A               	movwf	(??_i2c_int_handler+1)& (0+255),c
  7549  0005C6  284A               	incf	??_i2c_int_handler+1,w,c
  7550  0005C8  ECAF  F00D         	call	_ToMainHigh_sendmsg
  7551                           
  7552                           ;my_i2c.c: 253: ic_ptr->buflen = 0;
  7553  0005CC  0100               	movlb	0	; () banked
  7554  0005CE  EE20 F00A          	lfsr	2,10
  7555  0005D2  D043               	goto	L8
  7556  0005D4                     i2l3237:
  7557                           
  7558                           ; BSR set to: 0
  7559  0005D4  0100               	movlb	0	; () banked
  7560  0005D6  EE20 F00E          	lfsr	2,14
  7561  0005DA  0100               	movlb	0	; () banked
  7562  0005DC  51CD               	movf	_ic_ptr& (0+255),w,b
  7563  0005DE  26D9               	addwf	fsr2l,f,c
  7564  0005E0  0100               	movlb	0	; () banked
  7565  0005E2  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7566  0005E4  22DA               	addwfc	fsr2h,f,c
  7567  0005E6  50DF               	movf	indf2,w,c
  7568  0005E8  B4D8               	btfsc	status,2,c
  7569  0005EA  D03F               	goto	i2l3245
  7570                           
  7571                           ; BSR set to: 0
  7572                           ;my_i2c.c: 255: error_buf[0] = ic_ptr->error_count;
  7573  0005EC  0100               	movlb	0	; () banked
  7574  0005EE  EE20 F00E          	lfsr	2,14
  7575  0005F2  0100               	movlb	0	; () banked
  7576  0005F4  51CD               	movf	_ic_ptr& (0+255),w,b
  7577  0005F6  26D9               	addwf	fsr2l,f,c
  7578  0005F8  0100               	movlb	0	; () banked
  7579  0005FA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7580  0005FC  22DA               	addwfc	fsr2h,f,c
  7581  0005FE  50DF               	movf	indf2,w,c
  7582  000600  0100               	movlb	0	; () banked
  7583  000602  0100               	movlb	0	; () banked
  7584  000604  6F8D               	movwf	i2c_int_handler@error_buf& (0+255),b
  7585                           
  7586                           ;my_i2c.c: 256: error_buf[1] = ic_ptr->error_code;
  7587  000606  0100               	movlb	0	; () banked
  7588  000608  EE20 F00D          	lfsr	2,13
  7589  00060C  0100               	movlb	0	; () banked
  7590  00060E  51CD               	movf	_ic_ptr& (0+255),w,b
  7591  000610  26D9               	addwf	fsr2l,f,c
  7592  000612  0100               	movlb	0	; () banked
  7593  000614  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7594  000616  22DA               	addwfc	fsr2h,f,c
  7595  000618  50DF               	movf	indf2,w,c
  7596  00061A  0100               	movlb	0	; () banked
  7597  00061C  0100               	movlb	0	; () banked
  7598  00061E  6F8E               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7599                           
  7600                           ;my_i2c.c: 257: error_buf[2] = ic_ptr->event_count;
  7601  000620  0100               	movlb	0	; () banked
  7602  000622  EE20 F00B          	lfsr	2,11
  7603  000626  0100               	movlb	0	; () banked
  7604  000628  51CD               	movf	_ic_ptr& (0+255),w,b
  7605  00062A  26D9               	addwf	fsr2l,f,c
  7606  00062C  0100               	movlb	0	; () banked
  7607  00062E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7608  000630  22DA               	addwfc	fsr2h,f,c
  7609  000632  50DF               	movf	indf2,w,c
  7610  000634  0100               	movlb	0	; () banked
  7611  000636  0100               	movlb	0	; () banked
  7612  000638  6F8F               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7613                           
  7614                           ; BSR set to: 0
  7615                           ;my_i2c.c: 258: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7616  00063A  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7617  00063C  0E29               	movlw	41
  7618  00063E  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7619  000640  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7620  000642  0100               	movlb	0	; () banked
  7621  000644  0E00               	movlw	high i2c_int_handler@error_buf
  7622  000646  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  7623  000648  0100               	movlb	0	; () banked
  7624  00064A  0E8D               	movlw	low i2c_int_handler@error_buf
  7625  00064C  6E46               	movwf	ToMainHigh_sendmsg@data,c
  7626  00064E  0E03               	movlw	3
  7627  000650  ECAF  F00D         	call	_ToMainHigh_sendmsg
  7628                           
  7629                           ;my_i2c.c: 259: ic_ptr->error_count = 0;
  7630  000654  0100               	movlb	0	; () banked
  7631  000656  EE20 F00E          	lfsr	2,14
  7632  00065A                     L8:
  7633  00065A  0100               	movlb	0	; () banked
  7634  00065C  51CD               	movf	_ic_ptr& (0+255),w,b
  7635  00065E  26D9               	addwf	fsr2l,f,c
  7636  000660  0100               	movlb	0	; () banked
  7637  000662  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7638  000664  22DA               	addwfc	fsr2h,f,c
  7639  000666  0E00               	movlw	0
  7640  000668  6EDF               	movwf	indf2,c
  7641  00066A                     i2l3245:
  7642                           
  7643                           ; BSR set to: 0
  7644                           ;my_i2c.c: 260: }
  7645                           ;my_i2c.c: 261: if (msg_to_send) {
  7646  00066A  0100               	movlb	0	; () banked
  7647  00066C  0100               	movlb	0	; () banked
  7648  00066E  5193               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7649  000670  B4D8               	btfsc	status,2,c
  7650  000672  0012               	return	
  7651                           
  7652                           ; BSR set to: 0
  7653                           ;my_i2c.c: 262: int length;
  7654                           ;my_i2c.c: 263: unsigned char msgbuffer[10 + 1];
  7655                           ;my_i2c.c: 264: length = 2;
  7656  000674  0E00               	movlw	0
  7657  000676  0100               	movlb	0	; () banked
  7658  000678  0100               	movlb	0	; () banked
  7659  00067A  6F8C               	movwf	(i2c_int_handler@length+1)& (0+255),b
  7660  00067C  0E02               	movlw	2
  7661  00067E  0100               	movlb	0	; () banked
  7662  000680  6F8B               	movwf	i2c_int_handler@length& (0+255),b
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;my_i2c.c: 265: msgbuffer[0] = returnADCValue();
  7666  000682  ECF2  F00D         	call	i2_returnADCValue	;wreg free
  7667  000686  502F               	movf	?i2_returnADCValue,w,c
  7668  000688  0100               	movlb	0	; () banked
  7669  00068A  0100               	movlb	0	; () banked
  7670  00068C  6F80               	movwf	i2c_int_handler@msgbuffer& (0+255),b
  7671                           
  7672                           ; BSR set to: 0
  7673                           ;my_i2c.c: 266: msgbuffer[1] = 0xAA;
  7674  00068E  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7675  000690  0EAA               	movlw	170
  7676  000692  0100               	movlb	0	; () banked
  7677  000694  0100               	movlb	0	; () banked
  7678  000696  6F81               	movwf	(i2c_int_handler@msgbuffer+1)& (0+255),b
  7679  000698  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7680                           
  7681                           ; BSR set to: 0
  7682                           ;my_i2c.c: 292: start_i2c_slave_reply(length, msgbuffer);
  7683  00069A  0100               	movlb	0	; () banked
  7684  00069C  0E00               	movlw	high i2c_int_handler@msgbuffer
  7685  00069E  6E30               	movwf	i2start_i2c_slave_reply@msg+1,c
  7686  0006A0  0100               	movlb	0	; () banked
  7687  0006A2  0E80               	movlw	low i2c_int_handler@msgbuffer
  7688  0006A4  6E2F               	movwf	i2start_i2c_slave_reply@msg,c
  7689  0006A6  0100               	movlb	0	; () banked
  7690  0006A8  0100               	movlb	0	; () banked
  7691  0006AA  518B               	movf	i2c_int_handler@length& (0+255),w,b
  7692  0006AC  EC74  F006         	call	i2_start_i2c_slave_reply
  7693                           
  7694                           ;my_i2c.c: 293: msg_to_send = 0;
  7695  0006B0  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7696  0006B2  0E00               	movlw	0
  7697  0006B4  0100               	movlb	0	; () banked
  7698  0006B6  0100               	movlb	0	; () banked
  7699  0006B8  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7700  0006BA  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7701  0006BC  0012               	return	
  7702  0006BE                     __end_of_i2c_int_handler:
  7703                           	opt stack 0
  7704                           pclatu	equ	0xFFB
  7705                           pclath	equ	0xFFA
  7706                           tblptru	equ	0xFF8
  7707                           tblptrh	equ	0xFF7
  7708                           tblptrl	equ	0xFF6
  7709                           tablat	equ	0xFF5
  7710                           prodh	equ	0xFF4
  7711                           prodl	equ	0xFF3
  7712                           intcon	equ	0xFF2
  7713                           postinc0	equ	0xFEE
  7714                           fsr0h	equ	0xFEA
  7715                           fsr0l	equ	0xFE9
  7716                           wreg	equ	0xFE8
  7717                           indf1	equ	0xFE7
  7718                           fsr1h	equ	0xFE2
  7719                           fsr1l	equ	0xFE1
  7720                           bsr	equ	0xFE0
  7721                           indf2	equ	0xFDF
  7722                           postinc2	equ	0xFDE
  7723                           postdec2	equ	0xFDD
  7724                           fsr2h	equ	0xFDA
  7725                           fsr2l	equ	0xFD9
  7726                           status	equ	0xFD8
  7727                           
  7728 ;; *************** function i2_start_i2c_slave_reply *****************
  7729 ;; Defined at:
  7730 ;;		line 53 in file "../src/my_i2c.c"
  7731 ;; Parameters:    Size  Location     Type
  7732 ;;  length          1    wreg     unsigned char 
  7733 ;;  msg             2   46[COMRAM] PTR unsigned char 
  7734 ;;		 -> main@msgbuffer(11), i2c_int_handler@msgbuffer(11), 
  7735 ;; Auto vars:     Size  Location     Type
  7736 ;;  length          1   50[COMRAM] unsigned char 
  7737 ;; Return value:  Size  Location     Type
  7738 ;;		None               void
  7739 ;; Registers used:
  7740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7741 ;; Tracked objects:
  7742 ;;		On entry : 0/0
  7743 ;;		On exit  : 0/0
  7744 ;;		Unchanged: 0/0
  7745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7746 ;;      Params:         2       0       0       0       0
  7747 ;;      Locals:         1       0       0       0       0
  7748 ;;      Temps:          2       0       0       0       0
  7749 ;;      Totals:         5       0       0       0       0
  7750 ;;Total ram usage:        5 bytes
  7751 ;; Hardware stack levels used:    1
  7752 ;; This function calls:
  7753 ;;		Nothing
  7754 ;; This function is called by:
  7755 ;;		_i2c_int_handler
  7756 ;; This function uses a non-reentrant model
  7757 ;;
  7758                           
  7759                           	psect	text47
  7760  000CE8                     __ptext47:
  7761                           	opt stack 0
  7762  000CE8                     i2_start_i2c_slave_reply:
  7763                           	opt stack 18
  7764                           
  7765                           ; BSR set to: 0
  7766                           ;incstack = 0
  7767                           ;i2start_i2c_slave_reply@length stored from wreg
  7768  000CE8  CFE8 F033          	movff	wreg,i2start_i2c_slave_reply@length
  7769                           
  7770                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  7771  000CEC  0100               	movlb	0	; () banked
  7772  000CEE  EE20 F019          	lfsr	2,25
  7773  000CF2  0100               	movlb	0	; () banked
  7774  000CF4  51CD               	movf	_ic_ptr& (0+255),w,b
  7775  000CF6  26D9               	addwf	fsr2l,f,c
  7776  000CF8  0100               	movlb	0	; () banked
  7777  000CFA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7778  000CFC  22DA               	addwfc	fsr2h,f,c
  7779  000CFE  0E00               	movlw	0
  7780  000D00  6EDF               	movwf	indf2,c
  7781  000D02  D03A               	goto	i2l3313
  7782  000D04                     i2l3309:
  7783                           
  7784                           ; BSR set to: 0
  7785                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  7786  000D04  0100               	movlb	0	; () banked
  7787  000D06  EE20 F019          	lfsr	2,25
  7788  000D0A  0100               	movlb	0	; () banked
  7789  000D0C  51CD               	movf	_ic_ptr& (0+255),w,b
  7790  000D0E  26D9               	addwf	fsr2l,f,c
  7791  000D10  0100               	movlb	0	; () banked
  7792  000D12  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7793  000D14  22DA               	addwfc	fsr2h,f,c
  7794  000D16  50DF               	movf	indf2,w,c
  7795  000D18  6E31               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  7796  000D1A  5031               	movf	??i2_start_i2c_slave_reply,w,c
  7797  000D1C  0D01               	mullw	1
  7798  000D1E  50F3               	movf	prodl,w,c
  7799  000D20  242F               	addwf	i2start_i2c_slave_reply@msg,w,c
  7800  000D22  6ED9               	movwf	fsr2l,c
  7801  000D24  50F4               	movf	prodh,w,c
  7802  000D26  2030               	addwfc	i2start_i2c_slave_reply@msg+1,w,c
  7803  000D28  6EDA               	movwf	fsr2h,c
  7804  000D2A  0100               	movlb	0	; () banked
  7805  000D2C  EE10 F019          	lfsr	1,25
  7806  000D30  0100               	movlb	0	; () banked
  7807  000D32  51CD               	movf	_ic_ptr& (0+255),w,b
  7808  000D34  26E1               	addwf	fsr1l,f,c
  7809  000D36  0100               	movlb	0	; () banked
  7810  000D38  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7811  000D3A  22E2               	addwfc	fsr1h,f,c
  7812  000D3C  50E7               	movf	indf1,w,c
  7813  000D3E  6E32               	movwf	(??i2_start_i2c_slave_reply+1)& (0+255),c
  7814  000D40  5032               	movf	??i2_start_i2c_slave_reply+1,w,c
  7815  000D42  0D01               	mullw	1
  7816  000D44  0E0F               	movlw	15
  7817  000D46  26F3               	addwf	prodl,f,c
  7818  000D48  0E00               	movlw	0
  7819  000D4A  22F4               	addwfc	prodh,f,c
  7820  000D4C  50F3               	movf	prodl,w,c
  7821  000D4E  0100               	movlb	0	; () banked
  7822  000D50  0100               	movlb	0	; () banked
  7823  000D52  25CD               	addwf	_ic_ptr& (0+255),w,b
  7824  000D54  6EE1               	movwf	fsr1l,c
  7825  000D56  50F4               	movf	prodh,w,c
  7826  000D58  0100               	movlb	0	; () banked
  7827  000D5A  0100               	movlb	0	; () banked
  7828  000D5C  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7829  000D5E  6EE2               	movwf	fsr1h,c
  7830  000D60  CFDF FFE7          	movff	indf2,indf1
  7831                           
  7832                           ; BSR set to: 0
  7833  000D64  0100               	movlb	0	; () banked
  7834  000D66  EE20 F019          	lfsr	2,25
  7835  000D6A  0100               	movlb	0	; () banked
  7836  000D6C  51CD               	movf	_ic_ptr& (0+255),w,b
  7837  000D6E  26D9               	addwf	fsr2l,f,c
  7838  000D70  0100               	movlb	0	; () banked
  7839  000D72  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7840  000D74  22DA               	addwfc	fsr2h,f,c
  7841  000D76  2ADF               	incf	indf2,f,c
  7842  000D78                     i2l3313:
  7843                           
  7844                           ; BSR set to: 0
  7845  000D78  0100               	movlb	0	; () banked
  7846  000D7A  EE20 F019          	lfsr	2,25
  7847  000D7E  0100               	movlb	0	; () banked
  7848  000D80  51CD               	movf	_ic_ptr& (0+255),w,b
  7849  000D82  26D9               	addwf	fsr2l,f,c
  7850  000D84  0100               	movlb	0	; () banked
  7851  000D86  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7852  000D88  22DA               	addwfc	fsr2h,f,c
  7853  000D8A  50DF               	movf	indf2,w,c
  7854  000D8C  6E31               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  7855  000D8E  5033               	movf	i2start_i2c_slave_reply@length,w,c
  7856  000D90  5C31               	subwf	??i2_start_i2c_slave_reply,w,c
  7857  000D92  A0D8               	btfss	status,0,c
  7858  000D94  D7B7               	goto	i2l3309
  7859                           
  7860                           ; BSR set to: 0
  7861                           ;my_i2c.c: 57: }
  7862                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  7863                           
  7864                           ; BSR set to: 0
  7865  000D96  0100               	movlb	0	; () banked
  7866  000D98  EE20 F019          	lfsr	2,25
  7867  000D9C  0100               	movlb	0	; () banked
  7868  000D9E  51CD               	movf	_ic_ptr& (0+255),w,b
  7869  000DA0  26D9               	addwf	fsr2l,f,c
  7870  000DA2  0100               	movlb	0	; () banked
  7871  000DA4  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7872  000DA6  22DA               	addwfc	fsr2h,f,c
  7873  000DA8  C033  FFDF         	movff	i2start_i2c_slave_reply@length,indf2
  7874                           
  7875                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  7876  000DAC  0100               	movlb	0	; () banked
  7877  000DAE  EE20 F01A          	lfsr	2,26
  7878  000DB2  0100               	movlb	0	; () banked
  7879  000DB4  51CD               	movf	_ic_ptr& (0+255),w,b
  7880  000DB6  26D9               	addwf	fsr2l,f,c
  7881  000DB8  0100               	movlb	0	; () banked
  7882  000DBA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7883  000DBC  22DA               	addwfc	fsr2h,f,c
  7884  000DBE  0E01               	movlw	1
  7885  000DC0  6EDF               	movwf	indf2,c
  7886                           
  7887                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  7888  000DC2  0100               	movlb	0	; () banked
  7889  000DC4  EE20 F00F          	lfsr	2,15
  7890  000DC8  0100               	movlb	0	; () banked
  7891  000DCA  51CD               	movf	_ic_ptr& (0+255),w,b
  7892  000DCC  26D9               	addwf	fsr2l,f,c
  7893  000DCE  0100               	movlb	0	; () banked
  7894  000DD0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7895  000DD2  22DA               	addwfc	fsr2h,f,c
  7896  000DD4  50DF               	movf	indf2,w,c
  7897  000DD6  6EC9               	movwf	4041,c	;volatile
  7898                           
  7899                           ; BSR set to: 0
  7900                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  7901  000DD8  88C6               	bsf	4038,4,c	;volatile
  7902                           
  7903                           ; BSR set to: 0
  7904  000DDA  0012               	return	
  7905  000DDC                     __end_ofi2_start_i2c_slave_reply:
  7906                           	opt stack 0
  7907                           pclatu	equ	0xFFB
  7908                           pclath	equ	0xFFA
  7909                           tblptru	equ	0xFF8
  7910                           tblptrh	equ	0xFF7
  7911                           tblptrl	equ	0xFF6
  7912                           tablat	equ	0xFF5
  7913                           prodh	equ	0xFF4
  7914                           prodl	equ	0xFF3
  7915                           intcon	equ	0xFF2
  7916                           postinc0	equ	0xFEE
  7917                           fsr0h	equ	0xFEA
  7918                           fsr0l	equ	0xFE9
  7919                           wreg	equ	0xFE8
  7920                           indf1	equ	0xFE7
  7921                           fsr1h	equ	0xFE2
  7922                           fsr1l	equ	0xFE1
  7923                           bsr	equ	0xFE0
  7924                           indf2	equ	0xFDF
  7925                           postinc2	equ	0xFDE
  7926                           postdec2	equ	0xFDD
  7927                           fsr2h	equ	0xFDA
  7928                           fsr2l	equ	0xFD9
  7929                           status	equ	0xFD8
  7930                           
  7931 ;; *************** function i2_returnADCValue *****************
  7932 ;; Defined at:
  7933 ;;		line 16 in file "../src/interrupts.c"
  7934 ;; Parameters:    Size  Location     Type
  7935 ;;		None
  7936 ;; Auto vars:     Size  Location     Type
  7937 ;;  returnADCVal    2   48[COMRAM] int 
  7938 ;; Return value:  Size  Location     Type
  7939 ;;                  2   46[COMRAM] int 
  7940 ;; Registers used:
  7941 ;;		wreg, status,2, status,0
  7942 ;; Tracked objects:
  7943 ;;		On entry : 0/0
  7944 ;;		On exit  : 0/0
  7945 ;;		Unchanged: 0/0
  7946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7947 ;;      Params:         2       0       0       0       0
  7948 ;;      Locals:         2       0       0       0       0
  7949 ;;      Temps:          0       0       0       0       0
  7950 ;;      Totals:         4       0       0       0       0
  7951 ;;Total ram usage:        4 bytes
  7952 ;; Hardware stack levels used:    1
  7953 ;; This function calls:
  7954 ;;		Nothing
  7955 ;; This function is called by:
  7956 ;;		_i2c_int_handler
  7957 ;; This function uses a non-reentrant model
  7958 ;;
  7959                           
  7960                           	psect	text48
  7961  001BE4                     __ptext48:
  7962                           	opt stack 0
  7963  001BE4                     i2_returnADCValue:
  7964                           	opt stack 18
  7965                           
  7966                           ;interrupts.c: 18: int temp = 0;
  7967                           
  7968                           ; BSR set to: 0
  7969                           ;incstack = 0
  7970  001BE4  0E00               	movlw	0
  7971  001BE6  6E32               	movwf	i2returnADCValue@temp+1,c
  7972  001BE8  0E00               	movlw	0
  7973  001BEA  6E31               	movwf	i2returnADCValue@temp,c
  7974                           
  7975                           ;interrupts.c: 19: temp = temp + 1;
  7976  001BEC  0E01               	movlw	1
  7977  001BEE  2431               	addwf	i2returnADCValue@temp,w,c
  7978  001BF0  6E31               	movwf	i2returnADCValue@temp,c
  7979  001BF2  0E00               	movlw	0
  7980  001BF4  2032               	addwfc	i2returnADCValue@temp+1,w,c
  7981  001BF6  6E32               	movwf	i2returnADCValue@temp+1,c
  7982                           
  7983                           ;interrupts.c: 20: return ADCValue;
  7984  001BF8  C0CF  F02F         	movff	_ADCValue,?i2_returnADCValue
  7985  001BFC  C0D0  F030         	movff	_ADCValue+1,?i2_returnADCValue+1
  7986  001C00  0012               	return	
  7987  001C02                     __end_ofi2_returnADCValue:
  7988                           	opt stack 0
  7989                           pclatu	equ	0xFFB
  7990                           pclath	equ	0xFFA
  7991                           tblptru	equ	0xFF8
  7992                           tblptrh	equ	0xFF7
  7993                           tblptrl	equ	0xFF6
  7994                           tablat	equ	0xFF5
  7995                           prodh	equ	0xFF4
  7996                           prodl	equ	0xFF3
  7997                           intcon	equ	0xFF2
  7998                           postinc0	equ	0xFEE
  7999                           fsr0h	equ	0xFEA
  8000                           fsr0l	equ	0xFE9
  8001                           wreg	equ	0xFE8
  8002                           indf1	equ	0xFE7
  8003                           fsr1h	equ	0xFE2
  8004                           fsr1l	equ	0xFE1
  8005                           bsr	equ	0xFE0
  8006                           indf2	equ	0xFDF
  8007                           postinc2	equ	0xFDE
  8008                           postdec2	equ	0xFDD
  8009                           fsr2h	equ	0xFDA
  8010                           fsr2l	equ	0xFD9
  8011                           status	equ	0xFD8
  8012                           
  8013 ;; *************** function _handle_start *****************
  8014 ;; Defined at:
  8015 ;;		line 71 in file "../src/my_i2c.c"
  8016 ;; Parameters:    Size  Location     Type
  8017 ;;  data_read       1    wreg     unsigned char 
  8018 ;; Auto vars:     Size  Location     Type
  8019 ;;  data_read       1   46[COMRAM] unsigned char 
  8020 ;; Return value:  Size  Location     Type
  8021 ;;		None               void
  8022 ;; Registers used:
  8023 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8024 ;; Tracked objects:
  8025 ;;		On entry : 0/0
  8026 ;;		On exit  : 0/0
  8027 ;;		Unchanged: 0/0
  8028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8029 ;;      Params:         0       0       0       0       0
  8030 ;;      Locals:         1       0       0       0       0
  8031 ;;      Temps:          0       0       0       0       0
  8032 ;;      Totals:         1       0       0       0       0
  8033 ;;Total ram usage:        1 bytes
  8034 ;; Hardware stack levels used:    1
  8035 ;; This function calls:
  8036 ;;		Nothing
  8037 ;; This function is called by:
  8038 ;;		_i2c_int_handler
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042                           	psect	text49
  8043  000EAE                     __ptext49:
  8044                           	opt stack 0
  8045  000EAE                     _handle_start:
  8046                           	opt stack 18
  8047                           
  8048                           ;incstack = 0
  8049                           ;handle_start@data_read stored from wreg
  8050  000EAE  CFE8 F02F          	movff	wreg,handle_start@data_read
  8051                           
  8052                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  8053  000EB2  0100               	movlb	0	; () banked
  8054  000EB4  EE20 F00B          	lfsr	2,11
  8055  000EB8  0100               	movlb	0	; () banked
  8056  000EBA  51CD               	movf	_ic_ptr& (0+255),w,b
  8057  000EBC  26D9               	addwf	fsr2l,f,c
  8058  000EBE  0100               	movlb	0	; () banked
  8059  000EC0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8060  000EC2  22DA               	addwfc	fsr2h,f,c
  8061  000EC4  0E01               	movlw	1
  8062  000EC6  6EDF               	movwf	indf2,c
  8063                           
  8064                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  8065  000EC8  0100               	movlb	0	; () banked
  8066  000ECA  EE20 F00A          	lfsr	2,10
  8067  000ECE  0100               	movlb	0	; () banked
  8068  000ED0  51CD               	movf	_ic_ptr& (0+255),w,b
  8069  000ED2  26D9               	addwf	fsr2l,f,c
  8070  000ED4  0100               	movlb	0	; () banked
  8071  000ED6  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8072  000ED8  22DA               	addwfc	fsr2h,f,c
  8073  000EDA  0E00               	movlw	0
  8074  000EDC  6EDF               	movwf	indf2,c
  8075                           
  8076                           ; BSR set to: 0
  8077                           ;my_i2c.c: 75: if (data_read) {
  8078  000EDE  502F               	movf	handle_start@data_read,w,c
  8079  000EE0  B4D8               	btfsc	status,2,c
  8080  000EE2  D03D               	goto	i2l3107
  8081                           
  8082                           ; BSR set to: 0
  8083                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  8084  000EE4  AAC7               	btfss	4039,5,c	;volatile
  8085  000EE6  D021               	goto	i2l104
  8086                           
  8087                           ; BSR set to: 0
  8088                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  8089  000EE8  0100               	movlb	0	; () banked
  8090  000EEA  EE20 F00C          	lfsr	2,12
  8091  000EEE  0100               	movlb	0	; () banked
  8092  000EF0  51CD               	movf	_ic_ptr& (0+255),w,b
  8093  000EF2  26D9               	addwf	fsr2l,f,c
  8094  000EF4  0100               	movlb	0	; () banked
  8095  000EF6  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8096  000EF8  22DA               	addwfc	fsr2h,f,c
  8097  000EFA  0E05               	movlw	5
  8098  000EFC  6EDF               	movwf	indf2,c
  8099                           
  8100                           ;my_i2c.c: 80: ic_ptr->error_count++;
  8101  000EFE  0100               	movlb	0	; () banked
  8102  000F00  EE20 F00E          	lfsr	2,14
  8103  000F04  0100               	movlb	0	; () banked
  8104  000F06  51CD               	movf	_ic_ptr& (0+255),w,b
  8105  000F08  26D9               	addwf	fsr2l,f,c
  8106  000F0A  0100               	movlb	0	; () banked
  8107  000F0C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8108  000F0E  22DA               	addwfc	fsr2h,f,c
  8109  000F10  2ADF               	incf	indf2,f,c
  8110                           
  8111                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  8112  000F12  0100               	movlb	0	; () banked
  8113  000F14  EE20 F00D          	lfsr	2,13
  8114  000F18  0100               	movlb	0	; () banked
  8115  000F1A  51CD               	movf	_ic_ptr& (0+255),w,b
  8116  000F1C  26D9               	addwf	fsr2l,f,c
  8117  000F1E  0100               	movlb	0	; () banked
  8118  000F20  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8119  000F22  22DA               	addwfc	fsr2h,f,c
  8120  000F24  0E05               	movlw	5
  8121  000F26  6EDF               	movwf	indf2,c
  8122                           
  8123                           ;my_i2c.c: 82: } else {
  8124  000F28  0012               	return	
  8125  000F2A                     i2l104:
  8126                           
  8127                           ; BSR set to: 0
  8128                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  8129  000F2A  A4C7               	btfss	4039,2,c	;volatile
  8130  000F2C  D00C               	goto	i2l3105
  8131                           
  8132                           ; BSR set to: 0
  8133                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  8134  000F2E  0100               	movlb	0	; () banked
  8135  000F30  EE20 F00C          	lfsr	2,12
  8136  000F34  0100               	movlb	0	; () banked
  8137  000F36  51CD               	movf	_ic_ptr& (0+255),w,b
  8138  000F38  26D9               	addwf	fsr2l,f,c
  8139  000F3A  0100               	movlb	0	; () banked
  8140  000F3C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8141  000F3E  22DA               	addwfc	fsr2h,f,c
  8142  000F40  0E08               	movlw	8
  8143  000F42  6EDF               	movwf	indf2,c
  8144                           
  8145                           ;my_i2c.c: 85: } else {
  8146  000F44  0012               	return	
  8147  000F46                     i2l3105:
  8148                           
  8149                           ; BSR set to: 0
  8150                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  8151  000F46  0100               	movlb	0	; () banked
  8152  000F48  EE20 F00C          	lfsr	2,12
  8153  000F4C  0100               	movlb	0	; () banked
  8154  000F4E  51CD               	movf	_ic_ptr& (0+255),w,b
  8155  000F50  26D9               	addwf	fsr2l,f,c
  8156  000F52  0100               	movlb	0	; () banked
  8157  000F54  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8158  000F56  22DA               	addwfc	fsr2h,f,c
  8159  000F58  0E07               	movlw	7
  8160  000F5A  6EDF               	movwf	indf2,c
  8161  000F5C  0012               	return	
  8162  000F5E                     i2l3107:
  8163                           
  8164                           ; BSR set to: 0
  8165                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  8166  000F5E  0100               	movlb	0	; () banked
  8167  000F60  EE20 F00C          	lfsr	2,12
  8168  000F64  0100               	movlb	0	; () banked
  8169  000F66  51CD               	movf	_ic_ptr& (0+255),w,b
  8170  000F68  26D9               	addwf	fsr2l,f,c
  8171  000F6A  0100               	movlb	0	; () banked
  8172  000F6C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8173  000F6E  22DA               	addwfc	fsr2h,f,c
  8174  000F70  0E06               	movlw	6
  8175  000F72  6EDF               	movwf	indf2,c
  8176  000F74  0012               	return	
  8177  000F76                     __end_of_handle_start:
  8178                           	opt stack 0
  8179                           pclatu	equ	0xFFB
  8180                           pclath	equ	0xFFA
  8181                           tblptru	equ	0xFF8
  8182                           tblptrh	equ	0xFF7
  8183                           tblptrl	equ	0xFF6
  8184                           tablat	equ	0xFF5
  8185                           prodh	equ	0xFF4
  8186                           prodl	equ	0xFF3
  8187                           intcon	equ	0xFF2
  8188                           postinc0	equ	0xFEE
  8189                           fsr0h	equ	0xFEA
  8190                           fsr0l	equ	0xFE9
  8191                           wreg	equ	0xFE8
  8192                           indf1	equ	0xFE7
  8193                           fsr1h	equ	0xFE2
  8194                           fsr1l	equ	0xFE1
  8195                           bsr	equ	0xFE0
  8196                           indf2	equ	0xFDF
  8197                           postinc2	equ	0xFDE
  8198                           postdec2	equ	0xFDD
  8199                           fsr2h	equ	0xFDA
  8200                           fsr2l	equ	0xFD9
  8201                           status	equ	0xFD8
  8202                           
  8203 ;; *************** function _ToMainHigh_sendmsg *****************
  8204 ;; Defined at:
  8205 ;;		line 126 in file "../src/messages.c"
  8206 ;; Parameters:    Size  Location     Type
  8207 ;;  length          1    wreg     unsigned char 
  8208 ;;  msgtype         1   68[COMRAM] unsigned char 
  8209 ;;  data            2   69[COMRAM] PTR void 
  8210 ;;		 -> main@ic(28), i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  8211 ;; Auto vars:     Size  Location     Type
  8212 ;;  length          1   71[COMRAM] unsigned char 
  8213 ;; Return value:  Size  Location     Type
  8214 ;;                  1    wreg      char 
  8215 ;; Registers used:
  8216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8217 ;; Tracked objects:
  8218 ;;		On entry : 0/0
  8219 ;;		On exit  : 0/0
  8220 ;;		Unchanged: 0/0
  8221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8222 ;;      Params:         3       0       0       0       0
  8223 ;;      Locals:         1       0       0       0       0
  8224 ;;      Temps:          0       0       0       0       0
  8225 ;;      Totals:         4       0       0       0       0
  8226 ;;Total ram usage:        4 bytes
  8227 ;; Hardware stack levels used:    1
  8228 ;; Hardware stack levels required when called:    2
  8229 ;; This function calls:
  8230 ;;		i2_send_msg
  8231 ;; This function is called by:
  8232 ;;		_timer0_int_handler
  8233 ;;		_i2c_int_handler
  8234 ;; This function uses a non-reentrant model
  8235 ;;
  8236                           
  8237                           	psect	text50
  8238  001B5E                     __ptext50:
  8239                           	opt stack 0
  8240  001B5E                     _ToMainHigh_sendmsg:
  8241                           	opt stack 16
  8242                           
  8243                           ; BSR set to: 0
  8244                           ;incstack = 0
  8245                           ;ToMainHigh_sendmsg@length stored from wreg
  8246  001B5E  CFE8 F048          	movff	wreg,ToMainHigh_sendmsg@length
  8247                           
  8248                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8249                           ;	Return value of _ToMainHigh_sendmsg is never used
  8250  001B62  0101               	movlb	1	; () banked
  8251  001B64  0E01               	movlw	high _ToMainHigh_MQ
  8252  001B66  6E3A               	movwf	i2send_msg@qptr+1,c
  8253  001B68  0101               	movlb	1	; () banked
  8254  001B6A  0E36               	movlw	low _ToMainHigh_MQ
  8255  001B6C  6E39               	movwf	i2send_msg@qptr,c
  8256  001B6E  C048  F03B         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8257  001B72  C045  F03C         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8258  001B76  C047  F03E         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8259  001B7A  C046  F03D         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8260  001B7E  EC6C  F008         	call	i2_send_msg	;wreg free
  8261  001B82  0012               	return	
  8262  001B84                     __end_of_ToMainHigh_sendmsg:
  8263                           	opt stack 0
  8264                           pclatu	equ	0xFFB
  8265                           pclath	equ	0xFFA
  8266                           tblptru	equ	0xFF8
  8267                           tblptrh	equ	0xFF7
  8268                           tblptrl	equ	0xFF6
  8269                           tablat	equ	0xFF5
  8270                           prodh	equ	0xFF4
  8271                           prodl	equ	0xFF3
  8272                           intcon	equ	0xFF2
  8273                           postinc0	equ	0xFEE
  8274                           fsr0h	equ	0xFEA
  8275                           fsr0l	equ	0xFE9
  8276                           wreg	equ	0xFE8
  8277                           indf1	equ	0xFE7
  8278                           fsr1h	equ	0xFE2
  8279                           fsr1l	equ	0xFE1
  8280                           bsr	equ	0xFE0
  8281                           indf2	equ	0xFDF
  8282                           postinc2	equ	0xFDE
  8283                           postdec2	equ	0xFDD
  8284                           fsr2h	equ	0xFDA
  8285                           fsr2l	equ	0xFD9
  8286                           status	equ	0xFD8
  8287                           
  8288 ;; *************** function i2_send_msg *****************
  8289 ;; Defined at:
  8290 ;;		line 24 in file "../src/messages.c"
  8291 ;; Parameters:    Size  Location     Type
  8292 ;;  qptr            2   56[COMRAM] PTR struct __msg_queue
  8293 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8294 ;;  length          1   58[COMRAM] unsigned char 
  8295 ;;  msgtype         1   59[COMRAM] unsigned char 
  8296 ;;  data            2   60[COMRAM] PTR void 
  8297 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), i2c_int_handler@error_buf(3), 
  8298 ;;		 -> NULL(0), timer0_int_handler@val(2), 
  8299 ;; Auto vars:     Size  Location     Type
  8300 ;;  send_msg        2   66[COMRAM] PTR struct __msg
  8301 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8302 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8303 ;;  send_msg        2   63[COMRAM] unsigned int 
  8304 ;;  send_msg        1   65[COMRAM] unsigned char 
  8305 ;; Return value:  Size  Location     Type
  8306 ;;                  1    wreg      char 
  8307 ;; Registers used:
  8308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8309 ;; Tracked objects:
  8310 ;;		On entry : 0/0
  8311 ;;		On exit  : 0/0
  8312 ;;		Unchanged: 0/0
  8313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8314 ;;      Params:         6       0       0       0       0
  8315 ;;      Locals:         5       0       0       0       0
  8316 ;;      Temps:          1       0       0       0       0
  8317 ;;      Totals:        12       0       0       0       0
  8318 ;;Total ram usage:       12 bytes
  8319 ;; Hardware stack levels used:    1
  8320 ;; Hardware stack levels required when called:    1
  8321 ;; This function calls:
  8322 ;;		i2_memcpy
  8323 ;; This function is called by:
  8324 ;;		_ToMainHigh_sendmsg
  8325 ;; This function uses a non-reentrant model
  8326 ;;
  8327                           
  8328                           	psect	text51
  8329  0010D8                     __ptext51:
  8330                           	opt stack 0
  8331  0010D8                     i2_send_msg:
  8332                           	opt stack 16
  8333                           
  8334                           ;messages.c: 25: unsigned char slot;
  8335                           ;messages.c: 27: msg *qmsg;
  8336                           ;messages.c: 28: size_t tlength = length;
  8337                           
  8338                           ;incstack = 0
  8339  0010D8  C03B  F040         	movff	i2send_msg@length,i2send_msg@tlength
  8340  0010DC  6A41               	clrf	i2send_msg@tlength+1,c
  8341                           
  8342                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8343  0010DE  EE20 F034          	lfsr	2,52
  8344  0010E2  5039               	movf	i2send_msg@qptr,w,c
  8345  0010E4  26D9               	addwf	fsr2l,f,c
  8346  0010E6  503A               	movf	i2send_msg@qptr+1,w,c
  8347  0010E8  22DA               	addwfc	fsr2h,f,c
  8348  0010EA  50DF               	movf	indf2,w,c
  8349  0010EC  6E42               	movwf	i2send_msg@slot,c
  8350                           
  8351                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8352  0010EE  5042               	movf	i2send_msg@slot,w,c
  8353  0010F0  0D0D               	mullw	13
  8354  0010F2  50F3               	movf	prodl,w,c
  8355  0010F4  2439               	addwf	i2send_msg@qptr,w,c
  8356  0010F6  6E43               	movwf	i2send_msg@qmsg,c
  8357  0010F8  50F4               	movf	prodh,w,c
  8358  0010FA  203A               	addwfc	i2send_msg@qptr+1,w,c
  8359  0010FC  6E44               	movwf	i2send_msg@qmsg+1,c
  8360                           
  8361                           ;messages.c: 41: if (qmsg->full != 0) {
  8362  0010FE  C043  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8363  001102  C044  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8364  001106  50DF               	movf	indf2,w,c
  8365  001108  B4D8               	btfsc	status,2,c
  8366  00110A  D002               	goto	i2l3331
  8367                           
  8368                           ;messages.c: 42: return (-1);
  8369  00110C  0EFF               	movlw	255
  8370  00110E  0012               	return	
  8371  001110                     i2l3331:
  8372                           
  8373                           ;messages.c: 43: }
  8374                           ;messages.c: 46: qmsg->length = length;
  8375  001110  EE20 F001          	lfsr	2,1
  8376  001114  5043               	movf	i2send_msg@qmsg,w,c
  8377  001116  26D9               	addwf	fsr2l,f,c
  8378  001118  5044               	movf	i2send_msg@qmsg+1,w,c
  8379  00111A  22DA               	addwfc	fsr2h,f,c
  8380  00111C  C03B  FFDF         	movff	i2send_msg@length,indf2
  8381                           
  8382                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8383  001120  EE20 F002          	lfsr	2,2
  8384  001124  5043               	movf	i2send_msg@qmsg,w,c
  8385  001126  26D9               	addwf	fsr2l,f,c
  8386  001128  5044               	movf	i2send_msg@qmsg+1,w,c
  8387  00112A  22DA               	addwfc	fsr2h,f,c
  8388  00112C  C03C  FFDF         	movff	i2send_msg@msgtype,indf2
  8389                           
  8390                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8391  001130  0E03               	movlw	3
  8392  001132  2443               	addwf	i2send_msg@qmsg,w,c
  8393  001134  6E2F               	movwf	i2memcpy@d1,c
  8394  001136  0E00               	movlw	0
  8395  001138  2044               	addwfc	i2send_msg@qmsg+1,w,c
  8396  00113A  6E30               	movwf	i2memcpy@d1+1,c
  8397  00113C  C03E  F032         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8398  001140  C03D  F031         	movff	i2send_msg@data,i2memcpy@s1
  8399  001144  C040  F033         	movff	i2send_msg@tlength,i2memcpy@n
  8400  001148  C041  F034         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8401  00114C  EC93  F00C         	call	i2_memcpy	;wreg free
  8402                           
  8403                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8404  001150  EE20 F034          	lfsr	2,52
  8405  001154  5039               	movf	i2send_msg@qptr,w,c
  8406  001156  26D9               	addwf	fsr2l,f,c
  8407  001158  503A               	movf	i2send_msg@qptr+1,w,c
  8408  00115A  22DA               	addwfc	fsr2h,f,c
  8409  00115C  EE10 F034          	lfsr	1,52
  8410  001160  5039               	movf	i2send_msg@qptr,w,c
  8411  001162  26E1               	addwf	fsr1l,f,c
  8412  001164  503A               	movf	i2send_msg@qptr+1,w,c
  8413  001166  22E2               	addwfc	fsr1h,f,c
  8414  001168  50E7               	movf	indf1,w,c
  8415  00116A  6E3F               	movwf	??i2_send_msg& (0+255),c
  8416  00116C  283F               	incf	??i2_send_msg,w,c
  8417  00116E  0B03               	andlw	3
  8418  001170  6EDF               	movwf	indf2,c
  8419                           
  8420                           ;messages.c: 59: qmsg->full = 1;
  8421  001172  C043  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8422  001176  C044  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8423  00117A  0E01               	movlw	1
  8424  00117C  6EDF               	movwf	indf2,c
  8425                           
  8426                           ;messages.c: 60: return (1);
  8427  00117E  0E01               	movlw	1
  8428  001180  0012               	return	
  8429  001182                     __end_ofi2_send_msg:
  8430                           	opt stack 0
  8431                           pclatu	equ	0xFFB
  8432                           pclath	equ	0xFFA
  8433                           tblptru	equ	0xFF8
  8434                           tblptrh	equ	0xFF7
  8435                           tblptrl	equ	0xFF6
  8436                           tablat	equ	0xFF5
  8437                           prodh	equ	0xFF4
  8438                           prodl	equ	0xFF3
  8439                           intcon	equ	0xFF2
  8440                           postinc0	equ	0xFEE
  8441                           fsr0h	equ	0xFEA
  8442                           fsr0l	equ	0xFE9
  8443                           wreg	equ	0xFE8
  8444                           indf1	equ	0xFE7
  8445                           fsr1h	equ	0xFE2
  8446                           fsr1l	equ	0xFE1
  8447                           bsr	equ	0xFE0
  8448                           indf2	equ	0xFDF
  8449                           postinc2	equ	0xFDE
  8450                           postdec2	equ	0xFDD
  8451                           fsr2h	equ	0xFDA
  8452                           fsr2l	equ	0xFD9
  8453                           status	equ	0xFD8
  8454                           
  8455 ;; *************** function i2_memcpy *****************
  8456 ;; Defined at:
  8457 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  8458 ;; Parameters:    Size  Location     Type
  8459 ;;  d1              2   46[COMRAM] PTR void 
  8460 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8461 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8462 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  8463 ;;  s1              2   48[COMRAM] PTR const void 
  8464 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8465 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8466 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), FromMainHigh_MQ(54), 
  8467 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), i2c_int_handler@error_buf(3), 
  8468 ;;		 -> NULL(0), timer0_int_handler@val(2), 
  8469 ;;  n               2   50[COMRAM] unsigned int 
  8470 ;; Auto vars:     Size  Location     Type
  8471 ;;  memcpy          2   54[COMRAM] PTR const unsigned char 
  8472 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8473 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8474 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), FromMainHigh_MQ(54), 
  8475 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), i2c_int_handler@error_buf(3), 
  8476 ;;		 -> NULL(0), timer0_int_handler@val(2), 
  8477 ;;  memcpy          2   52[COMRAM] PTR unsigned char 
  8478 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8479 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8480 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  8481 ;; Return value:  Size  Location     Type
  8482 ;;                  2   46[COMRAM] PTR void 
  8483 ;; Registers used:
  8484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8485 ;; Tracked objects:
  8486 ;;		On entry : 0/0
  8487 ;;		On exit  : 0/0
  8488 ;;		Unchanged: 0/0
  8489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8490 ;;      Params:         6       0       0       0       0
  8491 ;;      Locals:         4       0       0       0       0
  8492 ;;      Temps:          0       0       0       0       0
  8493 ;;      Totals:        10       0       0       0       0
  8494 ;;Total ram usage:       10 bytes
  8495 ;; Hardware stack levels used:    1
  8496 ;; This function calls:
  8497 ;;		Nothing
  8498 ;; This function is called by:
  8499 ;;		i2_send_msg
  8500 ;;		i2_recv_msg
  8501 ;; This function uses a non-reentrant model
  8502 ;;
  8503                           
  8504                           	psect	text52
  8505  001926                     __ptext52:
  8506                           	opt stack 0
  8507  001926                     i2_memcpy:
  8508                           	opt stack 16
  8509                           
  8510                           ;incstack = 0
  8511  001926  C032  F038         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8512  00192A  C031  F037         	movff	i2memcpy@s1,i2memcpy@s
  8513  00192E  C030  F036         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8514  001932  C02F  F035         	movff	i2memcpy@d1,i2memcpy@d
  8515  001936  D00E               	goto	i2l3419
  8516  001938                     i2l3413:
  8517  001938  C037  FFD9         	movff	i2memcpy@s,fsr2l
  8518  00193C  C038  FFDA         	movff	i2memcpy@s+1,fsr2h
  8519  001940  C035  FFE1         	movff	i2memcpy@d,fsr1l
  8520  001944  C036  FFE2         	movff	i2memcpy@d+1,fsr1h
  8521  001948  CFDF FFE7          	movff	indf2,indf1
  8522  00194C  4A37               	infsnz	i2memcpy@s,f,c
  8523  00194E  2A38               	incf	i2memcpy@s+1,f,c
  8524  001950  4A35               	infsnz	i2memcpy@d,f,c
  8525  001952  2A36               	incf	i2memcpy@d+1,f,c
  8526  001954                     i2l3419:
  8527  001954  0633               	decf	i2memcpy@n,f,c
  8528  001956  A0D8               	btfss	status,0,c
  8529  001958  0634               	decf	i2memcpy@n+1,f,c
  8530  00195A  2833               	incf	i2memcpy@n& (0+255),w,c
  8531  00195C  B4D8               	btfsc	status,2,c
  8532  00195E  2834               	incf	(i2memcpy@n+1)& (0+255),w,c
  8533  001960  B4D8               	btfsc	status,2,c
  8534                           
  8535                           ;	Return value of i2_memcpy is never used
  8536  001962  0012               	return	
  8537  001964  D7E9               	goto	i2l3413
  8538  001966                     __end_ofi2_memcpy:
  8539                           	opt stack 0
  8540                           pclatu	equ	0xFFB
  8541                           pclath	equ	0xFFA
  8542                           tblptru	equ	0xFF8
  8543                           tblptrh	equ	0xFF7
  8544                           tblptrl	equ	0xFF6
  8545                           tablat	equ	0xFF5
  8546                           prodh	equ	0xFF4
  8547                           prodl	equ	0xFF3
  8548                           intcon	equ	0xFF2
  8549                           postinc0	equ	0xFEE
  8550                           fsr0h	equ	0xFEA
  8551                           fsr0l	equ	0xFE9
  8552                           wreg	equ	0xFE8
  8553                           indf1	equ	0xFE7
  8554                           fsr1h	equ	0xFE2
  8555                           fsr1l	equ	0xFE1
  8556                           bsr	equ	0xFE0
  8557                           indf2	equ	0xFDF
  8558                           postinc2	equ	0xFDE
  8559                           postdec2	equ	0xFDD
  8560                           fsr2h	equ	0xFDA
  8561                           fsr2l	equ	0xFD9
  8562                           status	equ	0xFD8
  8563                           
  8564 ;; *************** function _SleepIfOkay *****************
  8565 ;; Defined at:
  8566 ;;		line 228 in file "../src/messages.c"
  8567 ;; Parameters:    Size  Location     Type
  8568 ;;		None
  8569 ;; Auto vars:     Size  Location     Type
  8570 ;;		None
  8571 ;; Return value:  Size  Location     Type
  8572 ;;		None               void
  8573 ;; Registers used:
  8574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8575 ;; Tracked objects:
  8576 ;;		On entry : 0/0
  8577 ;;		On exit  : 0/0
  8578 ;;		Unchanged: 0/0
  8579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8580 ;;      Params:         0       0       0       0       0
  8581 ;;      Locals:         0       0       0       0       0
  8582 ;;      Temps:          0       0       0       0       0
  8583 ;;      Totals:         0       0       0       0       0
  8584 ;;Total ram usage:        0 bytes
  8585 ;; Hardware stack levels used:    1
  8586 ;; Hardware stack levels required when called:    2
  8587 ;; This function calls:
  8588 ;;		_enter_sleep_mode
  8589 ;;		i2_check_msg
  8590 ;;		i2_in_high_int
  8591 ;;		i2_in_low_int
  8592 ;; This function is called by:
  8593 ;;		_InterruptHandlerHigh
  8594 ;; This function uses a non-reentrant model
  8595 ;;
  8596                           
  8597                           	psect	text53
  8598  001700                     __ptext53:
  8599                           	opt stack 0
  8600  001700                     _SleepIfOkay:
  8601                           	opt stack 17
  8602                           
  8603                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8604                           
  8605                           ;incstack = 0
  8606  001700  664F               	tstfsz	_MQ_Main_Willing_to_block,c
  8607  001702  D001               	goto	i2l3263
  8608  001704  0012               	return	
  8609  001706                     i2l3263:
  8610                           
  8611                           ;messages.c: 232: }
  8612                           ;messages.c: 235: if (in_low_int()) {
  8613  001706  EC5C  F00D         	call	i2_in_low_int	;wreg free
  8614  00170A  5032               	movf	?i2_in_low_int+1,w,c
  8615  00170C  1031               	iorwf	?i2_in_low_int,w,c
  8616  00170E  A4D8               	btfss	status,2,c
  8617  001710  0012               	return	
  8618                           
  8619                           ;messages.c: 237: }
  8620                           ;messages.c: 240: if (!in_high_int()) {
  8621                           
  8622                           ;messages.c: 236: return;
  8623  001712  EC42  F00E         	call	i2_in_high_int	;wreg free
  8624  001716  5030               	movf	?i2_in_high_int+1,w,c
  8625  001718  102F               	iorwf	?i2_in_high_int,w,c
  8626  00171A  B4D8               	btfsc	status,2,c
  8627  00171C  0012               	return	
  8628                           
  8629                           ;messages.c: 242: }
  8630                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8631                           
  8632                           ;messages.c: 241: return;
  8633  00171E  0101               	movlb	1	; () banked
  8634  001720  0E01               	movlw	high _ToMainHigh_MQ
  8635  001722  6E30               	movwf	i2check_msg@qptr+1,c
  8636  001724  0101               	movlb	1	; () banked
  8637  001726  0E36               	movlw	low _ToMainHigh_MQ
  8638  001728  6E2F               	movwf	i2check_msg@qptr,c
  8639  00172A  ECC2  F00D         	call	i2_check_msg	;wreg free
  8640  00172E  0900               	iorlw	0
  8641  001730  A4D8               	btfss	status,2,c
  8642  001732  0012               	return	
  8643                           
  8644                           ;messages.c: 249: }
  8645                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8646                           
  8647                           ;messages.c: 248: return;
  8648  001734  0101               	movlb	1	; () banked
  8649  001736  0E01               	movlw	high _ToMainLow_MQ
  8650  001738  6E30               	movwf	i2check_msg@qptr+1,c
  8651  00173A  0101               	movlb	1	; () banked
  8652  00173C  0E6C               	movlw	low _ToMainLow_MQ
  8653  00173E  6E2F               	movwf	i2check_msg@qptr,c
  8654  001740  ECC2  F00D         	call	i2_check_msg	;wreg free
  8655  001744  0900               	iorlw	0
  8656  001746  B4D8               	btfsc	status,2,c
  8657                           
  8658                           ;messages.c: 252: }
  8659                           ;messages.c: 253: enter_sleep_mode();
  8660                           
  8661                           ;messages.c: 251: return;
  8662  001748  EC51  F00E         	call	_enter_sleep_mode	;wreg free
  8663  00174C  0012               	return	
  8664  00174E                     __end_of_SleepIfOkay:
  8665                           	opt stack 0
  8666                           pclatu	equ	0xFFB
  8667                           pclath	equ	0xFFA
  8668                           tblptru	equ	0xFF8
  8669                           tblptrh	equ	0xFF7
  8670                           tblptrl	equ	0xFF6
  8671                           tablat	equ	0xFF5
  8672                           prodh	equ	0xFF4
  8673                           prodl	equ	0xFF3
  8674                           intcon	equ	0xFF2
  8675                           postinc0	equ	0xFEE
  8676                           fsr0h	equ	0xFEA
  8677                           fsr0l	equ	0xFE9
  8678                           wreg	equ	0xFE8
  8679                           indf1	equ	0xFE7
  8680                           fsr1h	equ	0xFE2
  8681                           fsr1l	equ	0xFE1
  8682                           bsr	equ	0xFE0
  8683                           indf2	equ	0xFDF
  8684                           postinc2	equ	0xFDE
  8685                           postdec2	equ	0xFDD
  8686                           fsr2h	equ	0xFDA
  8687                           fsr2l	equ	0xFD9
  8688                           status	equ	0xFD8
  8689                           
  8690 ;; *************** function i2_in_low_int *****************
  8691 ;; Defined at:
  8692 ;;		line 39 in file "../src/interrupts.c"
  8693 ;; Parameters:    Size  Location     Type
  8694 ;;		None
  8695 ;; Auto vars:     Size  Location     Type
  8696 ;;		None
  8697 ;; Return value:  Size  Location     Type
  8698 ;;                  2   48[COMRAM] int 
  8699 ;; Registers used:
  8700 ;;		wreg, status,2, status,0, cstack
  8701 ;; Tracked objects:
  8702 ;;		On entry : 0/0
  8703 ;;		On exit  : 0/0
  8704 ;;		Unchanged: 0/0
  8705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8706 ;;      Params:         2       0       0       0       0
  8707 ;;      Locals:         0       0       0       0       0
  8708 ;;      Temps:          0       0       0       0       0
  8709 ;;      Totals:         2       0       0       0       0
  8710 ;;Total ram usage:        2 bytes
  8711 ;; Hardware stack levels used:    1
  8712 ;; Hardware stack levels required when called:    1
  8713 ;; This function calls:
  8714 ;;		i2_in_high_int
  8715 ;; This function is called by:
  8716 ;;		_SleepIfOkay
  8717 ;; This function uses a non-reentrant model
  8718 ;;
  8719                           
  8720                           	psect	text54
  8721  001AB8                     __ptext54:
  8722                           	opt stack 0
  8723  001AB8                     i2_in_low_int:
  8724                           	opt stack 17
  8725                           
  8726                           ;interrupts.c: 40: if (INTCONbits.GIEL == 1) {
  8727                           
  8728                           ;incstack = 0
  8729  001AB8  ACF2               	btfss	intcon,6,c	;volatile
  8730  001ABA  D005               	goto	i2l3399
  8731                           
  8732                           ;interrupts.c: 41: return (0);
  8733  001ABC  0E00               	movlw	0
  8734  001ABE  6E32               	movwf	?i2_in_low_int+1,c
  8735  001AC0  0E00               	movlw	0
  8736  001AC2  6E31               	movwf	?i2_in_low_int,c
  8737  001AC4  0012               	return	
  8738  001AC6                     i2l3399:
  8739  001AC6  EC42  F00E         	call	i2_in_high_int	;wreg free
  8740  001ACA  5030               	movf	?i2_in_high_int+1,w,c
  8741  001ACC  102F               	iorwf	?i2_in_high_int,w,c
  8742  001ACE  B4D8               	btfsc	status,2,c
  8743  001AD0  D005               	goto	i2l3407
  8744                           
  8745                           ;interrupts.c: 43: return (0);
  8746  001AD2  0E00               	movlw	0
  8747  001AD4  6E32               	movwf	?i2_in_low_int+1,c
  8748  001AD6  0E00               	movlw	0
  8749  001AD8  6E31               	movwf	?i2_in_low_int,c
  8750  001ADA  0012               	return	
  8751  001ADC                     i2l3407:
  8752                           
  8753                           ;interrupts.c: 45: return (1);
  8754  001ADC  0E00               	movlw	0
  8755  001ADE  6E32               	movwf	?i2_in_low_int+1,c
  8756  001AE0  0E01               	movlw	1
  8757  001AE2  6E31               	movwf	?i2_in_low_int,c
  8758  001AE4  0012               	return	
  8759  001AE6                     __end_ofi2_in_low_int:
  8760                           	opt stack 0
  8761                           pclatu	equ	0xFFB
  8762                           pclath	equ	0xFFA
  8763                           tblptru	equ	0xFF8
  8764                           tblptrh	equ	0xFF7
  8765                           tblptrl	equ	0xFF6
  8766                           tablat	equ	0xFF5
  8767                           prodh	equ	0xFF4
  8768                           prodl	equ	0xFF3
  8769                           intcon	equ	0xFF2
  8770                           postinc0	equ	0xFEE
  8771                           fsr0h	equ	0xFEA
  8772                           fsr0l	equ	0xFE9
  8773                           wreg	equ	0xFE8
  8774                           indf1	equ	0xFE7
  8775                           fsr1h	equ	0xFE2
  8776                           fsr1l	equ	0xFE1
  8777                           bsr	equ	0xFE0
  8778                           indf2	equ	0xFDF
  8779                           postinc2	equ	0xFDE
  8780                           postdec2	equ	0xFDD
  8781                           fsr2h	equ	0xFDA
  8782                           fsr2l	equ	0xFD9
  8783                           status	equ	0xFD8
  8784                           
  8785 ;; *************** function i2_in_high_int *****************
  8786 ;; Defined at:
  8787 ;;		line 31 in file "../src/interrupts.c"
  8788 ;; Parameters:    Size  Location     Type
  8789 ;;		None
  8790 ;; Auto vars:     Size  Location     Type
  8791 ;;		None
  8792 ;; Return value:  Size  Location     Type
  8793 ;;                  2   46[COMRAM] int 
  8794 ;; Registers used:
  8795 ;;		wreg, status,2
  8796 ;; Tracked objects:
  8797 ;;		On entry : 0/0
  8798 ;;		On exit  : 0/0
  8799 ;;		Unchanged: 0/0
  8800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8801 ;;      Params:         2       0       0       0       0
  8802 ;;      Locals:         0       0       0       0       0
  8803 ;;      Temps:          0       0       0       0       0
  8804 ;;      Totals:         2       0       0       0       0
  8805 ;;Total ram usage:        2 bytes
  8806 ;; Hardware stack levels used:    1
  8807 ;; This function calls:
  8808 ;;		Nothing
  8809 ;; This function is called by:
  8810 ;;		_SleepIfOkay
  8811 ;;		i2_in_low_int
  8812 ;; This function uses a non-reentrant model
  8813 ;;
  8814                           
  8815                           	psect	text55
  8816  001C84                     __ptext55:
  8817                           	opt stack 0
  8818  001C84                     i2_in_high_int:
  8819                           	opt stack 17
  8820                           
  8821                           ;interrupts.c: 32: return (!INTCONbits.GIEH);
  8822                           
  8823                           ;incstack = 0
  8824  001C84  0E00               	movlw	0
  8825  001C86  AEF2               	btfss	intcon,7,c	;volatile
  8826  001C88  0E01               	movlw	1
  8827  001C8A  6E2F               	movwf	?i2_in_high_int,c
  8828  001C8C  6A30               	clrf	?i2_in_high_int+1,c
  8829  001C8E  0012               	return	
  8830  001C90                     __end_ofi2_in_high_int:
  8831                           	opt stack 0
  8832                           pclatu	equ	0xFFB
  8833                           pclath	equ	0xFFA
  8834                           tblptru	equ	0xFF8
  8835                           tblptrh	equ	0xFF7
  8836                           tblptrl	equ	0xFF6
  8837                           tablat	equ	0xFF5
  8838                           prodh	equ	0xFF4
  8839                           prodl	equ	0xFF3
  8840                           intcon	equ	0xFF2
  8841                           postinc0	equ	0xFEE
  8842                           fsr0h	equ	0xFEA
  8843                           fsr0l	equ	0xFE9
  8844                           wreg	equ	0xFE8
  8845                           indf1	equ	0xFE7
  8846                           fsr1h	equ	0xFE2
  8847                           fsr1l	equ	0xFE1
  8848                           bsr	equ	0xFE0
  8849                           indf2	equ	0xFDF
  8850                           postinc2	equ	0xFDE
  8851                           postdec2	equ	0xFDD
  8852                           fsr2h	equ	0xFDA
  8853                           fsr2l	equ	0xFD9
  8854                           status	equ	0xFD8
  8855                           
  8856 ;; *************** function i2_check_msg *****************
  8857 ;; Defined at:
  8858 ;;		line 222 in file "../src/messages.c"
  8859 ;; Parameters:    Size  Location     Type
  8860 ;;  qptr            2   46[COMRAM] PTR struct __msg_queue
  8861 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8862 ;; Auto vars:     Size  Location     Type
  8863 ;;		None
  8864 ;; Return value:  Size  Location     Type
  8865 ;;                  1    wreg      unsigned char 
  8866 ;; Registers used:
  8867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8868 ;; Tracked objects:
  8869 ;;		On entry : 0/0
  8870 ;;		On exit  : 0/0
  8871 ;;		Unchanged: 0/0
  8872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8873 ;;      Params:         2       0       0       0       0
  8874 ;;      Locals:         0       0       0       0       0
  8875 ;;      Temps:          1       0       0       0       0
  8876 ;;      Totals:         3       0       0       0       0
  8877 ;;Total ram usage:        3 bytes
  8878 ;; Hardware stack levels used:    1
  8879 ;; This function calls:
  8880 ;;		Nothing
  8881 ;; This function is called by:
  8882 ;;		_SleepIfOkay
  8883 ;; This function uses a non-reentrant model
  8884 ;;
  8885                           
  8886                           	psect	text56
  8887  001B84                     __ptext56:
  8888                           	opt stack 0
  8889  001B84                     i2_check_msg:
  8890                           	opt stack 18
  8891                           
  8892                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8893                           
  8894                           ;incstack = 0
  8895  001B84  EE20 F035          	lfsr	2,53
  8896  001B88  502F               	movf	i2check_msg@qptr,w,c
  8897  001B8A  26D9               	addwf	fsr2l,f,c
  8898  001B8C  5030               	movf	i2check_msg@qptr+1,w,c
  8899  001B8E  22DA               	addwfc	fsr2h,f,c
  8900  001B90  50DF               	movf	indf2,w,c
  8901  001B92  6E31               	movwf	??i2_check_msg& (0+255),c
  8902  001B94  5031               	movf	??i2_check_msg,w,c
  8903  001B96  0D0D               	mullw	13
  8904  001B98  50F3               	movf	prodl,w,c
  8905  001B9A  242F               	addwf	i2check_msg@qptr,w,c
  8906  001B9C  6ED9               	movwf	fsr2l,c
  8907  001B9E  50F4               	movf	prodh,w,c
  8908  001BA0  2030               	addwfc	i2check_msg@qptr+1,w,c
  8909  001BA2  6EDA               	movwf	fsr2h,c
  8910  001BA4  50DF               	movf	indf2,w,c
  8911  001BA6  0012               	return	
  8912  001BA8                     __end_ofi2_check_msg:
  8913                           	opt stack 0
  8914                           pclatu	equ	0xFFB
  8915                           pclath	equ	0xFFA
  8916                           tblptru	equ	0xFF8
  8917                           tblptrh	equ	0xFF7
  8918                           tblptrl	equ	0xFF6
  8919                           tablat	equ	0xFF5
  8920                           prodh	equ	0xFF4
  8921                           prodl	equ	0xFF3
  8922                           intcon	equ	0xFF2
  8923                           postinc0	equ	0xFEE
  8924                           fsr0h	equ	0xFEA
  8925                           fsr0l	equ	0xFE9
  8926                           wreg	equ	0xFE8
  8927                           indf1	equ	0xFE7
  8928                           fsr1h	equ	0xFE2
  8929                           fsr1l	equ	0xFE1
  8930                           bsr	equ	0xFE0
  8931                           indf2	equ	0xFDF
  8932                           postinc2	equ	0xFDE
  8933                           postdec2	equ	0xFDD
  8934                           fsr2h	equ	0xFDA
  8935                           fsr2l	equ	0xFD9
  8936                           status	equ	0xFD8
  8937                           
  8938 ;; *************** function _enter_sleep_mode *****************
  8939 ;; Defined at:
  8940 ;;		line 202 in file "../src/messages.c"
  8941 ;; Parameters:    Size  Location     Type
  8942 ;;		None
  8943 ;; Auto vars:     Size  Location     Type
  8944 ;;		None
  8945 ;; Return value:  Size  Location     Type
  8946 ;;		None               void
  8947 ;; Registers used:
  8948 ;;		None
  8949 ;; Tracked objects:
  8950 ;;		On entry : 0/0
  8951 ;;		On exit  : 0/0
  8952 ;;		Unchanged: 0/0
  8953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8954 ;;      Params:         0       0       0       0       0
  8955 ;;      Locals:         0       0       0       0       0
  8956 ;;      Temps:          0       0       0       0       0
  8957 ;;      Totals:         0       0       0       0       0
  8958 ;;Total ram usage:        0 bytes
  8959 ;; Hardware stack levels used:    1
  8960 ;; This function calls:
  8961 ;;		Nothing
  8962 ;; This function is called by:
  8963 ;;		_SleepIfOkay
  8964 ;; This function uses a non-reentrant model
  8965 ;;
  8966                           
  8967                           	psect	text57
  8968  001CA2                     __ptext57:
  8969                           	opt stack 0
  8970  001CA2                     _enter_sleep_mode:
  8971                           	opt stack 18
  8972                           
  8973                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8974                           
  8975                           ;incstack = 0
  8976  001CA2  8ED3               	bsf	4051,7,c	;volatile
  8977  001CA4  0003               	sleep		;# 
  8978  001CA6  0012               	return	
  8979  001CA8                     __end_of_enter_sleep_mode:
  8980                           	opt stack 0
  8981                           pclatu	equ	0xFFB
  8982                           pclath	equ	0xFFA
  8983                           tblptru	equ	0xFF8
  8984                           tblptrh	equ	0xFF7
  8985                           tblptrl	equ	0xFF6
  8986                           tablat	equ	0xFF5
  8987                           prodh	equ	0xFF4
  8988                           prodl	equ	0xFF3
  8989                           intcon	equ	0xFF2
  8990                           postinc0	equ	0xFEE
  8991                           fsr0h	equ	0xFEA
  8992                           fsr0l	equ	0xFE9
  8993                           wreg	equ	0xFE8
  8994                           indf1	equ	0xFE7
  8995                           fsr1h	equ	0xFE2
  8996                           fsr1l	equ	0xFE1
  8997                           bsr	equ	0xFE0
  8998                           indf2	equ	0xFDF
  8999                           postinc2	equ	0xFDE
  9000                           postdec2	equ	0xFDD
  9001                           fsr2h	equ	0xFDA
  9002                           fsr2l	equ	0xFD9
  9003                           status	equ	0xFD8
  9004                           
  9005 ;; *************** function _ReadADC *****************
  9006 ;; Defined at:
  9007 ;;		line 24 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcread.c"
  9008 ;; Parameters:    Size  Location     Type
  9009 ;;		None
  9010 ;; Auto vars:     Size  Location     Type
  9011 ;;		None
  9012 ;; Return value:  Size  Location     Type
  9013 ;;                  2   46[COMRAM] int 
  9014 ;; Registers used:
  9015 ;;		wreg, status,2
  9016 ;; Tracked objects:
  9017 ;;		On entry : 0/0
  9018 ;;		On exit  : 0/0
  9019 ;;		Unchanged: 0/0
  9020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9021 ;;      Params:         2       0       0       0       0
  9022 ;;      Locals:         0       0       0       0       0
  9023 ;;      Temps:          0       0       0       0       0
  9024 ;;      Totals:         2       0       0       0       0
  9025 ;;Total ram usage:        2 bytes
  9026 ;; Hardware stack levels used:    1
  9027 ;; This function calls:
  9028 ;;		Nothing
  9029 ;; This function is called by:
  9030 ;;		_InterruptHandlerHigh
  9031 ;; This function uses a non-reentrant model
  9032 ;;
  9033                           
  9034                           	psect	text58
  9035  001C90                     __ptext58:
  9036                           	opt stack 0
  9037  001C90                     _ReadADC:
  9038                           	opt stack 19
  9039                           
  9040                           ;incstack = 0
  9041  001C90  50C4               	movf	4036,w,c	;volatile
  9042  001C92  6E30               	movwf	?_ReadADC+1,c
  9043  001C94  50C3               	movf	4035,w,c	;volatile
  9044  001C96  6E2F               	movwf	?_ReadADC,c
  9045  001C98  0012               	return	
  9046  001C9A                     __end_of_ReadADC:
  9047                           	opt stack 0
  9048  0000                     pclatu	equ	0xFFB
  9049                           pclath	equ	0xFFA
  9050                           tblptru	equ	0xFF8
  9051                           tblptrh	equ	0xFF7
  9052                           tblptrl	equ	0xFF6
  9053                           tablat	equ	0xFF5
  9054                           prodh	equ	0xFF4
  9055                           prodl	equ	0xFF3
  9056                           intcon	equ	0xFF2
  9057                           postinc0	equ	0xFEE
  9058                           fsr0h	equ	0xFEA
  9059                           fsr0l	equ	0xFE9
  9060                           wreg	equ	0xFE8
  9061                           indf1	equ	0xFE7
  9062                           fsr1h	equ	0xFE2
  9063                           fsr1l	equ	0xFE1
  9064                           bsr	equ	0xFE0
  9065                           indf2	equ	0xFDF
  9066                           postinc2	equ	0xFDE
  9067                           postdec2	equ	0xFDD
  9068                           fsr2h	equ	0xFDA
  9069                           fsr2l	equ	0xFD9
  9070                           status	equ	0xFD8
  9071                           pclatu	equ	0xFFB
  9072                           pclath	equ	0xFFA
  9073                           tblptru	equ	0xFF8
  9074                           tblptrh	equ	0xFF7
  9075                           tblptrl	equ	0xFF6
  9076                           tablat	equ	0xFF5
  9077                           prodh	equ	0xFF4
  9078                           prodl	equ	0xFF3
  9079                           intcon	equ	0xFF2
  9080                           postinc0	equ	0xFEE
  9081                           fsr0h	equ	0xFEA
  9082                           fsr0l	equ	0xFE9
  9083                           wreg	equ	0xFE8
  9084                           indf1	equ	0xFE7
  9085                           fsr1h	equ	0xFE2
  9086                           fsr1l	equ	0xFE1
  9087                           bsr	equ	0xFE0
  9088                           indf2	equ	0xFDF
  9089                           postinc2	equ	0xFDE
  9090                           postdec2	equ	0xFDD
  9091                           fsr2h	equ	0xFDA
  9092                           fsr2l	equ	0xFD9
  9093                           status	equ	0xFD8
  9094                           
  9095                           	psect	rparam
  9096  0000                     pclatu	equ	0xFFB
  9097                           pclath	equ	0xFFA
  9098                           tblptru	equ	0xFF8
  9099                           tblptrh	equ	0xFF7
  9100                           tblptrl	equ	0xFF6
  9101                           tablat	equ	0xFF5
  9102                           prodh	equ	0xFF4
  9103                           prodl	equ	0xFF3
  9104                           intcon	equ	0xFF2
  9105                           postinc0	equ	0xFEE
  9106                           fsr0h	equ	0xFEA
  9107                           fsr0l	equ	0xFE9
  9108                           wreg	equ	0xFE8
  9109                           indf1	equ	0xFE7
  9110                           fsr1h	equ	0xFE2
  9111                           fsr1l	equ	0xFE1
  9112                           bsr	equ	0xFE0
  9113                           indf2	equ	0xFDF
  9114                           postinc2	equ	0xFDE
  9115                           postdec2	equ	0xFDD
  9116                           fsr2h	equ	0xFDA
  9117                           fsr2l	equ	0xFD9
  9118                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     76      80
    BANK0           128     77      81
    BANK1           256     53     215
    BANK2           256      0      54
    BANK3           256      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK1[11]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), timer0_int_handler@val(BANK0[2]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK1[11]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), timer0_int_handler@val(BANK0[2]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[5]), FromMainHigh_MQ(BANK2[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[5]), FromMainHigh_MQ(BANK2[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> main@ic(BANK1[28]), i2c_int_handler@error_buf(BANK0[3]), NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> main@uc(BANK1[5]), NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> main@msgtype(BANK1[1]), timer0_int_handler@msgtype(BANK0[2]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), timer0_int_handler@val(BANK0[2]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK1[11]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), timer0_int_handler@val(BANK0[2]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[5]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), i2c_int_handler@msgbuffer(BANK0[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), NULL(NULL[0]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), NULL(NULL[0]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_timer0_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _initADC->_OpenADC
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0    9609
                                             76 BANK0      1     1      0
                                              0 BANK1     53    53      0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                            _initADC
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _returnADCValue
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     344
                                             40 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    2403
                                             66 BANK0     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     211
                                             40 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    1847
                                             62 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1653
                                             50 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     279
                                             40 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     168
                                             40 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _returnADCValue                                       4     2      2      24
                                             40 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      86
                                             40 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      86
                                             40 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     390
                                             44 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     390
                                             40 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                             40 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initADC                                              4     4      0     283
                                             45 BANK0      4     4      0
                         _ConvertADC
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             40 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             40 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     270
                                             46 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             44 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             42 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             40 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                             40 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             40 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    1973
                                             64 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    1973
                                             64 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1779
                                             50 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     504
                                             40 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     284
                                             40 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             40 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    4938
                                             29 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
                       i1_ConvertADC
 ---------------------------------------------------------------------------------
 (6) i1_ConvertADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    2416
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    2522
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2393
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    1943
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               18    18      0   11242
                                             22 BANK0     18    18      0
                            _ReadADC
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  7     7      0    6566
                                             75 COMRAM     1     1      0
                                              0 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     176
                                             46 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    2994
                                             70 COMRAM     5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    2747
                                             56 COMRAM    14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    24    24      0    4358
                                             72 COMRAM     2     2      0
                                              0 BANK0     22    22      0
                 _ToMainHigh_sendmsg
                       _handle_start
                   i2_returnADCValue
            i2_start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (12) i2_start_i2c_slave_reply                             5     3      2     318
                                             46 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (12) i2_returnADCValue                                    4     2      2      98
                                             46 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      31
                                             46 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    3214
                                             68 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2659
                                             56 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6    1108
                                             46 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     284
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             48 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     284
                                             46 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ReadADC                                             2     0      2       0
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _initADC
     _ConvertADC
     _OpenADC
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _returnADCValue
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   i1_ConvertADC

 _InterruptHandlerHigh (ROOT)
   _ReadADC
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
     i2_returnADCValue
     i2_start_i2c_slave_reply
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      36       8       21.1%
BITBANK1           100      0       0      10        0.0%
BANK1              100     35      D7       6       84.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     4D      51       5       63.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     4C      50       1       63.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AE       9        0.0%
DATA                 0      0     1AE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sat Feb  8 14:34:44 2014

                main@uthread_data 01AD          _MQ_Main_Willing_to_block 004F  
                     _SSPSTATbits 000FC7         __end_of_ToMainLow_recvmsg 18A4  
                              bsr 000FE0         __end_of_ToMainLow_sendmsg 1B5E  
                ??_returnADCValue 00AA                      __CFG_CP0$OFF 000000  
               i2recv_msg@msgtype 003C                 i2recv_msg@tlength 0043  
                             l318 07DE                               l416 1460  
                             l446 19FC                               l448 1A14  
                             l449 1A16                               l490 12F8  
                             l723 1C06                               l494 1318  
                             l495 131A                               l496 1328  
                             l497 132A              __size_of_WriteTimer0 0012  
            __size_of_WriteTimer1 0012                    _FromMainLow_MQ 0100  
                             wreg 000FE8                      __CFG_IESO$ON 000000  
                    ?_in_high_int 00A8                  ??_init_uart_recv 00AA  
                 ReadTimer1@timer 0003               i2recv_msg@maxlength 003B  
                            l1035 13D6                              l2501 16C4  
                            l2253 0B76                              l2521 0A0C  
                            l2249 0AF2                              l2507 16E8  
                            l2611 17CC                              l2603 17AA  
                            l2801 12E4                              l2537 0AD2  
                            l2641 11FE                              l2633 11D0  
                            l2625 11A2                              l2469 14AC  
                            l2655 1810                              l2487 0C40  
                            l2743 0816                              l2735 078C  
                            l2727 074A                              l2809 12FA  
                            l2737 07E4                              l2753 084E  
                            l2761 08A4                              l2747 082C  
                            l2755 0866                              l2781 19FE  
                            l2773 0986                              l2871 1374  
                            l2767 08E2                              l2759 0886  
                            l2873 1386                              l2769 0934  
                            l2875 138E                              l2879 13C2  
                            _LATB 000F8A                              u1590 120C  
                            u2447 1C08                              u1596 120E  
                 _FromMainHigh_MQ 0200                     __CFG_FCMEN$ON 000000  
          ?_block_on_To_msgqueues 0001                              _main 06BE  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            indf1 000FE7                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                     main@msgtype 01B9                        i1_send_msg 102E  
                            pclat 000FFA                       i2_check_msg 1B84  
                            prodh 000FF4                              prodl 000FF3  
           handle_start@data_read 002F                              start 00BA  
                      i2_recv_msg 0DDC                     __CFG_FOSC2$ON 000000  
                      i2_send_msg 10D8         ToMainHigh_recvmsg@msgtype 00C0  
                 __end_of_ReadADC 1C9A                    send_msg@length 00B4  
   i2start_i2c_slave_reply@length 0033                   __end_of_OpenADC 1464  
     __size_of_timer0_int_handler 007A                       _Delay1KTCYx 1C02  
                           ?_main 0001                             _T1CON 000FCD  
                           i2l104 0F2A                             i2l120 01A8  
                 __end_of___lwmod 13E0                             i2l114 04D8  
                      i1memcpy@d1 0001                             i2l116 016A  
                           i1l508 1BD4                             i2l142 0456  
                           i2l134 032A                             i1l394 0074  
                           i2l148 04EA                        i1memcpy@s1 0003  
     FromMainHigh_recvmsg@msgtype 0047                             _RCREG 000FAE  
                           _RCSTA 000FAB                             _TMR0H 000FD7  
                           _TMR1H 000FCF                             _TMR0L 000FD6  
                           _TMR1L 000FCE                             _SPBRG 000FAF  
                           _TRISB 000F93                             _TXSTA 000FAC  
                      i2memcpy@d1 002F                        i2memcpy@s1 0031  
                    ?_init_queues 0001                returnADCValue@temp 00AA  
       __size_of_enter_sleep_mode 0006                   __end_of_initADC 1862  
                 __end_of_in_main 1820        ToMainLow_recvmsg@maxlength 00C4  
         timer0_lthread@msgbuffer 00AE                        _ConvertADC 1CA8  
         i2c_configure_slave@addr 00A8                             tablat 000FF5  
                           status 000FD8                  __end_ofi1_memcpy 1926  
                __end_ofi2_memcpy 1966                   __initialization 1966  
                    __end_of_main 09A0                        _ReadTimer1 1C60  
     __size_of_timer1_int_handler 0048        __size_of_ToMainLow_recvmsg 0042  
      __size_of_ToMainLow_sendmsg 0026     __size_of_FromMainHigh_recvmsg 002A  
           __size_ofi2_in_low_int 002E     __size_of_FromMainHigh_sendmsg 0036  
                          ??_main 00CC                   send_msg@msgtype 00B5  
                   __activetblptr 000002                   send_msg@tlength 00B9  
            __end_of_handle_start 0F76                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
         ??_uart_recv_int_handler 001B                            i1l3019 1066  
                          i1l3055 12A4                            i1l3069 006A  
                          i2l3105 0F46                            i2l3107 0F5E  
                          i2l3123 014C                            i2l3301 0FF0  
                          i2l3223 04EE                            i2l3313 0D78  
                          i2l3217 04AC                            i2l3129 0160  
                      _OpenTimer1 19E2                            i2l3331 1110  
                          i2l3147 01DC                            i1l2995 1914  
                          i2l3413 1938                            i2l3309 0D04  
                          i2l3245 066A                            i2l3237 05D4  
                          i2l3229 054E                            i2l3165 025C  
                          i2l3149 0208                            i1l2989 18F8  
                  __CFG_WDTEN$OFF 000000                            i2l3407 1ADC  
                          i2l3263 1706                            i2l3191 03DC  
                          i2l3167 029C                            i2l3159 0244  
                          i2l3419 1954                            i2l3195 03EA  
                          i2l3355 0E22                            i2l3371 0EAA  
                          i2l3189 039A                            i2l3293 0FBA  
                          i2l3287 0FB0                            i2l3399 1AC6  
     __end_of_i2c_configure_slave 1B38                     ??_SleepIfOkay 0033  
              __size_of_ReadUSART 001E                            _OSCCON 000FD3  
                          _SPBRGH 000FB0                            _SSPADD 000FC8  
                          _SSPBUF 000FC9    __size_of_start_i2c_slave_reply 010E  
                     ?i1_send_msg 000B                         ??_ReadADC 0031  
   __end_of_start_i2c_slave_reply 0BE4                timer0_lthread@tptr 00A8  
                     ?i2_recv_msg 0039                         ??_OpenADC 00AA  
                    i2_in_low_int 1AB8                       ?i2_send_msg 0039  
                  __CFG_XINST$OFF 000000                __size_of_OpenUSART 0092  
                 _i2c_int_handler 00BE                            _ic_ptr 00CD  
                       ??___lwmod 00AC                     main@msgbuffer 01A2  
                __end_of_init_i2c 16A2                  OpenTimer1@config 00A8  
                          _memcpy 16A2                            clear_0 196C  
                          clear_1 1978                            _uc_ptr 004D  
                          main@ic 01BB                            main@uc 01B4  
                __end_of_recv_msg 0AD6       start_i2c_slave_reply@length 00AC  
                       ??_initADC 00AD                         ??_in_main 00AE  
                __end_of_send_msg 0CE8                   initADC@ADCValue 00AF  
           timer0_int_handler@val 0084           i2c_int_handler@i2c_data 0092  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                       init_queue@i 00AB  
        ?i2_start_i2c_slave_reply 002F          ToMainLow_recvmsg@msgtype 00C0  
            __size_of_in_high_int 0012                       ?_ConvertADC 0001  
                 __CFG_FOSC$HSPLL 000000                        __accesstop 0080  
         __end_of__initialization 199A        __end_of_ToMainHigh_recvmsg 18E6  
      __end_of_ToMainHigh_sendmsg 1B84       __end_of_init_timer1_lthread 1C3C  
             __end_of_SleepIfOkay 174E                    __pcstackCOMRAM 0001  
                    __pidataBANK0 1CB0            __size_ofi2_in_high_int 000C  
                     ?_ReadTimer1 0001                __size_of_check_msg 0036  
       __size_ofi2_returnADCValue 001E                 __end_of_ReadUSART 1BE4  
       timer0_int_handler@msgtype 0082               __size_ofi1_send_msg 00AA  
                       ?i1_memcpy 0001     __size_of_InterruptHandlerHigh 1026  
     __end_of_InterruptHandlerLow 00BA                         ?i2_memcpy 002F  
                   _ToMainHigh_MQ 0136               __size_ofi2_recv_msg 00D2  
                _enter_sleep_mode 1CA2               __size_ofi2_send_msg 00AA  
            timer1_lthread@length 00C6                     ReadUSART@data 0001  
               __end_of_OpenUSART 1356                     check_msg@qptr 00A8  
            timer1_lthread@retval 00CB           ??_block_on_To_msgqueues 00AE  
            __size_of_init_queues 006E                        __pbssBANK1 0100  
                      __pbssBANK2 0200                       ?_OpenTimer1 0001  
                      __pnvCOMRAM 004D           __end_of_i2c_int_handler 06BE  
                    ?i2_check_msg 002F                timer1_lthread@tptr 00C2  
               recv_msg@maxlength 00B4                   recv_msg@msgtype 00B5  
                 recv_msg@tlength 00BC             __size_of_handle_start 00C8  
                    ?_Delay1KTCYx 0001                  WriteTimer0@timer 0031  
                         ?_memcpy 00A8                  WriteTimer1@timer 0003  
                   ??_WriteTimer0 0031                     ??_WriteTimer1 0003  
             __size_of_ConvertADC 0004           __size_of_timer0_lthread 0012  
         __size_of_timer1_lthread 0072   __end_ofi2_start_i2c_slave_reply 0DDC  
                      ??i1_memcpy 0007                        ??i2_memcpy 0035  
      i2start_i2c_slave_reply@msg 002F                  i1send_msg@length 000D  
                   i2_in_high_int 1C84                           _SSPCON1 000FC6  
                         _SSPCON2 000FC5                           _SSPSTAT 000FC7  
             __size_of_ReadTimer1 0012                 __end_of_check_msg 1A86  
                       ?_init_i2c 00A8                       _SleepIfOkay 1700  
                         _ReadADC 1C90                         ?_recv_msg 00B2  
                         _OpenADC 13E0                        _in_low_int 1796  
                    _handle_start 0EAE                           __Hparam 0000  
                       ?_send_msg 00B2                           __Lparam 0000  
      __end_of_timer0_int_handler 1558                  init_uart_recv@uc 00A8  
                         ___lwmod 1356                     ?i1_ConvertADC 0001  
                 __CFG_STVREN$OFF 000000                           __pcinit 1966  
                 __size_of_memcpy 005E                        _init_queue 1464  
                         __ramtop 0400               __size_of_OpenTimer1 0038  
                         __ptext0 06BE                           __ptext1 19A4  
                         __ptext2 1558                           __ptext3 1356  
                         __ptext4 1A1A                           __ptext5 0BE4  
                         __ptext6 1C18                           __ptext7 0AD6  
                         __ptext8 1A86                           __ptext9 1BA8  
                         _initADC 1820                           _in_main 17DC  
                       _T1CONbits 000FCD               __end_of_WriteTimer0 1C84  
             __end_of_WriteTimer1 1C60                    ?i2_in_high_int 002F  
                  OpenADC@config2 00A8           __size_of_returnADCValue 0032  
                  __pintcode_body 0F76      __end_of_FromMainHigh_recvmsg 1B10  
            end_of_initialization 199A           timer1_lthread@msgbuffer 00C8  
    __end_of_FromMainHigh_sendmsg 1A50    __size_of_uart_recv_int_handler 009C  
      FromMainHigh_sendmsg@length 00C1                           memcpy@d 00AE  
                         memcpy@n 00AC                           memcpy@s 00B0  
   __end_of_uart_recv_int_handler 12C4                        ??_init_i2c 00AA  
     i2c_int_handler@data_written 0090                     __Lmediumconst 0000  
                         int_func 0F76                      ??i1_send_msg 0011  
                   ?_uart_lthread 00A8           __size_of_init_uart_recv 001E  
                ?_i2c_int_handler 0001                      ??i2_recv_msg 0040  
                      ??_recv_msg 00B9                      ??i2_send_msg 003F  
                      ??_send_msg 00B8        __end_of_timer1_int_handler 1796  
                       _RCSTAbits 000FAB                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
       ToMainHigh_sendmsg@msgtype 0045                    ??i1_ConvertADC 0001  
                i2_returnADCValue 1BE4                __end_ofi1_send_msg 10D8  
     FromMainHigh_sendmsg@msgtype 00BE                         _TRISCbits 000F94  
            i2returnADCValue@temp 0031                __end_ofi2_recv_msg 0EAE  
              __end_ofi2_send_msg 1182                      ??_ConvertADC 00A8  
   FromMainHigh_recvmsg@maxlength 004B          timer1_int_handler@result 001C  
                  ??_uart_lthread 00B0                         _TXSTAbits 000FAC  
                      main@length 01BA                       ?_in_low_int 00AA  
           timer0_lthread@msgtype 00AA  __size_ofi2_start_i2c_slave_reply 00F4  
           _start_i2c_slave_reply 0AD6      __size_of_i2c_configure_slave 0028  
            __size_ofi2_check_msg 0024          __end_of_enter_sleep_mode 1CA8  
                    ??_ReadTimer1 0003                _ToMainHigh_recvmsg 18A4  
                       i1memcpy@d 0007                _ToMainHigh_sendmsg 1B5E  
                       i1memcpy@n 0005                         i1memcpy@s 0009  
                  _timer0_lthread 1C18                       ?_init_queue 00A8  
                       i2memcpy@d 0035                       _WriteTimer0 1C72  
                     _WriteTimer1 1C4E                         i2memcpy@n 0033  
                       i2memcpy@s 0037                __end_of_ConvertADC 1CAC  
                  _timer1_lthread 1558                    __end_of_memcpy 1700  
               _enable_interrupts 1C9A              __size_of_Delay1KTCYx 0016  
             ?_ToMainHigh_recvmsg 00C0                   ??i2_in_high_int 0031  
        i2c_int_handler@data_read 0095               ?_ToMainHigh_sendmsg 0045  
              ?_enable_interrupts 0001               start_initialization 1966  
                   ??_in_high_int 00AA                         _ReadUSART 1BC6  
               __size_ofi1_memcpy 0040                 __size_ofi2_memcpy 0040  
           i2c_int_handler@length 008B               ??_enable_interrupts 00A8  
                    ??_OpenTimer1 00A8    __size_of_block_on_To_msgqueues 00A6  
              __end_of_ReadTimer1 1C72     __end_of_block_on_To_msgqueues 1228  
                       _OpenUSART 12C4      __end_of_InterruptHandlerHigh 102E  
                      init_i2c@ic 00A8              ??_ToMainHigh_recvmsg 00C4  
            ??_ToMainHigh_sendmsg 0048            __end_of_timer0_lthread 1C2A  
        i2c_int_handler@error_buf 008D                       __pdataBANK0 00CF  
          __end_of_timer1_lthread 15CA         __end_of_enable_interrupts 1CA2  
                        ??_memcpy 00AE             timer1_lthread@msgtype 00C4  
            _FromMainHigh_recvmsg 1AE6              _FromMainHigh_sendmsg 1A1A  
    __size_of_init_timer1_lthread 0012                __end_of_OpenTimer1 1A1A  
        i2c_int_handler@msg_ready 0094          i2c_int_handler@msgbuffer 0080  
                     __pbssCOMRAM 004F                        ?_ReadUSART 0001  
                   ??_init_queues 00AC                     __pcstackBANK0 0080  
                   __pcstackBANK1 01A2               __size_of_in_low_int 0046  
        start_i2c_slave_reply@msg 00A8                    _returnADCValue 1A86  
             __CFG_CCP2MX$DEFAULT 000000              __end_ofi1_ConvertADC 1CB0  
                 Delay1KTCYx@unit 00A8          ToMainLow_sendmsg@msgtype 0017  
    __size_of_InterruptHandlerLow 00A2               __end_of_in_high_int 1C4E  
                      ?_OpenUSART 00A8                      ?_SleepIfOkay 0001  
           ToMainLow_recvmsg@data 00C2                      _ToMainLow_MQ 016C  
             __size_of_init_queue 007A                    _init_uart_recv 1BA8  
                        ?_ReadADC 002F                         _check_msg 1A50  
                       __pnvBANK0 00CD            ?_start_i2c_slave_reply 00A8  
               __size_of_init_i2c 006A                 OpenADC@portconfig 00A9  
                        ?_OpenADC 00A8                      recv_msg@data 00B7  
                    recv_msg@qmsg 00BE                      recv_msg@slot 00BB  
                    recv_msg@qptr 00B2                 __size_of_recv_msg 0136  
                       __pintcode 0008                 __size_of_send_msg 0104  
                 ?_timer0_lthread 00A8                          ?___lwmod 00A8  
           ?_FromMainHigh_recvmsg 0047                   ?_timer1_lthread 00C2  
           ?_FromMainHigh_sendmsg 00BE                       __pintcodelo 0018  
          ToMainHigh_recvmsg@data 00C2              __end_of_uart_lthread 19E2  
                        ?_initADC 0001        i2c_int_handler@msg_to_send 0093  
                        ?_in_main 00AC                 WriteTimer0@timer0 002F  
              _timer0_int_handler 14DE                 WriteTimer1@timer1 0001  
             uart_lthread@msgtype 00AA                          _ADCValue 00CF  
          __end_of_returnADCValue 1AB8             ToMainLow_sendmsg@data 0018  
             ?_timer0_int_handler 0001          __end_ofi2_returnADCValue 1C02  
                uart_lthread@uptr 00A8            __end_of_init_uart_recv 1BC6  
             __end_of_init_queues 1638                     OpenADC@config 00AC  
                        _LATBbits 000F8A                   i2check_msg@qptr 002F  
                      ?_check_msg 00A8                          _IPR1bits 000F9F  
                        _PIE1bits 000F9D           i2_start_i2c_slave_reply 0CE8  
                   ?i2_in_low_int 0031                          i1u192_20 1756  
                        i1u192_26 1758                          _PIR1bits 000F9E  
                        i2u198_40 14E6                          i2u198_46 14E8  
          ToMainHigh_sendmsg@data 0046                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000              ??_timer0_int_handler 004C  
      __size_of_enable_interrupts 0008                 i1send_msg@msgtype 000E  
               i1send_msg@tlength 0012                        _ADCON0bits 000FC2  
            timer0_lthread@length 00AC                _timer1_int_handler 174E  
                        i1_memcpy 18E6              _InterruptHandlerHigh 0008  
                     ??_ReadUSART 0001                          i2_memcpy 1926  
            timer0_lthread@msgval 00B0          FromMainHigh_recvmsg@data 0049  
                 ?_returnADCValue 00A8                       _in_high_int 1C3C  
                    send_msg@data 00B6               _i2c_configure_slave 1B10  
                    send_msg@qmsg 00BC                      send_msg@slot 00BB  
                    send_msg@qptr 00B2             uart_lthread@msgbuffer 00AE  
             ?_timer1_int_handler 0001                   ?_init_uart_recv 00A8  
                     ??_OpenUSART 00AA                   OpenUSART@config 00AD  
                  ??i2_in_low_int 0033             _uart_recv_int_handler 1228  
                    ??_in_low_int 00AC                  __size_of_ReadADC 000A  
                        __Hrparam 0000                  __size_of_OpenADC 0084  
            ?_i2c_configure_slave 0001                          __Lrparam 0000  
               ?_enter_sleep_mode 0001            ??_FromMainHigh_recvmsg 004B  
          ??_FromMainHigh_sendmsg 00C1              ??_timer1_int_handler 001B  
        __size_of_i2c_int_handler 0600                ??_enter_sleep_mode 002F  
                __size_of___lwmod 008A                      ??_init_queue 00AA  
                    ?_WriteTimer0 002F                      ?_WriteTimer1 0001  
        FromMainHigh_sendmsg@data 00BF           ToMainLow_sendmsg@length 001A  
               main@t0thread_data 01AF             ?_InterruptHandlerHigh 0001  
                __size_of_initADC 0042                  __size_of_in_main 0044  
           __size_ofi1_ConvertADC 0004                 i2send_msg@msgtype 003C  
     ToMainHigh_recvmsg@maxlength 00C4                 i2send_msg@tlength 0040  
         init_timer1_lthread@tptr 00A8                       _init_queues 15CA  
              __end_of_in_low_int 17DC                          __ptext10 1C2A  
                        __ptext11 15CA                          __ptext20 17DC  
                        __ptext12 1464                          __ptext21 1796  
                        __ptext13 1638                          __ptext30 19E2  
                        __ptext22 1C3C                          __ptext14 1820  
                        __ptext23 1A50                          __ptext15 13E0  
                        __ptext40 1C60                          __ptext32 1CAC  
                        __ptext24 1C02                          __ptext16 1CA8  
                        __ptext33 1228                          __ptext25 1862  
                        __ptext17 1B10                          __ptext50 1B5E  
                        __ptext42 14DE                          __ptext34 1BC6  
                        __ptext26 18A4                          __ptext18 1C9A  
                        __ptext51 10D8                          __ptext43 1C72  
                        __ptext35 174E                          __ptext27 09A0  
                        __ptext19 1182                          __ptext52 1926  
                        __ptext44 1AE6                          __ptext36 1C4E  
                        __ptext28 16A2                          __ptext53 1700  
                        __ptext45 0DDC                          __ptext37 1B38  
                        __ptext29 12C4                          __ptext54 1AB8  
                        __ptext46 00BE                          __ptext38 102E  
                        __ptext55 1C84                          __ptext47 0CE8  
                        __ptext39 18E6                          __ptext56 1B84  
                        __ptext48 1BE4                          __ptext57 1CA2  
                        __ptext49 0EAE                          __ptext58 1C90  
                  i1send_msg@data 000F                    i1send_msg@qmsg 0015  
                  i1send_msg@slot 0014                    i1send_msg@qptr 000B  
              uart_lthread@length 00AC          timer0_int_handler@length 0080  
       ??i2_start_i2c_slave_reply 0031                          _init_i2c 1638  
             _init_timer1_lthread 1C2A                     __size_of_main 02E2  
                   ??i2_check_msg 0031                 main@t1thread_data 01B2  
                     ??_check_msg 00AA                __end_of_init_queue 14DE  
            __size_of_SleepIfOkay 004E                          _recv_msg 09A0  
           ??_i2c_configure_slave 00A8                          _send_msg 0BE4  
                  init_queue@qptr 00A8             __size_of_uart_lthread 003E  
                  i2recv_msg@data 003E                    i2recv_msg@qmsg 0045  
                   ??_Delay1KTCYx 00A8                    i2recv_msg@slot 0042  
                  i2recv_msg@qptr 0039                      i1_ConvertADC 1CAC  
             _InterruptHandlerLow 0018              ?_init_timer1_lthread 00A8  
                     _OSCTUNEbits 000F9B                        _INTCONbits 000FF2  
                  OpenUSART@spbrg 00A8                          memcpy@d1 00A8  
                        memcpy@s1 00AA             __end_ofi2_in_high_int 1C90  
    i2c_int_handler@overrun_error 0091                  i2send_msg@length 003B  
                        intlevel1 0000                          intlevel2 0000  
            ?_InterruptHandlerLow 0001           ??_start_i2c_slave_reply 00AA  
                ___lwmod@dividend 00A8            ?_uart_recv_int_handler 0001  
                    _uart_lthread 19A4             _block_on_To_msgqueues 1182  
                   ?_handle_start 0001                  ??_timer0_lthread 00B0  
     __size_of_ToMainHigh_recvmsg 0042       __size_of_ToMainHigh_sendmsg 0026  
                      _OSCCONbits 000FD3                  ??_timer1_lthread 00CA  
        ToMainHigh_sendmsg@length 0048               __end_ofi2_check_msg 1BA8  
           ??_init_timer1_lthread 00AA            ??_InterruptHandlerHigh 0096  
               _ToMainLow_recvmsg 1862                 _ToMainLow_sendmsg 1B38  
              main@last_reg_recvd 01B1                   ___lwmod@divisor 00AA  
            __end_ofi2_in_low_int 1AE6                ?_ToMainLow_recvmsg 00C0  
             __end_of_Delay1KTCYx 1C18                 ??_i2c_int_handler 0049  
                 ___lwmod@counter 00AD                ?_ToMainLow_sendmsg 0017  
                     _SSPCON1bits 000FC6                       _SSPCON2bits 000FC5  
                  i2send_msg@data 003D             ??_InterruptHandlerLow 001E  
             ??_ToMainLow_recvmsg 00C4                    i2send_msg@qmsg 0043  
                  i2send_msg@slot 0042                    i2send_msg@qptr 0039  
             ??_ToMainLow_sendmsg 001A                 ?i2_returnADCValue 002F  
              ??i2_returnADCValue 0031                    ??_handle_start 002F  
InterruptHandlerHigh@pureADCValue 00A6                      _USART_Status 0050  

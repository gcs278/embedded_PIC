

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Sun Feb 09 19:31:18 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    71  0000                     _ADCON0	set	4034
    72  0000                     _ADCON0bits	set	4034
    73  0000                     _ADCON1	set	4033
    74  0000                     _ADCON2	set	4032
    75  0000                     _ADRESH	set	4036
    76  0000                     _ADRESL	set	4035
    77  0000                     _INTCON2bits	set	4081
    78  0000                     _INTCONbits	set	4082
    79  0000                     _IPR1bits	set	3999
    80  0000                     _LATB	set	3978
    81  0000                     _LATBbits	set	3978
    82  0000                     _OSCCON	set	4051
    83  0000                     _OSCCONbits	set	4051
    84  0000                     _OSCTUNEbits	set	3995
    85  0000                     _PIE1bits	set	3997
    86  0000                     _PIR1bits	set	3998
    87  0000                     _RCONbits	set	4048
    88  0000                     _RCREG	set	4014
    89  0000                     _RCSTA	set	4011
    90  0000                     _RCSTAbits	set	4011
    91  0000                     _SPBRG	set	4015
    92  0000                     _SPBRGH	set	4016
    93  0000                     _SSPADD	set	4040
    94  0000                     _SSPBUF	set	4041
    95  0000                     _SSPCON1	set	4038
    96  0000                     _SSPCON1bits	set	4038
    97  0000                     _SSPCON2	set	4037
    98  0000                     _SSPCON2bits	set	4037
    99  0000                     _SSPSTAT	set	4039
   100  0000                     _SSPSTATbits	set	4039
   101  0000                     _T0CON	set	4053
   102  0000                     _T0CONbits	set	4053
   103  0000                     _TMR0H	set	4055
   104  0000                     _TMR0L	set	4054
   105  0000                     _TMR1H	set	4047
   106  0000                     _TMR1L	set	4046
   107  0000                     _TRISB	set	3987
   108  0000                     _TRISCbits	set	3988
   109  0000                     _TXSTA	set	4012
   110  0000                     _TXSTAbits	set	4012
   111  0000                     _TRISB7	set	31903
   112                           
   113                           	psect	nvCOMRAM
   114  000052                     __pnvCOMRAM:
   115                           	opt stack 0
   116  000052                     _uc_ptr:
   117                           	opt stack 0
   118  000052                     	ds	2
   119                           
   120                           	psect	nvBANK0
   121  0000E0                     __pnvBANK0:
   122                           	opt stack 0
   123  0000E0                     _ic_ptr:
   124                           	opt stack 0
   125  0000E0                     	ds	2
   126                           
   127                           ; #config settings
   128  0000                     
   129                           	psect	cinit
   130  001882                     __pcinit:
   131                           	opt stack 0
   132  001882                     start_initialization:
   133                           	opt stack 0
   134  001882                     __initialization:
   135                           	opt stack 0
   136                           
   137                           ; Clear objects allocated to BANK2 (200 bytes)
   138  001882  EE02  F000         	lfsr	0,__pbssBANK2
   139  001886  0EC8               	movlw	200
   140  001888                     clear_0:
   141  001888  6AEE               	clrf	postinc0,c
   142  00188A  06E8               	decf	wreg,f,c
   143  00188C  E1FD               	bnz	clear_0
   144                           
   145                           ; Clear objects allocated to BANK1 (162 bytes)
   146  00188E  EE01  F000         	lfsr	0,__pbssBANK1
   147  001892  0EA2               	movlw	162
   148  001894                     clear_1:
   149  001894  6AEE               	clrf	postinc0,c
   150  001896  06E8               	decf	wreg,f,c
   151  001898  E1FD               	bnz	clear_1
   152                           
   153                           ; Clear objects allocated to BANK0 (54 bytes)
   154  00189A  EE00  F080         	lfsr	0,__pbssBANK0
   155  00189E  0E36               	movlw	54
   156  0018A0                     clear_2:
   157  0018A0  6AEE               	clrf	postinc0,c
   158  0018A2  06E8               	decf	wreg,f,c
   159  0018A4  E1FD               	bnz	clear_2
   160                           
   161                           ; Clear objects allocated to COMRAM (7 bytes)
   162  0018A6  EE00  F04B         	lfsr	0,__pbssCOMRAM
   163  0018AA  0E07               	movlw	7
   164  0018AC                     clear_3:
   165  0018AC  6AEE               	clrf	postinc0,c
   166  0018AE  06E8               	decf	wreg,f,c
   167  0018B0  E1FD               	bnz	clear_3
   168  0018B2                     end_of_initialization:
   169                           	opt stack 0
   170  0018B2                     __end_of__initialization:
   171                           	opt stack 0
   172  0018B2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   173  0018B4  6EF8               	movwf	tblptru,c
   174  0018B6  0100               	movlb	0
   175  0018B8  EF63  F003         	goto	_main	;jump to C main() function
   176                           tblptru	equ	0xFF8
   177                           postinc0	equ	0xFEE
   178                           wreg	equ	0xFE8
   179                           
   180                           	psect	bssCOMRAM
   181  00004B                     __pbssCOMRAM:
   182                           	opt stack 0
   183  00004B                     _arrayPlaceHolder:
   184                           	opt stack 0
   185  00004B                     	ds	2
   186  00004D                     _responding:
   187                           	opt stack 0
   188  00004D                     	ds	2
   189  00004F                     _ADCValue:
   190                           	opt stack 0
   191  00004F                     	ds	1
   192  000050                     _MQ_Main_Willing_to_block:
   193                           	opt stack 0
   194  000050                     	ds	1
   195  000051                     _USART_Status:
   196                           	opt stack 0
   197  000051                     	ds	1
   198                           tblptru	equ	0xFF8
   199                           postinc0	equ	0xFEE
   200                           wreg	equ	0xFE8
   201                           
   202                           	psect	bssBANK0
   203  000080                     __pbssBANK0:
   204                           	opt stack 0
   205  000080                     _ToMainLow_MQ:
   206                           	opt stack 0
   207  000080                     	ds	54
   208                           tblptru	equ	0xFF8
   209                           postinc0	equ	0xFEE
   210                           wreg	equ	0xFE8
   211                           
   212                           	psect	bssBANK1
   213  000100                     __pbssBANK1:
   214                           	opt stack 0
   215  000100                     _FromMainHigh_MQ:
   216                           	opt stack 0
   217  000100                     	ds	54
   218  000136                     _FromMainLow_MQ:
   219                           	opt stack 0
   220  000136                     	ds	54
   221  00016C                     _ToMainHigh_MQ:
   222                           	opt stack 0
   223  00016C                     	ds	54
   224                           tblptru	equ	0xFF8
   225                           postinc0	equ	0xFEE
   226                           wreg	equ	0xFE8
   227                           
   228                           	psect	bssBANK2
   229  000200                     __pbssBANK2:
   230                           	opt stack 0
   231  000200                     _ADCArray:
   232                           	opt stack 0
   233  000200                     	ds	200
   234                           tblptru	equ	0xFF8
   235                           postinc0	equ	0xFEE
   236                           wreg	equ	0xFE8
   237                           
   238                           	psect	cstackBANK1
   239  0001A2                     __pcstackBANK1:
   240                           	opt stack 0
   241  0001A2                     send_msg@qptr:
   242                           	opt stack 0
   243  0001A2                     recv_msg@qptr:
   244                           	opt stack 0
   245                           
   246                           ; 2 bytes @ 0x0
   247  0001A2                     	ds	2
   248  0001A4                     send_msg@length:
   249                           	opt stack 0
   250  0001A4                     recv_msg@maxlength:
   251                           	opt stack 0
   252                           
   253                           ; 1 bytes @ 0x2
   254  0001A4                     	ds	1
   255  0001A5                     send_msg@msgtype:
   256                           	opt stack 0
   257  0001A5                     recv_msg@msgtype:
   258                           	opt stack 0
   259                           
   260                           ; 2 bytes @ 0x3
   261  0001A5                     	ds	1
   262  0001A6                     send_msg@data:
   263                           	opt stack 0
   264                           
   265                           ; 2 bytes @ 0x4
   266  0001A6                     	ds	1
   267  0001A7                     recv_msg@data:
   268                           	opt stack 0
   269                           
   270                           ; 2 bytes @ 0x5
   271  0001A7                     	ds	1
   272  0001A8                     send_msg@tlength:
   273                           	opt stack 0
   274                           
   275                           ; 2 bytes @ 0x6
   276  0001A8                     	ds	1
   277  0001A9                     recv_msg@slot:
   278                           	opt stack 0
   279                           
   280                           ; 1 bytes @ 0x7
   281  0001A9                     	ds	1
   282  0001AA                     send_msg@slot:
   283                           	opt stack 0
   284  0001AA                     recv_msg@tlength:
   285                           	opt stack 0
   286                           
   287                           ; 2 bytes @ 0x8
   288  0001AA                     	ds	1
   289  0001AB                     send_msg@qmsg:
   290                           	opt stack 0
   291                           
   292                           ; 2 bytes @ 0x9
   293  0001AB                     	ds	1
   294  0001AC                     recv_msg@qmsg:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0xA
   298  0001AC                     	ds	1
   299  0001AD                     FromMainHigh_sendmsg@msgtype:
   300                           	opt stack 0
   301                           
   302                           ; 1 bytes @ 0xB
   303  0001AD                     	ds	1
   304  0001AE                     ToMainLow_recvmsg@msgtype:
   305                           	opt stack 0
   306  0001AE                     ToMainHigh_recvmsg@msgtype:
   307                           	opt stack 0
   308  0001AE                     FromMainHigh_sendmsg@data:
   309                           	opt stack 0
   310                           
   311                           ; 2 bytes @ 0xC
   312  0001AE                     	ds	2
   313  0001B0                     timer1_lthread@tptr:
   314                           	opt stack 0
   315  0001B0                     timer0_lthread@tptr:
   316                           	opt stack 0
   317  0001B0                     ToMainLow_recvmsg@data:
   318                           	opt stack 0
   319  0001B0                     ToMainHigh_recvmsg@data:
   320                           	opt stack 0
   321                           
   322                           ; 2 bytes @ 0xE
   323  0001B0                     	ds	2
   324  0001B2                     ToMainLow_recvmsg@maxlength:
   325                           	opt stack 0
   326  0001B2                     ToMainHigh_recvmsg@maxlength:
   327                           	opt stack 0
   328  0001B2                     timer1_lthread@msgtype:
   329                           	opt stack 0
   330  0001B2                     timer0_lthread@msgtype:
   331                           	opt stack 0
   332                           
   333                           ; 2 bytes @ 0x10
   334  0001B2                     	ds	2
   335  0001B4                     timer1_lthread@length:
   336                           	opt stack 0
   337  0001B4                     timer0_lthread@length:
   338                           	opt stack 0
   339                           
   340                           ; 2 bytes @ 0x12
   341  0001B4                     	ds	2
   342  0001B6                     timer1_lthread@msgbuffer:
   343                           	opt stack 0
   344  0001B6                     timer0_lthread@msgbuffer:
   345                           	opt stack 0
   346                           
   347                           ; 2 bytes @ 0x14
   348  0001B6                     	ds	2
   349  0001B8                     ??_timer1_lthread:
   350  0001B8                     ??_timer0_lthread:
   351                           
   352                           ; 0 bytes @ 0x16
   353  0001B8                     	ds	1
   354  0001B9                     timer1_lthread@retval:
   355                           	opt stack 0
   356  0001B9                     timer0_lthread@retval:
   357                           	opt stack 0
   358                           
   359                           ; 1 bytes @ 0x17
   360  0001B9                     	ds	1
   361  0001BA                     ??_main:
   362                           
   363                           ; 0 bytes @ 0x18
   364  0001BA                     	ds	1
   365  0001BB                     main@msgbuffer:
   366                           	opt stack 0
   367                           
   368                           ; 11 bytes @ 0x19
   369  0001BB                     	ds	11
   370  0001C6                     main@uthread_data:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x24
   374  0001C6                     	ds	2
   375  0001C8                     main@last_reg_recvd:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0x26
   379  0001C8                     	ds	1
   380  0001C9                     main@uc:
   381                           	opt stack 0
   382                           
   383                           ; 5 bytes @ 0x27
   384  0001C9                     	ds	5
   385  0001CE                     main@t1thread_data:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x2C
   389  0001CE                     	ds	2
   390  0001D0                     main@t0thread_data:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x2E
   394  0001D0                     	ds	2
   395  0001D2                     main@msgtype:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x30
   399  0001D2                     	ds	1
   400  0001D3                     main@length:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0x31
   404  0001D3                     	ds	1
   405  0001D4                     main@ic:
   406                           	opt stack 0
   407                           
   408                           ; 28 bytes @ 0x32
   409  0001D4                     	ds	28
   410                           tblptru	equ	0xFF8
   411                           postinc0	equ	0xFEE
   412                           wreg	equ	0xFE8
   413                           
   414                           	psect	cstackBANK0
   415  0000B6                     __pcstackBANK0:
   416                           	opt stack 0
   417  0000B6                     i2c_int_handler@length:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x0
   421  0000B6                     	ds	2
   422  0000B8                     i2c_int_handler@msgbuffer:
   423                           	opt stack 0
   424                           
   425                           ; 3 bytes @ 0x2
   426  0000B8                     	ds	3
   427  0000BB                     i2c_int_handler@error_buf:
   428                           	opt stack 0
   429                           
   430                           ; 3 bytes @ 0x5
   431  0000BB                     	ds	3
   432  0000BE                     i2c_int_handler@data_written:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x8
   436  0000BE                     	ds	1
   437  0000BF                     i2c_int_handler@overrun_error:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x9
   441  0000BF                     	ds	1
   442  0000C0                     i2c_int_handler@i2c_data:
   443                           	opt stack 0
   444                           
   445                           ; 1 bytes @ 0xA
   446  0000C0                     	ds	1
   447  0000C1                     i2c_int_handler@msg_to_send:
   448                           	opt stack 0
   449                           
   450                           ; 1 bytes @ 0xB
   451  0000C1                     	ds	1
   452  0000C2                     i2c_int_handler@msg_ready:
   453                           	opt stack 0
   454                           
   455                           ; 1 bytes @ 0xC
   456  0000C2                     	ds	1
   457  0000C3                     i2c_int_handler@data_read:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0xD
   461  0000C3                     	ds	1
   462  0000C4                     ??_InterruptHandlerHigh:
   463                           
   464                           ; 0 bytes @ 0xE
   465  0000C4                     	ds	16
   466  0000D4                     ?_in_high_int:
   467                           	opt stack 0
   468  0000D4                     ?___lwmod:
   469                           	opt stack 0
   470  0000D4                     i2c_configure_slave@addr:
   471                           	opt stack 0
   472  0000D4                     OpenADC@config2:
   473                           	opt stack 0
   474  0000D4                     OpenTimer0@config:
   475                           	opt stack 0
   476  0000D4                     Delay1KTCYx@unit:
   477                           	opt stack 0
   478  0000D4                     uart_lthread@uptr:
   479                           	opt stack 0
   480  0000D4                     init_timer1_lthread@tptr:
   481                           	opt stack 0
   482  0000D4                     init_timer0_lthread@tptr:
   483                           	opt stack 0
   484  0000D4                     init_uart_recv@uc:
   485                           	opt stack 0
   486  0000D4                     start_i2c_slave_reply@msg:
   487                           	opt stack 0
   488  0000D4                     init_i2c@ic:
   489                           	opt stack 0
   490  0000D4                     init_queue@qptr:
   491                           	opt stack 0
   492  0000D4                     check_msg@qptr:
   493                           	opt stack 0
   494  0000D4                     OpenUSART@spbrg:
   495                           	opt stack 0
   496  0000D4                     ___lwmod@dividend:
   497                           	opt stack 0
   498  0000D4                     memcpy@d1:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x1E
   502  0000D4                     	ds	1
   503  0000D5                     OpenADC@portconfig:
   504                           	opt stack 0
   505                           
   506                           ; 1 bytes @ 0x1F
   507  0000D5                     	ds	1
   508  0000D6                     ??_OpenADC:
   509  0000D6                     ??_OpenUSART:
   510  0000D6                     ??_start_i2c_slave_reply:
   511  0000D6                     ??_init_queue:
   512  0000D6                     ??_check_msg:
   513  0000D6                     ?_in_low_int:
   514                           	opt stack 0
   515  0000D6                     uart_lthread@msgtype:
   516                           	opt stack 0
   517  0000D6                     ___lwmod@divisor:
   518                           	opt stack 0
   519  0000D6                     memcpy@s1:
   520                           	opt stack 0
   521                           
   522                           ; 2 bytes @ 0x20
   523  0000D6                     	ds	1
   524  0000D7                     init_queue@i:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x21
   528  0000D7                     	ds	1
   529  0000D8                     ??_init_queues:
   530  0000D8                     ??___lwmod:
   531  0000D8                     ?_in_main:
   532                           	opt stack 0
   533  0000D8                     start_i2c_slave_reply@length:
   534                           	opt stack 0
   535  0000D8                     OpenADC@config:
   536                           	opt stack 0
   537  0000D8                     uart_lthread@length:
   538                           	opt stack 0
   539  0000D8                     memcpy@n:
   540                           	opt stack 0
   541                           
   542                           ; 2 bytes @ 0x22
   543  0000D8                     	ds	1
   544  0000D9                     ??_initADC:
   545  0000D9                     OpenUSART@config:
   546                           	opt stack 0
   547  0000D9                     ___lwmod@counter:
   548                           	opt stack 0
   549                           
   550                           ; 1 bytes @ 0x23
   551  0000D9                     	ds	1
   552  0000DA                     ??_block_on_To_msgqueues:
   553  0000DA                     uart_lthread@msgbuffer:
   554                           	opt stack 0
   555  0000DA                     memcpy@d:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x24
   559  0000DA                     	ds	1
   560  0000DB                     initADC@ADCValue:
   561                           	opt stack 0
   562                           
   563                           ; 2 bytes @ 0x25
   564  0000DB                     	ds	1
   565  0000DC                     memcpy@s:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x26
   569  0000DC                     	ds	2
   570  0000DE                     ??_send_msg:
   571  0000DE                     ??_recv_msg:
   572                           
   573                           ; 0 bytes @ 0x28
   574  0000DE                     	ds	1
   575  0000DF                     FromMainHigh_sendmsg@length:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x29
   579  0000DF                     	ds	1
   580  0000E0                     tblptru	equ	0xFF8
   581                           postinc0	equ	0xFEE
   582                           wreg	equ	0xFE8
   583                           
   584                           ; 0 bytes @ 0x2A
   585                           
   586                           	psect	cstackCOMRAM
   587  000001                     __pcstackCOMRAM:
   588                           	opt stack 0
   589  000001                     ReadUSART@data:
   590                           	opt stack 0
   591  000001                     i1memcpy@d1:
   592                           	opt stack 0
   593                           
   594                           ; 2 bytes @ 0x0
   595  000001                     	ds	2
   596  000003                     i1memcpy@s1:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x2
   600  000003                     	ds	2
   601  000005                     i1memcpy@n:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x4
   605  000005                     	ds	2
   606  000007                     i1memcpy@d:
   607                           	opt stack 0
   608                           
   609                           ; 2 bytes @ 0x6
   610  000007                     	ds	2
   611  000009                     i1memcpy@s:
   612                           	opt stack 0
   613                           
   614                           ; 2 bytes @ 0x8
   615  000009                     	ds	2
   616  00000B                     i1send_msg@qptr:
   617                           	opt stack 0
   618                           
   619                           ; 2 bytes @ 0xA
   620  00000B                     	ds	2
   621  00000D                     i1send_msg@length:
   622                           	opt stack 0
   623                           
   624                           ; 1 bytes @ 0xC
   625  00000D                     	ds	1
   626  00000E                     i1send_msg@msgtype:
   627                           	opt stack 0
   628                           
   629                           ; 1 bytes @ 0xD
   630  00000E                     	ds	1
   631  00000F                     i1send_msg@data:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0xE
   635  00000F                     	ds	2
   636  000011                     ??i1_send_msg:
   637                           
   638                           ; 0 bytes @ 0x10
   639  000011                     	ds	1
   640  000012                     i1send_msg@tlength:
   641                           	opt stack 0
   642                           
   643                           ; 2 bytes @ 0x11
   644  000012                     	ds	2
   645  000014                     i1send_msg@slot:
   646                           	opt stack 0
   647                           
   648                           ; 1 bytes @ 0x13
   649  000014                     	ds	1
   650  000015                     i1send_msg@qmsg:
   651                           	opt stack 0
   652                           
   653                           ; 2 bytes @ 0x14
   654  000015                     	ds	2
   655  000017                     ToMainLow_sendmsg@msgtype:
   656                           	opt stack 0
   657                           
   658                           ; 1 bytes @ 0x16
   659  000017                     	ds	1
   660  000018                     ToMainLow_sendmsg@data:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x17
   664  000018                     	ds	2
   665  00001A                     ToMainLow_sendmsg@length:
   666                           	opt stack 0
   667                           
   668                           ; 1 bytes @ 0x19
   669  00001A                     	ds	1
   670  00001B                     ??_uart_recv_int_handler:
   671                           
   672                           ; 0 bytes @ 0x1A
   673  00001B                     	ds	1
   674  00001C                     ??_InterruptHandlerLow:
   675                           
   676                           ; 0 bytes @ 0x1B
   677  00001C                     	ds	17
   678  00002D                     ?_ReadADC:
   679                           	opt stack 0
   680  00002D                     ?i2_in_high_int:
   681                           	opt stack 0
   682  00002D                     handle_start@data_read:
   683                           	opt stack 0
   684  00002D                     i2start_i2c_slave_reply@msg:
   685                           	opt stack 0
   686  00002D                     i2check_msg@qptr:
   687                           	opt stack 0
   688  00002D                     i2memcpy@d1:
   689                           	opt stack 0
   690                           
   691                           ; 2 bytes @ 0x2C
   692  00002D                     	ds	2
   693  00002F                     ??i2_start_i2c_slave_reply:
   694  00002F                     ??i2_check_msg:
   695  00002F                     ?i2_in_low_int:
   696                           	opt stack 0
   697  00002F                     i2memcpy@s1:
   698                           	opt stack 0
   699                           
   700                           ; 2 bytes @ 0x2E
   701  00002F                     	ds	2
   702  000031                     i2start_i2c_slave_reply@length:
   703                           	opt stack 0
   704  000031                     i2memcpy@n:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x30
   708  000031                     	ds	2
   709  000033                     i2memcpy@d:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0x32
   713  000033                     	ds	2
   714  000035                     i2memcpy@s:
   715                           	opt stack 0
   716                           
   717                           ; 2 bytes @ 0x34
   718  000035                     	ds	2
   719  000037                     i2send_msg@qptr:
   720                           	opt stack 0
   721                           
   722                           ; 2 bytes @ 0x36
   723  000037                     	ds	2
   724  000039                     i2send_msg@length:
   725                           	opt stack 0
   726                           
   727                           ; 1 bytes @ 0x38
   728  000039                     	ds	1
   729  00003A                     i2send_msg@msgtype:
   730                           	opt stack 0
   731                           
   732                           ; 1 bytes @ 0x39
   733  00003A                     	ds	1
   734  00003B                     i2send_msg@data:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0x3A
   738  00003B                     	ds	2
   739  00003D                     ??i2_send_msg:
   740                           
   741                           ; 0 bytes @ 0x3C
   742  00003D                     	ds	1
   743  00003E                     i2send_msg@tlength:
   744                           	opt stack 0
   745                           
   746                           ; 2 bytes @ 0x3D
   747  00003E                     	ds	2
   748  000040                     i2send_msg@slot:
   749                           	opt stack 0
   750                           
   751                           ; 1 bytes @ 0x3F
   752  000040                     	ds	1
   753  000041                     i2send_msg@qmsg:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x40
   757  000041                     	ds	2
   758  000043                     ToMainHigh_sendmsg@msgtype:
   759                           	opt stack 0
   760                           
   761                           ; 1 bytes @ 0x42
   762  000043                     	ds	1
   763  000044                     ToMainHigh_sendmsg@data:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0x43
   767  000044                     	ds	2
   768  000046                     ToMainHigh_sendmsg@length:
   769                           	opt stack 0
   770                           
   771                           ; 1 bytes @ 0x45
   772  000046                     	ds	1
   773  000047                     ??_i2c_int_handler:
   774                           
   775                           ; 0 bytes @ 0x46
   776  000047                     	ds	2
   777  000049                     InterruptHandlerHigh@pureADCValue:
   778                           	opt stack 0
   779                           
   780                           ; 2 bytes @ 0x48
   781  000049                     	ds	2
   782                           tblptru	equ	0xFF8
   783                           postinc0	equ	0xFEE
   784                           wreg	equ	0xFE8
   785                           
   786 ;;
   787 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   788 ;;
   789 ;; *************** function _main *****************
   790 ;; Defined at:
   791 ;;		line 112 in file "../src/main.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;		None
   794 ;; Auto vars:     Size  Location     Type
   795 ;;  ic             28   50[BANK1 ] struct __i2c_comm
   796 ;;  msgbuffer      11   25[BANK1 ] unsigned char [11]
   797 ;;  uc              5   39[BANK1 ] struct __uart_comm
   798 ;;  t0thread_dat    2   46[BANK1 ] struct __timer0_thread_s
   799 ;;  t1thread_dat    2   44[BANK1 ] struct __timer1_thread_s
   800 ;;  uthread_data    2   36[BANK1 ] struct __uart_thread_str
   801 ;;  length          1   49[BANK1 ] char 
   802 ;;  msgtype         1   48[BANK1 ] unsigned char 
   803 ;;  last_reg_rec    1   38[BANK1 ] unsigned char 
   804 ;;  i               1    0        unsigned char 
   805 ;;  c               1    0        unsigned char 
   806 ;; Return value:  Size  Location     Type
   807 ;;		None               void
   808 ;; Registers used:
   809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   815 ;;      Params:         0       0       0       0       0
   816 ;;      Locals:         0       0      53       0       0
   817 ;;      Temps:          0       0       1       0       0
   818 ;;      Totals:         0       0      54       0       0
   819 ;;Total ram usage:       54 bytes
   820 ;; Hardware stack levels required when called:   14
   821 ;; This function calls:
   822 ;;		_OpenTimer0
   823 ;;		_OpenUSART
   824 ;;		_ToMainHigh_recvmsg
   825 ;;		_ToMainLow_recvmsg
   826 ;;		_block_on_To_msgqueues
   827 ;;		_enable_interrupts
   828 ;;		_i2c_configure_slave
   829 ;;		_initADC
   830 ;;		_init_i2c
   831 ;;		_init_queues
   832 ;;		_init_timer0_lthread
   833 ;;		_init_timer1_lthread
   834 ;;		_init_uart_recv
   835 ;;		_start_i2c_slave_reply
   836 ;;		_timer0_lthread
   837 ;;		_timer1_lthread
   838 ;;		_uart_lthread
   839 ;; This function is called by:
   840 ;;		Startup code after reset
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           	psect	text0
   845  0006C6                     __ptext0:
   846                           	opt stack 0
   847  0006C6                     _main:
   848                           	opt stack 16
   849                           
   850                           ;main.c: 113: OSCCON = 0x82;
   851                           
   852                           ;incstack = 0
   853  0006C6  0E82               	movlw	130
   854  0006C8  6ED3               	movwf	4051,c	;volatile
   855                           
   856                           ;main.c: 114: OSCTUNEbits.PLLEN = 0;
   857  0006CA  9C9B               	bcf	3995,6,c	;volatile
   858                           
   859                           ;main.c: 116: char c;
   860                           ;main.c: 117: signed char length;
   861                           ;main.c: 118: unsigned char msgtype;
   862                           ;main.c: 119: unsigned char last_reg_recvd;
   863                           ;main.c: 120: uart_comm uc;
   864                           ;main.c: 121: i2c_comm ic;
   865                           ;main.c: 122: unsigned char msgbuffer[10 + 1];
   866                           ;main.c: 123: unsigned char i;
   867                           ;main.c: 124: uart_thread_struct uthread_data;
   868                           ;main.c: 125: timer1_thread_struct t1thread_data;
   869                           ;main.c: 126: timer0_thread_struct t0thread_data;
   870                           ;main.c: 133: OSCCON = 0x82;
   871  0006CC  0E82               	movlw	130
   872  0006CE  6ED3               	movwf	4051,c	;volatile
   873                           
   874                           ;main.c: 134: OSCTUNEbits.PLLEN = 0;
   875  0006D0  9C9B               	bcf	3995,6,c	;volatile
   876                           
   877                           ;main.c: 138: init_uart_recv(&uc);
   878  0006D2  0101               	movlb	1	; () banked
   879  0006D4  0E01               	movlw	high main@uc
   880  0006D6  0100               	movlb	0	; () banked
   881  0006D8  0100               	movlb	0	; () banked
   882  0006DA  6FD5               	movwf	(init_uart_recv@uc+1)& (0+255),b
   883  0006DC  0101               	movlb	1	; () banked
   884  0006DE  0EC9               	movlw	low main@uc
   885  0006E0  0100               	movlb	0	; () banked
   886  0006E2  0100               	movlb	0	; () banked
   887  0006E4  6FD4               	movwf	init_uart_recv@uc& (0+255),b
   888  0006E6  EC0C  F00D         	call	_init_uart_recv	;wreg free
   889                           
   890                           ;main.c: 141: init_i2c(&ic);
   891  0006EA  0101               	movlb	1	; () banked
   892  0006EC  0E01               	movlw	high main@ic
   893  0006EE  0100               	movlb	0	; () banked
   894  0006F0  0100               	movlb	0	; () banked
   895  0006F2  6FD5               	movwf	(init_i2c@ic+1)& (0+255),b
   896  0006F4  0101               	movlb	1	; () banked
   897  0006F6  0ED4               	movlw	low main@ic
   898  0006F8  0100               	movlb	0	; () banked
   899  0006FA  0100               	movlb	0	; () banked
   900  0006FC  6FD4               	movwf	init_i2c@ic& (0+255),b
   901  0006FE  ECAE  F00A         	call	_init_i2c	;wreg free
   902                           
   903                           ;main.c: 144: init_timer1_lthread(&t1thread_data);
   904  000702  0101               	movlb	1	; () banked
   905  000704  0E01               	movlw	high main@t1thread_data
   906  000706  0100               	movlb	0	; () banked
   907  000708  0100               	movlb	0	; () banked
   908  00070A  6FD5               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   909  00070C  0101               	movlb	1	; () banked
   910  00070E  0ECE               	movlw	low main@t1thread_data
   911  000710  0100               	movlb	0	; () banked
   912  000712  0100               	movlb	0	; () banked
   913  000714  6FD4               	movwf	init_timer1_lthread@tptr& (0+255),b
   914  000716  EC35  F00D         	call	_init_timer1_lthread	;wreg free
   915                           
   916                           ;main.c: 146: init_timer0_lthread(&t0thread_data);
   917  00071A  0101               	movlb	1	; () banked
   918  00071C  0E01               	movlw	high main@t0thread_data
   919  00071E  0100               	movlb	0	; () banked
   920  000720  0100               	movlb	0	; () banked
   921  000722  6FD5               	movwf	(init_timer0_lthread@tptr+1)& (0+255),b
   922  000724  0101               	movlb	1	; () banked
   923  000726  0ED0               	movlw	low main@t0thread_data
   924  000728  0100               	movlb	0	; () banked
   925  00072A  0100               	movlb	0	; () banked
   926  00072C  6FD4               	movwf	init_timer0_lthread@tptr& (0+255),b
   927  00072E  EC3E  F00D         	call	_init_timer0_lthread	;wreg free
   928                           
   929                           ;main.c: 148: init_queues();
   930  000732  EC77  F00A         	call	_init_queues	;wreg free
   931                           
   932                           ;main.c: 150: initADC();
   933  000736  EC5C  F00B         	call	_initADC	;wreg free
   934                           
   935                           ;main.c: 153: TRISB = 0x0;
   936  00073A  0E00               	movlw	0
   937  00073C  6E93               	movwf	3987,c	;volatile
   938                           
   939                           ;main.c: 154: LATB = 0x0;
   940  00073E  0E00               	movlw	0
   941  000740  6E8A               	movwf	3978,c	;volatile
   942                           
   943                           ;main.c: 166: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11111111);
   944  000742  0EDF               	movlw	223
   945  000744  ECAB  F00C         	call	_OpenTimer0
   946                           
   947                           ;main.c: 171: enable_interrupts();
   948  000748  EC50  F00D         	call	_enable_interrupts	;wreg free
   949                           
   950                           ;main.c: 176: IPR1bits.TMR1IP = 0;
   951  00074C  909F               	bcf	3999,0,c	;volatile
   952                           
   953                           ;main.c: 178: IPR1bits.RCIP = 0;
   954  00074E  9A9F               	bcf	3999,5,c	;volatile
   955                           
   956                           ;main.c: 180: IPR1bits.SSPIP = 1;
   957  000750  869F               	bsf	3999,3,c	;volatile
   958                           
   959                           ;main.c: 182: IPR1bits.ADIP = 1;
   960  000752  8C9F               	bsf	3999,6,c	;volatile
   961                           
   962                           ;main.c: 192: i2c_configure_slave(0x9E);
   963  000754  0E9E               	movlw	158
   964  000756  ECC0  F00C         	call	_i2c_configure_slave
   965                           
   966                           ;main.c: 205: PIE1bits.SSPIE = 1;
   967  00075A  869D               	bsf	3997,3,c	;volatile
   968                           
   969                           ;main.c: 208: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
   970                           ;main.c: 209: 0b11111111 & 0b11101111, 0x19);
   971  00075C  0E00               	movlw	0
   972  00075E  0100               	movlb	0	; () banked
   973  000760  0100               	movlb	0	; () banked
   974  000762  6FD5               	movwf	(OpenUSART@spbrg+1)& (0+255),b
   975  000764  0E19               	movlw	25
   976  000766  0100               	movlb	0	; () banked
   977  000768  6FD4               	movwf	OpenUSART@spbrg& (0+255),b
   978  00076A  0E6C               	movlw	108
   979  00076C  ECF8  F008         	call	_OpenUSART
   980  000770                     l3156:
   981                           
   982                           ;main.c: 233: block_on_To_msgqueues();
   983  000770  EC57  F008         	call	_block_on_To_msgqueues	;wreg free
   984                           
   985                           ;main.c: 240: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
   986  000774  0101               	movlb	1	; () banked
   987  000776  0E01               	movlw	high main@msgtype
   988  000778  0101               	movlb	1	; () banked
   989  00077A  0101               	movlb	1	; () banked
   990  00077C  6FAF               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
   991  00077E  0101               	movlb	1	; () banked
   992  000780  0ED2               	movlw	low main@msgtype
   993  000782  0101               	movlb	1	; () banked
   994  000784  0101               	movlb	1	; () banked
   995  000786  6FAE               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
   996  000788  0101               	movlb	1	; () banked
   997  00078A  0E01               	movlw	high main@msgbuffer
   998  00078C  0101               	movlb	1	; () banked
   999  00078E  0101               	movlb	1	; () banked
  1000  000790  6FB1               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1001  000792  0101               	movlb	1	; () banked
  1002  000794  0EBB               	movlw	low main@msgbuffer
  1003  000796  0101               	movlb	1	; () banked
  1004  000798  0101               	movlb	1	; () banked
  1005  00079A  6FB0               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1006  00079C  0E0A               	movlw	10
  1007  00079E  ECC1  F00B         	call	_ToMainHigh_recvmsg
  1008  0007A2  0101               	movlb	1	; () banked
  1009  0007A4  0101               	movlb	1	; () banked
  1010  0007A6  6FD3               	movwf	main@length& (0+255),b
  1011                           
  1012                           ; BSR set to: 1
  1013                           ;main.c: 241: if (length < 0) {
  1014  0007A8  0101               	movlb	1	; () banked
  1015  0007AA  0101               	movlb	1	; () banked
  1016  0007AC  BFD3               	btfsc	main@length& (0+255),7,b
  1017  0007AE  D061               	goto	l3182
  1018  0007B0  D051               	goto	l3180
  1019  0007B2                     l3164:
  1020                           
  1021                           ; BSR set to: 1
  1022                           ;main.c: 249: {
  1023                           ;main.c: 250: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1024  0007B2  0101               	movlb	1	; () banked
  1025  0007B4  0E01               	movlw	high main@t0thread_data
  1026  0007B6  0101               	movlb	1	; () banked
  1027  0007B8  0101               	movlb	1	; () banked
  1028  0007BA  6FB1               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1029  0007BC  0101               	movlb	1	; () banked
  1030  0007BE  0ED0               	movlw	low main@t0thread_data
  1031  0007C0  0101               	movlb	1	; () banked
  1032  0007C2  0101               	movlb	1	; () banked
  1033  0007C4  6FB0               	movwf	timer0_lthread@tptr& (0+255),b
  1034  0007C6  0101               	movlb	1	; () banked
  1035  0007C8  0101               	movlb	1	; () banked
  1036  0007CA  C1D2  F1B2         	movff	main@msgtype,timer0_lthread@msgtype
  1037  0007CE  0101               	movlb	1	; () banked
  1038  0007D0  0101               	movlb	1	; () banked
  1039  0007D2  6BB3               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1040  0007D4  0101               	movlb	1	; () banked
  1041  0007D6  0101               	movlb	1	; () banked
  1042  0007D8  51D3               	movf	main@length& (0+255),w,b
  1043  0007DA  0101               	movlb	1	; () banked
  1044  0007DC  0101               	movlb	1	; () banked
  1045  0007DE  6FB4               	movwf	timer0_lthread@length& (0+255),b
  1046  0007E0  0101               	movlb	1	; () banked
  1047  0007E2  6BB5               	clrf	(timer0_lthread@length+1)& (0+255),b
  1048  0007E4  0101               	movlb	1	; () banked
  1049  0007E6  BFB4               	btfsc	timer0_lthread@length& (0+255),7,b
  1050  0007E8  07B5               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1051  0007EA  0101               	movlb	1	; () banked
  1052  0007EC  0E01               	movlw	high main@msgbuffer
  1053  0007EE  0101               	movlb	1	; () banked
  1054  0007F0  0101               	movlb	1	; () banked
  1055  0007F2  6FB7               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1056  0007F4  0101               	movlb	1	; () banked
  1057  0007F6  0EBB               	movlw	low main@msgbuffer
  1058  0007F8  0101               	movlb	1	; () banked
  1059  0007FA  0101               	movlb	1	; () banked
  1060  0007FC  6FB6               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1061  0007FE  EC3E  F00A         	call	_timer0_lthread	;wreg free
  1062                           
  1063                           ;main.c: 251: break;
  1064  000802  D037               	goto	l3182
  1065  000804                     l325:
  1066                           
  1067                           ;main.c: 254: case 41:
  1068                           ;main.c: 255: {
  1069                           ;main.c: 258: last_reg_recvd = msgbuffer[0];
  1070  000804  C1BB  F1C8         	movff	main@msgbuffer,main@last_reg_recvd
  1071                           
  1072                           ;main.c: 259: break;
  1073  000808  D034               	goto	l3182
  1074  00080A                     l3170:
  1075                           
  1076                           ; BSR set to: 1
  1077                           ;main.c: 287: {
  1078                           ;main.c: 288: length = 1;
  1079  00080A  0101               	movlb	1	; () banked
  1080  00080C  6FBA               	movwf	??_main& (0+255),b
  1081  00080E  0E01               	movlw	1
  1082  000810  0101               	movlb	1	; () banked
  1083  000812  0101               	movlb	1	; () banked
  1084  000814  6FD3               	movwf	main@length& (0+255),b
  1085  000816  0101               	movlb	1	; () banked
  1086  000818  51BA               	movf	??_main& (0+255),w,b
  1087                           
  1088                           ;main.c: 291: break;
  1089  00081A  D00C               	goto	l3176
  1090  00081C                     l3174:
  1091  00081C  0101               	movlb	1	; () banked
  1092  00081E  0101               	movlb	1	; () banked
  1093  000820  51C8               	movf	main@last_reg_recvd& (0+255),w,b
  1094                           
  1095                           ; Switch size 1, requested type "space"
  1096                           ; Number of cases is 3, Range of values is 168 to 170
  1097                           ; switch strategies available:
  1098                           ; Name         Instructions Cycles
  1099                           ; simple_byte           10     6 (average)
  1100                           ;	Chosen strategy is simple_byte
  1101  000822  0AA8               	xorlw	168	; case 168
  1102  000824  B4D8               	btfsc	status,2,c
  1103  000826  D7F1               	goto	l3170
  1104  000828  0A01               	xorlw	1	; case 169
  1105  00082A  B4D8               	btfsc	status,2,c
  1106  00082C  D7EE               	goto	l3170
  1107  00082E  0A03               	xorlw	3	; case 170
  1108  000830  B4D8               	btfsc	status,2,c
  1109  000832  D7EB               	goto	l3170
  1110  000834                     l3176:
  1111                           
  1112                           ; BSR set to: 1
  1113                           ;main.c: 294: start_i2c_slave_reply(length, msgbuffer);
  1114  000834  0101               	movlb	1	; () banked
  1115  000836  0E01               	movlw	high main@msgbuffer
  1116  000838  0100               	movlb	0	; () banked
  1117  00083A  0100               	movlb	0	; () banked
  1118  00083C  6FD5               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1119  00083E  0101               	movlb	1	; () banked
  1120  000840  0EBB               	movlw	low main@msgbuffer
  1121  000842  0100               	movlb	0	; () banked
  1122  000844  0100               	movlb	0	; () banked
  1123  000846  6FD4               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1124  000848  0101               	movlb	1	; () banked
  1125  00084A  0101               	movlb	1	; () banked
  1126  00084C  51D3               	movf	main@length& (0+255),w,b
  1127  00084E  EC52  F005         	call	_start_i2c_slave_reply
  1128                           
  1129                           ;main.c: 295: break;
  1130  000852  D00F               	goto	l3182
  1131  000854                     l3180:
  1132  000854  0101               	movlb	1	; () banked
  1133  000856  0101               	movlb	1	; () banked
  1134  000858  51D2               	movf	main@msgtype& (0+255),w,b
  1135                           
  1136                           ; Switch size 1, requested type "space"
  1137                           ; Number of cases is 4, Range of values is 10 to 42
  1138                           ; switch strategies available:
  1139                           ; Name         Instructions Cycles
  1140                           ; simple_byte           13     7 (average)
  1141                           ;	Chosen strategy is simple_byte
  1142  00085A  0A0A               	xorlw	10	; case 10
  1143  00085C  B4D8               	btfsc	status,2,c
  1144  00085E  D7A9               	goto	l3164
  1145  000860  0A22               	xorlw	34	; case 40
  1146  000862  B4D8               	btfsc	status,2,c
  1147  000864  D7CF               	goto	l325
  1148  000866  0A01               	xorlw	1	; case 41
  1149  000868  B4D8               	btfsc	status,2,c
  1150  00086A  D7CC               	goto	l325
  1151  00086C  0A03               	xorlw	3	; case 42
  1152  00086E  B4D8               	btfsc	status,2,c
  1153  000870  D7D5               	goto	l3174
  1154  000872                     l3182:
  1155                           
  1156                           ;main.c: 303: }
  1157                           ;main.c: 306: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1158  000872  0101               	movlb	1	; () banked
  1159  000874  0E01               	movlw	high main@msgtype
  1160  000876  0101               	movlb	1	; () banked
  1161  000878  0101               	movlb	1	; () banked
  1162  00087A  6FAF               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1163  00087C  0101               	movlb	1	; () banked
  1164  00087E  0ED2               	movlw	low main@msgtype
  1165  000880  0101               	movlb	1	; () banked
  1166  000882  0101               	movlb	1	; () banked
  1167  000884  6FAE               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1168  000886  0101               	movlb	1	; () banked
  1169  000888  0E01               	movlw	high main@msgbuffer
  1170  00088A  0101               	movlb	1	; () banked
  1171  00088C  0101               	movlb	1	; () banked
  1172  00088E  6FB1               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1173  000890  0101               	movlb	1	; () banked
  1174  000892  0EBB               	movlw	low main@msgbuffer
  1175  000894  0101               	movlb	1	; () banked
  1176  000896  0101               	movlb	1	; () banked
  1177  000898  6FB0               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1178  00089A  0E0A               	movlw	10
  1179  00089C  ECA0  F00B         	call	_ToMainLow_recvmsg
  1180  0008A0  0101               	movlb	1	; () banked
  1181  0008A2  0101               	movlb	1	; () banked
  1182  0008A4  6FD3               	movwf	main@length& (0+255),b
  1183                           
  1184                           ; BSR set to: 1
  1185                           ;main.c: 307: if (length < 0) {
  1186  0008A6  0101               	movlb	1	; () banked
  1187  0008A8  0101               	movlb	1	; () banked
  1188  0008AA  BFD3               	btfsc	main@length& (0+255),7,b
  1189  0008AC  D761               	goto	l3156
  1190  0008AE  D052               	goto	l3194
  1191  0008B0                     l3188:
  1192                           
  1193                           ; BSR set to: 1
  1194                           ;main.c: 315: {
  1195                           ;main.c: 316: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1196  0008B0  0101               	movlb	1	; () banked
  1197  0008B2  0E01               	movlw	high main@t1thread_data
  1198  0008B4  0101               	movlb	1	; () banked
  1199  0008B6  0101               	movlb	1	; () banked
  1200  0008B8  6FB1               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1201  0008BA  0101               	movlb	1	; () banked
  1202  0008BC  0ECE               	movlw	low main@t1thread_data
  1203  0008BE  0101               	movlb	1	; () banked
  1204  0008C0  0101               	movlb	1	; () banked
  1205  0008C2  6FB0               	movwf	timer1_lthread@tptr& (0+255),b
  1206  0008C4  0101               	movlb	1	; () banked
  1207  0008C6  0101               	movlb	1	; () banked
  1208  0008C8  C1D2  F1B2         	movff	main@msgtype,timer1_lthread@msgtype
  1209  0008CC  0101               	movlb	1	; () banked
  1210  0008CE  0101               	movlb	1	; () banked
  1211  0008D0  6BB3               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1212  0008D2  0101               	movlb	1	; () banked
  1213  0008D4  0101               	movlb	1	; () banked
  1214  0008D6  51D3               	movf	main@length& (0+255),w,b
  1215  0008D8  0101               	movlb	1	; () banked
  1216  0008DA  0101               	movlb	1	; () banked
  1217  0008DC  6FB4               	movwf	timer1_lthread@length& (0+255),b
  1218  0008DE  0101               	movlb	1	; () banked
  1219  0008E0  6BB5               	clrf	(timer1_lthread@length+1)& (0+255),b
  1220  0008E2  0101               	movlb	1	; () banked
  1221  0008E4  BFB4               	btfsc	timer1_lthread@length& (0+255),7,b
  1222  0008E6  07B5               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1223  0008E8  0101               	movlb	1	; () banked
  1224  0008EA  0E01               	movlw	high main@msgbuffer
  1225  0008EC  0101               	movlb	1	; () banked
  1226  0008EE  0101               	movlb	1	; () banked
  1227  0008F0  6FB7               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1228  0008F2  0101               	movlb	1	; () banked
  1229  0008F4  0EBB               	movlw	low main@msgbuffer
  1230  0008F6  0101               	movlb	1	; () banked
  1231  0008F8  0101               	movlb	1	; () banked
  1232  0008FA  6FB6               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1233  0008FC  EC05  F00A         	call	_timer1_lthread	;wreg free
  1234                           
  1235                           ;main.c: 317: break;
  1236  000900  D737               	goto	l3156
  1237  000902                     l3190:
  1238                           
  1239                           ;main.c: 320: case 31:
  1240                           ;main.c: 321: {
  1241                           ;main.c: 322: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1242  000902  0101               	movlb	1	; () banked
  1243  000904  0E01               	movlw	high main@uthread_data
  1244  000906  0100               	movlb	0	; () banked
  1245  000908  0100               	movlb	0	; () banked
  1246  00090A  6FD5               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1247  00090C  0101               	movlb	1	; () banked
  1248  00090E  0EC6               	movlw	low main@uthread_data
  1249  000910  0100               	movlb	0	; () banked
  1250  000912  0100               	movlb	0	; () banked
  1251  000914  6FD4               	movwf	uart_lthread@uptr& (0+255),b
  1252  000916  0101               	movlb	1	; () banked
  1253  000918  0100               	movlb	0	; () banked
  1254  00091A  C1D2  F0D6         	movff	main@msgtype,uart_lthread@msgtype
  1255  00091E  0100               	movlb	0	; () banked
  1256  000920  0100               	movlb	0	; () banked
  1257  000922  6BD7               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1258  000924  0101               	movlb	1	; () banked
  1259  000926  0101               	movlb	1	; () banked
  1260  000928  51D3               	movf	main@length& (0+255),w,b
  1261  00092A  0100               	movlb	0	; () banked
  1262  00092C  0100               	movlb	0	; () banked
  1263  00092E  6FD8               	movwf	uart_lthread@length& (0+255),b
  1264  000930  0100               	movlb	0	; () banked
  1265  000932  6BD9               	clrf	(uart_lthread@length+1)& (0+255),b
  1266  000934  0100               	movlb	0	; () banked
  1267  000936  BFD8               	btfsc	uart_lthread@length& (0+255),7,b
  1268  000938  07D9               	decf	(uart_lthread@length+1)& (0+255),f,b
  1269  00093A  0101               	movlb	1	; () banked
  1270  00093C  0E01               	movlw	high main@msgbuffer
  1271  00093E  0100               	movlb	0	; () banked
  1272  000940  0100               	movlb	0	; () banked
  1273  000942  6FDB               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1274  000944  0101               	movlb	1	; () banked
  1275  000946  0EBB               	movlw	low main@msgbuffer
  1276  000948  0100               	movlb	0	; () banked
  1277  00094A  0100               	movlb	0	; () banked
  1278  00094C  6FDA               	movwf	uart_lthread@msgbuffer& (0+255),b
  1279  00094E  EC22  F00C         	call	_uart_lthread	;wreg free
  1280                           
  1281                           ;main.c: 323: break;
  1282  000952  D70E               	goto	l3156
  1283  000954                     l3194:
  1284  000954  0101               	movlb	1	; () banked
  1285  000956  0101               	movlb	1	; () banked
  1286  000958  51D2               	movf	main@msgtype& (0+255),w,b
  1287                           
  1288                           ; Switch size 1, requested type "space"
  1289                           ; Number of cases is 3, Range of values is 11 to 31
  1290                           ; switch strategies available:
  1291                           ; Name         Instructions Cycles
  1292                           ; simple_byte           10     6 (average)
  1293                           ;	Chosen strategy is simple_byte
  1294  00095A  0A0B               	xorlw	11	; case 11
  1295  00095C  B4D8               	btfsc	status,2,c
  1296  00095E  D7A8               	goto	l3188
  1297  000960  0A15               	xorlw	21	; case 30
  1298  000962  B4D8               	btfsc	status,2,c
  1299  000964  D7CE               	goto	l3190
  1300  000966  0A01               	xorlw	1	; case 31
  1301  000968  B4D8               	btfsc	status,2,c
  1302  00096A  D7CB               	goto	l3190
  1303  00096C  D701               	goto	l3156
  1304  00096E                     __end_of_main:
  1305                           	opt stack 0
  1306                           tblptru	equ	0xFF8
  1307                           postinc0	equ	0xFEE
  1308                           wreg	equ	0xFE8
  1309                           status	equ	0xFD8
  1310                           
  1311 ;; *************** function _uart_lthread *****************
  1312 ;; Defined at:
  1313 ;;		line 9 in file "../src/uart_thread.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;  uptr            2   30[BANK0 ] PTR struct __uart_thread
  1316 ;;		 -> main@uthread_data(2), 
  1317 ;;  msgtype         2   32[BANK0 ] int 
  1318 ;;  length          2   34[BANK0 ] int 
  1319 ;;  msgbuffer       2   36[BANK0 ] PTR unsigned char 
  1320 ;;		 -> main@msgbuffer(11), 
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;		None
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  2   30[BANK0 ] int 
  1325 ;; Registers used:
  1326 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1332 ;;      Params:         0       8       0       0       0
  1333 ;;      Locals:         0       0       0       0       0
  1334 ;;      Temps:          0       0       0       0       0
  1335 ;;      Totals:         0       8       0       0       0
  1336 ;;Total ram usage:        8 bytes
  1337 ;; Hardware stack levels used:    1
  1338 ;; Hardware stack levels required when called:   10
  1339 ;; This function calls:
  1340 ;;		Nothing
  1341 ;; This function is called by:
  1342 ;;		_main
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           	psect	text1
  1347  001844                     __ptext1:
  1348                           	opt stack 0
  1349  001844                     _uart_lthread:
  1350                           	opt stack 19
  1351                           
  1352                           ;uart_thread.c: 10: if (msgtype == 30) {
  1353                           
  1354                           ; BSR set to: 1
  1355                           ;incstack = 0
  1356  001844  0100               	movlb	0	; () banked
  1357  001846  0100               	movlb	0	; () banked
  1358  001848  51D6               	movf	uart_lthread@msgtype& (0+255),w,b
  1359  00184A  0A1E               	xorlw	30
  1360  00184C  11D7               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1361  00184E  B4D8               	btfsc	status,2,c
  1362  001850  0012               	return	
  1363                           
  1364                           ; BSR set to: 0
  1365                           
  1366                           ; BSR set to: 0
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;uart_thread.c: 11: } else if (msgtype == 31) {
  1370  001852  0100               	movlb	0	; () banked
  1371  001854  0100               	movlb	0	; () banked
  1372  001856  51D6               	movf	uart_lthread@msgtype& (0+255),w,b
  1373  001858  0A1F               	xorlw	31
  1374  00185A  11D7               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1375  00185C  A4D8               	btfss	status,2,c
  1376  00185E  0012               	return	
  1377                           
  1378                           ; BSR set to: 0
  1379                           ;uart_thread.c: 14: msgbuffer[length] = '\0';
  1380  001860  0100               	movlb	0	; () banked
  1381  001862  0100               	movlb	0	; () banked
  1382  001864  51D8               	movf	uart_lthread@length& (0+255),w,b
  1383  001866  0100               	movlb	0	; () banked
  1384  001868  0100               	movlb	0	; () banked
  1385  00186A  25DA               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1386  00186C  6ED9               	movwf	fsr2l,c
  1387  00186E  0100               	movlb	0	; () banked
  1388  001870  0100               	movlb	0	; () banked
  1389  001872  51D9               	movf	(uart_lthread@length+1)& (0+255),w,b
  1390  001874  0100               	movlb	0	; () banked
  1391  001876  0100               	movlb	0	; () banked
  1392  001878  21DB               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1393  00187A  6EDA               	movwf	fsr2h,c
  1394  00187C  0E00               	movlw	0
  1395  00187E  6EDF               	movwf	indf2,c
  1396  001880  0012               	return	
  1397  001882                     __end_of_uart_lthread:
  1398                           	opt stack 0
  1399                           tblptru	equ	0xFF8
  1400                           postinc0	equ	0xFEE
  1401                           wreg	equ	0xFE8
  1402                           indf2	equ	0xFDF
  1403                           fsr2h	equ	0xFDA
  1404                           fsr2l	equ	0xFD9
  1405                           status	equ	0xFD8
  1406                           
  1407 ;; *************** function _timer1_lthread *****************
  1408 ;; Defined at:
  1409 ;;		line 14 in file "../src/timer1_thread.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;  tptr            2   14[BANK1 ] PTR struct __timer1_thre
  1412 ;;		 -> main@t1thread_data(2), 
  1413 ;;  msgtype         2   16[BANK1 ] int 
  1414 ;;  length          2   18[BANK1 ] int 
  1415 ;;  msgbuffer       2   20[BANK1 ] PTR unsigned char 
  1416 ;;		 -> main@msgbuffer(11), 
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  retval          1   23[BANK1 ] char 
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  2   14[BANK1 ] int 
  1421 ;; Registers used:
  1422 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1428 ;;      Params:         0       0       8       0       0
  1429 ;;      Locals:         0       0       1       0       0
  1430 ;;      Temps:          0       0       1       0       0
  1431 ;;      Totals:         0       0      10       0       0
  1432 ;;Total ram usage:       10 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; Hardware stack levels required when called:   13
  1435 ;; This function calls:
  1436 ;;		_FromMainHigh_sendmsg
  1437 ;;		___lwmod
  1438 ;; This function is called by:
  1439 ;;		_main
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text2
  1444  00140A                     __ptext2:
  1445                           	opt stack 0
  1446  00140A                     _timer1_lthread:
  1447                           	opt stack 16
  1448                           
  1449                           ;timer1_thread.c: 15: signed char retval;
  1450                           ;timer1_thread.c: 17: tptr->msgcount++;
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;incstack = 0
  1454  00140A  C1B0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1455  00140E  C1B1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1456  001412  2ADE               	incf	postinc2,f,c
  1457  001414  0E00               	movlw	0
  1458  001416  22DD               	addwfc	postdec2,f,c
  1459                           
  1460                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1461  001418  C1B0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1462  00141C  C1B1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1463  001420  0100               	movlb	0	; () banked
  1464  001422  CFDE F0D4          	movff	postinc2,___lwmod@dividend
  1465  001426  0100               	movlb	0	; () banked
  1466  001428  CFDD F0D5          	movff	postdec2,___lwmod@dividend+1
  1467  00142C  0E00               	movlw	0
  1468  00142E  0100               	movlb	0	; () banked
  1469  001430  0100               	movlb	0	; () banked
  1470  001432  6FD7               	movwf	(___lwmod@divisor+1)& (0+255),b
  1471  001434  0E0A               	movlw	10
  1472  001436  0100               	movlb	0	; () banked
  1473  001438  6FD6               	movwf	___lwmod@divisor& (0+255),b
  1474  00143A  EC41  F009         	call	___lwmod	;wreg free
  1475  00143E  0100               	movlb	0	; () banked
  1476  001440  0100               	movlb	0	; () banked
  1477  001442  51D4               	movf	?___lwmod& (0+255),w,b
  1478  001444  0A09               	xorlw	9
  1479  001446  0100               	movlb	0	; () banked
  1480  001448  11D5               	iorwf	(?___lwmod+1)& (0+255),w,b
  1481  00144A  A4D8               	btfss	status,2,c
  1482  00144C  0012               	return	
  1483                           
  1484                           ; BSR set to: 0
  1485                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1486  00144E  0101               	movlb	1	; () banked
  1487  001450  6FB8               	movwf	??_timer1_lthread& (0+255),b
  1488  001452  0E14               	movlw	20
  1489  001454  0101               	movlb	1	; () banked
  1490  001456  0101               	movlb	1	; () banked
  1491  001458  6FAD               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1492  00145A  0101               	movlb	1	; () banked
  1493  00145C  51B8               	movf	??_timer1_lthread& (0+255),w,b
  1494  00145E  0101               	movlb	1	; () banked
  1495  001460  0101               	movlb	1	; () banked
  1496  001462  C1B1  F1AF         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1497  001466  0101               	movlb	1	; () banked
  1498  001468  0101               	movlb	1	; () banked
  1499  00146A  C1B0  F1AE         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1500  00146E  0E02               	movlw	2
  1501  001470  EC5E  F00C         	call	_FromMainHigh_sendmsg
  1502  001474  0101               	movlb	1	; () banked
  1503  001476  0101               	movlb	1	; () banked
  1504  001478  6FB9               	movwf	timer1_lthread@retval& (0+255),b
  1505  00147A  0012               	return	
  1506  00147C                     __end_of_timer1_lthread:
  1507                           	opt stack 0
  1508                           tblptru	equ	0xFF8
  1509                           postinc0	equ	0xFEE
  1510                           wreg	equ	0xFE8
  1511                           indf2	equ	0xFDF
  1512                           postinc2	equ	0xFDE
  1513                           postdec2	equ	0xFDD
  1514                           fsr2h	equ	0xFDA
  1515                           fsr2l	equ	0xFD9
  1516                           status	equ	0xFD8
  1517                           
  1518 ;; *************** function _timer0_lthread *****************
  1519 ;; Defined at:
  1520 ;;		line 14 in file "../src/timer0_thread.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;  tptr            2   14[BANK1 ] PTR struct __timer0_thre
  1523 ;;		 -> main@t0thread_data(2), 
  1524 ;;  msgtype         2   16[BANK1 ] int 
  1525 ;;  length          2   18[BANK1 ] int 
  1526 ;;  msgbuffer       2   20[BANK1 ] PTR unsigned char 
  1527 ;;		 -> main@msgbuffer(11), 
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;  retval          1   23[BANK1 ] char 
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  2   14[BANK1 ] int 
  1532 ;; Registers used:
  1533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1539 ;;      Params:         0       0       8       0       0
  1540 ;;      Locals:         0       0       1       0       0
  1541 ;;      Temps:          0       0       1       0       0
  1542 ;;      Totals:         0       0      10       0       0
  1543 ;;Total ram usage:       10 bytes
  1544 ;; Hardware stack levels used:    1
  1545 ;; Hardware stack levels required when called:   13
  1546 ;; This function calls:
  1547 ;;		_FromMainHigh_sendmsg
  1548 ;;		___lwmod
  1549 ;; This function is called by:
  1550 ;;		_main
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554                           	psect	text3
  1555  00147C                     __ptext3:
  1556                           	opt stack 0
  1557  00147C                     _timer0_lthread:
  1558                           	opt stack 16
  1559                           
  1560                           ;timer0_thread.c: 19: signed char retval;
  1561                           ;timer0_thread.c: 21: tptr->msgcount++;
  1562                           
  1563                           ;incstack = 0
  1564  00147C  C1B0  FFD9         	movff	timer0_lthread@tptr,fsr2l
  1565  001480  C1B1  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  1566  001484  2ADE               	incf	postinc2,f,c
  1567  001486  0E00               	movlw	0
  1568  001488  22DD               	addwfc	postdec2,f,c
  1569                           
  1570                           ;timer0_thread.c: 24: if ((tptr->msgcount % 10) == 9) {
  1571  00148A  C1B0  FFD9         	movff	timer0_lthread@tptr,fsr2l
  1572  00148E  C1B1  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  1573  001492  0100               	movlb	0	; () banked
  1574  001494  CFDE F0D4          	movff	postinc2,___lwmod@dividend
  1575  001498  0100               	movlb	0	; () banked
  1576  00149A  CFDD F0D5          	movff	postdec2,___lwmod@dividend+1
  1577  00149E  0E00               	movlw	0
  1578  0014A0  0100               	movlb	0	; () banked
  1579  0014A2  0100               	movlb	0	; () banked
  1580  0014A4  6FD7               	movwf	(___lwmod@divisor+1)& (0+255),b
  1581  0014A6  0E0A               	movlw	10
  1582  0014A8  0100               	movlb	0	; () banked
  1583  0014AA  6FD6               	movwf	___lwmod@divisor& (0+255),b
  1584  0014AC  EC41  F009         	call	___lwmod	;wreg free
  1585  0014B0  0100               	movlb	0	; () banked
  1586  0014B2  0100               	movlb	0	; () banked
  1587  0014B4  51D4               	movf	?___lwmod& (0+255),w,b
  1588  0014B6  0A09               	xorlw	9
  1589  0014B8  0100               	movlb	0	; () banked
  1590  0014BA  11D5               	iorwf	(?___lwmod+1)& (0+255),w,b
  1591  0014BC  A4D8               	btfss	status,2,c
  1592  0014BE  0012               	return	
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;timer0_thread.c: 25: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1596  0014C0  0101               	movlb	1	; () banked
  1597  0014C2  6FB8               	movwf	??_timer0_lthread& (0+255),b
  1598  0014C4  0E14               	movlw	20
  1599  0014C6  0101               	movlb	1	; () banked
  1600  0014C8  0101               	movlb	1	; () banked
  1601  0014CA  6FAD               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1602  0014CC  0101               	movlb	1	; () banked
  1603  0014CE  51B8               	movf	??_timer0_lthread& (0+255),w,b
  1604  0014D0  0101               	movlb	1	; () banked
  1605  0014D2  0101               	movlb	1	; () banked
  1606  0014D4  C1B1  F1AF         	movff	timer0_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1607  0014D8  0101               	movlb	1	; () banked
  1608  0014DA  0101               	movlb	1	; () banked
  1609  0014DC  C1B0  F1AE         	movff	timer0_lthread@tptr,FromMainHigh_sendmsg@data
  1610  0014E0  0E02               	movlw	2
  1611  0014E2  EC5E  F00C         	call	_FromMainHigh_sendmsg
  1612  0014E6  0101               	movlb	1	; () banked
  1613  0014E8  0101               	movlb	1	; () banked
  1614  0014EA  6FB9               	movwf	timer0_lthread@retval& (0+255),b
  1615  0014EC  0012               	return	
  1616  0014EE                     __end_of_timer0_lthread:
  1617                           	opt stack 0
  1618                           tblptru	equ	0xFF8
  1619                           postinc0	equ	0xFEE
  1620                           wreg	equ	0xFE8
  1621                           indf2	equ	0xFDF
  1622                           postinc2	equ	0xFDE
  1623                           postdec2	equ	0xFDD
  1624                           fsr2h	equ	0xFDA
  1625                           fsr2l	equ	0xFD9
  1626                           status	equ	0xFD8
  1627                           
  1628 ;; *************** function ___lwmod *****************
  1629 ;; Defined at:
  1630 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;  dividend        2   30[BANK0 ] unsigned int 
  1633 ;;  divisor         2   32[BANK0 ] unsigned int 
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;  counter         1   35[BANK0 ] unsigned char 
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  2   30[BANK0 ] unsigned int 
  1638 ;; Registers used:
  1639 ;;		wreg, status,2, status,0
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1645 ;;      Params:         0       4       0       0       0
  1646 ;;      Locals:         0       1       0       0       0
  1647 ;;      Temps:          0       1       0       0       0
  1648 ;;      Totals:         0       6       0       0       0
  1649 ;;Total ram usage:        6 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; Hardware stack levels required when called:   10
  1652 ;; This function calls:
  1653 ;;		Nothing
  1654 ;; This function is called by:
  1655 ;;		_timer1_lthread
  1656 ;;		_timer0_lthread
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           	psect	text4
  1661  001282                     __ptext4:
  1662                           	opt stack 0
  1663  001282                     ___lwmod:
  1664                           	opt stack 18
  1665                           
  1666                           ;incstack = 0
  1667  001282  0100               	movlb	0	; () banked
  1668  001284  0100               	movlb	0	; () banked
  1669  001286  51D7               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1670  001288  11D6               	iorwf	___lwmod@divisor& (0+255),w,b
  1671  00128A  B4D8               	btfsc	status,2,c
  1672  00128C  D03A               	goto	l1050
  1673                           
  1674                           ; BSR set to: 0
  1675  00128E  0100               	movlb	0	; () banked
  1676  001290  6FD8               	movwf	??___lwmod& (0+255),b
  1677  001292  0E01               	movlw	1
  1678  001294  0100               	movlb	0	; () banked
  1679  001296  0100               	movlb	0	; () banked
  1680  001298  6FD9               	movwf	___lwmod@counter& (0+255),b
  1681  00129A  0100               	movlb	0	; () banked
  1682  00129C  51D8               	movf	??___lwmod& (0+255),w,b
  1683  00129E  D009               	goto	l3202
  1684  0012A0                     l3200:
  1685                           
  1686                           ; BSR set to: 0
  1687  0012A0  0100               	movlb	0	; () banked
  1688  0012A2  0100               	movlb	0	; () banked
  1689  0012A4  0100               	movlb	0	; () banked
  1690  0012A6  90D8               	bcf	status,0,c
  1691  0012A8  37D6               	rlcf	___lwmod@divisor& (0+255),f,b
  1692  0012AA  37D7               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1693  0012AC  0100               	movlb	0	; () banked
  1694  0012AE  0100               	movlb	0	; () banked
  1695  0012B0  2BD9               	incf	___lwmod@counter& (0+255),f,b
  1696  0012B2                     l3202:
  1697                           
  1698                           ; BSR set to: 0
  1699  0012B2  0100               	movlb	0	; () banked
  1700  0012B4  0100               	movlb	0	; () banked
  1701  0012B6  AFD7               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1702  0012B8  D7F3               	goto	l3200
  1703  0012BA                     l3204:
  1704                           
  1705                           ; BSR set to: 0
  1706  0012BA  0100               	movlb	0	; () banked
  1707  0012BC  0100               	movlb	0	; () banked
  1708  0012BE  51D6               	movf	___lwmod@divisor& (0+255),w,b
  1709  0012C0  0100               	movlb	0	; () banked
  1710  0012C2  0100               	movlb	0	; () banked
  1711  0012C4  5DD4               	subwf	___lwmod@dividend& (0+255),w,b
  1712  0012C6  0100               	movlb	0	; () banked
  1713  0012C8  0100               	movlb	0	; () banked
  1714  0012CA  51D7               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1715  0012CC  0100               	movlb	0	; () banked
  1716  0012CE  0100               	movlb	0	; () banked
  1717  0012D0  59D5               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1718  0012D2  A0D8               	btfss	status,0,c
  1719  0012D4  D00C               	goto	l3208
  1720                           
  1721                           ; BSR set to: 0
  1722  0012D6  0100               	movlb	0	; () banked
  1723  0012D8  0100               	movlb	0	; () banked
  1724  0012DA  51D6               	movf	___lwmod@divisor& (0+255),w,b
  1725  0012DC  0100               	movlb	0	; () banked
  1726  0012DE  0100               	movlb	0	; () banked
  1727  0012E0  5FD4               	subwf	___lwmod@dividend& (0+255),f,b
  1728  0012E2  0100               	movlb	0	; () banked
  1729  0012E4  0100               	movlb	0	; () banked
  1730  0012E6  51D7               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1731  0012E8  0100               	movlb	0	; () banked
  1732  0012EA  0100               	movlb	0	; () banked
  1733  0012EC  5BD5               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1734  0012EE                     l3208:
  1735                           
  1736                           ; BSR set to: 0
  1737  0012EE  0100               	movlb	0	; () banked
  1738  0012F0  0100               	movlb	0	; () banked
  1739  0012F2  0100               	movlb	0	; () banked
  1740  0012F4  90D8               	bcf	status,0,c
  1741  0012F6  33D7               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1742  0012F8  33D6               	rrcf	___lwmod@divisor& (0+255),f,b
  1743                           
  1744                           ; BSR set to: 0
  1745  0012FA  0100               	movlb	0	; () banked
  1746  0012FC  0100               	movlb	0	; () banked
  1747  0012FE  2FD9               	decfsz	___lwmod@counter& (0+255),f,b
  1748  001300  D7DC               	goto	l3204
  1749  001302                     l1050:
  1750                           
  1751                           ; BSR set to: 0
  1752  001302  C0D4  F0D4         	movff	___lwmod@dividend,?___lwmod
  1753  001306  C0D5  F0D5         	movff	___lwmod@dividend+1,?___lwmod+1
  1754                           
  1755                           ; BSR set to: 0
  1756  00130A  0012               	return	
  1757  00130C                     __end_of___lwmod:
  1758                           	opt stack 0
  1759                           tblptru	equ	0xFF8
  1760                           postinc0	equ	0xFEE
  1761                           wreg	equ	0xFE8
  1762                           indf2	equ	0xFDF
  1763                           postinc2	equ	0xFDE
  1764                           postdec2	equ	0xFDD
  1765                           fsr2h	equ	0xFDA
  1766                           fsr2l	equ	0xFD9
  1767                           status	equ	0xFD8
  1768                           
  1769 ;; *************** function _FromMainHigh_sendmsg *****************
  1770 ;; Defined at:
  1771 ;;		line 174 in file "../src/messages.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  length          1    wreg     unsigned char 
  1774 ;;  msgtype         1   11[BANK1 ] unsigned char 
  1775 ;;  data            2   12[BANK1 ] PTR void 
  1776 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), 
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;  length          1   41[BANK0 ] unsigned char 
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      char 
  1781 ;; Registers used:
  1782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1788 ;;      Params:         0       0       3       0       0
  1789 ;;      Locals:         0       1       0       0       0
  1790 ;;      Temps:          0       0       0       0       0
  1791 ;;      Totals:         0       1       3       0       0
  1792 ;;Total ram usage:        4 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; Hardware stack levels required when called:   12
  1795 ;; This function calls:
  1796 ;;		_send_msg
  1797 ;; This function is called by:
  1798 ;;		_timer1_lthread
  1799 ;;		_timer0_lthread
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           	psect	text5
  1804  0018BC                     __ptext5:
  1805                           	opt stack 0
  1806  0018BC                     _FromMainHigh_sendmsg:
  1807                           	opt stack 16
  1808                           
  1809                           ; BSR set to: 0
  1810                           ;incstack = 0
  1811                           ;FromMainHigh_sendmsg@length stored from wreg
  1812  0018BC  CFE8 F0DF          	movff	wreg,FromMainHigh_sendmsg@length
  1813                           
  1814                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1815  0018C0  0101               	movlb	1	; () banked
  1816  0018C2  0E01               	movlw	high _FromMainHigh_MQ
  1817  0018C4  0101               	movlb	1	; () banked
  1818  0018C6  0101               	movlb	1	; () banked
  1819  0018C8  6FA3               	movwf	(send_msg@qptr+1)& (0+255),b
  1820  0018CA  0101               	movlb	1	; () banked
  1821  0018CC  0E00               	movlw	low _FromMainHigh_MQ
  1822  0018CE  0101               	movlb	1	; () banked
  1823  0018D0  0101               	movlb	1	; () banked
  1824  0018D2  6FA2               	movwf	send_msg@qptr& (0+255),b
  1825  0018D4  C0DF  F1A4         	movff	FromMainHigh_sendmsg@length,send_msg@length
  1826  0018D8  C1AD  F1A5         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  1827  0018DC  0101               	movlb	1	; () banked
  1828  0018DE  0101               	movlb	1	; () banked
  1829  0018E0  C1AF  F1A7         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  1830  0018E4  0101               	movlb	1	; () banked
  1831  0018E6  0101               	movlb	1	; () banked
  1832  0018E8  C1AE  F1A6         	movff	FromMainHigh_sendmsg@data,send_msg@data
  1833  0018EC  ECD9  F005         	call	_send_msg	;wreg free
  1834  0018F0  0012               	return	
  1835  0018F2                     __end_of_FromMainHigh_sendmsg:
  1836                           	opt stack 0
  1837                           tblptru	equ	0xFF8
  1838                           postinc0	equ	0xFEE
  1839                           wreg	equ	0xFE8
  1840                           indf2	equ	0xFDF
  1841                           postinc2	equ	0xFDE
  1842                           postdec2	equ	0xFDD
  1843                           fsr2h	equ	0xFDA
  1844                           fsr2l	equ	0xFD9
  1845                           status	equ	0xFD8
  1846                           
  1847 ;; *************** function _send_msg *****************
  1848 ;; Defined at:
  1849 ;;		line 24 in file "../src/messages.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  1852 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1853 ;;  length          1    2[BANK1 ] unsigned char 
  1854 ;;  msgtype         1    3[BANK1 ] unsigned char 
  1855 ;;  data            2    4[BANK1 ] PTR void 
  1856 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  1857 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;  qmsg            2    9[BANK1 ] PTR struct __msg
  1860 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  1861 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1862 ;;  tlength         2    6[BANK1 ] unsigned int 
  1863 ;;  slot            1    8[BANK1 ] unsigned char 
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      char 
  1866 ;; Registers used:
  1867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1873 ;;      Params:         0       0       6       0       0
  1874 ;;      Locals:         0       0       5       0       0
  1875 ;;      Temps:          0       1       0       0       0
  1876 ;;      Totals:         0       1      11       0       0
  1877 ;;Total ram usage:       12 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; Hardware stack levels required when called:   11
  1880 ;; This function calls:
  1881 ;;		_memcpy
  1882 ;; This function is called by:
  1883 ;;		_FromMainHigh_sendmsg
  1884 ;;		_FromMainLow_sendmsg
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           	psect	text6
  1889  000BB2                     __ptext6:
  1890                           	opt stack 0
  1891  000BB2                     _send_msg:
  1892                           	opt stack 16
  1893                           
  1894                           ;messages.c: 25: unsigned char slot;
  1895                           ;messages.c: 27: msg *qmsg;
  1896                           ;messages.c: 28: size_t tlength = length;
  1897                           
  1898                           ;incstack = 0
  1899  000BB2  0101               	movlb	1	; () banked
  1900  000BB4  0101               	movlb	1	; () banked
  1901  000BB6  C1A4  F1A8         	movff	send_msg@length,send_msg@tlength
  1902  000BBA  0101               	movlb	1	; () banked
  1903  000BBC  0101               	movlb	1	; () banked
  1904  000BBE  6BA9               	clrf	(send_msg@tlength+1)& (0+255),b
  1905                           
  1906                           ; BSR set to: 1
  1907                           ;messages.c: 38: slot = qptr->cur_write_ind;
  1908  000BC0  0101               	movlb	1	; () banked
  1909  000BC2  EE20 F034          	lfsr	2,52
  1910  000BC6  0101               	movlb	1	; () banked
  1911  000BC8  51A2               	movf	send_msg@qptr& (0+255),w,b
  1912  000BCA  26D9               	addwf	fsr2l,f,c
  1913  000BCC  0101               	movlb	1	; () banked
  1914  000BCE  51A3               	movf	(send_msg@qptr+1)& (0+255),w,b
  1915  000BD0  22DA               	addwfc	fsr2h,f,c
  1916  000BD2  50DF               	movf	indf2,w,c
  1917  000BD4  0101               	movlb	1	; () banked
  1918  000BD6  0101               	movlb	1	; () banked
  1919  000BD8  6FAA               	movwf	send_msg@slot& (0+255),b
  1920                           
  1921                           ; BSR set to: 1
  1922                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  1923  000BDA  0101               	movlb	1	; () banked
  1924  000BDC  0101               	movlb	1	; () banked
  1925  000BDE  51AA               	movf	send_msg@slot& (0+255),w,b
  1926  000BE0  0D0D               	mullw	13
  1927  000BE2  50F3               	movf	prodl,w,c
  1928  000BE4  0101               	movlb	1	; () banked
  1929  000BE6  0101               	movlb	1	; () banked
  1930  000BE8  25A2               	addwf	send_msg@qptr& (0+255),w,b
  1931  000BEA  0101               	movlb	1	; () banked
  1932  000BEC  0101               	movlb	1	; () banked
  1933  000BEE  6FAB               	movwf	send_msg@qmsg& (0+255),b
  1934  000BF0  50F4               	movf	prodh,w,c
  1935  000BF2  0101               	movlb	1	; () banked
  1936  000BF4  0101               	movlb	1	; () banked
  1937  000BF6  21A3               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  1938  000BF8  0101               	movlb	1	; () banked
  1939  000BFA  6FAC               	movwf	(send_msg@qmsg+1)& (0+255),b
  1940                           
  1941                           ; BSR set to: 1
  1942                           ;messages.c: 41: if (qmsg->full != 0) {
  1943  000BFC  C1AB  FFD9         	movff	send_msg@qmsg,fsr2l
  1944  000C00  C1AC  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1945  000C04  50DF               	movf	indf2,w,c
  1946  000C06  B4D8               	btfsc	status,2,c
  1947  000C08  D002               	goto	l3046
  1948                           
  1949                           ; BSR set to: 1
  1950                           ;messages.c: 42: return (-1);
  1951  000C0A  0EFF               	movlw	255
  1952  000C0C  0012               	return	
  1953  000C0E                     l3046:
  1954                           
  1955                           ; BSR set to: 1
  1956                           ;messages.c: 43: }
  1957                           ;messages.c: 46: qmsg->length = length;
  1958  000C0E  0101               	movlb	1	; () banked
  1959  000C10  EE20 F001          	lfsr	2,1
  1960  000C14  0101               	movlb	1	; () banked
  1961  000C16  51AB               	movf	send_msg@qmsg& (0+255),w,b
  1962  000C18  26D9               	addwf	fsr2l,f,c
  1963  000C1A  0101               	movlb	1	; () banked
  1964  000C1C  51AC               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1965  000C1E  22DA               	addwfc	fsr2h,f,c
  1966  000C20  0101               	movlb	1	; () banked
  1967  000C22  C1A4  FFDF         	movff	send_msg@length,indf2
  1968                           
  1969                           ;messages.c: 47: qmsg->msgtype = msgtype;
  1970  000C26  0101               	movlb	1	; () banked
  1971  000C28  EE20 F002          	lfsr	2,2
  1972  000C2C  0101               	movlb	1	; () banked
  1973  000C2E  51AB               	movf	send_msg@qmsg& (0+255),w,b
  1974  000C30  26D9               	addwf	fsr2l,f,c
  1975  000C32  0101               	movlb	1	; () banked
  1976  000C34  51AC               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1977  000C36  22DA               	addwfc	fsr2h,f,c
  1978  000C38  0101               	movlb	1	; () banked
  1979  000C3A  C1A5  FFDF         	movff	send_msg@msgtype,indf2
  1980                           
  1981                           ; BSR set to: 1
  1982                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  1983  000C3E  0E03               	movlw	3
  1984  000C40  0101               	movlb	1	; () banked
  1985  000C42  0101               	movlb	1	; () banked
  1986  000C44  25AB               	addwf	send_msg@qmsg& (0+255),w,b
  1987  000C46  0100               	movlb	0	; () banked
  1988  000C48  0100               	movlb	0	; () banked
  1989  000C4A  6FD4               	movwf	memcpy@d1& (0+255),b
  1990  000C4C  0E00               	movlw	0
  1991  000C4E  0101               	movlb	1	; () banked
  1992  000C50  0101               	movlb	1	; () banked
  1993  000C52  21AC               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  1994  000C54  0100               	movlb	0	; () banked
  1995  000C56  6FD5               	movwf	(memcpy@d1+1)& (0+255),b
  1996  000C58  0101               	movlb	1	; () banked
  1997  000C5A  0100               	movlb	0	; () banked
  1998  000C5C  C1A7  F0D7         	movff	send_msg@data+1,memcpy@s1+1
  1999  000C60  0101               	movlb	1	; () banked
  2000  000C62  0100               	movlb	0	; () banked
  2001  000C64  C1A6  F0D6         	movff	send_msg@data,memcpy@s1
  2002  000C68  C1A8  F0D8         	movff	send_msg@tlength,memcpy@n
  2003  000C6C  C1A9  F0D9         	movff	send_msg@tlength+1,memcpy@n+1
  2004  000C70  ECE3  F00A         	call	_memcpy	;wreg free
  2005                           
  2006                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2007  000C74  0101               	movlb	1	; () banked
  2008  000C76  EE20 F034          	lfsr	2,52
  2009  000C7A  0101               	movlb	1	; () banked
  2010  000C7C  51A2               	movf	send_msg@qptr& (0+255),w,b
  2011  000C7E  26D9               	addwf	fsr2l,f,c
  2012  000C80  0101               	movlb	1	; () banked
  2013  000C82  51A3               	movf	(send_msg@qptr+1)& (0+255),w,b
  2014  000C84  22DA               	addwfc	fsr2h,f,c
  2015  000C86  0101               	movlb	1	; () banked
  2016  000C88  EE10 F034          	lfsr	1,52
  2017  000C8C  0101               	movlb	1	; () banked
  2018  000C8E  51A2               	movf	send_msg@qptr& (0+255),w,b
  2019  000C90  26E1               	addwf	fsr1l,f,c
  2020  000C92  0101               	movlb	1	; () banked
  2021  000C94  51A3               	movf	(send_msg@qptr+1)& (0+255),w,b
  2022  000C96  22E2               	addwfc	fsr1h,f,c
  2023  000C98  50E7               	movf	indf1,w,c
  2024  000C9A  0100               	movlb	0	; () banked
  2025  000C9C  6FDE               	movwf	??_send_msg& (0+255),b
  2026  000C9E  0100               	movlb	0	; () banked
  2027  000CA0  29DE               	incf	??_send_msg& (0+255),w,b
  2028  000CA2  0B03               	andlw	3
  2029  000CA4  6EDF               	movwf	indf2,c
  2030                           
  2031                           ; BSR set to: 0
  2032                           ;messages.c: 59: qmsg->full = 1;
  2033  000CA6  C1AB  FFD9         	movff	send_msg@qmsg,fsr2l
  2034  000CAA  C1AC  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2035  000CAE  0E01               	movlw	1
  2036  000CB0  6EDF               	movwf	indf2,c
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;messages.c: 60: return (1);
  2040  000CB2  0E01               	movlw	1
  2041  000CB4  0012               	return	
  2042  000CB6                     __end_of_send_msg:
  2043                           	opt stack 0
  2044                           tblptru	equ	0xFF8
  2045                           prodh	equ	0xFF4
  2046                           prodl	equ	0xFF3
  2047                           postinc0	equ	0xFEE
  2048                           wreg	equ	0xFE8
  2049                           indf1	equ	0xFE7
  2050                           fsr1h	equ	0xFE2
  2051                           fsr1l	equ	0xFE1
  2052                           indf2	equ	0xFDF
  2053                           postinc2	equ	0xFDE
  2054                           postdec2	equ	0xFDD
  2055                           fsr2h	equ	0xFDA
  2056                           fsr2l	equ	0xFD9
  2057                           status	equ	0xFD8
  2058                           
  2059 ;; *************** function _start_i2c_slave_reply *****************
  2060 ;; Defined at:
  2061 ;;		line 54 in file "../src/my_i2c.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  length          1    wreg     unsigned char 
  2064 ;;  msg             2   30[BANK0 ] PTR unsigned char 
  2065 ;;		 -> main@msgbuffer(11), i2c_int_handler@msgbuffer(3), 
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;  length          1   34[BANK0 ] unsigned char 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;		None               void
  2070 ;; Registers used:
  2071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2077 ;;      Params:         0       2       0       0       0
  2078 ;;      Locals:         0       1       0       0       0
  2079 ;;      Temps:          0       2       0       0       0
  2080 ;;      Totals:         0       5       0       0       0
  2081 ;;Total ram usage:        5 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:   10
  2084 ;; This function calls:
  2085 ;;		Nothing
  2086 ;; This function is called by:
  2087 ;;		_main
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text7
  2092  000AA4                     __ptext7:
  2093                           	opt stack 0
  2094  000AA4                     _start_i2c_slave_reply:
  2095                           	opt stack 19
  2096                           
  2097                           ;incstack = 0
  2098                           ;start_i2c_slave_reply@length stored from wreg
  2099  000AA4  CFE8 F0D8          	movff	wreg,start_i2c_slave_reply@length
  2100                           
  2101                           ;my_i2c.c: 56: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2102  000AA8  0100               	movlb	0	; () banked
  2103  000AAA  EE20 F019          	lfsr	2,25
  2104  000AAE  0100               	movlb	0	; () banked
  2105  000AB0  51E0               	movf	_ic_ptr& (0+255),w,b
  2106  000AB2  26D9               	addwf	fsr2l,f,c
  2107  000AB4  0100               	movlb	0	; () banked
  2108  000AB6  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  2109  000AB8  22DA               	addwfc	fsr2h,f,c
  2110  000ABA  0E00               	movlw	0
  2111  000ABC  6EDF               	movwf	indf2,c
  2112  000ABE  D042               	goto	l2218
  2113  000AC0                     l2214:
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;my_i2c.c: 57: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2117  000AC0  0100               	movlb	0	; () banked
  2118  000AC2  EE20 F019          	lfsr	2,25
  2119  000AC6  0100               	movlb	0	; () banked
  2120  000AC8  51E0               	movf	_ic_ptr& (0+255),w,b
  2121  000ACA  26D9               	addwf	fsr2l,f,c
  2122  000ACC  0100               	movlb	0	; () banked
  2123  000ACE  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  2124  000AD0  22DA               	addwfc	fsr2h,f,c
  2125  000AD2  50DF               	movf	indf2,w,c
  2126  000AD4  0100               	movlb	0	; () banked
  2127  000AD6  6FD6               	movwf	??_start_i2c_slave_reply& (0+255),b
  2128  000AD8  0100               	movlb	0	; () banked
  2129  000ADA  51D6               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2130  000ADC  0D01               	mullw	1
  2131  000ADE  50F3               	movf	prodl,w,c
  2132  000AE0  0100               	movlb	0	; () banked
  2133  000AE2  0100               	movlb	0	; () banked
  2134  000AE4  25D4               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2135  000AE6  6ED9               	movwf	fsr2l,c
  2136  000AE8  50F4               	movf	prodh,w,c
  2137  000AEA  0100               	movlb	0	; () banked
  2138  000AEC  0100               	movlb	0	; () banked
  2139  000AEE  21D5               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2140  000AF0  6EDA               	movwf	fsr2h,c
  2141  000AF2  0100               	movlb	0	; () banked
  2142  000AF4  EE10 F019          	lfsr	1,25
  2143  000AF8  0100               	movlb	0	; () banked
  2144  000AFA  51E0               	movf	_ic_ptr& (0+255),w,b
  2145  000AFC  26E1               	addwf	fsr1l,f,c
  2146  000AFE  0100               	movlb	0	; () banked
  2147  000B00  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  2148  000B02  22E2               	addwfc	fsr1h,f,c
  2149  000B04  50E7               	movf	indf1,w,c
  2150  000B06  0100               	movlb	0	; () banked
  2151  000B08  6FD7               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2152  000B0A  0100               	movlb	0	; () banked
  2153  000B0C  51D7               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2154  000B0E  0D01               	mullw	1
  2155  000B10  0E0F               	movlw	15
  2156  000B12  26F3               	addwf	prodl,f,c
  2157  000B14  0E00               	movlw	0
  2158  000B16  22F4               	addwfc	prodh,f,c
  2159  000B18  50F3               	movf	prodl,w,c
  2160  000B1A  0100               	movlb	0	; () banked
  2161  000B1C  0100               	movlb	0	; () banked
  2162  000B1E  25E0               	addwf	_ic_ptr& (0+255),w,b
  2163  000B20  6EE1               	movwf	fsr1l,c
  2164  000B22  50F4               	movf	prodh,w,c
  2165  000B24  0100               	movlb	0	; () banked
  2166  000B26  0100               	movlb	0	; () banked
  2167  000B28  21E1               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2168  000B2A  6EE2               	movwf	fsr1h,c
  2169  000B2C  CFDF FFE7          	movff	indf2,indf1
  2170                           
  2171                           ; BSR set to: 0
  2172  000B30  0100               	movlb	0	; () banked
  2173  000B32  EE20 F019          	lfsr	2,25
  2174  000B36  0100               	movlb	0	; () banked
  2175  000B38  51E0               	movf	_ic_ptr& (0+255),w,b
  2176  000B3A  26D9               	addwf	fsr2l,f,c
  2177  000B3C  0100               	movlb	0	; () banked
  2178  000B3E  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  2179  000B40  22DA               	addwfc	fsr2h,f,c
  2180  000B42  2ADF               	incf	indf2,f,c
  2181  000B44                     l2218:
  2182                           
  2183                           ; BSR set to: 0
  2184  000B44  0100               	movlb	0	; () banked
  2185  000B46  EE20 F019          	lfsr	2,25
  2186  000B4A  0100               	movlb	0	; () banked
  2187  000B4C  51E0               	movf	_ic_ptr& (0+255),w,b
  2188  000B4E  26D9               	addwf	fsr2l,f,c
  2189  000B50  0100               	movlb	0	; () banked
  2190  000B52  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  2191  000B54  22DA               	addwfc	fsr2h,f,c
  2192  000B56  50DF               	movf	indf2,w,c
  2193  000B58  0100               	movlb	0	; () banked
  2194  000B5A  6FD6               	movwf	??_start_i2c_slave_reply& (0+255),b
  2195  000B5C  0100               	movlb	0	; () banked
  2196  000B5E  0100               	movlb	0	; () banked
  2197  000B60  51D8               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2198  000B62  0100               	movlb	0	; () banked
  2199  000B64  5DD6               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2200  000B66  A0D8               	btfss	status,0,c
  2201  000B68  D7AB               	goto	l2214
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;my_i2c.c: 58: }
  2205                           ;my_i2c.c: 59: ic_ptr->outbuflen = length;
  2206                           
  2207                           ; BSR set to: 0
  2208  000B6A  0100               	movlb	0	; () banked
  2209  000B6C  EE20 F019          	lfsr	2,25
  2210  000B70  0100               	movlb	0	; () banked
  2211  000B72  51E0               	movf	_ic_ptr& (0+255),w,b
  2212  000B74  26D9               	addwf	fsr2l,f,c
  2213  000B76  0100               	movlb	0	; () banked
  2214  000B78  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  2215  000B7A  22DA               	addwfc	fsr2h,f,c
  2216  000B7C  0100               	movlb	0	; () banked
  2217  000B7E  C0D8  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2218                           
  2219                           ;my_i2c.c: 60: ic_ptr->outbufind = 1;
  2220  000B82  0100               	movlb	0	; () banked
  2221  000B84  EE20 F01A          	lfsr	2,26
  2222  000B88  0100               	movlb	0	; () banked
  2223  000B8A  51E0               	movf	_ic_ptr& (0+255),w,b
  2224  000B8C  26D9               	addwf	fsr2l,f,c
  2225  000B8E  0100               	movlb	0	; () banked
  2226  000B90  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  2227  000B92  22DA               	addwfc	fsr2h,f,c
  2228  000B94  0E01               	movlw	1
  2229  000B96  6EDF               	movwf	indf2,c
  2230                           
  2231                           ;my_i2c.c: 63: SSPBUF = ic_ptr->outbuffer[0];
  2232  000B98  0100               	movlb	0	; () banked
  2233  000B9A  EE20 F00F          	lfsr	2,15
  2234  000B9E  0100               	movlb	0	; () banked
  2235  000BA0  51E0               	movf	_ic_ptr& (0+255),w,b
  2236  000BA2  26D9               	addwf	fsr2l,f,c
  2237  000BA4  0100               	movlb	0	; () banked
  2238  000BA6  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  2239  000BA8  22DA               	addwfc	fsr2h,f,c
  2240  000BAA  50DF               	movf	indf2,w,c
  2241  000BAC  6EC9               	movwf	4041,c	;volatile
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;my_i2c.c: 66: SSPCON1bits.CKP = 1;
  2245  000BAE  88C6               	bsf	4038,4,c	;volatile
  2246                           
  2247                           ; BSR set to: 0
  2248  000BB0  0012               	return	
  2249  000BB2                     __end_of_start_i2c_slave_reply:
  2250                           	opt stack 0
  2251                           tblptru	equ	0xFF8
  2252                           prodh	equ	0xFF4
  2253                           prodl	equ	0xFF3
  2254                           postinc0	equ	0xFEE
  2255                           wreg	equ	0xFE8
  2256                           indf1	equ	0xFE7
  2257                           fsr1h	equ	0xFE2
  2258                           fsr1l	equ	0xFE1
  2259                           indf2	equ	0xFDF
  2260                           postinc2	equ	0xFDE
  2261                           postdec2	equ	0xFDD
  2262                           fsr2h	equ	0xFDA
  2263                           fsr2l	equ	0xFD9
  2264                           status	equ	0xFD8
  2265                           
  2266 ;; *************** function _init_uart_recv *****************
  2267 ;; Defined at:
  2268 ;;		line 30 in file "../src/my_uart.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  uc              2   30[BANK0 ] PTR struct __uart_comm
  2271 ;;		 -> main@uc(5), 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;		None
  2274 ;; Return value:  Size  Location     Type
  2275 ;;		None               void
  2276 ;; Registers used:
  2277 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2283 ;;      Params:         0       2       0       0       0
  2284 ;;      Locals:         0       0       0       0       0
  2285 ;;      Temps:          0       0       0       0       0
  2286 ;;      Totals:         0       2       0       0       0
  2287 ;;Total ram usage:        2 bytes
  2288 ;; Hardware stack levels used:    1
  2289 ;; Hardware stack levels required when called:   10
  2290 ;; This function calls:
  2291 ;;		Nothing
  2292 ;; This function is called by:
  2293 ;;		_main
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           	psect	text8
  2298  001A18                     __ptext8:
  2299                           	opt stack 0
  2300  001A18                     _init_uart_recv:
  2301                           	opt stack 19
  2302                           
  2303                           ;my_uart.c: 31: uc_ptr = uc;
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;incstack = 0
  2307  001A18  0100               	movlb	0	; () banked
  2308  001A1A  C0D5  F053         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2309  001A1E  0100               	movlb	0	; () banked
  2310  001A20  C0D4  F052         	movff	init_uart_recv@uc,_uc_ptr
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;my_uart.c: 32: uc_ptr->buflen = 0;
  2314  001A24  EE20 F004          	lfsr	2,4
  2315  001A28  5052               	movf	_uc_ptr,w,c
  2316  001A2A  26D9               	addwf	fsr2l,f,c
  2317  001A2C  5053               	movf	_uc_ptr+1,w,c
  2318  001A2E  22DA               	addwfc	fsr2h,f,c
  2319  001A30  0E00               	movlw	0
  2320  001A32  6EDF               	movwf	indf2,c
  2321                           
  2322                           ; BSR set to: 0
  2323  001A34  0012               	return	
  2324  001A36                     __end_of_init_uart_recv:
  2325                           	opt stack 0
  2326                           tblptru	equ	0xFF8
  2327                           prodh	equ	0xFF4
  2328                           prodl	equ	0xFF3
  2329                           postinc0	equ	0xFEE
  2330                           wreg	equ	0xFE8
  2331                           indf1	equ	0xFE7
  2332                           fsr1h	equ	0xFE2
  2333                           fsr1l	equ	0xFE1
  2334                           indf2	equ	0xFDF
  2335                           postinc2	equ	0xFDE
  2336                           postdec2	equ	0xFDD
  2337                           fsr2h	equ	0xFDA
  2338                           fsr2l	equ	0xFD9
  2339                           status	equ	0xFD8
  2340                           
  2341 ;; *************** function _init_timer1_lthread *****************
  2342 ;; Defined at:
  2343 ;;		line 6 in file "../src/timer1_thread.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  tptr            2   30[BANK0 ] PTR struct __timer1_thre
  2346 ;;		 -> main@t1thread_data(2), 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;		None
  2349 ;; Return value:  Size  Location     Type
  2350 ;;		None               void
  2351 ;; Registers used:
  2352 ;;		wreg, fsr2l, fsr2h
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2358 ;;      Params:         0       2       0       0       0
  2359 ;;      Locals:         0       0       0       0       0
  2360 ;;      Temps:          0       0       0       0       0
  2361 ;;      Totals:         0       2       0       0       0
  2362 ;;Total ram usage:        2 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; Hardware stack levels required when called:   10
  2365 ;; This function calls:
  2366 ;;		Nothing
  2367 ;; This function is called by:
  2368 ;;		_main
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           	psect	text9
  2373  001A6A                     __ptext9:
  2374                           	opt stack 0
  2375  001A6A                     _init_timer1_lthread:
  2376                           	opt stack 19
  2377                           
  2378                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;incstack = 0
  2382  001A6A  C0D4  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2383  001A6E  C0D5  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2384  001A72  0E00               	movlw	0
  2385  001A74  6EDE               	movwf	postinc2,c
  2386  001A76  0E00               	movlw	0
  2387  001A78  6EDD               	movwf	postdec2,c
  2388  001A7A  0012               	return	
  2389  001A7C                     __end_of_init_timer1_lthread:
  2390                           	opt stack 0
  2391                           tblptru	equ	0xFF8
  2392                           prodh	equ	0xFF4
  2393                           prodl	equ	0xFF3
  2394                           postinc0	equ	0xFEE
  2395                           wreg	equ	0xFE8
  2396                           indf1	equ	0xFE7
  2397                           fsr1h	equ	0xFE2
  2398                           fsr1l	equ	0xFE1
  2399                           indf2	equ	0xFDF
  2400                           postinc2	equ	0xFDE
  2401                           postdec2	equ	0xFDD
  2402                           fsr2h	equ	0xFDA
  2403                           fsr2l	equ	0xFD9
  2404                           status	equ	0xFD8
  2405                           
  2406 ;; *************** function _init_timer0_lthread *****************
  2407 ;; Defined at:
  2408 ;;		line 10 in file "../src/timer0_thread.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  tptr            2   30[BANK0 ] PTR struct __timer0_thre
  2411 ;;		 -> main@t0thread_data(2), 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;		None
  2414 ;; Return value:  Size  Location     Type
  2415 ;;		None               void
  2416 ;; Registers used:
  2417 ;;		wreg, fsr2l, fsr2h
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2423 ;;      Params:         0       2       0       0       0
  2424 ;;      Locals:         0       0       0       0       0
  2425 ;;      Temps:          0       0       0       0       0
  2426 ;;      Totals:         0       2       0       0       0
  2427 ;;Total ram usage:        2 bytes
  2428 ;; Hardware stack levels used:    1
  2429 ;; Hardware stack levels required when called:   10
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_main
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text10
  2438  001A7C                     __ptext10:
  2439                           	opt stack 0
  2440  001A7C                     _init_timer0_lthread:
  2441                           	opt stack 19
  2442                           
  2443                           ;timer0_thread.c: 11: tptr->msgcount = 0;
  2444                           
  2445                           ;incstack = 0
  2446  001A7C  C0D4  FFD9         	movff	init_timer0_lthread@tptr,fsr2l
  2447  001A80  C0D5  FFDA         	movff	init_timer0_lthread@tptr+1,fsr2h
  2448  001A84  0E00               	movlw	0
  2449  001A86  6EDE               	movwf	postinc2,c
  2450  001A88  0E00               	movlw	0
  2451  001A8A  6EDD               	movwf	postdec2,c
  2452  001A8C  0012               	return	
  2453  001A8E                     __end_of_init_timer0_lthread:
  2454                           	opt stack 0
  2455                           tblptru	equ	0xFF8
  2456                           prodh	equ	0xFF4
  2457                           prodl	equ	0xFF3
  2458                           postinc0	equ	0xFEE
  2459                           wreg	equ	0xFE8
  2460                           indf1	equ	0xFE7
  2461                           fsr1h	equ	0xFE2
  2462                           fsr1l	equ	0xFE1
  2463                           indf2	equ	0xFDF
  2464                           postinc2	equ	0xFDE
  2465                           postdec2	equ	0xFDD
  2466                           fsr2h	equ	0xFDA
  2467                           fsr2l	equ	0xFD9
  2468                           status	equ	0xFD8
  2469                           
  2470 ;; *************** function _init_queues *****************
  2471 ;; Defined at:
  2472 ;;		line 194 in file "../src/messages.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;		None
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;		None
  2477 ;; Return value:  Size  Location     Type
  2478 ;;		None               void
  2479 ;; Registers used:
  2480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2486 ;;      Params:         0       0       0       0       0
  2487 ;;      Locals:         0       0       0       0       0
  2488 ;;      Temps:          0       1       0       0       0
  2489 ;;      Totals:         0       1       0       0       0
  2490 ;;Total ram usage:        1 bytes
  2491 ;; Hardware stack levels used:    1
  2492 ;; Hardware stack levels required when called:   11
  2493 ;; This function calls:
  2494 ;;		_init_queue
  2495 ;; This function is called by:
  2496 ;;		_main
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text11
  2501  0014EE                     __ptext11:
  2502                           	opt stack 0
  2503  0014EE                     _init_queues:
  2504                           	opt stack 18
  2505                           
  2506                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2507                           
  2508                           ;incstack = 0
  2509  0014EE  0100               	movlb	0	; () banked
  2510  0014F0  6FD8               	movwf	??_init_queues& (0+255),b
  2511  0014F2  0E00               	movlw	0
  2512  0014F4  6E50               	movwf	_MQ_Main_Willing_to_block,c
  2513  0014F6  0100               	movlb	0	; () banked
  2514  0014F8  51D8               	movf	??_init_queues& (0+255),w,b
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2518  0014FA  0100               	movlb	0	; () banked
  2519  0014FC  0E00               	movlw	high _ToMainLow_MQ
  2520  0014FE  0100               	movlb	0	; () banked
  2521  001500  0100               	movlb	0	; () banked
  2522  001502  6FD5               	movwf	(init_queue@qptr+1)& (0+255),b
  2523  001504  0100               	movlb	0	; () banked
  2524  001506  0E80               	movlw	low _ToMainLow_MQ
  2525  001508  0100               	movlb	0	; () banked
  2526  00150A  0100               	movlb	0	; () banked
  2527  00150C  6FD4               	movwf	init_queue@qptr& (0+255),b
  2528  00150E  ECC8  F009         	call	_init_queue	;wreg free
  2529                           
  2530                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2531  001512  0101               	movlb	1	; () banked
  2532  001514  0E01               	movlw	high _ToMainHigh_MQ
  2533  001516  0100               	movlb	0	; () banked
  2534  001518  0100               	movlb	0	; () banked
  2535  00151A  6FD5               	movwf	(init_queue@qptr+1)& (0+255),b
  2536  00151C  0101               	movlb	1	; () banked
  2537  00151E  0E6C               	movlw	low _ToMainHigh_MQ
  2538  001520  0100               	movlb	0	; () banked
  2539  001522  0100               	movlb	0	; () banked
  2540  001524  6FD4               	movwf	init_queue@qptr& (0+255),b
  2541  001526  ECC8  F009         	call	_init_queue	;wreg free
  2542                           
  2543                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2544  00152A  0101               	movlb	1	; () banked
  2545  00152C  0E01               	movlw	high _FromMainLow_MQ
  2546  00152E  0100               	movlb	0	; () banked
  2547  001530  0100               	movlb	0	; () banked
  2548  001532  6FD5               	movwf	(init_queue@qptr+1)& (0+255),b
  2549  001534  0101               	movlb	1	; () banked
  2550  001536  0E36               	movlw	low _FromMainLow_MQ
  2551  001538  0100               	movlb	0	; () banked
  2552  00153A  0100               	movlb	0	; () banked
  2553  00153C  6FD4               	movwf	init_queue@qptr& (0+255),b
  2554  00153E  ECC8  F009         	call	_init_queue	;wreg free
  2555                           
  2556                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2557  001542  0101               	movlb	1	; () banked
  2558  001544  0E01               	movlw	high _FromMainHigh_MQ
  2559  001546  0100               	movlb	0	; () banked
  2560  001548  0100               	movlb	0	; () banked
  2561  00154A  6FD5               	movwf	(init_queue@qptr+1)& (0+255),b
  2562  00154C  0101               	movlb	1	; () banked
  2563  00154E  0E00               	movlw	low _FromMainHigh_MQ
  2564  001550  0100               	movlb	0	; () banked
  2565  001552  0100               	movlb	0	; () banked
  2566  001554  6FD4               	movwf	init_queue@qptr& (0+255),b
  2567  001556  ECC8  F009         	call	_init_queue	;wreg free
  2568  00155A  0012               	return	
  2569  00155C                     __end_of_init_queues:
  2570                           	opt stack 0
  2571                           tblptru	equ	0xFF8
  2572                           prodh	equ	0xFF4
  2573                           prodl	equ	0xFF3
  2574                           postinc0	equ	0xFEE
  2575                           wreg	equ	0xFE8
  2576                           indf1	equ	0xFE7
  2577                           fsr1h	equ	0xFE2
  2578                           fsr1l	equ	0xFE1
  2579                           indf2	equ	0xFDF
  2580                           postinc2	equ	0xFDE
  2581                           postdec2	equ	0xFDD
  2582                           fsr2h	equ	0xFDA
  2583                           fsr2l	equ	0xFD9
  2584                           status	equ	0xFD8
  2585                           
  2586 ;; *************** function _init_queue *****************
  2587 ;; Defined at:
  2588 ;;		line 14 in file "../src/messages.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  qptr            2   30[BANK0 ] PTR struct __msg_queue
  2591 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  i               1   33[BANK0 ] unsigned char 
  2594 ;; Return value:  Size  Location     Type
  2595 ;;		None               void
  2596 ;; Registers used:
  2597 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2603 ;;      Params:         0       2       0       0       0
  2604 ;;      Locals:         0       1       0       0       0
  2605 ;;      Temps:          0       1       0       0       0
  2606 ;;      Totals:         0       4       0       0       0
  2607 ;;Total ram usage:        4 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; Hardware stack levels required when called:   10
  2610 ;; This function calls:
  2611 ;;		Nothing
  2612 ;; This function is called by:
  2613 ;;		_init_queues
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           	psect	text12
  2618  001390                     __ptext12:
  2619                           	opt stack 0
  2620  001390                     _init_queue:
  2621                           	opt stack 18
  2622                           
  2623                           ;messages.c: 15: unsigned char i;
  2624                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2625                           
  2626                           ;incstack = 0
  2627  001390  0100               	movlb	0	; () banked
  2628  001392  EE20 F034          	lfsr	2,52
  2629  001396  0100               	movlb	0	; () banked
  2630  001398  51D4               	movf	init_queue@qptr& (0+255),w,b
  2631  00139A  26D9               	addwf	fsr2l,f,c
  2632  00139C  0100               	movlb	0	; () banked
  2633  00139E  51D5               	movf	(init_queue@qptr+1)& (0+255),w,b
  2634  0013A0  22DA               	addwfc	fsr2h,f,c
  2635  0013A2  0E00               	movlw	0
  2636  0013A4  6EDF               	movwf	indf2,c
  2637                           
  2638                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2639  0013A6  0100               	movlb	0	; () banked
  2640  0013A8  EE20 F035          	lfsr	2,53
  2641  0013AC  0100               	movlb	0	; () banked
  2642  0013AE  51D4               	movf	init_queue@qptr& (0+255),w,b
  2643  0013B0  26D9               	addwf	fsr2l,f,c
  2644  0013B2  0100               	movlb	0	; () banked
  2645  0013B4  51D5               	movf	(init_queue@qptr+1)& (0+255),w,b
  2646  0013B6  22DA               	addwfc	fsr2h,f,c
  2647  0013B8  0E00               	movlw	0
  2648  0013BA  6EDF               	movwf	indf2,c
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2652  0013BC  0100               	movlb	0	; () banked
  2653  0013BE  6FD6               	movwf	??_init_queue& (0+255),b
  2654  0013C0  0E00               	movlw	0
  2655  0013C2  0100               	movlb	0	; () banked
  2656  0013C4  0100               	movlb	0	; () banked
  2657  0013C6  6FD7               	movwf	init_queue@i& (0+255),b
  2658  0013C8  0100               	movlb	0	; () banked
  2659  0013CA  51D6               	movf	??_init_queue& (0+255),w,b
  2660                           
  2661                           ; BSR set to: 0
  2662  0013CC  0E03               	movlw	3
  2663  0013CE  0100               	movlb	0	; () banked
  2664  0013D0  0100               	movlb	0	; () banked
  2665  0013D2  65D7               	cpfsgt	init_queue@i& (0+255),b
  2666  0013D4  D001               	goto	l2432
  2667  0013D6  0012               	return	
  2668  0013D8                     l2432:
  2669                           
  2670                           ; BSR set to: 0
  2671                           ;messages.c: 20: qptr->queue[i].full = 0;
  2672  0013D8  0100               	movlb	0	; () banked
  2673  0013DA  0100               	movlb	0	; () banked
  2674  0013DC  51D7               	movf	init_queue@i& (0+255),w,b
  2675  0013DE  0D0D               	mullw	13
  2676  0013E0  50F3               	movf	prodl,w,c
  2677  0013E2  0100               	movlb	0	; () banked
  2678  0013E4  0100               	movlb	0	; () banked
  2679  0013E6  25D4               	addwf	init_queue@qptr& (0+255),w,b
  2680  0013E8  6ED9               	movwf	fsr2l,c
  2681  0013EA  50F4               	movf	prodh,w,c
  2682  0013EC  0100               	movlb	0	; () banked
  2683  0013EE  0100               	movlb	0	; () banked
  2684  0013F0  21D5               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2685  0013F2  6EDA               	movwf	fsr2h,c
  2686  0013F4  0E00               	movlw	0
  2687  0013F6  6EDF               	movwf	indf2,c
  2688                           
  2689                           ; BSR set to: 0
  2690  0013F8  0100               	movlb	0	; () banked
  2691  0013FA  0100               	movlb	0	; () banked
  2692  0013FC  2BD7               	incf	init_queue@i& (0+255),f,b
  2693                           
  2694                           ; BSR set to: 0
  2695  0013FE  0E03               	movlw	3
  2696  001400  0100               	movlb	0	; () banked
  2697  001402  0100               	movlb	0	; () banked
  2698  001404  65D7               	cpfsgt	init_queue@i& (0+255),b
  2699  001406  D7E8               	goto	l2432
  2700  001408  0012               	return	
  2701  00140A                     __end_of_init_queue:
  2702                           	opt stack 0
  2703                           tblptru	equ	0xFF8
  2704                           prodh	equ	0xFF4
  2705                           prodl	equ	0xFF3
  2706                           postinc0	equ	0xFEE
  2707                           wreg	equ	0xFE8
  2708                           indf1	equ	0xFE7
  2709                           fsr1h	equ	0xFE2
  2710                           fsr1l	equ	0xFE1
  2711                           indf2	equ	0xFDF
  2712                           postinc2	equ	0xFDE
  2713                           postdec2	equ	0xFDD
  2714                           fsr2h	equ	0xFDA
  2715                           fsr2l	equ	0xFD9
  2716                           status	equ	0xFD8
  2717                           
  2718 ;; *************** function _init_i2c *****************
  2719 ;; Defined at:
  2720 ;;		line 306 in file "../src/my_i2c.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;  ic              2   30[BANK0 ] PTR struct __i2c_comm
  2723 ;;		 -> main@ic(28), 
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;		None
  2726 ;; Return value:  Size  Location     Type
  2727 ;;		None               void
  2728 ;; Registers used:
  2729 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2735 ;;      Params:         0       2       0       0       0
  2736 ;;      Locals:         0       0       0       0       0
  2737 ;;      Temps:          0       0       0       0       0
  2738 ;;      Totals:         0       2       0       0       0
  2739 ;;Total ram usage:        2 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; Hardware stack levels required when called:   10
  2742 ;; This function calls:
  2743 ;;		Nothing
  2744 ;; This function is called by:
  2745 ;;		_main
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           	psect	text13
  2750  00155C                     __ptext13:
  2751                           	opt stack 0
  2752  00155C                     _init_i2c:
  2753                           	opt stack 19
  2754                           
  2755                           ;my_i2c.c: 307: ic_ptr = ic;
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;incstack = 0
  2759  00155C  0100               	movlb	0	; () banked
  2760  00155E  0100               	movlb	0	; () banked
  2761  001560  C0D5  F0E1         	movff	init_i2c@ic+1,_ic_ptr+1
  2762  001564  0100               	movlb	0	; () banked
  2763  001566  0100               	movlb	0	; () banked
  2764  001568  C0D4  F0E0         	movff	init_i2c@ic,_ic_ptr
  2765                           
  2766                           ; BSR set to: 0
  2767                           ;my_i2c.c: 308: ic_ptr->buflen = 0;
  2768  00156C  0100               	movlb	0	; () banked
  2769  00156E  EE20 F00A          	lfsr	2,10
  2770  001572  0100               	movlb	0	; () banked
  2771  001574  51E0               	movf	_ic_ptr& (0+255),w,b
  2772  001576  26D9               	addwf	fsr2l,f,c
  2773  001578  0100               	movlb	0	; () banked
  2774  00157A  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  2775  00157C  22DA               	addwfc	fsr2h,f,c
  2776  00157E  0E00               	movlw	0
  2777  001580  6EDF               	movwf	indf2,c
  2778                           
  2779                           ; BSR set to: 0
  2780                           ;my_i2c.c: 309: ic_ptr->event_count = 0;
  2781  001582  0100               	movlb	0	; () banked
  2782  001584  EE20 F00B          	lfsr	2,11
  2783  001588  0100               	movlb	0	; () banked
  2784  00158A  51E0               	movf	_ic_ptr& (0+255),w,b
  2785  00158C  26D9               	addwf	fsr2l,f,c
  2786  00158E  0100               	movlb	0	; () banked
  2787  001590  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  2788  001592  22DA               	addwfc	fsr2h,f,c
  2789  001594  0E00               	movlw	0
  2790  001596  6EDF               	movwf	indf2,c
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;my_i2c.c: 310: ic_ptr->status = 0x5;
  2794  001598  0100               	movlb	0	; () banked
  2795  00159A  EE20 F00C          	lfsr	2,12
  2796  00159E  0100               	movlb	0	; () banked
  2797  0015A0  51E0               	movf	_ic_ptr& (0+255),w,b
  2798  0015A2  26D9               	addwf	fsr2l,f,c
  2799  0015A4  0100               	movlb	0	; () banked
  2800  0015A6  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  2801  0015A8  22DA               	addwfc	fsr2h,f,c
  2802  0015AA  0E05               	movlw	5
  2803  0015AC  6EDF               	movwf	indf2,c
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;my_i2c.c: 311: ic_ptr->error_count = 0;
  2807  0015AE  0100               	movlb	0	; () banked
  2808  0015B0  EE20 F00E          	lfsr	2,14
  2809  0015B4  0100               	movlb	0	; () banked
  2810  0015B6  51E0               	movf	_ic_ptr& (0+255),w,b
  2811  0015B8  26D9               	addwf	fsr2l,f,c
  2812  0015BA  0100               	movlb	0	; () banked
  2813  0015BC  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  2814  0015BE  22DA               	addwfc	fsr2h,f,c
  2815  0015C0  0E00               	movlw	0
  2816  0015C2  6EDF               	movwf	indf2,c
  2817                           
  2818                           ; BSR set to: 0
  2819  0015C4  0012               	return	
  2820  0015C6                     __end_of_init_i2c:
  2821                           	opt stack 0
  2822                           tblptru	equ	0xFF8
  2823                           prodh	equ	0xFF4
  2824                           prodl	equ	0xFF3
  2825                           postinc0	equ	0xFEE
  2826                           wreg	equ	0xFE8
  2827                           indf1	equ	0xFE7
  2828                           fsr1h	equ	0xFE2
  2829                           fsr1l	equ	0xFE1
  2830                           indf2	equ	0xFDF
  2831                           postinc2	equ	0xFDE
  2832                           postdec2	equ	0xFDD
  2833                           fsr2h	equ	0xFDA
  2834                           fsr2l	equ	0xFD9
  2835                           status	equ	0xFD8
  2836                           
  2837 ;; *************** function _initADC *****************
  2838 ;; Defined at:
  2839 ;;		line 98 in file "../src/main.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;		None
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;  ADCValue        2   37[BANK0 ] int 
  2844 ;; Return value:  Size  Location     Type
  2845 ;;		None               void
  2846 ;; Registers used:
  2847 ;;		wreg, status,2, status,0, cstack
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2853 ;;      Params:         0       0       0       0       0
  2854 ;;      Locals:         0       2       0       0       0
  2855 ;;      Temps:          0       2       0       0       0
  2856 ;;      Totals:         0       4       0       0       0
  2857 ;;Total ram usage:        4 bytes
  2858 ;; Hardware stack levels used:    1
  2859 ;; Hardware stack levels required when called:   11
  2860 ;; This function calls:
  2861 ;;		_ConvertADC
  2862 ;;		_OpenADC
  2863 ;; This function is called by:
  2864 ;;		_main
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text14
  2869  0016B8                     __ptext14:
  2870                           	opt stack 0
  2871  0016B8                     _initADC:
  2872                           	opt stack 18
  2873                           
  2874                           ;main.c: 100: TRISB7 = 0;
  2875                           
  2876                           ; BSR set to: 0
  2877                           ;incstack = 0
  2878  0016B8  9E93               	bcf	3987,7,c	;volatile
  2879                           
  2880                           ;main.c: 101: int ADCValue = 0;
  2881  0016BA  0E00               	movlw	0
  2882  0016BC  0100               	movlb	0	; () banked
  2883  0016BE  0100               	movlb	0	; () banked
  2884  0016C0  6FDC               	movwf	(initADC@ADCValue+1)& (0+255),b
  2885  0016C2  0E00               	movlw	0
  2886  0016C4  0100               	movlb	0	; () banked
  2887  0016C6  6FDB               	movwf	initADC@ADCValue& (0+255),b
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;main.c: 103: OpenADC(0b10001111 & 0b11111111 & 0b11111111, 0b10000111 & 0b11111111 & 0b
      +                          11111110 & 0b11111101, 0b11111111);
  2891  0016C8  0100               	movlb	0	; () banked
  2892  0016CA  6FD9               	movwf	??_initADC& (0+255),b
  2893  0016CC  0E84               	movlw	132
  2894  0016CE  0100               	movlb	0	; () banked
  2895  0016D0  0100               	movlb	0	; () banked
  2896  0016D2  6FD4               	movwf	OpenADC@config2& (0+255),b
  2897  0016D4  0100               	movlb	0	; () banked
  2898  0016D6  51D9               	movf	??_initADC& (0+255),w,b
  2899  0016D8  0100               	movlb	0	; () banked
  2900  0016DA  6FDA               	movwf	(??_initADC+1)& (0+255),b
  2901  0016DC  0EFF               	movlw	255
  2902  0016DE  0100               	movlb	0	; () banked
  2903  0016E0  0100               	movlb	0	; () banked
  2904  0016E2  6FD5               	movwf	OpenADC@portconfig& (0+255),b
  2905  0016E4  0100               	movlb	0	; () banked
  2906  0016E6  51DA               	movf	(??_initADC+1)& (0+255),w,b
  2907  0016E8  0E8F               	movlw	143
  2908  0016EA  EC86  F009         	call	_OpenADC
  2909                           
  2910                           ;main.c: 104: (PIR1bits.ADIF=0,INTCONbits.PEIE=1,PIE1bits.ADIE=1);
  2911  0016EE  9C9E               	bcf	3998,6,c	;volatile
  2912  0016F0  8CF2               	bsf	intcon,6,c	;volatile
  2913  0016F2  8C9D               	bsf	3997,6,c	;volatile
  2914                           
  2915                           ;main.c: 105: (INTCONbits.GIE = 1);
  2916  0016F4  8EF2               	bsf	intcon,7,c	;volatile
  2917                           
  2918                           ;main.c: 106: ConvertADC();
  2919  0016F6  EC6E  F00D         	call	_ConvertADC	;wreg free
  2920  0016FA  0012               	return	
  2921  0016FC                     __end_of_initADC:
  2922                           	opt stack 0
  2923                           tblptru	equ	0xFF8
  2924                           prodh	equ	0xFF4
  2925                           prodl	equ	0xFF3
  2926                           intcon	equ	0xFF2
  2927                           postinc0	equ	0xFEE
  2928                           wreg	equ	0xFE8
  2929                           indf1	equ	0xFE7
  2930                           fsr1h	equ	0xFE2
  2931                           fsr1l	equ	0xFE1
  2932                           indf2	equ	0xFDF
  2933                           postinc2	equ	0xFDE
  2934                           postdec2	equ	0xFDD
  2935                           fsr2h	equ	0xFDA
  2936                           fsr2l	equ	0xFD9
  2937                           status	equ	0xFD8
  2938                           
  2939 ;; *************** function _OpenADC *****************
  2940 ;; Defined at:
  2941 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  config          1    wreg     unsigned char 
  2944 ;;  config2         1   30[BANK0 ] unsigned char 
  2945 ;;  portconfig      1   31[BANK0 ] unsigned char 
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;  config          1   34[BANK0 ] unsigned char 
  2948 ;; Return value:  Size  Location     Type
  2949 ;;		None               void
  2950 ;; Registers used:
  2951 ;;		wreg, status,2, status,0
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2957 ;;      Params:         0       2       0       0       0
  2958 ;;      Locals:         0       1       0       0       0
  2959 ;;      Temps:          0       2       0       0       0
  2960 ;;      Totals:         0       5       0       0       0
  2961 ;;Total ram usage:        5 bytes
  2962 ;; Hardware stack levels used:    1
  2963 ;; Hardware stack levels required when called:   10
  2964 ;; This function calls:
  2965 ;;		Nothing
  2966 ;; This function is called by:
  2967 ;;		_initADC
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text15
  2972  00130C                     __ptext15:
  2973                           	opt stack 0
  2974  00130C                     _OpenADC:
  2975                           	opt stack 18
  2976                           
  2977                           ;incstack = 0
  2978                           ;OpenADC@config stored from wreg
  2979  00130C  CFE8 F0D8          	movff	wreg,OpenADC@config
  2980  001310  0E00               	movlw	0
  2981  001312  6EC2               	movwf	4034,c	;volatile
  2982  001314  0E00               	movlw	0
  2983  001316  6EC0               	movwf	4032,c	;volatile
  2984  001318  0100               	movlb	0	; () banked
  2985  00131A  0100               	movlb	0	; () banked
  2986  00131C  90D8               	bcf	status,0,c
  2987  00131E  31D4               	rrcf	OpenADC@config2& (0+255),w,b
  2988  001320  0B3C               	andlw	60
  2989  001322  6EC2               	movwf	4034,c	;volatile
  2990                           
  2991                           ; BSR set to: 0
  2992  001324  C0D4  F0D6         	movff	OpenADC@config2,??_OpenADC
  2993  001328  0100               	movlb	0	; () banked
  2994  00132A  3BD6               	swapf	??_OpenADC& (0+255),f,b
  2995  00132C  0EF0               	movlw	240
  2996  00132E  17D6               	andwf	??_OpenADC& (0+255),f,b
  2997  001330  0E30               	movlw	48
  2998  001332  0100               	movlb	0	; () banked
  2999  001334  17D6               	andwf	??_OpenADC& (0+255),f,b
  3000  001336  0100               	movlb	0	; () banked
  3001  001338  0100               	movlb	0	; () banked
  3002  00133A  51D5               	movf	OpenADC@portconfig& (0+255),w,b
  3003  00133C  0B0F               	andlw	15
  3004  00133E  0100               	movlb	0	; () banked
  3005  001340  11D6               	iorwf	??_OpenADC& (0+255),w,b
  3006  001342  6EC1               	movwf	4033,c	;volatile
  3007                           
  3008                           ; BSR set to: 0
  3009  001344  C0D8  F0D6         	movff	OpenADC@config,??_OpenADC
  3010  001348  0100               	movlb	0	; () banked
  3011  00134A  90D8               	bcf	status,0,c
  3012  00134C  37D6               	rlcf	??_OpenADC& (0+255),f,b
  3013  00134E  0100               	movlb	0	; () banked
  3014  001350  90D8               	bcf	status,0,c
  3015  001352  37D6               	rlcf	??_OpenADC& (0+255),f,b
  3016  001354  0E38               	movlw	56
  3017  001356  0100               	movlb	0	; () banked
  3018  001358  17D6               	andwf	??_OpenADC& (0+255),f,b
  3019  00135A  C0D8  F0D7         	movff	OpenADC@config,??_OpenADC+1
  3020  00135E  0100               	movlb	0	; () banked
  3021  001360  3BD7               	swapf	(??_OpenADC+1)& (0+255),f,b
  3022  001362  0E0F               	movlw	15
  3023  001364  17D7               	andwf	(??_OpenADC+1)& (0+255),f,b
  3024  001366  0E07               	movlw	7
  3025  001368  0100               	movlb	0	; () banked
  3026  00136A  17D7               	andwf	(??_OpenADC+1)& (0+255),f,b
  3027  00136C  0100               	movlb	0	; () banked
  3028  00136E  0100               	movlb	0	; () banked
  3029  001370  51D8               	movf	OpenADC@config& (0+255),w,b
  3030  001372  0B80               	andlw	128
  3031  001374  0100               	movlb	0	; () banked
  3032  001376  11D7               	iorwf	(??_OpenADC+1)& (0+255),w,b
  3033  001378  0100               	movlb	0	; () banked
  3034  00137A  11D6               	iorwf	??_OpenADC& (0+255),w,b
  3035  00137C  6EC0               	movwf	4032,c	;volatile
  3036                           
  3037                           ; BSR set to: 0
  3038  00137E  0100               	movlb	0	; () banked
  3039  001380  0100               	movlb	0	; () banked
  3040  001382  AFD4               	btfss	OpenADC@config2& (0+255),7,b
  3041  001384  D003               	goto	l435
  3042                           
  3043                           ; BSR set to: 0
  3044  001386  9C9E               	bcf	3998,6,c	;volatile
  3045  001388  8C9D               	bsf	3997,6,c	;volatile
  3046  00138A  8CF2               	bsf	intcon,6,c	;volatile
  3047  00138C                     l435:
  3048                           
  3049                           ; BSR set to: 0
  3050  00138C  80C2               	bsf	4034,0,c	;volatile
  3051                           
  3052                           ; BSR set to: 0
  3053  00138E  0012               	return	
  3054  001390                     __end_of_OpenADC:
  3055                           	opt stack 0
  3056                           tblptru	equ	0xFF8
  3057                           prodh	equ	0xFF4
  3058                           prodl	equ	0xFF3
  3059                           intcon	equ	0xFF2
  3060                           postinc0	equ	0xFEE
  3061                           wreg	equ	0xFE8
  3062                           indf1	equ	0xFE7
  3063                           fsr1h	equ	0xFE2
  3064                           fsr1l	equ	0xFE1
  3065                           indf2	equ	0xFDF
  3066                           postinc2	equ	0xFDE
  3067                           postdec2	equ	0xFDD
  3068                           fsr2h	equ	0xFDA
  3069                           fsr2l	equ	0xFD9
  3070                           status	equ	0xFD8
  3071                           
  3072 ;; *************** function _ConvertADC *****************
  3073 ;; Defined at:
  3074 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcconv.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;		None
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;		None
  3079 ;; Return value:  Size  Location     Type
  3080 ;;		None               void
  3081 ;; Registers used:
  3082 ;;		None
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3088 ;;      Params:         0       0       0       0       0
  3089 ;;      Locals:         0       0       0       0       0
  3090 ;;      Temps:          0       0       0       0       0
  3091 ;;      Totals:         0       0       0       0       0
  3092 ;;Total ram usage:        0 bytes
  3093 ;; Hardware stack levels used:    1
  3094 ;; Hardware stack levels required when called:   10
  3095 ;; This function calls:
  3096 ;;		Nothing
  3097 ;; This function is called by:
  3098 ;;		_initADC
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           	psect	text16
  3103  001ADC                     __ptext16:
  3104                           	opt stack 0
  3105  001ADC                     _ConvertADC:
  3106                           	opt stack 18
  3107                           
  3108                           ; BSR set to: 0
  3109                           ;incstack = 0
  3110  001ADC  82C2               	bsf	4034,1,c	;volatile
  3111  001ADE  0012               	return	
  3112  001AE0                     __end_of_ConvertADC:
  3113                           	opt stack 0
  3114                           tblptru	equ	0xFF8
  3115                           prodh	equ	0xFF4
  3116                           prodl	equ	0xFF3
  3117                           intcon	equ	0xFF2
  3118                           postinc0	equ	0xFEE
  3119                           wreg	equ	0xFE8
  3120                           indf1	equ	0xFE7
  3121                           fsr1h	equ	0xFE2
  3122                           fsr1l	equ	0xFE1
  3123                           indf2	equ	0xFDF
  3124                           postinc2	equ	0xFDE
  3125                           postdec2	equ	0xFDD
  3126                           fsr2h	equ	0xFDA
  3127                           fsr2l	equ	0xFD9
  3128                           status	equ	0xFD8
  3129                           
  3130 ;; *************** function _i2c_configure_slave *****************
  3131 ;; Defined at:
  3132 ;;		line 317 in file "../src/my_i2c.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;  addr            1    wreg     unsigned char 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;  addr            1   30[BANK0 ] unsigned char 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;		None               void
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3146 ;;      Params:         0       0       0       0       0
  3147 ;;      Locals:         0       1       0       0       0
  3148 ;;      Temps:          0       0       0       0       0
  3149 ;;      Totals:         0       1       0       0       0
  3150 ;;Total ram usage:        1 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:   10
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_main
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text17
  3161  001980                     __ptext17:
  3162                           	opt stack 0
  3163  001980                     _i2c_configure_slave:
  3164                           	opt stack 19
  3165                           
  3166                           ;incstack = 0
  3167                           ;i2c_configure_slave@addr stored from wreg
  3168  001980  CFE8 F0D4          	movff	wreg,i2c_configure_slave@addr
  3169                           
  3170                           ;my_i2c.c: 320: TRISCbits.TRISC3 = 1;
  3171  001984  8694               	bsf	3988,3,c	;volatile
  3172                           
  3173                           ;my_i2c.c: 321: TRISCbits.TRISC4 = 1;
  3174  001986  8894               	bsf	3988,4,c	;volatile
  3175                           
  3176                           ;my_i2c.c: 323: SSPADD = addr;
  3177  001988  C0D4  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3178                           
  3179                           ;my_i2c.c: 325: SSPSTAT = 0x0;
  3180  00198C  0E00               	movlw	0
  3181  00198E  6EC7               	movwf	4039,c	;volatile
  3182                           
  3183                           ;my_i2c.c: 326: SSPCON1 = 0x0;
  3184  001990  0E00               	movlw	0
  3185  001992  6EC6               	movwf	4038,c	;volatile
  3186                           
  3187                           ;my_i2c.c: 327: SSPCON2 = 0x0;
  3188  001994  0E00               	movlw	0
  3189  001996  6EC5               	movwf	4037,c	;volatile
  3190                           
  3191                           ;my_i2c.c: 328: SSPCON1 |= 0x0E;
  3192  001998  0E0E               	movlw	14
  3193  00199A  12C6               	iorwf	4038,f,c	;volatile
  3194                           
  3195                           ;my_i2c.c: 329: SSPSTAT |= 0b10000000;
  3196  00199C  8EC7               	bsf	4039,7,c	;volatile
  3197                           
  3198                           ;my_i2c.c: 331: TRISCbits.TRISC3 = 1;
  3199  00199E  8694               	bsf	3988,3,c	;volatile
  3200                           
  3201                           ;my_i2c.c: 332: TRISCbits.TRISC4 = 1;
  3202  0019A0  8894               	bsf	3988,4,c	;volatile
  3203                           
  3204                           ;my_i2c.c: 342: SSPCON2bits.SEN = 1;
  3205  0019A2  80C5               	bsf	4037,0,c	;volatile
  3206                           
  3207                           ;my_i2c.c: 343: SSPCON1 |= 0b00100000;
  3208  0019A4  8AC6               	bsf	4038,5,c	;volatile
  3209  0019A6  0012               	return	
  3210  0019A8                     __end_of_i2c_configure_slave:
  3211                           	opt stack 0
  3212                           tblptru	equ	0xFF8
  3213                           prodh	equ	0xFF4
  3214                           prodl	equ	0xFF3
  3215                           intcon	equ	0xFF2
  3216                           postinc0	equ	0xFEE
  3217                           wreg	equ	0xFE8
  3218                           indf1	equ	0xFE7
  3219                           fsr1h	equ	0xFE2
  3220                           fsr1l	equ	0xFE1
  3221                           indf2	equ	0xFDF
  3222                           postinc2	equ	0xFDE
  3223                           postdec2	equ	0xFDD
  3224                           fsr2h	equ	0xFDA
  3225                           fsr2l	equ	0xFD9
  3226                           status	equ	0xFD8
  3227                           
  3228 ;; *************** function _enable_interrupts *****************
  3229 ;; Defined at:
  3230 ;;		line 33 in file "../src/interrupts.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;		None
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;		None
  3235 ;; Return value:  Size  Location     Type
  3236 ;;		None               void
  3237 ;; Registers used:
  3238 ;;		None
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3244 ;;      Params:         0       0       0       0       0
  3245 ;;      Locals:         0       0       0       0       0
  3246 ;;      Temps:          0       0       0       0       0
  3247 ;;      Totals:         0       0       0       0       0
  3248 ;;Total ram usage:        0 bytes
  3249 ;; Hardware stack levels used:    1
  3250 ;; Hardware stack levels required when called:   10
  3251 ;; This function calls:
  3252 ;;		Nothing
  3253 ;; This function is called by:
  3254 ;;		_main
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           	psect	text18
  3259  001AA0                     __ptext18:
  3260                           	opt stack 0
  3261  001AA0                     _enable_interrupts:
  3262                           	opt stack 19
  3263                           
  3264                           ;interrupts.c: 36: RCONbits.IPEN = 1;
  3265                           
  3266                           ;incstack = 0
  3267  001AA0  8ED0               	bsf	4048,7,c	;volatile
  3268                           
  3269                           ;interrupts.c: 37: INTCONbits.GIEH = 1;
  3270  001AA2  8EF2               	bsf	intcon,7,c	;volatile
  3271                           
  3272                           ;interrupts.c: 38: INTCONbits.GIEL = 1;
  3273  001AA4  8CF2               	bsf	intcon,6,c	;volatile
  3274                           
  3275                           ;interrupts.c: 40: INTCONbits.TMR0IE = 1;
  3276  001AA6  8AF2               	bsf	intcon,5,c	;volatile
  3277                           
  3278                           ;interrupts.c: 42: INTCON2bits.TMR0IP = 1;
  3279  001AA8  84F1               	bsf	intcon2,2,c	;volatile
  3280  001AAA  0012               	return	
  3281  001AAC                     __end_of_enable_interrupts:
  3282                           	opt stack 0
  3283                           tblptru	equ	0xFF8
  3284                           prodh	equ	0xFF4
  3285                           prodl	equ	0xFF3
  3286                           intcon	equ	0xFF2
  3287                           intcon2	equ	0xFF1
  3288                           postinc0	equ	0xFEE
  3289                           wreg	equ	0xFE8
  3290                           indf1	equ	0xFE7
  3291                           fsr1h	equ	0xFE2
  3292                           fsr1l	equ	0xFE1
  3293                           indf2	equ	0xFDF
  3294                           postinc2	equ	0xFDE
  3295                           postdec2	equ	0xFDD
  3296                           fsr2h	equ	0xFDA
  3297                           fsr2l	equ	0xFD9
  3298                           status	equ	0xFD8
  3299                           
  3300 ;; *************** function _block_on_To_msgqueues *****************
  3301 ;; Defined at:
  3302 ;;		line 258 in file "../src/messages.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;		None
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;		None
  3307 ;; Return value:  Size  Location     Type
  3308 ;;		None               void
  3309 ;; Registers used:
  3310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3316 ;;      Params:         0       0       0       0       0
  3317 ;;      Locals:         0       0       0       0       0
  3318 ;;      Temps:          0       1       0       0       0
  3319 ;;      Totals:         0       1       0       0       0
  3320 ;;Total ram usage:        1 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:   13
  3323 ;; This function calls:
  3324 ;;		_Delay1KTCYx
  3325 ;;		_check_msg
  3326 ;;		_in_main
  3327 ;; This function is called by:
  3328 ;;		_main
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           	psect	text19
  3333  0010AE                     __ptext19:
  3334                           	opt stack 0
  3335  0010AE                     _block_on_To_msgqueues:
  3336                           	opt stack 16
  3337                           
  3338                           ;messages.c: 259: if (!in_main()) {
  3339                           
  3340                           ;incstack = 0
  3341  0010AE  EC7E  F00B         	call	_in_main	;wreg free
  3342  0010B2  0100               	movlb	0	; () banked
  3343  0010B4  0100               	movlb	0	; () banked
  3344  0010B6  51D9               	movf	(?_in_main+1)& (0+255),w,b
  3345  0010B8  0100               	movlb	0	; () banked
  3346  0010BA  11D8               	iorwf	?_in_main& (0+255),w,b
  3347  0010BC  B4D8               	btfsc	status,2,c
  3348  0010BE  0012               	return	
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;messages.c: 261: }
  3352                           ;messages.c: 262: LATBbits.LATB3 = 1;
  3353                           
  3354                           ; BSR set to: 0
  3355                           ;messages.c: 260: return;
  3356  0010C0  868A               	bsf	3978,3,c	;volatile
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3360  0010C2  0100               	movlb	0	; () banked
  3361  0010C4  6FDA               	movwf	??_block_on_To_msgqueues& (0+255),b
  3362  0010C6  0E01               	movlw	1
  3363  0010C8  6E50               	movwf	_MQ_Main_Willing_to_block,c
  3364  0010CA  0100               	movlb	0	; () banked
  3365  0010CC  51DA               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3366  0010CE                     l2588:
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3370  0010CE  0101               	movlb	1	; () banked
  3371  0010D0  0E01               	movlw	high _ToMainHigh_MQ
  3372  0010D2  0100               	movlb	0	; () banked
  3373  0010D4  0100               	movlb	0	; () banked
  3374  0010D6  6FD5               	movwf	(check_msg@qptr+1)& (0+255),b
  3375  0010D8  0101               	movlb	1	; () banked
  3376  0010DA  0E6C               	movlw	low _ToMainHigh_MQ
  3377  0010DC  0100               	movlb	0	; () banked
  3378  0010DE  0100               	movlb	0	; () banked
  3379  0010E0  6FD4               	movwf	check_msg@qptr& (0+255),b
  3380  0010E2  EC79  F00C         	call	_check_msg	;wreg free
  3381  0010E6  0900               	iorlw	0
  3382  0010E8  B4D8               	btfsc	status,2,c
  3383  0010EA  D008               	goto	l2596
  3384                           
  3385                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3386  0010EC  0100               	movlb	0	; () banked
  3387  0010EE  6FDA               	movwf	??_block_on_To_msgqueues& (0+255),b
  3388  0010F0  0E00               	movlw	0
  3389  0010F2  6E50               	movwf	_MQ_Main_Willing_to_block,c
  3390  0010F4  0100               	movlb	0	; () banked
  3391  0010F6  51DA               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;messages.c: 267: LATBbits.LATB3 = 0;
  3395  0010F8  968A               	bcf	3978,3,c	;volatile
  3396  0010FA  0012               	return	
  3397  0010FC                     l2596:
  3398                           
  3399                           ;messages.c: 269: }
  3400                           ;messages.c: 270: if (check_msg(&ToMainLow_MQ)) {
  3401  0010FC  0100               	movlb	0	; () banked
  3402  0010FE  0E00               	movlw	high _ToMainLow_MQ
  3403  001100  0100               	movlb	0	; () banked
  3404  001102  0100               	movlb	0	; () banked
  3405  001104  6FD5               	movwf	(check_msg@qptr+1)& (0+255),b
  3406  001106  0100               	movlb	0	; () banked
  3407  001108  0E80               	movlw	low _ToMainLow_MQ
  3408  00110A  0100               	movlb	0	; () banked
  3409  00110C  0100               	movlb	0	; () banked
  3410  00110E  6FD4               	movwf	check_msg@qptr& (0+255),b
  3411  001110  EC79  F00C         	call	_check_msg	;wreg free
  3412  001114  0900               	iorlw	0
  3413  001116  B4D8               	btfsc	status,2,c
  3414  001118  D008               	goto	l2604
  3415                           
  3416                           ;messages.c: 271: MQ_Main_Willing_to_block = 0;
  3417  00111A  0100               	movlb	0	; () banked
  3418  00111C  6FDA               	movwf	??_block_on_To_msgqueues& (0+255),b
  3419  00111E  0E00               	movlw	0
  3420  001120  6E50               	movwf	_MQ_Main_Willing_to_block,c
  3421  001122  0100               	movlb	0	; () banked
  3422  001124  51DA               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3423                           
  3424                           ; BSR set to: 0
  3425                           ;messages.c: 272: LATBbits.LATB3 = 0;
  3426  001126  968A               	bcf	3978,3,c	;volatile
  3427  001128  0012               	return	
  3428  00112A                     l2604:
  3429                           
  3430                           ;messages.c: 274: }
  3431                           ;messages.c: 275: Delay1KTCYx(10);
  3432  00112A  0E0A               	movlw	10
  3433  00112C  EC2A  F00D         	call	_Delay1KTCYx
  3434                           
  3435                           ;messages.c: 276: LATBbits.LATB3 = !LATBbits.LATB3;
  3436  001130  B68A               	btfsc	3978,3,c	;volatile
  3437  001132  D002               	goto	u1590
  3438  001134  0E01               	movlw	1
  3439  001136  D001               	goto	u1596
  3440  001138                     u1590:
  3441  001138  0E00               	movlw	0
  3442  00113A                     u1596:
  3443  00113A  0100               	movlb	0	; () banked
  3444  00113C  6FDA               	movwf	??_block_on_To_msgqueues& (0+255),b
  3445  00113E  0100               	movlb	0	; () banked
  3446  001140  47DA               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3447  001142  47DA               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3448  001144  47DA               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3449  001146  508A               	movf	3978,w,c	;volatile
  3450  001148  0100               	movlb	0	; () banked
  3451  00114A  19DA               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  3452  00114C  0BF7               	andlw	-9
  3453  00114E  19DA               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  3454  001150  6E8A               	movwf	3978,c	;volatile
  3455  001152  D7BD               	goto	l2588
  3456  001154                     __end_of_block_on_To_msgqueues:
  3457                           	opt stack 0
  3458                           tblptru	equ	0xFF8
  3459                           prodh	equ	0xFF4
  3460                           prodl	equ	0xFF3
  3461                           intcon	equ	0xFF2
  3462                           intcon2	equ	0xFF1
  3463                           postinc0	equ	0xFEE
  3464                           wreg	equ	0xFE8
  3465                           indf1	equ	0xFE7
  3466                           fsr1h	equ	0xFE2
  3467                           fsr1l	equ	0xFE1
  3468                           indf2	equ	0xFDF
  3469                           postinc2	equ	0xFDE
  3470                           postdec2	equ	0xFDD
  3471                           fsr2h	equ	0xFDA
  3472                           fsr2l	equ	0xFD9
  3473                           status	equ	0xFD8
  3474                           
  3475 ;; *************** function _in_main *****************
  3476 ;; Defined at:
  3477 ;;		line 63 in file "../src/interrupts.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;		None
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;		None
  3482 ;; Return value:  Size  Location     Type
  3483 ;;                  2   34[BANK0 ] int 
  3484 ;; Registers used:
  3485 ;;		wreg, status,2, status,0, cstack
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3491 ;;      Params:         0       2       0       0       0
  3492 ;;      Locals:         0       0       0       0       0
  3493 ;;      Temps:          0       0       0       0       0
  3494 ;;      Totals:         0       2       0       0       0
  3495 ;;Total ram usage:        2 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; Hardware stack levels required when called:   12
  3498 ;; This function calls:
  3499 ;;		_in_high_int
  3500 ;;		_in_low_int
  3501 ;; This function is called by:
  3502 ;;		_block_on_To_msgqueues
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506                           	psect	text20
  3507  0016FC                     __ptext20:
  3508                           	opt stack 0
  3509  0016FC                     _in_main:
  3510                           	opt stack 16
  3511                           
  3512                           ;interrupts.c: 64: if ((!in_low_int()) && (!in_high_int())) {
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;incstack = 0
  3516  0016FC  EC39  F00B         	call	_in_low_int	;wreg free
  3517  001700  0100               	movlb	0	; () banked
  3518  001702  0100               	movlb	0	; () banked
  3519  001704  51D7               	movf	(?_in_low_int+1)& (0+255),w,b
  3520  001706  0100               	movlb	0	; () banked
  3521  001708  11D6               	iorwf	?_in_low_int& (0+255),w,b
  3522  00170A  A4D8               	btfss	status,2,c
  3523  00170C  D011               	goto	l2618
  3524                           
  3525                           ; BSR set to: 0
  3526  00170E  EC47  F00D         	call	_in_high_int	;wreg free
  3527  001712  0100               	movlb	0	; () banked
  3528  001714  0100               	movlb	0	; () banked
  3529  001716  51D5               	movf	(?_in_high_int+1)& (0+255),w,b
  3530  001718  0100               	movlb	0	; () banked
  3531  00171A  11D4               	iorwf	?_in_high_int& (0+255),w,b
  3532  00171C  A4D8               	btfss	status,2,c
  3533  00171E  D008               	goto	l2618
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;interrupts.c: 65: return (1);
  3537  001720  0E00               	movlw	0
  3538  001722  0100               	movlb	0	; () banked
  3539  001724  0100               	movlb	0	; () banked
  3540  001726  6FD9               	movwf	(?_in_main+1)& (0+255),b
  3541  001728  0E01               	movlw	1
  3542  00172A  0100               	movlb	0	; () banked
  3543  00172C  6FD8               	movwf	?_in_main& (0+255),b
  3544  00172E  0012               	return	
  3545  001730                     l2618:
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;interrupts.c: 67: return (0);
  3549  001730  0E00               	movlw	0
  3550  001732  0100               	movlb	0	; () banked
  3551  001734  0100               	movlb	0	; () banked
  3552  001736  6FD9               	movwf	(?_in_main+1)& (0+255),b
  3553  001738  0E00               	movlw	0
  3554  00173A  0100               	movlb	0	; () banked
  3555  00173C  6FD8               	movwf	?_in_main& (0+255),b
  3556  00173E  0012               	return	
  3557  001740                     __end_of_in_main:
  3558                           	opt stack 0
  3559                           tblptru	equ	0xFF8
  3560                           prodh	equ	0xFF4
  3561                           prodl	equ	0xFF3
  3562                           intcon	equ	0xFF2
  3563                           intcon2	equ	0xFF1
  3564                           postinc0	equ	0xFEE
  3565                           wreg	equ	0xFE8
  3566                           indf1	equ	0xFE7
  3567                           fsr1h	equ	0xFE2
  3568                           fsr1l	equ	0xFE1
  3569                           indf2	equ	0xFDF
  3570                           postinc2	equ	0xFDE
  3571                           postdec2	equ	0xFDD
  3572                           fsr2h	equ	0xFDA
  3573                           fsr2l	equ	0xFD9
  3574                           status	equ	0xFD8
  3575                           
  3576 ;; *************** function _in_low_int *****************
  3577 ;; Defined at:
  3578 ;;		line 53 in file "../src/interrupts.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;		None
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;		None
  3583 ;; Return value:  Size  Location     Type
  3584 ;;                  2   32[BANK0 ] int 
  3585 ;; Registers used:
  3586 ;;		wreg, status,2, status,0, cstack
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3592 ;;      Params:         0       2       0       0       0
  3593 ;;      Locals:         0       0       0       0       0
  3594 ;;      Temps:          0       0       0       0       0
  3595 ;;      Totals:         0       2       0       0       0
  3596 ;;Total ram usage:        2 bytes
  3597 ;; Hardware stack levels used:    1
  3598 ;; Hardware stack levels required when called:   11
  3599 ;; This function calls:
  3600 ;;		_in_high_int
  3601 ;; This function is called by:
  3602 ;;		_in_main
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606                           	psect	text21
  3607  001672                     __ptext21:
  3608                           	opt stack 0
  3609  001672                     _in_low_int:
  3610                           	opt stack 16
  3611                           
  3612                           ;interrupts.c: 54: if (INTCONbits.GIEL == 1) {
  3613                           
  3614                           ; BSR set to: 0
  3615                           ;incstack = 0
  3616  001672  ACF2               	btfss	intcon,6,c	;volatile
  3617  001674  D008               	goto	l2566
  3618                           
  3619                           ;interrupts.c: 55: return (0);
  3620  001676  0E00               	movlw	0
  3621  001678  0100               	movlb	0	; () banked
  3622  00167A  0100               	movlb	0	; () banked
  3623  00167C  6FD7               	movwf	(?_in_low_int+1)& (0+255),b
  3624  00167E  0E00               	movlw	0
  3625  001680  0100               	movlb	0	; () banked
  3626  001682  6FD6               	movwf	?_in_low_int& (0+255),b
  3627  001684  0012               	return	
  3628  001686                     l2566:
  3629  001686  EC47  F00D         	call	_in_high_int	;wreg free
  3630  00168A  0100               	movlb	0	; () banked
  3631  00168C  0100               	movlb	0	; () banked
  3632  00168E  51D5               	movf	(?_in_high_int+1)& (0+255),w,b
  3633  001690  0100               	movlb	0	; () banked
  3634  001692  11D4               	iorwf	?_in_high_int& (0+255),w,b
  3635  001694  B4D8               	btfsc	status,2,c
  3636  001696  D008               	goto	l2574
  3637                           
  3638                           ; BSR set to: 0
  3639                           ;interrupts.c: 57: return (0);
  3640  001698  0E00               	movlw	0
  3641  00169A  0100               	movlb	0	; () banked
  3642  00169C  0100               	movlb	0	; () banked
  3643  00169E  6FD7               	movwf	(?_in_low_int+1)& (0+255),b
  3644  0016A0  0E00               	movlw	0
  3645  0016A2  0100               	movlb	0	; () banked
  3646  0016A4  6FD6               	movwf	?_in_low_int& (0+255),b
  3647  0016A6  0012               	return	
  3648  0016A8                     l2574:
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;interrupts.c: 59: return (1);
  3652  0016A8  0E00               	movlw	0
  3653  0016AA  0100               	movlb	0	; () banked
  3654  0016AC  0100               	movlb	0	; () banked
  3655  0016AE  6FD7               	movwf	(?_in_low_int+1)& (0+255),b
  3656  0016B0  0E01               	movlw	1
  3657  0016B2  0100               	movlb	0	; () banked
  3658  0016B4  6FD6               	movwf	?_in_low_int& (0+255),b
  3659  0016B6  0012               	return	
  3660  0016B8                     __end_of_in_low_int:
  3661                           	opt stack 0
  3662                           tblptru	equ	0xFF8
  3663                           prodh	equ	0xFF4
  3664                           prodl	equ	0xFF3
  3665                           intcon	equ	0xFF2
  3666                           intcon2	equ	0xFF1
  3667                           postinc0	equ	0xFEE
  3668                           wreg	equ	0xFE8
  3669                           indf1	equ	0xFE7
  3670                           fsr1h	equ	0xFE2
  3671                           fsr1l	equ	0xFE1
  3672                           indf2	equ	0xFDF
  3673                           postinc2	equ	0xFDE
  3674                           postdec2	equ	0xFDD
  3675                           fsr2h	equ	0xFDA
  3676                           fsr2l	equ	0xFD9
  3677                           status	equ	0xFD8
  3678                           
  3679 ;; *************** function _in_high_int *****************
  3680 ;; Defined at:
  3681 ;;		line 45 in file "../src/interrupts.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;		None
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;		None
  3686 ;; Return value:  Size  Location     Type
  3687 ;;                  2   30[BANK0 ] int 
  3688 ;; Registers used:
  3689 ;;		wreg, status,2
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3695 ;;      Params:         0       2       0       0       0
  3696 ;;      Locals:         0       0       0       0       0
  3697 ;;      Temps:          0       0       0       0       0
  3698 ;;      Totals:         0       2       0       0       0
  3699 ;;Total ram usage:        2 bytes
  3700 ;; Hardware stack levels used:    1
  3701 ;; Hardware stack levels required when called:   10
  3702 ;; This function calls:
  3703 ;;		Nothing
  3704 ;; This function is called by:
  3705 ;;		_in_low_int
  3706 ;;		_in_main
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           
  3710                           	psect	text22
  3711  001A8E                     __ptext22:
  3712                           	opt stack 0
  3713  001A8E                     _in_high_int:
  3714                           	opt stack 16
  3715                           
  3716                           ;interrupts.c: 46: return (!INTCONbits.GIEH);
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;incstack = 0
  3720  001A8E  0E00               	movlw	0
  3721  001A90  AEF2               	btfss	intcon,7,c	;volatile
  3722  001A92  0E01               	movlw	1
  3723  001A94  0100               	movlb	0	; () banked
  3724  001A96  0100               	movlb	0	; () banked
  3725  001A98  6FD4               	movwf	?_in_high_int& (0+255),b
  3726  001A9A  0100               	movlb	0	; () banked
  3727  001A9C  6BD5               	clrf	(?_in_high_int+1)& (0+255),b
  3728  001A9E  0012               	return	
  3729  001AA0                     __end_of_in_high_int:
  3730                           	opt stack 0
  3731                           tblptru	equ	0xFF8
  3732                           prodh	equ	0xFF4
  3733                           prodl	equ	0xFF3
  3734                           intcon	equ	0xFF2
  3735                           intcon2	equ	0xFF1
  3736                           postinc0	equ	0xFEE
  3737                           wreg	equ	0xFE8
  3738                           indf1	equ	0xFE7
  3739                           fsr1h	equ	0xFE2
  3740                           fsr1l	equ	0xFE1
  3741                           indf2	equ	0xFDF
  3742                           postinc2	equ	0xFDE
  3743                           postdec2	equ	0xFDD
  3744                           fsr2h	equ	0xFDA
  3745                           fsr2l	equ	0xFD9
  3746                           status	equ	0xFD8
  3747                           
  3748 ;; *************** function _check_msg *****************
  3749 ;; Defined at:
  3750 ;;		line 222 in file "../src/messages.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  qptr            2   30[BANK0 ] PTR struct __msg_queue
  3753 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;		None
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  1    wreg      unsigned char 
  3758 ;; Registers used:
  3759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3765 ;;      Params:         0       2       0       0       0
  3766 ;;      Locals:         0       0       0       0       0
  3767 ;;      Temps:          0       1       0       0       0
  3768 ;;      Totals:         0       3       0       0       0
  3769 ;;Total ram usage:        3 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; Hardware stack levels required when called:   10
  3772 ;; This function calls:
  3773 ;;		Nothing
  3774 ;; This function is called by:
  3775 ;;		_block_on_To_msgqueues
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	text23
  3780  0018F2                     __ptext23:
  3781                           	opt stack 0
  3782  0018F2                     _check_msg:
  3783                           	opt stack 18
  3784                           
  3785                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;incstack = 0
  3789  0018F2  0100               	movlb	0	; () banked
  3790  0018F4  EE20 F035          	lfsr	2,53
  3791  0018F8  0100               	movlb	0	; () banked
  3792  0018FA  51D4               	movf	check_msg@qptr& (0+255),w,b
  3793  0018FC  26D9               	addwf	fsr2l,f,c
  3794  0018FE  0100               	movlb	0	; () banked
  3795  001900  51D5               	movf	(check_msg@qptr+1)& (0+255),w,b
  3796  001902  22DA               	addwfc	fsr2h,f,c
  3797  001904  50DF               	movf	indf2,w,c
  3798  001906  0100               	movlb	0	; () banked
  3799  001908  6FD6               	movwf	??_check_msg& (0+255),b
  3800  00190A  0100               	movlb	0	; () banked
  3801  00190C  51D6               	movf	??_check_msg& (0+255),w,b
  3802  00190E  0D0D               	mullw	13
  3803  001910  50F3               	movf	prodl,w,c
  3804  001912  0100               	movlb	0	; () banked
  3805  001914  0100               	movlb	0	; () banked
  3806  001916  25D4               	addwf	check_msg@qptr& (0+255),w,b
  3807  001918  6ED9               	movwf	fsr2l,c
  3808  00191A  50F4               	movf	prodh,w,c
  3809  00191C  0100               	movlb	0	; () banked
  3810  00191E  0100               	movlb	0	; () banked
  3811  001920  21D5               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3812  001922  6EDA               	movwf	fsr2h,c
  3813  001924  50DF               	movf	indf2,w,c
  3814  001926  0012               	return	
  3815  001928                     __end_of_check_msg:
  3816                           	opt stack 0
  3817                           tblptru	equ	0xFF8
  3818                           prodh	equ	0xFF4
  3819                           prodl	equ	0xFF3
  3820                           intcon	equ	0xFF2
  3821                           intcon2	equ	0xFF1
  3822                           postinc0	equ	0xFEE
  3823                           wreg	equ	0xFE8
  3824                           indf1	equ	0xFE7
  3825                           fsr1h	equ	0xFE2
  3826                           fsr1l	equ	0xFE1
  3827                           indf2	equ	0xFDF
  3828                           postinc2	equ	0xFDE
  3829                           postdec2	equ	0xFDD
  3830                           fsr2h	equ	0xFDA
  3831                           fsr2l	equ	0xFD9
  3832                           status	equ	0xFD8
  3833                           
  3834 ;; *************** function _Delay1KTCYx *****************
  3835 ;; Defined at:
  3836 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;  unit            1    wreg     unsigned char 
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  unit            1   30[BANK0 ] unsigned char 
  3841 ;; Return value:  Size  Location     Type
  3842 ;;		None               void
  3843 ;; Registers used:
  3844 ;;		wreg
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3850 ;;      Params:         0       0       0       0       0
  3851 ;;      Locals:         0       1       0       0       0
  3852 ;;      Temps:          0       0       0       0       0
  3853 ;;      Totals:         0       1       0       0       0
  3854 ;;Total ram usage:        1 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:   10
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		_block_on_To_msgqueues
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text24
  3865  001A54                     __ptext24:
  3866                           	opt stack 0
  3867  001A54                     _Delay1KTCYx:
  3868                           	opt stack 18
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;incstack = 0
  3872                           ;Delay1KTCYx@unit stored from wreg
  3873  001A54  CFE8 F0D4          	movff	wreg,Delay1KTCYx@unit
  3874  001A58                     l738:
  3875  001A58  0EFA               	movlw	250
  3876  001A5A                     u2097:
  3877  001A5A  F000               	nop	
  3878  001A5C  2EE8               	decfsz	wreg,f,c
  3879  001A5E  D7FD               	goto	u2097
  3880  001A60  0100               	movlb	0	; () banked
  3881  001A62  0100               	movlb	0	; () banked
  3882  001A64  2FD4               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3883  001A66  D7F8               	goto	l738
  3884  001A68  0012               	return	
  3885  001A6A                     __end_of_Delay1KTCYx:
  3886                           	opt stack 0
  3887                           tblptru	equ	0xFF8
  3888                           prodh	equ	0xFF4
  3889                           prodl	equ	0xFF3
  3890                           intcon	equ	0xFF2
  3891                           intcon2	equ	0xFF1
  3892                           postinc0	equ	0xFEE
  3893                           wreg	equ	0xFE8
  3894                           indf1	equ	0xFE7
  3895                           fsr1h	equ	0xFE2
  3896                           fsr1l	equ	0xFE1
  3897                           indf2	equ	0xFDF
  3898                           postinc2	equ	0xFDE
  3899                           postdec2	equ	0xFDD
  3900                           fsr2h	equ	0xFDA
  3901                           fsr2l	equ	0xFD9
  3902                           status	equ	0xFD8
  3903                           
  3904 ;; *************** function _ToMainLow_recvmsg *****************
  3905 ;; Defined at:
  3906 ;;		line 112 in file "../src/messages.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;  maxlength       1    wreg     unsigned char 
  3909 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3910 ;;		 -> main@msgtype(1), 
  3911 ;;  data            2   14[BANK1 ] PTR void 
  3912 ;;		 -> main@msgbuffer(11), 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;  maxlength       1   16[BANK1 ] unsigned char 
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      char 
  3917 ;; Registers used:
  3918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3924 ;;      Params:         0       0       4       0       0
  3925 ;;      Locals:         0       0       1       0       0
  3926 ;;      Temps:          0       0       0       0       0
  3927 ;;      Totals:         0       0       5       0       0
  3928 ;;Total ram usage:        5 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:   12
  3931 ;; This function calls:
  3932 ;;		_recv_msg
  3933 ;; This function is called by:
  3934 ;;		_main
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text25
  3939  001740                     __ptext25:
  3940                           	opt stack 0
  3941  001740                     _ToMainLow_recvmsg:
  3942                           	opt stack 17
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;incstack = 0
  3946                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3947  001740  CFE8 F1B2          	movff	wreg,ToMainLow_recvmsg@maxlength
  3948                           
  3949                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3950  001744  0100               	movlb	0	; () banked
  3951  001746  0E00               	movlw	high _ToMainLow_MQ
  3952  001748  0101               	movlb	1	; () banked
  3953  00174A  0101               	movlb	1	; () banked
  3954  00174C  6FA3               	movwf	(recv_msg@qptr+1)& (0+255),b
  3955  00174E  0100               	movlb	0	; () banked
  3956  001750  0E80               	movlw	low _ToMainLow_MQ
  3957  001752  0101               	movlb	1	; () banked
  3958  001754  0101               	movlb	1	; () banked
  3959  001756  6FA2               	movwf	recv_msg@qptr& (0+255),b
  3960  001758  C1B2  F1A4         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3961  00175C  0101               	movlb	1	; () banked
  3962  00175E  0101               	movlb	1	; () banked
  3963  001760  C1AF  F1A6         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3964  001764  0101               	movlb	1	; () banked
  3965  001766  0101               	movlb	1	; () banked
  3966  001768  C1AE  F1A5         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3967  00176C  0101               	movlb	1	; () banked
  3968  00176E  0101               	movlb	1	; () banked
  3969  001770  C1B1  F1A8         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3970  001774  0101               	movlb	1	; () banked
  3971  001776  0101               	movlb	1	; () banked
  3972  001778  C1B0  F1A7         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3973  00177C  ECB7  F004         	call	_recv_msg	;wreg free
  3974  001780  0012               	return	
  3975  001782                     __end_of_ToMainLow_recvmsg:
  3976                           	opt stack 0
  3977                           tblptru	equ	0xFF8
  3978                           prodh	equ	0xFF4
  3979                           prodl	equ	0xFF3
  3980                           intcon	equ	0xFF2
  3981                           intcon2	equ	0xFF1
  3982                           postinc0	equ	0xFEE
  3983                           wreg	equ	0xFE8
  3984                           indf1	equ	0xFE7
  3985                           fsr1h	equ	0xFE2
  3986                           fsr1l	equ	0xFE1
  3987                           indf2	equ	0xFDF
  3988                           postinc2	equ	0xFDE
  3989                           postdec2	equ	0xFDD
  3990                           fsr2h	equ	0xFDA
  3991                           fsr2l	equ	0xFD9
  3992                           status	equ	0xFD8
  3993                           
  3994 ;; *************** function _ToMainHigh_recvmsg *****************
  3995 ;; Defined at:
  3996 ;;		line 135 in file "../src/messages.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  maxlength       1    wreg     unsigned char 
  3999 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  4000 ;;		 -> main@msgtype(1), 
  4001 ;;  data            2   14[BANK1 ] PTR void 
  4002 ;;		 -> main@msgbuffer(11), 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;  maxlength       1   16[BANK1 ] unsigned char 
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  1    wreg      char 
  4007 ;; Registers used:
  4008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4014 ;;      Params:         0       0       4       0       0
  4015 ;;      Locals:         0       0       1       0       0
  4016 ;;      Temps:          0       0       0       0       0
  4017 ;;      Totals:         0       0       5       0       0
  4018 ;;Total ram usage:        5 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; Hardware stack levels required when called:   12
  4021 ;; This function calls:
  4022 ;;		_recv_msg
  4023 ;; This function is called by:
  4024 ;;		_main
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           	psect	text26
  4029  001782                     __ptext26:
  4030                           	opt stack 0
  4031  001782                     _ToMainHigh_recvmsg:
  4032                           	opt stack 17
  4033                           
  4034                           ;incstack = 0
  4035                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4036  001782  CFE8 F1B2          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4037                           
  4038                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4039  001786  0101               	movlb	1	; () banked
  4040  001788  0E01               	movlw	high _ToMainHigh_MQ
  4041  00178A  0101               	movlb	1	; () banked
  4042  00178C  0101               	movlb	1	; () banked
  4043  00178E  6FA3               	movwf	(recv_msg@qptr+1)& (0+255),b
  4044  001790  0101               	movlb	1	; () banked
  4045  001792  0E6C               	movlw	low _ToMainHigh_MQ
  4046  001794  0101               	movlb	1	; () banked
  4047  001796  0101               	movlb	1	; () banked
  4048  001798  6FA2               	movwf	recv_msg@qptr& (0+255),b
  4049  00179A  C1B2  F1A4         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4050  00179E  0101               	movlb	1	; () banked
  4051  0017A0  0101               	movlb	1	; () banked
  4052  0017A2  C1AF  F1A6         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4053  0017A6  0101               	movlb	1	; () banked
  4054  0017A8  0101               	movlb	1	; () banked
  4055  0017AA  C1AE  F1A5         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4056  0017AE  0101               	movlb	1	; () banked
  4057  0017B0  0101               	movlb	1	; () banked
  4058  0017B2  C1B1  F1A8         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4059  0017B6  0101               	movlb	1	; () banked
  4060  0017B8  0101               	movlb	1	; () banked
  4061  0017BA  C1B0  F1A7         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4062  0017BE  ECB7  F004         	call	_recv_msg	;wreg free
  4063  0017C2  0012               	return	
  4064  0017C4                     __end_of_ToMainHigh_recvmsg:
  4065                           	opt stack 0
  4066                           tblptru	equ	0xFF8
  4067                           prodh	equ	0xFF4
  4068                           prodl	equ	0xFF3
  4069                           intcon	equ	0xFF2
  4070                           intcon2	equ	0xFF1
  4071                           postinc0	equ	0xFEE
  4072                           wreg	equ	0xFE8
  4073                           indf1	equ	0xFE7
  4074                           fsr1h	equ	0xFE2
  4075                           fsr1l	equ	0xFE1
  4076                           indf2	equ	0xFDF
  4077                           postinc2	equ	0xFDE
  4078                           postdec2	equ	0xFDD
  4079                           fsr2h	equ	0xFDA
  4080                           fsr2l	equ	0xFD9
  4081                           status	equ	0xFD8
  4082                           
  4083 ;; *************** function _recv_msg *****************
  4084 ;; Defined at:
  4085 ;;		line 63 in file "../src/messages.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  4088 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4089 ;;  maxlength       1    2[BANK1 ] unsigned char 
  4090 ;;  msgtype         2    3[BANK1 ] PTR unsigned char 
  4091 ;;		 -> main@msgtype(1), timer0_int_handler@msgtype(2), 
  4092 ;;  data            2    5[BANK1 ] PTR void 
  4093 ;;		 -> main@msgbuffer(11), timer0_int_handler@val(2), 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  qmsg            2   10[BANK1 ] PTR struct __msg
  4096 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4097 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4098 ;;  tlength         2    8[BANK1 ] unsigned int 
  4099 ;;  slot            1    7[BANK1 ] unsigned char 
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      char 
  4102 ;; Registers used:
  4103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4109 ;;      Params:         0       0       7       0       0
  4110 ;;      Locals:         0       0       5       0       0
  4111 ;;      Temps:          0       2       0       0       0
  4112 ;;      Totals:         0       2      12       0       0
  4113 ;;Total ram usage:       14 bytes
  4114 ;; Hardware stack levels used:    1
  4115 ;; Hardware stack levels required when called:   11
  4116 ;; This function calls:
  4117 ;;		_memcpy
  4118 ;; This function is called by:
  4119 ;;		_ToMainLow_recvmsg
  4120 ;;		_ToMainHigh_recvmsg
  4121 ;;		_FromMainLow_recvmsg
  4122 ;;		_FromMainHigh_recvmsg
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           	psect	text27
  4127  00096E                     __ptext27:
  4128                           	opt stack 0
  4129  00096E                     _recv_msg:
  4130                           	opt stack 17
  4131                           
  4132                           ;messages.c: 64: unsigned char slot;
  4133                           ;messages.c: 68: msg *qmsg;
  4134                           ;messages.c: 69: size_t tlength;
  4135                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4136                           
  4137                           ;incstack = 0
  4138  00096E  0101               	movlb	1	; () banked
  4139  000970  EE20 F035          	lfsr	2,53
  4140  000974  0101               	movlb	1	; () banked
  4141  000976  51A2               	movf	recv_msg@qptr& (0+255),w,b
  4142  000978  26D9               	addwf	fsr2l,f,c
  4143  00097A  0101               	movlb	1	; () banked
  4144  00097C  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4145  00097E  22DA               	addwfc	fsr2h,f,c
  4146  000980  50DF               	movf	indf2,w,c
  4147  000982  0101               	movlb	1	; () banked
  4148  000984  0101               	movlb	1	; () banked
  4149  000986  6FA9               	movwf	recv_msg@slot& (0+255),b
  4150                           
  4151                           ; BSR set to: 1
  4152                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4153  000988  0101               	movlb	1	; () banked
  4154  00098A  0101               	movlb	1	; () banked
  4155  00098C  51A9               	movf	recv_msg@slot& (0+255),w,b
  4156  00098E  0D0D               	mullw	13
  4157  000990  50F3               	movf	prodl,w,c
  4158  000992  0101               	movlb	1	; () banked
  4159  000994  0101               	movlb	1	; () banked
  4160  000996  25A2               	addwf	recv_msg@qptr& (0+255),w,b
  4161  000998  0101               	movlb	1	; () banked
  4162  00099A  0101               	movlb	1	; () banked
  4163  00099C  6FAC               	movwf	recv_msg@qmsg& (0+255),b
  4164  00099E  50F4               	movf	prodh,w,c
  4165  0009A0  0101               	movlb	1	; () banked
  4166  0009A2  0101               	movlb	1	; () banked
  4167  0009A4  21A3               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4168  0009A6  0101               	movlb	1	; () banked
  4169  0009A8  6FAD               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4170                           
  4171                           ; BSR set to: 1
  4172                           ;messages.c: 74: if (qmsg->full == 1) {
  4173  0009AA  0E01               	movlw	1
  4174  0009AC  C1AC  FFD9         	movff	recv_msg@qmsg,fsr2l
  4175  0009B0  C1AD  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4176  0009B4  62DF               	cpfseq	indf2,c
  4177  0009B6  D074               	goto	l3096
  4178                           
  4179                           ; BSR set to: 1
  4180                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4181  0009B8  0101               	movlb	1	; () banked
  4182  0009BA  EE20 F001          	lfsr	2,1
  4183  0009BE  0101               	movlb	1	; () banked
  4184  0009C0  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  4185  0009C2  26D9               	addwf	fsr2l,f,c
  4186  0009C4  0101               	movlb	1	; () banked
  4187  0009C6  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4188  0009C8  22DA               	addwfc	fsr2h,f,c
  4189  0009CA  50DF               	movf	indf2,w,c
  4190  0009CC  0101               	movlb	1	; () banked
  4191  0009CE  0101               	movlb	1	; () banked
  4192  0009D0  5DA4               	subwf	recv_msg@maxlength& (0+255),w,b
  4193  0009D2  B0D8               	btfsc	status,0,c
  4194  0009D4  D002               	goto	l3080
  4195                           
  4196                           ; BSR set to: 1
  4197                           ;messages.c: 77: return (-3);
  4198  0009D6  0EFD               	movlw	253
  4199  0009D8  0012               	return	
  4200  0009DA                     l3080:
  4201                           
  4202                           ; BSR set to: 1
  4203                           ;messages.c: 78: }
  4204                           ;messages.c: 80: tlength = qmsg->length;
  4205  0009DA  0101               	movlb	1	; () banked
  4206  0009DC  EE20 F001          	lfsr	2,1
  4207  0009E0  0101               	movlb	1	; () banked
  4208  0009E2  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  4209  0009E4  26D9               	addwf	fsr2l,f,c
  4210  0009E6  0101               	movlb	1	; () banked
  4211  0009E8  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4212  0009EA  22DA               	addwfc	fsr2h,f,c
  4213  0009EC  50DF               	movf	indf2,w,c
  4214  0009EE  0100               	movlb	0	; () banked
  4215  0009F0  6FDE               	movwf	??_recv_msg& (0+255),b
  4216  0009F2  0100               	movlb	0	; () banked
  4217  0009F4  51DE               	movf	??_recv_msg& (0+255),w,b
  4218  0009F6  0101               	movlb	1	; () banked
  4219  0009F8  0101               	movlb	1	; () banked
  4220  0009FA  6FAA               	movwf	recv_msg@tlength& (0+255),b
  4221  0009FC  0101               	movlb	1	; () banked
  4222  0009FE  6BAB               	clrf	(recv_msg@tlength+1)& (0+255),b
  4223                           
  4224                           ; BSR set to: 1
  4225                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4226  000A00  0101               	movlb	1	; () banked
  4227  000A02  0100               	movlb	0	; () banked
  4228  000A04  C1A8  F0D5         	movff	recv_msg@data+1,memcpy@d1+1
  4229  000A08  0101               	movlb	1	; () banked
  4230  000A0A  0100               	movlb	0	; () banked
  4231  000A0C  C1A7  F0D4         	movff	recv_msg@data,memcpy@d1
  4232  000A10  0E03               	movlw	3
  4233  000A12  0101               	movlb	1	; () banked
  4234  000A14  0101               	movlb	1	; () banked
  4235  000A16  25AC               	addwf	recv_msg@qmsg& (0+255),w,b
  4236  000A18  0100               	movlb	0	; () banked
  4237  000A1A  6FDE               	movwf	??_recv_msg& (0+255),b
  4238  000A1C  0E00               	movlw	0
  4239  000A1E  0101               	movlb	1	; () banked
  4240  000A20  0101               	movlb	1	; () banked
  4241  000A22  21AD               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4242  000A24  0100               	movlb	0	; () banked
  4243  000A26  6FDF               	movwf	(??_recv_msg+1)& (0+255),b
  4244  000A28  C0DE  F0D6         	movff	??_recv_msg,memcpy@s1
  4245  000A2C  C0DF  F0D7         	movff	??_recv_msg+1,memcpy@s1+1
  4246  000A30  C1AA  F0D8         	movff	recv_msg@tlength,memcpy@n
  4247  000A34  C1AB  F0D9         	movff	recv_msg@tlength+1,memcpy@n+1
  4248  000A38  ECE3  F00A         	call	_memcpy	;wreg free
  4249                           
  4250                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4251  000A3C  0101               	movlb	1	; () banked
  4252  000A3E  EE20 F035          	lfsr	2,53
  4253  000A42  0101               	movlb	1	; () banked
  4254  000A44  51A2               	movf	recv_msg@qptr& (0+255),w,b
  4255  000A46  26D9               	addwf	fsr2l,f,c
  4256  000A48  0101               	movlb	1	; () banked
  4257  000A4A  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4258  000A4C  22DA               	addwfc	fsr2h,f,c
  4259  000A4E  0101               	movlb	1	; () banked
  4260  000A50  EE10 F035          	lfsr	1,53
  4261  000A54  0101               	movlb	1	; () banked
  4262  000A56  51A2               	movf	recv_msg@qptr& (0+255),w,b
  4263  000A58  26E1               	addwf	fsr1l,f,c
  4264  000A5A  0101               	movlb	1	; () banked
  4265  000A5C  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4266  000A5E  22E2               	addwfc	fsr1h,f,c
  4267  000A60  50E7               	movf	indf1,w,c
  4268  000A62  0100               	movlb	0	; () banked
  4269  000A64  6FDE               	movwf	??_recv_msg& (0+255),b
  4270  000A66  0100               	movlb	0	; () banked
  4271  000A68  29DE               	incf	??_recv_msg& (0+255),w,b
  4272  000A6A  0B03               	andlw	3
  4273  000A6C  6EDF               	movwf	indf2,c
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4277  000A6E  0101               	movlb	1	; () banked
  4278  000A70  EE20 F002          	lfsr	2,2
  4279  000A74  0101               	movlb	1	; () banked
  4280  000A76  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  4281  000A78  26D9               	addwf	fsr2l,f,c
  4282  000A7A  0101               	movlb	1	; () banked
  4283  000A7C  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4284  000A7E  22DA               	addwfc	fsr2h,f,c
  4285  000A80  C1A5  FFE1         	movff	recv_msg@msgtype,fsr1l
  4286  000A84  C1A6  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4287  000A88  CFDF FFE7          	movff	indf2,indf1
  4288                           
  4289                           ; BSR set to: 1
  4290                           ;messages.c: 91: qmsg->full = 0;
  4291  000A8C  C1AC  FFD9         	movff	recv_msg@qmsg,fsr2l
  4292  000A90  C1AD  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4293  000A94  0E00               	movlw	0
  4294  000A96  6EDF               	movwf	indf2,c
  4295                           
  4296                           ; BSR set to: 1
  4297                           ;messages.c: 92: return (tlength);
  4298  000A98  0101               	movlb	1	; () banked
  4299  000A9A  0101               	movlb	1	; () banked
  4300  000A9C  51AA               	movf	recv_msg@tlength& (0+255),w,b
  4301  000A9E  0012               	return	
  4302  000AA0                     l3096:
  4303                           
  4304                           ; BSR set to: 1
  4305                           ;messages.c: 94: return (-4);
  4306  000AA0  0EFC               	movlw	252
  4307  000AA2  0012               	return	
  4308  000AA4                     __end_of_recv_msg:
  4309                           	opt stack 0
  4310                           tblptru	equ	0xFF8
  4311                           prodh	equ	0xFF4
  4312                           prodl	equ	0xFF3
  4313                           intcon	equ	0xFF2
  4314                           intcon2	equ	0xFF1
  4315                           postinc0	equ	0xFEE
  4316                           wreg	equ	0xFE8
  4317                           indf1	equ	0xFE7
  4318                           fsr1h	equ	0xFE2
  4319                           fsr1l	equ	0xFE1
  4320                           indf2	equ	0xFDF
  4321                           postinc2	equ	0xFDE
  4322                           postdec2	equ	0xFDD
  4323                           fsr2h	equ	0xFDA
  4324                           fsr2l	equ	0xFD9
  4325                           status	equ	0xFD8
  4326                           
  4327 ;; *************** function _memcpy *****************
  4328 ;; Defined at:
  4329 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;  d1              2   30[BANK0 ] PTR void 
  4332 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4333 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4334 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  4335 ;;  s1              2   32[BANK0 ] PTR const void 
  4336 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4337 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4338 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  4339 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4340 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  4341 ;;  n               2   34[BANK0 ] unsigned int 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  4344 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4345 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4346 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  4347 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4348 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  4349 ;;  d               2   36[BANK0 ] PTR unsigned char 
  4350 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4351 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4352 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  4353 ;; Return value:  Size  Location     Type
  4354 ;;                  2   30[BANK0 ] PTR void 
  4355 ;; Registers used:
  4356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4362 ;;      Params:         0       6       0       0       0
  4363 ;;      Locals:         0       4       0       0       0
  4364 ;;      Temps:          0       0       0       0       0
  4365 ;;      Totals:         0      10       0       0       0
  4366 ;;Total ram usage:       10 bytes
  4367 ;; Hardware stack levels used:    1
  4368 ;; Hardware stack levels required when called:   10
  4369 ;; This function calls:
  4370 ;;		Nothing
  4371 ;; This function is called by:
  4372 ;;		_send_msg
  4373 ;;		_recv_msg
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376                           
  4377                           	psect	text28
  4378  0015C6                     __ptext28:
  4379                           	opt stack 0
  4380  0015C6                     _memcpy:
  4381                           	opt stack 16
  4382                           
  4383                           ; BSR set to: 1
  4384                           ;incstack = 0
  4385  0015C6  0100               	movlb	0	; () banked
  4386  0015C8  0100               	movlb	0	; () banked
  4387  0015CA  C0D7  F0DD         	movff	memcpy@s1+1,memcpy@s+1
  4388  0015CE  0100               	movlb	0	; () banked
  4389  0015D0  0100               	movlb	0	; () banked
  4390  0015D2  C0D6  F0DC         	movff	memcpy@s1,memcpy@s
  4391  0015D6  0100               	movlb	0	; () banked
  4392  0015D8  0100               	movlb	0	; () banked
  4393  0015DA  C0D5  F0DB         	movff	memcpy@d1+1,memcpy@d+1
  4394  0015DE  0100               	movlb	0	; () banked
  4395  0015E0  0100               	movlb	0	; () banked
  4396  0015E2  C0D4  F0DA         	movff	memcpy@d1,memcpy@d
  4397  0015E6  D012               	goto	l3066
  4398  0015E8                     l3060:
  4399                           
  4400                           ; BSR set to: 0
  4401  0015E8  C0DC  FFD9         	movff	memcpy@s,fsr2l
  4402  0015EC  C0DD  FFDA         	movff	memcpy@s+1,fsr2h
  4403  0015F0  C0DA  FFE1         	movff	memcpy@d,fsr1l
  4404  0015F4  C0DB  FFE2         	movff	memcpy@d+1,fsr1h
  4405  0015F8  CFDF FFE7          	movff	indf2,indf1
  4406                           
  4407                           ; BSR set to: 0
  4408  0015FC  0100               	movlb	0	; () banked
  4409  0015FE  0100               	movlb	0	; () banked
  4410  001600  4BDC               	infsnz	memcpy@s& (0+255),f,b
  4411  001602  2BDD               	incf	(memcpy@s+1)& (0+255),f,b
  4412                           
  4413                           ; BSR set to: 0
  4414  001604  0100               	movlb	0	; () banked
  4415  001606  0100               	movlb	0	; () banked
  4416  001608  4BDA               	infsnz	memcpy@d& (0+255),f,b
  4417  00160A  2BDB               	incf	(memcpy@d+1)& (0+255),f,b
  4418  00160C                     l3066:
  4419                           
  4420                           ; BSR set to: 0
  4421  00160C  0100               	movlb	0	; () banked
  4422  00160E  0100               	movlb	0	; () banked
  4423  001610  07D8               	decf	memcpy@n& (0+255),f,b
  4424  001612  A0D8               	btfss	status,0,c
  4425  001614  07D9               	decf	(memcpy@n+1)& (0+255),f,b
  4426  001616  0100               	movlb	0	; () banked
  4427  001618  29D8               	incf	memcpy@n& (0+255),w,b
  4428  00161A  B4D8               	btfsc	status,2,c
  4429  00161C  29D9               	incf	(memcpy@n+1)& (0+255),w,b
  4430  00161E  B4D8               	btfsc	status,2,c
  4431                           
  4432                           ; BSR set to: 0
  4433                           
  4434                           ; BSR set to: 0
  4435                           ;	Return value of _memcpy is never used
  4436  001620  0012               	return	
  4437  001622  D7E2               	goto	l3060
  4438  001624                     __end_of_memcpy:
  4439                           	opt stack 0
  4440                           tblptru	equ	0xFF8
  4441                           prodh	equ	0xFF4
  4442                           prodl	equ	0xFF3
  4443                           intcon	equ	0xFF2
  4444                           intcon2	equ	0xFF1
  4445                           postinc0	equ	0xFEE
  4446                           wreg	equ	0xFE8
  4447                           indf1	equ	0xFE7
  4448                           fsr1h	equ	0xFE2
  4449                           fsr1l	equ	0xFE1
  4450                           indf2	equ	0xFDF
  4451                           postinc2	equ	0xFDE
  4452                           postdec2	equ	0xFDD
  4453                           fsr2h	equ	0xFDA
  4454                           fsr2l	equ	0xFD9
  4455                           status	equ	0xFD8
  4456                           
  4457 ;; *************** function _OpenUSART *****************
  4458 ;; Defined at:
  4459 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;  config          1    wreg     unsigned char 
  4462 ;;  spbrg           2   30[BANK0 ] unsigned int 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;  config          1   35[BANK0 ] unsigned char 
  4465 ;; Return value:  Size  Location     Type
  4466 ;;		None               void
  4467 ;; Registers used:
  4468 ;;		wreg, status,2
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4474 ;;      Params:         0       2       0       0       0
  4475 ;;      Locals:         0       1       0       0       0
  4476 ;;      Temps:          0       3       0       0       0
  4477 ;;      Totals:         0       6       0       0       0
  4478 ;;Total ram usage:        6 bytes
  4479 ;; Hardware stack levels used:    1
  4480 ;; Hardware stack levels required when called:   10
  4481 ;; This function calls:
  4482 ;;		Nothing
  4483 ;; This function is called by:
  4484 ;;		_main
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           	psect	text29
  4489  0011F0                     __ptext29:
  4490                           	opt stack 0
  4491  0011F0                     _OpenUSART:
  4492                           	opt stack 19
  4493                           
  4494                           ; BSR set to: 0
  4495                           ;incstack = 0
  4496                           ;OpenUSART@config stored from wreg
  4497  0011F0  CFE8 F0D9          	movff	wreg,OpenUSART@config
  4498  0011F4  0E00               	movlw	0
  4499  0011F6  6EAC               	movwf	4012,c	;volatile
  4500  0011F8  0E00               	movlw	0
  4501  0011FA  6EAB               	movwf	4011,c	;volatile
  4502  0011FC  0100               	movlb	0	; () banked
  4503  0011FE  0100               	movlb	0	; () banked
  4504  001200  B1D9               	btfsc	OpenUSART@config& (0+255),0,b
  4505                           
  4506                           ; BSR set to: 0
  4507  001202  88AC               	bsf	4012,4,c	;volatile
  4508                           
  4509                           ; BSR set to: 0
  4510                           
  4511                           ; BSR set to: 0
  4512  001204  0100               	movlb	0	; () banked
  4513  001206  0100               	movlb	0	; () banked
  4514  001208  A3D9               	btfss	OpenUSART@config& (0+255),1,b
  4515  00120A  D002               	goto	l2760
  4516                           
  4517                           ; BSR set to: 0
  4518  00120C  8CAC               	bsf	4012,6,c	;volatile
  4519  00120E  8CAB               	bsf	4011,6,c	;volatile
  4520  001210                     l2760:
  4521                           
  4522                           ; BSR set to: 0
  4523  001210  0100               	movlb	0	; () banked
  4524  001212  0100               	movlb	0	; () banked
  4525  001214  B5D9               	btfsc	OpenUSART@config& (0+255),2,b
  4526                           
  4527                           ; BSR set to: 0
  4528  001216  8EAC               	bsf	4012,7,c	;volatile
  4529                           
  4530                           ; BSR set to: 0
  4531                           
  4532                           ; BSR set to: 0
  4533  001218  0100               	movlb	0	; () banked
  4534  00121A  0100               	movlb	0	; () banked
  4535  00121C  A7D9               	btfss	OpenUSART@config& (0+255),3,b
  4536  00121E  D002               	goto	l505
  4537                           
  4538                           ; BSR set to: 0
  4539  001220  88AB               	bsf	4011,4,c	;volatile
  4540  001222  D001               	goto	l2768
  4541  001224                     l505:
  4542                           
  4543                           ; BSR set to: 0
  4544  001224  8AAB               	bsf	4011,5,c	;volatile
  4545  001226                     l2768:
  4546                           
  4547                           ; BSR set to: 0
  4548  001226  0100               	movlb	0	; () banked
  4549  001228  0100               	movlb	0	; () banked
  4550  00122A  B9D9               	btfsc	OpenUSART@config& (0+255),4,b
  4551                           
  4552                           ; BSR set to: 0
  4553  00122C  84AC               	bsf	4012,2,c	;volatile
  4554                           
  4555                           ; BSR set to: 0
  4556  00122E  989E               	bcf	3998,4,c	;volatile
  4557                           
  4558                           ; BSR set to: 0
  4559  001230  0100               	movlb	0	; () banked
  4560  001232  0100               	movlb	0	; () banked
  4561  001234  BBD9               	btfsc	OpenUSART@config& (0+255),5,b
  4562                           
  4563                           ; BSR set to: 0
  4564  001236  86AB               	bsf	4011,3,c	;volatile
  4565                           
  4566                           ; BSR set to: 0
  4567                           
  4568                           ; BSR set to: 0
  4569  001238  0100               	movlb	0	; () banked
  4570  00123A  0100               	movlb	0	; () banked
  4571  00123C  ADD9               	btfss	OpenUSART@config& (0+255),6,b
  4572  00123E  D002               	goto	l509
  4573                           
  4574                           ; BSR set to: 0
  4575  001240  8A9D               	bsf	3997,5,c	;volatile
  4576  001242  D001               	goto	l510
  4577  001244                     l509:
  4578                           
  4579                           ; BSR set to: 0
  4580  001244  9A9D               	bcf	3997,5,c	;volatile
  4581  001246                     l510:
  4582                           
  4583                           ; BSR set to: 0
  4584  001246  9A9E               	bcf	3998,5,c	;volatile
  4585                           
  4586                           ; BSR set to: 0
  4587  001248  0100               	movlb	0	; () banked
  4588  00124A  0100               	movlb	0	; () banked
  4589  00124C  AFD9               	btfss	OpenUSART@config& (0+255),7,b
  4590  00124E  D002               	goto	l511
  4591                           
  4592                           ; BSR set to: 0
  4593  001250  889D               	bsf	3997,4,c	;volatile
  4594  001252  D001               	goto	l512
  4595  001254                     l511:
  4596                           
  4597                           ; BSR set to: 0
  4598  001254  989D               	bcf	3997,4,c	;volatile
  4599  001256                     l512:
  4600                           
  4601                           ; BSR set to: 0
  4602  001256  C0D4  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4603                           
  4604                           ; BSR set to: 0
  4605  00125A  0100               	movlb	0	; () banked
  4606  00125C  C0D5  F0D6         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4607  001260  C0D6  F0D7         	movff	??_OpenUSART,??_OpenUSART+1
  4608  001264  0100               	movlb	0	; () banked
  4609  001266  6BD8               	clrf	(??_OpenUSART+2)& (0+255),b
  4610  001268  0100               	movlb	0	; () banked
  4611  00126A  51D7               	movf	(??_OpenUSART+1)& (0+255),w,b
  4612  00126C  6EB0               	movwf	4016,c	;volatile
  4613                           
  4614                           ; BSR set to: 0
  4615  00126E  8AAC               	bsf	4012,5,c	;volatile
  4616                           
  4617                           ; BSR set to: 0
  4618  001270  8EAB               	bsf	4011,7,c	;volatile
  4619                           
  4620                           ; BSR set to: 0
  4621  001272  9C94               	bcf	3988,6,c	;volatile
  4622                           
  4623                           ; BSR set to: 0
  4624  001274  8E94               	bsf	3988,7,c	;volatile
  4625                           
  4626                           ; BSR set to: 0
  4627  001276  A8AC               	btfss	4012,4,c	;volatile
  4628  001278  0012               	return	
  4629                           
  4630                           ; BSR set to: 0
  4631  00127A  BEAC               	btfsc	4012,7,c	;volatile
  4632  00127C  0012               	return	
  4633                           
  4634                           ; BSR set to: 0
  4635  00127E  8C94               	bsf	3988,6,c	;volatile
  4636  001280  0012               	return	
  4637  001282                     __end_of_OpenUSART:
  4638                           	opt stack 0
  4639                           tblptru	equ	0xFF8
  4640                           prodh	equ	0xFF4
  4641                           prodl	equ	0xFF3
  4642                           intcon	equ	0xFF2
  4643                           intcon2	equ	0xFF1
  4644                           postinc0	equ	0xFEE
  4645                           wreg	equ	0xFE8
  4646                           indf1	equ	0xFE7
  4647                           fsr1h	equ	0xFE2
  4648                           fsr1l	equ	0xFE1
  4649                           indf2	equ	0xFDF
  4650                           postinc2	equ	0xFDE
  4651                           postdec2	equ	0xFDD
  4652                           fsr2h	equ	0xFDA
  4653                           fsr2l	equ	0xFD9
  4654                           status	equ	0xFD8
  4655                           
  4656 ;; *************** function _OpenTimer0 *****************
  4657 ;; Defined at:
  4658 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  config          1    wreg     unsigned char 
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;  config          1   30[BANK0 ] unsigned char 
  4663 ;; Return value:  Size  Location     Type
  4664 ;;		None               void
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, status,0
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4672 ;;      Params:         0       0       0       0       0
  4673 ;;      Locals:         0       1       0       0       0
  4674 ;;      Temps:          0       0       0       0       0
  4675 ;;      Totals:         0       1       0       0       0
  4676 ;;Total ram usage:        1 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:   10
  4679 ;; This function calls:
  4680 ;;		Nothing
  4681 ;; This function is called by:
  4682 ;;		_main
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           	psect	text30
  4687  001956                     __ptext30:
  4688                           	opt stack 0
  4689  001956                     _OpenTimer0:
  4690                           	opt stack 19
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;incstack = 0
  4694                           ;OpenTimer0@config stored from wreg
  4695  001956  CFE8 F0D4          	movff	wreg,OpenTimer0@config
  4696  00195A  0100               	movlb	0	; () banked
  4697  00195C  0100               	movlb	0	; () banked
  4698  00195E  51D4               	movf	OpenTimer0@config& (0+255),w,b
  4699  001960  0B7F               	andlw	127
  4700  001962  6ED5               	movwf	4053,c	;volatile
  4701                           
  4702                           ; BSR set to: 0
  4703  001964  0E00               	movlw	0
  4704  001966  6ED7               	movwf	4055,c	;volatile
  4705                           
  4706                           ; BSR set to: 0
  4707  001968  0E00               	movlw	0
  4708  00196A  6ED6               	movwf	4054,c	;volatile
  4709                           
  4710                           ; BSR set to: 0
  4711  00196C  94F2               	bcf	intcon,2,c	;volatile
  4712                           
  4713                           ; BSR set to: 0
  4714  00196E  0100               	movlb	0	; () banked
  4715  001970  0100               	movlb	0	; () banked
  4716  001972  AFD4               	btfss	OpenTimer0@config& (0+255),7,b
  4717  001974  D002               	goto	l456
  4718                           
  4719                           ; BSR set to: 0
  4720  001976  8AF2               	bsf	intcon,5,c	;volatile
  4721  001978  D001               	goto	l457
  4722  00197A                     l456:
  4723                           
  4724                           ; BSR set to: 0
  4725  00197A  9AF2               	bcf	intcon,5,c	;volatile
  4726  00197C                     l457:
  4727                           
  4728                           ; BSR set to: 0
  4729  00197C  8ED5               	bsf	4053,7,c	;volatile
  4730                           
  4731                           ; BSR set to: 0
  4732  00197E  0012               	return	
  4733  001980                     __end_of_OpenTimer0:
  4734                           	opt stack 0
  4735                           tblptru	equ	0xFF8
  4736                           prodh	equ	0xFF4
  4737                           prodl	equ	0xFF3
  4738                           intcon	equ	0xFF2
  4739                           intcon2	equ	0xFF1
  4740                           postinc0	equ	0xFEE
  4741                           wreg	equ	0xFE8
  4742                           indf1	equ	0xFE7
  4743                           fsr1h	equ	0xFE2
  4744                           fsr1l	equ	0xFE1
  4745                           indf2	equ	0xFDF
  4746                           postinc2	equ	0xFDE
  4747                           postdec2	equ	0xFDD
  4748                           fsr2h	equ	0xFDA
  4749                           fsr2l	equ	0xFD9
  4750                           status	equ	0xFD8
  4751                           
  4752 ;; *************** function _InterruptHandlerLow *****************
  4753 ;; Defined at:
  4754 ;;		line 165 in file "../src/interrupts.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;		None
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;		None
  4759 ;; Return value:  Size  Location     Type
  4760 ;;		None               void
  4761 ;; Registers used:
  4762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4768 ;;      Params:         0       0       0       0       0
  4769 ;;      Locals:         0       0       0       0       0
  4770 ;;      Temps:         17       0       0       0       0
  4771 ;;      Totals:        17       0       0       0       0
  4772 ;;Total ram usage:       17 bytes
  4773 ;; Hardware stack levels used:    1
  4774 ;; Hardware stack levels required when called:    9
  4775 ;; This function calls:
  4776 ;;		_uart_recv_int_handler
  4777 ;; This function is called by:
  4778 ;;		Interrupt level 1
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           	psect	intcodelo
  4783  000018                     __pintcodelo:
  4784                           	opt stack 0
  4785  000018                     _InterruptHandlerLow:
  4786                           	opt stack 16
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;incstack = 0
  4790  000018  CFD8 F01C          	movff	status,??_InterruptHandlerLow
  4791  00001C  CFE8 F01D          	movff	wreg,??_InterruptHandlerLow+1
  4792  000020  CFE0 F01E          	movff	bsr,??_InterruptHandlerLow+2
  4793  000024  CFFA F01F          	movff	pclath,??_InterruptHandlerLow+3
  4794  000028  CFFB F020          	movff	pclatu,??_InterruptHandlerLow+4
  4795  00002C  CFE9 F021          	movff	fsr0l,??_InterruptHandlerLow+5
  4796  000030  CFEA F022          	movff	fsr0h,??_InterruptHandlerLow+6
  4797  000034  CFE1 F023          	movff	fsr1l,??_InterruptHandlerLow+7
  4798  000038  CFE2 F024          	movff	fsr1h,??_InterruptHandlerLow+8
  4799  00003C  CFD9 F025          	movff	fsr2l,??_InterruptHandlerLow+9
  4800  000040  CFDA F026          	movff	fsr2h,??_InterruptHandlerLow+10
  4801  000044  CFF3 F027          	movff	prodl,??_InterruptHandlerLow+11
  4802  000048  CFF4 F028          	movff	prodh,??_InterruptHandlerLow+12
  4803  00004C  CFF6 F029          	movff	tblptrl,??_InterruptHandlerLow+13
  4804  000050  CFF7 F02A          	movff	tblptrh,??_InterruptHandlerLow+14
  4805  000054  CFF8 F02B          	movff	tblptru,??_InterruptHandlerLow+15
  4806  000058  CFF5 F02C          	movff	tablat,??_InterruptHandlerLow+16
  4807                           
  4808                           ;interrupts.c: 167: if (PIR1bits.TMR1IF) {
  4809  00005C  B09E               	btfsc	3998,0,c	;volatile
  4810                           
  4811                           ;interrupts.c: 168: PIR1bits.TMR1IF = 0;
  4812  00005E  909E               	bcf	3998,0,c	;volatile
  4813                           
  4814                           ;interrupts.c: 170: }
  4815                           ;interrupts.c: 173: if (PIR1bits.RCIF) {
  4816  000060  AA9E               	btfss	3998,5,c	;volatile
  4817  000062  D003               	goto	i1l413
  4818                           
  4819                           ;interrupts.c: 174: PIR1bits.RCIF = 0;
  4820  000064  9A9E               	bcf	3998,5,c	;volatile
  4821                           
  4822                           ;interrupts.c: 175: uart_recv_int_handler();
  4823  000066  ECAA  F008         	call	_uart_recv_int_handler	;wreg free
  4824  00006A                     i1l413:
  4825  00006A  C02C  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4826  00006E  C02B  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4827  000072  C02A  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4828  000076  C029  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4829  00007A  C028  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4830  00007E  C027  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4831  000082  C026  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4832  000086  C025  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4833  00008A  C024  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4834  00008E  C023  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4835  000092  C022  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4836  000096  C021  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4837  00009A  C020  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4838  00009E  C01F  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4839  0000A2  C01E  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4840  0000A6  C01D  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4841  0000AA  C01C  FFD8         	movff	??_InterruptHandlerLow,status
  4842  0000AE  0010               	retfie	
  4843  0000B0                     __end_of_InterruptHandlerLow:
  4844                           	opt stack 0
  4845                           pclatu	equ	0xFFB
  4846                           pclath	equ	0xFFA
  4847                           tblptru	equ	0xFF8
  4848                           tblptrh	equ	0xFF7
  4849                           tblptrl	equ	0xFF6
  4850                           tablat	equ	0xFF5
  4851                           prodh	equ	0xFF4
  4852                           prodl	equ	0xFF3
  4853                           intcon	equ	0xFF2
  4854                           intcon2	equ	0xFF1
  4855                           postinc0	equ	0xFEE
  4856                           fsr0h	equ	0xFEA
  4857                           fsr0l	equ	0xFE9
  4858                           wreg	equ	0xFE8
  4859                           indf1	equ	0xFE7
  4860                           fsr1h	equ	0xFE2
  4861                           fsr1l	equ	0xFE1
  4862                           bsr	equ	0xFE0
  4863                           indf2	equ	0xFDF
  4864                           postinc2	equ	0xFDE
  4865                           postdec2	equ	0xFDD
  4866                           fsr2h	equ	0xFDA
  4867                           fsr2l	equ	0xFD9
  4868                           status	equ	0xFD8
  4869                           
  4870 ;; *************** function _uart_recv_int_handler *****************
  4871 ;; Defined at:
  4872 ;;		line 11 in file "../src/my_uart.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;		None
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;		None
  4877 ;; Return value:  Size  Location     Type
  4878 ;;		None               void
  4879 ;; Registers used:
  4880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4886 ;;      Params:         0       0       0       0       0
  4887 ;;      Locals:         0       0       0       0       0
  4888 ;;      Temps:          1       0       0       0       0
  4889 ;;      Totals:         1       0       0       0       0
  4890 ;;Total ram usage:        1 bytes
  4891 ;; Hardware stack levels used:    1
  4892 ;; Hardware stack levels required when called:    8
  4893 ;; This function calls:
  4894 ;;		_ReadUSART
  4895 ;;		_ToMainLow_sendmsg
  4896 ;; This function is called by:
  4897 ;;		_InterruptHandlerLow
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901                           	psect	text32
  4902  001154                     __ptext32:
  4903                           	opt stack 0
  4904  001154                     _uart_recv_int_handler:
  4905                           	opt stack 16
  4906                           
  4907                           ;my_uart.c: 12: if ((PIR1bits.RCIF)) {
  4908                           
  4909                           ;incstack = 0
  4910  001154  AA9E               	btfss	3998,5,c	;volatile
  4911  001156  D03C               	goto	i1l2982
  4912                           
  4913                           ;my_uart.c: 13: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  4914  001158  EE20 F004          	lfsr	2,4
  4915  00115C  5052               	movf	_uc_ptr,w,c
  4916  00115E  26D9               	addwf	fsr2l,f,c
  4917  001160  5053               	movf	_uc_ptr+1,w,c
  4918  001162  22DA               	addwfc	fsr2h,f,c
  4919  001164  50DF               	movf	indf2,w,c
  4920  001166  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4921  001168  501B               	movf	??_uart_recv_int_handler,w,c
  4922  00116A  0D01               	mullw	1
  4923  00116C  50F3               	movf	prodl,w,c
  4924  00116E  2452               	addwf	_uc_ptr,w,c
  4925  001170  6ED9               	movwf	fsr2l,c
  4926  001172  50F4               	movf	prodh,w,c
  4927  001174  2053               	addwfc	_uc_ptr+1,w,c
  4928  001176  6EDA               	movwf	fsr2h,c
  4929  001178  EC1B  F00D         	call	_ReadUSART	;wreg free
  4930  00117C  6EDF               	movwf	indf2,c
  4931                           
  4932                           ;my_uart.c: 14: uc_ptr->buflen++;
  4933  00117E  EE20 F004          	lfsr	2,4
  4934  001182  5052               	movf	_uc_ptr,w,c
  4935  001184  26D9               	addwf	fsr2l,f,c
  4936  001186  5053               	movf	_uc_ptr+1,w,c
  4937  001188  22DA               	addwfc	fsr2h,f,c
  4938  00118A  2ADF               	incf	indf2,f,c
  4939                           
  4940                           ;my_uart.c: 16: if (uc_ptr->buflen == 4) {
  4941  00118C  EE20 F004          	lfsr	2,4
  4942  001190  5052               	movf	_uc_ptr,w,c
  4943  001192  26D9               	addwf	fsr2l,f,c
  4944  001194  5053               	movf	_uc_ptr+1,w,c
  4945  001196  22DA               	addwfc	fsr2h,f,c
  4946  001198  0E04               	movlw	4
  4947  00119A  62DF               	cpfseq	indf2,c
  4948  00119C  D019               	goto	i1l2982
  4949                           
  4950                           ;my_uart.c: 17: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  4951  00119E  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4952  0011A0  0E1F               	movlw	31
  4953  0011A2  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4954  0011A4  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  4955  0011A6  C053  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  4956  0011AA  C052  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  4957  0011AE  EE20 F004          	lfsr	2,4
  4958  0011B2  5052               	movf	_uc_ptr,w,c
  4959  0011B4  26D9               	addwf	fsr2l,f,c
  4960  0011B6  5053               	movf	_uc_ptr+1,w,c
  4961  0011B8  22DA               	addwfc	fsr2h,f,c
  4962  0011BA  50DF               	movf	indf2,w,c
  4963  0011BC  ECD4  F00C         	call	_ToMainLow_sendmsg
  4964                           
  4965                           ;my_uart.c: 18: uc_ptr->buflen = 0;
  4966  0011C0  EE20 F004          	lfsr	2,4
  4967  0011C4  5052               	movf	_uc_ptr,w,c
  4968  0011C6  26D9               	addwf	fsr2l,f,c
  4969  0011C8  5053               	movf	_uc_ptr+1,w,c
  4970  0011CA  22DA               	addwfc	fsr2h,f,c
  4971  0011CC  0E00               	movlw	0
  4972  0011CE  6EDF               	movwf	indf2,c
  4973  0011D0                     i1l2982:
  4974                           
  4975                           ;my_uart.c: 19: }
  4976                           ;my_uart.c: 20: }
  4977                           ;my_uart.c: 21: if (USART_Status.OVERRUN_ERROR == 1) {
  4978  0011D0  A651               	btfss	_USART_Status,3,c
  4979  0011D2  0012               	return	
  4980                           
  4981                           ;my_uart.c: 24: RCSTAbits.CREN = 0;
  4982  0011D4  98AB               	bcf	4011,4,c	;volatile
  4983                           
  4984                           ;my_uart.c: 25: RCSTAbits.CREN = 1;
  4985  0011D6  88AB               	bsf	4011,4,c	;volatile
  4986                           
  4987                           ;my_uart.c: 26: ToMainLow_sendmsg(0, 30, (void *) 0);
  4988  0011D8  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4989  0011DA  0E1E               	movlw	30
  4990  0011DC  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4991  0011DE  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  4992  0011E0  0E00               	movlw	0
  4993  0011E2  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  4994  0011E4  0E00               	movlw	0
  4995  0011E6  6E18               	movwf	ToMainLow_sendmsg@data,c
  4996  0011E8  0E00               	movlw	0
  4997  0011EA  ECD4  F00C         	call	_ToMainLow_sendmsg
  4998  0011EE  0012               	return	
  4999  0011F0                     __end_of_uart_recv_int_handler:
  5000                           	opt stack 0
  5001                           pclatu	equ	0xFFB
  5002                           pclath	equ	0xFFA
  5003                           tblptru	equ	0xFF8
  5004                           tblptrh	equ	0xFF7
  5005                           tblptrl	equ	0xFF6
  5006                           tablat	equ	0xFF5
  5007                           prodh	equ	0xFF4
  5008                           prodl	equ	0xFF3
  5009                           intcon	equ	0xFF2
  5010                           intcon2	equ	0xFF1
  5011                           postinc0	equ	0xFEE
  5012                           fsr0h	equ	0xFEA
  5013                           fsr0l	equ	0xFE9
  5014                           wreg	equ	0xFE8
  5015                           indf1	equ	0xFE7
  5016                           fsr1h	equ	0xFE2
  5017                           fsr1l	equ	0xFE1
  5018                           bsr	equ	0xFE0
  5019                           indf2	equ	0xFDF
  5020                           postinc2	equ	0xFDE
  5021                           postdec2	equ	0xFDD
  5022                           fsr2h	equ	0xFDA
  5023                           fsr2l	equ	0xFD9
  5024                           status	equ	0xFD8
  5025                           
  5026 ;; *************** function _ToMainLow_sendmsg *****************
  5027 ;; Defined at:
  5028 ;;		line 103 in file "../src/messages.c"
  5029 ;; Parameters:    Size  Location     Type
  5030 ;;  length          1    wreg     unsigned char 
  5031 ;;  msgtype         1   22[COMRAM] unsigned char 
  5032 ;;  data            2   23[COMRAM] PTR void 
  5033 ;;		 -> main@uc(5), NULL(0), 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;  length          1   25[COMRAM] unsigned char 
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  1    wreg      char 
  5038 ;; Registers used:
  5039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5045 ;;      Params:         3       0       0       0       0
  5046 ;;      Locals:         1       0       0       0       0
  5047 ;;      Temps:          0       0       0       0       0
  5048 ;;      Totals:         4       0       0       0       0
  5049 ;;Total ram usage:        4 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; Hardware stack levels required when called:    7
  5052 ;; This function calls:
  5053 ;;		i1_send_msg
  5054 ;; This function is called by:
  5055 ;;		_uart_recv_int_handler
  5056 ;;		_timer1_int_handler
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           	psect	text33
  5061  0019A8                     __ptext33:
  5062                           	opt stack 0
  5063  0019A8                     _ToMainLow_sendmsg:
  5064                           	opt stack 16
  5065                           
  5066                           ;incstack = 0
  5067                           ;ToMainLow_sendmsg@length stored from wreg
  5068  0019A8  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5069                           
  5070                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5071                           ;	Return value of _ToMainLow_sendmsg is never used
  5072  0019AC  0100               	movlb	0	; () banked
  5073  0019AE  0E00               	movlw	high _ToMainLow_MQ
  5074  0019B0  6E0C               	movwf	i1send_msg@qptr+1,c
  5075  0019B2  0100               	movlb	0	; () banked
  5076  0019B4  0E80               	movlw	low _ToMainLow_MQ
  5077  0019B6  6E0B               	movwf	i1send_msg@qptr,c
  5078  0019B8  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5079  0019BC  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5080  0019C0  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5081  0019C4  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5082  0019C8  ECAD  F007         	call	i1_send_msg	;wreg free
  5083  0019CC  0012               	return	
  5084  0019CE                     __end_of_ToMainLow_sendmsg:
  5085                           	opt stack 0
  5086                           pclatu	equ	0xFFB
  5087                           pclath	equ	0xFFA
  5088                           tblptru	equ	0xFF8
  5089                           tblptrh	equ	0xFF7
  5090                           tblptrl	equ	0xFF6
  5091                           tablat	equ	0xFF5
  5092                           prodh	equ	0xFF4
  5093                           prodl	equ	0xFF3
  5094                           intcon	equ	0xFF2
  5095                           intcon2	equ	0xFF1
  5096                           postinc0	equ	0xFEE
  5097                           fsr0h	equ	0xFEA
  5098                           fsr0l	equ	0xFE9
  5099                           wreg	equ	0xFE8
  5100                           indf1	equ	0xFE7
  5101                           fsr1h	equ	0xFE2
  5102                           fsr1l	equ	0xFE1
  5103                           bsr	equ	0xFE0
  5104                           indf2	equ	0xFDF
  5105                           postinc2	equ	0xFDE
  5106                           postdec2	equ	0xFDD
  5107                           fsr2h	equ	0xFDA
  5108                           fsr2l	equ	0xFD9
  5109                           status	equ	0xFD8
  5110                           
  5111 ;; *************** function i1_send_msg *****************
  5112 ;; Defined at:
  5113 ;;		line 24 in file "../src/messages.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5116 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5117 ;;  length          1   12[COMRAM] unsigned char 
  5118 ;;  msgtype         1   13[COMRAM] unsigned char 
  5119 ;;  data            2   14[COMRAM] PTR void 
  5120 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  5121 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5124 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5125 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5126 ;;  send_msg        2   17[COMRAM] unsigned int 
  5127 ;;  send_msg        1   19[COMRAM] unsigned char 
  5128 ;; Return value:  Size  Location     Type
  5129 ;;                  1    wreg      char 
  5130 ;; Registers used:
  5131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5132 ;; Tracked objects:
  5133 ;;		On entry : 0/0
  5134 ;;		On exit  : 0/0
  5135 ;;		Unchanged: 0/0
  5136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5137 ;;      Params:         6       0       0       0       0
  5138 ;;      Locals:         5       0       0       0       0
  5139 ;;      Temps:          1       0       0       0       0
  5140 ;;      Totals:        12       0       0       0       0
  5141 ;;Total ram usage:       12 bytes
  5142 ;; Hardware stack levels used:    1
  5143 ;; Hardware stack levels required when called:    6
  5144 ;; This function calls:
  5145 ;;		i1_memcpy
  5146 ;; This function is called by:
  5147 ;;		_ToMainLow_sendmsg
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151                           	psect	text34
  5152  000F5A                     __ptext34:
  5153                           	opt stack 0
  5154  000F5A                     i1_send_msg:
  5155                           	opt stack 16
  5156                           
  5157                           ;messages.c: 25: unsigned char slot;
  5158                           ;messages.c: 27: msg *qmsg;
  5159                           ;messages.c: 28: size_t tlength = length;
  5160                           
  5161                           ;incstack = 0
  5162  000F5A  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5163  000F5E  6A13               	clrf	i1send_msg@tlength+1,c
  5164                           
  5165                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5166  000F60  EE20 F034          	lfsr	2,52
  5167  000F64  500B               	movf	i1send_msg@qptr,w,c
  5168  000F66  26D9               	addwf	fsr2l,f,c
  5169  000F68  500C               	movf	i1send_msg@qptr+1,w,c
  5170  000F6A  22DA               	addwfc	fsr2h,f,c
  5171  000F6C  50DF               	movf	indf2,w,c
  5172  000F6E  6E14               	movwf	i1send_msg@slot,c
  5173                           
  5174                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5175  000F70  5014               	movf	i1send_msg@slot,w,c
  5176  000F72  0D0D               	mullw	13
  5177  000F74  50F3               	movf	prodl,w,c
  5178  000F76  240B               	addwf	i1send_msg@qptr,w,c
  5179  000F78  6E15               	movwf	i1send_msg@qmsg,c
  5180  000F7A  50F4               	movf	prodh,w,c
  5181  000F7C  200C               	addwfc	i1send_msg@qptr+1,w,c
  5182  000F7E  6E16               	movwf	i1send_msg@qmsg+1,c
  5183                           
  5184                           ;messages.c: 41: if (qmsg->full != 0) {
  5185  000F80  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5186  000F84  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5187  000F88  50DF               	movf	indf2,w,c
  5188  000F8A  B4D8               	btfsc	status,2,c
  5189  000F8C  D002               	goto	i1l2954
  5190                           
  5191                           ;messages.c: 42: return (-1);
  5192  000F8E  0EFF               	movlw	255
  5193  000F90  0012               	return	
  5194  000F92                     i1l2954:
  5195                           
  5196                           ;messages.c: 43: }
  5197                           ;messages.c: 46: qmsg->length = length;
  5198  000F92  EE20 F001          	lfsr	2,1
  5199  000F96  5015               	movf	i1send_msg@qmsg,w,c
  5200  000F98  26D9               	addwf	fsr2l,f,c
  5201  000F9A  5016               	movf	i1send_msg@qmsg+1,w,c
  5202  000F9C  22DA               	addwfc	fsr2h,f,c
  5203  000F9E  C00D  FFDF         	movff	i1send_msg@length,indf2
  5204                           
  5205                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5206  000FA2  EE20 F002          	lfsr	2,2
  5207  000FA6  5015               	movf	i1send_msg@qmsg,w,c
  5208  000FA8  26D9               	addwf	fsr2l,f,c
  5209  000FAA  5016               	movf	i1send_msg@qmsg+1,w,c
  5210  000FAC  22DA               	addwfc	fsr2h,f,c
  5211  000FAE  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5212                           
  5213                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5214  000FB2  0E03               	movlw	3
  5215  000FB4  2415               	addwf	i1send_msg@qmsg,w,c
  5216  000FB6  6E01               	movwf	i1memcpy@d1,c
  5217  000FB8  0E00               	movlw	0
  5218  000FBA  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5219  000FBC  6E02               	movwf	i1memcpy@d1+1,c
  5220  000FBE  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5221  000FC2  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5222  000FC6  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5223  000FCA  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5224  000FCE  ECE2  F00B         	call	i1_memcpy	;wreg free
  5225                           
  5226                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5227  000FD2  EE20 F034          	lfsr	2,52
  5228  000FD6  500B               	movf	i1send_msg@qptr,w,c
  5229  000FD8  26D9               	addwf	fsr2l,f,c
  5230  000FDA  500C               	movf	i1send_msg@qptr+1,w,c
  5231  000FDC  22DA               	addwfc	fsr2h,f,c
  5232  000FDE  EE10 F034          	lfsr	1,52
  5233  000FE2  500B               	movf	i1send_msg@qptr,w,c
  5234  000FE4  26E1               	addwf	fsr1l,f,c
  5235  000FE6  500C               	movf	i1send_msg@qptr+1,w,c
  5236  000FE8  22E2               	addwfc	fsr1h,f,c
  5237  000FEA  50E7               	movf	indf1,w,c
  5238  000FEC  6E11               	movwf	??i1_send_msg& (0+255),c
  5239  000FEE  2811               	incf	??i1_send_msg,w,c
  5240  000FF0  0B03               	andlw	3
  5241  000FF2  6EDF               	movwf	indf2,c
  5242                           
  5243                           ;messages.c: 59: qmsg->full = 1;
  5244  000FF4  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5245  000FF8  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5246  000FFC  0E01               	movlw	1
  5247  000FFE  6EDF               	movwf	indf2,c
  5248                           
  5249                           ;messages.c: 60: return (1);
  5250  001000  0E01               	movlw	1
  5251  001002  0012               	return	
  5252  001004                     __end_ofi1_send_msg:
  5253                           	opt stack 0
  5254                           pclatu	equ	0xFFB
  5255                           pclath	equ	0xFFA
  5256                           tblptru	equ	0xFF8
  5257                           tblptrh	equ	0xFF7
  5258                           tblptrl	equ	0xFF6
  5259                           tablat	equ	0xFF5
  5260                           prodh	equ	0xFF4
  5261                           prodl	equ	0xFF3
  5262                           intcon	equ	0xFF2
  5263                           intcon2	equ	0xFF1
  5264                           postinc0	equ	0xFEE
  5265                           fsr0h	equ	0xFEA
  5266                           fsr0l	equ	0xFE9
  5267                           wreg	equ	0xFE8
  5268                           indf1	equ	0xFE7
  5269                           fsr1h	equ	0xFE2
  5270                           fsr1l	equ	0xFE1
  5271                           bsr	equ	0xFE0
  5272                           indf2	equ	0xFDF
  5273                           postinc2	equ	0xFDE
  5274                           postdec2	equ	0xFDD
  5275                           fsr2h	equ	0xFDA
  5276                           fsr2l	equ	0xFD9
  5277                           status	equ	0xFD8
  5278                           
  5279 ;; *************** function i1_memcpy *****************
  5280 ;; Defined at:
  5281 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;  d1              2    0[COMRAM] PTR void 
  5284 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5285 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5286 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  5287 ;;  s1              2    2[COMRAM] PTR const void 
  5288 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5289 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5290 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  5291 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5292 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  5293 ;;  n               2    4[COMRAM] unsigned int 
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5296 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5297 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5298 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  5299 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5300 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  5301 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5302 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5303 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5304 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  5305 ;; Return value:  Size  Location     Type
  5306 ;;                  2    0[COMRAM] PTR void 
  5307 ;; Registers used:
  5308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5309 ;; Tracked objects:
  5310 ;;		On entry : 0/0
  5311 ;;		On exit  : 0/0
  5312 ;;		Unchanged: 0/0
  5313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5314 ;;      Params:         6       0       0       0       0
  5315 ;;      Locals:         4       0       0       0       0
  5316 ;;      Temps:          0       0       0       0       0
  5317 ;;      Totals:        10       0       0       0       0
  5318 ;;Total ram usage:       10 bytes
  5319 ;; Hardware stack levels used:    1
  5320 ;; Hardware stack levels required when called:    5
  5321 ;; This function calls:
  5322 ;;		Nothing
  5323 ;; This function is called by:
  5324 ;;		i1_send_msg
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327                           
  5328                           	psect	text35
  5329  0017C4                     __ptext35:
  5330                           	opt stack 0
  5331  0017C4                     i1_memcpy:
  5332                           	opt stack 16
  5333                           
  5334                           ;incstack = 0
  5335  0017C4  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5336  0017C8  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5337  0017CC  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5338  0017D0  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5339  0017D4  D00E               	goto	i1l2930
  5340  0017D6                     i1l2924:
  5341  0017D6  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5342  0017DA  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5343  0017DE  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5344  0017E2  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5345  0017E6  CFDF FFE7          	movff	indf2,indf1
  5346  0017EA  4A09               	infsnz	i1memcpy@s,f,c
  5347  0017EC  2A0A               	incf	i1memcpy@s+1,f,c
  5348  0017EE  4A07               	infsnz	i1memcpy@d,f,c
  5349  0017F0  2A08               	incf	i1memcpy@d+1,f,c
  5350  0017F2                     i1l2930:
  5351  0017F2  0605               	decf	i1memcpy@n,f,c
  5352  0017F4  A0D8               	btfss	status,0,c
  5353  0017F6  0606               	decf	i1memcpy@n+1,f,c
  5354  0017F8  2805               	incf	i1memcpy@n& (0+255),w,c
  5355  0017FA  B4D8               	btfsc	status,2,c
  5356  0017FC  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5357  0017FE  B4D8               	btfsc	status,2,c
  5358                           
  5359                           ;	Return value of i1_memcpy is never used
  5360  001800  0012               	return	
  5361  001802  D7E9               	goto	i1l2924
  5362  001804                     __end_ofi1_memcpy:
  5363                           	opt stack 0
  5364                           pclatu	equ	0xFFB
  5365                           pclath	equ	0xFFA
  5366                           tblptru	equ	0xFF8
  5367                           tblptrh	equ	0xFF7
  5368                           tblptrl	equ	0xFF6
  5369                           tablat	equ	0xFF5
  5370                           prodh	equ	0xFF4
  5371                           prodl	equ	0xFF3
  5372                           intcon	equ	0xFF2
  5373                           intcon2	equ	0xFF1
  5374                           postinc0	equ	0xFEE
  5375                           fsr0h	equ	0xFEA
  5376                           fsr0l	equ	0xFE9
  5377                           wreg	equ	0xFE8
  5378                           indf1	equ	0xFE7
  5379                           fsr1h	equ	0xFE2
  5380                           fsr1l	equ	0xFE1
  5381                           bsr	equ	0xFE0
  5382                           indf2	equ	0xFDF
  5383                           postinc2	equ	0xFDE
  5384                           postdec2	equ	0xFDD
  5385                           fsr2h	equ	0xFDA
  5386                           fsr2l	equ	0xFD9
  5387                           status	equ	0xFD8
  5388                           
  5389 ;; *************** function _ReadUSART *****************
  5390 ;; Defined at:
  5391 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;		None
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;  data            1    0[COMRAM] unsigned char 
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  1    wreg      unsigned char 
  5398 ;; Registers used:
  5399 ;;		wreg, status,2, status,0
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5405 ;;      Params:         0       0       0       0       0
  5406 ;;      Locals:         1       0       0       0       0
  5407 ;;      Temps:          0       0       0       0       0
  5408 ;;      Totals:         1       0       0       0       0
  5409 ;;Total ram usage:        1 bytes
  5410 ;; Hardware stack levels used:    1
  5411 ;; Hardware stack levels required when called:    5
  5412 ;; This function calls:
  5413 ;;		Nothing
  5414 ;; This function is called by:
  5415 ;;		_uart_recv_int_handler
  5416 ;; This function uses a non-reentrant model
  5417 ;;
  5418                           
  5419                           	psect	text36
  5420  001A36                     __ptext36:
  5421                           	opt stack 0
  5422  001A36                     _ReadUSART:
  5423                           	opt stack 18
  5424                           
  5425                           ;incstack = 0
  5426  001A36  0EF2               	movlw	242
  5427  001A38  1651               	andwf	_USART_Status,f,c
  5428  001A3A  ACAB               	btfss	4011,6,c	;volatile
  5429  001A3C  D003               	goto	i1l523
  5430  001A3E  9051               	bcf	_USART_Status,0,c
  5431  001A40  B0AB               	btfsc	4011,0,c	;volatile
  5432  001A42  8051               	bsf	_USART_Status,0,c
  5433  001A44                     i1l523:
  5434  001A44  B4AB               	btfsc	4011,2,c	;volatile
  5435  001A46  8451               	bsf	_USART_Status,2,c
  5436  001A48  B2AB               	btfsc	4011,1,c	;volatile
  5437  001A4A  8651               	bsf	_USART_Status,3,c
  5438  001A4C  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5439  001A50  5001               	movf	ReadUSART@data,w,c
  5440  001A52  0012               	return	
  5441  001A54                     __end_of_ReadUSART:
  5442                           	opt stack 0
  5443                           pclatu	equ	0xFFB
  5444                           pclath	equ	0xFFA
  5445                           tblptru	equ	0xFF8
  5446                           tblptrh	equ	0xFF7
  5447                           tblptrl	equ	0xFF6
  5448                           tablat	equ	0xFF5
  5449                           prodh	equ	0xFF4
  5450                           prodl	equ	0xFF3
  5451                           intcon	equ	0xFF2
  5452                           intcon2	equ	0xFF1
  5453                           postinc0	equ	0xFEE
  5454                           fsr0h	equ	0xFEA
  5455                           fsr0l	equ	0xFE9
  5456                           wreg	equ	0xFE8
  5457                           indf1	equ	0xFE7
  5458                           fsr1h	equ	0xFE2
  5459                           fsr1l	equ	0xFE1
  5460                           bsr	equ	0xFE0
  5461                           indf2	equ	0xFDF
  5462                           postinc2	equ	0xFDE
  5463                           postdec2	equ	0xFDD
  5464                           fsr2h	equ	0xFDA
  5465                           fsr2l	equ	0xFD9
  5466                           status	equ	0xFD8
  5467                           
  5468 ;; *************** function _InterruptHandlerHigh *****************
  5469 ;; Defined at:
  5470 ;;		line 106 in file "../src/interrupts.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;		None
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;  pureADCValue    2   72[COMRAM] int 
  5475 ;; Return value:  Size  Location     Type
  5476 ;;		None               void
  5477 ;; Registers used:
  5478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5484 ;;      Params:         0       0       0       0       0
  5485 ;;      Locals:         2       0       0       0       0
  5486 ;;      Temps:          0      16       0       0       0
  5487 ;;      Totals:         2      16       0       0       0
  5488 ;;Total ram usage:       18 bytes
  5489 ;; Hardware stack levels used:    1
  5490 ;; Hardware stack levels required when called:    4
  5491 ;; This function calls:
  5492 ;;		_ReadADC
  5493 ;;		_SleepIfOkay
  5494 ;;		_i2c_int_handler
  5495 ;;		_setStateResponding
  5496 ;;		i2_ConvertADC
  5497 ;; This function is called by:
  5498 ;;		Interrupt level 2
  5499 ;; This function uses a non-reentrant model
  5500 ;;
  5501                           
  5502                           	psect	intcode
  5503  000008                     __pintcode:
  5504                           	opt stack 0
  5505  000008                     _InterruptHandlerHigh:
  5506                           	opt stack 16
  5507                           
  5508                           ;incstack = 0
  5509  000008  CFFA F0C6          	movff	pclath,??_InterruptHandlerHigh+2
  5510  00000C  CFFB F0C7          	movff	pclatu,??_InterruptHandlerHigh+3
  5511  000010  EFD5  F006         	goto	int_func
  5512                           pclatu	equ	0xFFB
  5513                           pclath	equ	0xFFA
  5514                           tblptru	equ	0xFF8
  5515                           tblptrh	equ	0xFF7
  5516                           tblptrl	equ	0xFF6
  5517                           tablat	equ	0xFF5
  5518                           prodh	equ	0xFF4
  5519                           prodl	equ	0xFF3
  5520                           intcon	equ	0xFF2
  5521                           intcon2	equ	0xFF1
  5522                           postinc0	equ	0xFEE
  5523                           fsr0h	equ	0xFEA
  5524                           fsr0l	equ	0xFE9
  5525                           wreg	equ	0xFE8
  5526                           indf1	equ	0xFE7
  5527                           fsr1h	equ	0xFE2
  5528                           fsr1l	equ	0xFE1
  5529                           bsr	equ	0xFE0
  5530                           indf2	equ	0xFDF
  5531                           postinc2	equ	0xFDE
  5532                           postdec2	equ	0xFDD
  5533                           fsr2h	equ	0xFDA
  5534                           fsr2l	equ	0xFD9
  5535                           status	equ	0xFD8
  5536                           
  5537                           	psect	intcode_body
  5538  000DAA                     __pintcode_body:
  5539                           	opt stack 16
  5540  000DAA                     int_func:
  5541                           	opt stack 16
  5542  000DAA  CFE9 F0C8          	movff	fsr0l,??_InterruptHandlerHigh+4
  5543  000DAE  CFEA F0C9          	movff	fsr0h,??_InterruptHandlerHigh+5
  5544  000DB2  CFE1 F0CA          	movff	fsr1l,??_InterruptHandlerHigh+6
  5545  000DB6  CFE2 F0CB          	movff	fsr1h,??_InterruptHandlerHigh+7
  5546  000DBA  CFD9 F0CC          	movff	fsr2l,??_InterruptHandlerHigh+8
  5547  000DBE  CFDA F0CD          	movff	fsr2h,??_InterruptHandlerHigh+9
  5548  000DC2  CFF3 F0CE          	movff	prodl,??_InterruptHandlerHigh+10
  5549  000DC6  CFF4 F0CF          	movff	prodh,??_InterruptHandlerHigh+11
  5550  000DCA  CFF6 F0D0          	movff	tblptrl,??_InterruptHandlerHigh+12
  5551  000DCE  CFF7 F0D1          	movff	tblptrh,??_InterruptHandlerHigh+13
  5552  000DD2  CFF8 F0D2          	movff	tblptru,??_InterruptHandlerHigh+14
  5553  000DD6  CFF5 F0D3          	movff	tablat,??_InterruptHandlerHigh+15
  5554                           
  5555                           ;interrupts.c: 111: if (PIR1bits.SSPIF) {
  5556  000DDA  A69E               	btfss	3998,3,c	;volatile
  5557  000DDC  D005               	goto	i2l2810
  5558                           
  5559                           ;interrupts.c: 113: PIR1bits.SSPIF = 0;
  5560  000DDE  969E               	bcf	3998,3,c	;volatile
  5561                           
  5562                           ;interrupts.c: 115: setStateResponding();
  5563  000DE0  EC5C  F00D         	call	_setStateResponding	;wreg free
  5564                           
  5565                           ;interrupts.c: 116: i2c_int_handler();
  5566  000DE4  EC5A  F000         	call	_i2c_int_handler	;wreg free
  5567  000DE8                     i2l2810:
  5568                           
  5569                           ;interrupts.c: 117: }
  5570                           ;interrupts.c: 120: if (INTCONbits.TMR0IF) {
  5571  000DE8  A4F2               	btfss	intcon,2,c	;volatile
  5572  000DEA  D003               	goto	i2l2816
  5573                           
  5574                           ;interrupts.c: 121: INTCONbits.TMR0IF = 0;
  5575  000DEC  94F2               	bcf	intcon,2,c	;volatile
  5576                           
  5577                           ;interrupts.c: 124: ConvertADC();
  5578  000DEE  EC70  F00D         	call	i2_ConvertADC	;wreg free
  5579  000DF2                     i2l2816:
  5580                           
  5581                           ;interrupts.c: 125: }
  5582                           ;interrupts.c: 130: if(PIR1bits.ADIF == 1)
  5583  000DF2  AC9E               	btfss	3998,6,c	;volatile
  5584  000DF4  D02F               	goto	i2l2834
  5585                           
  5586                           ;interrupts.c: 131: {
  5587                           ;interrupts.c: 134: PIR1bits.ADIF = 0;
  5588  000DF6  9C9E               	bcf	3998,6,c	;volatile
  5589                           
  5590                           ;interrupts.c: 135: int pureADCValue = ReadADC();
  5591  000DF8  EC66  F00D         	call	_ReadADC	;wreg free
  5592  000DFC  C02D  F049         	movff	?_ReadADC,InterruptHandlerHigh@pureADCValue
  5593  000E00  C02E  F04A         	movff	?_ReadADC+1,InterruptHandlerHigh@pureADCValue+1
  5594                           
  5595                           ;interrupts.c: 136: ADCValue = pureADCValue >> 2;
  5596  000E04  C049  F0C4         	movff	InterruptHandlerHigh@pureADCValue,??_InterruptHandlerHigh
  5597  000E08  C04A  F0C5         	movff	InterruptHandlerHigh@pureADCValue+1,??_InterruptHandlerHigh+1
  5598  000E0C  0100               	movlb	0	; () banked
  5599  000E0E  35C5               	rlcf	(??_InterruptHandlerHigh+1)& (0+255),w,b
  5600  000E10  33C5               	rrcf	(??_InterruptHandlerHigh+1)& (0+255),f,b
  5601  000E12  33C4               	rrcf	??_InterruptHandlerHigh& (0+255),f,b
  5602  000E14  0100               	movlb	0	; () banked
  5603  000E16  35C5               	rlcf	(??_InterruptHandlerHigh+1)& (0+255),w,b
  5604  000E18  33C5               	rrcf	(??_InterruptHandlerHigh+1)& (0+255),f,b
  5605  000E1A  33C4               	rrcf	??_InterruptHandlerHigh& (0+255),f,b
  5606  000E1C  0100               	movlb	0	; () banked
  5607  000E1E  51C4               	movf	??_InterruptHandlerHigh& (0+255),w,b
  5608  000E20  6E4F               	movwf	_ADCValue,c
  5609                           
  5610                           ; BSR set to: 0
  5611                           ;interrupts.c: 137: if(responding == 0)
  5612  000E22  504E               	movf	_responding+1,w,c
  5613  000E24  104D               	iorwf	_responding,w,c
  5614  000E26  A4D8               	btfss	status,2,c
  5615  000E28  D015               	goto	i2l2834
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;interrupts.c: 138: {
  5619                           ;interrupts.c: 139: if(arrayPlaceHolder == 200)
  5620  000E2A  504B               	movf	_arrayPlaceHolder,w,c
  5621  000E2C  0AC8               	xorlw	200
  5622  000E2E  104C               	iorwf	_arrayPlaceHolder+1,w,c
  5623  000E30  A4D8               	btfss	status,2,c
  5624  000E32  D004               	goto	i2l2830
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;interrupts.c: 140: arrayPlaceHolder = 0;
  5628  000E34  0E00               	movlw	0
  5629  000E36  6E4C               	movwf	_arrayPlaceHolder+1,c
  5630  000E38  0E00               	movlw	0
  5631  000E3A  6E4B               	movwf	_arrayPlaceHolder,c
  5632  000E3C                     i2l2830:
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;interrupts.c: 141: ADCArray[arrayPlaceHolder] = ADCValue;
  5636  000E3C  0102               	movlb	2	; () banked
  5637  000E3E  0E00               	movlw	low _ADCArray
  5638  000E40  244B               	addwf	_arrayPlaceHolder,w,c
  5639  000E42  6ED9               	movwf	fsr2l,c
  5640  000E44  0102               	movlb	2	; () banked
  5641  000E46  0E02               	movlw	high _ADCArray
  5642  000E48  204C               	addwfc	_arrayPlaceHolder+1,w,c
  5643  000E4A  6EDA               	movwf	fsr2h,c
  5644  000E4C  C04F  FFDF         	movff	_ADCValue,indf2
  5645                           
  5646                           ; BSR set to: 2
  5647                           ;interrupts.c: 142: arrayPlaceHolder++;
  5648  000E50  4A4B               	infsnz	_arrayPlaceHolder,f,c
  5649  000E52  2A4C               	incf	_arrayPlaceHolder+1,f,c
  5650  000E54                     i2l2834:
  5651                           
  5652                           ;interrupts.c: 143: }
  5653                           ;interrupts.c: 146: }
  5654                           ;interrupts.c: 152: SleepIfOkay();
  5655  000E54  EC12  F00B         	call	_SleepIfOkay	;wreg free
  5656  000E58  C0D3  FFF5         	movff	??_InterruptHandlerHigh+15,tablat
  5657  000E5C  C0D2  FFF8         	movff	??_InterruptHandlerHigh+14,tblptru
  5658  000E60  C0D1  FFF7         	movff	??_InterruptHandlerHigh+13,tblptrh
  5659  000E64  C0D0  FFF6         	movff	??_InterruptHandlerHigh+12,tblptrl
  5660  000E68  C0CF  FFF4         	movff	??_InterruptHandlerHigh+11,prodh
  5661  000E6C  C0CE  FFF3         	movff	??_InterruptHandlerHigh+10,prodl
  5662  000E70  C0CD  FFDA         	movff	??_InterruptHandlerHigh+9,fsr2h
  5663  000E74  C0CC  FFD9         	movff	??_InterruptHandlerHigh+8,fsr2l
  5664  000E78  C0CB  FFE2         	movff	??_InterruptHandlerHigh+7,fsr1h
  5665  000E7C  C0CA  FFE1         	movff	??_InterruptHandlerHigh+6,fsr1l
  5666  000E80  C0C9  FFEA         	movff	??_InterruptHandlerHigh+5,fsr0h
  5667  000E84  C0C8  FFE9         	movff	??_InterruptHandlerHigh+4,fsr0l
  5668  000E88  C0C7  FFFB         	movff	??_InterruptHandlerHigh+3,pclatu
  5669  000E8C  C0C6  FFFA         	movff	??_InterruptHandlerHigh+2,pclath
  5670  000E90  0011               	retfie		f
  5671  000E92                     __end_of_InterruptHandlerHigh:
  5672                           	opt stack 0
  5673                           pclatu	equ	0xFFB
  5674                           pclath	equ	0xFFA
  5675                           tblptru	equ	0xFF8
  5676                           tblptrh	equ	0xFF7
  5677                           tblptrl	equ	0xFF6
  5678                           tablat	equ	0xFF5
  5679                           prodh	equ	0xFF4
  5680                           prodl	equ	0xFF3
  5681                           intcon	equ	0xFF2
  5682                           intcon2	equ	0xFF1
  5683                           postinc0	equ	0xFEE
  5684                           fsr0h	equ	0xFEA
  5685                           fsr0l	equ	0xFE9
  5686                           wreg	equ	0xFE8
  5687                           indf1	equ	0xFE7
  5688                           fsr1h	equ	0xFE2
  5689                           fsr1l	equ	0xFE1
  5690                           bsr	equ	0xFE0
  5691                           indf2	equ	0xFDF
  5692                           postinc2	equ	0xFDE
  5693                           postdec2	equ	0xFDD
  5694                           fsr2h	equ	0xFDA
  5695                           fsr2l	equ	0xFD9
  5696                           status	equ	0xFD8
  5697                           
  5698 ;; *************** function i2_ConvertADC *****************
  5699 ;; Defined at:
  5700 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcconv.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;		None
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;		None
  5705 ;; Return value:  Size  Location     Type
  5706 ;;		None               void
  5707 ;; Registers used:
  5708 ;;		None
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5714 ;;      Params:         0       0       0       0       0
  5715 ;;      Locals:         0       0       0       0       0
  5716 ;;      Temps:          0       0       0       0       0
  5717 ;;      Totals:         0       0       0       0       0
  5718 ;;Total ram usage:        0 bytes
  5719 ;; Hardware stack levels used:    1
  5720 ;; This function calls:
  5721 ;;		Nothing
  5722 ;; This function is called by:
  5723 ;;		_InterruptHandlerHigh
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727                           	psect	text38
  5728  001AE0                     __ptext38:
  5729                           	opt stack 0
  5730  001AE0                     i2_ConvertADC:
  5731                           	opt stack 19
  5732                           
  5733                           ;incstack = 0
  5734  001AE0  82C2               	bsf	4034,1,c	;volatile
  5735  001AE2  0012               	return	
  5736  001AE4                     __end_ofi2_ConvertADC:
  5737                           	opt stack 0
  5738                           pclatu	equ	0xFFB
  5739                           pclath	equ	0xFFA
  5740                           tblptru	equ	0xFF8
  5741                           tblptrh	equ	0xFF7
  5742                           tblptrl	equ	0xFF6
  5743                           tablat	equ	0xFF5
  5744                           prodh	equ	0xFF4
  5745                           prodl	equ	0xFF3
  5746                           intcon	equ	0xFF2
  5747                           intcon2	equ	0xFF1
  5748                           postinc0	equ	0xFEE
  5749                           fsr0h	equ	0xFEA
  5750                           fsr0l	equ	0xFE9
  5751                           wreg	equ	0xFE8
  5752                           indf1	equ	0xFE7
  5753                           fsr1h	equ	0xFE2
  5754                           fsr1l	equ	0xFE1
  5755                           bsr	equ	0xFE0
  5756                           indf2	equ	0xFDF
  5757                           postinc2	equ	0xFDE
  5758                           postdec2	equ	0xFDD
  5759                           fsr2h	equ	0xFDA
  5760                           fsr2l	equ	0xFD9
  5761                           status	equ	0xFD8
  5762                           
  5763 ;; *************** function _setStateResponding *****************
  5764 ;; Defined at:
  5765 ;;		line 19 in file "../src/interrupts.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;		None
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;		None
  5770 ;; Return value:  Size  Location     Type
  5771 ;;		None               void
  5772 ;; Registers used:
  5773 ;;		wreg, status,2
  5774 ;; Tracked objects:
  5775 ;;		On entry : 0/0
  5776 ;;		On exit  : 0/0
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5779 ;;      Params:         0       0       0       0       0
  5780 ;;      Locals:         0       0       0       0       0
  5781 ;;      Temps:          0       0       0       0       0
  5782 ;;      Totals:         0       0       0       0       0
  5783 ;;Total ram usage:        0 bytes
  5784 ;; Hardware stack levels used:    1
  5785 ;; This function calls:
  5786 ;;		Nothing
  5787 ;; This function is called by:
  5788 ;;		_InterruptHandlerHigh
  5789 ;; This function uses a non-reentrant model
  5790 ;;
  5791                           
  5792                           	psect	text39
  5793  001AB8                     __ptext39:
  5794                           	opt stack 0
  5795  001AB8                     _setStateResponding:
  5796                           	opt stack 19
  5797                           
  5798                           ;interrupts.c: 21: responding = 1;
  5799                           
  5800                           ;incstack = 0
  5801  001AB8  0E00               	movlw	0
  5802  001ABA  6E4E               	movwf	_responding+1,c
  5803  001ABC  0E01               	movlw	1
  5804  001ABE  6E4D               	movwf	_responding,c
  5805  001AC0  0012               	return	
  5806  001AC2                     __end_of_setStateResponding:
  5807                           	opt stack 0
  5808                           pclatu	equ	0xFFB
  5809                           pclath	equ	0xFFA
  5810                           tblptru	equ	0xFF8
  5811                           tblptrh	equ	0xFF7
  5812                           tblptrl	equ	0xFF6
  5813                           tablat	equ	0xFF5
  5814                           prodh	equ	0xFF4
  5815                           prodl	equ	0xFF3
  5816                           intcon	equ	0xFF2
  5817                           intcon2	equ	0xFF1
  5818                           postinc0	equ	0xFEE
  5819                           fsr0h	equ	0xFEA
  5820                           fsr0l	equ	0xFE9
  5821                           wreg	equ	0xFE8
  5822                           indf1	equ	0xFE7
  5823                           fsr1h	equ	0xFE2
  5824                           fsr1l	equ	0xFE1
  5825                           bsr	equ	0xFE0
  5826                           indf2	equ	0xFDF
  5827                           postinc2	equ	0xFDE
  5828                           postdec2	equ	0xFDD
  5829                           fsr2h	equ	0xFDA
  5830                           fsr2l	equ	0xFD9
  5831                           status	equ	0xFD8
  5832                           
  5833 ;; *************** function _i2c_int_handler *****************
  5834 ;; Defined at:
  5835 ;;		line 101 in file "../src/my_i2c.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;		None
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;  msgbuffer       3    2[BANK0 ] unsigned char [3]
  5840 ;;  length          2    0[BANK0 ] int 
  5841 ;;  error_buf       3    5[BANK0 ] unsigned char [3]
  5842 ;;  data_read       1   13[BANK0 ] unsigned char 
  5843 ;;  msg_ready       1   12[BANK0 ] unsigned char 
  5844 ;;  msg_to_send     1   11[BANK0 ] unsigned char 
  5845 ;;  i2c_data        1   10[BANK0 ] unsigned char 
  5846 ;;  overrun_erro    1    9[BANK0 ] unsigned char 
  5847 ;;  data_written    1    8[BANK0 ] unsigned char 
  5848 ;; Return value:  Size  Location     Type
  5849 ;;		None               void
  5850 ;; Registers used:
  5851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5852 ;; Tracked objects:
  5853 ;;		On entry : 0/0
  5854 ;;		On exit  : 0/0
  5855 ;;		Unchanged: 0/0
  5856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5857 ;;      Params:         0       0       0       0       0
  5858 ;;      Locals:         0      14       0       0       0
  5859 ;;      Temps:          2       0       0       0       0
  5860 ;;      Totals:         2      14       0       0       0
  5861 ;;Total ram usage:       16 bytes
  5862 ;; Hardware stack levels used:    1
  5863 ;; Hardware stack levels required when called:    3
  5864 ;; This function calls:
  5865 ;;		_ToMainHigh_sendmsg
  5866 ;;		_handle_start
  5867 ;;		_setStateReading
  5868 ;;		i2_start_i2c_slave_reply
  5869 ;; This function is called by:
  5870 ;;		_InterruptHandlerHigh
  5871 ;; This function uses a non-reentrant model
  5872 ;;
  5873                           
  5874                           	psect	text40
  5875  0000B4                     __ptext40:
  5876                           	opt stack 0
  5877  0000B4                     _i2c_int_handler:
  5878                           	opt stack 16
  5879                           
  5880                           ;my_i2c.c: 102: unsigned char i2c_data;
  5881                           ;my_i2c.c: 103: unsigned char data_read = 0;
  5882                           
  5883                           ;incstack = 0
  5884  0000B4  6E47               	movwf	??_i2c_int_handler& (0+255),c
  5885  0000B6  0E00               	movlw	0
  5886  0000B8  0100               	movlb	0	; () banked
  5887  0000BA  0100               	movlb	0	; () banked
  5888  0000BC  6FC3               	movwf	i2c_int_handler@data_read& (0+255),b
  5889  0000BE  5047               	movf	??_i2c_int_handler& (0+255),w,c
  5890                           
  5891                           ;my_i2c.c: 104: unsigned char data_written = 0;
  5892  0000C0  6E47               	movwf	??_i2c_int_handler& (0+255),c
  5893  0000C2  0E00               	movlw	0
  5894  0000C4  0100               	movlb	0	; () banked
  5895  0000C6  0100               	movlb	0	; () banked
  5896  0000C8  6FBE               	movwf	i2c_int_handler@data_written& (0+255),b
  5897  0000CA  5047               	movf	??_i2c_int_handler& (0+255),w,c
  5898                           
  5899                           ;my_i2c.c: 105: unsigned char msg_ready = 0;
  5900  0000CC  6E47               	movwf	??_i2c_int_handler& (0+255),c
  5901  0000CE  0E00               	movlw	0
  5902  0000D0  0100               	movlb	0	; () banked
  5903  0000D2  0100               	movlb	0	; () banked
  5904  0000D4  6FC2               	movwf	i2c_int_handler@msg_ready& (0+255),b
  5905  0000D6  5047               	movf	??_i2c_int_handler& (0+255),w,c
  5906                           
  5907                           ;my_i2c.c: 106: unsigned char msg_to_send = 0;
  5908  0000D8  6E47               	movwf	??_i2c_int_handler& (0+255),c
  5909  0000DA  0E00               	movlw	0
  5910  0000DC  0100               	movlb	0	; () banked
  5911  0000DE  0100               	movlb	0	; () banked
  5912  0000E0  6FC1               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  5913  0000E2  5047               	movf	??_i2c_int_handler& (0+255),w,c
  5914                           
  5915                           ;my_i2c.c: 107: unsigned char overrun_error = 0;
  5916  0000E4  6E47               	movwf	??_i2c_int_handler& (0+255),c
  5917  0000E6  0E00               	movlw	0
  5918  0000E8  0100               	movlb	0	; () banked
  5919  0000EA  0100               	movlb	0	; () banked
  5920  0000EC  6FBF               	movwf	i2c_int_handler@overrun_error& (0+255),b
  5921  0000EE  5047               	movf	??_i2c_int_handler& (0+255),w,c
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;my_i2c.c: 108: unsigned char error_buf[3];
  5925                           ;my_i2c.c: 111: if (SSPCON1bits.SSPOV == 1) {
  5926  0000F0  ACC6               	btfss	4038,6,c	;volatile
  5927  0000F2  D027               	goto	i2l2252
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;my_i2c.c: 112: SSPCON1bits.SSPOV = 0;
  5931  0000F4  9CC6               	bcf	4038,6,c	;volatile
  5932                           
  5933                           ; BSR set to: 0
  5934                           ;my_i2c.c: 116: ic_ptr->status = 0x5;
  5935  0000F6  0100               	movlb	0	; () banked
  5936  0000F8  EE20 F00C          	lfsr	2,12
  5937  0000FC  0100               	movlb	0	; () banked
  5938  0000FE  51E0               	movf	_ic_ptr& (0+255),w,b
  5939  000100  26D9               	addwf	fsr2l,f,c
  5940  000102  0100               	movlb	0	; () banked
  5941  000104  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  5942  000106  22DA               	addwfc	fsr2h,f,c
  5943  000108  0E05               	movlw	5
  5944  00010A  6EDF               	movwf	indf2,c
  5945                           
  5946                           ; BSR set to: 0
  5947                           ;my_i2c.c: 117: overrun_error = 1;
  5948  00010C  6E47               	movwf	??_i2c_int_handler& (0+255),c
  5949  00010E  0E01               	movlw	1
  5950  000110  0100               	movlb	0	; () banked
  5951  000112  0100               	movlb	0	; () banked
  5952  000114  6FBF               	movwf	i2c_int_handler@overrun_error& (0+255),b
  5953  000116  5047               	movf	??_i2c_int_handler& (0+255),w,c
  5954                           
  5955                           ; BSR set to: 0
  5956                           ;my_i2c.c: 118: ic_ptr->error_count++;
  5957  000118  0100               	movlb	0	; () banked
  5958  00011A  EE20 F00E          	lfsr	2,14
  5959  00011E  0100               	movlb	0	; () banked
  5960  000120  51E0               	movf	_ic_ptr& (0+255),w,b
  5961  000122  26D9               	addwf	fsr2l,f,c
  5962  000124  0100               	movlb	0	; () banked
  5963  000126  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  5964  000128  22DA               	addwfc	fsr2h,f,c
  5965  00012A  2ADF               	incf	indf2,f,c
  5966                           
  5967                           ; BSR set to: 0
  5968                           ;my_i2c.c: 119: ic_ptr->error_code = 0x4;
  5969  00012C  0100               	movlb	0	; () banked
  5970  00012E  EE20 F00D          	lfsr	2,13
  5971  000132  0100               	movlb	0	; () banked
  5972  000134  51E0               	movf	_ic_ptr& (0+255),w,b
  5973  000136  26D9               	addwf	fsr2l,f,c
  5974  000138  0100               	movlb	0	; () banked
  5975  00013A  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  5976  00013C  22DA               	addwfc	fsr2h,f,c
  5977  00013E  0E04               	movlw	4
  5978  000140  6EDF               	movwf	indf2,c
  5979  000142                     i2l2252:
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;my_i2c.c: 120: }
  5983                           ;my_i2c.c: 122: if (SSPSTATbits.BF == 1) {
  5984  000142  A0C7               	btfss	4039,0,c	;volatile
  5985  000144  D008               	goto	i2l2258
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;my_i2c.c: 123: i2c_data = SSPBUF;
  5989  000146  CFC9 F0C0          	movff	4041,i2c_int_handler@i2c_data	;volatile
  5990                           
  5991                           ; BSR set to: 0
  5992                           ;my_i2c.c: 124: data_read = 1;
  5993  00014A  6E47               	movwf	??_i2c_int_handler& (0+255),c
  5994  00014C  0E01               	movlw	1
  5995  00014E  0100               	movlb	0	; () banked
  5996  000150  0100               	movlb	0	; () banked
  5997  000152  6FC3               	movwf	i2c_int_handler@data_read& (0+255),b
  5998  000154  5047               	movf	??_i2c_int_handler& (0+255),w,c
  5999  000156                     i2l2258:
  6000                           
  6001                           ; BSR set to: 0
  6002                           ;my_i2c.c: 125: }
  6003                           ;my_i2c.c: 130: if (!overrun_error) {
  6004  000156  0100               	movlb	0	; () banked
  6005  000158  0100               	movlb	0	; () banked
  6006  00015A  67BF               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6007  00015C  D1BB               	goto	i2l121
  6008  00015E  D1A4               	goto	i2l2348
  6009  000160                     i2l123:
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;my_i2c.c: 133: {
  6013                           ;my_i2c.c: 135: if (SSPSTATbits.S == 1) {
  6014  000160  A6C7               	btfss	4039,3,c	;volatile
  6015  000162  D1B8               	goto	i2l121
  6016                           
  6017                           ; BSR set to: 0
  6018                           ;my_i2c.c: 136: handle_start(data_read);
  6019  000164  0100               	movlb	0	; () banked
  6020  000166  0100               	movlb	0	; () banked
  6021  000168  51C3               	movf	i2c_int_handler@data_read& (0+255),w,b
  6022  00016A  EC49  F007         	call	_handle_start
  6023                           
  6024                           ;my_i2c.c: 138: if (ic_ptr->status == 0x8) {
  6025  00016E  0100               	movlb	0	; () banked
  6026  000170  EE20 F00C          	lfsr	2,12
  6027  000174  0100               	movlb	0	; () banked
  6028  000176  51E0               	movf	_ic_ptr& (0+255),w,b
  6029  000178  26D9               	addwf	fsr2l,f,c
  6030  00017A  0100               	movlb	0	; () banked
  6031  00017C  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6032  00017E  22DA               	addwfc	fsr2h,f,c
  6033  000180  0E08               	movlw	8
  6034  000182  62DF               	cpfseq	indf2,c
  6035  000184  D1A7               	goto	i2l121
  6036                           
  6037                           ; BSR set to: 0
  6038                           ;my_i2c.c: 139: data_read = 0;
  6039  000186  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6040  000188  0E00               	movlw	0
  6041  00018A  0100               	movlb	0	; () banked
  6042  00018C  0100               	movlb	0	; () banked
  6043  00018E  6FC3               	movwf	i2c_int_handler@data_read& (0+255),b
  6044  000190  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6045                           
  6046                           ;my_i2c.c: 140: msg_to_send = 1;
  6047  000192  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6048  000194  0E01               	movlw	1
  6049  000196  0100               	movlb	0	; () banked
  6050  000198  0100               	movlb	0	; () banked
  6051  00019A  6FC1               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6052  00019C  D178               	goto	L6
  6053  00019E                     i2l127:
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;my_i2c.c: 146: {
  6057                           ;my_i2c.c: 148: if (SSPSTATbits.P == 1) {
  6058  00019E  A8C7               	btfss	4039,4,c	;volatile
  6059  0001A0  D02E               	goto	i2l2278
  6060                           
  6061                           ; BSR set to: 0
  6062                           ;my_i2c.c: 151: ic_ptr->event_count++;
  6063  0001A2  0100               	movlb	0	; () banked
  6064  0001A4  EE20 F00B          	lfsr	2,11
  6065  0001A8  0100               	movlb	0	; () banked
  6066  0001AA  51E0               	movf	_ic_ptr& (0+255),w,b
  6067  0001AC  26D9               	addwf	fsr2l,f,c
  6068  0001AE  0100               	movlb	0	; () banked
  6069  0001B0  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6070  0001B2  22DA               	addwfc	fsr2h,f,c
  6071  0001B4  2ADF               	incf	indf2,f,c
  6072                           
  6073                           ; BSR set to: 0
  6074                           ;my_i2c.c: 152: if (data_read) {
  6075  0001B6  0100               	movlb	0	; () banked
  6076  0001B8  0100               	movlb	0	; () banked
  6077  0001BA  51C3               	movf	i2c_int_handler@data_read& (0+255),w,b
  6078  0001BC  B4D8               	btfsc	status,2,c
  6079  0001BE  D169               	goto	L8
  6080                           
  6081                           ; BSR set to: 0
  6082                           ;my_i2c.c: 153: if (SSPSTATbits.D_A == 0) {
  6083  0001C0  BAC7               	btfsc	4039,5,c	;volatile
  6084  0001C2  D007               	goto	i2l2276
  6085                           
  6086                           ; BSR set to: 0
  6087                           ;my_i2c.c: 154: msg_ready = 1;
  6088  0001C4  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6089  0001C6  0E01               	movlw	1
  6090  0001C8  0100               	movlb	0	; () banked
  6091  0001CA  0100               	movlb	0	; () banked
  6092  0001CC  6FC2               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6093  0001CE  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6094                           
  6095                           ;my_i2c.c: 155: } else {
  6096  0001D0  D160               	goto	L8
  6097  0001D2                     i2l2276:
  6098                           
  6099                           ; BSR set to: 0
  6100                           ;my_i2c.c: 156: ic_ptr->error_count++;
  6101  0001D2  0100               	movlb	0	; () banked
  6102  0001D4  EE20 F00E          	lfsr	2,14
  6103  0001D8  0100               	movlb	0	; () banked
  6104  0001DA  51E0               	movf	_ic_ptr& (0+255),w,b
  6105  0001DC  26D9               	addwf	fsr2l,f,c
  6106  0001DE  0100               	movlb	0	; () banked
  6107  0001E0  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6108  0001E2  22DA               	addwfc	fsr2h,f,c
  6109  0001E4  2ADF               	incf	indf2,f,c
  6110                           
  6111                           ;my_i2c.c: 157: ic_ptr->error_code = 0x6;
  6112  0001E6  0100               	movlb	0	; () banked
  6113  0001E8  EE20 F00D          	lfsr	2,13
  6114  0001EC  0100               	movlb	0	; () banked
  6115  0001EE  51E0               	movf	_ic_ptr& (0+255),w,b
  6116  0001F0  26D9               	addwf	fsr2l,f,c
  6117  0001F2  0100               	movlb	0	; () banked
  6118  0001F4  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6119  0001F6  22DA               	addwfc	fsr2h,f,c
  6120  0001F8  0E06               	movlw	6
  6121  0001FA  6EDF               	movwf	indf2,c
  6122                           
  6123                           ; BSR set to: 0
  6124  0001FC  D14A               	goto	L8
  6125  0001FE                     i2l2278:
  6126                           
  6127                           ; BSR set to: 0
  6128  0001FE  0100               	movlb	0	; () banked
  6129  000200  0100               	movlb	0	; () banked
  6130  000202  51C3               	movf	i2c_int_handler@data_read& (0+255),w,b
  6131  000204  B4D8               	btfsc	status,2,c
  6132  000206  D166               	goto	i2l121
  6133                           
  6134                           ; BSR set to: 0
  6135                           ;my_i2c.c: 162: ic_ptr->event_count++;
  6136  000208  0100               	movlb	0	; () banked
  6137  00020A  EE20 F00B          	lfsr	2,11
  6138  00020E  0100               	movlb	0	; () banked
  6139  000210  51E0               	movf	_ic_ptr& (0+255),w,b
  6140  000212  26D9               	addwf	fsr2l,f,c
  6141  000214  0100               	movlb	0	; () banked
  6142  000216  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6143  000218  22DA               	addwfc	fsr2h,f,c
  6144  00021A  2ADF               	incf	indf2,f,c
  6145                           
  6146                           ; BSR set to: 0
  6147                           ;my_i2c.c: 163: if (SSPSTATbits.D_A == 0) {
  6148  00021C  BAC7               	btfsc	4039,5,c	;volatile
  6149  00021E  D019               	goto	i2l2294
  6150                           
  6151                           ; BSR set to: 0
  6152                           ;my_i2c.c: 164: if (SSPSTATbits.R_W == 0) {
  6153  000220  B4C7               	btfsc	4039,2,c	;volatile
  6154  000222  D00B               	goto	i2l2288
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;my_i2c.c: 165: ic_ptr->status = 0x7;
  6158  000224  0100               	movlb	0	; () banked
  6159  000226  EE20 F00C          	lfsr	2,12
  6160  00022A  0100               	movlb	0	; () banked
  6161  00022C  51E0               	movf	_ic_ptr& (0+255),w,b
  6162  00022E  26D9               	addwf	fsr2l,f,c
  6163  000230  0100               	movlb	0	; () banked
  6164  000232  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6165  000234  22DA               	addwfc	fsr2h,f,c
  6166  000236  0E07               	movlw	7
  6167  000238  D074               	goto	L5
  6168  00023A                     i2l2288:
  6169                           
  6170                           ; BSR set to: 0
  6171                           ;my_i2c.c: 167: ic_ptr->status = 0x8;
  6172  00023A  0100               	movlb	0	; () banked
  6173  00023C  EE20 F00C          	lfsr	2,12
  6174  000240  0100               	movlb	0	; () banked
  6175  000242  51E0               	movf	_ic_ptr& (0+255),w,b
  6176  000244  26D9               	addwf	fsr2l,f,c
  6177  000246  0100               	movlb	0	; () banked
  6178  000248  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6179  00024A  22DA               	addwfc	fsr2h,f,c
  6180  00024C  0E08               	movlw	8
  6181  00024E  6EDF               	movwf	indf2,c
  6182  000250  D113               	goto	L9
  6183  000252                     i2l2294:
  6184                           
  6185                           ; BSR set to: 0
  6186                           ;my_i2c.c: 173: ic_ptr->error_count++;
  6187  000252  0100               	movlb	0	; () banked
  6188  000254  EE20 F00E          	lfsr	2,14
  6189  000258  0100               	movlb	0	; () banked
  6190  00025A  51E0               	movf	_ic_ptr& (0+255),w,b
  6191  00025C  26D9               	addwf	fsr2l,f,c
  6192  00025E  0100               	movlb	0	; () banked
  6193  000260  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6194  000262  22DA               	addwfc	fsr2h,f,c
  6195  000264  2ADF               	incf	indf2,f,c
  6196                           
  6197                           ;my_i2c.c: 174: ic_ptr->status = 0x5;
  6198  000266  0100               	movlb	0	; () banked
  6199  000268  EE20 F00C          	lfsr	2,12
  6200  00026C  0100               	movlb	0	; () banked
  6201  00026E  51E0               	movf	_ic_ptr& (0+255),w,b
  6202  000270  26D9               	addwf	fsr2l,f,c
  6203  000272  0100               	movlb	0	; () banked
  6204  000274  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6205  000276  22DA               	addwfc	fsr2h,f,c
  6206  000278  0E05               	movlw	5
  6207  00027A  6EDF               	movwf	indf2,c
  6208                           
  6209                           ;my_i2c.c: 175: ic_ptr->error_code = 0x6;
  6210  00027C  0100               	movlb	0	; () banked
  6211  00027E  EE20 F00D          	lfsr	2,13
  6212  000282  0100               	movlb	0	; () banked
  6213  000284  51E0               	movf	_ic_ptr& (0+255),w,b
  6214  000286  26D9               	addwf	fsr2l,f,c
  6215  000288  0100               	movlb	0	; () banked
  6216  00028A  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6217  00028C  22DA               	addwfc	fsr2h,f,c
  6218  00028E  0E06               	movlw	6
  6219  000290  D048               	goto	L5
  6220  000292                     i2l2296:
  6221                           
  6222                           ; BSR set to: 0
  6223                           ;my_i2c.c: 181: {
  6224                           ;my_i2c.c: 182: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6225  000292  0100               	movlb	0	; () banked
  6226  000294  EE20 F01A          	lfsr	2,26
  6227  000298  0100               	movlb	0	; () banked
  6228  00029A  51E0               	movf	_ic_ptr& (0+255),w,b
  6229  00029C  26D9               	addwf	fsr2l,f,c
  6230  00029E  0100               	movlb	0	; () banked
  6231  0002A0  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6232  0002A2  22DA               	addwfc	fsr2h,f,c
  6233  0002A4  50DF               	movf	indf2,w,c
  6234  0002A6  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6235  0002A8  0100               	movlb	0	; () banked
  6236  0002AA  EE20 F019          	lfsr	2,25
  6237  0002AE  0100               	movlb	0	; () banked
  6238  0002B0  51E0               	movf	_ic_ptr& (0+255),w,b
  6239  0002B2  26D9               	addwf	fsr2l,f,c
  6240  0002B4  0100               	movlb	0	; () banked
  6241  0002B6  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6242  0002B8  22DA               	addwfc	fsr2h,f,c
  6243  0002BA  50DF               	movf	indf2,w,c
  6244  0002BC  5C47               	subwf	??_i2c_int_handler,w,c
  6245  0002BE  B0D8               	btfsc	status,0,c
  6246  0002C0  D02D               	goto	i2l2304
  6247                           
  6248                           ; BSR set to: 0
  6249                           ;my_i2c.c: 183: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6250  0002C2  0100               	movlb	0	; () banked
  6251  0002C4  EE20 F01A          	lfsr	2,26
  6252  0002C8  0100               	movlb	0	; () banked
  6253  0002CA  51E0               	movf	_ic_ptr& (0+255),w,b
  6254  0002CC  26D9               	addwf	fsr2l,f,c
  6255  0002CE  0100               	movlb	0	; () banked
  6256  0002D0  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6257  0002D2  22DA               	addwfc	fsr2h,f,c
  6258  0002D4  50DF               	movf	indf2,w,c
  6259  0002D6  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6260  0002D8  5047               	movf	??_i2c_int_handler,w,c
  6261  0002DA  0D01               	mullw	1
  6262  0002DC  0E0F               	movlw	15
  6263  0002DE  26F3               	addwf	prodl,f,c
  6264  0002E0  0E00               	movlw	0
  6265  0002E2  22F4               	addwfc	prodh,f,c
  6266  0002E4  50F3               	movf	prodl,w,c
  6267  0002E6  0100               	movlb	0	; () banked
  6268  0002E8  0100               	movlb	0	; () banked
  6269  0002EA  25E0               	addwf	_ic_ptr& (0+255),w,b
  6270  0002EC  6ED9               	movwf	fsr2l,c
  6271  0002EE  50F4               	movf	prodh,w,c
  6272  0002F0  0100               	movlb	0	; () banked
  6273  0002F2  0100               	movlb	0	; () banked
  6274  0002F4  21E1               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6275  0002F6  6EDA               	movwf	fsr2h,c
  6276  0002F8  50DF               	movf	indf2,w,c
  6277  0002FA  6EC9               	movwf	4041,c	;volatile
  6278                           
  6279                           ; BSR set to: 0
  6280                           ;my_i2c.c: 184: ic_ptr->outbufind++;
  6281  0002FC  0100               	movlb	0	; () banked
  6282  0002FE  EE20 F01A          	lfsr	2,26
  6283  000302  0100               	movlb	0	; () banked
  6284  000304  51E0               	movf	_ic_ptr& (0+255),w,b
  6285  000306  26D9               	addwf	fsr2l,f,c
  6286  000308  0100               	movlb	0	; () banked
  6287  00030A  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6288  00030C  22DA               	addwfc	fsr2h,f,c
  6289  00030E  2ADF               	incf	indf2,f,c
  6290                           
  6291                           ; BSR set to: 0
  6292                           ;my_i2c.c: 185: data_written = 1;
  6293  000310  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6294  000312  0E01               	movlw	1
  6295  000314  0100               	movlb	0	; () banked
  6296  000316  0100               	movlb	0	; () banked
  6297  000318  6FBE               	movwf	i2c_int_handler@data_written& (0+255),b
  6298  00031A  D0B9               	goto	L6
  6299  00031C                     i2l2304:
  6300                           
  6301                           ; BSR set to: 0
  6302                           ;my_i2c.c: 188: setStateReading();
  6303  00031C  EC61  F00D         	call	_setStateReading	;wreg free
  6304  000320  D0B8               	goto	L8
  6305  000322                     L5:
  6306  000322  6EDF               	movwf	indf2,c
  6307  000324  D0D7               	goto	i2l121
  6308  000326                     i2l141:
  6309                           
  6310                           ; BSR set to: 0
  6311                           ;my_i2c.c: 194: {
  6312                           ;my_i2c.c: 196: if (SSPSTATbits.P == 1) {
  6313  000326  A8C7               	btfss	4039,4,c	;volatile
  6314  000328  D05E               	goto	i2l2326
  6315                           
  6316                           ; BSR set to: 0
  6317                           ;my_i2c.c: 198: ic_ptr->event_count++;
  6318  00032A  0100               	movlb	0	; () banked
  6319  00032C  EE20 F00B          	lfsr	2,11
  6320  000330  0100               	movlb	0	; () banked
  6321  000332  51E0               	movf	_ic_ptr& (0+255),w,b
  6322  000334  26D9               	addwf	fsr2l,f,c
  6323  000336  0100               	movlb	0	; () banked
  6324  000338  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6325  00033A  22DA               	addwfc	fsr2h,f,c
  6326  00033C  2ADF               	incf	indf2,f,c
  6327                           
  6328                           ; BSR set to: 0
  6329                           ;my_i2c.c: 199: if (data_read) {
  6330  00033E  0100               	movlb	0	; () banked
  6331  000340  0100               	movlb	0	; () banked
  6332  000342  51C3               	movf	i2c_int_handler@data_read& (0+255),w,b
  6333  000344  B4D8               	btfsc	status,2,c
  6334  000346  D048               	goto	i2l2322
  6335                           
  6336                           ; BSR set to: 0
  6337                           ;my_i2c.c: 200: if (SSPSTATbits.D_A == 1) {
  6338  000348  AAC7               	btfss	4039,5,c	;volatile
  6339  00034A  D025               	goto	i2l2320
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;my_i2c.c: 201: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6343  00034C  0100               	movlb	0	; () banked
  6344  00034E  EE20 F00A          	lfsr	2,10
  6345  000352  0100               	movlb	0	; () banked
  6346  000354  51E0               	movf	_ic_ptr& (0+255),w,b
  6347  000356  26D9               	addwf	fsr2l,f,c
  6348  000358  0100               	movlb	0	; () banked
  6349  00035A  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6350  00035C  22DA               	addwfc	fsr2h,f,c
  6351  00035E  50DF               	movf	indf2,w,c
  6352  000360  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6353  000362  5047               	movf	??_i2c_int_handler,w,c
  6354  000364  0D01               	mullw	1
  6355  000366  50F3               	movf	prodl,w,c
  6356  000368  0100               	movlb	0	; () banked
  6357  00036A  0100               	movlb	0	; () banked
  6358  00036C  25E0               	addwf	_ic_ptr& (0+255),w,b
  6359  00036E  6ED9               	movwf	fsr2l,c
  6360  000370  50F4               	movf	prodh,w,c
  6361  000372  0100               	movlb	0	; () banked
  6362  000374  0100               	movlb	0	; () banked
  6363  000376  21E1               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6364  000378  6EDA               	movwf	fsr2h,c
  6365  00037A  0100               	movlb	0	; () banked
  6366  00037C  C0C0  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6367                           
  6368                           ; BSR set to: 0
  6369                           ;my_i2c.c: 202: ic_ptr->buflen++;
  6370  000380  0100               	movlb	0	; () banked
  6371  000382  EE20 F00A          	lfsr	2,10
  6372  000386  0100               	movlb	0	; () banked
  6373  000388  51E0               	movf	_ic_ptr& (0+255),w,b
  6374  00038A  26D9               	addwf	fsr2l,f,c
  6375  00038C  0100               	movlb	0	; () banked
  6376  00038E  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6377  000390  22DA               	addwfc	fsr2h,f,c
  6378  000392  2ADF               	incf	indf2,f,c
  6379  000394  D021               	goto	i2l2322
  6380  000396                     i2l2320:
  6381                           
  6382                           ; BSR set to: 0
  6383                           ;my_i2c.c: 205: ic_ptr->error_count++;
  6384  000396  0100               	movlb	0	; () banked
  6385  000398  EE20 F00E          	lfsr	2,14
  6386  00039C  0100               	movlb	0	; () banked
  6387  00039E  51E0               	movf	_ic_ptr& (0+255),w,b
  6388  0003A0  26D9               	addwf	fsr2l,f,c
  6389  0003A2  0100               	movlb	0	; () banked
  6390  0003A4  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6391  0003A6  22DA               	addwfc	fsr2h,f,c
  6392  0003A8  2ADF               	incf	indf2,f,c
  6393                           
  6394                           ;my_i2c.c: 206: ic_ptr->error_code = 0x6;
  6395  0003AA  0100               	movlb	0	; () banked
  6396  0003AC  EE20 F00D          	lfsr	2,13
  6397  0003B0  0100               	movlb	0	; () banked
  6398  0003B2  51E0               	movf	_ic_ptr& (0+255),w,b
  6399  0003B4  26D9               	addwf	fsr2l,f,c
  6400  0003B6  0100               	movlb	0	; () banked
  6401  0003B8  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6402  0003BA  22DA               	addwfc	fsr2h,f,c
  6403  0003BC  0E06               	movlw	6
  6404  0003BE  6EDF               	movwf	indf2,c
  6405                           
  6406                           ;my_i2c.c: 207: ic_ptr->status = 0x5;
  6407  0003C0  0100               	movlb	0	; () banked
  6408  0003C2  EE20 F00C          	lfsr	2,12
  6409  0003C6  0100               	movlb	0	; () banked
  6410  0003C8  51E0               	movf	_ic_ptr& (0+255),w,b
  6411  0003CA  26D9               	addwf	fsr2l,f,c
  6412  0003CC  0100               	movlb	0	; () banked
  6413  0003CE  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6414  0003D0  22DA               	addwfc	fsr2h,f,c
  6415  0003D2  0E05               	movlw	5
  6416  0003D4  6EDF               	movwf	indf2,c
  6417  0003D6  D05D               	goto	L8
  6418  0003D8                     i2l2322:
  6419                           
  6420                           ; BSR set to: 0
  6421                           ;my_i2c.c: 210: msg_ready = 1;
  6422  0003D8  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6423  0003DA  0E01               	movlw	1
  6424  0003DC  0100               	movlb	0	; () banked
  6425  0003DE  0100               	movlb	0	; () banked
  6426  0003E0  6FC2               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6427  0003E2  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6428                           
  6429                           ; BSR set to: 0
  6430  0003E4  D056               	goto	L8
  6431  0003E6                     i2l2326:
  6432                           
  6433                           ; BSR set to: 0
  6434  0003E6  0100               	movlb	0	; () banked
  6435  0003E8  0100               	movlb	0	; () banked
  6436  0003EA  51C3               	movf	i2c_int_handler@data_read& (0+255),w,b
  6437  0003EC  B4D8               	btfsc	status,2,c
  6438  0003EE  D072               	goto	i2l121
  6439                           
  6440                           ; BSR set to: 0
  6441                           ;my_i2c.c: 214: ic_ptr->event_count++;
  6442  0003F0  0100               	movlb	0	; () banked
  6443  0003F2  EE20 F00B          	lfsr	2,11
  6444  0003F6  0100               	movlb	0	; () banked
  6445  0003F8  51E0               	movf	_ic_ptr& (0+255),w,b
  6446  0003FA  26D9               	addwf	fsr2l,f,c
  6447  0003FC  0100               	movlb	0	; () banked
  6448  0003FE  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6449  000400  22DA               	addwfc	fsr2h,f,c
  6450  000402  2ADF               	incf	indf2,f,c
  6451                           
  6452                           ; BSR set to: 0
  6453                           ;my_i2c.c: 215: if (SSPSTATbits.D_A == 1) {
  6454  000404  AAC7               	btfss	4039,5,c	;volatile
  6455  000406  D025               	goto	i2l149
  6456                           
  6457                           ; BSR set to: 0
  6458                           ;my_i2c.c: 216: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6459  000408  0100               	movlb	0	; () banked
  6460  00040A  EE20 F00A          	lfsr	2,10
  6461  00040E  0100               	movlb	0	; () banked
  6462  000410  51E0               	movf	_ic_ptr& (0+255),w,b
  6463  000412  26D9               	addwf	fsr2l,f,c
  6464  000414  0100               	movlb	0	; () banked
  6465  000416  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6466  000418  22DA               	addwfc	fsr2h,f,c
  6467  00041A  50DF               	movf	indf2,w,c
  6468  00041C  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6469  00041E  5047               	movf	??_i2c_int_handler,w,c
  6470  000420  0D01               	mullw	1
  6471  000422  50F3               	movf	prodl,w,c
  6472  000424  0100               	movlb	0	; () banked
  6473  000426  0100               	movlb	0	; () banked
  6474  000428  25E0               	addwf	_ic_ptr& (0+255),w,b
  6475  00042A  6ED9               	movwf	fsr2l,c
  6476  00042C  50F4               	movf	prodh,w,c
  6477  00042E  0100               	movlb	0	; () banked
  6478  000430  0100               	movlb	0	; () banked
  6479  000432  21E1               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6480  000434  6EDA               	movwf	fsr2h,c
  6481  000436  0100               	movlb	0	; () banked
  6482  000438  C0C0  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6483                           
  6484                           ; BSR set to: 0
  6485                           ;my_i2c.c: 217: ic_ptr->buflen++;
  6486  00043C  0100               	movlb	0	; () banked
  6487  00043E  EE20 F00A          	lfsr	2,10
  6488  000442  0100               	movlb	0	; () banked
  6489  000444  51E0               	movf	_ic_ptr& (0+255),w,b
  6490  000446  26D9               	addwf	fsr2l,f,c
  6491  000448  0100               	movlb	0	; () banked
  6492  00044A  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6493  00044C  22DA               	addwfc	fsr2h,f,c
  6494  00044E  2ADF               	incf	indf2,f,c
  6495                           
  6496                           ;my_i2c.c: 218: } else {
  6497  000450  D041               	goto	i2l121
  6498  000452                     i2l149:
  6499                           
  6500                           ; BSR set to: 0
  6501                           ;my_i2c.c: 219: if (SSPSTATbits.R_W == 1) {
  6502  000452  A4C7               	btfss	4039,2,c	;volatile
  6503  000454  D6BE               	goto	i2l2276
  6504                           
  6505                           ; BSR set to: 0
  6506                           ;my_i2c.c: 220: ic_ptr->status = 0x8;
  6507  000456  0100               	movlb	0	; () banked
  6508  000458  EE20 F00C          	lfsr	2,12
  6509  00045C  0100               	movlb	0	; () banked
  6510  00045E  51E0               	movf	_ic_ptr& (0+255),w,b
  6511  000460  26D9               	addwf	fsr2l,f,c
  6512  000462  0100               	movlb	0	; () banked
  6513  000464  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6514  000466  22DA               	addwfc	fsr2h,f,c
  6515  000468  0E08               	movlw	8
  6516  00046A  6EDF               	movwf	indf2,c
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;my_i2c.c: 221: msg_ready = 1;
  6520  00046C  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6521  00046E  0E01               	movlw	1
  6522  000470  0100               	movlb	0	; () banked
  6523  000472  0100               	movlb	0	; () banked
  6524  000474  6FC2               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6525  000476  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6526  000478                     L9:
  6527                           
  6528                           ; BSR set to: 0
  6529                           ;my_i2c.c: 222: msg_to_send = 1;
  6530  000478  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6531  00047A  0E01               	movlw	1
  6532  00047C  0100               	movlb	0	; () banked
  6533  00047E  0100               	movlb	0	; () banked
  6534  000480  6FC1               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6535  000482  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6536                           
  6537                           ; BSR set to: 0
  6538                           ;my_i2c.c: 224: data_read = 0;
  6539  000484  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6540  000486  0E00               	movlw	0
  6541  000488  0100               	movlb	0	; () banked
  6542  00048A  0100               	movlb	0	; () banked
  6543  00048C  6FC3               	movwf	i2c_int_handler@data_read& (0+255),b
  6544  00048E                     L6:
  6545  00048E  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6546                           
  6547                           ;my_i2c.c: 225: } else {
  6548  000490  D021               	goto	i2l121
  6549  000492                     L8:
  6550                           
  6551                           ;my_i2c.c: 228: ic_ptr->status = 0x5;
  6552  000492  0100               	movlb	0	; () banked
  6553  000494  EE20 F00C          	lfsr	2,12
  6554  000498  0100               	movlb	0	; () banked
  6555  00049A  51E0               	movf	_ic_ptr& (0+255),w,b
  6556  00049C  26D9               	addwf	fsr2l,f,c
  6557  00049E  0100               	movlb	0	; () banked
  6558  0004A0  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6559  0004A2  22DA               	addwfc	fsr2h,f,c
  6560  0004A4  0E05               	movlw	5
  6561  0004A6  D73D               	goto	L5
  6562  0004A8                     i2l2348:
  6563                           
  6564                           ; BSR set to: 0
  6565  0004A8  0100               	movlb	0	; () banked
  6566  0004AA  EE20 F00C          	lfsr	2,12
  6567  0004AE  0100               	movlb	0	; () banked
  6568  0004B0  51E0               	movf	_ic_ptr& (0+255),w,b
  6569  0004B2  26D9               	addwf	fsr2l,f,c
  6570  0004B4  0100               	movlb	0	; () banked
  6571  0004B6  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6572  0004B8  22DA               	addwfc	fsr2h,f,c
  6573  0004BA  50DF               	movf	indf2,w,c
  6574                           
  6575                           ; Switch size 1, requested type "space"
  6576                           ; Number of cases is 4, Range of values is 5 to 8
  6577                           ; switch strategies available:
  6578                           ; Name         Instructions Cycles
  6579                           ; simple_byte           13     7 (average)
  6580                           ;	Chosen strategy is simple_byte
  6581  0004BC  0A05               	xorlw	5	; case 5
  6582  0004BE  B4D8               	btfsc	status,2,c
  6583  0004C0  D64F               	goto	i2l123
  6584  0004C2  0A03               	xorlw	3	; case 6
  6585  0004C4  B4D8               	btfsc	status,2,c
  6586  0004C6  D66B               	goto	i2l127
  6587  0004C8  0A01               	xorlw	1	; case 7
  6588  0004CA  B4D8               	btfsc	status,2,c
  6589  0004CC  D72C               	goto	i2l141
  6590  0004CE  0A0F               	xorlw	15	; case 8
  6591  0004D0  B4D8               	btfsc	status,2,c
  6592  0004D2  D6DF               	goto	i2l2296
  6593  0004D4                     i2l121:
  6594                           
  6595                           ; BSR set to: 0
  6596                           ;my_i2c.c: 235: }
  6597                           ;my_i2c.c: 238: if (data_read || data_written) {
  6598  0004D4  0100               	movlb	0	; () banked
  6599  0004D6  0100               	movlb	0	; () banked
  6600  0004D8  67C3               	tstfsz	i2c_int_handler@data_read& (0+255),b
  6601  0004DA  D005               	goto	i2l155
  6602                           
  6603                           ; BSR set to: 0
  6604  0004DC  0100               	movlb	0	; () banked
  6605  0004DE  0100               	movlb	0	; () banked
  6606  0004E0  51BE               	movf	i2c_int_handler@data_written& (0+255),w,b
  6607  0004E2  B4D8               	btfsc	status,2,c
  6608  0004E4  D002               	goto	i2l2354
  6609  0004E6                     i2l155:
  6610                           
  6611                           ; BSR set to: 0
  6612                           ;my_i2c.c: 240: if (SSPCON1bits.CKP == 0) {
  6613  0004E6  A8C6               	btfss	4038,4,c	;volatile
  6614                           
  6615                           ; BSR set to: 0
  6616                           ;my_i2c.c: 241: SSPCON1bits.CKP = 1;
  6617  0004E8  88C6               	bsf	4038,4,c	;volatile
  6618  0004EA                     i2l2354:
  6619                           
  6620                           ; BSR set to: 0
  6621                           ;my_i2c.c: 242: }
  6622                           ;my_i2c.c: 243: }
  6623                           ;my_i2c.c: 246: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  6624  0004EA  0100               	movlb	0	; () banked
  6625  0004EC  EE20 F00A          	lfsr	2,10
  6626  0004F0  0100               	movlb	0	; () banked
  6627  0004F2  51E0               	movf	_ic_ptr& (0+255),w,b
  6628  0004F4  26D9               	addwf	fsr2l,f,c
  6629  0004F6  0100               	movlb	0	; () banked
  6630  0004F8  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6631  0004FA  22DA               	addwfc	fsr2h,f,c
  6632  0004FC  0E08               	movlw	8
  6633  0004FE  64DF               	cpfsgt	indf2,c
  6634  000500  D024               	goto	i2l2360
  6635                           
  6636                           ; BSR set to: 0
  6637  000502  0100               	movlb	0	; () banked
  6638  000504  0100               	movlb	0	; () banked
  6639  000506  67C2               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  6640  000508  D020               	goto	i2l2360
  6641                           
  6642                           ; BSR set to: 0
  6643                           ;my_i2c.c: 247: ic_ptr->status = 0x5;
  6644  00050A  0100               	movlb	0	; () banked
  6645  00050C  EE20 F00C          	lfsr	2,12
  6646  000510  0100               	movlb	0	; () banked
  6647  000512  51E0               	movf	_ic_ptr& (0+255),w,b
  6648  000514  26D9               	addwf	fsr2l,f,c
  6649  000516  0100               	movlb	0	; () banked
  6650  000518  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6651  00051A  22DA               	addwfc	fsr2h,f,c
  6652  00051C  0E05               	movlw	5
  6653  00051E  6EDF               	movwf	indf2,c
  6654                           
  6655                           ;my_i2c.c: 248: ic_ptr->error_count++;
  6656  000520  0100               	movlb	0	; () banked
  6657  000522  EE20 F00E          	lfsr	2,14
  6658  000526  0100               	movlb	0	; () banked
  6659  000528  51E0               	movf	_ic_ptr& (0+255),w,b
  6660  00052A  26D9               	addwf	fsr2l,f,c
  6661  00052C  0100               	movlb	0	; () banked
  6662  00052E  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6663  000530  22DA               	addwfc	fsr2h,f,c
  6664  000532  2ADF               	incf	indf2,f,c
  6665                           
  6666                           ;my_i2c.c: 249: ic_ptr->error_code = 0x7;
  6667  000534  0100               	movlb	0	; () banked
  6668  000536  EE20 F00D          	lfsr	2,13
  6669  00053A  0100               	movlb	0	; () banked
  6670  00053C  51E0               	movf	_ic_ptr& (0+255),w,b
  6671  00053E  26D9               	addwf	fsr2l,f,c
  6672  000540  0100               	movlb	0	; () banked
  6673  000542  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6674  000544  22DA               	addwfc	fsr2h,f,c
  6675  000546  0E07               	movlw	7
  6676  000548  6EDF               	movwf	indf2,c
  6677  00054A                     i2l2360:
  6678                           
  6679                           ; BSR set to: 0
  6680                           ;my_i2c.c: 250: }
  6681                           ;my_i2c.c: 252: if (msg_ready) {
  6682  00054A  0100               	movlb	0	; () banked
  6683  00054C  0100               	movlb	0	; () banked
  6684  00054E  51C2               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  6685  000550  B4D8               	btfsc	status,2,c
  6686  000552  D03E               	goto	i2l2368
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;my_i2c.c: 253: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  6690  000554  0100               	movlb	0	; () banked
  6691  000556  EE20 F00B          	lfsr	2,11
  6692  00055A  0100               	movlb	0	; () banked
  6693  00055C  51E0               	movf	_ic_ptr& (0+255),w,b
  6694  00055E  26D9               	addwf	fsr2l,f,c
  6695  000560  0100               	movlb	0	; () banked
  6696  000562  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6697  000564  22DA               	addwfc	fsr2h,f,c
  6698  000566  0100               	movlb	0	; () banked
  6699  000568  EE10 F00A          	lfsr	1,10
  6700  00056C  0100               	movlb	0	; () banked
  6701  00056E  51E0               	movf	_ic_ptr& (0+255),w,b
  6702  000570  26E1               	addwf	fsr1l,f,c
  6703  000572  0100               	movlb	0	; () banked
  6704  000574  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6705  000576  22E2               	addwfc	fsr1h,f,c
  6706  000578  50E7               	movf	indf1,w,c
  6707  00057A  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6708  00057C  5047               	movf	??_i2c_int_handler,w,c
  6709  00057E  0D01               	mullw	1
  6710  000580  50F3               	movf	prodl,w,c
  6711  000582  0100               	movlb	0	; () banked
  6712  000584  0100               	movlb	0	; () banked
  6713  000586  25E0               	addwf	_ic_ptr& (0+255),w,b
  6714  000588  6EE1               	movwf	fsr1l,c
  6715  00058A  50F4               	movf	prodh,w,c
  6716  00058C  0100               	movlb	0	; () banked
  6717  00058E  0100               	movlb	0	; () banked
  6718  000590  21E1               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6719  000592  6EE2               	movwf	fsr1h,c
  6720  000594  CFDF FFE7          	movff	indf2,indf1
  6721                           
  6722                           ; BSR set to: 0
  6723                           ;my_i2c.c: 254: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  6724  000598  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6725  00059A  0E28               	movlw	40
  6726  00059C  6E43               	movwf	ToMainHigh_sendmsg@msgtype,c
  6727  00059E  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6728  0005A0  0100               	movlb	0	; () banked
  6729  0005A2  C0E1  F045         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  6730  0005A6  0100               	movlb	0	; () banked
  6731  0005A8  C0E0  F044         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  6732  0005AC  0100               	movlb	0	; () banked
  6733  0005AE  EE20 F00A          	lfsr	2,10
  6734  0005B2  0100               	movlb	0	; () banked
  6735  0005B4  51E0               	movf	_ic_ptr& (0+255),w,b
  6736  0005B6  26D9               	addwf	fsr2l,f,c
  6737  0005B8  0100               	movlb	0	; () banked
  6738  0005BA  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6739  0005BC  22DA               	addwfc	fsr2h,f,c
  6740  0005BE  50DF               	movf	indf2,w,c
  6741  0005C0  6E48               	movwf	(??_i2c_int_handler+1)& (0+255),c
  6742  0005C2  2848               	incf	??_i2c_int_handler+1,w,c
  6743  0005C4  ECE7  F00C         	call	_ToMainHigh_sendmsg
  6744                           
  6745                           ;my_i2c.c: 255: ic_ptr->buflen = 0;
  6746  0005C8  0100               	movlb	0	; () banked
  6747  0005CA  EE20 F00A          	lfsr	2,10
  6748  0005CE  D043               	goto	L7
  6749  0005D0                     i2l2368:
  6750                           
  6751                           ; BSR set to: 0
  6752  0005D0  0100               	movlb	0	; () banked
  6753  0005D2  EE20 F00E          	lfsr	2,14
  6754  0005D6  0100               	movlb	0	; () banked
  6755  0005D8  51E0               	movf	_ic_ptr& (0+255),w,b
  6756  0005DA  26D9               	addwf	fsr2l,f,c
  6757  0005DC  0100               	movlb	0	; () banked
  6758  0005DE  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6759  0005E0  22DA               	addwfc	fsr2h,f,c
  6760  0005E2  50DF               	movf	indf2,w,c
  6761  0005E4  B4D8               	btfsc	status,2,c
  6762  0005E6  D03F               	goto	i2l2376
  6763                           
  6764                           ; BSR set to: 0
  6765                           ;my_i2c.c: 257: error_buf[0] = ic_ptr->error_count;
  6766  0005E8  0100               	movlb	0	; () banked
  6767  0005EA  EE20 F00E          	lfsr	2,14
  6768  0005EE  0100               	movlb	0	; () banked
  6769  0005F0  51E0               	movf	_ic_ptr& (0+255),w,b
  6770  0005F2  26D9               	addwf	fsr2l,f,c
  6771  0005F4  0100               	movlb	0	; () banked
  6772  0005F6  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6773  0005F8  22DA               	addwfc	fsr2h,f,c
  6774  0005FA  50DF               	movf	indf2,w,c
  6775  0005FC  0100               	movlb	0	; () banked
  6776  0005FE  0100               	movlb	0	; () banked
  6777  000600  6FBB               	movwf	i2c_int_handler@error_buf& (0+255),b
  6778                           
  6779                           ;my_i2c.c: 258: error_buf[1] = ic_ptr->error_code;
  6780  000602  0100               	movlb	0	; () banked
  6781  000604  EE20 F00D          	lfsr	2,13
  6782  000608  0100               	movlb	0	; () banked
  6783  00060A  51E0               	movf	_ic_ptr& (0+255),w,b
  6784  00060C  26D9               	addwf	fsr2l,f,c
  6785  00060E  0100               	movlb	0	; () banked
  6786  000610  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6787  000612  22DA               	addwfc	fsr2h,f,c
  6788  000614  50DF               	movf	indf2,w,c
  6789  000616  0100               	movlb	0	; () banked
  6790  000618  0100               	movlb	0	; () banked
  6791  00061A  6FBC               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  6792                           
  6793                           ;my_i2c.c: 259: error_buf[2] = ic_ptr->event_count;
  6794  00061C  0100               	movlb	0	; () banked
  6795  00061E  EE20 F00B          	lfsr	2,11
  6796  000622  0100               	movlb	0	; () banked
  6797  000624  51E0               	movf	_ic_ptr& (0+255),w,b
  6798  000626  26D9               	addwf	fsr2l,f,c
  6799  000628  0100               	movlb	0	; () banked
  6800  00062A  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6801  00062C  22DA               	addwfc	fsr2h,f,c
  6802  00062E  50DF               	movf	indf2,w,c
  6803  000630  0100               	movlb	0	; () banked
  6804  000632  0100               	movlb	0	; () banked
  6805  000634  6FBD               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  6806                           
  6807                           ; BSR set to: 0
  6808                           ;my_i2c.c: 260: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  6809  000636  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6810  000638  0E29               	movlw	41
  6811  00063A  6E43               	movwf	ToMainHigh_sendmsg@msgtype,c
  6812  00063C  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6813  00063E  0100               	movlb	0	; () banked
  6814  000640  0E00               	movlw	high i2c_int_handler@error_buf
  6815  000642  6E45               	movwf	ToMainHigh_sendmsg@data+1,c
  6816  000644  0100               	movlb	0	; () banked
  6817  000646  0EBB               	movlw	low i2c_int_handler@error_buf
  6818  000648  6E44               	movwf	ToMainHigh_sendmsg@data,c
  6819  00064A  0E03               	movlw	3
  6820  00064C  ECE7  F00C         	call	_ToMainHigh_sendmsg
  6821                           
  6822                           ;my_i2c.c: 261: ic_ptr->error_count = 0;
  6823  000650  0100               	movlb	0	; () banked
  6824  000652  EE20 F00E          	lfsr	2,14
  6825  000656                     L7:
  6826  000656  0100               	movlb	0	; () banked
  6827  000658  51E0               	movf	_ic_ptr& (0+255),w,b
  6828  00065A  26D9               	addwf	fsr2l,f,c
  6829  00065C  0100               	movlb	0	; () banked
  6830  00065E  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6831  000660  22DA               	addwfc	fsr2h,f,c
  6832  000662  0E00               	movlw	0
  6833  000664  6EDF               	movwf	indf2,c
  6834  000666                     i2l2376:
  6835                           
  6836                           ; BSR set to: 0
  6837                           ;my_i2c.c: 262: }
  6838                           ;my_i2c.c: 263: if (msg_to_send) {
  6839  000666  0100               	movlb	0	; () banked
  6840  000668  0100               	movlb	0	; () banked
  6841  00066A  51C1               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  6842  00066C  B4D8               	btfsc	status,2,c
  6843  00066E  0012               	return	
  6844                           
  6845                           ; BSR set to: 0
  6846                           ;my_i2c.c: 264: int length;
  6847                           ;my_i2c.c: 265: unsigned char msgbuffer[3];
  6848                           ;my_i2c.c: 266: length = 3;
  6849  000670  0E00               	movlw	0
  6850  000672  0100               	movlb	0	; () banked
  6851  000674  0100               	movlb	0	; () banked
  6852  000676  6FB7               	movwf	(i2c_int_handler@length+1)& (0+255),b
  6853  000678  0E03               	movlw	3
  6854  00067A  0100               	movlb	0	; () banked
  6855  00067C  6FB6               	movwf	i2c_int_handler@length& (0+255),b
  6856                           
  6857                           ; BSR set to: 0
  6858                           ;my_i2c.c: 267: msgbuffer[0] = 0x0;
  6859  00067E  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6860  000680  0E00               	movlw	0
  6861  000682  0100               	movlb	0	; () banked
  6862  000684  0100               	movlb	0	; () banked
  6863  000686  6FB8               	movwf	i2c_int_handler@msgbuffer& (0+255),b
  6864  000688  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6865                           
  6866                           ; BSR set to: 0
  6867                           ;my_i2c.c: 268: msgbuffer[1] = 0x1;
  6868  00068A  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6869  00068C  0E01               	movlw	1
  6870  00068E  0100               	movlb	0	; () banked
  6871  000690  0100               	movlb	0	; () banked
  6872  000692  6FB9               	movwf	(i2c_int_handler@msgbuffer+1)& (0+255),b
  6873  000694  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6874                           
  6875                           ; BSR set to: 0
  6876                           ;my_i2c.c: 269: msgbuffer[2] = 0x2;
  6877  000696  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6878  000698  0E02               	movlw	2
  6879  00069A  0100               	movlb	0	; () banked
  6880  00069C  0100               	movlb	0	; () banked
  6881  00069E  6FBA               	movwf	(i2c_int_handler@msgbuffer+2)& (0+255),b
  6882  0006A0  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6883                           
  6884                           ; BSR set to: 0
  6885                           ;my_i2c.c: 298: start_i2c_slave_reply(length, msgbuffer);
  6886  0006A2  0100               	movlb	0	; () banked
  6887  0006A4  0E00               	movlw	high i2c_int_handler@msgbuffer
  6888  0006A6  6E2E               	movwf	i2start_i2c_slave_reply@msg+1,c
  6889  0006A8  0100               	movlb	0	; () banked
  6890  0006AA  0EB8               	movlw	low i2c_int_handler@msgbuffer
  6891  0006AC  6E2D               	movwf	i2start_i2c_slave_reply@msg,c
  6892  0006AE  0100               	movlb	0	; () banked
  6893  0006B0  0100               	movlb	0	; () banked
  6894  0006B2  51B6               	movf	i2c_int_handler@length& (0+255),w,b
  6895  0006B4  EC5B  F006         	call	i2_start_i2c_slave_reply
  6896                           
  6897                           ;my_i2c.c: 299: msg_to_send = 0;
  6898  0006B8  6E47               	movwf	??_i2c_int_handler& (0+255),c
  6899  0006BA  0E00               	movlw	0
  6900  0006BC  0100               	movlb	0	; () banked
  6901  0006BE  0100               	movlb	0	; () banked
  6902  0006C0  6FC1               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6903  0006C2  5047               	movf	??_i2c_int_handler& (0+255),w,c
  6904  0006C4  0012               	return	
  6905  0006C6                     __end_of_i2c_int_handler:
  6906                           	opt stack 0
  6907                           pclatu	equ	0xFFB
  6908                           pclath	equ	0xFFA
  6909                           tblptru	equ	0xFF8
  6910                           tblptrh	equ	0xFF7
  6911                           tblptrl	equ	0xFF6
  6912                           tablat	equ	0xFF5
  6913                           prodh	equ	0xFF4
  6914                           prodl	equ	0xFF3
  6915                           intcon	equ	0xFF2
  6916                           intcon2	equ	0xFF1
  6917                           postinc0	equ	0xFEE
  6918                           fsr0h	equ	0xFEA
  6919                           fsr0l	equ	0xFE9
  6920                           wreg	equ	0xFE8
  6921                           indf1	equ	0xFE7
  6922                           fsr1h	equ	0xFE2
  6923                           fsr1l	equ	0xFE1
  6924                           bsr	equ	0xFE0
  6925                           indf2	equ	0xFDF
  6926                           postinc2	equ	0xFDE
  6927                           postdec2	equ	0xFDD
  6928                           fsr2h	equ	0xFDA
  6929                           fsr2l	equ	0xFD9
  6930                           status	equ	0xFD8
  6931                           
  6932 ;; *************** function i2_start_i2c_slave_reply *****************
  6933 ;; Defined at:
  6934 ;;		line 54 in file "../src/my_i2c.c"
  6935 ;; Parameters:    Size  Location     Type
  6936 ;;  length          1    wreg     unsigned char 
  6937 ;;  msg             2   44[COMRAM] PTR unsigned char 
  6938 ;;		 -> main@msgbuffer(11), i2c_int_handler@msgbuffer(3), 
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;  length          1   48[COMRAM] unsigned char 
  6941 ;; Return value:  Size  Location     Type
  6942 ;;		None               void
  6943 ;; Registers used:
  6944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6945 ;; Tracked objects:
  6946 ;;		On entry : 0/0
  6947 ;;		On exit  : 0/0
  6948 ;;		Unchanged: 0/0
  6949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6950 ;;      Params:         2       0       0       0       0
  6951 ;;      Locals:         1       0       0       0       0
  6952 ;;      Temps:          2       0       0       0       0
  6953 ;;      Totals:         5       0       0       0       0
  6954 ;;Total ram usage:        5 bytes
  6955 ;; Hardware stack levels used:    1
  6956 ;; This function calls:
  6957 ;;		Nothing
  6958 ;; This function is called by:
  6959 ;;		_i2c_int_handler
  6960 ;; This function uses a non-reentrant model
  6961 ;;
  6962                           
  6963                           	psect	text41
  6964  000CB6                     __ptext41:
  6965                           	opt stack 0
  6966  000CB6                     i2_start_i2c_slave_reply:
  6967                           	opt stack 18
  6968                           
  6969                           ; BSR set to: 0
  6970                           ;incstack = 0
  6971                           ;i2start_i2c_slave_reply@length stored from wreg
  6972  000CB6  CFE8 F031          	movff	wreg,i2start_i2c_slave_reply@length
  6973                           
  6974                           ;my_i2c.c: 56: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  6975  000CBA  0100               	movlb	0	; () banked
  6976  000CBC  EE20 F019          	lfsr	2,25
  6977  000CC0  0100               	movlb	0	; () banked
  6978  000CC2  51E0               	movf	_ic_ptr& (0+255),w,b
  6979  000CC4  26D9               	addwf	fsr2l,f,c
  6980  000CC6  0100               	movlb	0	; () banked
  6981  000CC8  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6982  000CCA  22DA               	addwfc	fsr2h,f,c
  6983  000CCC  0E00               	movlw	0
  6984  000CCE  6EDF               	movwf	indf2,c
  6985  000CD0  D03A               	goto	i2l2862
  6986  000CD2                     i2l2858:
  6987                           
  6988                           ; BSR set to: 0
  6989                           ;my_i2c.c: 57: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  6990  000CD2  0100               	movlb	0	; () banked
  6991  000CD4  EE20 F019          	lfsr	2,25
  6992  000CD8  0100               	movlb	0	; () banked
  6993  000CDA  51E0               	movf	_ic_ptr& (0+255),w,b
  6994  000CDC  26D9               	addwf	fsr2l,f,c
  6995  000CDE  0100               	movlb	0	; () banked
  6996  000CE0  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6997  000CE2  22DA               	addwfc	fsr2h,f,c
  6998  000CE4  50DF               	movf	indf2,w,c
  6999  000CE6  6E2F               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  7000  000CE8  502F               	movf	??i2_start_i2c_slave_reply,w,c
  7001  000CEA  0D01               	mullw	1
  7002  000CEC  50F3               	movf	prodl,w,c
  7003  000CEE  242D               	addwf	i2start_i2c_slave_reply@msg,w,c
  7004  000CF0  6ED9               	movwf	fsr2l,c
  7005  000CF2  50F4               	movf	prodh,w,c
  7006  000CF4  202E               	addwfc	i2start_i2c_slave_reply@msg+1,w,c
  7007  000CF6  6EDA               	movwf	fsr2h,c
  7008  000CF8  0100               	movlb	0	; () banked
  7009  000CFA  EE10 F019          	lfsr	1,25
  7010  000CFE  0100               	movlb	0	; () banked
  7011  000D00  51E0               	movf	_ic_ptr& (0+255),w,b
  7012  000D02  26E1               	addwf	fsr1l,f,c
  7013  000D04  0100               	movlb	0	; () banked
  7014  000D06  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7015  000D08  22E2               	addwfc	fsr1h,f,c
  7016  000D0A  50E7               	movf	indf1,w,c
  7017  000D0C  6E30               	movwf	(??i2_start_i2c_slave_reply+1)& (0+255),c
  7018  000D0E  5030               	movf	??i2_start_i2c_slave_reply+1,w,c
  7019  000D10  0D01               	mullw	1
  7020  000D12  0E0F               	movlw	15
  7021  000D14  26F3               	addwf	prodl,f,c
  7022  000D16  0E00               	movlw	0
  7023  000D18  22F4               	addwfc	prodh,f,c
  7024  000D1A  50F3               	movf	prodl,w,c
  7025  000D1C  0100               	movlb	0	; () banked
  7026  000D1E  0100               	movlb	0	; () banked
  7027  000D20  25E0               	addwf	_ic_ptr& (0+255),w,b
  7028  000D22  6EE1               	movwf	fsr1l,c
  7029  000D24  50F4               	movf	prodh,w,c
  7030  000D26  0100               	movlb	0	; () banked
  7031  000D28  0100               	movlb	0	; () banked
  7032  000D2A  21E1               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7033  000D2C  6EE2               	movwf	fsr1h,c
  7034  000D2E  CFDF FFE7          	movff	indf2,indf1
  7035                           
  7036                           ; BSR set to: 0
  7037  000D32  0100               	movlb	0	; () banked
  7038  000D34  EE20 F019          	lfsr	2,25
  7039  000D38  0100               	movlb	0	; () banked
  7040  000D3A  51E0               	movf	_ic_ptr& (0+255),w,b
  7041  000D3C  26D9               	addwf	fsr2l,f,c
  7042  000D3E  0100               	movlb	0	; () banked
  7043  000D40  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7044  000D42  22DA               	addwfc	fsr2h,f,c
  7045  000D44  2ADF               	incf	indf2,f,c
  7046  000D46                     i2l2862:
  7047                           
  7048                           ; BSR set to: 0
  7049  000D46  0100               	movlb	0	; () banked
  7050  000D48  EE20 F019          	lfsr	2,25
  7051  000D4C  0100               	movlb	0	; () banked
  7052  000D4E  51E0               	movf	_ic_ptr& (0+255),w,b
  7053  000D50  26D9               	addwf	fsr2l,f,c
  7054  000D52  0100               	movlb	0	; () banked
  7055  000D54  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7056  000D56  22DA               	addwfc	fsr2h,f,c
  7057  000D58  50DF               	movf	indf2,w,c
  7058  000D5A  6E2F               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  7059  000D5C  5031               	movf	i2start_i2c_slave_reply@length,w,c
  7060  000D5E  5C2F               	subwf	??i2_start_i2c_slave_reply,w,c
  7061  000D60  A0D8               	btfss	status,0,c
  7062  000D62  D7B7               	goto	i2l2858
  7063                           
  7064                           ; BSR set to: 0
  7065                           ;my_i2c.c: 58: }
  7066                           ;my_i2c.c: 59: ic_ptr->outbuflen = length;
  7067                           
  7068                           ; BSR set to: 0
  7069  000D64  0100               	movlb	0	; () banked
  7070  000D66  EE20 F019          	lfsr	2,25
  7071  000D6A  0100               	movlb	0	; () banked
  7072  000D6C  51E0               	movf	_ic_ptr& (0+255),w,b
  7073  000D6E  26D9               	addwf	fsr2l,f,c
  7074  000D70  0100               	movlb	0	; () banked
  7075  000D72  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7076  000D74  22DA               	addwfc	fsr2h,f,c
  7077  000D76  C031  FFDF         	movff	i2start_i2c_slave_reply@length,indf2
  7078                           
  7079                           ;my_i2c.c: 60: ic_ptr->outbufind = 1;
  7080  000D7A  0100               	movlb	0	; () banked
  7081  000D7C  EE20 F01A          	lfsr	2,26
  7082  000D80  0100               	movlb	0	; () banked
  7083  000D82  51E0               	movf	_ic_ptr& (0+255),w,b
  7084  000D84  26D9               	addwf	fsr2l,f,c
  7085  000D86  0100               	movlb	0	; () banked
  7086  000D88  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7087  000D8A  22DA               	addwfc	fsr2h,f,c
  7088  000D8C  0E01               	movlw	1
  7089  000D8E  6EDF               	movwf	indf2,c
  7090                           
  7091                           ;my_i2c.c: 63: SSPBUF = ic_ptr->outbuffer[0];
  7092  000D90  0100               	movlb	0	; () banked
  7093  000D92  EE20 F00F          	lfsr	2,15
  7094  000D96  0100               	movlb	0	; () banked
  7095  000D98  51E0               	movf	_ic_ptr& (0+255),w,b
  7096  000D9A  26D9               	addwf	fsr2l,f,c
  7097  000D9C  0100               	movlb	0	; () banked
  7098  000D9E  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7099  000DA0  22DA               	addwfc	fsr2h,f,c
  7100  000DA2  50DF               	movf	indf2,w,c
  7101  000DA4  6EC9               	movwf	4041,c	;volatile
  7102                           
  7103                           ; BSR set to: 0
  7104                           ;my_i2c.c: 66: SSPCON1bits.CKP = 1;
  7105  000DA6  88C6               	bsf	4038,4,c	;volatile
  7106                           
  7107                           ; BSR set to: 0
  7108  000DA8  0012               	return	
  7109  000DAA                     __end_ofi2_start_i2c_slave_reply:
  7110                           	opt stack 0
  7111                           pclatu	equ	0xFFB
  7112                           pclath	equ	0xFFA
  7113                           tblptru	equ	0xFF8
  7114                           tblptrh	equ	0xFF7
  7115                           tblptrl	equ	0xFF6
  7116                           tablat	equ	0xFF5
  7117                           prodh	equ	0xFF4
  7118                           prodl	equ	0xFF3
  7119                           intcon	equ	0xFF2
  7120                           intcon2	equ	0xFF1
  7121                           postinc0	equ	0xFEE
  7122                           fsr0h	equ	0xFEA
  7123                           fsr0l	equ	0xFE9
  7124                           wreg	equ	0xFE8
  7125                           indf1	equ	0xFE7
  7126                           fsr1h	equ	0xFE2
  7127                           fsr1l	equ	0xFE1
  7128                           bsr	equ	0xFE0
  7129                           indf2	equ	0xFDF
  7130                           postinc2	equ	0xFDE
  7131                           postdec2	equ	0xFDD
  7132                           fsr2h	equ	0xFDA
  7133                           fsr2l	equ	0xFD9
  7134                           status	equ	0xFD8
  7135                           
  7136 ;; *************** function _setStateReading *****************
  7137 ;; Defined at:
  7138 ;;		line 24 in file "../src/interrupts.c"
  7139 ;; Parameters:    Size  Location     Type
  7140 ;;		None
  7141 ;; Auto vars:     Size  Location     Type
  7142 ;;		None
  7143 ;; Return value:  Size  Location     Type
  7144 ;;		None               void
  7145 ;; Registers used:
  7146 ;;		wreg, status,2
  7147 ;; Tracked objects:
  7148 ;;		On entry : 0/0
  7149 ;;		On exit  : 0/0
  7150 ;;		Unchanged: 0/0
  7151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7152 ;;      Params:         0       0       0       0       0
  7153 ;;      Locals:         0       0       0       0       0
  7154 ;;      Temps:          0       0       0       0       0
  7155 ;;      Totals:         0       0       0       0       0
  7156 ;;Total ram usage:        0 bytes
  7157 ;; Hardware stack levels used:    1
  7158 ;; This function calls:
  7159 ;;		Nothing
  7160 ;; This function is called by:
  7161 ;;		_i2c_int_handler
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165                           	psect	text42
  7166  001AC2                     __ptext42:
  7167                           	opt stack 0
  7168  001AC2                     _setStateReading:
  7169                           	opt stack 18
  7170                           
  7171                           ;interrupts.c: 26: responding = 0;
  7172                           
  7173                           ; BSR set to: 0
  7174                           ;incstack = 0
  7175  001AC2  0E00               	movlw	0
  7176  001AC4  6E4E               	movwf	_responding+1,c
  7177  001AC6  0E00               	movlw	0
  7178  001AC8  6E4D               	movwf	_responding,c
  7179  001ACA  0012               	return	
  7180  001ACC                     __end_of_setStateReading:
  7181                           	opt stack 0
  7182                           pclatu	equ	0xFFB
  7183                           pclath	equ	0xFFA
  7184                           tblptru	equ	0xFF8
  7185                           tblptrh	equ	0xFF7
  7186                           tblptrl	equ	0xFF6
  7187                           tablat	equ	0xFF5
  7188                           prodh	equ	0xFF4
  7189                           prodl	equ	0xFF3
  7190                           intcon	equ	0xFF2
  7191                           intcon2	equ	0xFF1
  7192                           postinc0	equ	0xFEE
  7193                           fsr0h	equ	0xFEA
  7194                           fsr0l	equ	0xFE9
  7195                           wreg	equ	0xFE8
  7196                           indf1	equ	0xFE7
  7197                           fsr1h	equ	0xFE2
  7198                           fsr1l	equ	0xFE1
  7199                           bsr	equ	0xFE0
  7200                           indf2	equ	0xFDF
  7201                           postinc2	equ	0xFDE
  7202                           postdec2	equ	0xFDD
  7203                           fsr2h	equ	0xFDA
  7204                           fsr2l	equ	0xFD9
  7205                           status	equ	0xFD8
  7206                           
  7207 ;; *************** function _handle_start *****************
  7208 ;; Defined at:
  7209 ;;		line 72 in file "../src/my_i2c.c"
  7210 ;; Parameters:    Size  Location     Type
  7211 ;;  data_read       1    wreg     unsigned char 
  7212 ;; Auto vars:     Size  Location     Type
  7213 ;;  data_read       1   44[COMRAM] unsigned char 
  7214 ;; Return value:  Size  Location     Type
  7215 ;;		None               void
  7216 ;; Registers used:
  7217 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7218 ;; Tracked objects:
  7219 ;;		On entry : 0/0
  7220 ;;		On exit  : 0/0
  7221 ;;		Unchanged: 0/0
  7222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7223 ;;      Params:         0       0       0       0       0
  7224 ;;      Locals:         1       0       0       0       0
  7225 ;;      Temps:          0       0       0       0       0
  7226 ;;      Totals:         1       0       0       0       0
  7227 ;;Total ram usage:        1 bytes
  7228 ;; Hardware stack levels used:    1
  7229 ;; This function calls:
  7230 ;;		Nothing
  7231 ;; This function is called by:
  7232 ;;		_i2c_int_handler
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235                           
  7236                           	psect	text43
  7237  000E92                     __ptext43:
  7238                           	opt stack 0
  7239  000E92                     _handle_start:
  7240                           	opt stack 18
  7241                           
  7242                           ;incstack = 0
  7243                           ;handle_start@data_read stored from wreg
  7244  000E92  CFE8 F02D          	movff	wreg,handle_start@data_read
  7245                           
  7246                           ;my_i2c.c: 73: ic_ptr->event_count = 1;
  7247  000E96  0100               	movlb	0	; () banked
  7248  000E98  EE20 F00B          	lfsr	2,11
  7249  000E9C  0100               	movlb	0	; () banked
  7250  000E9E  51E0               	movf	_ic_ptr& (0+255),w,b
  7251  000EA0  26D9               	addwf	fsr2l,f,c
  7252  000EA2  0100               	movlb	0	; () banked
  7253  000EA4  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7254  000EA6  22DA               	addwfc	fsr2h,f,c
  7255  000EA8  0E01               	movlw	1
  7256  000EAA  6EDF               	movwf	indf2,c
  7257                           
  7258                           ;my_i2c.c: 74: ic_ptr->buflen = 0;
  7259  000EAC  0100               	movlb	0	; () banked
  7260  000EAE  EE20 F00A          	lfsr	2,10
  7261  000EB2  0100               	movlb	0	; () banked
  7262  000EB4  51E0               	movf	_ic_ptr& (0+255),w,b
  7263  000EB6  26D9               	addwf	fsr2l,f,c
  7264  000EB8  0100               	movlb	0	; () banked
  7265  000EBA  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7266  000EBC  22DA               	addwfc	fsr2h,f,c
  7267  000EBE  0E00               	movlw	0
  7268  000EC0  6EDF               	movwf	indf2,c
  7269                           
  7270                           ; BSR set to: 0
  7271                           ;my_i2c.c: 76: if (data_read) {
  7272  000EC2  502D               	movf	handle_start@data_read,w,c
  7273  000EC4  B4D8               	btfsc	status,2,c
  7274  000EC6  D03D               	goto	i2l2236
  7275                           
  7276                           ; BSR set to: 0
  7277                           ;my_i2c.c: 77: if (SSPSTATbits.D_A == 1) {
  7278  000EC8  AAC7               	btfss	4039,5,c	;volatile
  7279  000ECA  D021               	goto	i2l111
  7280                           
  7281                           ; BSR set to: 0
  7282                           ;my_i2c.c: 80: ic_ptr->status = 0x5;
  7283  000ECC  0100               	movlb	0	; () banked
  7284  000ECE  EE20 F00C          	lfsr	2,12
  7285  000ED2  0100               	movlb	0	; () banked
  7286  000ED4  51E0               	movf	_ic_ptr& (0+255),w,b
  7287  000ED6  26D9               	addwf	fsr2l,f,c
  7288  000ED8  0100               	movlb	0	; () banked
  7289  000EDA  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7290  000EDC  22DA               	addwfc	fsr2h,f,c
  7291  000EDE  0E05               	movlw	5
  7292  000EE0  6EDF               	movwf	indf2,c
  7293                           
  7294                           ;my_i2c.c: 81: ic_ptr->error_count++;
  7295  000EE2  0100               	movlb	0	; () banked
  7296  000EE4  EE20 F00E          	lfsr	2,14
  7297  000EE8  0100               	movlb	0	; () banked
  7298  000EEA  51E0               	movf	_ic_ptr& (0+255),w,b
  7299  000EEC  26D9               	addwf	fsr2l,f,c
  7300  000EEE  0100               	movlb	0	; () banked
  7301  000EF0  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7302  000EF2  22DA               	addwfc	fsr2h,f,c
  7303  000EF4  2ADF               	incf	indf2,f,c
  7304                           
  7305                           ;my_i2c.c: 82: ic_ptr->error_code = 0x5;
  7306  000EF6  0100               	movlb	0	; () banked
  7307  000EF8  EE20 F00D          	lfsr	2,13
  7308  000EFC  0100               	movlb	0	; () banked
  7309  000EFE  51E0               	movf	_ic_ptr& (0+255),w,b
  7310  000F00  26D9               	addwf	fsr2l,f,c
  7311  000F02  0100               	movlb	0	; () banked
  7312  000F04  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7313  000F06  22DA               	addwfc	fsr2h,f,c
  7314  000F08  0E05               	movlw	5
  7315  000F0A  6EDF               	movwf	indf2,c
  7316                           
  7317                           ;my_i2c.c: 83: } else {
  7318  000F0C  0012               	return	
  7319  000F0E                     i2l111:
  7320                           
  7321                           ; BSR set to: 0
  7322                           ;my_i2c.c: 84: if (SSPSTATbits.R_W == 1) {
  7323  000F0E  A4C7               	btfss	4039,2,c	;volatile
  7324  000F10  D00C               	goto	i2l2234
  7325                           
  7326                           ; BSR set to: 0
  7327                           ;my_i2c.c: 85: ic_ptr->status = 0x8;
  7328  000F12  0100               	movlb	0	; () banked
  7329  000F14  EE20 F00C          	lfsr	2,12
  7330  000F18  0100               	movlb	0	; () banked
  7331  000F1A  51E0               	movf	_ic_ptr& (0+255),w,b
  7332  000F1C  26D9               	addwf	fsr2l,f,c
  7333  000F1E  0100               	movlb	0	; () banked
  7334  000F20  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7335  000F22  22DA               	addwfc	fsr2h,f,c
  7336  000F24  0E08               	movlw	8
  7337  000F26  6EDF               	movwf	indf2,c
  7338                           
  7339                           ;my_i2c.c: 86: } else {
  7340  000F28  0012               	return	
  7341  000F2A                     i2l2234:
  7342                           
  7343                           ; BSR set to: 0
  7344                           ;my_i2c.c: 87: ic_ptr->status = 0x7;
  7345  000F2A  0100               	movlb	0	; () banked
  7346  000F2C  EE20 F00C          	lfsr	2,12
  7347  000F30  0100               	movlb	0	; () banked
  7348  000F32  51E0               	movf	_ic_ptr& (0+255),w,b
  7349  000F34  26D9               	addwf	fsr2l,f,c
  7350  000F36  0100               	movlb	0	; () banked
  7351  000F38  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7352  000F3A  22DA               	addwfc	fsr2h,f,c
  7353  000F3C  0E07               	movlw	7
  7354  000F3E  6EDF               	movwf	indf2,c
  7355  000F40  0012               	return	
  7356  000F42                     i2l2236:
  7357                           
  7358                           ; BSR set to: 0
  7359                           ;my_i2c.c: 91: ic_ptr->status = 0x6;
  7360  000F42  0100               	movlb	0	; () banked
  7361  000F44  EE20 F00C          	lfsr	2,12
  7362  000F48  0100               	movlb	0	; () banked
  7363  000F4A  51E0               	movf	_ic_ptr& (0+255),w,b
  7364  000F4C  26D9               	addwf	fsr2l,f,c
  7365  000F4E  0100               	movlb	0	; () banked
  7366  000F50  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7367  000F52  22DA               	addwfc	fsr2h,f,c
  7368  000F54  0E06               	movlw	6
  7369  000F56  6EDF               	movwf	indf2,c
  7370  000F58  0012               	return	
  7371  000F5A                     __end_of_handle_start:
  7372                           	opt stack 0
  7373                           pclatu	equ	0xFFB
  7374                           pclath	equ	0xFFA
  7375                           tblptru	equ	0xFF8
  7376                           tblptrh	equ	0xFF7
  7377                           tblptrl	equ	0xFF6
  7378                           tablat	equ	0xFF5
  7379                           prodh	equ	0xFF4
  7380                           prodl	equ	0xFF3
  7381                           intcon	equ	0xFF2
  7382                           intcon2	equ	0xFF1
  7383                           postinc0	equ	0xFEE
  7384                           fsr0h	equ	0xFEA
  7385                           fsr0l	equ	0xFE9
  7386                           wreg	equ	0xFE8
  7387                           indf1	equ	0xFE7
  7388                           fsr1h	equ	0xFE2
  7389                           fsr1l	equ	0xFE1
  7390                           bsr	equ	0xFE0
  7391                           indf2	equ	0xFDF
  7392                           postinc2	equ	0xFDE
  7393                           postdec2	equ	0xFDD
  7394                           fsr2h	equ	0xFDA
  7395                           fsr2l	equ	0xFD9
  7396                           status	equ	0xFD8
  7397                           
  7398 ;; *************** function _ToMainHigh_sendmsg *****************
  7399 ;; Defined at:
  7400 ;;		line 126 in file "../src/messages.c"
  7401 ;; Parameters:    Size  Location     Type
  7402 ;;  length          1    wreg     unsigned char 
  7403 ;;  msgtype         1   66[COMRAM] unsigned char 
  7404 ;;  data            2   67[COMRAM] PTR void 
  7405 ;;		 -> main@ic(28), i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  7406 ;; Auto vars:     Size  Location     Type
  7407 ;;  length          1   69[COMRAM] unsigned char 
  7408 ;; Return value:  Size  Location     Type
  7409 ;;                  1    wreg      char 
  7410 ;; Registers used:
  7411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7412 ;; Tracked objects:
  7413 ;;		On entry : 0/0
  7414 ;;		On exit  : 0/0
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7417 ;;      Params:         3       0       0       0       0
  7418 ;;      Locals:         1       0       0       0       0
  7419 ;;      Temps:          0       0       0       0       0
  7420 ;;      Totals:         4       0       0       0       0
  7421 ;;Total ram usage:        4 bytes
  7422 ;; Hardware stack levels used:    1
  7423 ;; Hardware stack levels required when called:    2
  7424 ;; This function calls:
  7425 ;;		i2_send_msg
  7426 ;; This function is called by:
  7427 ;;		_i2c_int_handler
  7428 ;;		_timer0_int_handler
  7429 ;; This function uses a non-reentrant model
  7430 ;;
  7431                           
  7432                           	psect	text44
  7433  0019CE                     __ptext44:
  7434                           	opt stack 0
  7435  0019CE                     _ToMainHigh_sendmsg:
  7436                           	opt stack 16
  7437                           
  7438                           ; BSR set to: 0
  7439                           ;incstack = 0
  7440                           ;ToMainHigh_sendmsg@length stored from wreg
  7441  0019CE  CFE8 F046          	movff	wreg,ToMainHigh_sendmsg@length
  7442                           
  7443                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7444                           ;	Return value of _ToMainHigh_sendmsg is never used
  7445  0019D2  0101               	movlb	1	; () banked
  7446  0019D4  0E01               	movlw	high _ToMainHigh_MQ
  7447  0019D6  6E38               	movwf	i2send_msg@qptr+1,c
  7448  0019D8  0101               	movlb	1	; () banked
  7449  0019DA  0E6C               	movlw	low _ToMainHigh_MQ
  7450  0019DC  6E37               	movwf	i2send_msg@qptr,c
  7451  0019DE  C046  F039         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  7452  0019E2  C043  F03A         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7453  0019E6  C045  F03C         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7454  0019EA  C044  F03B         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  7455  0019EE  EC02  F008         	call	i2_send_msg	;wreg free
  7456  0019F2  0012               	return	
  7457  0019F4                     __end_of_ToMainHigh_sendmsg:
  7458                           	opt stack 0
  7459                           pclatu	equ	0xFFB
  7460                           pclath	equ	0xFFA
  7461                           tblptru	equ	0xFF8
  7462                           tblptrh	equ	0xFF7
  7463                           tblptrl	equ	0xFF6
  7464                           tablat	equ	0xFF5
  7465                           prodh	equ	0xFF4
  7466                           prodl	equ	0xFF3
  7467                           intcon	equ	0xFF2
  7468                           intcon2	equ	0xFF1
  7469                           postinc0	equ	0xFEE
  7470                           fsr0h	equ	0xFEA
  7471                           fsr0l	equ	0xFE9
  7472                           wreg	equ	0xFE8
  7473                           indf1	equ	0xFE7
  7474                           fsr1h	equ	0xFE2
  7475                           fsr1l	equ	0xFE1
  7476                           bsr	equ	0xFE0
  7477                           indf2	equ	0xFDF
  7478                           postinc2	equ	0xFDE
  7479                           postdec2	equ	0xFDD
  7480                           fsr2h	equ	0xFDA
  7481                           fsr2l	equ	0xFD9
  7482                           status	equ	0xFD8
  7483                           
  7484 ;; *************** function i2_send_msg *****************
  7485 ;; Defined at:
  7486 ;;		line 24 in file "../src/messages.c"
  7487 ;; Parameters:    Size  Location     Type
  7488 ;;  qptr            2   54[COMRAM] PTR struct __msg_queue
  7489 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7490 ;;  length          1   56[COMRAM] unsigned char 
  7491 ;;  msgtype         1   57[COMRAM] unsigned char 
  7492 ;;  data            2   58[COMRAM] PTR void 
  7493 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  7494 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  7495 ;; Auto vars:     Size  Location     Type
  7496 ;;  send_msg        2   64[COMRAM] PTR struct __msg
  7497 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7498 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7499 ;;  send_msg        2   61[COMRAM] unsigned int 
  7500 ;;  send_msg        1   63[COMRAM] unsigned char 
  7501 ;; Return value:  Size  Location     Type
  7502 ;;                  1    wreg      char 
  7503 ;; Registers used:
  7504 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7505 ;; Tracked objects:
  7506 ;;		On entry : 0/0
  7507 ;;		On exit  : 0/0
  7508 ;;		Unchanged: 0/0
  7509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7510 ;;      Params:         6       0       0       0       0
  7511 ;;      Locals:         5       0       0       0       0
  7512 ;;      Temps:          1       0       0       0       0
  7513 ;;      Totals:        12       0       0       0       0
  7514 ;;Total ram usage:       12 bytes
  7515 ;; Hardware stack levels used:    1
  7516 ;; Hardware stack levels required when called:    1
  7517 ;; This function calls:
  7518 ;;		i2_memcpy
  7519 ;; This function is called by:
  7520 ;;		_ToMainHigh_sendmsg
  7521 ;; This function uses a non-reentrant model
  7522 ;;
  7523                           
  7524                           	psect	text45
  7525  001004                     __ptext45:
  7526                           	opt stack 0
  7527  001004                     i2_send_msg:
  7528                           	opt stack 16
  7529                           
  7530                           ;messages.c: 25: unsigned char slot;
  7531                           ;messages.c: 27: msg *qmsg;
  7532                           ;messages.c: 28: size_t tlength = length;
  7533                           
  7534                           ;incstack = 0
  7535  001004  C039  F03E         	movff	i2send_msg@length,i2send_msg@tlength
  7536  001008  6A3F               	clrf	i2send_msg@tlength+1,c
  7537                           
  7538                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7539  00100A  EE20 F034          	lfsr	2,52
  7540  00100E  5037               	movf	i2send_msg@qptr,w,c
  7541  001010  26D9               	addwf	fsr2l,f,c
  7542  001012  5038               	movf	i2send_msg@qptr+1,w,c
  7543  001014  22DA               	addwfc	fsr2h,f,c
  7544  001016  50DF               	movf	indf2,w,c
  7545  001018  6E40               	movwf	i2send_msg@slot,c
  7546                           
  7547                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7548  00101A  5040               	movf	i2send_msg@slot,w,c
  7549  00101C  0D0D               	mullw	13
  7550  00101E  50F3               	movf	prodl,w,c
  7551  001020  2437               	addwf	i2send_msg@qptr,w,c
  7552  001022  6E41               	movwf	i2send_msg@qmsg,c
  7553  001024  50F4               	movf	prodh,w,c
  7554  001026  2038               	addwfc	i2send_msg@qptr+1,w,c
  7555  001028  6E42               	movwf	i2send_msg@qmsg+1,c
  7556                           
  7557                           ;messages.c: 41: if (qmsg->full != 0) {
  7558  00102A  C041  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7559  00102E  C042  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7560  001032  50DF               	movf	indf2,w,c
  7561  001034  B4D8               	btfsc	status,2,c
  7562  001036  D002               	goto	i2l2880
  7563                           
  7564                           ;messages.c: 42: return (-1);
  7565  001038  0EFF               	movlw	255
  7566  00103A  0012               	return	
  7567  00103C                     i2l2880:
  7568                           
  7569                           ;messages.c: 43: }
  7570                           ;messages.c: 46: qmsg->length = length;
  7571  00103C  EE20 F001          	lfsr	2,1
  7572  001040  5041               	movf	i2send_msg@qmsg,w,c
  7573  001042  26D9               	addwf	fsr2l,f,c
  7574  001044  5042               	movf	i2send_msg@qmsg+1,w,c
  7575  001046  22DA               	addwfc	fsr2h,f,c
  7576  001048  C039  FFDF         	movff	i2send_msg@length,indf2
  7577                           
  7578                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7579  00104C  EE20 F002          	lfsr	2,2
  7580  001050  5041               	movf	i2send_msg@qmsg,w,c
  7581  001052  26D9               	addwf	fsr2l,f,c
  7582  001054  5042               	movf	i2send_msg@qmsg+1,w,c
  7583  001056  22DA               	addwfc	fsr2h,f,c
  7584  001058  C03A  FFDF         	movff	i2send_msg@msgtype,indf2
  7585                           
  7586                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7587  00105C  0E03               	movlw	3
  7588  00105E  2441               	addwf	i2send_msg@qmsg,w,c
  7589  001060  6E2D               	movwf	i2memcpy@d1,c
  7590  001062  0E00               	movlw	0
  7591  001064  2042               	addwfc	i2send_msg@qmsg+1,w,c
  7592  001066  6E2E               	movwf	i2memcpy@d1+1,c
  7593  001068  C03C  F030         	movff	i2send_msg@data+1,i2memcpy@s1+1
  7594  00106C  C03B  F02F         	movff	i2send_msg@data,i2memcpy@s1
  7595  001070  C03E  F031         	movff	i2send_msg@tlength,i2memcpy@n
  7596  001074  C03F  F032         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  7597  001078  EC02  F00C         	call	i2_memcpy	;wreg free
  7598                           
  7599                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7600  00107C  EE20 F034          	lfsr	2,52
  7601  001080  5037               	movf	i2send_msg@qptr,w,c
  7602  001082  26D9               	addwf	fsr2l,f,c
  7603  001084  5038               	movf	i2send_msg@qptr+1,w,c
  7604  001086  22DA               	addwfc	fsr2h,f,c
  7605  001088  EE10 F034          	lfsr	1,52
  7606  00108C  5037               	movf	i2send_msg@qptr,w,c
  7607  00108E  26E1               	addwf	fsr1l,f,c
  7608  001090  5038               	movf	i2send_msg@qptr+1,w,c
  7609  001092  22E2               	addwfc	fsr1h,f,c
  7610  001094  50E7               	movf	indf1,w,c
  7611  001096  6E3D               	movwf	??i2_send_msg& (0+255),c
  7612  001098  283D               	incf	??i2_send_msg,w,c
  7613  00109A  0B03               	andlw	3
  7614  00109C  6EDF               	movwf	indf2,c
  7615                           
  7616                           ;messages.c: 59: qmsg->full = 1;
  7617  00109E  C041  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7618  0010A2  C042  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7619  0010A6  0E01               	movlw	1
  7620  0010A8  6EDF               	movwf	indf2,c
  7621                           
  7622                           ;messages.c: 60: return (1);
  7623  0010AA  0E01               	movlw	1
  7624  0010AC  0012               	return	
  7625  0010AE                     __end_ofi2_send_msg:
  7626                           	opt stack 0
  7627                           pclatu	equ	0xFFB
  7628                           pclath	equ	0xFFA
  7629                           tblptru	equ	0xFF8
  7630                           tblptrh	equ	0xFF7
  7631                           tblptrl	equ	0xFF6
  7632                           tablat	equ	0xFF5
  7633                           prodh	equ	0xFF4
  7634                           prodl	equ	0xFF3
  7635                           intcon	equ	0xFF2
  7636                           intcon2	equ	0xFF1
  7637                           postinc0	equ	0xFEE
  7638                           fsr0h	equ	0xFEA
  7639                           fsr0l	equ	0xFE9
  7640                           wreg	equ	0xFE8
  7641                           indf1	equ	0xFE7
  7642                           fsr1h	equ	0xFE2
  7643                           fsr1l	equ	0xFE1
  7644                           bsr	equ	0xFE0
  7645                           indf2	equ	0xFDF
  7646                           postinc2	equ	0xFDE
  7647                           postdec2	equ	0xFDD
  7648                           fsr2h	equ	0xFDA
  7649                           fsr2l	equ	0xFD9
  7650                           status	equ	0xFD8
  7651                           
  7652 ;; *************** function i2_memcpy *****************
  7653 ;; Defined at:
  7654 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  7655 ;; Parameters:    Size  Location     Type
  7656 ;;  d1              2   44[COMRAM] PTR void 
  7657 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7658 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7659 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  7660 ;;  s1              2   46[COMRAM] PTR const void 
  7661 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7662 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7663 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  7664 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7665 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  7666 ;;  n               2   48[COMRAM] unsigned int 
  7667 ;; Auto vars:     Size  Location     Type
  7668 ;;  memcpy          2   52[COMRAM] PTR const unsigned char 
  7669 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7670 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7671 ;;		 -> main@t0thread_data(2), main@t1thread_data(2), main@ic(28), main@uc(5), 
  7672 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7673 ;;		 -> i2c_int_handler@error_buf(3), NULL(0), timer0_int_handler@val(2), 
  7674 ;;  memcpy          2   50[COMRAM] PTR unsigned char 
  7675 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7676 ;;		 -> main@msgbuffer(11), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7677 ;;		 -> ToMainLow_MQ(54), timer0_int_handler@val(2), 
  7678 ;; Return value:  Size  Location     Type
  7679 ;;                  2   44[COMRAM] PTR void 
  7680 ;; Registers used:
  7681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7682 ;; Tracked objects:
  7683 ;;		On entry : 0/0
  7684 ;;		On exit  : 0/0
  7685 ;;		Unchanged: 0/0
  7686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7687 ;;      Params:         6       0       0       0       0
  7688 ;;      Locals:         4       0       0       0       0
  7689 ;;      Temps:          0       0       0       0       0
  7690 ;;      Totals:        10       0       0       0       0
  7691 ;;Total ram usage:       10 bytes
  7692 ;; Hardware stack levels used:    1
  7693 ;; This function calls:
  7694 ;;		Nothing
  7695 ;; This function is called by:
  7696 ;;		i2_send_msg
  7697 ;; This function uses a non-reentrant model
  7698 ;;
  7699                           
  7700                           	psect	text46
  7701  001804                     __ptext46:
  7702                           	opt stack 0
  7703  001804                     i2_memcpy:
  7704                           	opt stack 16
  7705                           
  7706                           ;incstack = 0
  7707  001804  C030  F036         	movff	i2memcpy@s1+1,i2memcpy@s+1
  7708  001808  C02F  F035         	movff	i2memcpy@s1,i2memcpy@s
  7709  00180C  C02E  F034         	movff	i2memcpy@d1+1,i2memcpy@d+1
  7710  001810  C02D  F033         	movff	i2memcpy@d1,i2memcpy@d
  7711  001814  D00E               	goto	i2l2940
  7712  001816                     i2l2934:
  7713  001816  C035  FFD9         	movff	i2memcpy@s,fsr2l
  7714  00181A  C036  FFDA         	movff	i2memcpy@s+1,fsr2h
  7715  00181E  C033  FFE1         	movff	i2memcpy@d,fsr1l
  7716  001822  C034  FFE2         	movff	i2memcpy@d+1,fsr1h
  7717  001826  CFDF FFE7          	movff	indf2,indf1
  7718  00182A  4A35               	infsnz	i2memcpy@s,f,c
  7719  00182C  2A36               	incf	i2memcpy@s+1,f,c
  7720  00182E  4A33               	infsnz	i2memcpy@d,f,c
  7721  001830  2A34               	incf	i2memcpy@d+1,f,c
  7722  001832                     i2l2940:
  7723  001832  0631               	decf	i2memcpy@n,f,c
  7724  001834  A0D8               	btfss	status,0,c
  7725  001836  0632               	decf	i2memcpy@n+1,f,c
  7726  001838  2831               	incf	i2memcpy@n& (0+255),w,c
  7727  00183A  B4D8               	btfsc	status,2,c
  7728  00183C  2832               	incf	(i2memcpy@n+1)& (0+255),w,c
  7729  00183E  B4D8               	btfsc	status,2,c
  7730                           
  7731                           ;	Return value of i2_memcpy is never used
  7732  001840  0012               	return	
  7733  001842  D7E9               	goto	i2l2934
  7734  001844                     __end_ofi2_memcpy:
  7735                           	opt stack 0
  7736                           pclatu	equ	0xFFB
  7737                           pclath	equ	0xFFA
  7738                           tblptru	equ	0xFF8
  7739                           tblptrh	equ	0xFF7
  7740                           tblptrl	equ	0xFF6
  7741                           tablat	equ	0xFF5
  7742                           prodh	equ	0xFF4
  7743                           prodl	equ	0xFF3
  7744                           intcon	equ	0xFF2
  7745                           intcon2	equ	0xFF1
  7746                           postinc0	equ	0xFEE
  7747                           fsr0h	equ	0xFEA
  7748                           fsr0l	equ	0xFE9
  7749                           wreg	equ	0xFE8
  7750                           indf1	equ	0xFE7
  7751                           fsr1h	equ	0xFE2
  7752                           fsr1l	equ	0xFE1
  7753                           bsr	equ	0xFE0
  7754                           indf2	equ	0xFDF
  7755                           postinc2	equ	0xFDE
  7756                           postdec2	equ	0xFDD
  7757                           fsr2h	equ	0xFDA
  7758                           fsr2l	equ	0xFD9
  7759                           status	equ	0xFD8
  7760                           
  7761 ;; *************** function _SleepIfOkay *****************
  7762 ;; Defined at:
  7763 ;;		line 228 in file "../src/messages.c"
  7764 ;; Parameters:    Size  Location     Type
  7765 ;;		None
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;		None
  7768 ;; Return value:  Size  Location     Type
  7769 ;;		None               void
  7770 ;; Registers used:
  7771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7777 ;;      Params:         0       0       0       0       0
  7778 ;;      Locals:         0       0       0       0       0
  7779 ;;      Temps:          0       0       0       0       0
  7780 ;;      Totals:         0       0       0       0       0
  7781 ;;Total ram usage:        0 bytes
  7782 ;; Hardware stack levels used:    1
  7783 ;; Hardware stack levels required when called:    2
  7784 ;; This function calls:
  7785 ;;		_enter_sleep_mode
  7786 ;;		i2_check_msg
  7787 ;;		i2_in_high_int
  7788 ;;		i2_in_low_int
  7789 ;; This function is called by:
  7790 ;;		_InterruptHandlerHigh
  7791 ;; This function uses a non-reentrant model
  7792 ;;
  7793                           
  7794                           	psect	text47
  7795  001624                     __ptext47:
  7796                           	opt stack 0
  7797  001624                     _SleepIfOkay:
  7798                           	opt stack 17
  7799                           
  7800                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  7801                           
  7802                           ;incstack = 0
  7803  001624  6650               	tstfsz	_MQ_Main_Willing_to_block,c
  7804  001626  D001               	goto	i2l2540
  7805  001628  0012               	return	
  7806  00162A                     i2l2540:
  7807                           
  7808                           ;messages.c: 232: }
  7809                           ;messages.c: 235: if (in_low_int()) {
  7810  00162A  EC94  F00C         	call	i2_in_low_int	;wreg free
  7811  00162E  5030               	movf	?i2_in_low_int+1,w,c
  7812  001630  102F               	iorwf	?i2_in_low_int,w,c
  7813  001632  A4D8               	btfss	status,2,c
  7814  001634  0012               	return	
  7815                           
  7816                           ;messages.c: 237: }
  7817                           ;messages.c: 240: if (!in_high_int()) {
  7818                           
  7819                           ;messages.c: 236: return;
  7820  001636  EC56  F00D         	call	i2_in_high_int	;wreg free
  7821  00163A  502E               	movf	?i2_in_high_int+1,w,c
  7822  00163C  102D               	iorwf	?i2_in_high_int,w,c
  7823  00163E  B4D8               	btfsc	status,2,c
  7824  001640  0012               	return	
  7825                           
  7826                           ;messages.c: 242: }
  7827                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  7828                           
  7829                           ;messages.c: 241: return;
  7830  001642  0101               	movlb	1	; () banked
  7831  001644  0E01               	movlw	high _ToMainHigh_MQ
  7832  001646  6E2E               	movwf	i2check_msg@qptr+1,c
  7833  001648  0101               	movlb	1	; () banked
  7834  00164A  0E6C               	movlw	low _ToMainHigh_MQ
  7835  00164C  6E2D               	movwf	i2check_msg@qptr,c
  7836  00164E  ECFA  F00C         	call	i2_check_msg	;wreg free
  7837  001652  0900               	iorlw	0
  7838  001654  A4D8               	btfss	status,2,c
  7839  001656  0012               	return	
  7840                           
  7841                           ;messages.c: 249: }
  7842                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  7843                           
  7844                           ;messages.c: 248: return;
  7845  001658  0100               	movlb	0	; () banked
  7846  00165A  0E00               	movlw	high _ToMainLow_MQ
  7847  00165C  6E2E               	movwf	i2check_msg@qptr+1,c
  7848  00165E  0100               	movlb	0	; () banked
  7849  001660  0E80               	movlw	low _ToMainLow_MQ
  7850  001662  6E2D               	movwf	i2check_msg@qptr,c
  7851  001664  ECFA  F00C         	call	i2_check_msg	;wreg free
  7852  001668  0900               	iorlw	0
  7853  00166A  B4D8               	btfsc	status,2,c
  7854                           
  7855                           ;messages.c: 252: }
  7856                           ;messages.c: 253: enter_sleep_mode();
  7857                           
  7858                           ;messages.c: 251: return;
  7859  00166C  EC6B  F00D         	call	_enter_sleep_mode	;wreg free
  7860  001670  0012               	return	
  7861  001672                     __end_of_SleepIfOkay:
  7862                           	opt stack 0
  7863                           pclatu	equ	0xFFB
  7864                           pclath	equ	0xFFA
  7865                           tblptru	equ	0xFF8
  7866                           tblptrh	equ	0xFF7
  7867                           tblptrl	equ	0xFF6
  7868                           tablat	equ	0xFF5
  7869                           prodh	equ	0xFF4
  7870                           prodl	equ	0xFF3
  7871                           intcon	equ	0xFF2
  7872                           intcon2	equ	0xFF1
  7873                           postinc0	equ	0xFEE
  7874                           fsr0h	equ	0xFEA
  7875                           fsr0l	equ	0xFE9
  7876                           wreg	equ	0xFE8
  7877                           indf1	equ	0xFE7
  7878                           fsr1h	equ	0xFE2
  7879                           fsr1l	equ	0xFE1
  7880                           bsr	equ	0xFE0
  7881                           indf2	equ	0xFDF
  7882                           postinc2	equ	0xFDE
  7883                           postdec2	equ	0xFDD
  7884                           fsr2h	equ	0xFDA
  7885                           fsr2l	equ	0xFD9
  7886                           status	equ	0xFD8
  7887                           
  7888 ;; *************** function i2_in_low_int *****************
  7889 ;; Defined at:
  7890 ;;		line 53 in file "../src/interrupts.c"
  7891 ;; Parameters:    Size  Location     Type
  7892 ;;		None
  7893 ;; Auto vars:     Size  Location     Type
  7894 ;;		None
  7895 ;; Return value:  Size  Location     Type
  7896 ;;                  2   46[COMRAM] int 
  7897 ;; Registers used:
  7898 ;;		wreg, status,2, status,0, cstack
  7899 ;; Tracked objects:
  7900 ;;		On entry : 0/0
  7901 ;;		On exit  : 0/0
  7902 ;;		Unchanged: 0/0
  7903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7904 ;;      Params:         2       0       0       0       0
  7905 ;;      Locals:         0       0       0       0       0
  7906 ;;      Temps:          0       0       0       0       0
  7907 ;;      Totals:         2       0       0       0       0
  7908 ;;Total ram usage:        2 bytes
  7909 ;; Hardware stack levels used:    1
  7910 ;; Hardware stack levels required when called:    1
  7911 ;; This function calls:
  7912 ;;		i2_in_high_int
  7913 ;; This function is called by:
  7914 ;;		_SleepIfOkay
  7915 ;; This function uses a non-reentrant model
  7916 ;;
  7917                           
  7918                           	psect	text48
  7919  001928                     __ptext48:
  7920                           	opt stack 0
  7921  001928                     i2_in_low_int:
  7922                           	opt stack 17
  7923                           
  7924                           ;interrupts.c: 54: if (INTCONbits.GIEL == 1) {
  7925                           
  7926                           ;incstack = 0
  7927  001928  ACF2               	btfss	intcon,6,c	;volatile
  7928  00192A  D005               	goto	i2l2908
  7929                           
  7930                           ;interrupts.c: 55: return (0);
  7931  00192C  0E00               	movlw	0
  7932  00192E  6E30               	movwf	?i2_in_low_int+1,c
  7933  001930  0E00               	movlw	0
  7934  001932  6E2F               	movwf	?i2_in_low_int,c
  7935  001934  0012               	return	
  7936  001936                     i2l2908:
  7937  001936  EC56  F00D         	call	i2_in_high_int	;wreg free
  7938  00193A  502E               	movf	?i2_in_high_int+1,w,c
  7939  00193C  102D               	iorwf	?i2_in_high_int,w,c
  7940  00193E  B4D8               	btfsc	status,2,c
  7941  001940  D005               	goto	i2l2916
  7942                           
  7943                           ;interrupts.c: 57: return (0);
  7944  001942  0E00               	movlw	0
  7945  001944  6E30               	movwf	?i2_in_low_int+1,c
  7946  001946  0E00               	movlw	0
  7947  001948  6E2F               	movwf	?i2_in_low_int,c
  7948  00194A  0012               	return	
  7949  00194C                     i2l2916:
  7950                           
  7951                           ;interrupts.c: 59: return (1);
  7952  00194C  0E00               	movlw	0
  7953  00194E  6E30               	movwf	?i2_in_low_int+1,c
  7954  001950  0E01               	movlw	1
  7955  001952  6E2F               	movwf	?i2_in_low_int,c
  7956  001954  0012               	return	
  7957  001956                     __end_ofi2_in_low_int:
  7958                           	opt stack 0
  7959                           pclatu	equ	0xFFB
  7960                           pclath	equ	0xFFA
  7961                           tblptru	equ	0xFF8
  7962                           tblptrh	equ	0xFF7
  7963                           tblptrl	equ	0xFF6
  7964                           tablat	equ	0xFF5
  7965                           prodh	equ	0xFF4
  7966                           prodl	equ	0xFF3
  7967                           intcon	equ	0xFF2
  7968                           intcon2	equ	0xFF1
  7969                           postinc0	equ	0xFEE
  7970                           fsr0h	equ	0xFEA
  7971                           fsr0l	equ	0xFE9
  7972                           wreg	equ	0xFE8
  7973                           indf1	equ	0xFE7
  7974                           fsr1h	equ	0xFE2
  7975                           fsr1l	equ	0xFE1
  7976                           bsr	equ	0xFE0
  7977                           indf2	equ	0xFDF
  7978                           postinc2	equ	0xFDE
  7979                           postdec2	equ	0xFDD
  7980                           fsr2h	equ	0xFDA
  7981                           fsr2l	equ	0xFD9
  7982                           status	equ	0xFD8
  7983                           
  7984 ;; *************** function i2_in_high_int *****************
  7985 ;; Defined at:
  7986 ;;		line 45 in file "../src/interrupts.c"
  7987 ;; Parameters:    Size  Location     Type
  7988 ;;		None
  7989 ;; Auto vars:     Size  Location     Type
  7990 ;;		None
  7991 ;; Return value:  Size  Location     Type
  7992 ;;                  2   44[COMRAM] int 
  7993 ;; Registers used:
  7994 ;;		wreg, status,2
  7995 ;; Tracked objects:
  7996 ;;		On entry : 0/0
  7997 ;;		On exit  : 0/0
  7998 ;;		Unchanged: 0/0
  7999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8000 ;;      Params:         2       0       0       0       0
  8001 ;;      Locals:         0       0       0       0       0
  8002 ;;      Temps:          0       0       0       0       0
  8003 ;;      Totals:         2       0       0       0       0
  8004 ;;Total ram usage:        2 bytes
  8005 ;; Hardware stack levels used:    1
  8006 ;; This function calls:
  8007 ;;		Nothing
  8008 ;; This function is called by:
  8009 ;;		_SleepIfOkay
  8010 ;;		i2_in_low_int
  8011 ;; This function uses a non-reentrant model
  8012 ;;
  8013                           
  8014                           	psect	text49
  8015  001AAC                     __ptext49:
  8016                           	opt stack 0
  8017  001AAC                     i2_in_high_int:
  8018                           	opt stack 17
  8019                           
  8020                           ;interrupts.c: 46: return (!INTCONbits.GIEH);
  8021                           
  8022                           ;incstack = 0
  8023  001AAC  0E00               	movlw	0
  8024  001AAE  AEF2               	btfss	intcon,7,c	;volatile
  8025  001AB0  0E01               	movlw	1
  8026  001AB2  6E2D               	movwf	?i2_in_high_int,c
  8027  001AB4  6A2E               	clrf	?i2_in_high_int+1,c
  8028  001AB6  0012               	return	
  8029  001AB8                     __end_ofi2_in_high_int:
  8030                           	opt stack 0
  8031                           pclatu	equ	0xFFB
  8032                           pclath	equ	0xFFA
  8033                           tblptru	equ	0xFF8
  8034                           tblptrh	equ	0xFF7
  8035                           tblptrl	equ	0xFF6
  8036                           tablat	equ	0xFF5
  8037                           prodh	equ	0xFF4
  8038                           prodl	equ	0xFF3
  8039                           intcon	equ	0xFF2
  8040                           intcon2	equ	0xFF1
  8041                           postinc0	equ	0xFEE
  8042                           fsr0h	equ	0xFEA
  8043                           fsr0l	equ	0xFE9
  8044                           wreg	equ	0xFE8
  8045                           indf1	equ	0xFE7
  8046                           fsr1h	equ	0xFE2
  8047                           fsr1l	equ	0xFE1
  8048                           bsr	equ	0xFE0
  8049                           indf2	equ	0xFDF
  8050                           postinc2	equ	0xFDE
  8051                           postdec2	equ	0xFDD
  8052                           fsr2h	equ	0xFDA
  8053                           fsr2l	equ	0xFD9
  8054                           status	equ	0xFD8
  8055                           
  8056 ;; *************** function i2_check_msg *****************
  8057 ;; Defined at:
  8058 ;;		line 222 in file "../src/messages.c"
  8059 ;; Parameters:    Size  Location     Type
  8060 ;;  qptr            2   44[COMRAM] PTR struct __msg_queue
  8061 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8062 ;; Auto vars:     Size  Location     Type
  8063 ;;		None
  8064 ;; Return value:  Size  Location     Type
  8065 ;;                  1    wreg      unsigned char 
  8066 ;; Registers used:
  8067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8068 ;; Tracked objects:
  8069 ;;		On entry : 0/0
  8070 ;;		On exit  : 0/0
  8071 ;;		Unchanged: 0/0
  8072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8073 ;;      Params:         2       0       0       0       0
  8074 ;;      Locals:         0       0       0       0       0
  8075 ;;      Temps:          1       0       0       0       0
  8076 ;;      Totals:         3       0       0       0       0
  8077 ;;Total ram usage:        3 bytes
  8078 ;; Hardware stack levels used:    1
  8079 ;; This function calls:
  8080 ;;		Nothing
  8081 ;; This function is called by:
  8082 ;;		_SleepIfOkay
  8083 ;; This function uses a non-reentrant model
  8084 ;;
  8085                           
  8086                           	psect	text50
  8087  0019F4                     __ptext50:
  8088                           	opt stack 0
  8089  0019F4                     i2_check_msg:
  8090                           	opt stack 18
  8091                           
  8092                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8093                           
  8094                           ;incstack = 0
  8095  0019F4  EE20 F035          	lfsr	2,53
  8096  0019F8  502D               	movf	i2check_msg@qptr,w,c
  8097  0019FA  26D9               	addwf	fsr2l,f,c
  8098  0019FC  502E               	movf	i2check_msg@qptr+1,w,c
  8099  0019FE  22DA               	addwfc	fsr2h,f,c
  8100  001A00  50DF               	movf	indf2,w,c
  8101  001A02  6E2F               	movwf	??i2_check_msg& (0+255),c
  8102  001A04  502F               	movf	??i2_check_msg,w,c
  8103  001A06  0D0D               	mullw	13
  8104  001A08  50F3               	movf	prodl,w,c
  8105  001A0A  242D               	addwf	i2check_msg@qptr,w,c
  8106  001A0C  6ED9               	movwf	fsr2l,c
  8107  001A0E  50F4               	movf	prodh,w,c
  8108  001A10  202E               	addwfc	i2check_msg@qptr+1,w,c
  8109  001A12  6EDA               	movwf	fsr2h,c
  8110  001A14  50DF               	movf	indf2,w,c
  8111  001A16  0012               	return	
  8112  001A18                     __end_ofi2_check_msg:
  8113                           	opt stack 0
  8114                           pclatu	equ	0xFFB
  8115                           pclath	equ	0xFFA
  8116                           tblptru	equ	0xFF8
  8117                           tblptrh	equ	0xFF7
  8118                           tblptrl	equ	0xFF6
  8119                           tablat	equ	0xFF5
  8120                           prodh	equ	0xFF4
  8121                           prodl	equ	0xFF3
  8122                           intcon	equ	0xFF2
  8123                           intcon2	equ	0xFF1
  8124                           postinc0	equ	0xFEE
  8125                           fsr0h	equ	0xFEA
  8126                           fsr0l	equ	0xFE9
  8127                           wreg	equ	0xFE8
  8128                           indf1	equ	0xFE7
  8129                           fsr1h	equ	0xFE2
  8130                           fsr1l	equ	0xFE1
  8131                           bsr	equ	0xFE0
  8132                           indf2	equ	0xFDF
  8133                           postinc2	equ	0xFDE
  8134                           postdec2	equ	0xFDD
  8135                           fsr2h	equ	0xFDA
  8136                           fsr2l	equ	0xFD9
  8137                           status	equ	0xFD8
  8138                           
  8139 ;; *************** function _enter_sleep_mode *****************
  8140 ;; Defined at:
  8141 ;;		line 202 in file "../src/messages.c"
  8142 ;; Parameters:    Size  Location     Type
  8143 ;;		None
  8144 ;; Auto vars:     Size  Location     Type
  8145 ;;		None
  8146 ;; Return value:  Size  Location     Type
  8147 ;;		None               void
  8148 ;; Registers used:
  8149 ;;		None
  8150 ;; Tracked objects:
  8151 ;;		On entry : 0/0
  8152 ;;		On exit  : 0/0
  8153 ;;		Unchanged: 0/0
  8154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8155 ;;      Params:         0       0       0       0       0
  8156 ;;      Locals:         0       0       0       0       0
  8157 ;;      Temps:          0       0       0       0       0
  8158 ;;      Totals:         0       0       0       0       0
  8159 ;;Total ram usage:        0 bytes
  8160 ;; Hardware stack levels used:    1
  8161 ;; This function calls:
  8162 ;;		Nothing
  8163 ;; This function is called by:
  8164 ;;		_SleepIfOkay
  8165 ;; This function uses a non-reentrant model
  8166 ;;
  8167                           
  8168                           	psect	text51
  8169  001AD6                     __ptext51:
  8170                           	opt stack 0
  8171  001AD6                     _enter_sleep_mode:
  8172                           	opt stack 18
  8173                           
  8174                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8175                           
  8176                           ;incstack = 0
  8177  001AD6  8ED3               	bsf	4051,7,c	;volatile
  8178  001AD8  0003               	sleep		;# 
  8179  001ADA  0012               	return	
  8180  001ADC                     __end_of_enter_sleep_mode:
  8181                           	opt stack 0
  8182                           pclatu	equ	0xFFB
  8183                           pclath	equ	0xFFA
  8184                           tblptru	equ	0xFF8
  8185                           tblptrh	equ	0xFF7
  8186                           tblptrl	equ	0xFF6
  8187                           tablat	equ	0xFF5
  8188                           prodh	equ	0xFF4
  8189                           prodl	equ	0xFF3
  8190                           intcon	equ	0xFF2
  8191                           intcon2	equ	0xFF1
  8192                           postinc0	equ	0xFEE
  8193                           fsr0h	equ	0xFEA
  8194                           fsr0l	equ	0xFE9
  8195                           wreg	equ	0xFE8
  8196                           indf1	equ	0xFE7
  8197                           fsr1h	equ	0xFE2
  8198                           fsr1l	equ	0xFE1
  8199                           bsr	equ	0xFE0
  8200                           indf2	equ	0xFDF
  8201                           postinc2	equ	0xFDE
  8202                           postdec2	equ	0xFDD
  8203                           fsr2h	equ	0xFDA
  8204                           fsr2l	equ	0xFD9
  8205                           status	equ	0xFD8
  8206                           
  8207 ;; *************** function _ReadADC *****************
  8208 ;; Defined at:
  8209 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcread.c"
  8210 ;; Parameters:    Size  Location     Type
  8211 ;;		None
  8212 ;; Auto vars:     Size  Location     Type
  8213 ;;		None
  8214 ;; Return value:  Size  Location     Type
  8215 ;;                  2   44[COMRAM] int 
  8216 ;; Registers used:
  8217 ;;		wreg, status,2
  8218 ;; Tracked objects:
  8219 ;;		On entry : 0/0
  8220 ;;		On exit  : 0/0
  8221 ;;		Unchanged: 0/0
  8222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8223 ;;      Params:         2       0       0       0       0
  8224 ;;      Locals:         0       0       0       0       0
  8225 ;;      Temps:          0       0       0       0       0
  8226 ;;      Totals:         2       0       0       0       0
  8227 ;;Total ram usage:        2 bytes
  8228 ;; Hardware stack levels used:    1
  8229 ;; This function calls:
  8230 ;;		Nothing
  8231 ;; This function is called by:
  8232 ;;		_InterruptHandlerHigh
  8233 ;; This function uses a non-reentrant model
  8234 ;;
  8235                           
  8236                           	psect	text52
  8237  001ACC                     __ptext52:
  8238                           	opt stack 0
  8239  001ACC                     _ReadADC:
  8240                           	opt stack 19
  8241                           
  8242                           ;incstack = 0
  8243  001ACC  50C4               	movf	4036,w,c	;volatile
  8244  001ACE  6E2E               	movwf	?_ReadADC+1,c
  8245  001AD0  50C3               	movf	4035,w,c	;volatile
  8246  001AD2  6E2D               	movwf	?_ReadADC,c
  8247  001AD4  0012               	return	
  8248  001AD6                     __end_of_ReadADC:
  8249                           	opt stack 0
  8250  0000                     pclatu	equ	0xFFB
  8251                           pclath	equ	0xFFA
  8252                           tblptru	equ	0xFF8
  8253                           tblptrh	equ	0xFF7
  8254                           tblptrl	equ	0xFF6
  8255                           tablat	equ	0xFF5
  8256                           prodh	equ	0xFF4
  8257                           prodl	equ	0xFF3
  8258                           intcon	equ	0xFF2
  8259                           intcon2	equ	0xFF1
  8260                           postinc0	equ	0xFEE
  8261                           fsr0h	equ	0xFEA
  8262                           fsr0l	equ	0xFE9
  8263                           wreg	equ	0xFE8
  8264                           indf1	equ	0xFE7
  8265                           fsr1h	equ	0xFE2
  8266                           fsr1l	equ	0xFE1
  8267                           bsr	equ	0xFE0
  8268                           indf2	equ	0xFDF
  8269                           postinc2	equ	0xFDE
  8270                           postdec2	equ	0xFDD
  8271                           fsr2h	equ	0xFDA
  8272                           fsr2l	equ	0xFD9
  8273                           status	equ	0xFD8
  8274                           pclatu	equ	0xFFB
  8275                           pclath	equ	0xFFA
  8276                           tblptru	equ	0xFF8
  8277                           tblptrh	equ	0xFF7
  8278                           tblptrl	equ	0xFF6
  8279                           tablat	equ	0xFF5
  8280                           prodh	equ	0xFF4
  8281                           prodl	equ	0xFF3
  8282                           intcon	equ	0xFF2
  8283                           intcon2	equ	0xFF1
  8284                           postinc0	equ	0xFEE
  8285                           fsr0h	equ	0xFEA
  8286                           fsr0l	equ	0xFE9
  8287                           wreg	equ	0xFE8
  8288                           indf1	equ	0xFE7
  8289                           fsr1h	equ	0xFE2
  8290                           fsr1l	equ	0xFE1
  8291                           bsr	equ	0xFE0
  8292                           indf2	equ	0xFDF
  8293                           postinc2	equ	0xFDE
  8294                           postdec2	equ	0xFDD
  8295                           fsr2h	equ	0xFDA
  8296                           fsr2l	equ	0xFD9
  8297                           status	equ	0xFD8
  8298                           
  8299                           	psect	rparam
  8300  0000                     pclatu	equ	0xFFB
  8301                           pclath	equ	0xFFA
  8302                           tblptru	equ	0xFF8
  8303                           tblptrh	equ	0xFF7
  8304                           tblptrl	equ	0xFF6
  8305                           tablat	equ	0xFF5
  8306                           prodh	equ	0xFF4
  8307                           prodl	equ	0xFF3
  8308                           intcon	equ	0xFF2
  8309                           intcon2	equ	0xFF1
  8310                           postinc0	equ	0xFEE
  8311                           fsr0h	equ	0xFEA
  8312                           fsr0l	equ	0xFE9
  8313                           wreg	equ	0xFE8
  8314                           indf1	equ	0xFE7
  8315                           fsr1h	equ	0xFE2
  8316                           fsr1l	equ	0xFE1
  8317                           bsr	equ	0xFE0
  8318                           indf2	equ	0xFDF
  8319                           postinc2	equ	0xFDE
  8320                           postdec2	equ	0xFDD
  8321                           fsr2h	equ	0xFDA
  8322                           fsr2l	equ	0xFD9
  8323                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         423
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     74      83
    BANK0           128     42      98
    BANK1           256     78     240
    BANK2           256      0     200
    BANK3           256      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> main@msgbuffer(BANK1[11]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), timer0_int_handler@val(COMRAM[2]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> main@msgbuffer(BANK1[11]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), timer0_int_handler@val(COMRAM[2]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> main@t0thread_data(BANK1[2]), main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[5]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), NULL(NULL[0]), timer0_int_handler@val(COMRAM[2]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> main@t0thread_data(BANK1[2]), main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[5]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), NULL(NULL[0]), timer0_int_handler@val(COMRAM[2]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> main@ic(BANK1[28]), i2c_int_handler@error_buf(BANK0[3]), NULL(NULL[0]), timer0_int_handler@val(COMRAM[2]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> main@uc(BANK1[5]), NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> main@msgtype(BANK1[1]), timer0_int_handler@msgtype(COMRAM[2]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), timer0_int_handler@val(COMRAM[2]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> main@msgbuffer(BANK1[11]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), timer0_int_handler@val(COMRAM[2]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> main@t0thread_data(BANK1[2]), main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[5]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), NULL(NULL[0]), timer0_int_handler@val(COMRAM[2]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), i2c_int_handler@msgbuffer(BANK0[3]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), NULL(NULL[0]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), NULL(NULL[0]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    init_timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_i2c_int_handler
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _timer1_lthread->_FromMainHigh_sendmsg
    _timer0_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _initADC->_OpenADC
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer0_lthread
    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _timer0_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0   15471
                                             24 BANK1     54    54      0
                         _OpenTimer0
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                            _initADC
                           _init_i2c
                        _init_queues
                _init_timer0_lthread
                _init_timer1_lthread
                     _init_uart_recv
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     344
                                             30 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    3270
                                             14 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8    3270
                                             14 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     372
                                             30 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2463
                                             41 BANK0      1     1      0
                                             11 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2062
                                             40 BANK0      1     1      0
                                              0 BANK1     11     5      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     168
                                             30 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      86
                                             30 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      86
                                             30 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer0_lthread                                  2     0      2      86
                                             30 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     390
                                             34 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     390
                                             30 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                             30 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initADC                                              4     4      0     283
                                             35 BANK0      4     4      0
                         _ConvertADC
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             30 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             30 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     270
                                             36 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             34 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             32 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             30 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                             30 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             30 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2620
                                             12 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2620
                                             12 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2373
                                             40 BANK0      2     2      0
                                              0 BANK1     12     5      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     636
                                             30 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     284
                                             30 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             30 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    2416
                                             27 COMRAM    17    17      0
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    2416
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2393
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    1943
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               18    18      0    3417
                                             72 COMRAM     2     2      0
                                             14 BANK0     16    16      0
                            _ReadADC
                        _SleepIfOkay
                    _i2c_int_handler
                 _setStateResponding
                       i2_ConvertADC
 ---------------------------------------------------------------------------------
 (11) i2_ConvertADC                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _setStateResponding                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    16    16      0    3158
                                             70 COMRAM     2     2      0
                                              0 BANK0     14    14      0
                 _ToMainHigh_sendmsg
                       _handle_start
                    _setStateReading
            i2_start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (12) i2_start_i2c_slave_reply                             5     3      2     264
                                             44 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (12) _setStateReading                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      22
                                             44 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    2393
                                             66 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    1943
                                             54 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     662
                                             44 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             46 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             44 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             44 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ReadADC                                             2     0      2       0
                                             44 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _initADC
     _ConvertADC
     _OpenADC
   _init_i2c
   _init_queues
     _init_queue
   _init_timer0_lthread
   _init_timer1_lthread
   _init_uart_recv
   _start_i2c_slave_reply
   _timer0_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _ReadADC
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
     _setStateReading
     i2_start_i2c_slave_reply
   _setStateResponding
   i2_ConvertADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      C8       8       78.1%
BITBANK1           100      0       0      10        0.0%
BANK1              100     4E      F0       6       93.8%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2A      62       5       76.6%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     4A      53       1       65.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     26D       9        0.0%
DATA                 0      0     26D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sun Feb 09 19:31:18 2014

                main@uthread_data 01C6          _MQ_Main_Willing_to_block 0050  
                     _SSPSTATbits 000FC7         __end_of_ToMainLow_recvmsg 1782  
                              bsr 000FE0         __end_of_ToMainLow_sendmsg 19CE  
                    __CFG_CP0$OFF 000000                               l325 0804  
                             l510 1246                               l511 1254  
                             l512 1256                               l505 1224  
                             l435 138C                               l509 1244  
                             l456 197A                               l457 197C  
                             l738 1A58                    _FromMainLow_MQ 0136  
                             wreg 000FE8                      __CFG_IESO$ON 000000  
                    ?_in_high_int 00D4                  ??_init_uart_recv 00D6  
                            l1050 1302                              l2214 0AC0  
                            l3200 12A0                              l2218 0B44  
                            l3202 12B2                              l3060 15E8  
                            l3204 12BA                              l3046 0C0E  
                            l3080 09DA                              l2432 13D8  
                            l3208 12EE                              l3066 160C  
                            l3170 080A                              l2604 112A  
                            l3164 07B2                              l3180 0854  
                            l3156 0770                              l3190 0902  
                            l3174 081C                              l3182 0872  
                            l3096 0AA0                              l3176 0834  
                            l2618 1730                              l3194 0954  
                            l3188 08B0                              l2574 16A8  
                            l2566 1686                              l2760 1210  
                            l2596 10FC                              l2588 10CE  
                            l2768 1226                              _LATB 000F8A  
                            u2097 1A5A                              u1590 1138  
                            u1596 113A                   _FromMainHigh_MQ 0100  
                   __CFG_FCMEN$ON 000000            ?_block_on_To_msgqueues 0001  
                            _main 06C6                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              indf1 000FE7  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                       main@msgtype 01D2  
                      i1_send_msg 0F5A                              pclat 000FFA  
                     i2_check_msg 19F4                              prodh 000FF4  
                            prodl 000FF3             handle_start@data_read 002D  
                            start 00B0                     __CFG_FOSC2$ON 000000  
                      i2_send_msg 1004         ToMainHigh_recvmsg@msgtype 01AE  
                 __end_of_ReadADC 1AD6                    send_msg@length 01A4  
   i2start_i2c_slave_reply@length 0031                   __end_of_OpenADC 1390  
                     _Delay1KTCYx 1A54                             ?_main 0001  
                           _T0CON 000FD5                             i1l413 006A  
                           i2l111 0F0E                             i2l121 04D4  
                 __end_of___lwmod 130C                        i1memcpy@d1 0001  
                           i2l123 0160                             i1l523 1A44  
                           i2l141 0326                             i2l127 019E  
                           i2l155 04E6                             i2l149 0452  
                      i1memcpy@s1 0003                             _RCREG 000FAE  
                           _RCSTA 000FAB                             _TMR0H 000FD7  
                           _TMR1H 000FCF                             _TMR0L 000FD6  
                           _TMR1L 000FCE                             _SPBRG 000FAF  
                           _TRISB 000F93                             _TXSTA 000FAC  
                      i2memcpy@d1 002D                _setStateResponding 1AB8  
                      i2memcpy@s1 002F                      ?_init_queues 0001  
       __size_of_enter_sleep_mode 0006                   __end_of_initADC 16FC  
                 __end_of_in_main 1740        ToMainLow_recvmsg@maxlength 01B2  
         timer0_lthread@msgbuffer 01B6                        _ConvertADC 1ADC  
         i2c_configure_slave@addr 00D4                             tablat 000FF5  
             ?_setStateResponding 0001                             status 000FD8  
                __end_ofi1_memcpy 1804                  __end_ofi2_memcpy 1844  
                 __initialization 1882                      __end_of_main 096E  
      __size_of_ToMainLow_recvmsg 0042        __size_of_ToMainLow_sendmsg 0026  
            ??_setStateResponding 002D             __size_ofi2_in_low_int 002E  
   __size_of_FromMainHigh_sendmsg 0036                            ??_main 01BA  
                 send_msg@msgtype 01A5                     __activetblptr 000002  
                 send_msg@tlength 01A8              __end_of_handle_start 0F5A  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                            _ADRESH 000FC4  
                          _ADRESL 000FC3           ??_uart_recv_int_handler 001B  
                          i1l2930 17F2                            i1l2924 17D6  
                          i2l2320 0396                            i2l2304 031C  
                          i2l2234 0F2A                            i2l2322 03D8  
                          i1l2954 0F92                            i2l2236 0F42  
                          i2l2252 0142                            i2l2326 03E6  
                          i1l2982 11D0                            i2l2360 054A  
                      _OpenTimer0 1956                            i2l2354 04EA  
                          i2l2258 0156                            i2l2540 162A  
                          i2l2276 01D2                            i2l2348 04A8  
                          i2l2294 0252                            i2l2278 01FE  
                  __CFG_WDTEN$OFF 000000                            i2l2376 0666  
                          i2l2368 05D0                            i2l2296 0292  
                          i2l2288 023A                            i2l2810 0DE8  
                          i2l2830 0E3C                            i2l2816 0DF2  
                          i2l2834 0E54                            i2l2916 194C  
                          i2l2908 1936                            i2l2940 1832  
                          i2l2934 1816                            i2l2862 0D46  
                          i2l2880 103C                            i2l2858 0CD2  
     __end_of_i2c_configure_slave 19A8                     ??_SleepIfOkay 0031  
              __size_of_ReadUSART 001E                            _OSCCON 000FD3  
                          _SPBRGH 000FB0                            _SSPADD 000FC8  
                          _TRISB7 007C9F                            _SSPBUF 000FC9  
  __size_of_start_i2c_slave_reply 010E                       ?i1_send_msg 000B  
                       ??_ReadADC 002F     __end_of_start_i2c_slave_reply 0BB2  
              timer0_lthread@tptr 01B0                         ??_OpenADC 00D6  
                    i2_in_low_int 1928                       ?i2_send_msg 0037  
                  __CFG_XINST$OFF 000000                __size_of_OpenUSART 0092  
                 _i2c_int_handler 00B4                  OpenTimer0@config 00D4  
                          _ic_ptr 00E0                         ??___lwmod 00D8  
                   main@msgbuffer 01BB                  __end_of_init_i2c 15C6  
                          _memcpy 15C6                            clear_0 1888  
                          clear_1 1894                            clear_2 18A0  
                          clear_3 18AC                            _uc_ptr 0052  
                          main@ic 01D4                            main@uc 01C9  
                __end_of_recv_msg 0AA4       start_i2c_slave_reply@length 00D8  
                       ??_initADC 00D9                         ??_in_main 00DA  
                __end_of_send_msg 0CB6                   initADC@ADCValue 00DB  
         i2c_int_handler@i2c_data 00C0                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                     init_queue@i 00D7          __size_of_setStateReading 000A  
        ?i2_start_i2c_slave_reply 002D          ToMainLow_recvmsg@msgtype 01AE  
            __size_of_in_high_int 0012                       ?_ConvertADC 0001  
                 __CFG_FOSC$HSPLL 000000                        __accesstop 0080  
         __end_of__initialization 18B2        __end_of_ToMainHigh_recvmsg 17C4  
      __end_of_ToMainHigh_sendmsg 19F4       __end_of_init_timer0_lthread 1A8E  
     __end_of_init_timer1_lthread 1A7C               __end_of_SleepIfOkay 1672  
                  __pcstackCOMRAM 0001            __size_ofi2_in_high_int 000C  
              __size_of_check_msg 0036                 __end_of_ReadUSART 1A54  
             __size_ofi1_send_msg 00AA                         ?i1_memcpy 0001  
   __size_of_InterruptHandlerHigh 0E8A       __end_of_InterruptHandlerLow 00B0  
                       ?i2_memcpy 002D                     _ToMainHigh_MQ 016C  
                _enter_sleep_mode 1AD6               __size_ofi2_send_msg 00AA  
            timer1_lthread@length 01B4                     ReadUSART@data 0001  
               __end_of_OpenUSART 1282                     check_msg@qptr 00D4  
            timer1_lthread@retval 01B9           ??_block_on_To_msgqueues 00DA  
            __size_of_init_queues 006E                        __pbssBANK0 0080  
                      __pbssBANK1 0100                        __pbssBANK2 0200  
                     ?_OpenTimer0 0001                        __pnvCOMRAM 0052  
         __end_of_i2c_int_handler 06C6                      ?i2_check_msg 002D  
              timer1_lthread@tptr 01B0                 recv_msg@maxlength 01A4  
                 recv_msg@msgtype 01A5                   recv_msg@tlength 01AA  
           __size_of_handle_start 00C8                      ?_Delay1KTCYx 0001  
                         ?_memcpy 00D4               __size_of_ConvertADC 0004  
         __size_of_timer0_lthread 0072           __size_of_timer1_lthread 0072  
 __end_ofi2_start_i2c_slave_reply 0DAA                        ??i1_memcpy 0007  
                      ??i2_memcpy 0033        i2start_i2c_slave_reply@msg 002D  
                i1send_msg@length 000D                     i2_in_high_int 1AAC  
                         _SSPCON1 000FC6                           _SSPCON2 000FC5  
                         _SSPSTAT 000FC7                 __end_of_check_msg 1928  
                       ?_init_i2c 00D4                       _SleepIfOkay 1624  
               ??_setStateReading 002D                           _ReadADC 1ACC  
                       ?_recv_msg 01A2                           _OpenADC 130C  
                      _in_low_int 1672                      _handle_start 0E92  
                         __Hparam 0000                         ?_send_msg 01A2  
                         __Lparam 0000                  init_uart_recv@uc 00D4  
                         ___lwmod 1282                   __CFG_STVREN$OFF 000000  
                         __pcinit 1882                   __size_of_memcpy 005E  
                      _init_queue 1390                           __ramtop 0400  
             __size_of_OpenTimer0 002A                           __ptext0 06C6  
                         __ptext1 1844                           __ptext2 140A  
                         __ptext3 147C                           __ptext4 1282  
                         __ptext5 18BC                           __ptext6 0BB2  
                         __ptext7 0AA4                           __ptext8 1A18  
                         __ptext9 1A6A                         _T0CONbits 000FD5  
                         _initADC 16B8                           _in_main 16FC  
                  ?i2_in_high_int 002D                    OpenADC@config2 00D4  
                  __pintcode_body 0DAA              end_of_initialization 18B2  
         timer1_lthread@msgbuffer 01B6      __end_of_FromMainHigh_sendmsg 18F2  
                   ?i2_ConvertADC 0001    __size_of_uart_recv_int_handler 009C  
      FromMainHigh_sendmsg@length 00DF                           memcpy@d 00DA  
                         memcpy@n 00D8                           memcpy@s 00DC  
   __end_of_uart_recv_int_handler 11F0                        ??_init_i2c 00D6  
     i2c_int_handler@data_written 00BE                     __Lmediumconst 0000  
                         int_func 0DAA                      ??i1_send_msg 0011  
                   ?_uart_lthread 00D4           __size_of_init_uart_recv 001E  
                ?_i2c_int_handler 0001                        ??_recv_msg 00DE  
                    ??i2_send_msg 003D                        ??_send_msg 00DE  
                       _RCSTAbits 000FAB                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
       ToMainHigh_sendmsg@msgtype 0043                        _responding 004D  
     __size_of_setStateResponding 000A                __end_ofi1_send_msg 1004  
     FromMainHigh_sendmsg@msgtype 01AD                         _TRISCbits 000F94  
              __end_ofi2_send_msg 10AE                    ??i2_ConvertADC 002D  
                    ??_ConvertADC 00D4                    ??_uart_lthread 00DC  
                       _TXSTAbits 000FAC                        main@length 01D3  
                     ?_in_low_int 00D6             timer0_lthread@msgtype 01B2  
__size_ofi2_start_i2c_slave_reply 00F4                  _arrayPlaceHolder 004B  
           _start_i2c_slave_reply 0AA4      __size_of_i2c_configure_slave 0028  
            __size_ofi2_check_msg 0024          __end_of_enter_sleep_mode 1ADC  
              _ToMainHigh_recvmsg 1782                         i1memcpy@d 0007  
              _ToMainHigh_sendmsg 19CE                         i1memcpy@n 0005  
                       i1memcpy@s 0009                    _timer0_lthread 147C  
                     ?_init_queue 00D4                         i2memcpy@d 0033  
                       i2memcpy@n 0031                         i2memcpy@s 0035  
              __end_of_ConvertADC 1AE0                    _timer1_lthread 140A  
                  __end_of_memcpy 1624                 _enable_interrupts 1AA0  
            __size_of_Delay1KTCYx 0016               ?_ToMainHigh_recvmsg 01AE  
                 ??i2_in_high_int 002F          i2c_int_handler@data_read 00C3  
             ?_ToMainHigh_sendmsg 0043                ?_enable_interrupts 0001  
             start_initialization 1882                     ??_in_high_int 00D6  
                       _ReadUSART 1A36                 __size_ofi1_memcpy 0040  
               __size_ofi2_memcpy 0040             i2c_int_handler@length 00B6  
             ??_enable_interrupts 00D4                      ??_OpenTimer0 00D4  
  __size_of_block_on_To_msgqueues 00A6     __end_of_block_on_To_msgqueues 1154  
                       _OpenUSART 11F0      __end_of_InterruptHandlerHigh 0E92  
                      init_i2c@ic 00D4              ??_ToMainHigh_recvmsg 00E0  
            ??_ToMainHigh_sendmsg 0046            __end_of_timer0_lthread 14EE  
        i2c_int_handler@error_buf 00BB            __end_of_timer1_lthread 147C  
       __end_of_enable_interrupts 1AAC                          ??_memcpy 00DA  
           timer1_lthread@msgtype 01B2      __size_of_init_timer0_lthread 0012  
            _FromMainHigh_sendmsg 18BC      __size_of_init_timer1_lthread 0012  
              __end_of_OpenTimer0 1980          i2c_int_handler@msg_ready 00C2  
        i2c_int_handler@msgbuffer 00B8                       __pbssCOMRAM 004B  
                      ?_ReadUSART 0001                   _setStateReading 1AC2  
                   ??_init_queues 00D8                     __pcstackBANK0 00B6  
                   __pcstackBANK1 01A2               __size_of_in_low_int 0046  
        start_i2c_slave_reply@msg 00D4               __CFG_CCP2MX$DEFAULT 000000  
                 Delay1KTCYx@unit 00D4          ToMainLow_sendmsg@msgtype 0017  
    __size_of_InterruptHandlerLow 0098               __end_of_in_high_int 1AA0  
                      ?_OpenUSART 00D4                      ?_SleepIfOkay 0001  
           ToMainLow_recvmsg@data 01B0                      _ToMainLow_MQ 0080  
             __size_of_init_queue 007A                    _init_uart_recv 1A18  
                        ?_ReadADC 002D                         _check_msg 18F2  
                       __pnvBANK0 00E0            ?_start_i2c_slave_reply 00D4  
               __size_of_init_i2c 006A                 OpenADC@portconfig 00D5  
                        ?_OpenADC 00D4                      recv_msg@data 01A7  
                    recv_msg@qmsg 01AC                      recv_msg@slot 01A9  
                    recv_msg@qptr 01A2                 __size_of_recv_msg 0136  
                       __pintcode 0008                 __size_of_send_msg 0104  
                 ?_timer0_lthread 01B0                          ?___lwmod 00D4  
            __end_ofi2_ConvertADC 1AE4                   ?_timer1_lthread 01B0  
           ?_FromMainHigh_sendmsg 01AD                       __pintcodelo 0018  
          ToMainHigh_recvmsg@data 01B0              __end_of_uart_lthread 1882  
                        ?_initADC 0001        i2c_int_handler@msg_to_send 00C1  
                        ?_in_main 00D8                          _ADCArray 0200  
             uart_lthread@msgtype 00D6                          _ADCValue 004F  
         init_timer0_lthread@tptr 00D4             ToMainLow_sendmsg@data 0018  
                uart_lthread@uptr 00D4            __end_of_init_uart_recv 1A36  
             __end_of_init_queues 155C                     OpenADC@config 00D8  
                        _LATBbits 000F8A                   i2check_msg@qptr 002D  
                      ?_check_msg 00D4                          _IPR1bits 000F9F  
                        _PIE1bits 000F9D           i2_start_i2c_slave_reply 0CB6  
                   ?i2_in_low_int 002F                          _PIR1bits 000F9E  
          ToMainHigh_sendmsg@data 0044                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000        __size_of_enable_interrupts 000C  
               i1send_msg@msgtype 000E           __end_of_setStateReading 1ACC  
               i1send_msg@tlength 0012                        _ADCON0bits 000FC2  
            timer0_lthread@length 01B4                          i1_memcpy 17C4  
            _InterruptHandlerHigh 0008                       ??_ReadUSART 0001  
                        i2_memcpy 1804              timer0_lthread@retval 01B9  
                     _in_high_int 1A8E                      send_msg@data 01A6  
             _i2c_configure_slave 1980                      send_msg@qmsg 01AB  
                    send_msg@slot 01AA                      send_msg@qptr 01A2  
                     _INTCON2bits 000FF1             uart_lthread@msgbuffer 00DA  
                 ?_init_uart_recv 00D4                       ??_OpenUSART 00D6  
                 OpenUSART@config 00D9                    ??i2_in_low_int 0031  
           _uart_recv_int_handler 1154                      ??_in_low_int 00D8  
                __size_of_ReadADC 000A                          __Hrparam 0000  
                __size_of_OpenADC 0084              ?_i2c_configure_slave 0001  
                        __Lrparam 0000                 ?_enter_sleep_mode 0001  
      __end_of_setStateResponding 1AC2            ??_FromMainHigh_sendmsg 00DF  
        __size_of_i2c_int_handler 0612                ??_enter_sleep_mode 002D  
                __size_of___lwmod 008A                      ??_init_queue 00D6  
        FromMainHigh_sendmsg@data 01AE           ToMainLow_sendmsg@length 001A  
               main@t0thread_data 01D0             ?_InterruptHandlerHigh 0001  
                __size_of_initADC 0044                  __size_of_in_main 0044  
               i2send_msg@msgtype 003A       ToMainHigh_recvmsg@maxlength 01B2  
               i2send_msg@tlength 003E           init_timer1_lthread@tptr 00D4  
                     _init_queues 14EE                __end_of_in_low_int 16B8  
                        __ptext10 1A7C                          __ptext11 14EE  
                        __ptext20 16FC                          __ptext12 1390  
                        __ptext21 1672                          __ptext13 155C  
                        __ptext30 1956                          __ptext22 1A8E  
                        __ptext14 16B8                          __ptext23 18F2  
                        __ptext15 130C                          __ptext40 00B4  
                        __ptext32 1154                          __ptext24 1A54  
                        __ptext16 1ADC                          __ptext41 0CB6  
                        __ptext33 19A8                          __ptext25 1740  
                        __ptext17 1980                          __ptext50 19F4  
                        __ptext42 1AC2                          __ptext34 0F5A  
                        __ptext26 1782                          __ptext18 1AA0  
                        __ptext51 1AD6                          __ptext43 0E92  
                        __ptext35 17C4                          __ptext27 096E  
                        __ptext19 10AE                          __ptext52 1ACC  
                        __ptext44 19CE                          __ptext36 1A36  
                        __ptext28 15C6                          __ptext45 1004  
                        __ptext29 11F0                          __ptext46 1804  
                        __ptext38 1AE0                          __ptext47 1624  
                        __ptext39 1AB8                          __ptext48 1928  
                        __ptext49 1AAC                    i1send_msg@data 000F  
                  i1send_msg@qmsg 0015                    i1send_msg@slot 0014  
                  i1send_msg@qptr 000B                uart_lthread@length 00D8  
             _init_timer0_lthread 1A7C         ??i2_start_i2c_slave_reply 002F  
                        _init_i2c 155C               _init_timer1_lthread 1A6A  
                   __size_of_main 02A8                     ??i2_check_msg 002F  
               main@t1thread_data 01CE                       ??_check_msg 00D6  
              __end_of_init_queue 140A              __size_of_SleepIfOkay 004E  
                        _recv_msg 096E             ??_i2c_configure_slave 00D4  
           __size_ofi2_ConvertADC 0004                          _send_msg 0BB2  
                  init_queue@qptr 00D4             __size_of_uart_lthread 003E  
                   ??_Delay1KTCYx 00D4              ?_init_timer0_lthread 00D4  
             _InterruptHandlerLow 0018                  ?_setStateReading 0001  
            ?_init_timer1_lthread 00D4                       _OSCTUNEbits 000F9B  
                      _INTCONbits 000FF2                    OpenUSART@spbrg 00D4  
                        memcpy@d1 00D4                          memcpy@s1 00D6  
           __end_ofi2_in_high_int 1AB8      i2c_int_handler@overrun_error 00BF  
                i2send_msg@length 0039                          intlevel1 0000  
                        intlevel2 0000                      i2_ConvertADC 1AE0  
            ?_InterruptHandlerLow 0001           ??_start_i2c_slave_reply 00D6  
                ___lwmod@dividend 00D4            ?_uart_recv_int_handler 0001  
                    _uart_lthread 1844             _block_on_To_msgqueues 10AE  
                   ?_handle_start 0001                  ??_timer0_lthread 01B8  
     __size_of_ToMainHigh_recvmsg 0042       __size_of_ToMainHigh_sendmsg 0026  
                      _OSCCONbits 000FD3                  ??_timer1_lthread 01B8  
        ToMainHigh_sendmsg@length 0046               __end_ofi2_check_msg 1A18  
           ??_init_timer0_lthread 00D6             ??_init_timer1_lthread 00D6  
          ??_InterruptHandlerHigh 00C4                 _ToMainLow_recvmsg 1740  
               _ToMainLow_sendmsg 19A8                main@last_reg_recvd 01C8  
                 ___lwmod@divisor 00D6              __end_ofi2_in_low_int 1956  
              ?_ToMainLow_recvmsg 01AE               __end_of_Delay1KTCYx 1A6A  
               ??_i2c_int_handler 0047                   ___lwmod@counter 00D9  
              ?_ToMainLow_sendmsg 0017                       _SSPCON1bits 000FC6  
                     _SSPCON2bits 000FC5                    i2send_msg@data 003B  
           ??_InterruptHandlerLow 001C               ??_ToMainLow_recvmsg 00E0  
                  i2send_msg@qmsg 0041                    i2send_msg@slot 0040  
                  i2send_msg@qptr 0037               ??_ToMainLow_sendmsg 001A  
                  ??_handle_start 002D  InterruptHandlerHigh@pureADCValue 0049  
                    _USART_Status 0051  


# 1 "../src/i2c_queue.c"

# 15 "../src/i2c_queue.h"
typedef struct i2c_queue {
unsigned char size;
int front;
int end;
unsigned char* elements;
} i2c_queue;

unsigned char createQueue(i2c_queue* queue, unsigned char size);
unsigned char putQueue(i2c_queue* queue, unsigned char element);
unsigned char getQueue(i2c_queue* queue, unsigned char* element);
unsigned char isEmpty(i2c_queue* queue);

# 3 "../src/i2c_queue.c"
unsigned char createQueue(i2c_queue* queue, unsigned char size) {
queue->size = size;
queue->front = 0;
queue->end = -1;
queue->elements[queue->size];
}

unsigned char putQueue(i2c_queue* queue, unsigned char element) {


if ( queue->end == queue->size - 1) {
return 0;
} else {

if (queue->end == -1) {
queue->elements[0] = element;
queue->end++;
} else {
queue->end++;
queue->elements[queue->end] = element;

}
return 1;
}
}

unsigned char getQueue(i2c_queue* queue, unsigned char* element) {

if ( queue->end == -1 ) {
return 0;
} else {

*element = queue->elements[0];

int i;
for (i = 0; i < queue->end; i++)
queue->elements[i] = queue->elements[i+1];
queue->end--;

return 1;
}
}

unsigned char isEmpty(i2c_queue* queue) {
return (queue->end == -1);
}
